write_commit_patch	functions,0:DO,0:WHILE,0:FOR,0:CALL,6:IF,0:SWITCH,0:ELSE,0	66
0x399f	              0x55	                                push rbp	      1369	am.c	FUNCTION_40
0x39a0	          0x4889e5	                            mov rbp, rsp	      1369	am.c	FUNCTION_40
0x39a3	    0x4881ece00800	                          sub rsp, 0x8e0	      1369	am.c	FUNCTION_40
0x39aa	    0x4889bd28f7ff	            mov qword [rbp - 0x8d8], rdi	      1369	am.c	FUNCTION_40
0x39b1	    0x4889b520f7ff	            mov qword [rbp - 0x8e0], rsi	      1369	am.c	FUNCTION_40
0x39b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1369	am.c	FUNCTION_40
0x39c1	        0x488945f8	                mov qword [rbp - 8], rax	      1369	am.c	FUNCTION_40
0x39c5	            0x31c0	                            xor eax, eax	      1369	am.c	FUNCTION_40
0x39c7	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      1373	am.c	FUNCTION_40	CALL_2
0x39ce	      0xbe00000000	                              mov esi, 0	      1373	am.c	FUNCTION_40	CALL_2
0x39d3	          0x4889c7	                            mov rdi, rax	      1373	am.c	FUNCTION_40	CALL_2
0x39d6	      0xe85cccffff	                        call sym.am_path	      1373	am.c	FUNCTION_40	CALL_2
0x39db	      0xbe00000000	                              mov esi, 0	      1373	am.c	FUNCTION_40	CALL_2
0x39e0	          0x4889c7	                            mov rdi, rax	      1373	am.c	FUNCTION_40	CALL_2
0x39e3	      0xe800000000	                          call 0x4003a28	      1373	am.c	FUNCTION_40	CALL_2
0x39e8	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	      1373	am.c	FUNCTION_40	CALL_2
0x39ef	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1374	am.c	FUNCTION_40	CALL_3
0x39f6	      0xbe00000000	                              mov esi, 0	      1374	am.c	FUNCTION_40	CALL_3
0x39fb	          0x4889c7	                            mov rdi, rax	      1374	am.c	FUNCTION_40	CALL_3
0x39fe	      0xe800000000	                          call 0x4003a43	      1374	am.c	FUNCTION_40	CALL_3
0x3a03	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1375	am.c	FUNCTION_40
0x3a0a	          0x83c801	                               or eax, 1	      1375	am.c	FUNCTION_40
0x3a0d	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1375	am.c	FUNCTION_40
0x3a13	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 0	      1376	am.c	FUNCTION_40
0x3a1d	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	      1377	am.c	FUNCTION_40
0x3a24	          0x83c880	                      or eax, 0xffffff80	      1377	am.c	FUNCTION_40
0x3a27	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	      1377	am.c	FUNCTION_40
0x3a2d	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1378	am.c	FUNCTION_40
0x3a34	          0x83c804	                               or eax, 4	      1378	am.c	FUNCTION_40
0x3a37	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1378	am.c	FUNCTION_40
0x3a3d	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x10 	      1379	am.c	FUNCTION_40
0x3a47	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1380	am.c	FUNCTION_40
0x3a4e	          0x83c808	                               or eax, 8	      1380	am.c	FUNCTION_40
0x3a51	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1380	am.c	FUNCTION_40
0x3a57	     0xfb68570fcff	           movzx eax, byte [rbp - 0x390]	      1381	am.c	FUNCTION_40
0x3a5e	          0x83c804	                               or eax, 4	      1381	am.c	FUNCTION_40
0x3a61	    0x888570fcffff	              mov byte [rbp - 0x390], al	      1381	am.c	FUNCTION_40
0x3a67	     0xfb68570fcff	           movzx eax, byte [rbp - 0x390]	      1382	am.c	FUNCTION_40
0x3a6e	          0x83c810	                            or eax, 0x10	      1382	am.c	FUNCTION_40
0x3a71	    0x888570fcffff	              mov byte [rbp - 0x390], al	      1382	am.c	FUNCTION_40
0x3a77	    0xc78578fcffff	              mov dword [rbp - 0x388], 0	      1383	am.c	FUNCTION_40
0x3a81	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	      1384	am.c	FUNCTION_40
0x3a88	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	      1384	am.c	FUNCTION_40
0x3a8f	    0xc78540fdffff	              mov dword [rbp - 0x2c0], 1	      1385	am.c	FUNCTION_40
0x3a99	    0x488b8d20f7ff	            mov rcx, qword [rbp - 0x8e0]	      1386	am.c	FUNCTION_40	CALL_4
0x3aa0	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1386	am.c	FUNCTION_40	CALL_4
0x3aa7	      0xba00000000	                              mov edx, 0	      1386	am.c	FUNCTION_40	CALL_4
0x3aac	          0x4889ce	                            mov rsi, rcx	      1386	am.c	FUNCTION_40	CALL_4
0x3aaf	          0x4889c7	                            mov rdi, rax	      1386	am.c	FUNCTION_40	CALL_4
0x3ab2	      0xe800000000	                          call 0x4003af7	      1386	am.c	FUNCTION_40	CALL_4
0x3ab7	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1387	am.c	FUNCTION_40	CALL_5
0x3abe	    0x4805f8040000	                          add rax, 0x4f8	      1387	am.c	FUNCTION_40	CALL_5
0x3ac4	          0x4889c7	                            mov rdi, rax	      1387	am.c	FUNCTION_40	CALL_5
0x3ac7	      0xe800000000	                          call 0x4003b0c	      1387	am.c	FUNCTION_40	CALL_5
0x3acc	    0x488b9520f7ff	            mov rdx, qword [rbp - 0x8e0]	      1388	am.c	FUNCTION_40	CALL_6
0x3ad3	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1388	am.c	FUNCTION_40	CALL_6
0x3ada	          0x4889d6	                            mov rsi, rdx	      1388	am.c	FUNCTION_40	CALL_6
0x3add	          0x4889c7	                            mov rdi, rax	      1388	am.c	FUNCTION_40	CALL_6
0x3ae0	      0xe800000000	                          call 0x4003b25	      1388	am.c	FUNCTION_40	CALL_6
0x3ae5	              0x90	                                     nop	      1389	am.c	FUNCTION_40
0x3ae6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1389	am.c	FUNCTION_40
0x3aea	    0x644833042528	                xor rax, qword fs:[0x28]	      1389	am.c	FUNCTION_40
0x3af3	            0x7405	                            je 0x4003b3a	      1389	am.c	FUNCTION_40
0x3af5	      0xe800000000	                          call 0x4003b3a	      1389	am.c	FUNCTION_40
0x3afa	              0xc9	                                   leave	      1389	am.c	FUNCTION_40
0x3afb	              0xc3	                                     ret	      1389	am.c	FUNCTION_40
msgnum	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,0:SWITCH,0:ELSE,0	20
0x2d6e	              0x55	                                push rbp	      1129	am.c	FUNCTION_33
0x2d6f	          0x4889e5	                            mov rbp, rsp	      1129	am.c	FUNCTION_33
0x2d72	        0x4883ec10	                           sub rsp, 0x10	      1129	am.c	FUNCTION_33
0x2d76	        0x48897df8	                mov qword [rbp - 8], rdi	      1129	am.c	FUNCTION_33
0x2d7a	      0xbe00000000	                              mov esi, 0	      1132	am.c	FUNCTION_33	CALL_1
0x2d7f	      0xbf00000000	                              mov edi, 0	      1132	am.c	FUNCTION_33	CALL_1
0x2d84	      0xe830d3ffff	                  call sym.strbuf_setlen	      1132	am.c	FUNCTION_33	CALL_1
0x2d89	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	am.c	FUNCTION_33	CALL_2
0x2d8d	          0x8b5008	                mov edx, dword [rax + 8]	      1133	am.c	FUNCTION_33	CALL_2
0x2d90	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	am.c	FUNCTION_33	CALL_2
0x2d94	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      1133	am.c	FUNCTION_33	CALL_2
0x2d97	            0x89d1	                            mov ecx, edx	      1133	am.c	FUNCTION_33	CALL_2
0x2d99	            0x89c2	                            mov edx, eax	      1133	am.c	FUNCTION_33	CALL_2
0x2d9b	      0xbe00000000	                              mov esi, 0	      1133	am.c	FUNCTION_33	CALL_2
0x2da0	      0xbf00000000	                              mov edi, 0	      1133	am.c	FUNCTION_33	CALL_2
0x2da5	      0xb800000000	                              mov eax, 0	      1133	am.c	FUNCTION_33	CALL_2
0x2daa	      0xe800000000	                          call 0x4002def	      1133	am.c	FUNCTION_33	CALL_2
0x2daf	    0x488b05000000	            mov rax, qword [0x04002df6] 	      1135	am.c	FUNCTION_33
0x2db6	              0xc9	                                   leave	      1136	am.c	FUNCTION_33
0x2db7	              0xc3	                                     ret	      1136	am.c	FUNCTION_33
am_next	functions,0:DO,0:WHILE,0:FOR,0:CALL,17:IF,1:SWITCH,0:ELSE,1	98
0x2bd6	              0x55	                                push rbp	      1100	am.c	FUNCTION_32
0x2bd7	          0x4889e5	                            mov rbp, rsp	      1100	am.c	FUNCTION_32
0x2bda	        0x4883ec30	                           sub rsp, 0x30	      1100	am.c	FUNCTION_32
0x2bde	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1100	am.c	FUNCTION_32
0x2be2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1100	am.c	FUNCTION_32
0x2beb	        0x488945f8	                mov qword [rbp - 8], rax	      1100	am.c	FUNCTION_32
0x2bef	            0x31c0	                            xor eax, eax	      1100	am.c	FUNCTION_32
0x2bf1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1103	am.c	FUNCTION_32	CALL_1
0x2bf5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1103	am.c	FUNCTION_32	CALL_1
0x2bf9	          0x4889c7	                            mov rdi, rax	      1103	am.c	FUNCTION_32	CALL_1
0x2bfc	      0xe800000000	                          call 0x4002c41	      1103	am.c	FUNCTION_32	CALL_1
0x2c01	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1103	am.c	FUNCTION_32	CALL_1
0x2c05	    0x48c740100000	               mov qword [rax + 0x10], 0	      1103	am.c	FUNCTION_32	CALL_1
0x2c0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1104	am.c	FUNCTION_32	CALL_2
0x2c11	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1104	am.c	FUNCTION_32	CALL_2
0x2c15	          0x4889c7	                            mov rdi, rax	      1104	am.c	FUNCTION_32	CALL_2
0x2c18	      0xe800000000	                          call 0x4002c5d	      1104	am.c	FUNCTION_32	CALL_2
0x2c1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1104	am.c	FUNCTION_32	CALL_2
0x2c21	    0x48c740180000	               mov qword [rax + 0x18], 0	      1104	am.c	FUNCTION_32	CALL_2
0x2c29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1105	am.c	FUNCTION_32	CALL_3
0x2c2d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1105	am.c	FUNCTION_32	CALL_3
0x2c31	          0x4889c7	                            mov rdi, rax	      1105	am.c	FUNCTION_32	CALL_3
0x2c34	      0xe800000000	                          call 0x4002c79	      1105	am.c	FUNCTION_32	CALL_3
0x2c39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1105	am.c	FUNCTION_32	CALL_3
0x2c3d	    0x48c740200000	               mov qword [rax + 0x20], 0	      1105	am.c	FUNCTION_32	CALL_3
0x2c45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1106	am.c	FUNCTION_32	CALL_4
0x2c49	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1106	am.c	FUNCTION_32	CALL_4
0x2c4d	          0x4889c7	                            mov rdi, rax	      1106	am.c	FUNCTION_32	CALL_4
0x2c50	      0xe800000000	                          call 0x4002c95	      1106	am.c	FUNCTION_32	CALL_4
0x2c55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1106	am.c	FUNCTION_32	CALL_4
0x2c59	    0x48c740280000	               mov qword [rax + 0x28], 0	      1106	am.c	FUNCTION_32	CALL_4
0x2c61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1107	am.c	FUNCTION_32
0x2c65	    0x48c740300000	               mov qword [rax + 0x30], 0	      1107	am.c	FUNCTION_32
0x2c6d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1109	am.c	FUNCTION_32	CALL_6
0x2c71	      0xbe00000000	                              mov esi, 0	      1109	am.c	FUNCTION_32	CALL_6
0x2c76	          0x4889c7	                            mov rdi, rax	      1109	am.c	FUNCTION_32	CALL_6
0x2c79	      0xe8b9d9ffff	                        call sym.am_path	      1109	am.c	FUNCTION_32	CALL_6
0x2c7e	          0x4889c7	                            mov rdi, rax	      1109	am.c	FUNCTION_32	CALL_6
0x2c81	      0xe800000000	                          call 0x4002cc6	      1109	am.c	FUNCTION_32	CALL_6
0x2c86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1110	am.c	FUNCTION_32	CALL_8
0x2c8a	      0xbe00000000	                              mov esi, 0	      1110	am.c	FUNCTION_32	CALL_8
0x2c8f	          0x4889c7	                            mov rdi, rax	      1110	am.c	FUNCTION_32	CALL_8
0x2c92	      0xe8a0d9ffff	                        call sym.am_path	      1110	am.c	FUNCTION_32	CALL_8
0x2c97	          0x4889c7	                            mov rdi, rax	      1110	am.c	FUNCTION_32	CALL_8
0x2c9a	      0xe800000000	                          call 0x4002cdf	      1110	am.c	FUNCTION_32	CALL_8
0x2c9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1112	am.c	FUNCTION_32	CALL_9
0x2ca3	        0x4883c038	                           add rax, 0x38	      1112	am.c	FUNCTION_32	CALL_9
0x2ca7	          0x4889c7	                            mov rdi, rax	      1112	am.c	FUNCTION_32	CALL_9
0x2caa	      0xe83ad6ffff	                         call sym.oidclr	      1112	am.c	FUNCTION_32	CALL_9
0x2caf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1113	am.c	FUNCTION_32	CALL_11
0x2cb3	      0xbe00000000	                              mov esi, 0	      1113	am.c	FUNCTION_32	CALL_11
0x2cb8	          0x4889c7	                            mov rdi, rax	      1113	am.c	FUNCTION_32	CALL_11
0x2cbb	      0xe877d9ffff	                        call sym.am_path	      1113	am.c	FUNCTION_32	CALL_11
0x2cc0	          0x4889c7	                            mov rdi, rax	      1113	am.c	FUNCTION_32	CALL_11
0x2cc3	      0xe800000000	                          call 0x4002d08	      1113	am.c	FUNCTION_32	CALL_11
0x2cc8	      0xb901000000	                              mov ecx, 1	      1114	am.c	FUNCTION_32	CALL_12
0x2ccd	      0xba00000000	                              mov edx, 0	      1114	am.c	FUNCTION_32	CALL_12
0x2cd2	      0xbe00000000	                              mov esi, 0	      1114	am.c	FUNCTION_32	CALL_12
0x2cd7	      0xbf00000000	                              mov edi, 0	      1114	am.c	FUNCTION_32	CALL_12
0x2cdc	      0xe800000000	                          call 0x4002d21	      1114	am.c	FUNCTION_32	CALL_12
0x2ce1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1116	am.c	FUNCTION_32	IF_1	CALL_13
0x2ce5	          0x4889c6	                            mov rsi, rax	      1116	am.c	FUNCTION_32	IF_1	CALL_13
0x2ce8	      0xbf00000000	                              mov edi, 0	      1116	am.c	FUNCTION_32	IF_1	CALL_13
0x2ced	      0xe800000000	                          call 0x4002d32	      1116	am.c	FUNCTION_32	IF_1	CALL_13
0x2cf2	            0x85c0	                           test eax, eax	      1116	am.c	FUNCTION_32	IF_1	CALL_13
0x2cf4	            0x7522	                           jne 0x4002d58	      1116	am.c	FUNCTION_32	IF_1	CALL_13
0x2cf6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1117	am.c	FUNCTION_32	CALL_15
0x2cfa	          0x4889c7	                            mov rdi, rax	      1117	am.c	FUNCTION_32	CALL_15
0x2cfd	      0xe800000000	                          call 0x4002d42	      1117	am.c	FUNCTION_32	CALL_15
0x2d02	          0x4889c2	                            mov rdx, rax	      1117	am.c	FUNCTION_32	CALL_15
0x2d05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1117	am.c	FUNCTION_32	CALL_15
0x2d09	      0xbe00000000	                              mov esi, 0	      1117	am.c	FUNCTION_32	CALL_15
0x2d0e	          0x4889c7	                            mov rdi, rax	      1117	am.c	FUNCTION_32	CALL_15
0x2d11	      0xe850d9ffff	               call sym.write_state_text	      1117	am.c	FUNCTION_32	CALL_15
0x2d16	            0xeb16	                           jmp 0x4002d6e	      1117	am.c	FUNCTION_32	CALL_15
0x2d18	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1119	am.c	FUNCTION_32	CALL_16
0x2d1c	      0xba00000000	                              mov edx, 0	      1119	am.c	FUNCTION_32	CALL_16
0x2d21	      0xbe00000000	                              mov esi, 0	      1119	am.c	FUNCTION_32	CALL_16
0x2d26	          0x4889c7	                            mov rdi, rax	      1119	am.c	FUNCTION_32	CALL_16
0x2d29	      0xe838d9ffff	               call sym.write_state_text	      1119	am.c	FUNCTION_32	CALL_16
0x2d2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1121	am.c	FUNCTION_32
0x2d32	          0x8b4008	                mov eax, dword [rax + 8]	      1121	am.c	FUNCTION_32
0x2d35	          0x8d5001	                      lea edx, [rax + 1]	      1121	am.c	FUNCTION_32
0x2d38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1121	am.c	FUNCTION_32
0x2d3c	          0x895008	                mov dword [rax + 8], edx	      1121	am.c	FUNCTION_32
0x2d3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1122	am.c	FUNCTION_32	CALL_17
0x2d43	          0x8b5008	                mov edx, dword [rax + 8]	      1122	am.c	FUNCTION_32	CALL_17
0x2d46	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1122	am.c	FUNCTION_32	CALL_17
0x2d4a	      0xbe00000000	                              mov esi, 0	      1122	am.c	FUNCTION_32	CALL_17
0x2d4f	          0x4889c7	                            mov rdi, rax	      1122	am.c	FUNCTION_32	CALL_17
0x2d52	      0xe855d9ffff	              call sym.write_state_count	      1122	am.c	FUNCTION_32	CALL_17
0x2d57	              0x90	                                     nop	      1123	am.c	FUNCTION_32
0x2d58	        0x488b45f8	                mov rax, qword [rbp - 8]	      1123	am.c	FUNCTION_32
0x2d5c	    0x644833042528	                xor rax, qword fs:[0x28]	      1123	am.c	FUNCTION_32
0x2d65	            0x7405	                            je 0x4002dac	      1123	am.c	FUNCTION_32
0x2d67	      0xe800000000	                          call 0x4002dac	      1123	am.c	FUNCTION_32
0x2d6c	              0xc9	                                   leave	      1123	am.c	FUNCTION_32
0x2d6d	              0xc3	                                     ret	      1123	am.c	FUNCTION_32
split_mail	functions,0:DO,0:WHILE,0:FOR,0:CALL,7:IF,1:SWITCH,1:ELSE,0	60
0x26fd	              0x55	                                push rbp	       971	am.c	FUNCTION_30
0x26fe	          0x4889e5	                            mov rbp, rsp	       971	am.c	FUNCTION_30
0x2701	        0x4883ec20	                           sub rsp, 0x20	       971	am.c	FUNCTION_30
0x2705	        0x48897df8	                mov qword [rbp - 8], rdi	       971	am.c	FUNCTION_30
0x2709	          0x8975f4	              mov dword [rbp - 0xc], esi	       971	am.c	FUNCTION_30
0x270c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       971	am.c	FUNCTION_30
0x2710	          0x894df0	             mov dword [rbp - 0x10], ecx	       971	am.c	FUNCTION_30
0x2713	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       972	am.c	FUNCTION_30	IF_1
0x2716	            0x85c0	                           test eax, eax	       972	am.c	FUNCTION_30	IF_1
0x2718	            0x7918	                           jns 0x4002772	       972	am.c	FUNCTION_30	IF_1
0x271a	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       973	am.c	FUNCTION_30	IF_1
0x2721	        0x488d45f0	                   lea rax, [rbp - 0x10]	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x2725	          0x4889c6	                            mov rsi, rax	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x2728	      0xbf00000000	                              mov edi, 0	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x272d	      0xe800000000	                          call 0x4002772	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x2732	        0x837df405	                cmp dword [rbp - 0xc], 5	       977	am.c	FUNCTION_30	SWITCH_1
0x2736	     0xf878d000000	                            ja 0x4002809	       977	am.c	FUNCTION_30	SWITCH_1
0x273c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       977	am.c	FUNCTION_30	SWITCH_1
0x273f	    0x488b04c50000	                  mov rax, qword [rax*8]	       977	am.c	FUNCTION_30	SWITCH_1
0x2747	            0xffe0	                                 jmp rax	       977	am.c	FUNCTION_30	SWITCH_1
0x2749	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x274c	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x2750	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x2754	      0xb900000000	                              mov ecx, 0	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x2759	          0x4889c7	                            mov rdi, rax	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x275c	      0xe8e4f4ffff	                call sym.split_mail_mbox	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x2761	            0xeb75	                           jmp 0x4002818	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x2763	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x2766	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x276a	        0x488b45f8	                mov rax, qword [rbp - 8]	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x276e	          0x4889c6	                            mov rsi, rax	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x2771	      0xbf00000000	                              mov edi, 0	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x2776	      0xe8c3f6ffff	                call sym.split_mail_conv	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x277b	            0xeb5b	                           jmp 0x4002818	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x277d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x2780	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x2784	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x2788	          0x4889ce	                            mov rsi, rcx	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x278b	          0x4889c7	                            mov rdi, rax	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x278e	      0xe837faffff	        call sym.split_mail_stgit_series	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x2793	            0xeb43	                           jmp 0x4002818	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x2795	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x2798	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x279c	        0x488b45f8	                mov rax, qword [rbp - 8]	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x27a0	          0x4889c6	                            mov rsi, rax	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x27a3	      0xbf00000000	                              mov edi, 0	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x27a8	      0xe891f6ffff	                call sym.split_mail_conv	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x27ad	            0xeb29	                           jmp 0x4002818	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x27af	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x27b2	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x27b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x27ba	      0xb901000000	                              mov ecx, 1	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x27bf	          0x4889c7	                            mov rdi, rax	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x27c2	      0xe87ef4ffff	                call sym.split_mail_mbox	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x27c7	            0xeb0f	                           jmp 0x4002818	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x27c9	      0xbf00000000	                              mov edi, 0	       989	am.c	FUNCTION_30	SWITCH_1	CALL_7
0x27ce	      0xb800000000	                              mov eax, 0	       989	am.c	FUNCTION_30	SWITCH_1	CALL_7
0x27d3	      0xe800000000	                          call 0x4002818	       989	am.c	FUNCTION_30	SWITCH_1	CALL_7
0x27d8	              0xc9	                                   leave	       992	am.c	FUNCTION_30
0x27d9	              0xc3	                                     ret	       992	am.c	FUNCTION_30
git_is_dir_sep	functions,0:DO,0:WHILE,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0	8
0xf	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_64
0x10	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_64
0x13	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_64
0x16	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_64
0x1a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_64
0x1d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_64
0x20	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_64
0x21	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_64
am_in_progress	functions,0:DO,0:WHILE,0:FOR,0:CALL,8:IF,3:SWITCH,0:ELSE,0	62
0x81e	              0x55	                                push rbp	       227	am.c	FUNCTION_11
0x81f	          0x4889e5	                            mov rbp, rsp	       227	am.c	FUNCTION_11
0x822	    0x4881ecb00000	                           sub rsp, 0xb0	       227	am.c	FUNCTION_11
0x829	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       227	am.c	FUNCTION_11
0x830	    0x64488b042528	                mov rax, qword fs:[0x28]	       227	am.c	FUNCTION_11
0x839	        0x488945f8	                mov qword [rbp - 8], rax	       227	am.c	FUNCTION_11
0x83d	            0x31c0	                            xor eax, eax	       227	am.c	FUNCTION_11
0x83f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x846	          0x488b00	                    mov rax, qword [rax]	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x849	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x850	          0x4889d6	                            mov rsi, rdx	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x853	          0x4889c7	                            mov rdi, rax	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x856	      0xe800000000	                          call 0x400089b	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x85b	            0x85c0	                           test eax, eax	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x85d	            0x7812	                            js 0x40008b1	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x85f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x865	      0x2500f00000	                         and eax, 0xf000	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x86a	      0x3d00400000	                         cmp eax, 0x4000	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x86f	            0x740a	                            je 0x40008bb	       230	am.c	FUNCTION_11	IF_1	CALL_2
0x871	      0xb800000000	                              mov eax, 0	       231	am.c	FUNCTION_11	IF_1
0x876	      0xe991000000	                           jmp 0x400094c	       231	am.c	FUNCTION_11	IF_1
0x87b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x882	      0xbe00000000	                              mov esi, 0	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x887	          0x4889c7	                            mov rdi, rax	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x88a	      0xe8a8fdffff	                        call sym.am_path	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x88f	          0x4889c2	                            mov rdx, rax	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x892	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x899	          0x4889c6	                            mov rsi, rax	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x89c	          0x4889d7	                            mov rdi, rdx	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x89f	      0xe800000000	                          call 0x40008e4	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x8a4	            0x85c0	                           test eax, eax	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x8a6	            0x7512	                           jne 0x40008fa	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x8a8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x8ae	      0x2500f00000	                         and eax, 0xf000	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x8b3	      0x3d00800000	                         cmp eax, 0x8000	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x8b8	            0x7407	                            je 0x4000901	       232	am.c	FUNCTION_11	IF_2	CALL_5
0x8ba	      0xb800000000	                              mov eax, 0	       233	am.c	FUNCTION_11	IF_2
0x8bf	            0xeb4b	                           jmp 0x400094c	       233	am.c	FUNCTION_11	IF_2
0x8c1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8c8	      0xbe00000000	                              mov esi, 0	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8cd	          0x4889c7	                            mov rdi, rax	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8d0	      0xe862fdffff	                        call sym.am_path	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8d5	          0x4889c2	                            mov rdx, rax	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8d8	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8df	          0x4889c6	                            mov rsi, rax	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8e2	          0x4889d7	                            mov rdi, rdx	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8e5	      0xe800000000	                          call 0x400092a	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8ea	            0x85c0	                           test eax, eax	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8ec	            0x7512	                           jne 0x4000940	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8ee	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8f4	      0x2500f00000	                         and eax, 0xf000	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8f9	      0x3d00800000	                         cmp eax, 0x8000	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x8fe	            0x7407	                            je 0x4000947	       234	am.c	FUNCTION_11	IF_3	CALL_8
0x900	      0xb800000000	                              mov eax, 0	       235	am.c	FUNCTION_11	IF_3
0x905	            0xeb05	                           jmp 0x400094c	       235	am.c	FUNCTION_11	IF_3
0x907	      0xb801000000	                              mov eax, 1	       236	am.c	FUNCTION_11
0x90c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       237	am.c	FUNCTION_11
0x910	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       237	am.c	FUNCTION_11
0x919	            0x7405	                            je 0x4000960	       237	am.c	FUNCTION_11
0x91b	      0xe800000000	                          call 0x4000960	       237	am.c	FUNCTION_11
0x920	              0xc9	                                   leave	       237	am.c	FUNCTION_11
0x921	              0xc3	                                     ret	       237	am.c	FUNCTION_11
am_skip	functions,0:DO,0:WHILE,0:FOR,0:CALL,9:IF,2:SWITCH,0:ELSE,0	47
0x5767	              0x55	                                push rbp	      2039	am.c	FUNCTION_55
0x5768	          0x4889e5	                            mov rbp, rsp	      2039	am.c	FUNCTION_55
0x576b	        0x4883ec30	                           sub rsp, 0x30	      2039	am.c	FUNCTION_55
0x576f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2039	am.c	FUNCTION_55
0x5773	    0x64488b042528	                mov rax, qword fs:[0x28]	      2039	am.c	FUNCTION_55
0x577c	        0x488945f8	                mov qword [rbp - 8], rax	      2039	am.c	FUNCTION_55
0x5780	            0x31c0	                            xor eax, eax	      2039	am.c	FUNCTION_55
0x5782	      0xe86dffffff	                call sym.am_rerere_clear	      2042	am.c	FUNCTION_55	CALL_1
0x5787	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x578b	          0x4889c6	                            mov rsi, rax	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x578e	      0xbf00000000	                              mov edi, 0	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x5793	      0xe800000000	                          call 0x40057d8	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x5798	            0x85c0	                           test eax, eax	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x579a	            0x7411	                            je 0x40057ed	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x579c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2045	am.c	FUNCTION_55	CALL_3
0x57a0	      0xbe00000000	                              mov esi, 0	      2045	am.c	FUNCTION_55	CALL_3
0x57a5	          0x4889c7	                            mov rdi, rax	      2045	am.c	FUNCTION_55	CALL_3
0x57a8	      0xe8ebaaffff	                        call sym.hashcpy	      2045	am.c	FUNCTION_55	CALL_3
0x57ad	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x57b1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x57b5	          0x4889d6	                            mov rsi, rdx	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x57b8	          0x4889c7	                            mov rdi, rax	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x57bb	      0xe886fdffff	                    call sym.clean_index	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x57c0	            0x85c0	                           test eax, eax	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x57c2	            0x7417	                            je 0x400581b	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x57c4	      0xbf00000000	                              mov edi, 0	      2048	am.c	FUNCTION_55	CALL_6
0x57c9	      0xe828aaffff	                               call sym.	      2048	am.c	FUNCTION_55	CALL_6
0x57ce	          0x4889c7	                            mov rdi, rax	      2048	am.c	FUNCTION_55	CALL_6
0x57d1	      0xb800000000	                              mov eax, 0	      2048	am.c	FUNCTION_55	CALL_6
0x57d6	      0xe800000000	                          call 0x400581b	      2048	am.c	FUNCTION_55	CALL_6
0x57db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2050	am.c	FUNCTION_55	CALL_7
0x57df	          0x4889c7	                            mov rdi, rax	      2050	am.c	FUNCTION_55	CALL_7
0x57e2	      0xe8efd3ffff	                        call sym.am_next	      2050	am.c	FUNCTION_55	CALL_7
0x57e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2051	am.c	FUNCTION_55	CALL_8
0x57eb	          0x4889c7	                            mov rdi, rax	      2051	am.c	FUNCTION_55	CALL_8
0x57ee	      0xe844b7ffff	                        call sym.am_load	      2051	am.c	FUNCTION_55	CALL_8
0x57f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	am.c	FUNCTION_55	CALL_9
0x57f7	      0xbe00000000	                              mov esi, 0	      2052	am.c	FUNCTION_55	CALL_9
0x57fc	          0x4889c7	                            mov rdi, rax	      2052	am.c	FUNCTION_55	CALL_9
0x57ff	      0xe8bbf3ffff	                         call sym.am_run	      2052	am.c	FUNCTION_55	CALL_9
0x5804	              0x90	                                     nop	      2053	am.c	FUNCTION_55
0x5805	        0x488b45f8	                mov rax, qword [rbp - 8]	      2053	am.c	FUNCTION_55
0x5809	    0x644833042528	                xor rax, qword fs:[0x28]	      2053	am.c	FUNCTION_55
0x5812	            0x7405	                            je 0x4005859	      2053	am.c	FUNCTION_55
0x5814	      0xe800000000	                          call 0x4005859	      2053	am.c	FUNCTION_55
0x5819	              0xc9	                                   leave	      2053	am.c	FUNCTION_55
0x581a	              0xc3	                                     ret	      2053	am.c	FUNCTION_55
am_destroy	functions,0:DO,0:WHILE,0:FOR,0:CALL,3:IF,0:SWITCH,0:ELSE,0	30
0x13db	              0x55	                                push rbp	       477	am.c	FUNCTION_19
0x13dc	          0x4889e5	                            mov rbp, rsp	       477	am.c	FUNCTION_19
0x13df	        0x4883ec30	                           sub rsp, 0x30	       477	am.c	FUNCTION_19
0x13e3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       477	am.c	FUNCTION_19
0x13e7	    0x64488b042528	                mov rax, qword fs:[0x28]	       477	am.c	FUNCTION_19
0x13f0	        0x488945f8	                mov qword [rbp - 8], rax	       477	am.c	FUNCTION_19
0x13f4	            0x31c0	                            xor eax, eax	       477	am.c	FUNCTION_19
0x13f6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       478	am.c	FUNCTION_19
0x13fe	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       478	am.c	FUNCTION_19
0x1406	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       478	am.c	FUNCTION_19
0x140e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       480	am.c	FUNCTION_19	CALL_1
0x1412	          0x488b10	                    mov rdx, qword [rax]	       480	am.c	FUNCTION_19	CALL_1
0x1415	        0x488d45e0	                   lea rax, [rbp - 0x20]	       480	am.c	FUNCTION_19	CALL_1
0x1419	          0x4889d6	                            mov rsi, rdx	       480	am.c	FUNCTION_19	CALL_1
0x141c	          0x4889c7	                            mov rdi, rax	       480	am.c	FUNCTION_19	CALL_1
0x141f	      0xe89dedffff	                  call sym.strbuf_addstr	       480	am.c	FUNCTION_19	CALL_1
0x1424	        0x488d45e0	                   lea rax, [rbp - 0x20]	       481	am.c	FUNCTION_19	CALL_2
0x1428	      0xbe00000000	                              mov esi, 0	       481	am.c	FUNCTION_19	CALL_2
0x142d	          0x4889c7	                            mov rdi, rax	       481	am.c	FUNCTION_19	CALL_2
0x1430	      0xe800000000	                          call 0x4001475	       481	am.c	FUNCTION_19	CALL_2
0x1435	        0x488d45e0	                   lea rax, [rbp - 0x20]	       482	am.c	FUNCTION_19	CALL_3
0x1439	          0x4889c7	                            mov rdi, rax	       482	am.c	FUNCTION_19	CALL_3
0x143c	      0xe800000000	                          call 0x4001481	       482	am.c	FUNCTION_19	CALL_3
0x1441	              0x90	                                     nop	       483	am.c	FUNCTION_19
0x1442	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	am.c	FUNCTION_19
0x1446	    0x644833042528	                xor rax, qword fs:[0x28]	       483	am.c	FUNCTION_19
0x144f	            0x7405	                            je 0x4001496	       483	am.c	FUNCTION_19
0x1451	      0xe800000000	                          call 0x4001496	       483	am.c	FUNCTION_19
0x1456	              0xc9	                                   leave	       483	am.c	FUNCTION_19
0x1457	              0xc3	                                     ret	       483	am.c	FUNCTION_19
strbuf_addstr	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,0:SWITCH,0:ELSE,0	17
0x1c1	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_93
0x1c2	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_93
0x1c5	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_93
0x1c9	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_93
0x1cd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_93
0x1d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_93	CALL_2
0x1d5	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_93	CALL_2
0x1d8	      0xe800000000	                          call 0x400021d	       279	strbuf.h	FUNCTION_93	CALL_2
0x1dd	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_93	CALL_2
0x1e0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_93	CALL_2
0x1e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_93	CALL_2
0x1e8	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_93	CALL_2
0x1eb	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_93	CALL_2
0x1ee	      0xe800000000	                          call 0x4000233	       279	strbuf.h	FUNCTION_93	CALL_2
0x1f3	              0x90	                                     nop	       280	strbuf.h	FUNCTION_93
0x1f4	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_93
0x1f5	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_93
is_empty_file	functions,0:DO,0:WHILE,0:FOR,0:CALL,3:IF,2:SWITCH,0:ELSE,0	38
0x3d1	              0x55	                                push rbp	        40	am.c	FUNCTION_1
0x3d2	          0x4889e5	                            mov rbp, rsp	        40	am.c	FUNCTION_1
0x3d5	    0x4881ecb00000	                           sub rsp, 0xb0	        40	am.c	FUNCTION_1
0x3dc	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	        40	am.c	FUNCTION_1
0x3e3	    0x64488b042528	                mov rax, qword fs:[0x28]	        40	am.c	FUNCTION_1
0x3ec	        0x488945f8	                mov qword [rbp - 8], rax	        40	am.c	FUNCTION_1
0x3f0	            0x31c0	                            xor eax, eax	        40	am.c	FUNCTION_1
0x3f2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        43	am.c	FUNCTION_1	IF_1	CALL_1
0x3f9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        43	am.c	FUNCTION_1	IF_1	CALL_1
0x400	          0x4889d6	                            mov rsi, rdx	        43	am.c	FUNCTION_1	IF_1	CALL_1
0x403	          0x4889c7	                            mov rdi, rax	        43	am.c	FUNCTION_1	IF_1	CALL_1
0x406	      0xe800000000	                          call 0x400044b	        43	am.c	FUNCTION_1	IF_1	CALL_1
0x40b	            0x85c0	                           test eax, eax	        43	am.c	FUNCTION_1	IF_1	CALL_1
0x40d	            0x7937	                           jns 0x4000486	        43	am.c	FUNCTION_1	IF_1	CALL_1
0x40f	      0xe800000000	                          call 0x4000454	        44	am.c	FUNCTION_1	IF_1	IF_2
0x414	            0x8b00	                    mov eax, dword [rax]	        44	am.c	FUNCTION_1	IF_1	IF_2
0x416	          0x83f802	                              cmp eax, 2	        44	am.c	FUNCTION_1	IF_1	IF_2
0x419	            0x7507	                           jne 0x4000462	        44	am.c	FUNCTION_1	IF_1	IF_2
0x41b	      0xb801000000	                              mov eax, 1	        45	am.c	FUNCTION_1	IF_1	IF_2
0x420	            0xeb31	                           jmp 0x4000493	        45	am.c	FUNCTION_1	IF_1	IF_2
0x422	      0xbf00000000	                              mov edi, 0	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x427	      0xe8cafdffff	                               call sym.	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x42c	          0x4889c2	                            mov rdx, rax	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x42f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x436	          0x4889c6	                            mov rsi, rax	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x439	          0x4889d7	                            mov rdi, rdx	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x43c	      0xb800000000	                              mov eax, 0	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x441	      0xe800000000	                          call 0x4000486	        46	am.c	FUNCTION_1	IF_1	CALL_3
0x446	        0x488b4590	             mov rax, qword [rbp - 0x70]	        49	am.c	FUNCTION_1
0x44a	          0x4885c0	                           test rax, rax	        49	am.c	FUNCTION_1
0x44d	           0xf94c0	                                 sete al	        49	am.c	FUNCTION_1
0x450	           0xfb6c0	                           movzx eax, al	        49	am.c	FUNCTION_1
0x453	        0x488b4df8	                mov rcx, qword [rbp - 8]	        50	am.c	FUNCTION_1
0x457	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        50	am.c	FUNCTION_1
0x460	            0x7405	                            je 0x40004a7	        50	am.c	FUNCTION_1
0x462	      0xe800000000	                          call 0x40004a7	        50	am.c	FUNCTION_1
0x467	              0xc9	                                   leave	        50	am.c	FUNCTION_1
0x468	              0xc3	                                     ret	        50	am.c	FUNCTION_1
get_commit_info	functions,0:DO,0:WHILE,0:FOR,0:CALL,24:IF,4:SWITCH,0:ELSE,2	180
0x36b9	              0x55	                                push rbp	      1327	am.c	FUNCTION_39
0x36ba	          0x4889e5	                            mov rbp, rsp	      1327	am.c	FUNCTION_39
0x36bd	              0x53	                                push rbx	      1327	am.c	FUNCTION_39
0x36be	    0x4881ec880000	                           sub rsp, 0x88	      1327	am.c	FUNCTION_39
0x36c5	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1327	am.c	FUNCTION_39
0x36cc	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1327	am.c	FUNCTION_39
0x36d3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1327	am.c	FUNCTION_39
0x36dc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1327	am.c	FUNCTION_39
0x36e0	            0x31c0	                            xor eax, eax	      1327	am.c	FUNCTION_39
0x36e2	      0xe800000000	                          call 0x4003727	      1332	am.c	FUNCTION_39	CALL_2
0x36e7	          0x4889c2	                            mov rdx, rax	      1332	am.c	FUNCTION_39	CALL_2
0x36ea	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1332	am.c	FUNCTION_39	CALL_2
0x36f1	      0xbe00000000	                              mov esi, 0	      1332	am.c	FUNCTION_39	CALL_2
0x36f6	          0x4889c7	                            mov rdi, rax	      1332	am.c	FUNCTION_39	CALL_2
0x36f9	      0xe800000000	                          call 0x400373e	      1332	am.c	FUNCTION_39	CALL_2
0x36fe	        0x48894588	             mov qword [rbp - 0x78], rax	      1332	am.c	FUNCTION_39	CALL_2
0x3702	        0x488d5580	                   lea rdx, [rbp - 0x80]	      1334	am.c	FUNCTION_39	CALL_3
0x3706	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1334	am.c	FUNCTION_39	CALL_3
0x370a	      0xbe00000000	                              mov esi, 0	      1334	am.c	FUNCTION_39	CALL_3
0x370f	          0x4889c7	                            mov rdi, rax	      1334	am.c	FUNCTION_39	CALL_3
0x3712	      0xe800000000	                          call 0x4003757	      1334	am.c	FUNCTION_39	CALL_3
0x3717	        0x48894590	             mov qword [rbp - 0x70], rax	      1334	am.c	FUNCTION_39	CALL_3
0x371b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x371f	            0x89c2	                            mov edx, eax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x3721	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x3725	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x3729	          0x4889ce	                            mov rsi, rcx	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x372c	          0x4889c7	                            mov rdi, rax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x372f	      0xe800000000	                          call 0x4003774	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x3734	            0x85c0	                           test eax, eax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x3736	            0x7929	                           jns 0x40037a1	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x3738	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1337	am.c	FUNCTION_39	CALL_6
0x373c	            0x89c3	                            mov ebx, eax	      1337	am.c	FUNCTION_39	CALL_6
0x373e	      0xbf00000000	                              mov edi, 0	      1337	am.c	FUNCTION_39	CALL_6
0x3743	      0xe8aecaffff	                               call sym.	      1337	am.c	FUNCTION_39	CALL_6
0x3748	          0x4889c1	                            mov rcx, rax	      1337	am.c	FUNCTION_39	CALL_6
0x374b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1337	am.c	FUNCTION_39	CALL_6
0x374f	          0x4889c2	                            mov rdx, rax	      1337	am.c	FUNCTION_39	CALL_6
0x3752	            0x89de	                            mov esi, ebx	      1337	am.c	FUNCTION_39	CALL_6
0x3754	          0x4889cf	                            mov rdi, rcx	      1337	am.c	FUNCTION_39	CALL_6
0x3757	      0xb800000000	                              mov eax, 0	      1337	am.c	FUNCTION_39	CALL_6
0x375c	      0xe800000000	                          call 0x40037a1	      1337	am.c	FUNCTION_39	CALL_6
0x3761	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1339	am.c	FUNCTION_39	CALL_7
0x3768	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1339	am.c	FUNCTION_39	CALL_7
0x376c	          0x4885c0	                           test rax, rax	      1339	am.c	FUNCTION_39	CALL_7
0x376f	            0x7419	                            je 0x40037ca	      1339	am.c	FUNCTION_39	CALL_7
0x3771	      0xb900000000	                              mov ecx, 0	      1339	am.c	FUNCTION_39	CALL_7
0x3776	      0xba3b050000	                          mov edx, 0x53b	      1339	am.c	FUNCTION_39	CALL_7
0x377b	      0xbe00000000	                              mov esi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x3780	      0xbf00000000	                              mov edi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x3785	      0xe800000000	                          call 0x40037ca	      1339	am.c	FUNCTION_39	CALL_7
0x378a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1340	am.c	FUNCTION_39	IF_2
0x378e	          0x4885c0	                           test rax, rax	      1340	am.c	FUNCTION_39	IF_2
0x3791	            0x7433	                            je 0x4003806	      1340	am.c	FUNCTION_39	IF_2
0x3793	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1342	am.c	FUNCTION_39	CALL_8
0x3797	          0x4889c2	                            mov rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x379a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1342	am.c	FUNCTION_39	CALL_8
0x379e	          0x4829c2	                            sub rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x37a1	          0x4889d0	                            mov rax, rdx	      1342	am.c	FUNCTION_39	CALL_8
0x37a4	          0x4889c2	                            mov rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x37a7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1342	am.c	FUNCTION_39	CALL_8
0x37ab	          0x4889d6	                            mov rsi, rdx	      1342	am.c	FUNCTION_39	CALL_8
0x37ae	          0x4889c7	                            mov rdi, rax	      1342	am.c	FUNCTION_39	CALL_8
0x37b1	      0xe800000000	                          call 0x40037f6	      1342	am.c	FUNCTION_39	CALL_8
0x37b6	          0x4889c2	                            mov rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x37b9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1341	am.c	FUNCTION_39	IF_2
0x37c0	        0x48895010	             mov qword [rax + 0x10], rdx	      1341	am.c	FUNCTION_39	IF_2
0x37c4	            0xeb18	                           jmp 0x400381e	      1341	am.c	FUNCTION_39	IF_2
0x37c6	      0xbf00000000	                              mov edi, 0	      1344	am.c	FUNCTION_39	CALL_9
0x37cb	      0xe800000000	                          call 0x4003810	      1344	am.c	FUNCTION_39	CALL_9
0x37d0	          0x4889c2	                            mov rdx, rax	      1344	am.c	FUNCTION_39	CALL_9
0x37d3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1344	am.c	FUNCTION_39	CALL_9
0x37da	        0x48895010	             mov qword [rax + 0x10], rdx	      1344	am.c	FUNCTION_39	CALL_9
0x37de	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1346	am.c	FUNCTION_39	CALL_10
0x37e5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1346	am.c	FUNCTION_39	CALL_10
0x37e9	          0x4885c0	                           test rax, rax	      1346	am.c	FUNCTION_39	CALL_10
0x37ec	            0x7419	                            je 0x4003847	      1346	am.c	FUNCTION_39	CALL_10
0x37ee	      0xb900000000	                              mov ecx, 0	      1346	am.c	FUNCTION_39	CALL_10
0x37f3	      0xba42050000	                          mov edx, 0x542	      1346	am.c	FUNCTION_39	CALL_10
0x37f8	      0xbe00000000	                              mov esi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x37fd	      0xbf00000000	                              mov edi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x3802	      0xe800000000	                          call 0x4003847	      1346	am.c	FUNCTION_39	CALL_10
0x3807	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1347	am.c	FUNCTION_39	IF_3
0x380b	          0x4885c0	                           test rax, rax	      1347	am.c	FUNCTION_39	IF_3
0x380e	            0x7433	                            je 0x4003883	      1347	am.c	FUNCTION_39	IF_3
0x3810	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1349	am.c	FUNCTION_39	CALL_11
0x3814	          0x4889c2	                            mov rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x3817	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1349	am.c	FUNCTION_39	CALL_11
0x381b	          0x4829c2	                            sub rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x381e	          0x4889d0	                            mov rax, rdx	      1349	am.c	FUNCTION_39	CALL_11
0x3821	          0x4889c2	                            mov rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x3824	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1349	am.c	FUNCTION_39	CALL_11
0x3828	          0x4889d6	                            mov rsi, rdx	      1349	am.c	FUNCTION_39	CALL_11
0x382b	          0x4889c7	                            mov rdi, rax	      1349	am.c	FUNCTION_39	CALL_11
0x382e	      0xe800000000	                          call 0x4003873	      1349	am.c	FUNCTION_39	CALL_11
0x3833	          0x4889c2	                            mov rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x3836	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1348	am.c	FUNCTION_39	IF_3
0x383d	        0x48895018	             mov qword [rax + 0x18], rdx	      1348	am.c	FUNCTION_39	IF_3
0x3841	            0xeb18	                           jmp 0x400389b	      1348	am.c	FUNCTION_39	IF_3
0x3843	      0xbf00000000	                              mov edi, 0	      1351	am.c	FUNCTION_39	CALL_12
0x3848	      0xe800000000	                          call 0x400388d	      1351	am.c	FUNCTION_39	CALL_12
0x384d	          0x4889c2	                            mov rdx, rax	      1351	am.c	FUNCTION_39	CALL_12
0x3850	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1351	am.c	FUNCTION_39	CALL_12
0x3857	        0x48895018	             mov qword [rax + 0x18], rdx	      1351	am.c	FUNCTION_39	CALL_12
0x385b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1353	am.c	FUNCTION_39	CALL_13
0x3862	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1353	am.c	FUNCTION_39	CALL_13
0x3866	          0x4885c0	                           test rax, rax	      1353	am.c	FUNCTION_39	CALL_13
0x3869	            0x7419	                            je 0x40038c4	      1353	am.c	FUNCTION_39	CALL_13
0x386b	      0xb900000000	                              mov ecx, 0	      1353	am.c	FUNCTION_39	CALL_13
0x3870	      0xba49050000	                          mov edx, 0x549	      1353	am.c	FUNCTION_39	CALL_13
0x3875	      0xbe00000000	                              mov esi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x387a	      0xbf00000000	                              mov edi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x387f	      0xe800000000	                          call 0x40038c4	      1353	am.c	FUNCTION_39	CALL_13
0x3884	      0xbf00000000	                              mov edi, 0	      1354	am.c	FUNCTION_39	CALL_16
0x3889	      0xe800000000	                          call 0x40038ce	      1354	am.c	FUNCTION_39	CALL_16
0x388e	          0x4889c2	                            mov rdx, rax	      1354	am.c	FUNCTION_39	CALL_16
0x3891	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1354	am.c	FUNCTION_39	CALL_16
0x3895	          0x4889d6	                            mov rsi, rdx	      1354	am.c	FUNCTION_39	CALL_16
0x3898	          0x4889c7	                            mov rdi, rax	      1354	am.c	FUNCTION_39	CALL_16
0x389b	      0xe800000000	                          call 0x40038e0	      1354	am.c	FUNCTION_39	CALL_16
0x38a0	          0x4889c7	                            mov rdi, rax	      1354	am.c	FUNCTION_39	CALL_16
0x38a3	      0xe800000000	                          call 0x40038e8	      1354	am.c	FUNCTION_39	CALL_16
0x38a8	          0x4889c2	                            mov rdx, rax	      1354	am.c	FUNCTION_39	CALL_16
0x38ab	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1354	am.c	FUNCTION_39	CALL_16
0x38b2	        0x48895020	             mov qword [rax + 0x20], rdx	      1354	am.c	FUNCTION_39	CALL_16
0x38b6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1356	am.c	FUNCTION_39	CALL_17
0x38bd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1356	am.c	FUNCTION_39	CALL_17
0x38c1	          0x4885c0	                           test rax, rax	      1356	am.c	FUNCTION_39	CALL_17
0x38c4	            0x7419	                            je 0x400391f	      1356	am.c	FUNCTION_39	CALL_17
0x38c6	      0xb900000000	                              mov ecx, 0	      1356	am.c	FUNCTION_39	CALL_17
0x38cb	      0xba4c050000	                          mov edx, 0x54c	      1356	am.c	FUNCTION_39	CALL_17
0x38d0	      0xbe00000000	                              mov esi, 0	      1356	am.c	FUNCTION_39	CALL_17
0x38d5	      0xbf00000000	                              mov edi, 0	      1356	am.c	FUNCTION_39	CALL_17
0x38da	      0xe800000000	                          call 0x400391f	      1356	am.c	FUNCTION_39	CALL_17
0x38df	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1357	am.c	FUNCTION_39	CALL_18
0x38e3	      0xbe00000000	                              mov esi, 0	      1357	am.c	FUNCTION_39	CALL_18
0x38e8	          0x4889c7	                            mov rdi, rax	      1357	am.c	FUNCTION_39	CALL_18
0x38eb	      0xe800000000	                          call 0x4003930	      1357	am.c	FUNCTION_39	CALL_18
0x38f0	        0x48894598	             mov qword [rbp - 0x68], rax	      1357	am.c	FUNCTION_39	CALL_18
0x38f4	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1358	am.c	FUNCTION_39	IF_4
0x38f9	            0x7530	                           jne 0x400396b	      1358	am.c	FUNCTION_39	IF_4
0x38fb	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1359	am.c	FUNCTION_39	CALL_21
0x3902	        0x4883c004	                              add rax, 4	      1359	am.c	FUNCTION_39	CALL_21
0x3906	          0x4889c7	                            mov rdi, rax	      1359	am.c	FUNCTION_39	CALL_21
0x3909	      0xe800000000	                          call 0x400394e	      1359	am.c	FUNCTION_39	CALL_21
0x390e	          0x4889c3	                            mov rbx, rax	      1359	am.c	FUNCTION_39	CALL_21
0x3911	      0xbf00000000	                              mov edi, 0	      1359	am.c	FUNCTION_39	CALL_21
0x3916	      0xe8dbc8ffff	                               call sym.	      1359	am.c	FUNCTION_39	CALL_21
0x391b	          0x4889de	                            mov rsi, rbx	      1359	am.c	FUNCTION_39	CALL_21
0x391e	          0x4889c7	                            mov rdi, rax	      1359	am.c	FUNCTION_39	CALL_21
0x3921	      0xb800000000	                              mov eax, 0	      1359	am.c	FUNCTION_39	CALL_21
0x3926	      0xe800000000	                          call 0x400396b	      1359	am.c	FUNCTION_39	CALL_21
0x392b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1360	am.c	FUNCTION_39	CALL_22
0x392f	        0x4883c002	                              add rax, 2	      1360	am.c	FUNCTION_39	CALL_22
0x3933	          0x4889c7	                            mov rdi, rax	      1360	am.c	FUNCTION_39	CALL_22
0x3936	      0xe800000000	                          call 0x400397b	      1360	am.c	FUNCTION_39	CALL_22
0x393b	          0x4889c2	                            mov rdx, rax	      1360	am.c	FUNCTION_39	CALL_22
0x393e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1360	am.c	FUNCTION_39	CALL_22
0x3945	        0x48895028	             mov qword [rax + 0x28], rdx	      1360	am.c	FUNCTION_39	CALL_22
0x3949	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1361	am.c	FUNCTION_39	CALL_23
0x3950	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1361	am.c	FUNCTION_39	CALL_23
0x3954	          0x4889c7	                            mov rdi, rax	      1361	am.c	FUNCTION_39	CALL_23
0x3957	      0xe800000000	                          call 0x400399c	      1361	am.c	FUNCTION_39	CALL_23
0x395c	          0x4889c2	                            mov rdx, rax	      1361	am.c	FUNCTION_39	CALL_23
0x395f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1361	am.c	FUNCTION_39	CALL_23
0x3966	        0x48895030	             mov qword [rax + 0x30], rdx	      1361	am.c	FUNCTION_39	CALL_23
0x396a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1362	am.c	FUNCTION_39	CALL_24
0x396e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1362	am.c	FUNCTION_39	CALL_24
0x3975	          0x4889d6	                            mov rsi, rdx	      1362	am.c	FUNCTION_39	CALL_24
0x3978	          0x4889c7	                            mov rdi, rax	      1362	am.c	FUNCTION_39	CALL_24
0x397b	      0xe800000000	                          call 0x40039c0	      1362	am.c	FUNCTION_39	CALL_24
0x3980	              0x90	                                     nop	      1363	am.c	FUNCTION_39
0x3981	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1363	am.c	FUNCTION_39
0x3985	    0x644833042528	                xor rax, qword fs:[0x28]	      1363	am.c	FUNCTION_39
0x398e	            0x7405	                            je 0x40039d5	      1363	am.c	FUNCTION_39
0x3990	      0xe800000000	                          call 0x40039d5	      1363	am.c	FUNCTION_39
0x3995	    0x4881c4880000	                           add rsp, 0x88	      1363	am.c	FUNCTION_39
0x399c	              0x5b	                                 pop rbx	      1363	am.c	FUNCTION_39
0x399d	              0x5d	                                 pop rbp	      1363	am.c	FUNCTION_39
0x399e	              0xc3	                                     ret	      1363	am.c	FUNCTION_39
fall_back_threeway	functions,0:DO,0:WHILE,0:FOR,0:CALL,34:IF,8:SWITCH,0:ELSE,0	200
0x40db	              0x55	                                push rbp	      1537	am.c	FUNCTION_45
0x40dc	          0x4889e5	                            mov rbp, rsp	      1537	am.c	FUNCTION_45
0x40df	              0x53	                                push rbx	      1537	am.c	FUNCTION_45
0x40e0	    0x4881ec580900	                          sub rsp, 0x958	      1537	am.c	FUNCTION_45
0x40e7	    0x4889bda8f6ff	            mov qword [rbp - 0x958], rdi	      1537	am.c	FUNCTION_45
0x40ee	    0x4889b5a0f6ff	            mov qword [rbp - 0x960], rsi	      1537	am.c	FUNCTION_45
0x40f5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1537	am.c	FUNCTION_45
0x40fe	        0x488945e8	             mov qword [rbp - 0x18], rax	      1537	am.c	FUNCTION_45
0x4102	            0x31c0	                            xor eax, eax	      1537	am.c	FUNCTION_45
0x4104	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	      1539	am.c	FUNCTION_45
0x410b	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	      1539	am.c	FUNCTION_45
0x4112	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4119	          0x4889c6	                            mov rsi, rax	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x411c	      0xbf00000000	                              mov edi, 0	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4121	      0xe800000000	                          call 0x4004166	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4126	            0x85c0	                           test eax, eax	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4128	            0x7914	                           jns 0x400417e	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x412a	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      1545	am.c	FUNCTION_45	CALL_2
0x4131	      0xbe00000000	                              mov esi, 0	      1545	am.c	FUNCTION_45	CALL_2
0x4136	          0x4889c7	                            mov rdi, rax	      1545	am.c	FUNCTION_45	CALL_2
0x4139	      0xe85ac1ffff	                        call sym.hashcpy	      1545	am.c	FUNCTION_45	CALL_2
0x413e	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4145	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x414c	          0x4889d6	                            mov rsi, rdx	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x414f	          0x4889c7	                            mov rdi, rax	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4152	      0xe88dfeffff	            call sym.build_fake_ancestor	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4157	            0x85c0	                           test eax, eax	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4159	            0x7419	                            je 0x40041b4	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x415b	      0xbf00000000	                              mov edi, 0	      1548	am.c	FUNCTION_45	CALL_4
0x4160	      0xb800000000	                              mov eax, 0	      1548	am.c	FUNCTION_45	CALL_4
0x4165	      0xe800000000	                          call 0x40041aa	      1548	am.c	FUNCTION_45	CALL_4
0x416a	      0xe8b3beffff	                    call sym.const_error	      1548	am.c	FUNCTION_45	CALL_4
0x416f	      0xe914030000	                           jmp 0x40044c8	      1548	am.c	FUNCTION_45	CALL_4
0x4174	      0xbf00000000	                              mov edi, 0	      1550	am.c	FUNCTION_45	CALL_5
0x4179	      0xe800000000	                          call 0x40041be	      1550	am.c	FUNCTION_45	CALL_5
0x417e	      0xe800000000	                          call 0x40041c3	      1551	am.c	FUNCTION_45	CALL_6
0x4183	          0x4889c2	                            mov rdx, rax	      1551	am.c	FUNCTION_45	CALL_6
0x4186	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      1551	am.c	FUNCTION_45	CALL_6
0x418d	          0x4889c6	                            mov rsi, rax	      1551	am.c	FUNCTION_45	CALL_6
0x4190	      0xbf00000000	                              mov edi, 0	      1551	am.c	FUNCTION_45	CALL_6
0x4195	      0xe800000000	                          call 0x40041da	      1551	am.c	FUNCTION_45	CALL_6
0x419a	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41a1	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41a8	    0x41b800000000	                              mov r8d, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41ae	      0xb900000000	                              mov ecx, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41b3	      0xbe00000000	                              mov esi, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41b8	          0x4889c7	                            mov rdi, rax	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41bb	      0xe800000000	                          call 0x4004200	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41c0	            0x85c0	                           test eax, eax	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41c2	            0x7421	                            je 0x4004225	      1553	am.c	FUNCTION_45	IF_3	CALL_7
0x41c4	      0xbf00000000	                              mov edi, 0	      1554	am.c	FUNCTION_45	CALL_9
0x41c9	      0xe828c0ffff	                               call sym.	      1554	am.c	FUNCTION_45	CALL_9
0x41ce	          0x4889c7	                            mov rdi, rax	      1554	am.c	FUNCTION_45	CALL_9
0x41d1	      0xb800000000	                              mov eax, 0	      1554	am.c	FUNCTION_45	CALL_9
0x41d6	      0xe800000000	                          call 0x400421b	      1554	am.c	FUNCTION_45	CALL_9
0x41db	      0xe842beffff	                    call sym.const_error	      1554	am.c	FUNCTION_45	CALL_9
0x41e0	      0xe9a3020000	                           jmp 0x40044c8	      1554	am.c	FUNCTION_45	CALL_9
0x41e5	      0xbf00000000	                              mov edi, 0	      1556	am.c	FUNCTION_45	CALL_11
0x41ea	      0xe807c0ffff	                               call sym.	      1556	am.c	FUNCTION_45	CALL_11
0x41ef	          0x4889c2	                            mov rdx, rax	      1556	am.c	FUNCTION_45	CALL_11
0x41f2	    0x488b0d000000	            mov rcx, qword [0x04004239] 	      1556	am.c	FUNCTION_45	CALL_11
0x41f9	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1556	am.c	FUNCTION_45	CALL_11
0x4200	          0x4889ce	                            mov rsi, rcx	      1556	am.c	FUNCTION_45	CALL_11
0x4203	          0x4889c7	                            mov rdi, rax	      1556	am.c	FUNCTION_45	CALL_11
0x4206	      0xb800000000	                              mov eax, 0	      1556	am.c	FUNCTION_45	CALL_11
0x420b	      0xe81ac5ffff	                            call sym.say	      1556	am.c	FUNCTION_45	CALL_11
0x4210	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1558	am.c	FUNCTION_45	IF_4
0x4217	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1558	am.c	FUNCTION_45	IF_4
0x421a	            0x85c0	                           test eax, eax	      1558	am.c	FUNCTION_45	IF_4
0x421c	     0xf859e000000	                           jne 0x4004300	      1558	am.c	FUNCTION_45	IF_4
0x4222	    0x48c785b0f6ff	              mov qword [rbp - 0x950], 0	      1564	am.c	FUNCTION_45	IF_4
0x422d	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1566	am.c	FUNCTION_45	IF_4	CALL_12
0x4234	      0xbe00000000	                              mov esi, 0	      1566	am.c	FUNCTION_45	IF_4	CALL_12
0x4239	          0x4889c7	                            mov rdi, rax	      1566	am.c	FUNCTION_45	IF_4	CALL_12
0x423c	      0xe800000000	                          call 0x4004281	      1566	am.c	FUNCTION_45	IF_4	CALL_12
0x4241	    0xc78588fcffff	         mov dword [rbp - 0x378], 0x200 	      1567	am.c	FUNCTION_45	IF_4
0x424b	    0x488b9570f7ff	            mov rdx, qword [rbp - 0x890]	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x4252	    0x488d85b0f6ff	                  lea rax, [rbp - 0x950]	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x4259	    0x488d8d30f7ff	                  lea rcx, [rbp - 0x8d0]	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x4260	    0x488db9f80400	                  lea rdi, [rcx + 0x4f8]	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x4267	          0x4889d1	                            mov rcx, rdx	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x426a	      0xba01000000	                              mov edx, 1	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x426f	          0x4889c6	                            mov rsi, rax	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x4272	      0xe800000000	                          call 0x40042b7	      1568	am.c	FUNCTION_45	IF_4	CALL_13
0x4277	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	      1569	am.c	FUNCTION_45	IF_4	CALL_14
0x427e	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1569	am.c	FUNCTION_45	IF_4	CALL_14
0x4285	      0xb900000000	                              mov ecx, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_14
0x428a	      0xbe00000000	                              mov esi, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_14
0x428f	          0x4889c7	                            mov rdi, rax	      1569	am.c	FUNCTION_45	IF_4	CALL_14
0x4292	      0xe800000000	                          call 0x40042d7	      1569	am.c	FUNCTION_45	IF_4	CALL_14
0x4297	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1570	am.c	FUNCTION_45	IF_4	CALL_15
0x429e	    0x4805f8040000	                          add rax, 0x4f8	      1570	am.c	FUNCTION_45	IF_4	CALL_15
0x42a4	          0x4889c7	                            mov rdi, rax	      1570	am.c	FUNCTION_45	IF_4	CALL_15
0x42a7	      0xe800000000	                          call 0x40042ec	      1570	am.c	FUNCTION_45	IF_4	CALL_15
0x42ac	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1571	am.c	FUNCTION_45	IF_4	CALL_16
0x42b3	      0xbe01000000	                              mov esi, 1	      1571	am.c	FUNCTION_45	IF_4	CALL_16
0x42b8	          0x4889c7	                            mov rdi, rax	      1571	am.c	FUNCTION_45	IF_4	CALL_16
0x42bb	      0xe800000000	                          call 0x4004300	      1571	am.c	FUNCTION_45	IF_4	CALL_16
0x42c0	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1574	am.c	FUNCTION_45	IF_5	CALL_17
0x42c7	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1574	am.c	FUNCTION_45	IF_5	CALL_17
0x42ce	          0x4889d6	                            mov rsi, rdx	      1574	am.c	FUNCTION_45	IF_5	CALL_17
0x42d1	          0x4889c7	                            mov rdi, rax	      1574	am.c	FUNCTION_45	IF_5	CALL_17
0x42d4	      0xe895faffff	                      call sym.run_apply	      1574	am.c	FUNCTION_45	IF_5	CALL_17
0x42d9	            0x85c0	                           test eax, eax	      1574	am.c	FUNCTION_45	IF_5	CALL_17
0x42db	            0x7421	                            je 0x400433e	      1574	am.c	FUNCTION_45	IF_5	CALL_17
0x42dd	      0xbf00000000	                              mov edi, 0	      1575	am.c	FUNCTION_45	IF_5	CALL_19
0x42e2	      0xe80fbfffff	                               call sym.	      1575	am.c	FUNCTION_45	IF_5	CALL_19
0x42e7	          0x4889c7	                            mov rdi, rax	      1575	am.c	FUNCTION_45	IF_5	CALL_19
0x42ea	      0xb800000000	                              mov eax, 0	      1575	am.c	FUNCTION_45	IF_5	CALL_19
0x42ef	      0xe800000000	                          call 0x4004334	      1575	am.c	FUNCTION_45	IF_5	CALL_19
0x42f4	      0xe829bdffff	                    call sym.const_error	      1575	am.c	FUNCTION_45	IF_5	CALL_19
0x42f9	      0xe98a010000	                           jmp 0x40044c8	      1575	am.c	FUNCTION_45	IF_5	CALL_19
0x42fe	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x4305	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x430c	    0x41b800000000	                              mov r8d, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x4312	      0xb900000000	                              mov ecx, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x4317	      0xbe00000000	                              mov esi, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x431c	          0x4889c7	                            mov rdi, rax	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x431f	      0xe800000000	                          call 0x4004364	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x4324	            0x85c0	                           test eax, eax	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x4326	            0x7419	                            je 0x4004381	      1578	am.c	FUNCTION_45	IF_6	CALL_20
0x4328	      0xbf00000000	                              mov edi, 0	      1579	am.c	FUNCTION_45	CALL_21
0x432d	      0xb800000000	                              mov eax, 0	      1579	am.c	FUNCTION_45	CALL_21
0x4332	      0xe800000000	                          call 0x4004377	      1579	am.c	FUNCTION_45	CALL_21
0x4337	      0xe8e6bcffff	                    call sym.const_error	      1579	am.c	FUNCTION_45	CALL_21
0x433c	      0xe947010000	                           jmp 0x40044c8	      1579	am.c	FUNCTION_45	CALL_21
0x4341	      0xbf00000000	                              mov edi, 0	      1581	am.c	FUNCTION_45	CALL_23
0x4346	      0xe8abbeffff	                               call sym.	      1581	am.c	FUNCTION_45	CALL_23
0x434b	          0x4889c2	                            mov rdx, rax	      1581	am.c	FUNCTION_45	CALL_23
0x434e	    0x488b0d000000	            mov rcx, qword [0x04004395] 	      1581	am.c	FUNCTION_45	CALL_23
0x4355	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1581	am.c	FUNCTION_45	CALL_23
0x435c	          0x4889ce	                            mov rsi, rcx	      1581	am.c	FUNCTION_45	CALL_23
0x435f	          0x4889c7	                            mov rdi, rax	      1581	am.c	FUNCTION_45	CALL_23
0x4362	      0xb800000000	                              mov eax, 0	      1581	am.c	FUNCTION_45	CALL_23
0x4367	      0xe8bec3ffff	                            call sym.say	      1581	am.c	FUNCTION_45	CALL_23
0x436c	      0xbf00000000	                              mov edi, 0	      1583	am.c	FUNCTION_45	CALL_24
0x4371	      0xe800000000	                          call 0x40043b6	      1583	am.c	FUNCTION_45	CALL_24
0x4376	      0xbf00000000	                              mov edi, 0	      1584	am.c	FUNCTION_45	CALL_25
0x437b	      0xe800000000	                          call 0x40043c0	      1584	am.c	FUNCTION_45	CALL_25
0x4380	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1594	am.c	FUNCTION_45	CALL_26
0x4387	          0x4889c7	                            mov rdi, rax	      1594	am.c	FUNCTION_45	CALL_26
0x438a	      0xe800000000	                          call 0x40043cf	      1594	am.c	FUNCTION_45	CALL_26
0x438f	    0x48c78538f7ff	              mov qword [rbp - 0x8c8], 0	      1596	am.c	FUNCTION_45
0x439a	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1597	am.c	FUNCTION_45	CALL_28
0x43a1	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1597	am.c	FUNCTION_45	CALL_28
0x43a5	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1597	am.c	FUNCTION_45	CALL_28
0x43ac	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1597	am.c	FUNCTION_45	CALL_28
0x43b0	          0x4889c7	                            mov rdi, rax	      1597	am.c	FUNCTION_45	CALL_28
0x43b3	      0xe8b1c0ffff	                        call sym.linelen	      1597	am.c	FUNCTION_45	CALL_28
0x43b8	          0x4889da	                            mov rdx, rbx	      1597	am.c	FUNCTION_45	CALL_28
0x43bb	            0x89c6	                            mov esi, eax	      1597	am.c	FUNCTION_45	CALL_28
0x43bd	      0xbf00000000	                              mov edi, 0	      1597	am.c	FUNCTION_45	CALL_28
0x43c2	      0xb800000000	                              mov eax, 0	      1597	am.c	FUNCTION_45	CALL_28
0x43c7	      0xe800000000	                          call 0x400440c	      1597	am.c	FUNCTION_45	CALL_28
0x43cc	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	      1597	am.c	FUNCTION_45	CALL_28
0x43d3	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1598	am.c	FUNCTION_45
0x43da	    0x48898540f7ff	            mov qword [rbp - 0x8c0], rax	      1598	am.c	FUNCTION_45
0x43e1	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1600	am.c	FUNCTION_45	IF_7
0x43e8	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1600	am.c	FUNCTION_45	IF_7
0x43eb	            0x85c0	                           test eax, eax	      1600	am.c	FUNCTION_45	IF_7
0x43ed	            0x740a	                            je 0x4004439	      1600	am.c	FUNCTION_45	IF_7
0x43ef	    0xc78568f7ffff	              mov dword [rbp - 0x898], 0	      1601	am.c	FUNCTION_45	IF_7
0x43f9	    0x488dbdb0f6ff	                  lea rdi, [rbp - 0x950]	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x4400	    0x488d8dc0f6ff	                  lea rcx, [rbp - 0x940]	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x4407	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x440e	    0x488db510f7ff	                  lea rsi, [rbp - 0x8f0]	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x4415	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x441c	          0x4989f9	                             mov r9, rdi	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x441f	          0x4989c8	                             mov r8, rcx	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x4422	      0xb901000000	                              mov ecx, 1	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x4427	          0x4889c7	                            mov rdi, rax	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x442a	      0xe800000000	                          call 0x400446f	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x442f	            0x85c0	                           test eax, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x4431	            0x7441	                            je 0x40044b4	      1603	am.c	FUNCTION_45	IF_8	CALL_29
0x4433	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1604	am.c	FUNCTION_45	IF_8	CALL_30
0x443a	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1604	am.c	FUNCTION_45	IF_8	CALL_30
0x4440	            0x89c7	                            mov edi, eax	      1604	am.c	FUNCTION_45	IF_8	CALL_30
0x4442	      0xe800000000	                          call 0x4004487	      1604	am.c	FUNCTION_45	IF_8	CALL_30
0x4447	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1605	am.c	FUNCTION_45	IF_8	CALL_31
0x444e	          0x4889c7	                            mov rdi, rax	      1605	am.c	FUNCTION_45	IF_8	CALL_31
0x4451	      0xe800000000	                          call 0x4004496	      1605	am.c	FUNCTION_45	IF_8	CALL_31
0x4456	      0xbf00000000	                              mov edi, 0	      1606	am.c	FUNCTION_45	IF_8	CALL_33
0x445b	      0xe896bdffff	                               call sym.	      1606	am.c	FUNCTION_45	IF_8	CALL_33
0x4460	          0x4889c7	                            mov rdi, rax	      1606	am.c	FUNCTION_45	IF_8	CALL_33
0x4463	      0xb800000000	                              mov eax, 0	      1606	am.c	FUNCTION_45	IF_8	CALL_33
0x4468	      0xe800000000	                          call 0x40044ad	      1606	am.c	FUNCTION_45	IF_8	CALL_33
0x446d	      0xe8b0bbffff	                    call sym.const_error	      1606	am.c	FUNCTION_45	IF_8	CALL_33
0x4472	            0xeb14	                           jmp 0x40044c8	      1606	am.c	FUNCTION_45	IF_8	CALL_33
0x4474	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1609	am.c	FUNCTION_45	CALL_34
0x447b	          0x4889c7	                            mov rdi, rax	      1609	am.c	FUNCTION_45	CALL_34
0x447e	      0xe800000000	                          call 0x40044c3	      1609	am.c	FUNCTION_45	CALL_34
0x4483	      0xb800000000	                              mov eax, 0	      1610	am.c	FUNCTION_45
0x4488	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1611	am.c	FUNCTION_45
0x448c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1611	am.c	FUNCTION_45
0x4495	            0x7405	                            je 0x40044dc	      1611	am.c	FUNCTION_45
0x4497	      0xe800000000	                          call 0x40044dc	      1611	am.c	FUNCTION_45
0x449c	    0x4881c4580900	                          add rsp, 0x958	      1611	am.c	FUNCTION_45
0x44a3	              0x5b	                                 pop rbx	      1611	am.c	FUNCTION_45
0x44a4	              0x5d	                                 pop rbp	      1611	am.c	FUNCTION_45
0x44a5	              0xc3	                                     ret	      1611	am.c	FUNCTION_45
rollback_lock_file	functions,0:DO,0:WHILE,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0	10
0x3b6	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_110
0x3b7	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_110
0x3ba	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_110
0x3be	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_110
0x3c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_110	CALL_1
0x3c6	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_110	CALL_1
0x3c9	      0xe800000000	                          call 0x400040e	       304	lockfile.h	FUNCTION_110	CALL_1
0x3ce	              0x90	                                     nop	       305	lockfile.h	FUNCTION_110
0x3cf	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_110
0x3d0	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_110
run_post_rewrite_hook	functions,0:DO,0:WHILE,0:FOR,0:CALL,7:IF,1:SWITCH,0:ELSE,0	58
0x1525	              0x55	                                push rbp	       509	am.c	FUNCTION_21
0x1526	          0x4889e5	                            mov rbp, rsp	       509	am.c	FUNCTION_21
0x1529	    0x4881ec900000	                           sub rsp, 0x90	       509	am.c	FUNCTION_21
0x1530	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       509	am.c	FUNCTION_21
0x1537	    0x64488b042528	                mov rax, qword fs:[0x28]	       509	am.c	FUNCTION_21
0x1540	        0x488945f8	                mov qword [rbp - 8], rax	       509	am.c	FUNCTION_21
0x1544	            0x31c0	                            xor eax, eax	       509	am.c	FUNCTION_21
0x1546	        0x488d5590	                   lea rdx, [rbp - 0x70]	       510	am.c	FUNCTION_21
0x154a	      0xb800000000	                              mov eax, 0	       510	am.c	FUNCTION_21
0x154f	      0xb90c000000	                            mov ecx, 0xc	       510	am.c	FUNCTION_21
0x1554	          0x4889d7	                            mov rdi, rdx	       510	am.c	FUNCTION_21
0x1557	          0xf348ab	              rep stosq qword [rdi], rax	       510	am.c	FUNCTION_21
0x155a	    0x48c745980000	               mov qword [rbp - 0x68], 0	       510	am.c	FUNCTION_21
0x1562	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       510	am.c	FUNCTION_21
0x156a	      0xbf00000000	                              mov edi, 0	       511	am.c	FUNCTION_21	CALL_1
0x156f	      0xe800000000	                          call 0x40015b4	       511	am.c	FUNCTION_21	CALL_1
0x1574	        0x48894588	             mov qword [rbp - 0x78], rax	       511	am.c	FUNCTION_21	CALL_1
0x1578	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       514	am.c	FUNCTION_21	IF_1
0x157d	            0x7507	                           jne 0x40015c6	       514	am.c	FUNCTION_21	IF_1
0x157f	      0xb800000000	                              mov eax, 0	       515	am.c	FUNCTION_21	IF_1
0x1584	            0xeb7b	                           jmp 0x4001641	       515	am.c	FUNCTION_21	IF_1
0x1586	        0x488b4588	             mov rax, qword [rbp - 0x78]	       517	am.c	FUNCTION_21	CALL_2
0x158a	        0x488d5590	                   lea rdx, [rbp - 0x70]	       517	am.c	FUNCTION_21	CALL_2
0x158e	        0x4883c208	                              add rdx, 8	       517	am.c	FUNCTION_21	CALL_2
0x1592	          0x4889c6	                            mov rsi, rax	       517	am.c	FUNCTION_21	CALL_2
0x1595	          0x4889d7	                            mov rdi, rdx	       517	am.c	FUNCTION_21	CALL_2
0x1598	      0xe800000000	                          call 0x40015dd	       517	am.c	FUNCTION_21	CALL_2
0x159d	        0x488d4590	                   lea rax, [rbp - 0x70]	       518	am.c	FUNCTION_21	CALL_3
0x15a1	        0x4883c008	                              add rax, 8	       518	am.c	FUNCTION_21	CALL_3
0x15a5	      0xbe00000000	                              mov esi, 0	       518	am.c	FUNCTION_21	CALL_3
0x15aa	          0x4889c7	                            mov rdi, rax	       518	am.c	FUNCTION_21	CALL_3
0x15ad	      0xe800000000	                          call 0x40015f2	       518	am.c	FUNCTION_21	CALL_3
0x15b2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       520	am.c	FUNCTION_21	CALL_5
0x15b9	      0xbe00000000	                              mov esi, 0	       520	am.c	FUNCTION_21	CALL_5
0x15be	          0x4889c7	                            mov rdi, rax	       520	am.c	FUNCTION_21	CALL_5
0x15c1	      0xe871f0ffff	                        call sym.am_path	       520	am.c	FUNCTION_21	CALL_5
0x15c6	      0xbe00000000	                              mov esi, 0	       520	am.c	FUNCTION_21	CALL_5
0x15cb	          0x4889c7	                            mov rdi, rax	       520	am.c	FUNCTION_21	CALL_5
0x15ce	      0xb800000000	                              mov eax, 0	       520	am.c	FUNCTION_21	CALL_5
0x15d3	      0xe800000000	                          call 0x4001618	       520	am.c	FUNCTION_21	CALL_5
0x15d8	          0x8945bc	             mov dword [rbp - 0x44], eax	       520	am.c	FUNCTION_21	CALL_5
0x15db	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       521	am.c	FUNCTION_21
0x15df	          0x83c820	                            or eax, 0x20	       521	am.c	FUNCTION_21
0x15e2	          0x8845d8	               mov byte [rbp - 0x28], al	       521	am.c	FUNCTION_21
0x15e5	        0x488d4590	                   lea rax, [rbp - 0x70]	       523	am.c	FUNCTION_21	CALL_6
0x15e9	          0x4889c7	                            mov rdi, rax	       523	am.c	FUNCTION_21	CALL_6
0x15ec	      0xe800000000	                          call 0x4001631	       523	am.c	FUNCTION_21	CALL_6
0x15f1	          0x894584	             mov dword [rbp - 0x7c], eax	       523	am.c	FUNCTION_21	CALL_6
0x15f4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       525	am.c	FUNCTION_21	CALL_7
0x15f7	            0x89c7	                            mov edi, eax	       525	am.c	FUNCTION_21	CALL_7
0x15f9	      0xe800000000	                          call 0x400163e	       525	am.c	FUNCTION_21	CALL_7
0x15fe	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       526	am.c	FUNCTION_21
0x1601	        0x488b4df8	                mov rcx, qword [rbp - 8]	       527	am.c	FUNCTION_21
0x1605	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       527	am.c	FUNCTION_21
0x160e	            0x7405	                            je 0x4001655	       527	am.c	FUNCTION_21
0x1610	      0xe800000000	                          call 0x4001655	       527	am.c	FUNCTION_21
0x1615	              0xc9	                                   leave	       527	am.c	FUNCTION_21
0x1616	              0xc3	                                     ret	       527	am.c	FUNCTION_21
am_state_init	functions,0:DO,0:WHILE,0:FOR,0:CALL,6:IF,1:SWITCH,0:ELSE,0	59
0x4da	              0x55	                                push rbp	       142	am.c	FUNCTION_4
0x4db	          0x4889e5	                            mov rbp, rsp	       142	am.c	FUNCTION_4
0x4de	        0x4883ec20	                           sub rsp, 0x20	       142	am.c	FUNCTION_4
0x4e2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       142	am.c	FUNCTION_4
0x4e6	    0x64488b042528	                mov rax, qword fs:[0x28]	       142	am.c	FUNCTION_4
0x4ef	        0x488945f8	                mov qword [rbp - 8], rax	       142	am.c	FUNCTION_4
0x4f3	            0x31c0	                            xor eax, eax	       142	am.c	FUNCTION_4
0x4f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	am.c	FUNCTION_4	CALL_1
0x4f9	      0xbaa8000000	                           mov edx, 0xa8	       145	am.c	FUNCTION_4	CALL_1
0x4fe	      0xbe00000000	                              mov esi, 0	       145	am.c	FUNCTION_4	CALL_1
0x503	          0x4889c7	                            mov rdi, rax	       145	am.c	FUNCTION_4	CALL_1
0x506	      0xe800000000	                          call 0x400054b	       145	am.c	FUNCTION_4	CALL_1
0x50b	      0xbf00000000	                              mov edi, 0	       147	am.c	FUNCTION_4	CALL_2
0x510	      0xb800000000	                              mov eax, 0	       147	am.c	FUNCTION_4	CALL_2
0x515	      0xe800000000	                          call 0x400055a	       147	am.c	FUNCTION_4	CALL_2
0x51a	          0x4889c2	                            mov rdx, rax	       147	am.c	FUNCTION_4	CALL_2
0x51d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	am.c	FUNCTION_4	CALL_2
0x521	          0x488910	                    mov qword [rax], rdx	       147	am.c	FUNCTION_4	CALL_2
0x524	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	am.c	FUNCTION_4
0x528	    0xc7404c040000	               mov dword [rax + 0x4c], 4	       149	am.c	FUNCTION_4
0x52f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	am.c	FUNCTION_4	CALL_3
0x533	        0x4883c054	                           add rax, 0x54	       151	am.c	FUNCTION_4	CALL_3
0x537	          0x4889c6	                            mov rsi, rax	       151	am.c	FUNCTION_4	CALL_3
0x53a	      0xbf00000000	                              mov edi, 0	       151	am.c	FUNCTION_4	CALL_3
0x53f	      0xe800000000	                          call 0x4000584	       151	am.c	FUNCTION_4	CALL_3
0x544	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	am.c	FUNCTION_4
0x548	    0xc74060010000	               mov dword [rax + 0x60], 1	       153	am.c	FUNCTION_4
0x54f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	am.c	FUNCTION_4	CALL_4
0x553	        0x4883c068	                           add rax, 0x68	       155	am.c	FUNCTION_4	CALL_4
0x557	          0x4889c6	                            mov rsi, rax	       155	am.c	FUNCTION_4	CALL_4
0x55a	      0xbf00000000	                              mov edi, 0	       155	am.c	FUNCTION_4	CALL_4
0x55f	      0xe800000000	                          call 0x40005a4	       155	am.c	FUNCTION_4	CALL_4
0x564	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	am.c	FUNCTION_4
0x568	    0xc7406cffffff	     mov dword [rax + 0x6c], 0xffffffff 	       157	am.c	FUNCTION_4
0x56f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	am.c	FUNCTION_4	CALL_5
0x573	        0x4883c070	                           add rax, 0x70	       159	am.c	FUNCTION_4	CALL_5
0x577	          0x4889c7	                            mov rdi, rax	       159	am.c	FUNCTION_4	CALL_5
0x57a	      0xe800000000	                          call 0x40005bf	       159	am.c	FUNCTION_4	CALL_5
0x57f	        0x488d45f4	                    lea rax, [rbp - 0xc]	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x583	          0x4889c6	                            mov rsi, rax	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x586	      0xbf00000000	                              mov edi, 0	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x58b	      0xe800000000	                          call 0x40005d0	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x590	            0x85c0	                           test eax, eax	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x592	            0x751e	                           jne 0x40005f2	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x594	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       162	am.c	FUNCTION_4	IF_1
0x597	            0x85c0	                           test eax, eax	       162	am.c	FUNCTION_4	IF_1
0x599	            0x7407	                            je 0x40005e2	       162	am.c	FUNCTION_4	IF_1
0x59b	      0xba00000000	                              mov edx, 0	       162	am.c	FUNCTION_4	IF_1
0x5a0	            0xeb05	                           jmp 0x40005e7	       162	am.c	FUNCTION_4	IF_1
0x5a2	      0xba00000000	                              mov edx, 0	       162	am.c	FUNCTION_4	IF_1
0x5a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	am.c	FUNCTION_4	IF_1
0x5ab	    0x488990980000	             mov qword [rax + 0x98], rdx	       162	am.c	FUNCTION_4	IF_1
0x5b2	              0x90	                                     nop	       163	am.c	FUNCTION_4
0x5b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       163	am.c	FUNCTION_4
0x5b7	    0x644833042528	                xor rax, qword fs:[0x28]	       163	am.c	FUNCTION_4
0x5c0	            0x7405	                            je 0x4000607	       163	am.c	FUNCTION_4
0x5c2	      0xe800000000	                          call 0x4000607	       163	am.c	FUNCTION_4
0x5c7	              0xc9	                                   leave	       163	am.c	FUNCTION_4
0x5c8	              0xc3	                                     ret	       163	am.c	FUNCTION_4
strbuf_setlen	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,2:SWITCH,0:ELSE,1	43
0xb9	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_91
0xba	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_91
0xbd	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_91
0xc1	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_91
0xc5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_91
0xc9	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_91	IF_1
0xcd	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_91	IF_1
0xd0	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_91	IF_1
0xd3	            0x740d	                            je 0x4000122	       162	strbuf.h	FUNCTION_91	IF_1
0xd5	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_91	IF_1
0xd9	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_91	IF_1
0xdc	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_91	IF_1
0xe0	            0xeb05	                           jmp 0x4000127	       162	strbuf.h	FUNCTION_91	IF_1
0xe2	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_91	IF_1
0xe7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_91	IF_1
0xeb	            0x730f	                           jae 0x400013c	       162	strbuf.h	FUNCTION_91	IF_1
0xed	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_91	CALL_1
0xf2	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_91	CALL_1
0xf7	      0xe800000000	                          call 0x400013c	       163	strbuf.h	FUNCTION_91	CALL_1
0xfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_91
0x100	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_91
0x104	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_91
0x108	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_91	IF_2
0x10c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_91	IF_2
0x110	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_91	IF_2
0x116	            0x7414	                            je 0x400016c	       165	strbuf.h	FUNCTION_91	IF_2
0x118	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_91	IF_2
0x11c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_91	IF_2
0x120	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_91	IF_2
0x124	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_91	IF_2
0x127	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_91	IF_2
0x12a	            0xeb24	                           jmp 0x4000190	       169	strbuf.h	FUNCTION_91
0x12c	     0xfb605000000	           movzx eax, byte [0x04000173] 	       168	strbuf.h	FUNCTION_91	CALL_2
0x133	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_91	CALL_2
0x135	            0x7419	                            je 0x4000190	       168	strbuf.h	FUNCTION_91	CALL_2
0x137	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_91	CALL_2
0x13c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_91	CALL_2
0x141	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_91	CALL_2
0x146	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_91	CALL_2
0x14b	      0xe800000000	                          call 0x4000190	       168	strbuf.h	FUNCTION_91	CALL_2
0x150	              0x90	                                     nop	       169	strbuf.h	FUNCTION_91
0x151	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_91
0x152	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_91
do_interactive	functions,0:DO,0:WHILE,0:FOR,1:CALL,21:IF,9:SWITCH,0:ELSE,5	167
0x4907	              0x55	                                push rbp	      1699	am.c	FUNCTION_48
0x4908	          0x4889e5	                            mov rbp, rsp	      1699	am.c	FUNCTION_48
0x490b	    0x4881ec900000	                           sub rsp, 0x90	      1699	am.c	FUNCTION_48
0x4912	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1699	am.c	FUNCTION_48
0x4919	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	am.c	FUNCTION_48
0x4922	        0x488945f8	                mov qword [rbp - 8], rax	      1699	am.c	FUNCTION_48
0x4926	            0x31c0	                            xor eax, eax	      1699	am.c	FUNCTION_48
0x4928	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1700	am.c	FUNCTION_48	CALL_1
0x492f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1700	am.c	FUNCTION_48	CALL_1
0x4933	          0x4885c0	                           test rax, rax	      1700	am.c	FUNCTION_48	CALL_1
0x4936	            0x7519	                           jne 0x4004991	      1700	am.c	FUNCTION_48	CALL_1
0x4938	      0xb900000000	                              mov ecx, 0	      1700	am.c	FUNCTION_48	CALL_1
0x493d	      0xbaa4060000	                          mov edx, 0x6a4	      1700	am.c	FUNCTION_48	CALL_1
0x4942	      0xbe00000000	                              mov esi, 0	      1700	am.c	FUNCTION_48	CALL_1
0x4947	      0xbf00000000	                              mov edi, 0	      1700	am.c	FUNCTION_48	CALL_1
0x494c	      0xe800000000	                          call 0x4004991	      1700	am.c	FUNCTION_48	CALL_1
0x4951	      0xbf00000000	                              mov edi, 0	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x4956	      0xe800000000	                          call 0x400499b	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x495b	            0x85c0	                           test eax, eax	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x495d	            0x7517	                           jne 0x40049b6	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x495f	      0xbf00000000	                              mov edi, 0	      1703	am.c	FUNCTION_48	CALL_4
0x4964	      0xe88db8ffff	                               call sym.	      1703	am.c	FUNCTION_48	CALL_4
0x4969	          0x4889c7	                            mov rdi, rax	      1703	am.c	FUNCTION_48	CALL_4
0x496c	      0xb800000000	                              mov eax, 0	      1703	am.c	FUNCTION_48	CALL_4
0x4971	      0xe800000000	                          call 0x40049b6	      1703	am.c	FUNCTION_48	CALL_4
0x4976	      0xbf00000000	                              mov edi, 0	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x497b	      0xe876b8ffff	                               call sym.	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x4980	          0x4889c7	                            mov rdi, rax	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x4983	      0xe800000000	                          call 0x40049c8	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x4988	      0xbf00000000	                              mov edi, 0	      1709	am.c	FUNCTION_48	FOR_1	CALL_7
0x498d	      0xe800000000	                          call 0x40049d2	      1709	am.c	FUNCTION_48	FOR_1	CALL_7
0x4992	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x4999	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x499d	          0x4889c6	                            mov rsi, rax	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x49a0	      0xbf00000000	                              mov edi, 0	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x49a5	      0xb800000000	                              mov eax, 0	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x49aa	      0xe800000000	                          call 0x40049ef	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x49af	      0xbf00000000	                              mov edi, 0	      1711	am.c	FUNCTION_48	FOR_1	CALL_9
0x49b4	      0xe800000000	                          call 0x40049f9	      1711	am.c	FUNCTION_48	FOR_1	CALL_9
0x49b9	      0xbf00000000	                              mov edi, 0	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x49be	      0xe833b8ffff	                               call sym.	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x49c3	      0xbe02000000	                              mov esi, 2	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x49c8	          0x4889c7	                            mov rdi, rax	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x49cb	      0xe800000000	                          call 0x4004a10	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x49d0	        0x48894588	             mov qword [rbp - 0x78], rax	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x49d4	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1720	am.c	FUNCTION_48	FOR_1	IF_2
0x49d9	     0xf84c4010000	                            je 0x4004be3	      1720	am.c	FUNCTION_48	FOR_1	IF_2
0x49df	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49e3	           0xfb600	                   movzx eax, byte [rax]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49e6	            0x3c79	                            cmp al, 0x79	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49e8	            0x740b	                            je 0x4004a35	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49ea	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49ee	           0xfb600	                   movzx eax, byte [rax]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49f1	            0x3c59	                            cmp al, 0x59	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49f3	            0x750a	                           jne 0x4004a3f	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49f5	      0xb800000000	                              mov eax, 0	      1723	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49fa	      0xe9aa010000	                           jmp 0x4004be9	      1723	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x49ff	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a03	           0xfb600	                   movzx eax, byte [rax]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a06	            0x3c61	                            cmp al, 0x61	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a08	            0x740b	                            je 0x4004a55	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a0a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a0e	           0xfb600	                   movzx eax, byte [rax]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a11	            0x3c41	                            cmp al, 0x41	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a13	            0x7518	                           jne 0x4004a6d	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a15	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1725	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a1c	    0xc74050000000	               mov dword [rax + 0x50], 0	      1725	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a23	      0xb800000000	                              mov eax, 0	      1726	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a28	      0xe97c010000	                           jmp 0x4004be9	      1726	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4a2d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a31	           0xfb600	                   movzx eax, byte [rax]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a34	            0x3c6e	                            cmp al, 0x6e	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a36	            0x740b	                            je 0x4004a83	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a38	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a3c	           0xfb600	                   movzx eax, byte [rax]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a3f	            0x3c4e	                            cmp al, 0x4e	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a41	            0x750a	                           jne 0x4004a8d	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a43	      0xb801000000	                              mov eax, 1	      1728	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a48	      0xe95c010000	                           jmp 0x4004be9	      1728	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4a4d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a51	           0xfb600	                   movzx eax, byte [rax]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a54	            0x3c65	                            cmp al, 0x65	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a56	            0x740f	                            je 0x4004aa7	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a58	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a5c	           0xfb600	                   movzx eax, byte [rax]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a5f	            0x3c45	                            cmp al, 0x45	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a61	     0xf8593000000	                           jne 0x4004b3a	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a67	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a6f	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a77	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4a7f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4a86	      0xbe00000000	                              mov esi, 0	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4a8b	          0x4889c7	                            mov rdi, rax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4a8e	      0xe8a4bbffff	                        call sym.am_path	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4a93	          0x4889c1	                            mov rcx, rax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4a96	        0x488d4590	                   lea rax, [rbp - 0x70]	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4a9a	      0xba00000000	                              mov edx, 0	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4a9f	          0x4889c6	                            mov rsi, rax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4aa2	          0x4889cf	                            mov rdi, rcx	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4aa5	      0xe800000000	                          call 0x4004aea	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4aaa	            0x85c0	                           test eax, eax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4aac	            0x753b	                           jne 0x4004b29	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4aae	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4ab5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4ab9	          0x4889c7	                            mov rdi, rax	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4abc	      0xe800000000	                          call 0x4004b01	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4ac1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4ac8	        0x488d5030	                   lea rdx, [rax + 0x30]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4acc	        0x488d4590	                   lea rax, [rbp - 0x70]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4ad0	          0x4889d6	                            mov rsi, rdx	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4ad3	          0x4889c7	                            mov rdi, rax	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4ad6	      0xe800000000	                          call 0x4004b1b	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4adb	          0x4889c2	                            mov rdx, rax	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4ade	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4ae5	        0x48895028	             mov qword [rax + 0x28], rdx	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4ae9	        0x488d4590	                   lea rax, [rbp - 0x70]	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_16
0x4aed	          0x4889c7	                            mov rdi, rax	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_16
0x4af0	      0xe800000000	                          call 0x4004b35	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_16
0x4af5	      0xe9aa000000	                           jmp 0x4004be4	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4afa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4afe	           0xfb600	                   movzx eax, byte [rax]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b01	            0x3c76	                            cmp al, 0x76	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b03	            0x740f	                            je 0x4004b54	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b05	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b09	           0xfb600	                   movzx eax, byte [rax]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b0c	            0x3c56	                            cmp al, 0x56	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b0e	     0xf8562feffff	                           jne 0x40049b6	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b14	      0xbf01000000	                              mov edi, 1	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4b19	      0xe800000000	                          call 0x4004b5e	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4b1e	        0x48894580	             mov qword [rbp - 0x80], rax	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4b22	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b26	      0xb800000000	                              mov eax, 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b2b	      0xb90c000000	                            mov ecx, 0xc	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b30	          0x4889d7	                            mov rdi, rdx	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b33	          0xf348ab	              rep stosq qword [rdi], rax	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b36	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b3e	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4b46	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1741	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4b4b	            0x7508	                           jne 0x4004b95	      1741	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4b4d	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1742	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4b55	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4b59	        0x488d4590	                   lea rax, [rbp - 0x70]	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4b5d	          0x4889d6	                            mov rsi, rdx	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4b60	          0x4889c7	                            mov rdi, rax	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4b63	      0xe800000000	                          call 0x4004ba8	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4b68	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b6f	      0xbe00000000	                              mov esi, 0	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b74	          0x4889c7	                            mov rdi, rax	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b77	      0xe8bbbaffff	                        call sym.am_path	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b7c	          0x4889c2	                            mov rdx, rax	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b7f	        0x488d4590	                   lea rax, [rbp - 0x70]	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b83	        0x4883c008	                              add rax, 8	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b87	          0x4889d6	                            mov rsi, rdx	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b8a	          0x4889c7	                            mov rdi, rax	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b8d	      0xe800000000	                          call 0x4004bd2	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4b92	        0x488d4590	                   lea rax, [rbp - 0x70]	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4b96	          0x4889c7	                            mov rdi, rax	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4b99	      0xe800000000	                          call 0x4004bde	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4b9e	      0xe9d3fdffff	                           jmp 0x40049b6	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4ba3	              0x90	                                     nop	      1721	am.c	FUNCTION_48	FOR_1	IF_2
0x4ba4	      0xe9cdfdffff	                           jmp 0x40049b6	      1747	am.c	FUNCTION_48	FOR_1
0x4ba9	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1748	am.c	FUNCTION_48
0x4bad	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1748	am.c	FUNCTION_48
0x4bb6	            0x7405	                            je 0x4004bfd	      1748	am.c	FUNCTION_48
0x4bb8	      0xe800000000	                          call 0x4004bfd	      1748	am.c	FUNCTION_48
0x4bbd	              0xc9	                                   leave	      1748	am.c	FUNCTION_48
0x4bbe	              0xc3	                                     ret	      1748	am.c	FUNCTION_48
safe_to_abort	functions,0:DO,0:WHILE,0:FOR,0:CALL,14:IF,5:SWITCH,0:ELSE,1	85
0x581b	              0x55	                                push rbp	      2063	am.c	FUNCTION_56
0x581c	          0x4889e5	                            mov rbp, rsp	      2063	am.c	FUNCTION_56
0x581f	              0x53	                                push rbx	      2063	am.c	FUNCTION_56
0x5820	        0x4883ec78	                           sub rsp, 0x78	      2063	am.c	FUNCTION_56
0x5824	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2063	am.c	FUNCTION_56
0x5828	    0x64488b042528	                mov rax, qword fs:[0x28]	      2063	am.c	FUNCTION_56
0x5831	        0x488945e8	             mov qword [rbp - 0x18], rax	      2063	am.c	FUNCTION_56
0x5835	            0x31c0	                            xor eax, eax	      2063	am.c	FUNCTION_56
0x5837	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2064	am.c	FUNCTION_56
0x583f	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2064	am.c	FUNCTION_56
0x5847	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2064	am.c	FUNCTION_56
0x584f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x5853	      0xbe00000000	                              mov esi, 0	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x5858	          0x4889c7	                            mov rdi, rax	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x585b	      0xe8d7adffff	                        call sym.am_path	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x5860	          0x4889c7	                            mov rdi, rax	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x5863	      0xe800000000	                          call 0x40058a8	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x5868	            0x85c0	                           test eax, eax	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x586a	            0x740a	                            je 0x40058b6	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x586c	      0xb800000000	                              mov eax, 0	      2068	am.c	FUNCTION_56	IF_1
0x5871	      0xe9d6000000	                           jmp 0x400598c	      2068	am.c	FUNCTION_56	IF_1
0x5876	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x587a	        0x488d4590	                   lea rax, [rbp - 0x70]	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x587e	      0xb901000000	                              mov ecx, 1	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x5883	      0xba00000000	                              mov edx, 0	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x5888	          0x4889c7	                            mov rdi, rax	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x588b	      0xe892b0ffff	                call sym.read_state_file	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x5890	            0x85c0	                           test eax, eax	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x5892	            0x7e45	                           jle 0x4005919	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x5894	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x5898	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x589c	          0x4889d6	                            mov rsi, rdx	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x589f	          0x4889c7	                            mov rdi, rax	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x58a2	      0xe800000000	                          call 0x40058e7	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x58a7	            0x85c0	                           test eax, eax	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x58a9	            0x743a	                            je 0x4005925	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x58ab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58af	      0xbe00000000	                              mov esi, 0	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58b4	          0x4889c7	                            mov rdi, rax	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58b7	      0xe87badffff	                        call sym.am_path	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58bc	          0x4889c3	                            mov rbx, rax	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58bf	      0xbf00000000	                              mov edi, 0	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58c4	      0xe82da9ffff	                               call sym.	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58c9	          0x4889de	                            mov rsi, rbx	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58cc	          0x4889c7	                            mov rdi, rax	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58cf	      0xb800000000	                              mov eax, 0	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58d4	      0xe800000000	                          call 0x4005919	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x58d9	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2074	am.c	FUNCTION_56	CALL_8
0x58dd	          0x4889c7	                            mov rdi, rax	      2074	am.c	FUNCTION_56	CALL_8
0x58e0	      0xe804aaffff	                         call sym.oidclr	      2074	am.c	FUNCTION_56	CALL_8
0x58e5	        0x488d4590	                   lea rax, [rbp - 0x70]	      2075	am.c	FUNCTION_56	CALL_9
0x58e9	          0x4889c7	                            mov rdi, rax	      2075	am.c	FUNCTION_56	CALL_9
0x58ec	      0xe800000000	                          call 0x4005931	      2075	am.c	FUNCTION_56	CALL_9
0x58f1	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x58f5	          0x4889c6	                            mov rsi, rax	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x58f8	      0xbf00000000	                              mov edi, 0	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x58fd	      0xe800000000	                          call 0x4005942	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x5902	            0x85c0	                           test eax, eax	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x5904	            0x740c	                            je 0x4005952	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x5906	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2078	am.c	FUNCTION_56	CALL_11
0x590a	          0x4889c7	                            mov rdi, rax	      2078	am.c	FUNCTION_56	CALL_11
0x590d	      0xe8d7a9ffff	                         call sym.oidclr	      2078	am.c	FUNCTION_56	CALL_11
0x5912	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x5916	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x591a	          0x4889d6	                            mov rsi, rdx	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x591d	          0x4889c7	                            mov rdi, rax	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x5920	      0xe827a9ffff	                         call sym.oidcmp	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x5925	            0x85c0	                           test eax, eax	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x5927	            0x7507	                           jne 0x4005970	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x5929	      0xb801000000	                              mov eax, 1	      2081	am.c	FUNCTION_56	IF_5
0x592e	            0xeb1c	                           jmp 0x400598c	      2081	am.c	FUNCTION_56	IF_5
0x5930	      0xbf00000000	                              mov edi, 0	      2083	am.c	FUNCTION_56	CALL_14
0x5935	      0xe8bca8ffff	                               call sym.	      2083	am.c	FUNCTION_56	CALL_14
0x593a	          0x4889c7	                            mov rdi, rax	      2083	am.c	FUNCTION_56	CALL_14
0x593d	      0xb800000000	                              mov eax, 0	      2083	am.c	FUNCTION_56	CALL_14
0x5942	      0xe800000000	                          call 0x4005987	      2083	am.c	FUNCTION_56	CALL_14
0x5947	      0xb800000000	                              mov eax, 0	      2086	am.c	FUNCTION_56
0x594c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2087	am.c	FUNCTION_56
0x5950	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2087	am.c	FUNCTION_56
0x5959	            0x7405	                            je 0x40059a0	      2087	am.c	FUNCTION_56
0x595b	      0xe800000000	                          call 0x40059a0	      2087	am.c	FUNCTION_56
0x5960	        0x4883c478	                           add rsp, 0x78	      2087	am.c	FUNCTION_56
0x5964	              0x5b	                                 pop rbx	      2087	am.c	FUNCTION_56
0x5965	              0x5d	                                 pop rbp	      2087	am.c	FUNCTION_56
0x5966	              0xc3	                                     ret	      2087	am.c	FUNCTION_56
read_state_file	functions,0:DO,0:WHILE,0:FOR,0:CALL,7:IF,3:SWITCH,0:ELSE,0	55
0x922	              0x55	                                push rbp	       246	am.c	FUNCTION_12
0x923	          0x4889e5	                            mov rbp, rsp	       246	am.c	FUNCTION_12
0x926	              0x53	                                push rbx	       246	am.c	FUNCTION_12
0x927	        0x4883ec28	                           sub rsp, 0x28	       246	am.c	FUNCTION_12
0x92b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	am.c	FUNCTION_12
0x92f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       246	am.c	FUNCTION_12
0x933	        0x488955d8	             mov qword [rbp - 0x28], rdx	       246	am.c	FUNCTION_12
0x937	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       246	am.c	FUNCTION_12
0x93a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	am.c	FUNCTION_12	CALL_1
0x93e	      0xbe00000000	                              mov esi, 0	       247	am.c	FUNCTION_12	CALL_1
0x943	          0x4889c7	                            mov rdi, rax	       247	am.c	FUNCTION_12	CALL_1
0x946	      0xe86ef7ffff	                  call sym.strbuf_setlen	       247	am.c	FUNCTION_12	CALL_1
0x94b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x94f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x953	          0x4889d6	                            mov rsi, rdx	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x956	          0x4889c7	                            mov rdi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x959	      0xe8d9fcffff	                        call sym.am_path	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x95e	          0x4889c1	                            mov rcx, rax	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x961	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x965	      0xba00000000	                              mov edx, 0	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x96a	          0x4889ce	                            mov rsi, rcx	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x96d	          0x4889c7	                            mov rdi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x970	      0xe800000000	                          call 0x40009b5	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x975	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x978	            0x781c	                            js 0x40009d6	       249	am.c	FUNCTION_12	IF_1	CALL_3
0x97a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       250	am.c	FUNCTION_12	IF_1	IF_2
0x97e	            0x740c	                            je 0x40009cc	       250	am.c	FUNCTION_12	IF_1	IF_2
0x980	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	am.c	FUNCTION_12	IF_1	CALL_4
0x984	          0x4889c7	                            mov rdi, rax	       251	am.c	FUNCTION_12	IF_1	CALL_4
0x987	      0xe800000000	                          call 0x40009cc	       251	am.c	FUNCTION_12	IF_1	CALL_4
0x98c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	am.c	FUNCTION_12	IF_1
0x990	        0x488b4008	                mov rax, qword [rax + 8]	       253	am.c	FUNCTION_12	IF_1
0x994	            0xeb43	                           jmp 0x4000a19	       253	am.c	FUNCTION_12	IF_1
0x996	      0xe800000000	                          call 0x40009db	       256	am.c	FUNCTION_12	IF_3
0x99b	            0x8b00	                    mov eax, dword [rax]	       256	am.c	FUNCTION_12	IF_3
0x99d	          0x83f802	                              cmp eax, 2	       256	am.c	FUNCTION_12	IF_3
0x9a0	            0x7507	                           jne 0x40009e9	       256	am.c	FUNCTION_12	IF_3
0x9a2	      0xb8ffffffff	                     mov eax, 0xffffffff	       257	am.c	FUNCTION_12	IF_3
0x9a7	            0xeb30	                           jmp 0x4000a19	       257	am.c	FUNCTION_12	IF_3
0x9a9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       259	am.c	FUNCTION_12	CALL_7
0x9ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       259	am.c	FUNCTION_12	CALL_7
0x9b1	          0x4889d6	                            mov rsi, rdx	       259	am.c	FUNCTION_12	CALL_7
0x9b4	          0x4889c7	                            mov rdi, rax	       259	am.c	FUNCTION_12	CALL_7
0x9b7	      0xe87bfcffff	                        call sym.am_path	       259	am.c	FUNCTION_12	CALL_7
0x9bc	          0x4889c3	                            mov rbx, rax	       259	am.c	FUNCTION_12	CALL_7
0x9bf	      0xbf00000000	                              mov edi, 0	       259	am.c	FUNCTION_12	CALL_7
0x9c4	      0xe82df8ffff	                               call sym.	       259	am.c	FUNCTION_12	CALL_7
0x9c9	          0x4889de	                            mov rsi, rbx	       259	am.c	FUNCTION_12	CALL_7
0x9cc	          0x4889c7	                            mov rdi, rax	       259	am.c	FUNCTION_12	CALL_7
0x9cf	      0xb800000000	                              mov eax, 0	       259	am.c	FUNCTION_12	CALL_7
0x9d4	      0xe800000000	                          call 0x4000a19	       259	am.c	FUNCTION_12	CALL_7
0x9d9	        0x4883c428	                           add rsp, 0x28	       260	am.c	FUNCTION_12
0x9dd	              0x5b	                                 pop rbx	       260	am.c	FUNCTION_12
0x9de	              0x5d	                                 pop rbp	       260	am.c	FUNCTION_12
0x9df	              0xc3	                                     ret	       260	am.c	FUNCTION_12
get_mail_commit_oid	functions,0:DO,0:WHILE,0:FOR,0:CALL,6:IF,1:SWITCH,0:ELSE,0	52
0x35e7	              0x55	                                push rbp	      1306	am.c	FUNCTION_38
0x35e8	          0x4889e5	                            mov rbp, rsp	      1306	am.c	FUNCTION_38
0x35eb	        0x4883ec50	                           sub rsp, 0x50	      1306	am.c	FUNCTION_38
0x35ef	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1306	am.c	FUNCTION_38
0x35f3	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1306	am.c	FUNCTION_38
0x35f7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1306	am.c	FUNCTION_38
0x3600	        0x488945f8	                mov qword [rbp - 8], rax	      1306	am.c	FUNCTION_38
0x3604	            0x31c0	                            xor eax, eax	      1306	am.c	FUNCTION_38
0x3606	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1307	am.c	FUNCTION_38
0x360e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1307	am.c	FUNCTION_38
0x3616	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1307	am.c	FUNCTION_38
0x361e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1308	am.c	FUNCTION_38	CALL_1
0x3622	      0xbe00000000	                              mov esi, 0	      1308	am.c	FUNCTION_38	CALL_1
0x3627	          0x4889c7	                            mov rdi, rax	      1308	am.c	FUNCTION_38	CALL_1
0x362a	      0xe800000000	                          call 0x400366f	      1308	am.c	FUNCTION_38	CALL_1
0x362f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1308	am.c	FUNCTION_38	CALL_1
0x3633	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1310	am.c	FUNCTION_38
0x363a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x363e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x3642	          0x4889d6	                            mov rsi, rdx	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x3645	          0x4889c7	                            mov rdi, rax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x3648	      0xe800000000	                          call 0x400368d	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x364d	            0x85c0	                           test eax, eax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x364f	            0x7530	                           jne 0x40036c1	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x3651	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x3655	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x3659	      0xbe00000000	                              mov esi, 0	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x365e	          0x4889c7	                            mov rdi, rax	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x3661	      0xe8c7c9ffff	                    call sym.skip_prefix	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x3666	            0x85c0	                           test eax, eax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x3668	            0x7417	                            je 0x40036c1	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x366a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x366e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x3672	          0x4889d6	                            mov rsi, rdx	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x3675	          0x4889c7	                            mov rdi, rax	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x3678	      0xe800000000	                          call 0x40036bd	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x367d	            0x85c0	                           test eax, eax	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x367f	            0x7907	                           jns 0x40036c8	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x3681	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	      1315	am.c	FUNCTION_38	IF_1
0x3688	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1317	am.c	FUNCTION_38	CALL_5
0x368c	          0x4889c7	                            mov rdi, rax	      1317	am.c	FUNCTION_38	CALL_5
0x368f	      0xe800000000	                          call 0x40036d4	      1317	am.c	FUNCTION_38	CALL_5
0x3694	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1318	am.c	FUNCTION_38	CALL_6
0x3698	          0x4889c7	                            mov rdi, rax	      1318	am.c	FUNCTION_38	CALL_6
0x369b	      0xe800000000	                          call 0x40036e0	      1318	am.c	FUNCTION_38	CALL_6
0x36a0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1319	am.c	FUNCTION_38
0x36a3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1320	am.c	FUNCTION_38
0x36a7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1320	am.c	FUNCTION_38
0x36b0	            0x7405	                            je 0x40036f7	      1320	am.c	FUNCTION_38
0x36b2	      0xe800000000	                          call 0x40036f7	      1320	am.c	FUNCTION_38
0x36b7	              0xc9	                                   leave	      1320	am.c	FUNCTION_38
0x36b8	              0xc3	                                     ret	      1320	am.c	FUNCTION_38
copy_notes_for_rebase	functions,0:DO,0:WHILE,1:FOR,0:CALL,20:IF,6:SWITCH,0:ELSE,0	155
0x1617	              0x55	                                push rbp	       536	am.c	FUNCTION_22
0x1618	          0x4889e5	                            mov rbp, rsp	       536	am.c	FUNCTION_22
0x161b	            0x4154	                                push r12	       536	am.c	FUNCTION_22
0x161d	              0x53	                                push rbx	       536	am.c	FUNCTION_22
0x161e	    0x4881eca00000	                           sub rsp, 0xa0	       536	am.c	FUNCTION_22
0x1625	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       536	am.c	FUNCTION_22
0x162c	    0x64488b042528	                mov rax, qword fs:[0x28]	       536	am.c	FUNCTION_22
0x1635	        0x488945e8	             mov qword [rbp - 0x18], rax	       536	am.c	FUNCTION_22
0x1639	            0x31c0	                            xor eax, eax	       536	am.c	FUNCTION_22
0x163b	    0x48c745900000	               mov qword [rbp - 0x70], 0	       538	am.c	FUNCTION_22
0x1643	    0x48c745980000	               mov qword [rbp - 0x68], 0	       538	am.c	FUNCTION_22
0x164b	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       538	am.c	FUNCTION_22
0x1653	      0xbf00000000	                              mov edi, 0	       539	am.c	FUNCTION_22	CALL_1
0x1658	      0xe899ebffff	                               call sym.	       539	am.c	FUNCTION_22	CALL_1
0x165d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       539	am.c	FUNCTION_22	CALL_1
0x1664	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       540	am.c	FUNCTION_22
0x166f	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	       542	am.c	FUNCTION_22
0x1679	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       544	am.c	FUNCTION_22	CALL_2
0x1680	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       544	am.c	FUNCTION_22	CALL_2
0x1686	            0x85c0	                           test eax, eax	       544	am.c	FUNCTION_22	CALL_2
0x1688	            0x7519	                           jne 0x40016e3	       544	am.c	FUNCTION_22	CALL_2
0x168a	      0xb900000000	                              mov ecx, 0	       544	am.c	FUNCTION_22	CALL_2
0x168f	      0xba20020000	                          mov edx, 0x220	       544	am.c	FUNCTION_22	CALL_2
0x1694	      0xbe00000000	                              mov esi, 0	       544	am.c	FUNCTION_22	CALL_2
0x1699	      0xbf00000000	                              mov edi, 0	       544	am.c	FUNCTION_22	CALL_2
0x169e	      0xe800000000	                          call 0x40016e3	       544	am.c	FUNCTION_22	CALL_2
0x16a3	      0xbf00000000	                              mov edi, 0	       546	am.c	FUNCTION_22	CALL_3
0x16a8	      0xe800000000	                          call 0x40016ed	       546	am.c	FUNCTION_22	CALL_3
0x16ad	        0x48894580	             mov qword [rbp - 0x80], rax	       546	am.c	FUNCTION_22	CALL_3
0x16b1	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       547	am.c	FUNCTION_22	IF_1
0x16b6	            0x750a	                           jne 0x4001702	       547	am.c	FUNCTION_22	IF_1
0x16b8	      0xb800000000	                              mov eax, 0	       548	am.c	FUNCTION_22	IF_1
0x16bd	      0xe9cf010000	                           jmp 0x40018d1	       548	am.c	FUNCTION_22	IF_1
0x16c2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       550	am.c	FUNCTION_22	CALL_5
0x16c9	      0xbe00000000	                              mov esi, 0	       550	am.c	FUNCTION_22	CALL_5
0x16ce	          0x4889c7	                            mov rdi, rax	       550	am.c	FUNCTION_22	CALL_5
0x16d1	      0xe861efffff	                        call sym.am_path	       550	am.c	FUNCTION_22	CALL_5
0x16d6	      0xbe00000000	                              mov esi, 0	       550	am.c	FUNCTION_22	CALL_5
0x16db	          0x4889c7	                            mov rdi, rax	       550	am.c	FUNCTION_22	CALL_5
0x16de	      0xe800000000	                          call 0x4001723	       550	am.c	FUNCTION_22	CALL_5
0x16e3	        0x48894588	             mov qword [rbp - 0x78], rax	       550	am.c	FUNCTION_22	CALL_5
0x16e7	      0xe956010000	                           jmp 0x4001882	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x16ec	        0x488b4598	             mov rax, qword [rbp - 0x68]	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x16f0	        0x4883f851	                           cmp rax, 0x51	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x16f4	            0x742b	                            je 0x4001761	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x16f6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x16fa	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x1701	          0x4889d6	                            mov rsi, rdx	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x1704	          0x4889c7	                            mov rdi, rax	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x1707	      0xb800000000	                              mov eax, 0	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x170c	      0xe800000000	                          call 0x4001751	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x1711	      0xe80ce9ffff	                    call sym.const_error	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x1716	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       556	am.c	FUNCTION_22	WHILE_1	IF_2	CALL_7
0x171c	      0xe93c010000	                           jmp 0x400189d	       557	am.c	FUNCTION_22	WHILE_1	IF_2
0x1721	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_8
0x1725	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_8
0x1729	          0x4889d6	                            mov rsi, rdx	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_8
0x172c	          0x4889c7	                            mov rdi, rax	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_8
0x172f	      0xe800000000	                          call 0x4001774	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_8
0x1734	            0x85c0	                           test eax, eax	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_8
0x1736	            0x742b	                            je 0x40017a3	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_8
0x1738	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x173c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x1743	          0x4889d6	                            mov rsi, rdx	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x1746	          0x4889c7	                            mov rdi, rax	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x1749	      0xb800000000	                              mov eax, 0	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x174e	      0xe800000000	                          call 0x4001793	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x1753	      0xe8cae8ffff	                    call sym.const_error	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x1758	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       561	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_9
0x175e	      0xe9fa000000	                           jmp 0x400189d	       562	am.c	FUNCTION_22	WHILE_1	IF_3
0x1763	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x1767	        0x4883c028	                           add rax, 0x28	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x176b	           0xfb600	                   movzx eax, byte [rax]	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x176e	            0x3c20	                            cmp al, 0x20	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x1770	            0x742b	                            je 0x40017dd	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x1772	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x1776	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x177d	          0x4889d6	                            mov rsi, rdx	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x1780	          0x4889c7	                            mov rdi, rax	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x1783	      0xb800000000	                              mov eax, 0	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x1788	      0xe800000000	                          call 0x40017cd	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x178d	      0xe890e8ffff	                    call sym.const_error	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x1792	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       566	am.c	FUNCTION_22	WHILE_1	IF_4	CALL_10
0x1798	      0xe9c0000000	                           jmp 0x400189d	       567	am.c	FUNCTION_22	WHILE_1	IF_4
0x179d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17a1	        0x488d5029	                   lea rdx, [rax + 0x29]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17a5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17a9	          0x4889c6	                            mov rsi, rax	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17ac	          0x4889d7	                            mov rdi, rdx	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17af	      0xe800000000	                          call 0x40017f4	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17b4	            0x85c0	                           test eax, eax	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17b6	            0x7429	                            je 0x4001821	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_11
0x17b8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17bc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17c3	          0x4889d6	                            mov rsi, rdx	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17c6	          0x4889c7	                            mov rdi, rax	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17c9	      0xb800000000	                              mov eax, 0	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17ce	      0xe800000000	                          call 0x4001813	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17d3	      0xe84ae8ffff	                    call sym.const_error	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17d8	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       571	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_12
0x17de	              0x90	                                     nop	       572	am.c	FUNCTION_22	WHILE_1	IF_5
0x17df	            0xeb7c	                           jmp 0x400189d	       572	am.c	FUNCTION_22	WHILE_1	IF_5
0x17e1	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17e5	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17e9	        0x488b4580	             mov rax, qword [rbp - 0x80]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17ed	          0x4889ce	                            mov rsi, rcx	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17f0	          0x4889c7	                            mov rdi, rax	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17f3	      0xe800000000	                          call 0x4001838	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17f8	            0x85c0	                           test eax, eax	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17fa	            0x7446	                            je 0x4001882	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_13
0x17fc	        0x488d45d0	                   lea rax, [rbp - 0x30]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1800	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1803	      0xe800000000	                          call 0x4001848	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1808	          0x4989c4	                            mov r12, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x180b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x180f	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1812	      0xe800000000	                          call 0x4001857	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1817	          0x4889c3	                            mov rbx, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x181a	      0xbf00000000	                              mov edi, 0	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x181f	      0xe8d2e9ffff	                               call sym.	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1824	          0x4c89e2	                            mov rdx, r12	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1827	          0x4889de	                            mov rsi, rbx	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x182a	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x182d	      0xb800000000	                              mov eax, 0	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1832	      0xe800000000	                          call 0x4001877	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1837	      0xe8e6e7ffff	                    call sym.const_error	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x183c	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_15
0x1842	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x1846	        0x488d4590	                   lea rax, [rbp - 0x70]	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x184a	          0x4889d6	                            mov rsi, rdx	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x184d	          0x4889c7	                            mov rdi, rax	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x1850	      0xe800000000	                          call 0x4001895	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x1855	            0x85c0	                           test eax, eax	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x1857	     0xf848ffeffff	                            je 0x400172c	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x185d	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       581	am.c	FUNCTION_22	CALL_18
0x1864	        0x488b4580	             mov rax, qword [rbp - 0x80]	       581	am.c	FUNCTION_22	CALL_18
0x1868	          0x4889d6	                            mov rsi, rdx	       581	am.c	FUNCTION_22	CALL_18
0x186b	          0x4889c7	                            mov rdi, rax	       581	am.c	FUNCTION_22	CALL_18
0x186e	      0xe800000000	                          call 0x40018b3	       581	am.c	FUNCTION_22	CALL_18
0x1873	        0x488b4588	             mov rax, qword [rbp - 0x78]	       582	am.c	FUNCTION_22	CALL_19
0x1877	          0x4889c7	                            mov rdi, rax	       582	am.c	FUNCTION_22	CALL_19
0x187a	      0xe800000000	                          call 0x40018bf	       582	am.c	FUNCTION_22	CALL_19
0x187f	        0x488d4590	                   lea rax, [rbp - 0x70]	       583	am.c	FUNCTION_22	CALL_20
0x1883	          0x4889c7	                            mov rdi, rax	       583	am.c	FUNCTION_22	CALL_20
0x1886	      0xe800000000	                          call 0x40018cb	       583	am.c	FUNCTION_22	CALL_20
0x188b	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       584	am.c	FUNCTION_22
0x1891	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       585	am.c	FUNCTION_22
0x1895	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       585	am.c	FUNCTION_22
0x189e	            0x7405	                            je 0x40018e5	       585	am.c	FUNCTION_22
0x18a0	      0xe800000000	                          call 0x40018e5	       585	am.c	FUNCTION_22
0x18a5	    0x4881c4a00000	                           add rsp, 0xa0	       585	am.c	FUNCTION_22
0x18ac	              0x5b	                                 pop rbx	       585	am.c	FUNCTION_22
0x18ad	            0x415c	                                 pop r12	       585	am.c	FUNCTION_22
0x18af	              0x5d	                                 pop rbp	       585	am.c	FUNCTION_22
0x18b0	              0xc3	                                     ret	       585	am.c	FUNCTION_22
am_rerere_clear	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,0:SWITCH,0:ELSE,0	27
0x56f4	              0x55	                                push rbp	      2029	am.c	FUNCTION_54
0x56f5	          0x4889e5	                            mov rbp, rsp	      2029	am.c	FUNCTION_54
0x56f8	        0x4883ec30	                           sub rsp, 0x30	      2029	am.c	FUNCTION_54
0x56fc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2029	am.c	FUNCTION_54
0x5705	        0x488945f8	                mov qword [rbp - 8], rax	      2029	am.c	FUNCTION_54
0x5709	            0x31c0	                            xor eax, eax	      2029	am.c	FUNCTION_54
0x570b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2030	am.c	FUNCTION_54
0x5713	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2030	am.c	FUNCTION_54
0x571a	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2030	am.c	FUNCTION_54
0x5721	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      2030	am.c	FUNCTION_54
0x5725	          0x83c801	                               or eax, 1	      2030	am.c	FUNCTION_54
0x5728	          0x8845e0	               mov byte [rbp - 0x20], al	      2030	am.c	FUNCTION_54
0x572b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2030	am.c	FUNCTION_54
0x5733	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2031	am.c	FUNCTION_54	CALL_1
0x5737	          0x4889c7	                            mov rdi, rax	      2031	am.c	FUNCTION_54	CALL_1
0x573a	      0xe800000000	                          call 0x400577f	      2031	am.c	FUNCTION_54	CALL_1
0x573f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2032	am.c	FUNCTION_54	CALL_2
0x5743	      0xbe01000000	                              mov esi, 1	      2032	am.c	FUNCTION_54	CALL_2
0x5748	          0x4889c7	                            mov rdi, rax	      2032	am.c	FUNCTION_54	CALL_2
0x574b	      0xe800000000	                          call 0x4005790	      2032	am.c	FUNCTION_54	CALL_2
0x5750	              0x90	                                     nop	      2033	am.c	FUNCTION_54
0x5751	        0x488b45f8	                mov rax, qword [rbp - 8]	      2033	am.c	FUNCTION_54
0x5755	    0x644833042528	                xor rax, qword fs:[0x28]	      2033	am.c	FUNCTION_54
0x575e	            0x7405	                            je 0x40057a5	      2033	am.c	FUNCTION_54
0x5760	      0xe800000000	                          call 0x40057a5	      2033	am.c	FUNCTION_54
0x5765	              0xc9	                                   leave	      2033	am.c	FUNCTION_54
0x5766	              0xc3	                                     ret	      2033	am.c	FUNCTION_54
parse_opt_patchformat	functions,0:DO,0:WHILE,0:FOR,0:CALL,7:IF,5:SWITCH,0:ELSE,5	67
0x5c2d	              0x55	                                push rbp	      2160	am.c	FUNCTION_59
0x5c2e	          0x4889e5	                            mov rbp, rsp	      2160	am.c	FUNCTION_59
0x5c31	        0x4883ec30	                           sub rsp, 0x30	      2160	am.c	FUNCTION_59
0x5c35	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2160	am.c	FUNCTION_59
0x5c39	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2160	am.c	FUNCTION_59
0x5c3d	          0x8955dc	             mov dword [rbp - 0x24], edx	      2160	am.c	FUNCTION_59
0x5c40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	am.c	FUNCTION_59
0x5c44	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2161	am.c	FUNCTION_59
0x5c48	        0x488945f8	                mov qword [rbp - 8], rax	      2161	am.c	FUNCTION_59
0x5c4c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x5c50	      0xbe00000000	                              mov esi, 0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x5c55	          0x4889c7	                            mov rdi, rax	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x5c58	      0xe800000000	                          call 0x4005c9d	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x5c5d	            0x85c0	                           test eax, eax	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x5c5f	            0x750f	                           jne 0x4005cb0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x5c61	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	am.c	FUNCTION_59	IF_1
0x5c65	    0xc70001000000	                      mov dword [rax], 1	      2164	am.c	FUNCTION_59	IF_1
0x5c6b	      0xe9af000000	                           jmp 0x4005d5f	      2164	am.c	FUNCTION_59	IF_1
0x5c70	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x5c74	      0xbe00000000	                              mov esi, 0	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x5c79	          0x4889c7	                            mov rdi, rax	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x5c7c	      0xe800000000	                          call 0x4005cc1	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x5c81	            0x85c0	                           test eax, eax	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x5c83	            0x750f	                           jne 0x4005cd4	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x5c85	        0x488b45f8	                mov rax, qword [rbp - 8]	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x5c89	    0xc70002000000	                      mov dword [rax], 2	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x5c8f	      0xe98b000000	                           jmp 0x4005d5f	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x5c94	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x5c98	      0xbe00000000	                              mov esi, 0	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x5c9d	          0x4889c7	                            mov rdi, rax	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x5ca0	      0xe800000000	                          call 0x4005ce5	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x5ca5	            0x85c0	                           test eax, eax	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x5ca7	            0x750c	                           jne 0x4005cf5	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x5ca9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x5cad	    0xc70003000000	                      mov dword [rax], 3	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x5cb3	            0xeb6a	                           jmp 0x4005d5f	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x5cb5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x5cb9	      0xbe00000000	                              mov esi, 0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x5cbe	          0x4889c7	                            mov rdi, rax	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x5cc1	      0xe800000000	                          call 0x4005d06	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x5cc6	            0x85c0	                           test eax, eax	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x5cc8	            0x750c	                           jne 0x4005d16	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x5cca	        0x488b45f8	                mov rax, qword [rbp - 8]	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x5cce	    0xc70004000000	                      mov dword [rax], 4	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x5cd4	            0xeb49	                           jmp 0x4005d5f	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x5cd6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x5cda	      0xbe00000000	                              mov esi, 0	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x5cdf	          0x4889c7	                            mov rdi, rax	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x5ce2	      0xe800000000	                          call 0x4005d27	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x5ce7	            0x85c0	                           test eax, eax	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x5ce9	            0x750c	                           jne 0x4005d37	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x5ceb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x5cef	    0xc70005000000	                      mov dword [rax], 5	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x5cf5	            0xeb28	                           jmp 0x4005d5f	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x5cf7	      0xbf00000000	                              mov edi, 0	      2174	am.c	FUNCTION_59	CALL_7
0x5cfc	      0xe8f5a4ffff	                               call sym.	      2174	am.c	FUNCTION_59	CALL_7
0x5d01	          0x4889c2	                            mov rdx, rax	      2174	am.c	FUNCTION_59	CALL_7
0x5d04	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2174	am.c	FUNCTION_59	CALL_7
0x5d08	          0x4889c6	                            mov rsi, rax	      2174	am.c	FUNCTION_59	CALL_7
0x5d0b	          0x4889d7	                            mov rdi, rdx	      2174	am.c	FUNCTION_59	CALL_7
0x5d0e	      0xb800000000	                              mov eax, 0	      2174	am.c	FUNCTION_59	CALL_7
0x5d13	      0xe800000000	                          call 0x4005d58	      2174	am.c	FUNCTION_59	CALL_7
0x5d18	      0xe805a3ffff	                    call sym.const_error	      2174	am.c	FUNCTION_59	CALL_7
0x5d1d	            0xeb05	                           jmp 0x4005d64	      2174	am.c	FUNCTION_59	CALL_7
0x5d1f	      0xb800000000	                              mov eax, 0	      2175	am.c	FUNCTION_59
0x5d24	              0xc9	                                   leave	      2176	am.c	FUNCTION_59
0x5d25	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
str_isspace	functions,0:DO,0:WHILE,0:FOR,1:CALL,1:IF,1:SWITCH,0:ELSE,0	23
0x495	              0x55	                                push rbp	        64	am.c	FUNCTION_3
0x496	          0x4889e5	                            mov rbp, rsp	        64	am.c	FUNCTION_3
0x499	        0x48897df8	                mov qword [rbp - 8], rdi	        64	am.c	FUNCTION_3
0x49d	            0xeb29	                           jmp 0x4000508	        65	am.c	FUNCTION_3	FOR_1
0x49f	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4a3	           0xfb600	                   movzx eax, byte [rax]	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4a6	           0xfb6c0	                           movzx eax, al	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4a9	            0x4898	                                    cdqe	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4ab	     0xfb680000000	                   movzx eax, byte [rax]	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4b2	           0xfb6c0	                           movzx eax, al	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4b5	          0x83e001	                              and eax, 1	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4b8	            0x85c0	                           test eax, eax	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4ba	            0x7507	                           jne 0x4000503	        66	am.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4bc	      0xb800000000	                              mov eax, 0	        67	am.c	FUNCTION_3	FOR_1	IF_1
0x4c1	            0xeb15	                           jmp 0x4000518	        67	am.c	FUNCTION_3	FOR_1	IF_1
0x4c3	      0x488345f801	                  add qword [rbp - 8], 1	        65	am.c	FUNCTION_3	FOR_1
0x4c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	am.c	FUNCTION_3	FOR_1
0x4cc	           0xfb600	                   movzx eax, byte [rax]	        65	am.c	FUNCTION_3	FOR_1
0x4cf	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x4d1	            0x75cc	                           jne 0x40004df	        65	am.c	FUNCTION_3	FOR_1
0x4d3	      0xb801000000	                              mov eax, 1	        69	am.c	FUNCTION_3
0x4d8	              0x5d	                                 pop rbp	        70	am.c	FUNCTION_3
0x4d9	              0xc3	                                     ret	        70	am.c	FUNCTION_3
am_run	functions,0:DO,0:WHILE,1:FOR,0:CALL,51:IF,15:SWITCH,0:ELSE,2	289
0x4bbf	              0x55	                                push rbp	      1758	am.c	FUNCTION_49
0x4bc0	          0x4889e5	                            mov rbp, rsp	      1758	am.c	FUNCTION_49
0x4bc3	            0x4155	                                push r13	      1758	am.c	FUNCTION_49
0x4bc5	            0x4154	                                push r12	      1758	am.c	FUNCTION_49
0x4bc7	              0x53	                                push rbx	      1758	am.c	FUNCTION_49
0x4bc8	    0x4881ec880000	                           sub rsp, 0x88	      1758	am.c	FUNCTION_49
0x4bcf	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1758	am.c	FUNCTION_49
0x4bd6	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      1758	am.c	FUNCTION_49
0x4bdc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1758	am.c	FUNCTION_49
0x4be5	        0x488945d8	             mov qword [rbp - 0x28], rax	      1758	am.c	FUNCTION_49
0x4be9	            0x31c0	                            xor eax, eax	      1758	am.c	FUNCTION_49
0x4beb	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1759	am.c	FUNCTION_49
0x4bf3	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1759	am.c	FUNCTION_49
0x4bfb	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1759	am.c	FUNCTION_49
0x4c03	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1760	am.c	FUNCTION_49
0x4c0b	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1760	am.c	FUNCTION_49
0x4c13	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1760	am.c	FUNCTION_49
0x4c1b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1762	am.c	FUNCTION_49	CALL_2
0x4c22	      0xbe00000000	                              mov esi, 0	      1762	am.c	FUNCTION_49	CALL_2
0x4c27	          0x4889c7	                            mov rdi, rax	      1762	am.c	FUNCTION_49	CALL_2
0x4c2a	      0xe808baffff	                        call sym.am_path	      1762	am.c	FUNCTION_49	CALL_2
0x4c2f	          0x4889c7	                            mov rdi, rax	      1762	am.c	FUNCTION_49	CALL_2
0x4c32	      0xe800000000	                          call 0x4004c77	      1762	am.c	FUNCTION_49	CALL_2
0x4c37	      0xe87ce1ffff	        call sym.refresh_and_write_cache	      1764	am.c	FUNCTION_49	CALL_3
0x4c3c	        0x488d4580	                   lea rax, [rbp - 0x80]	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4c40	          0x4889c7	                            mov rdi, rax	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4c43	      0xe800000000	                          call 0x4004c88	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4c48	            0x85c0	                           test eax, eax	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4c4a	            0x7437	                            je 0x4004cc3	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4c4c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4c53	      0xba01000000	                              mov edx, 1	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4c58	      0xbe00000000	                              mov esi, 0	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4c5d	          0x4889c7	                            mov rdi, rax	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4c60	      0xe88abaffff	               call sym.write_state_bool	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4c65	        0x488b5d90	             mov rbx, qword [rbp - 0x70]	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4c69	      0xbf00000000	                              mov edi, 0	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4c6e	      0xe883b5ffff	                               call sym.	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4c73	          0x4889de	                            mov rsi, rbx	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4c76	          0x4889c7	                            mov rdi, rax	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4c79	      0xb800000000	                              mov eax, 0	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4c7e	      0xe800000000	                          call 0x4004cc3	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4c83	        0x488d4580	                   lea rax, [rbp - 0x80]	      1771	am.c	FUNCTION_49	CALL_8
0x4c87	          0x4889c7	                            mov rdi, rax	      1771	am.c	FUNCTION_49	CALL_8
0x4c8a	      0xe800000000	                          call 0x4004ccf	      1771	am.c	FUNCTION_49	CALL_8
0x4c8f	      0xe962030000	                           jmp 0x4005036	      1773	am.c	FUNCTION_49	WHILE_1
0x4c94	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4c9b	          0x4889c7	                            mov rdi, rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4c9e	      0xe8cbe0ffff	                         call sym.msgnum	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4ca3	          0x4889c2	                            mov rdx, rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4ca6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4cad	          0x4889d6	                            mov rsi, rdx	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4cb0	          0x4889c7	                            mov rdi, rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4cb3	      0xe87fb9ffff	                        call sym.am_path	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4cb8	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4cbf	      0xe800000000	                          call 0x4004d04	      1777	am.c	FUNCTION_49	WHILE_1	CALL_11
0x4cc4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4ccb	          0x4889c7	                            mov rdi, rax	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4cce	      0xe800000000	                          call 0x4004d13	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4cd3	            0x85c0	                           test eax, eax	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4cd5	     0xf84e3020000	                            je 0x4004ffe	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4cdb	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x4ce2	            0x7414	                            je 0x4004d38	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x4ce4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4ceb	          0x4889c7	                            mov rdi, rax	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4cee	      0xe86ffbffff	          call sym.validate_resume_state	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4cf3	      0xe999000000	                           jmp 0x4004dd1	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4cf8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4cff	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4d05	            0x85c0	                           test eax, eax	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4d07	            0x7421	                            je 0x4004d6a	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4d09	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4d10	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4d17	          0x4889d6	                            mov rsi, rdx	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4d1a	          0x4889c7	                            mov rdi, rax	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4d1d	      0xe83fefffff	              call sym.parse_mail_rebase	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4d22	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4d28	            0xeb1f	                           jmp 0x4004d89	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4d2a	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4d31	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4d38	          0x4889d6	                            mov rsi, rdx	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4d3b	          0x4889c7	                            mov rdi, rax	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4d3e	      0xe875e2ffff	                     call sym.parse_mail	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4d43	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4d49	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1792	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4d50	     0xf856b020000	                           jne 0x4005001	      1792	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4d56	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4d5d	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4d60	            0x85c0	                           test eax, eax	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4d62	            0x740f	                            je 0x4004db3	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4d64	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x4d6b	          0x4889c7	                            mov rdi, rax	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x4d6e	      0xe89fe1ffff	              call sym.am_append_signoff	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x4d73	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1798	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_17
0x4d7a	          0x4889c7	                            mov rdi, rax	      1798	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_17
0x4d7d	      0xe895bfffff	            call sym.write_author_script	      1798	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_17
0x4d82	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1799	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_18
0x4d89	          0x4889c7	                            mov rdi, rax	      1799	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_18
0x4d8c	      0xe863c1ffff	               call sym.write_commit_msg	      1799	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_18
0x4d91	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4d98	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4d9b	            0x85c0	                           test eax, eax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4d9d	            0x7417	                            je 0x4004df6	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4d9f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4da6	          0x4889c7	                            mov rdi, rax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4da9	      0xe859fbffff	                 call sym.do_interactive	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4dae	            0x85c0	                           test eax, eax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4db0	     0xf850e020000	                           jne 0x4005004	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4db6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4dbd	          0x4889c7	                            mov rdi, rax	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4dc0	      0xe893c6ffff	        call sym.run_applypatch_msg_hook	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4dc5	            0x85c0	                           test eax, eax	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4dc7	            0x740a	                            je 0x4004e13	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4dc9	      0xbf01000000	                              mov edi, 1	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x4dce	      0xe800000000	                          call 0x4004e13	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x4dd3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4dda	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4dde	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4de5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4de9	          0x4889c7	                            mov rdi, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4dec	      0xe878b6ffff	                        call sym.linelen	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4df1	          0x4189c4	                           mov r12d, eax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4df4	      0xbf00000000	                              mov edi, 0	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4df9	      0xe8f8b3ffff	                               call sym.	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4dfe	          0x4889c2	                            mov rdx, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e01	    0x488b35000000	            mov rsi, qword [0x04004e48] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e08	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e0f	          0x4989d8	                             mov r8, rbx	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e12	          0x4489e1	                           mov ecx, r12d	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e15	          0x4889c7	                            mov rdi, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e18	      0xb800000000	                              mov eax, 0	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e1d	      0xe808b9ffff	                            call sym.say	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4e22	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4e29	      0xbe00000000	                              mov esi, 0	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4e2e	          0x4889c7	                            mov rdi, rax	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4e31	      0xe838efffff	                      call sym.run_apply	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4e36	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4e3c	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e43	     0xf84bf000000	                            je 0x4004f48	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e49	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e50	          0x8b4054	            mov eax, dword [rax + 0x54] 	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e53	            0x85c0	                           test eax, eax	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e55	     0xf84ad000000	                            je 0x4004f48	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e5b	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e63	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e6b	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4e73	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e7a	      0xbe00000000	                              mov esi, 0	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e7f	          0x4889c7	                            mov rdi, rax	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e82	      0xe8b0b7ffff	                        call sym.am_path	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e87	          0x4889c2	                            mov rdx, rax	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e8a	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e8e	          0x4889d6	                            mov rsi, rdx	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e91	          0x4889c7	                            mov rdi, rax	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e94	      0xe828b3ffff	                  call sym.strbuf_addstr	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4e99	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4e9d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4ea4	          0x4889d6	                            mov rsi, rdx	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4ea7	          0x4889c7	                            mov rdi, rax	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4eaa	      0xe82cf2ffff	             call sym.fall_back_threeway	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4eaf	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4eb5	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4eb9	          0x4889c7	                            mov rdi, rax	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4ebc	      0xe800000000	                          call 0x4004f01	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4ec1	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4ec8	            0x753e	                           jne 0x4004f48	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4eca	      0xbf00000000	                              mov edi, 0	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4ecf	      0xe800000000	                          call 0x4004f14	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4ed4	            0x85c0	                           test eax, eax	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4ed6	            0x7530	                           jne 0x4004f48	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4ed8	      0xbf00000000	                              mov edi, 0	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4edd	      0xe814b3ffff	                               call sym.	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4ee2	          0x4889c2	                            mov rdx, rax	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4ee5	    0x488b0d000000	            mov rcx, qword [0x04004f2c] 	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4eec	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4ef3	          0x4889ce	                            mov rsi, rcx	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4ef6	          0x4889c7	                            mov rdi, rax	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4ef9	      0xb800000000	                              mov eax, 0	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4efe	      0xe827b8ffff	                            call sym.say	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4f03	      0xe9bd000000	                           jmp 0x4005005	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4f08	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1829	am.c	FUNCTION_49	WHILE_1	IF_11
0x4f0f	     0xf8498000000	                            je 0x4004fed	      1829	am.c	FUNCTION_49	WHILE_1	IF_11
0x4f15	    0xc745a0010000	               mov dword [rbp - 0x60], 1	      1830	am.c	FUNCTION_49	WHILE_1	IF_11
0x4f1c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f23	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f27	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1833	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_36
0x4f2e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1833	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_36
0x4f32	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f35	      0xe82fb5ffff	                        call sym.linelen	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f3a	          0x4189c5	                           mov r13d, eax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f3d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f44	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f47	      0xe822deffff	                         call sym.msgnum	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f4c	          0x4989c4	                            mov r12, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f4f	      0xbf00000000	                              mov edi, 0	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f54	      0xe89db2ffff	                               call sym.	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f59	          0x4889d9	                            mov rcx, rbx	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f5c	          0x4489ea	                           mov edx, r13d	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f5f	          0x4c89e6	                            mov rsi, r12	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f62	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f65	      0xb800000000	                              mov eax, 0	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f6a	      0xe800000000	                          call 0x4004faf	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4f6f	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4f73	          0x4889c6	                            mov rsi, rax	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4f76	      0xbf00000000	                              mov edi, 0	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4f7b	      0xe800000000	                          call 0x4004fc0	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4f80	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x4f83	            0x85c0	                           test eax, eax	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x4f85	            0x7417	                            je 0x4004fde	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x4f87	      0xbf00000000	                              mov edi, 0	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4f8c	      0xe865b2ffff	                               call sym.	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4f91	          0x4889c7	                            mov rdi, rax	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4f94	      0xb800000000	                              mov eax, 0	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4f99	      0xe800000000	                          call 0x4004fde	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4f9e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x4fa5	          0x4889c7	                            mov rdi, rax	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x4fa8	      0xe8a2deffff	               call sym.die_user_resolve	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x4fad	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4fb4	          0x4889c7	                            mov rdi, rax	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4fb7	      0xe8eaf4ffff	                      call sym.do_commit	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4fbc	            0xeb07	                           jmp 0x4005005	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4fbe	              0x90	                                     nop	      1780	am.c	FUNCTION_49	WHILE_1	IF_2
0x4fbf	            0xeb04	                           jmp 0x4005005	      1780	am.c	FUNCTION_49	WHILE_1	IF_2
0x4fc1	              0x90	                                     nop	      1793	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4fc2	            0xeb01	                           jmp 0x4005005	      1793	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4fc4	              0x90	                                     nop	      1803	am.c	FUNCTION_49	WHILE_1	IF_7
0x4fc5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x4fcc	          0x4889c7	                            mov rdi, rax	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x4fcf	      0xe802dcffff	                        call sym.am_next	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x4fd4	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x4fdb	            0x740f	                            je 0x400502c	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x4fdd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4fe4	          0x4889c7	                            mov rdi, rax	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4fe7	      0xe84bbfffff	                        call sym.am_load	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4fec	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      1850	am.c	FUNCTION_49	WHILE_1
0x4ff6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1773	am.c	FUNCTION_49	WHILE_1
0x4ffd	          0x8b5008	                mov edx, dword [rax + 8]	      1773	am.c	FUNCTION_49	WHILE_1
0x5000	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1773	am.c	FUNCTION_49	WHILE_1
0x5007	          0x8b400c	              mov eax, dword [rax + 0xc]	      1773	am.c	FUNCTION_49	WHILE_1
0x500a	            0x39c2	                            cmp edx, eax	      1773	am.c	FUNCTION_49	WHILE_1
0x500c	     0xf8e82fcffff	                           jle 0x4004cd4	      1773	am.c	FUNCTION_49	WHILE_1
0x5012	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x5019	      0xbe00000000	                              mov esi, 0	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x501e	          0x4889c7	                            mov rdi, rax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x5021	      0xe811b6ffff	                        call sym.am_path	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x5026	          0x4889c7	                            mov rdi, rax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x5029	      0xe8a3b3ffff	                  call sym.is_empty_file	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x502e	            0x85c0	                           test eax, eax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x5030	            0x7548	                           jne 0x40050ba	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x5032	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x5039	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x503f	            0x85c0	                           test eax, eax	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x5041	            0x7519	                           jne 0x400509c	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x5043	      0xb900000000	                              mov ecx, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x5048	      0xba3e070000	                          mov edx, 0x73e	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x504d	      0xbe00000000	                              mov esi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x5052	      0xbf00000000	                              mov edi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x5057	      0xe800000000	                          call 0x400509c	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x505c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1855	am.c	FUNCTION_49	IF_14	CALL_47
0x5063	          0x4889c7	                            mov rdi, rax	      1855	am.c	FUNCTION_49	IF_14	CALL_47
0x5066	      0xe8acc5ffff	          call sym.copy_notes_for_rebase	      1855	am.c	FUNCTION_49	IF_14	CALL_47
0x506b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1856	am.c	FUNCTION_49	IF_14	CALL_48
0x5072	          0x4889c7	                            mov rdi, rax	      1856	am.c	FUNCTION_49	IF_14	CALL_48
0x5075	      0xe8abc4ffff	          call sym.run_post_rewrite_hook	      1856	am.c	FUNCTION_49	IF_14	CALL_48
0x507a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1863	am.c	FUNCTION_49	IF_15
0x5081	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1863	am.c	FUNCTION_49	IF_15
0x5087	            0x85c0	                           test eax, eax	      1863	am.c	FUNCTION_49	IF_15
0x5089	            0x7533	                           jne 0x40050fe	      1863	am.c	FUNCTION_49	IF_15
0x508b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x5092	          0x4889c7	                            mov rdi, rax	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x5095	      0xe841c3ffff	                     call sym.am_destroy	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x509a	    0x488b05000000	            mov rax, qword [0x040050e1] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x50a1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x50a5	          0x4889c7	                            mov rdi, rax	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x50a8	      0xe800000000	                          call 0x40050ed	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x50ad	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x50b1	      0xbe02000000	                              mov esi, 2	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x50b6	          0x4889c7	                            mov rdi, rax	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x50b9	      0xe800000000	                          call 0x40050fe	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x50be	              0x90	                                     nop	      1868	am.c	FUNCTION_49
0x50bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1868	am.c	FUNCTION_49
0x50c3	    0x644833042528	                xor rax, qword fs:[0x28]	      1868	am.c	FUNCTION_49
0x50cc	            0x7405	                            je 0x4005113	      1868	am.c	FUNCTION_49
0x50ce	      0xe800000000	                          call 0x4005113	      1868	am.c	FUNCTION_49
0x50d3	    0x4881c4880000	                           add rsp, 0x88	      1868	am.c	FUNCTION_49
0x50da	              0x5b	                                 pop rbx	      1868	am.c	FUNCTION_49
0x50db	            0x415c	                                 pop r12	      1868	am.c	FUNCTION_49
0x50dd	            0x415d	                                 pop r13	      1868	am.c	FUNCTION_49
0x50df	              0x5d	                                 pop rbp	      1868	am.c	FUNCTION_49
0x50e0	              0xc3	                                     ret	      1868	am.c	FUNCTION_49
merge_tree	functions,0:DO,0:WHILE,0:FOR,0:CALL,9:IF,3:SWITCH,0:ELSE,0	68
0x53ef	              0x55	                                push rbp	      1956	am.c	FUNCTION_52
0x53f0	          0x4889e5	                            mov rbp, rsp	      1956	am.c	FUNCTION_52
0x53f3	    0x4881ec600300	                          sub rsp, 0x360	      1956	am.c	FUNCTION_52
0x53fa	    0x4889bda8fcff	            mov qword [rbp - 0x358], rdi	      1956	am.c	FUNCTION_52
0x5401	    0x64488b042528	                mov rax, qword fs:[0x28]	      1956	am.c	FUNCTION_52
0x540a	        0x488945f8	                mov qword [rbp - 8], rax	      1956	am.c	FUNCTION_52
0x540e	            0x31c0	                            xor eax, eax	      1956	am.c	FUNCTION_52
0x5410	    0x48c785b0fcff	              mov qword [rbp - 0x350], 0	      1957	am.c	FUNCTION_52
0x541b	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x5422	          0x4889c7	                            mov rdi, rax	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x5425	      0xe823afffff	                     call sym.parse_tree	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x542a	            0x85c0	                           test eax, eax	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x542c	            0x740a	                            je 0x4005478	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x542e	      0xb8ffffffff	                     mov eax, 0xffffffff	      1962	am.c	FUNCTION_52	IF_1
0x5433	      0xe9f8000000	                           jmp 0x4005570	      1962	am.c	FUNCTION_52	IF_1
0x5438	    0x488d85b0fcff	                  lea rax, [rbp - 0x350]	      1964	am.c	FUNCTION_52	CALL_2
0x543f	      0xbe01000000	                              mov esi, 1	      1964	am.c	FUNCTION_52	CALL_2
0x5444	          0x4889c7	                            mov rdi, rax	      1964	am.c	FUNCTION_52	CALL_2
0x5447	      0xe800000000	                          call 0x400548c	      1964	am.c	FUNCTION_52	CALL_2
0x544c	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	      1966	am.c	FUNCTION_52	CALL_3
0x5453	      0xba00030000	                          mov edx, 0x300	      1966	am.c	FUNCTION_52	CALL_3
0x5458	      0xbe00000000	                              mov esi, 0	      1966	am.c	FUNCTION_52	CALL_3
0x545d	          0x4889c7	                            mov rdi, rax	      1966	am.c	FUNCTION_52	CALL_3
0x5460	      0xe800000000	                          call 0x40054a5	      1966	am.c	FUNCTION_52	CALL_3
0x5465	    0xc785f0feffff	              mov dword [rbp - 0x110], 1	      1967	am.c	FUNCTION_52
0x546f	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1968	am.c	FUNCTION_52
0x547a	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      1969	am.c	FUNCTION_52
0x5485	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 1	      1970	am.c	FUNCTION_52
0x548f	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	      1971	am.c	FUNCTION_52
0x549a	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1972	am.c	FUNCTION_52	CALL_4
0x54a1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1972	am.c	FUNCTION_52	CALL_4
0x54a5	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1972	am.c	FUNCTION_52	CALL_4
0x54ac	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1972	am.c	FUNCTION_52	CALL_4
0x54b0	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      1972	am.c	FUNCTION_52	CALL_4
0x54b7	          0x4889ce	                            mov rsi, rcx	      1972	am.c	FUNCTION_52	CALL_4
0x54ba	          0x4889c7	                            mov rdi, rax	      1972	am.c	FUNCTION_52	CALL_4
0x54bd	      0xe800000000	                          call 0x4005502	      1972	am.c	FUNCTION_52	CALL_4
0x54c2	    0x488d95f0fcff	                  lea rdx, [rbp - 0x310]	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x54c9	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x54d0	          0x4889c6	                            mov rsi, rax	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x54d3	      0xbf01000000	                              mov edi, 1	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x54d8	      0xe800000000	                          call 0x400551d	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x54dd	            0x85c0	                           test eax, eax	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x54df	            0x7416	                            je 0x4005537	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x54e1	    0x488d85b0fcff	                  lea rax, [rbp - 0x350]	      1975	am.c	FUNCTION_52	IF_2	CALL_6
0x54e8	          0x4889c7	                            mov rdi, rax	      1975	am.c	FUNCTION_52	IF_2	CALL_6
0x54eb	      0xe8c6aeffff	             call sym.rollback_lock_file	      1975	am.c	FUNCTION_52	IF_2	CALL_6
0x54f0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1976	am.c	FUNCTION_52	IF_2
0x54f5	            0xeb39	                           jmp 0x4005570	      1976	am.c	FUNCTION_52	IF_2
0x54f7	    0x488d85b0fcff	                  lea rax, [rbp - 0x350]	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x54fe	      0xba01000000	                              mov edx, 1	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x5503	          0x4889c6	                            mov rsi, rax	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x5506	      0xbf00000000	                              mov edi, 0	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x550b	      0xe800000000	                          call 0x4005550	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x5510	            0x85c0	                           test eax, eax	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x5512	            0x7417	                            je 0x400556b	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x5514	      0xbf00000000	                              mov edi, 0	      1980	am.c	FUNCTION_52	CALL_9
0x5519	      0xe8d8acffff	                               call sym.	      1980	am.c	FUNCTION_52	CALL_9
0x551e	          0x4889c7	                            mov rdi, rax	      1980	am.c	FUNCTION_52	CALL_9
0x5521	      0xb800000000	                              mov eax, 0	      1980	am.c	FUNCTION_52	CALL_9
0x5526	      0xe800000000	                          call 0x400556b	      1980	am.c	FUNCTION_52	CALL_9
0x552b	      0xb800000000	                              mov eax, 0	      1982	am.c	FUNCTION_52
0x5530	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1983	am.c	FUNCTION_52
0x5534	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1983	am.c	FUNCTION_52
0x553d	            0x7405	                            je 0x4005584	      1983	am.c	FUNCTION_52
0x553f	      0xe800000000	                          call 0x4005584	      1983	am.c	FUNCTION_52
0x5544	              0xc9	                                   leave	      1983	am.c	FUNCTION_52
0x5545	              0xc3	                                     ret	      1983	am.c	FUNCTION_52
clean_index	functions,0:DO,0:WHILE,0:FOR,0:CALL,18:IF,7:SWITCH,0:ELSE,0	111
0x5546	              0x55	                                push rbp	      1990	am.c	FUNCTION_53
0x5547	          0x4889e5	                            mov rbp, rsp	      1990	am.c	FUNCTION_53
0x554a	              0x53	                                push rbx	      1990	am.c	FUNCTION_53
0x554b	        0x4883ec58	                           sub rsp, 0x58	      1990	am.c	FUNCTION_53
0x554f	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1990	am.c	FUNCTION_53
0x5553	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1990	am.c	FUNCTION_53
0x5557	    0x64488b042528	                mov rax, qword fs:[0x28]	      1990	am.c	FUNCTION_53
0x5560	        0x488945e8	             mov qword [rbp - 0x18], rax	      1990	am.c	FUNCTION_53
0x5564	            0x31c0	                            xor eax, eax	      1990	am.c	FUNCTION_53
0x5566	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1994	am.c	FUNCTION_53	CALL_1
0x556a	          0x4889c7	                            mov rdi, rax	      1994	am.c	FUNCTION_53	CALL_1
0x556d	      0xe800000000	                          call 0x40055b2	      1994	am.c	FUNCTION_53	CALL_1
0x5572	        0x488945b8	             mov qword [rbp - 0x48], rax	      1994	am.c	FUNCTION_53	CALL_1
0x5576	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1995	am.c	FUNCTION_53	IF_1
0x557b	            0x7533	                           jne 0x40055f0	      1995	am.c	FUNCTION_53	IF_1
0x557d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1996	am.c	FUNCTION_53	CALL_4
0x5581	          0x4889c7	                            mov rdi, rax	      1996	am.c	FUNCTION_53	CALL_4
0x5584	      0xe800000000	                          call 0x40055c9	      1996	am.c	FUNCTION_53	CALL_4
0x5589	          0x4889c3	                            mov rbx, rax	      1996	am.c	FUNCTION_53	CALL_4
0x558c	      0xbf00000000	                              mov edi, 0	      1996	am.c	FUNCTION_53	CALL_4
0x5591	      0xe860acffff	                               call sym.	      1996	am.c	FUNCTION_53	CALL_4
0x5596	          0x4889de	                            mov rsi, rbx	      1996	am.c	FUNCTION_53	CALL_4
0x5599	          0x4889c7	                            mov rdi, rax	      1996	am.c	FUNCTION_53	CALL_4
0x559c	      0xb800000000	                              mov eax, 0	      1996	am.c	FUNCTION_53	CALL_4
0x55a1	      0xe800000000	                          call 0x40055e6	      1996	am.c	FUNCTION_53	CALL_4
0x55a6	      0xe877aaffff	                    call sym.const_error	      1996	am.c	FUNCTION_53	CALL_4
0x55ab	      0xe929010000	                           jmp 0x4005719	      1996	am.c	FUNCTION_53	CALL_4
0x55b0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1998	am.c	FUNCTION_53	CALL_5
0x55b4	          0x4889c7	                            mov rdi, rax	      1998	am.c	FUNCTION_53	CALL_5
0x55b7	      0xe800000000	                          call 0x40055fc	      1998	am.c	FUNCTION_53	CALL_5
0x55bc	        0x488945c0	             mov qword [rbp - 0x40], rax	      1998	am.c	FUNCTION_53	CALL_5
0x55c0	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1999	am.c	FUNCTION_53	IF_2
0x55c5	            0x7533	                           jne 0x400563a	      1999	am.c	FUNCTION_53	IF_2
0x55c7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2000	am.c	FUNCTION_53	CALL_8
0x55cb	          0x4889c7	                            mov rdi, rax	      2000	am.c	FUNCTION_53	CALL_8
0x55ce	      0xe800000000	                          call 0x4005613	      2000	am.c	FUNCTION_53	CALL_8
0x55d3	          0x4889c3	                            mov rbx, rax	      2000	am.c	FUNCTION_53	CALL_8
0x55d6	      0xbf00000000	                              mov edi, 0	      2000	am.c	FUNCTION_53	CALL_8
0x55db	      0xe816acffff	                               call sym.	      2000	am.c	FUNCTION_53	CALL_8
0x55e0	          0x4889de	                            mov rsi, rbx	      2000	am.c	FUNCTION_53	CALL_8
0x55e3	          0x4889c7	                            mov rdi, rax	      2000	am.c	FUNCTION_53	CALL_8
0x55e6	      0xb800000000	                              mov eax, 0	      2000	am.c	FUNCTION_53	CALL_8
0x55eb	      0xe800000000	                          call 0x4005630	      2000	am.c	FUNCTION_53	CALL_8
0x55f0	      0xe82daaffff	                    call sym.const_error	      2000	am.c	FUNCTION_53	CALL_8
0x55f5	      0xe9df000000	                           jmp 0x4005719	      2000	am.c	FUNCTION_53	CALL_8
0x55fa	      0xbf00000000	                              mov edi, 0	      2002	am.c	FUNCTION_53	CALL_9
0x55ff	      0xe800000000	                          call 0x4005644	      2002	am.c	FUNCTION_53	CALL_9
0x5604	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x5608	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x560c	      0xba01000000	                              mov edx, 1	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x5611	          0x4889ce	                            mov rsi, rcx	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x5614	          0x4889c7	                            mov rdi, rax	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x5617	      0xe8fbfbffff	                call sym.fast_forward_to	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x561c	            0x85c0	                           test eax, eax	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x561e	            0x740a	                            je 0x400566a	      2004	am.c	FUNCTION_53	IF_3	CALL_10
0x5620	      0xb8ffffffff	                     mov eax, 0xffffffff	      2005	am.c	FUNCTION_53	IF_3
0x5625	      0xe9af000000	                           jmp 0x4005719	      2005	am.c	FUNCTION_53	IF_3
0x562a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2007	am.c	FUNCTION_53	IF_4	CALL_11
0x562e	      0xba00000000	                              mov edx, 0	      2007	am.c	FUNCTION_53	IF_4	CALL_11
0x5633	      0xbe00000000	                              mov esi, 0	      2007	am.c	FUNCTION_53	IF_4	CALL_11
0x5638	          0x4889c7	                            mov rdi, rax	      2007	am.c	FUNCTION_53	IF_4	CALL_11
0x563b	      0xe800000000	                          call 0x4005680	      2007	am.c	FUNCTION_53	IF_4	CALL_11
0x5640	            0x85c0	                           test eax, eax	      2007	am.c	FUNCTION_53	IF_4	CALL_11
0x5642	            0x740a	                            je 0x400568e	      2007	am.c	FUNCTION_53	IF_4	CALL_11
0x5644	      0xb8ffffffff	                     mov eax, 0xffffffff	      2008	am.c	FUNCTION_53	IF_4
0x5649	      0xe98b000000	                           jmp 0x4005719	      2008	am.c	FUNCTION_53	IF_4
0x564e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2010	am.c	FUNCTION_53	CALL_12
0x5652	          0x4889c7	                            mov rdi, rax	      2010	am.c	FUNCTION_53	CALL_12
0x5655	      0xe800000000	                          call 0x400569a	      2010	am.c	FUNCTION_53	CALL_12
0x565a	        0x488945c8	             mov qword [rbp - 0x38], rax	      2010	am.c	FUNCTION_53	CALL_12
0x565e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2011	am.c	FUNCTION_53	IF_5
0x5663	            0x7530	                           jne 0x40056d5	      2011	am.c	FUNCTION_53	IF_5
0x5665	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2012	am.c	FUNCTION_53	CALL_15
0x5669	          0x4889c7	                            mov rdi, rax	      2012	am.c	FUNCTION_53	CALL_15
0x566c	      0xe800000000	                          call 0x40056b1	      2012	am.c	FUNCTION_53	CALL_15
0x5671	          0x4889c3	                            mov rbx, rax	      2012	am.c	FUNCTION_53	CALL_15
0x5674	      0xbf00000000	                              mov edi, 0	      2012	am.c	FUNCTION_53	CALL_15
0x5679	      0xe878abffff	                               call sym.	      2012	am.c	FUNCTION_53	CALL_15
0x567e	          0x4889de	                            mov rsi, rbx	      2012	am.c	FUNCTION_53	CALL_15
0x5681	          0x4889c7	                            mov rdi, rax	      2012	am.c	FUNCTION_53	CALL_15
0x5684	      0xb800000000	                              mov eax, 0	      2012	am.c	FUNCTION_53	CALL_15
0x5689	      0xe800000000	                          call 0x40056ce	      2012	am.c	FUNCTION_53	CALL_15
0x568e	      0xe88fa9ffff	                    call sym.const_error	      2012	am.c	FUNCTION_53	CALL_15
0x5693	            0xeb44	                           jmp 0x4005719	      2012	am.c	FUNCTION_53	CALL_15
0x5695	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x5699	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x569d	      0xba00000000	                              mov edx, 0	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x56a2	          0x4889ce	                            mov rsi, rcx	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x56a5	          0x4889c7	                            mov rdi, rax	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x56a8	      0xe86afbffff	                call sym.fast_forward_to	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x56ad	            0x85c0	                           test eax, eax	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x56af	            0x7407	                            je 0x40056f8	      2014	am.c	FUNCTION_53	IF_6	CALL_16
0x56b1	      0xb8ffffffff	                     mov eax, 0xffffffff	      2015	am.c	FUNCTION_53	IF_6
0x56b6	            0xeb21	                           jmp 0x4005719	      2015	am.c	FUNCTION_53	IF_6
0x56b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2017	am.c	FUNCTION_53	IF_7	CALL_17
0x56bc	          0x4889c7	                            mov rdi, rax	      2017	am.c	FUNCTION_53	IF_7	CALL_17
0x56bf	      0xe82bfdffff	                     call sym.merge_tree	      2017	am.c	FUNCTION_53	IF_7	CALL_17
0x56c4	            0x85c0	                           test eax, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_17
0x56c6	            0x7407	                            je 0x400570f	      2017	am.c	FUNCTION_53	IF_7	CALL_17
0x56c8	      0xb8ffffffff	                     mov eax, 0xffffffff	      2018	am.c	FUNCTION_53	IF_7
0x56cd	            0xeb0a	                           jmp 0x4005719	      2018	am.c	FUNCTION_53	IF_7
0x56cf	      0xe800000000	                          call 0x4005714	      2020	am.c	FUNCTION_53	CALL_18
0x56d4	      0xb800000000	                              mov eax, 0	      2022	am.c	FUNCTION_53
0x56d9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2023	am.c	FUNCTION_53
0x56dd	    0x644833142528	                xor rdx, qword fs:[0x28]	      2023	am.c	FUNCTION_53
0x56e6	            0x7405	                            je 0x400572d	      2023	am.c	FUNCTION_53
0x56e8	      0xe800000000	                          call 0x400572d	      2023	am.c	FUNCTION_53
0x56ed	        0x4883c458	                           add rsp, 0x58	      2023	am.c	FUNCTION_53
0x56f1	              0x5b	                                 pop rbx	      2023	am.c	FUNCTION_53
0x56f2	              0x5d	                                 pop rbp	      2023	am.c	FUNCTION_53
0x56f3	              0xc3	                                     ret	      2023	am.c	FUNCTION_53
write_author_script	functions,0:DO,0:WHILE,0:FOR,0:CALL,11:IF,0:SWITCH,0:ELSE,0	67
0xd17	              0x55	                                push rbp	       347	am.c	FUNCTION_15
0xd18	          0x4889e5	                            mov rbp, rsp	       347	am.c	FUNCTION_15
0xd1b	        0x4883ec30	                           sub rsp, 0x30	       347	am.c	FUNCTION_15
0xd1f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       347	am.c	FUNCTION_15
0xd23	    0x64488b042528	                mov rax, qword fs:[0x28]	       347	am.c	FUNCTION_15
0xd2c	        0x488945f8	                mov qword [rbp - 8], rax	       347	am.c	FUNCTION_15
0xd30	            0x31c0	                            xor eax, eax	       347	am.c	FUNCTION_15
0xd32	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       348	am.c	FUNCTION_15
0xd3a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       348	am.c	FUNCTION_15
0xd42	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       348	am.c	FUNCTION_15
0xd4a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       350	am.c	FUNCTION_15	CALL_1
0xd4e	      0xbe00000000	                              mov esi, 0	       350	am.c	FUNCTION_15	CALL_1
0xd53	          0x4889c7	                            mov rdi, rax	       350	am.c	FUNCTION_15	CALL_1
0xd56	      0xe866f4ffff	                  call sym.strbuf_addstr	       350	am.c	FUNCTION_15	CALL_1
0xd5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       351	am.c	FUNCTION_15	CALL_2
0xd5f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       351	am.c	FUNCTION_15	CALL_2
0xd63	        0x488d45e0	                   lea rax, [rbp - 0x20]	       351	am.c	FUNCTION_15	CALL_2
0xd67	          0x4889d6	                            mov rsi, rdx	       351	am.c	FUNCTION_15	CALL_2
0xd6a	          0x4889c7	                            mov rdi, rax	       351	am.c	FUNCTION_15	CALL_2
0xd6d	      0xe800000000	                          call 0x4000db2	       351	am.c	FUNCTION_15	CALL_2
0xd72	        0x488d45e0	                   lea rax, [rbp - 0x20]	       352	am.c	FUNCTION_15	CALL_3
0xd76	      0xbe0a000000	                            mov esi, 0xa	       352	am.c	FUNCTION_15	CALL_3
0xd7b	          0x4889c7	                            mov rdi, rax	       352	am.c	FUNCTION_15	CALL_3
0xd7e	      0xe8d0f3ffff	                   call sym.strbuf_addch	       352	am.c	FUNCTION_15	CALL_3
0xd83	        0x488d45e0	                   lea rax, [rbp - 0x20]	       354	am.c	FUNCTION_15	CALL_4
0xd87	      0xbe00000000	                              mov esi, 0	       354	am.c	FUNCTION_15	CALL_4
0xd8c	          0x4889c7	                            mov rdi, rax	       354	am.c	FUNCTION_15	CALL_4
0xd8f	      0xe82df4ffff	                  call sym.strbuf_addstr	       354	am.c	FUNCTION_15	CALL_4
0xd94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       355	am.c	FUNCTION_15	CALL_5
0xd98	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       355	am.c	FUNCTION_15	CALL_5
0xd9c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       355	am.c	FUNCTION_15	CALL_5
0xda0	          0x4889d6	                            mov rsi, rdx	       355	am.c	FUNCTION_15	CALL_5
0xda3	          0x4889c7	                            mov rdi, rax	       355	am.c	FUNCTION_15	CALL_5
0xda6	      0xe800000000	                          call 0x4000deb	       355	am.c	FUNCTION_15	CALL_5
0xdab	        0x488d45e0	                   lea rax, [rbp - 0x20]	       356	am.c	FUNCTION_15	CALL_6
0xdaf	      0xbe0a000000	                            mov esi, 0xa	       356	am.c	FUNCTION_15	CALL_6
0xdb4	          0x4889c7	                            mov rdi, rax	       356	am.c	FUNCTION_15	CALL_6
0xdb7	      0xe897f3ffff	                   call sym.strbuf_addch	       356	am.c	FUNCTION_15	CALL_6
0xdbc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       358	am.c	FUNCTION_15	CALL_7
0xdc0	      0xbe00000000	                              mov esi, 0	       358	am.c	FUNCTION_15	CALL_7
0xdc5	          0x4889c7	                            mov rdi, rax	       358	am.c	FUNCTION_15	CALL_7
0xdc8	      0xe8f4f3ffff	                  call sym.strbuf_addstr	       358	am.c	FUNCTION_15	CALL_7
0xdcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	am.c	FUNCTION_15	CALL_8
0xdd1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       359	am.c	FUNCTION_15	CALL_8
0xdd5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       359	am.c	FUNCTION_15	CALL_8
0xdd9	          0x4889d6	                            mov rsi, rdx	       359	am.c	FUNCTION_15	CALL_8
0xddc	          0x4889c7	                            mov rdi, rax	       359	am.c	FUNCTION_15	CALL_8
0xddf	      0xe800000000	                          call 0x4000e24	       359	am.c	FUNCTION_15	CALL_8
0xde4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       360	am.c	FUNCTION_15	CALL_9
0xde8	      0xbe0a000000	                            mov esi, 0xa	       360	am.c	FUNCTION_15	CALL_9
0xded	          0x4889c7	                            mov rdi, rax	       360	am.c	FUNCTION_15	CALL_9
0xdf0	      0xe85ef3ffff	                   call sym.strbuf_addch	       360	am.c	FUNCTION_15	CALL_9
0xdf5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       362	am.c	FUNCTION_15	CALL_10
0xdf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       362	am.c	FUNCTION_15	CALL_10
0xdfd	      0xbe00000000	                              mov esi, 0	       362	am.c	FUNCTION_15	CALL_10
0xe02	          0x4889c7	                            mov rdi, rax	       362	am.c	FUNCTION_15	CALL_10
0xe05	      0xe85cf8ffff	               call sym.write_state_text	       362	am.c	FUNCTION_15	CALL_10
0xe0a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       364	am.c	FUNCTION_15	CALL_11
0xe0e	          0x4889c7	                            mov rdi, rax	       364	am.c	FUNCTION_15	CALL_11
0xe11	      0xe800000000	                          call 0x4000e56	       364	am.c	FUNCTION_15	CALL_11
0xe16	              0x90	                                     nop	       365	am.c	FUNCTION_15
0xe17	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	am.c	FUNCTION_15
0xe1b	    0x644833042528	                xor rax, qword fs:[0x28]	       365	am.c	FUNCTION_15
0xe24	            0x7405	                            je 0x4000e6b	       365	am.c	FUNCTION_15
0xe26	      0xe800000000	                          call 0x4000e6b	       365	am.c	FUNCTION_15
0xe2b	              0xc9	                                   leave	       365	am.c	FUNCTION_15
0xe2c	              0xc3	                                     ret	       365	am.c	FUNCTION_15
say	functions,0:DO,0:WHILE,0:FOR,0:CALL,4:IF,1:SWITCH,0:ELSE,0	49
0x72a	              0x55	                                push rbp	       212	am.c	FUNCTION_10
0x72b	          0x4889e5	                            mov rbp, rsp	       212	am.c	FUNCTION_10
0x72e	    0x4881ecf00000	                           sub rsp, 0xf0	       212	am.c	FUNCTION_10
0x735	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       212	am.c	FUNCTION_10
0x73c	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       212	am.c	FUNCTION_10
0x743	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       212	am.c	FUNCTION_10
0x74a	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       212	am.c	FUNCTION_10
0x751	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       212	am.c	FUNCTION_10
0x758	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       212	am.c	FUNCTION_10
0x75f	            0x84c0	                             test al, al	       212	am.c	FUNCTION_10
0x761	            0x7420	                            je 0x40007c3	       212	am.c	FUNCTION_10
0x763	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       212	am.c	FUNCTION_10
0x767	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       212	am.c	FUNCTION_10
0x76b	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       212	am.c	FUNCTION_10
0x76f	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       212	am.c	FUNCTION_10
0x773	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       212	am.c	FUNCTION_10
0x777	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       212	am.c	FUNCTION_10
0x77b	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       212	am.c	FUNCTION_10
0x77f	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       212	am.c	FUNCTION_10
0x783	    0x64488b042528	                mov rax, qword fs:[0x28]	       212	am.c	FUNCTION_10
0x78c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       212	am.c	FUNCTION_10
0x793	            0x31c0	                            xor eax, eax	       212	am.c	FUNCTION_10
0x795	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       215	am.c	FUNCTION_10	CALL_1
0x79f	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       215	am.c	FUNCTION_10	CALL_1
0x7a9	        0x488d4510	                   lea rax, [rbp + 0x10]	       215	am.c	FUNCTION_10	CALL_1
0x7ad	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       215	am.c	FUNCTION_10	CALL_1
0x7b4	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       215	am.c	FUNCTION_10	CALL_1
0x7bb	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       215	am.c	FUNCTION_10	CALL_1
0x7c2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       216	am.c	FUNCTION_10	IF_1
0x7c9	          0x8b4058	            mov eax, dword [rax + 0x58] 	       216	am.c	FUNCTION_10	IF_1
0x7cc	            0x85c0	                           test eax, eax	       216	am.c	FUNCTION_10	IF_1
0x7ce	            0x7534	                           jne 0x4000844	       216	am.c	FUNCTION_10	IF_1
0x7d0	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x7d7	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x7de	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x7e5	          0x4889ce	                            mov rsi, rcx	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x7e8	          0x4889c7	                            mov rdi, rax	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x7eb	      0xe800000000	                          call 0x4000830	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x7f0	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x7f7	          0x4889c6	                            mov rsi, rax	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x7fa	      0xbf0a000000	                            mov edi, 0xa	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x7ff	      0xe800000000	                          call 0x4000844	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x804	              0x90	                                     nop	       221	am.c	FUNCTION_10
0x805	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       221	am.c	FUNCTION_10
0x80c	    0x644833042528	                xor rax, qword fs:[0x28]	       221	am.c	FUNCTION_10
0x815	            0x7405	                            je 0x400085c	       221	am.c	FUNCTION_10
0x817	      0xe800000000	                          call 0x400085c	       221	am.c	FUNCTION_10
0x81c	              0xc9	                                   leave	       221	am.c	FUNCTION_10
0x81d	              0xc3	                                     ret	       221	am.c	FUNCTION_10
am_state_release	functions,0:DO,0:WHILE,0:FOR,0:CALL,6:IF,0:SWITCH,0:ELSE,0	31
0x5c9	              0x55	                                push rbp	       169	am.c	FUNCTION_5
0x5ca	          0x4889e5	                            mov rbp, rsp	       169	am.c	FUNCTION_5
0x5cd	        0x4883ec10	                           sub rsp, 0x10	       169	am.c	FUNCTION_5
0x5d1	        0x48897df8	                mov qword [rbp - 8], rdi	       169	am.c	FUNCTION_5
0x5d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	am.c	FUNCTION_5	CALL_1
0x5d9	          0x488b00	                    mov rax, qword [rax]	       170	am.c	FUNCTION_5	CALL_1
0x5dc	          0x4889c7	                            mov rdi, rax	       170	am.c	FUNCTION_5	CALL_1
0x5df	      0xe800000000	                          call 0x4000624	       170	am.c	FUNCTION_5	CALL_1
0x5e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	am.c	FUNCTION_5	CALL_2
0x5e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       171	am.c	FUNCTION_5	CALL_2
0x5ec	          0x4889c7	                            mov rdi, rax	       171	am.c	FUNCTION_5	CALL_2
0x5ef	      0xe800000000	                          call 0x4000634	       171	am.c	FUNCTION_5	CALL_2
0x5f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	am.c	FUNCTION_5	CALL_3
0x5f8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	am.c	FUNCTION_5	CALL_3
0x5fc	          0x4889c7	                            mov rdi, rax	       172	am.c	FUNCTION_5	CALL_3
0x5ff	      0xe800000000	                          call 0x4000644	       172	am.c	FUNCTION_5	CALL_3
0x604	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	am.c	FUNCTION_5	CALL_4
0x608	        0x488b4020	            mov rax, qword [rax + 0x20] 	       173	am.c	FUNCTION_5	CALL_4
0x60c	          0x4889c7	                            mov rdi, rax	       173	am.c	FUNCTION_5	CALL_4
0x60f	      0xe800000000	                          call 0x4000654	       173	am.c	FUNCTION_5	CALL_4
0x614	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	am.c	FUNCTION_5	CALL_5
0x618	        0x488b4028	            mov rax, qword [rax + 0x28] 	       174	am.c	FUNCTION_5	CALL_5
0x61c	          0x4889c7	                            mov rdi, rax	       174	am.c	FUNCTION_5	CALL_5
0x61f	      0xe800000000	                          call 0x4000664	       174	am.c	FUNCTION_5	CALL_5
0x624	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	am.c	FUNCTION_5	CALL_6
0x628	        0x4883c070	                           add rax, 0x70	       175	am.c	FUNCTION_5	CALL_6
0x62c	          0x4889c7	                            mov rdi, rax	       175	am.c	FUNCTION_5	CALL_6
0x62f	      0xe800000000	                          call 0x4000674	       175	am.c	FUNCTION_5	CALL_6
0x634	              0x90	                                     nop	       176	am.c	FUNCTION_5
0x635	              0xc9	                                   leave	       176	am.c	FUNCTION_5
0x636	              0xc3	                                     ret	       176	am.c	FUNCTION_5
fast_forward_to	functions,0:DO,0:WHILE,0:FOR,0:CALL,12:IF,3:SWITCH,0:ELSE,0	93
0x5217	              0x55	                                push rbp	      1917	am.c	FUNCTION_51
0x5218	          0x4889e5	                            mov rbp, rsp	      1917	am.c	FUNCTION_51
0x521b	    0x4881ec900300	                          sub rsp, 0x390	      1917	am.c	FUNCTION_51
0x5222	    0x4889bd88fcff	            mov qword [rbp - 0x378], rdi	      1917	am.c	FUNCTION_51
0x5229	    0x4889b580fcff	            mov qword [rbp - 0x380], rsi	      1917	am.c	FUNCTION_51
0x5230	    0x89957cfcffff	            mov dword [rbp - 0x384], edx	      1917	am.c	FUNCTION_51
0x5236	    0x64488b042528	                mov rax, qword fs:[0x28]	      1917	am.c	FUNCTION_51
0x523f	        0x488945f8	                mov qword [rbp - 8], rax	      1917	am.c	FUNCTION_51
0x5243	            0x31c0	                            xor eax, eax	      1917	am.c	FUNCTION_51
0x5245	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	      1918	am.c	FUNCTION_51
0x5250	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x5257	          0x4889c7	                            mov rdi, rax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x525a	      0xe8eeb0ffff	                     call sym.parse_tree	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x525f	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x5261	            0x7513	                           jne 0x40052b6	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x5263	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x526a	          0x4889c7	                            mov rdi, rax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x526d	      0xe8dbb0ffff	                     call sym.parse_tree	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x5272	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x5274	            0x740a	                            je 0x40052c0	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x5276	      0xb8ffffffff	                     mov eax, 0xffffffff	      1923	am.c	FUNCTION_51	IF_1
0x527b	      0xe959010000	                           jmp 0x4005419	      1923	am.c	FUNCTION_51	IF_1
0x5280	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      1925	am.c	FUNCTION_51	CALL_3
0x5287	      0xbe01000000	                              mov esi, 1	      1925	am.c	FUNCTION_51	CALL_3
0x528c	          0x4889c7	                            mov rdi, rax	      1925	am.c	FUNCTION_51	CALL_3
0x528f	      0xe800000000	                          call 0x40052d4	      1925	am.c	FUNCTION_51	CALL_3
0x5294	    0x41b800000000	                              mov r8d, 0	      1927	am.c	FUNCTION_51	CALL_4
0x529a	      0xb900000000	                              mov ecx, 0	      1927	am.c	FUNCTION_51	CALL_4
0x529f	      0xba00000000	                              mov edx, 0	      1927	am.c	FUNCTION_51	CALL_4
0x52a4	      0xbe04000000	                              mov esi, 4	      1927	am.c	FUNCTION_51	CALL_4
0x52a9	      0xbf00000000	                              mov edi, 0	      1927	am.c	FUNCTION_51	CALL_4
0x52ae	      0xe800000000	                          call 0x40052f3	      1927	am.c	FUNCTION_51	CALL_4
0x52b3	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	      1929	am.c	FUNCTION_51	CALL_5
0x52ba	      0xba00030000	                          mov edx, 0x300	      1929	am.c	FUNCTION_51	CALL_5
0x52bf	      0xbe00000000	                              mov esi, 0	      1929	am.c	FUNCTION_51	CALL_5
0x52c4	          0x4889c7	                            mov rdi, rax	      1929	am.c	FUNCTION_51	CALL_5
0x52c7	      0xe800000000	                          call 0x400530c	      1929	am.c	FUNCTION_51	CALL_5
0x52cc	    0xc785f0feffff	              mov dword [rbp - 0x110], 1	      1930	am.c	FUNCTION_51
0x52d6	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1931	am.c	FUNCTION_51
0x52e1	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      1932	am.c	FUNCTION_51
0x52ec	    0xc785f8fcffff	              mov dword [rbp - 0x308], 1	      1933	am.c	FUNCTION_51
0x52f6	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 1	      1934	am.c	FUNCTION_51
0x5300	    0x8b857cfcffff	            mov eax, dword [rbp - 0x384]	      1935	am.c	FUNCTION_51
0x5306	    0x8985f0fcffff	            mov dword [rbp - 0x310], eax	      1935	am.c	FUNCTION_51
0x530c	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	      1936	am.c	FUNCTION_51
0x5317	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	      1937	am.c	FUNCTION_51	CALL_6
0x531e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1937	am.c	FUNCTION_51	CALL_6
0x5322	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	      1937	am.c	FUNCTION_51	CALL_6
0x5329	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1937	am.c	FUNCTION_51	CALL_6
0x532d	    0x488d85a0fcff	                  lea rax, [rbp - 0x360]	      1937	am.c	FUNCTION_51	CALL_6
0x5334	          0x4889ce	                            mov rsi, rcx	      1937	am.c	FUNCTION_51	CALL_6
0x5337	          0x4889c7	                            mov rdi, rax	      1937	am.c	FUNCTION_51	CALL_6
0x533a	      0xe800000000	                          call 0x400537f	      1937	am.c	FUNCTION_51	CALL_6
0x533f	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      1938	am.c	FUNCTION_51	CALL_7
0x5346	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1938	am.c	FUNCTION_51	CALL_7
0x534a	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      1938	am.c	FUNCTION_51	CALL_7
0x5351	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1938	am.c	FUNCTION_51	CALL_7
0x5355	    0x488d8da0fcff	                  lea rcx, [rbp - 0x360]	      1938	am.c	FUNCTION_51	CALL_7
0x535c	        0x4883c128	                           add rcx, 0x28	      1938	am.c	FUNCTION_51	CALL_7
0x5360	          0x4889c6	                            mov rsi, rax	      1938	am.c	FUNCTION_51	CALL_7
0x5363	          0x4889cf	                            mov rdi, rcx	      1938	am.c	FUNCTION_51	CALL_7
0x5366	      0xe800000000	                          call 0x40053ab	      1938	am.c	FUNCTION_51	CALL_7
0x536b	    0x488d95f0fcff	                  lea rdx, [rbp - 0x310]	      1940	am.c	FUNCTION_51	IF_2	CALL_8
0x5372	    0x488d85a0fcff	                  lea rax, [rbp - 0x360]	      1940	am.c	FUNCTION_51	IF_2	CALL_8
0x5379	          0x4889c6	                            mov rsi, rax	      1940	am.c	FUNCTION_51	IF_2	CALL_8
0x537c	      0xbf02000000	                              mov edi, 2	      1940	am.c	FUNCTION_51	IF_2	CALL_8
0x5381	      0xe800000000	                          call 0x40053c6	      1940	am.c	FUNCTION_51	IF_2	CALL_8
0x5386	            0x85c0	                           test eax, eax	      1940	am.c	FUNCTION_51	IF_2	CALL_8
0x5388	            0x7416	                            je 0x40053e0	      1940	am.c	FUNCTION_51	IF_2	CALL_8
0x538a	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      1941	am.c	FUNCTION_51	IF_2	CALL_9
0x5391	          0x4889c7	                            mov rdi, rax	      1941	am.c	FUNCTION_51	IF_2	CALL_9
0x5394	      0xe81db0ffff	             call sym.rollback_lock_file	      1941	am.c	FUNCTION_51	IF_2	CALL_9
0x5399	      0xb8ffffffff	                     mov eax, 0xffffffff	      1942	am.c	FUNCTION_51	IF_2
0x539e	            0xeb39	                           jmp 0x4005419	      1942	am.c	FUNCTION_51	IF_2
0x53a0	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      1945	am.c	FUNCTION_51	IF_3	CALL_10
0x53a7	      0xba01000000	                              mov edx, 1	      1945	am.c	FUNCTION_51	IF_3	CALL_10
0x53ac	          0x4889c6	                            mov rsi, rax	      1945	am.c	FUNCTION_51	IF_3	CALL_10
0x53af	      0xbf00000000	                              mov edi, 0	      1945	am.c	FUNCTION_51	IF_3	CALL_10
0x53b4	      0xe800000000	                          call 0x40053f9	      1945	am.c	FUNCTION_51	IF_3	CALL_10
0x53b9	            0x85c0	                           test eax, eax	      1945	am.c	FUNCTION_51	IF_3	CALL_10
0x53bb	            0x7417	                            je 0x4005414	      1945	am.c	FUNCTION_51	IF_3	CALL_10
0x53bd	      0xbf00000000	                              mov edi, 0	      1946	am.c	FUNCTION_51	CALL_12
0x53c2	      0xe82faeffff	                               call sym.	      1946	am.c	FUNCTION_51	CALL_12
0x53c7	          0x4889c7	                            mov rdi, rax	      1946	am.c	FUNCTION_51	CALL_12
0x53ca	      0xb800000000	                              mov eax, 0	      1946	am.c	FUNCTION_51	CALL_12
0x53cf	      0xe800000000	                          call 0x4005414	      1946	am.c	FUNCTION_51	CALL_12
0x53d4	      0xb800000000	                              mov eax, 0	      1948	am.c	FUNCTION_51
0x53d9	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1949	am.c	FUNCTION_51
0x53dd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1949	am.c	FUNCTION_51
0x53e6	            0x7405	                            je 0x400542d	      1949	am.c	FUNCTION_51
0x53e8	      0xe800000000	                          call 0x400542d	      1949	am.c	FUNCTION_51
0x53ed	              0xc9	                                   leave	      1949	am.c	FUNCTION_51
0x53ee	              0xc3	                                     ret	      1949	am.c	FUNCTION_51
detect_patch_format	functions,0:DO,0:WHILE,1:FOR,0:CALL,18:IF,7:SWITCH,0:ELSE,0	150
0x19fb	              0x55	                                push rbp	       634	am.c	FUNCTION_24
0x19fc	          0x4889e5	                            mov rbp, rsp	       634	am.c	FUNCTION_24
0x19ff	        0x4883c480	             add rsp, 0xffffffffffffff80	       634	am.c	FUNCTION_24
0x1a03	        0x48897d88	             mov qword [rbp - 0x78], rdi	       634	am.c	FUNCTION_24
0x1a07	    0x64488b042528	                mov rax, qword fs:[0x28]	       634	am.c	FUNCTION_24
0x1a10	        0x488945f8	                mov qword [rbp - 8], rax	       634	am.c	FUNCTION_24
0x1a14	            0x31c0	                            xor eax, eax	       634	am.c	FUNCTION_24
0x1a16	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       635	am.c	FUNCTION_24
0x1a1d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       636	am.c	FUNCTION_24
0x1a25	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       636	am.c	FUNCTION_24
0x1a2d	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       636	am.c	FUNCTION_24
0x1a35	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       637	am.c	FUNCTION_24
0x1a3d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       637	am.c	FUNCTION_24
0x1a45	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       637	am.c	FUNCTION_24
0x1a4d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       638	am.c	FUNCTION_24
0x1a55	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       638	am.c	FUNCTION_24
0x1a5d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       638	am.c	FUNCTION_24
0x1a65	        0x488b4588	             mov rax, qword [rbp - 0x78]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a69	          0x488b00	                    mov rax, qword [rax]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a6c	          0x4885c0	                           test rax, rax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a6f	            0x742b	                            je 0x4001adc	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a71	        0x488b4588	             mov rax, qword [rbp - 0x78]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a75	          0x488b00	                    mov rax, qword [rax]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a78	      0xbe00000000	                              mov esi, 0	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a7d	          0x4889c7	                            mov rdi, rax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a80	      0xe800000000	                          call 0x4001ac5	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a85	            0x85c0	                           test eax, eax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a87	            0x7413	                            je 0x4001adc	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a89	        0x488b4588	             mov rax, qword [rbp - 0x78]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a8d	          0x488b00	                    mov rax, qword [rax]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a90	          0x4889c7	                            mov rdi, rax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a93	      0xe800000000	                          call 0x4001ad8	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a98	            0x85c0	                           test eax, eax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a9a	            0x740a	                            je 0x4001ae6	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x1a9c	      0xb801000000	                              mov eax, 1	       645	am.c	FUNCTION_24	IF_1
0x1aa1	      0xe989010000	                           jmp 0x4001c6f	       645	am.c	FUNCTION_24	IF_1
0x1aa6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       652	am.c	FUNCTION_24	CALL_3
0x1aaa	          0x488b00	                    mov rax, qword [rax]	       652	am.c	FUNCTION_24	CALL_3
0x1aad	      0xbe00000000	                              mov esi, 0	       652	am.c	FUNCTION_24	CALL_3
0x1ab2	          0x4889c7	                            mov rdi, rax	       652	am.c	FUNCTION_24	CALL_3
0x1ab5	      0xe800000000	                          call 0x4001afa	       652	am.c	FUNCTION_24	CALL_3
0x1aba	        0x48894598	             mov qword [rbp - 0x68], rax	       652	am.c	FUNCTION_24	CALL_3
0x1abe	            0xeb09	                           jmp 0x4001b09	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1ac0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       655	am.c	FUNCTION_24	WHILE_1	IF_2
0x1ac4	          0x4885c0	                           test rax, rax	       655	am.c	FUNCTION_24	WHILE_1	IF_2
0x1ac7	            0x7519	                           jne 0x4001b22	       655	am.c	FUNCTION_24	WHILE_1	IF_2
0x1ac9	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1acd	        0x488d45a0	                   lea rax, [rbp - 0x60]	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1ad1	          0x4889d6	                            mov rsi, rdx	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1ad4	          0x4889c7	                            mov rdi, rax	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1ad7	      0xe800000000	                          call 0x4001b1c	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1adc	            0x85c0	                           test eax, eax	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1ade	            0x74e0	                            je 0x4001b00	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1ae0	            0xeb01	                           jmp 0x4001b23	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x1ae2	              0x90	                                     nop	       656	am.c	FUNCTION_24	WHILE_1	IF_2
0x1ae3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1ae7	      0xbe00000000	                              mov esi, 0	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1aec	          0x4889c7	                            mov rdi, rax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1aef	      0xe800000000	                          call 0x4001b34	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1af4	            0x85c0	                           test eax, eax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1af6	            0x7515	                           jne 0x4001b4d	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1af8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1afc	      0xbe00000000	                              mov esi, 0	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1b01	          0x4889c7	                            mov rdi, rax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1b04	      0xe800000000	                          call 0x4001b49	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1b09	            0x85c0	                           test eax, eax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1b0b	            0x740c	                            je 0x4001b59	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x1b0d	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       660	am.c	FUNCTION_24	IF_3
0x1b14	      0xe9e3000000	                           jmp 0x4001c3c	       661	am.c	FUNCTION_24	IF_3
0x1b19	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x1b1d	      0xbe00000000	                              mov esi, 0	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x1b22	          0x4889c7	                            mov rdi, rax	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x1b25	      0xe800000000	                          call 0x4001b6a	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x1b2a	            0x85c0	                           test eax, eax	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x1b2c	            0x740c	                            je 0x4001b7a	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x1b2e	    0xc74594030000	               mov dword [rbp - 0x6c], 3	       665	am.c	FUNCTION_24	IF_4
0x1b35	      0xe9c2000000	                           jmp 0x4001c3c	       666	am.c	FUNCTION_24	IF_4
0x1b3a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x1b3e	      0xbe00000000	                              mov esi, 0	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x1b43	          0x4889c7	                            mov rdi, rax	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x1b46	      0xe800000000	                          call 0x4001b8b	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x1b4b	            0x85c0	                           test eax, eax	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x1b4d	            0x750c	                           jne 0x4001b9b	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x1b4f	    0xc74594040000	               mov dword [rbp - 0x6c], 4	       670	am.c	FUNCTION_24	IF_5
0x1b56	      0xe9a1000000	                           jmp 0x4001c3c	       671	am.c	FUNCTION_24	IF_5
0x1b5b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       674	am.c	FUNCTION_24	CALL_9
0x1b5f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       674	am.c	FUNCTION_24	CALL_9
0x1b63	          0x4889d6	                            mov rsi, rdx	       674	am.c	FUNCTION_24	CALL_9
0x1b66	          0x4889c7	                            mov rdi, rax	       674	am.c	FUNCTION_24	CALL_9
0x1b69	      0xe800000000	                          call 0x4001bae	       674	am.c	FUNCTION_24	CALL_9
0x1b6e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       675	am.c	FUNCTION_24	CALL_10
0x1b72	        0x488d45e0	                   lea rax, [rbp - 0x20]	       675	am.c	FUNCTION_24	CALL_10
0x1b76	          0x4889d6	                            mov rsi, rdx	       675	am.c	FUNCTION_24	CALL_10
0x1b79	          0x4889c7	                            mov rdi, rax	       675	am.c	FUNCTION_24	CALL_10
0x1b7c	      0xe800000000	                          call 0x4001bc1	       675	am.c	FUNCTION_24	CALL_10
0x1b81	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       681	am.c	FUNCTION_24	IF_6
0x1b85	          0x4885c0	                           test rax, rax	       681	am.c	FUNCTION_24	IF_6
0x1b88	            0x7451	                            je 0x4001c1b	       681	am.c	FUNCTION_24	IF_6
0x1b8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       681	am.c	FUNCTION_24	IF_6
0x1b8e	          0x4885c0	                           test rax, rax	       681	am.c	FUNCTION_24	IF_6
0x1b91	            0x7548	                           jne 0x4001c1b	       681	am.c	FUNCTION_24	IF_6
0x1b93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x1b97	      0xbe00000000	                              mov esi, 0	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x1b9c	          0x4889c7	                            mov rdi, rax	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x1b9f	      0xe800000000	                          call 0x4001be4	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x1ba4	            0x85c0	                           test eax, eax	       681	am.c	FUNCTION_24	IF_6
0x1ba6	            0x752a	                           jne 0x4001c12	       681	am.c	FUNCTION_24	IF_6
0x1ba8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x1bac	      0xbe00000000	                              mov esi, 0	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x1bb1	          0x4889c7	                            mov rdi, rax	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x1bb4	      0xe800000000	                          call 0x4001bf9	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x1bb9	            0x85c0	                           test eax, eax	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x1bbb	            0x7515	                           jne 0x4001c12	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x1bbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x1bc1	      0xbe00000000	                              mov esi, 0	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x1bc6	          0x4889c7	                            mov rdi, rax	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x1bc9	      0xe800000000	                          call 0x4001c0e	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x1bce	            0x85c0	                           test eax, eax	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x1bd0	            0x7409	                            je 0x4001c1b	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x1bd2	    0xc74594020000	               mov dword [rbp - 0x6c], 2	       685	am.c	FUNCTION_24	IF_6
0x1bd9	            0xeb21	                           jmp 0x4001c3c	       686	am.c	FUNCTION_24	IF_6
0x1bdb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1bdf	          0x4885c0	                           test rax, rax	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1be2	            0x7418	                            je 0x4001c3c	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1be4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1be8	          0x4889c7	                            mov rdi, rax	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1beb	      0xe8c1fcffff	                        call sym.is_mail	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1bf0	            0x85c0	                           test eax, eax	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1bf2	            0x7408	                            je 0x4001c3c	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x1bf4	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       690	am.c	FUNCTION_24	IF_7
0x1bfb	              0x90	                                     nop	       691	am.c	FUNCTION_24	IF_7
0x1bfc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       695	am.c	FUNCTION_24	CALL_15
0x1c00	          0x4889c7	                            mov rdi, rax	       695	am.c	FUNCTION_24	CALL_15
0x1c03	      0xe800000000	                          call 0x4001c48	       695	am.c	FUNCTION_24	CALL_15
0x1c08	        0x488d45a0	                   lea rax, [rbp - 0x60]	       696	am.c	FUNCTION_24	CALL_16
0x1c0c	          0x4889c7	                            mov rdi, rax	       696	am.c	FUNCTION_24	CALL_16
0x1c0f	      0xe800000000	                          call 0x4001c54	       696	am.c	FUNCTION_24	CALL_16
0x1c14	        0x488d45c0	                   lea rax, [rbp - 0x40]	       697	am.c	FUNCTION_24	CALL_17
0x1c18	          0x4889c7	                            mov rdi, rax	       697	am.c	FUNCTION_24	CALL_17
0x1c1b	      0xe800000000	                          call 0x4001c60	       697	am.c	FUNCTION_24	CALL_17
0x1c20	        0x488d45e0	                   lea rax, [rbp - 0x20]	       698	am.c	FUNCTION_24	CALL_18
0x1c24	          0x4889c7	                            mov rdi, rax	       698	am.c	FUNCTION_24	CALL_18
0x1c27	      0xe800000000	                          call 0x4001c6c	       698	am.c	FUNCTION_24	CALL_18
0x1c2c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       699	am.c	FUNCTION_24
0x1c2f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       700	am.c	FUNCTION_24
0x1c33	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       700	am.c	FUNCTION_24
0x1c3c	            0x7405	                            je 0x4001c83	       700	am.c	FUNCTION_24
0x1c3e	      0xe800000000	                          call 0x4001c83	       700	am.c	FUNCTION_24
0x1c43	              0xc9	                                   leave	       700	am.c	FUNCTION_24
0x1c44	              0xc3	                                     ret	       700	am.c	FUNCTION_24
die_user_resolve	functions,0:DO,0:WHILE,0:FOR,0:CALL,8:IF,1:SWITCH,0:ELSE,1	49
0x2e4f	              0x55	                                push rbp	      1156	am.c	FUNCTION_35
0x2e50	          0x4889e5	                            mov rbp, rsp	      1156	am.c	FUNCTION_35
0x2e53	        0x4883ec20	                           sub rsp, 0x20	      1156	am.c	FUNCTION_35
0x2e57	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1156	am.c	FUNCTION_35
0x2e5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1157	am.c	FUNCTION_35	IF_1
0x2e5f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1157	am.c	FUNCTION_35	IF_1
0x2e66	          0x4885c0	                           test rax, rax	      1157	am.c	FUNCTION_35	IF_1
0x2e69	            0x741f	                            je 0x4002eca	      1157	am.c	FUNCTION_35	IF_1
0x2e6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x2e6f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x2e76	          0x4889c6	                            mov rsi, rax	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x2e79	      0xbf00000000	                              mov edi, 0	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x2e7e	      0xb800000000	                              mov eax, 0	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x2e83	      0xe800000000	                          call 0x4002ec8	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x2e88	            0xeb7e	                           jmp 0x4002f48	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x2e8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1160	am.c	FUNCTION_35	ELSE_1
0x2e8e	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1160	am.c	FUNCTION_35	ELSE_1
0x2e91	            0x85c0	                           test eax, eax	      1160	am.c	FUNCTION_35	ELSE_1
0x2e93	            0x7407	                            je 0x4002edc	      1160	am.c	FUNCTION_35	ELSE_1
0x2e95	      0xb800000000	                              mov eax, 0	      1160	am.c	FUNCTION_35	ELSE_1
0x2e9a	            0xeb05	                           jmp 0x4002ee1	      1160	am.c	FUNCTION_35	ELSE_1
0x2e9c	      0xb800000000	                              mov eax, 0	      1160	am.c	FUNCTION_35	ELSE_1
0x2ea1	        0x488945f8	                mov qword [rbp - 8], rax	      1160	am.c	FUNCTION_35	ELSE_1
0x2ea5	      0xbf00000000	                              mov edi, 0	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2eaa	      0xe847d3ffff	                               call sym.	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2eaf	          0x4889c2	                            mov rdx, rax	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2eb2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2eb6	          0x4889c6	                            mov rsi, rax	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2eb9	          0x4889d7	                            mov rdi, rdx	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2ebc	      0xb800000000	                              mov eax, 0	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2ec1	      0xe800000000	                          call 0x4002f06	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x2ec6	      0xbf00000000	                              mov edi, 0	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2ecb	      0xe826d3ffff	                               call sym.	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2ed0	          0x4889c2	                            mov rdx, rax	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2ed3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2ed7	          0x4889c6	                            mov rsi, rax	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2eda	          0x4889d7	                            mov rdi, rdx	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2edd	      0xb800000000	                              mov eax, 0	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2ee2	      0xe800000000	                          call 0x4002f27	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x2ee7	      0xbf00000000	                              mov edi, 0	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2eec	      0xe805d3ffff	                               call sym.	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2ef1	          0x4889c2	                            mov rdx, rax	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2ef4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2ef8	          0x4889c6	                            mov rsi, rax	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2efb	          0x4889d7	                            mov rdi, rdx	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2efe	      0xb800000000	                              mov eax, 0	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2f03	      0xe800000000	                          call 0x4002f48	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x2f08	      0xbf80000000	                           mov edi, 0x80	      1167	am.c	FUNCTION_35	CALL_8
0x2f0d	      0xe800000000	              call sym.am_append_signoff	      1167	am.c	FUNCTION_35	CALL_8
write_state_text	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,0:SWITCH,0:ELSE,0	21
0x666	              0x55	                                push rbp	       191	am.c	FUNCTION_7
0x667	          0x4889e5	                            mov rbp, rsp	       191	am.c	FUNCTION_7
0x66a	        0x4883ec20	                           sub rsp, 0x20	       191	am.c	FUNCTION_7
0x66e	        0x48897df8	                mov qword [rbp - 8], rdi	       191	am.c	FUNCTION_7
0x672	        0x488975f0	             mov qword [rbp - 0x10], rsi	       191	am.c	FUNCTION_7
0x676	        0x488955e8	             mov qword [rbp - 0x18], rdx	       191	am.c	FUNCTION_7
0x67a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       192	am.c	FUNCTION_7	CALL_2
0x67e	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	am.c	FUNCTION_7	CALL_2
0x682	          0x4889d6	                            mov rsi, rdx	       192	am.c	FUNCTION_7	CALL_2
0x685	          0x4889c7	                            mov rdi, rax	       192	am.c	FUNCTION_7	CALL_2
0x688	      0xe8aaffffff	                        call sym.am_path	       192	am.c	FUNCTION_7	CALL_2
0x68d	          0x4889c1	                            mov rcx, rax	       192	am.c	FUNCTION_7	CALL_2
0x690	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	am.c	FUNCTION_7	CALL_2
0x694	          0x4889c2	                            mov rdx, rax	       192	am.c	FUNCTION_7	CALL_2
0x697	      0xbe00000000	                              mov esi, 0	       192	am.c	FUNCTION_7	CALL_2
0x69c	          0x4889cf	                            mov rdi, rcx	       192	am.c	FUNCTION_7	CALL_2
0x69f	      0xb800000000	                              mov eax, 0	       192	am.c	FUNCTION_7	CALL_2
0x6a4	      0xe800000000	                          call 0x40006e9	       192	am.c	FUNCTION_7	CALL_2
0x6a9	              0x90	                                     nop	       193	am.c	FUNCTION_7
0x6aa	              0xc9	                                   leave	       193	am.c	FUNCTION_7
0x6ab	              0xc3	                                     ret	       193	am.c	FUNCTION_7
is_mail	functions,0:DO,0:WHILE,1:FOR,0:CALL,9:IF,5:SWITCH,0:ELSE,0	82
0x18b1	              0x55	                                push rbp	       595	am.c	FUNCTION_23
0x18b2	          0x4889e5	                            mov rbp, rsp	       595	am.c	FUNCTION_23
0x18b5	    0x4881ec900000	                           sub rsp, 0x90	       595	am.c	FUNCTION_23
0x18bc	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       595	am.c	FUNCTION_23
0x18c3	    0x64488b042528	                mov rax, qword fs:[0x28]	       595	am.c	FUNCTION_23
0x18cc	        0x488945f8	                mov qword [rbp - 8], rax	       595	am.c	FUNCTION_23
0x18d0	            0x31c0	                            xor eax, eax	       595	am.c	FUNCTION_23
0x18d2	    0x48c745880000	               mov qword [rbp - 0x78], 0	       596	am.c	FUNCTION_23
0x18da	    0x48c745900000	               mov qword [rbp - 0x70], 0	       597	am.c	FUNCTION_23
0x18e2	    0x48c745980000	               mov qword [rbp - 0x68], 0	       597	am.c	FUNCTION_23
0x18ea	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       597	am.c	FUNCTION_23
0x18f2	    0xc74584010000	               mov dword [rbp - 0x7c], 1	       599	am.c	FUNCTION_23
0x18f9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x1900	      0xba00000000	                              mov edx, 0	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x1905	      0xbe00000000	                              mov esi, 0	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x190a	          0x4889c7	                            mov rdi, rax	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x190d	      0xe800000000	                          call 0x4001952	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x1912	            0x85c0	                           test eax, eax	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x1914	            0x7417	                            je 0x400196d	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x1916	      0xbf00000000	                              mov edi, 0	       602	am.c	FUNCTION_23	CALL_3
0x191b	      0xe8d6e8ffff	                               call sym.	       602	am.c	FUNCTION_23	CALL_3
0x1920	          0x4889c7	                            mov rdi, rax	       602	am.c	FUNCTION_23	CALL_3
0x1923	      0xb800000000	                              mov eax, 0	       602	am.c	FUNCTION_23	CALL_3
0x1928	      0xe800000000	                          call 0x400196d	       602	am.c	FUNCTION_23	CALL_3
0x192d	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x1931	        0x488d45b0	                   lea rax, [rbp - 0x50]	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x1935	      0xba09000000	                              mov edx, 9	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x193a	          0x4889ce	                            mov rsi, rcx	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x193d	          0x4889c7	                            mov rdi, rax	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x1940	      0xe800000000	                          call 0x4001985	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x1945	            0x85c0	                           test eax, eax	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x1947	            0x7464	                            je 0x40019ed	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x1949	        0x488b4588	             mov rax, qword [rbp - 0x78]	       605	am.c	FUNCTION_23	CALL_5
0x194d	          0x4889c6	                            mov rsi, rax	       605	am.c	FUNCTION_23	CALL_5
0x1950	      0xbf00000000	                              mov edi, 0	       605	am.c	FUNCTION_23	CALL_5
0x1955	      0xb800000000	                              mov eax, 0	       605	am.c	FUNCTION_23	CALL_5
0x195a	      0xe800000000	                          call 0x400199f	       605	am.c	FUNCTION_23	CALL_5
0x195f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       608	am.c	FUNCTION_23	WHILE_1	IF_3
0x1963	          0x4885c0	                           test rax, rax	       608	am.c	FUNCTION_23	WHILE_1	IF_3
0x1966	            0x7461	                            je 0x4001a09	       608	am.c	FUNCTION_23	WHILE_1	IF_3
0x1968	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x196c	           0xfb600	                   movzx eax, byte [rax]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x196f	            0x3c09	                               cmp al, 9	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x1971	            0x743a	                            je 0x40019ed	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x1973	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x1977	           0xfb600	                   movzx eax, byte [rax]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x197a	            0x3c20	                            cmp al, 0x20	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x197c	            0x7502	                           jne 0x40019c0	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x197e	            0xeb2d	                           jmp 0x40019ed	       613	am.c	FUNCTION_23	WHILE_1	IF_4
0x1980	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x1984	        0x488d45b0	                   lea rax, [rbp - 0x50]	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x1988	    0x41b800000000	                              mov r8d, 0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x198e	      0xb900000000	                              mov ecx, 0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x1993	      0xba00000000	                              mov edx, 0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x1998	          0x4889c7	                            mov rdi, rax	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x199b	      0xe800000000	                          call 0x40019e0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x19a0	            0x85c0	                           test eax, eax	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x19a2	            0x7409	                            je 0x40019ed	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x19a4	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       617	am.c	FUNCTION_23	WHILE_1	IF_5
0x19ab	            0xeb1d	                           jmp 0x4001a0a	       618	am.c	FUNCTION_23	WHILE_1	IF_5
0x19ad	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19b4	        0x488d4590	                   lea rax, [rbp - 0x70]	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19b8	          0x4889d6	                            mov rsi, rdx	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19bb	          0x4889c7	                            mov rdi, rax	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19be	      0xe800000000	                          call 0x4001a03	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19c3	            0x85c0	                           test eax, eax	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19c5	            0x7498	                            je 0x400199f	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19c7	            0xeb01	                           jmp 0x4001a0a	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x19c9	              0x90	                                     nop	       609	am.c	FUNCTION_23	WHILE_1	IF_3
0x19ca	        0x488d45b0	                   lea rax, [rbp - 0x50]	       623	am.c	FUNCTION_23	CALL_8
0x19ce	          0x4889c7	                            mov rdi, rax	       623	am.c	FUNCTION_23	CALL_8
0x19d1	      0xe800000000	                          call 0x4001a16	       623	am.c	FUNCTION_23	CALL_8
0x19d6	        0x488d4590	                   lea rax, [rbp - 0x70]	       624	am.c	FUNCTION_23	CALL_9
0x19da	          0x4889c7	                            mov rdi, rax	       624	am.c	FUNCTION_23	CALL_9
0x19dd	      0xe800000000	                          call 0x4001a22	       624	am.c	FUNCTION_23	CALL_9
0x19e2	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       625	am.c	FUNCTION_23
0x19e5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       626	am.c	FUNCTION_23
0x19e9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       626	am.c	FUNCTION_23
0x19f2	            0x7405	                            je 0x4001a39	       626	am.c	FUNCTION_23
0x19f4	      0xe800000000	                          call 0x4001a39	       626	am.c	FUNCTION_23
0x19f9	              0xc9	                                   leave	       626	am.c	FUNCTION_23
0x19fa	              0xc3	                                     ret	       626	am.c	FUNCTION_23
write_state_bool	functions,0:DO,0:WHILE,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0	19
0x6ef	              0x55	                                push rbp	       203	am.c	FUNCTION_9
0x6f0	          0x4889e5	                            mov rbp, rsp	       203	am.c	FUNCTION_9
0x6f3	        0x4883ec20	                           sub rsp, 0x20	       203	am.c	FUNCTION_9
0x6f7	        0x48897df8	                mov qword [rbp - 8], rdi	       203	am.c	FUNCTION_9
0x6fb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       203	am.c	FUNCTION_9
0x6ff	          0x8955ec	             mov dword [rbp - 0x14], edx	       203	am.c	FUNCTION_9
0x702	        0x837dec00	               cmp dword [rbp - 0x14], 0	       204	am.c	FUNCTION_9	CALL_1
0x706	            0x7407	                            je 0x400074f	       204	am.c	FUNCTION_9	CALL_1
0x708	      0xba00000000	                              mov edx, 0	       204	am.c	FUNCTION_9	CALL_1
0x70d	            0xeb05	                           jmp 0x4000754	       204	am.c	FUNCTION_9	CALL_1
0x70f	      0xba00000000	                              mov edx, 0	       204	am.c	FUNCTION_9	CALL_1
0x714	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       204	am.c	FUNCTION_9	CALL_1
0x718	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	am.c	FUNCTION_9	CALL_1
0x71c	          0x4889ce	                            mov rsi, rcx	       204	am.c	FUNCTION_9	CALL_1
0x71f	          0x4889c7	                            mov rdi, rax	       204	am.c	FUNCTION_9	CALL_1
0x722	      0xe83fffffff	               call sym.write_state_text	       204	am.c	FUNCTION_9	CALL_1
0x727	              0x90	                                     nop	       205	am.c	FUNCTION_9
0x728	              0xc9	                                   leave	       205	am.c	FUNCTION_9
0x729	              0xc3	                                     ret	       205	am.c	FUNCTION_9
am_path	functions,0:DO,0:WHILE,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0	14
0x637	              0x55	                                push rbp	       182	am.c	FUNCTION_6
0x638	          0x4889e5	                            mov rbp, rsp	       182	am.c	FUNCTION_6
0x63b	        0x4883ec10	                           sub rsp, 0x10	       182	am.c	FUNCTION_6
0x63f	        0x48897df8	                mov qword [rbp - 8], rdi	       182	am.c	FUNCTION_6
0x643	        0x488975f0	             mov qword [rbp - 0x10], rsi	       182	am.c	FUNCTION_6
0x647	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	am.c	FUNCTION_6	CALL_1
0x64b	          0x488b00	                    mov rax, qword [rax]	       183	am.c	FUNCTION_6	CALL_1
0x64e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       183	am.c	FUNCTION_6	CALL_1
0x652	          0x4889c6	                            mov rsi, rax	       183	am.c	FUNCTION_6	CALL_1
0x655	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x65a	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x65f	      0xe800000000	                          call 0x40006a4	       183	am.c	FUNCTION_6	CALL_1
0x664	              0xc9	                                   leave	       184	am.c	FUNCTION_6
0x665	              0xc3	                                     ret	       184	am.c	FUNCTION_6
strbuf_avail	functions,0:DO,0:WHILE,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0	18
0x83	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_90
0x84	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_90
0x87	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_90
0x8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_90
0x8f	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_90
0x92	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_90
0x95	            0x741b	                            je 0x40000f2	       141	strbuf.h	FUNCTION_90
0x97	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_90
0x9b	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_90
0x9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_90
0xa2	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_90
0xa6	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_90
0xa9	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_90
0xac	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_90
0xb0	            0xeb05	                           jmp 0x40000f7	       141	strbuf.h	FUNCTION_90
0xb2	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_90
0xb7	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_90
0xb8	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_90
am_append_signoff	functions,0:DO,0:WHILE,0:FOR,0:CALL,3:IF,0:SWITCH,0:ELSE,0	40
0x2f12	              0x55	                                push rbp	      1174	am.c	FUNCTION_36
0x2f13	          0x4889e5	                            mov rbp, rsp	      1174	am.c	FUNCTION_36
0x2f16	        0x4883ec30	                           sub rsp, 0x30	      1174	am.c	FUNCTION_36
0x2f1a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1174	am.c	FUNCTION_36
0x2f1e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1174	am.c	FUNCTION_36
0x2f27	        0x488945f8	                mov qword [rbp - 8], rax	      1174	am.c	FUNCTION_36
0x2f2b	            0x31c0	                            xor eax, eax	      1174	am.c	FUNCTION_36
0x2f2d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1175	am.c	FUNCTION_36
0x2f35	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1175	am.c	FUNCTION_36
0x2f3d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1175	am.c	FUNCTION_36
0x2f45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1177	am.c	FUNCTION_36	CALL_1
0x2f49	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      1177	am.c	FUNCTION_36	CALL_1
0x2f4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1177	am.c	FUNCTION_36	CALL_1
0x2f51	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1177	am.c	FUNCTION_36	CALL_1
0x2f55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1177	am.c	FUNCTION_36	CALL_1
0x2f59	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      1177	am.c	FUNCTION_36	CALL_1
0x2f5d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1177	am.c	FUNCTION_36	CALL_1
0x2f61	          0x4889c7	                            mov rdi, rax	      1177	am.c	FUNCTION_36	CALL_1
0x2f64	      0xe800000000	                          call 0x4002fa9	      1177	am.c	FUNCTION_36	CALL_1
0x2f69	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1178	am.c	FUNCTION_36	CALL_2
0x2f6d	      0xba00000000	                              mov edx, 0	      1178	am.c	FUNCTION_36	CALL_2
0x2f72	      0xbe00000000	                              mov esi, 0	      1178	am.c	FUNCTION_36	CALL_2
0x2f77	          0x4889c7	                            mov rdi, rax	      1178	am.c	FUNCTION_36	CALL_2
0x2f7a	      0xe800000000	                          call 0x4002fbf	      1178	am.c	FUNCTION_36	CALL_2
0x2f7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1179	am.c	FUNCTION_36	CALL_3
0x2f83	        0x488d5030	                   lea rdx, [rax + 0x30]	      1179	am.c	FUNCTION_36	CALL_3
0x2f87	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1179	am.c	FUNCTION_36	CALL_3
0x2f8b	          0x4889d6	                            mov rsi, rdx	      1179	am.c	FUNCTION_36	CALL_3
0x2f8e	          0x4889c7	                            mov rdi, rax	      1179	am.c	FUNCTION_36	CALL_3
0x2f91	      0xe800000000	                          call 0x4002fd6	      1179	am.c	FUNCTION_36	CALL_3
0x2f96	          0x4889c2	                            mov rdx, rax	      1179	am.c	FUNCTION_36	CALL_3
0x2f99	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1179	am.c	FUNCTION_36	CALL_3
0x2f9d	        0x48895028	             mov qword [rax + 0x28], rdx	      1179	am.c	FUNCTION_36	CALL_3
0x2fa1	              0x90	                                     nop	      1180	am.c	FUNCTION_36
0x2fa2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1180	am.c	FUNCTION_36
0x2fa6	    0x644833042528	                xor rax, qword fs:[0x28]	      1180	am.c	FUNCTION_36
0x2faf	            0x7405	                            je 0x4002ff6	      1180	am.c	FUNCTION_36
0x2fb1	      0xe800000000	                          call 0x4002ff6	      1180	am.c	FUNCTION_36
0x2fb6	              0xc9	                                   leave	      1180	am.c	FUNCTION_36
0x2fb7	              0xc3	                                     ret	      1180	am.c	FUNCTION_36
run_applypatch_msg_hook	functions,0:DO,0:WHILE,0:FOR,0:CALL,8:IF,2:SWITCH,0:ELSE,0	54
0x1458	              0x55	                                push rbp	       489	am.c	FUNCTION_20
0x1459	          0x4889e5	                            mov rbp, rsp	       489	am.c	FUNCTION_20
0x145c	              0x53	                                push rbx	       489	am.c	FUNCTION_20
0x145d	        0x4883ec28	                           sub rsp, 0x28	       489	am.c	FUNCTION_20
0x1461	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       489	am.c	FUNCTION_20
0x1465	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       492	am.c	FUNCTION_20	CALL_1
0x1469	        0x488b4028	            mov rax, qword [rax + 0x28] 	       492	am.c	FUNCTION_20	CALL_1
0x146d	          0x4885c0	                           test rax, rax	       492	am.c	FUNCTION_20	CALL_1
0x1470	            0x7519	                           jne 0x40014cb	       492	am.c	FUNCTION_20	CALL_1
0x1472	      0xb900000000	                              mov ecx, 0	       492	am.c	FUNCTION_20	CALL_1
0x1477	      0xbaec010000	                          mov edx, 0x1ec	       492	am.c	FUNCTION_20	CALL_1
0x147c	      0xbe00000000	                              mov esi, 0	       492	am.c	FUNCTION_20	CALL_1
0x1481	      0xbf00000000	                              mov edi, 0	       492	am.c	FUNCTION_20	CALL_1
0x1486	      0xe800000000	                          call 0x40014cb	       492	am.c	FUNCTION_20	CALL_1
0x148b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       493	am.c	FUNCTION_20	CALL_3
0x148f	      0xbe00000000	                              mov esi, 0	       493	am.c	FUNCTION_20	CALL_3
0x1494	          0x4889c7	                            mov rdi, rax	       493	am.c	FUNCTION_20	CALL_3
0x1497	      0xe89bf1ffff	                        call sym.am_path	       493	am.c	FUNCTION_20	CALL_3
0x149c	      0xb900000000	                              mov ecx, 0	       493	am.c	FUNCTION_20	CALL_3
0x14a1	          0x4889c2	                            mov rdx, rax	       493	am.c	FUNCTION_20	CALL_3
0x14a4	      0xbe00000000	                              mov esi, 0	       493	am.c	FUNCTION_20	CALL_3
0x14a9	      0xbf00000000	                              mov edi, 0	       493	am.c	FUNCTION_20	CALL_3
0x14ae	      0xb800000000	                              mov eax, 0	       493	am.c	FUNCTION_20	CALL_3
0x14b3	      0xe800000000	                          call 0x40014f8	       493	am.c	FUNCTION_20	CALL_3
0x14b8	          0x8945ec	             mov dword [rbp - 0x14], eax	       493	am.c	FUNCTION_20	CALL_3
0x14bb	        0x837dec00	               cmp dword [rbp - 0x14], 0	       495	am.c	FUNCTION_20	IF_1
0x14bf	            0x755a	                           jne 0x400155b	       495	am.c	FUNCTION_20	IF_1
0x14c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       496	am.c	FUNCTION_20	IF_1	CALL_4
0x14c5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       496	am.c	FUNCTION_20	IF_1	CALL_4
0x14c9	          0x4889c7	                            mov rdi, rax	       496	am.c	FUNCTION_20	IF_1	CALL_4
0x14cc	      0xe800000000	                          call 0x4001511	       496	am.c	FUNCTION_20	IF_1	CALL_4
0x14d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       496	am.c	FUNCTION_20	IF_1	CALL_4
0x14d5	    0x48c740280000	               mov qword [rax + 0x28], 0	       496	am.c	FUNCTION_20	IF_1	CALL_4
0x14dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_5
0x14e1	          0x4889c7	                            mov rdi, rax	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_5
0x14e4	      0xe844f9ffff	                call sym.read_commit_msg	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_5
0x14e9	            0x85c0	                           test eax, eax	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_5
0x14eb	            0x792e	                           jns 0x400155b	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_5
0x14ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x14f1	      0xbe00000000	                              mov esi, 0	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x14f6	          0x4889c7	                            mov rdi, rax	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x14f9	      0xe839f1ffff	                        call sym.am_path	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x14fe	          0x4889c3	                            mov rbx, rax	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x1501	      0xbf00000000	                              mov edi, 0	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x1506	      0xe8ebecffff	                               call sym.	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x150b	          0x4889de	                            mov rsi, rbx	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x150e	          0x4889c7	                            mov rdi, rax	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x1511	      0xb800000000	                              mov eax, 0	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x1516	      0xe800000000	                          call 0x400155b	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x151b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       502	am.c	FUNCTION_20
0x151e	        0x4883c428	                           add rsp, 0x28	       503	am.c	FUNCTION_20
0x1522	              0x5b	                                 pop rbx	       503	am.c	FUNCTION_20
0x1523	              0x5d	                                 pop rbp	       503	am.c	FUNCTION_20
0x1524	              0xc3	                                     ret	       503	am.c	FUNCTION_20
read_commit_msg	functions,0:DO,0:WHILE,0:FOR,0:CALL,4:IF,1:SWITCH,0:ELSE,0	48
0xe2d	              0x55	                                push rbp	       375	am.c	FUNCTION_16
0xe2e	          0x4889e5	                            mov rbp, rsp	       375	am.c	FUNCTION_16
0xe31	        0x4883ec30	                           sub rsp, 0x30	       375	am.c	FUNCTION_16
0xe35	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       375	am.c	FUNCTION_16
0xe39	    0x64488b042528	                mov rax, qword fs:[0x28]	       375	am.c	FUNCTION_16
0xe42	        0x488945f8	                mov qword [rbp - 8], rax	       375	am.c	FUNCTION_16
0xe46	            0x31c0	                            xor eax, eax	       375	am.c	FUNCTION_16
0xe48	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       376	am.c	FUNCTION_16
0xe50	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       376	am.c	FUNCTION_16
0xe58	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       376	am.c	FUNCTION_16
0xe60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       378	am.c	FUNCTION_16	CALL_1
0xe64	        0x488b4028	            mov rax, qword [rax + 0x28] 	       378	am.c	FUNCTION_16	CALL_1
0xe68	          0x4885c0	                           test rax, rax	       378	am.c	FUNCTION_16	CALL_1
0xe6b	            0x7419	                            je 0x4000ec6	       378	am.c	FUNCTION_16	CALL_1
0xe6d	      0xb900000000	                              mov ecx, 0	       378	am.c	FUNCTION_16	CALL_1
0xe72	      0xba7a010000	                          mov edx, 0x17a	       378	am.c	FUNCTION_16	CALL_1
0xe77	      0xbe00000000	                              mov esi, 0	       378	am.c	FUNCTION_16	CALL_1
0xe7c	      0xbf00000000	                              mov edi, 0	       378	am.c	FUNCTION_16	CALL_1
0xe81	      0xe800000000	                          call 0x4000ec6	       378	am.c	FUNCTION_16	CALL_1
0xe86	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xe8a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xe8e	      0xb900000000	                              mov ecx, 0	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xe93	      0xba00000000	                              mov edx, 0	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xe98	          0x4889c7	                            mov rdi, rax	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xe9b	      0xe882faffff	                call sym.read_state_file	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xea0	            0x85c0	                           test eax, eax	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xea2	            0x7913	                           jns 0x4000ef7	       380	am.c	FUNCTION_16	IF_1	CALL_2
0xea4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       381	am.c	FUNCTION_16	IF_1	CALL_3
0xea8	          0x4889c7	                            mov rdi, rax	       381	am.c	FUNCTION_16	IF_1	CALL_3
0xeab	      0xe800000000	                          call 0x4000ef0	       381	am.c	FUNCTION_16	IF_1	CALL_3
0xeb0	      0xb8ffffffff	                     mov eax, 0xffffffff	       382	am.c	FUNCTION_16	IF_1
0xeb5	            0xeb27	                           jmp 0x4000f1e	       382	am.c	FUNCTION_16	IF_1
0xeb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       385	am.c	FUNCTION_16	CALL_4
0xebb	        0x488d5030	                   lea rdx, [rax + 0x30]	       385	am.c	FUNCTION_16	CALL_4
0xebf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       385	am.c	FUNCTION_16	CALL_4
0xec3	          0x4889d6	                            mov rsi, rdx	       385	am.c	FUNCTION_16	CALL_4
0xec6	          0x4889c7	                            mov rdi, rax	       385	am.c	FUNCTION_16	CALL_4
0xec9	      0xe800000000	                          call 0x4000f0e	       385	am.c	FUNCTION_16	CALL_4
0xece	          0x4889c2	                            mov rdx, rax	       385	am.c	FUNCTION_16	CALL_4
0xed1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       385	am.c	FUNCTION_16	CALL_4
0xed5	        0x48895028	             mov qword [rax + 0x28], rdx	       385	am.c	FUNCTION_16	CALL_4
0xed9	      0xb800000000	                              mov eax, 0	       386	am.c	FUNCTION_16
0xede	        0x488b4df8	                mov rcx, qword [rbp - 8]	       387	am.c	FUNCTION_16
0xee2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       387	am.c	FUNCTION_16
0xeeb	            0x7405	                            je 0x4000f32	       387	am.c	FUNCTION_16
0xeed	      0xe800000000	                          call 0x4000f32	       387	am.c	FUNCTION_16
0xef2	              0xc9	                                   leave	       387	am.c	FUNCTION_16
0xef3	              0xc3	                                     ret	       387	am.c	FUNCTION_16
am_resolve	functions,0:DO,0:WHILE,0:FOR,0:CALL,19:IF,4:SWITCH,0:ELSE,0	85
0x50e1	              0x55	                                push rbp	      1876	am.c	FUNCTION_50
0x50e2	          0x4889e5	                            mov rbp, rsp	      1876	am.c	FUNCTION_50
0x50e5	            0x4154	                                push r12	      1876	am.c	FUNCTION_50
0x50e7	              0x53	                                push rbx	      1876	am.c	FUNCTION_50
0x50e8	        0x4883ec10	                           sub rsp, 0x10	      1876	am.c	FUNCTION_50
0x50ec	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1876	am.c	FUNCTION_50
0x50f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	am.c	FUNCTION_50	CALL_1
0x50f4	          0x4889c7	                            mov rdi, rax	      1877	am.c	FUNCTION_50	CALL_1
0x50f7	      0xe866f7ffff	          call sym.validate_resume_state	      1877	am.c	FUNCTION_50	CALL_1
0x50fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	am.c	FUNCTION_50	CALL_4
0x5100	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1879	am.c	FUNCTION_50	CALL_4
0x5104	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	am.c	FUNCTION_50	CALL_4
0x5108	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1879	am.c	FUNCTION_50	CALL_4
0x510c	          0x4889c7	                            mov rdi, rax	      1879	am.c	FUNCTION_50	CALL_4
0x510f	      0xe855b3ffff	                        call sym.linelen	      1879	am.c	FUNCTION_50	CALL_4
0x5114	          0x4189c4	                           mov r12d, eax	      1879	am.c	FUNCTION_50	CALL_4
0x5117	      0xbf00000000	                              mov edi, 0	      1879	am.c	FUNCTION_50	CALL_4
0x511c	      0xe8d5b0ffff	                               call sym.	      1879	am.c	FUNCTION_50	CALL_4
0x5121	          0x4889c2	                            mov rdx, rax	      1879	am.c	FUNCTION_50	CALL_4
0x5124	    0x488b35000000	            mov rsi, qword [0x0400516b] 	      1879	am.c	FUNCTION_50	CALL_4
0x512b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	am.c	FUNCTION_50	CALL_4
0x512f	          0x4989d8	                             mov r8, rbx	      1879	am.c	FUNCTION_50	CALL_4
0x5132	          0x4489e1	                           mov ecx, r12d	      1879	am.c	FUNCTION_50	CALL_4
0x5135	          0x4889c7	                            mov rdi, rax	      1879	am.c	FUNCTION_50	CALL_4
0x5138	      0xb800000000	                              mov eax, 0	      1879	am.c	FUNCTION_50	CALL_4
0x513d	      0xe8e8b5ffff	                            call sym.say	      1879	am.c	FUNCTION_50	CALL_4
0x5142	      0xbf00000000	                              mov edi, 0	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x5147	      0xe800000000	                          call 0x400518c	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x514c	            0x85c0	                           test eax, eax	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x514e	            0x7523	                           jne 0x40051b3	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x5150	      0xbf00000000	                              mov edi, 0	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x5155	      0xe89cb0ffff	                               call sym.	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x515a	          0x4889c7	                            mov rdi, rax	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x515d	      0xb800000000	                              mov eax, 0	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x5162	      0xe800000000	                          call 0x40051a7	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x5167	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	am.c	FUNCTION_50	IF_1	CALL_8
0x516b	          0x4889c7	                            mov rdi, rax	      1885	am.c	FUNCTION_50	IF_1	CALL_8
0x516e	      0xe8dcdcffff	               call sym.die_user_resolve	      1885	am.c	FUNCTION_50	IF_1	CALL_8
0x5173	      0xbf00000000	                              mov edi, 0	      1888	am.c	FUNCTION_50	IF_2	CALL_9
0x5178	      0xe800000000	                          call 0x40051bd	      1888	am.c	FUNCTION_50	IF_2	CALL_9
0x517d	            0x85c0	                           test eax, eax	      1888	am.c	FUNCTION_50	IF_2	CALL_9
0x517f	            0x7423	                            je 0x40051e4	      1888	am.c	FUNCTION_50	IF_2	CALL_9
0x5181	      0xbf00000000	                              mov edi, 0	      1889	am.c	FUNCTION_50	IF_2	CALL_11
0x5186	      0xe86bb0ffff	                               call sym.	      1889	am.c	FUNCTION_50	IF_2	CALL_11
0x518b	          0x4889c7	                            mov rdi, rax	      1889	am.c	FUNCTION_50	IF_2	CALL_11
0x518e	      0xb800000000	                              mov eax, 0	      1889	am.c	FUNCTION_50	IF_2	CALL_11
0x5193	      0xe800000000	                          call 0x40051d8	      1889	am.c	FUNCTION_50	IF_2	CALL_11
0x5198	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	am.c	FUNCTION_50	IF_2	CALL_12
0x519c	          0x4889c7	                            mov rdi, rax	      1892	am.c	FUNCTION_50	IF_2	CALL_12
0x519f	      0xe8abdcffff	               call sym.die_user_resolve	      1892	am.c	FUNCTION_50	IF_2	CALL_12
0x51a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1895	am.c	FUNCTION_50	IF_3
0x51a8	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1895	am.c	FUNCTION_50	IF_3
0x51ab	            0x85c0	                           test eax, eax	      1895	am.c	FUNCTION_50	IF_3
0x51ad	            0x741c	                            je 0x400520b	      1895	am.c	FUNCTION_50	IF_3
0x51af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1896	am.c	FUNCTION_50	IF_3	CALL_13
0x51b3	          0x4889c7	                            mov rdi, rax	      1896	am.c	FUNCTION_50	IF_3	CALL_13
0x51b6	      0xe841e9ffff	              call sym.write_index_patch	      1896	am.c	FUNCTION_50	IF_3	CALL_13
0x51bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_14
0x51bf	          0x4889c7	                            mov rdi, rax	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_14
0x51c2	      0xe840f7ffff	                 call sym.do_interactive	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_14
0x51c7	            0x85c0	                           test eax, eax	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_14
0x51c9	            0x7518	                           jne 0x4005223	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_14
0x51cb	      0xbf00000000	                              mov edi, 0	      1901	am.c	FUNCTION_50	CALL_15
0x51d0	      0xe800000000	                          call 0x4005215	      1901	am.c	FUNCTION_50	CALL_15
0x51d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1903	am.c	FUNCTION_50	CALL_16
0x51d9	          0x4889c7	                            mov rdi, rax	      1903	am.c	FUNCTION_50	CALL_16
0x51dc	      0xe8c5f2ffff	                      call sym.do_commit	      1903	am.c	FUNCTION_50	CALL_16
0x51e1	            0xeb01	                           jmp 0x4005224	      1903	am.c	FUNCTION_50	CALL_16
0x51e3	              0x90	                                     nop	      1898	am.c	FUNCTION_50	IF_3	IF_4
0x51e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1906	am.c	FUNCTION_50	CALL_17
0x51e8	          0x4889c7	                            mov rdi, rax	      1906	am.c	FUNCTION_50	CALL_17
0x51eb	      0xe8e6d9ffff	                        call sym.am_next	      1906	am.c	FUNCTION_50	CALL_17
0x51f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1907	am.c	FUNCTION_50	CALL_18
0x51f4	          0x4889c7	                            mov rdi, rax	      1907	am.c	FUNCTION_50	CALL_18
0x51f7	      0xe83bbdffff	                        call sym.am_load	      1907	am.c	FUNCTION_50	CALL_18
0x51fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	am.c	FUNCTION_50	CALL_19
0x5200	      0xbe00000000	                              mov esi, 0	      1908	am.c	FUNCTION_50	CALL_19
0x5205	          0x4889c7	                            mov rdi, rax	      1908	am.c	FUNCTION_50	CALL_19
0x5208	      0xe8b2f9ffff	                         call sym.am_run	      1908	am.c	FUNCTION_50	CALL_19
0x520d	              0x90	                                     nop	      1909	am.c	FUNCTION_50
0x520e	        0x4883c410	                           add rsp, 0x10	      1909	am.c	FUNCTION_50
0x5212	              0x5b	                                 pop rbx	      1909	am.c	FUNCTION_50
0x5213	            0x415c	                                 pop r12	      1909	am.c	FUNCTION_50
0x5215	              0x5d	                                 pop rbp	      1909	am.c	FUNCTION_50
0x5216	              0xc3	                                     ret	      1909	am.c	FUNCTION_50
capture_command	functions,0:DO,0:WHILE,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0	21
0x36c	              0x55	                                push rbp	       111	run-command.h	FUNCTION_100
0x36d	          0x4889e5	                            mov rbp, rsp	       111	run-command.h	FUNCTION_100
0x370	        0x4883ec20	                           sub rsp, 0x20	       111	run-command.h	FUNCTION_100
0x374	        0x48897df8	                mov qword [rbp - 8], rdi	       111	run-command.h	FUNCTION_100
0x378	        0x488975f0	             mov qword [rbp - 0x10], rsi	       111	run-command.h	FUNCTION_100
0x37c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       111	run-command.h	FUNCTION_100
0x380	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       112	run-command.h	FUNCTION_100	CALL_1
0x384	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	run-command.h	FUNCTION_100	CALL_1
0x388	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	run-command.h	FUNCTION_100	CALL_1
0x38c	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_100	CALL_1
0x390	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_100	CALL_1
0x392	    0x41b900000000	                              mov r9d, 0	       112	run-command.h	FUNCTION_100	CALL_1
0x398	          0x4989c8	                             mov r8, rcx	       112	run-command.h	FUNCTION_100	CALL_1
0x39b	          0x4889d1	                            mov rcx, rdx	       112	run-command.h	FUNCTION_100	CALL_1
0x39e	      0xba00000000	                              mov edx, 0	       112	run-command.h	FUNCTION_100	CALL_1
0x3a3	      0xbe00000000	                              mov esi, 0	       112	run-command.h	FUNCTION_100	CALL_1
0x3a8	          0x4889c7	                            mov rdi, rax	       112	run-command.h	FUNCTION_100	CALL_1
0x3ab	      0xe800000000	                          call 0x40003f0	       112	run-command.h	FUNCTION_100	CALL_1
0x3b0	        0x4883c410	                           add rsp, 0x10	       112	run-command.h	FUNCTION_100	CALL_1
0x3b4	              0xc9	                                   leave	       113	run-command.h	FUNCTION_100
0x3b5	              0xc3	                                     ret	       113	run-command.h	FUNCTION_100
parse_mail_rebase	functions,0:DO,0:WHILE,0:FOR,0:CALL,10:IF,1:SWITCH,0:ELSE,0	68
0x3c61	              0x55	                                push rbp	      1431	am.c	FUNCTION_42
0x3c62	          0x4889e5	                            mov rbp, rsp	      1431	am.c	FUNCTION_42
0x3c65	        0x4883ec40	                           sub rsp, 0x40	      1431	am.c	FUNCTION_42
0x3c69	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1431	am.c	FUNCTION_42
0x3c6d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1431	am.c	FUNCTION_42
0x3c71	    0x64488b042528	                mov rax, qword fs:[0x28]	      1431	am.c	FUNCTION_42
0x3c7a	        0x488945f8	                mov qword [rbp - 8], rax	      1431	am.c	FUNCTION_42
0x3c7e	            0x31c0	                            xor eax, eax	      1431	am.c	FUNCTION_42
0x3c80	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x3c84	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x3c88	          0x4889d6	                            mov rsi, rdx	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x3c8b	          0x4889c7	                            mov rdi, rax	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x3c8e	      0xe854f9ffff	            call sym.get_mail_commit_oid	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x3c93	            0x85c0	                           test eax, eax	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x3c95	            0x7921	                           jns 0x4003cf8	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x3c97	      0xbf00000000	                              mov edi, 0	      1436	am.c	FUNCTION_42	CALL_3
0x3c9c	      0xe855c5ffff	                               call sym.	      1436	am.c	FUNCTION_42	CALL_3
0x3ca1	          0x4889c2	                            mov rdx, rax	      1436	am.c	FUNCTION_42	CALL_3
0x3ca4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1436	am.c	FUNCTION_42	CALL_3
0x3ca8	          0x4889c6	                            mov rsi, rax	      1436	am.c	FUNCTION_42	CALL_3
0x3cab	          0x4889d7	                            mov rdi, rdx	      1436	am.c	FUNCTION_42	CALL_3
0x3cae	      0xb800000000	                              mov eax, 0	      1436	am.c	FUNCTION_42	CALL_3
0x3cb3	      0xe800000000	                          call 0x4003cf8	      1436	am.c	FUNCTION_42	CALL_3
0x3cb8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1438	am.c	FUNCTION_42	CALL_4
0x3cbc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1438	am.c	FUNCTION_42	CALL_4
0x3cc0	          0x4889d6	                            mov rsi, rdx	      1438	am.c	FUNCTION_42	CALL_4
0x3cc3	          0x4889c7	                            mov rdi, rax	      1438	am.c	FUNCTION_42	CALL_4
0x3cc6	      0xe800000000	                          call 0x4003d0b	      1438	am.c	FUNCTION_42	CALL_4
0x3ccb	        0x488945d8	             mov qword [rbp - 0x28], rax	      1438	am.c	FUNCTION_42	CALL_4
0x3ccf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1440	am.c	FUNCTION_42	CALL_5
0x3cd3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1440	am.c	FUNCTION_42	CALL_5
0x3cd7	          0x4889d6	                            mov rsi, rdx	      1440	am.c	FUNCTION_42	CALL_5
0x3cda	          0x4889c7	                            mov rdi, rax	      1440	am.c	FUNCTION_42	CALL_5
0x3cdd	      0xe8d7f9ffff	                call sym.get_commit_info	      1440	am.c	FUNCTION_42	CALL_5
0x3ce2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1442	am.c	FUNCTION_42	CALL_6
0x3ce6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1442	am.c	FUNCTION_42	CALL_6
0x3cea	          0x4889d6	                            mov rsi, rdx	      1442	am.c	FUNCTION_42	CALL_6
0x3ced	          0x4889c7	                            mov rdi, rax	      1442	am.c	FUNCTION_42	CALL_6
0x3cf0	      0xe8aafcffff	             call sym.write_commit_patch	      1442	am.c	FUNCTION_42	CALL_6
0x3cf5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1444	am.c	FUNCTION_42	CALL_7
0x3cf9	        0x488d5038	                   lea rdx, [rax + 0x38]	      1444	am.c	FUNCTION_42	CALL_7
0x3cfd	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1444	am.c	FUNCTION_42	CALL_7
0x3d01	          0x4889c6	                            mov rsi, rax	      1444	am.c	FUNCTION_42	CALL_7
0x3d04	          0x4889d7	                            mov rdi, rdx	      1444	am.c	FUNCTION_42	CALL_7
0x3d07	      0xe8b7c5ffff	                         call sym.oidcpy	      1444	am.c	FUNCTION_42	CALL_7
0x3d0c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1445	am.c	FUNCTION_42	CALL_9
0x3d10	          0x4889c7	                            mov rdi, rax	      1445	am.c	FUNCTION_42	CALL_9
0x3d13	      0xe800000000	                          call 0x4003d58	      1445	am.c	FUNCTION_42	CALL_9
0x3d18	          0x4889c2	                            mov rdx, rax	      1445	am.c	FUNCTION_42	CALL_9
0x3d1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1445	am.c	FUNCTION_42	CALL_9
0x3d1f	      0xbe00000000	                              mov esi, 0	      1445	am.c	FUNCTION_42	CALL_9
0x3d24	          0x4889c7	                            mov rdi, rax	      1445	am.c	FUNCTION_42	CALL_9
0x3d27	      0xe83ac9ffff	               call sym.write_state_text	      1445	am.c	FUNCTION_42	CALL_9
0x3d2c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1446	am.c	FUNCTION_42	CALL_10
0x3d30	    0x41b901000000	                              mov r9d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x3d36	    0x41b801000000	                              mov r8d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x3d3c	      0xb900000000	                              mov ecx, 0	      1446	am.c	FUNCTION_42	CALL_10
0x3d41	          0x4889c2	                            mov rdx, rax	      1446	am.c	FUNCTION_42	CALL_10
0x3d44	      0xbe00000000	                              mov esi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x3d49	      0xbf00000000	                              mov edi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x3d4e	      0xe800000000	                          call 0x4003d93	      1446	am.c	FUNCTION_42	CALL_10
0x3d53	      0xb800000000	                              mov eax, 0	      1449	am.c	FUNCTION_42
0x3d58	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1450	am.c	FUNCTION_42
0x3d5c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1450	am.c	FUNCTION_42
0x3d65	            0x7405	                            je 0x4003dac	      1450	am.c	FUNCTION_42
0x3d67	      0xe800000000	                          call 0x4003dac	      1450	am.c	FUNCTION_42
0x3d6c	              0xc9	                                   leave	      1450	am.c	FUNCTION_42
0x3d6d	              0xc3	                                     ret	      1450	am.c	FUNCTION_42
strbuf_addch	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,1:SWITCH,0:ELSE,0	33
0x153	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_92
0x154	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_92
0x157	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_92
0x15b	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_92
0x15f	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_92
0x162	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_92	IF_1	CALL_1
0x166	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_92	IF_1	CALL_1
0x169	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_92	IF_1	CALL_1
0x16e	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_92	IF_1	CALL_1
0x171	            0x7511	                           jne 0x40001c4	       227	strbuf.h	FUNCTION_92	IF_1	CALL_1
0x173	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_92	CALL_2
0x177	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_92	CALL_2
0x17c	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_92	CALL_2
0x17f	      0xe800000000	                          call 0x40001c4	       228	strbuf.h	FUNCTION_92	CALL_2
0x184	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_92
0x188	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_92
0x18c	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_92
0x190	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_92
0x194	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_92
0x198	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_92
0x19c	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_92
0x1a0	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_92
0x1a3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_92
0x1a6	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_92
0x1a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_92
0x1ac	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_92
0x1b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_92
0x1b4	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_92
0x1b8	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_92
0x1bb	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_92
0x1be	              0x90	                                     nop	       231	strbuf.h	FUNCTION_92
0x1bf	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_92
0x1c0	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_92
skip_prefix	functions,0:DO,1:WHILE,0:FOR,0:CALL,0:IF,1:SWITCH,0:ELSE,0	27
0x2d	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_68
0x2e	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_68
0x31	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_68
0x35	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_68
0x39	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_68
0x3d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x41	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x44	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x46	            0x7512	                           jne 0x400009a	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x50	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x53	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x58	            0xeb27	                           jmp 0x40000c1	       486	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x5e	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x62	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_68	DO_1
0x66	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x6d	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x71	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_68	DO_1
0x75	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x78	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_68	DO_1
0x7a	            0x74c1	                            je 0x400007d	       488	git-compat-util.h	FUNCTION_68	DO_1
0x7c	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_68
0x81	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_68
0x82	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_68
am_setup	functions,0:DO,0:WHILE,0:FOR,0:CALL,35:IF,10:SWITCH,2:ELSE,2	256
0x27da	              0x55	                                push rbp	       999	am.c	FUNCTION_31
0x27db	          0x4889e5	                            mov rbp, rsp	       999	am.c	FUNCTION_31
0x27de	              0x53	                                push rbx	       999	am.c	FUNCTION_31
0x27df	        0x4883ec78	                           sub rsp, 0x78	       999	am.c	FUNCTION_31
0x27e3	        0x48897d98	             mov qword [rbp - 0x68], rdi	       999	am.c	FUNCTION_31
0x27e7	          0x897594	             mov dword [rbp - 0x6c], esi	       999	am.c	FUNCTION_31
0x27ea	        0x48895588	             mov qword [rbp - 0x78], rdx	       999	am.c	FUNCTION_31
0x27ee	          0x894d90	             mov dword [rbp - 0x70], ecx	       999	am.c	FUNCTION_31
0x27f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       999	am.c	FUNCTION_31
0x27fa	        0x488945e8	             mov qword [rbp - 0x18], rax	       999	am.c	FUNCTION_31
0x27fe	            0x31c0	                            xor eax, eax	       999	am.c	FUNCTION_31
0x2800	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1002	am.c	FUNCTION_31
0x2808	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1002	am.c	FUNCTION_31
0x2810	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1002	am.c	FUNCTION_31
0x2818	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      1004	am.c	FUNCTION_31	IF_1
0x281c	            0x750f	                           jne 0x400286d	      1004	am.c	FUNCTION_31	IF_1
0x281e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1005	am.c	FUNCTION_31	CALL_1
0x2822	          0x4889c7	                            mov rdi, rax	      1005	am.c	FUNCTION_31	CALL_1
0x2825	      0xe8d1f1ffff	            call sym.detect_patch_format	      1005	am.c	FUNCTION_31	CALL_1
0x282a	          0x894594	             mov dword [rbp - 0x6c], eax	      1005	am.c	FUNCTION_31	CALL_1
0x282d	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      1007	am.c	FUNCTION_31	IF_2
0x2831	            0x752e	                           jne 0x40028a1	      1007	am.c	FUNCTION_31	IF_2
0x2833	      0xbf00000000	                              mov edi, 0	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x2838	      0xe8b9d9ffff	                               call sym.	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x283d	          0x4889c2	                            mov rdx, rax	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x2840	    0x488b05000000	            mov rax, qword [0x04002887] 	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x2847	          0x4889d6	                            mov rsi, rdx	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x284a	          0x4889c7	                            mov rdi, rax	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x284d	      0xb800000000	                              mov eax, 0	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x2852	      0xe800000000	                          call 0x4002897	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x2857	      0xbf80000000	                           mov edi, 0x80	      1009	am.c	FUNCTION_31	IF_2	CALL_4
0x285c	      0xe800000000	                          call 0x40028a1	      1009	am.c	FUNCTION_31	IF_2	CALL_4
0x2861	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2865	          0x488b00	                    mov rax, qword [rax]	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2868	      0xbeff010000	                          mov esi, 0x1ff	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x286d	          0x4889c7	                            mov rdi, rax	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2870	      0xe800000000	                          call 0x40028b5	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2875	            0x85c0	                           test eax, eax	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2877	            0x792d	                           jns 0x40028e6	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2879	      0xe800000000	                          call 0x40028be	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x287e	            0x8b00	                    mov eax, dword [rax]	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2880	          0x83f811	                           cmp eax, 0x11	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2883	            0x7421	                            je 0x40028e6	      1012	am.c	FUNCTION_31	IF_3	CALL_5
0x2885	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1013	am.c	FUNCTION_31	CALL_7
0x2889	          0x488b18	                    mov rbx, qword [rax]	      1013	am.c	FUNCTION_31	CALL_7
0x288c	      0xbf00000000	                              mov edi, 0	      1013	am.c	FUNCTION_31	CALL_7
0x2891	      0xe860d9ffff	                               call sym.	      1013	am.c	FUNCTION_31	CALL_7
0x2896	          0x4889de	                            mov rsi, rbx	      1013	am.c	FUNCTION_31	CALL_7
0x2899	          0x4889c7	                            mov rdi, rax	      1013	am.c	FUNCTION_31	CALL_7
0x289c	      0xb800000000	                              mov eax, 0	      1013	am.c	FUNCTION_31	CALL_7
0x28a1	      0xe800000000	                          call 0x40028e6	      1013	am.c	FUNCTION_31	CALL_7
0x28a6	      0xb901000000	                              mov ecx, 1	      1014	am.c	FUNCTION_31	CALL_8
0x28ab	      0xba00000000	                              mov edx, 0	      1014	am.c	FUNCTION_31	CALL_8
0x28b0	      0xbe00000000	                              mov esi, 0	      1014	am.c	FUNCTION_31	CALL_8
0x28b5	      0xbf00000000	                              mov edi, 0	      1014	am.c	FUNCTION_31	CALL_8
0x28ba	      0xe800000000	                          call 0x40028ff	      1014	am.c	FUNCTION_31	CALL_8
0x28bf	          0x8b4d90	             mov ecx, dword [rbp - 0x70]	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28c2	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28c6	          0x8b7594	             mov esi, dword [rbp - 0x6c]	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28c9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28cd	          0x4889c7	                            mov rdi, rax	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28d0	      0xe828feffff	                     call sym.split_mail	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28d5	            0x85c0	                           test eax, eax	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28d7	            0x7923	                           jns 0x400293c	      1016	am.c	FUNCTION_31	IF_4	CALL_9
0x28d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1017	am.c	FUNCTION_31	IF_4	CALL_10
0x28dd	          0x4889c7	                            mov rdi, rax	      1017	am.c	FUNCTION_31	IF_4	CALL_10
0x28e0	      0xe8f6eaffff	                     call sym.am_destroy	      1017	am.c	FUNCTION_31	IF_4	CALL_10
0x28e5	      0xbf00000000	                              mov edi, 0	      1018	am.c	FUNCTION_31	IF_4	CALL_12
0x28ea	      0xe807d9ffff	                               call sym.	      1018	am.c	FUNCTION_31	IF_4	CALL_12
0x28ef	          0x4889c7	                            mov rdi, rax	      1018	am.c	FUNCTION_31	IF_4	CALL_12
0x28f2	      0xb800000000	                              mov eax, 0	      1018	am.c	FUNCTION_31	IF_4	CALL_12
0x28f7	      0xe800000000	                          call 0x400293c	      1018	am.c	FUNCTION_31	IF_4	CALL_12
0x28fc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1021	am.c	FUNCTION_31	IF_5
0x2900	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1021	am.c	FUNCTION_31	IF_5
0x2906	            0x85c0	                           test eax, eax	      1021	am.c	FUNCTION_31	IF_5
0x2908	            0x740b	                            je 0x4002955	      1021	am.c	FUNCTION_31	IF_5
0x290a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1022	am.c	FUNCTION_31	IF_5
0x290e	    0xc74054010000	               mov dword [rax + 0x54], 1	      1022	am.c	FUNCTION_31	IF_5
0x2915	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1024	am.c	FUNCTION_31	CALL_13
0x2919	          0x8b5054	            mov edx, dword [rax + 0x54] 	      1024	am.c	FUNCTION_31	CALL_13
0x291c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1024	am.c	FUNCTION_31	CALL_13
0x2920	      0xbe00000000	                              mov esi, 0	      1024	am.c	FUNCTION_31	CALL_13
0x2925	          0x4889c7	                            mov rdi, rax	      1024	am.c	FUNCTION_31	CALL_13
0x2928	      0xe8c2ddffff	               call sym.write_state_bool	      1024	am.c	FUNCTION_31	CALL_13
0x292d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1025	am.c	FUNCTION_31	CALL_14
0x2931	          0x8b5058	            mov edx, dword [rax + 0x58] 	      1025	am.c	FUNCTION_31	CALL_14
0x2934	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1025	am.c	FUNCTION_31	CALL_14
0x2938	      0xbe00000000	                              mov esi, 0	      1025	am.c	FUNCTION_31	CALL_14
0x293d	          0x4889c7	                            mov rdi, rax	      1025	am.c	FUNCTION_31	CALL_14
0x2940	      0xe8aaddffff	               call sym.write_state_bool	      1025	am.c	FUNCTION_31	CALL_14
0x2945	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1026	am.c	FUNCTION_31	CALL_15
0x2949	          0x8b505c	            mov edx, dword [rax + 0x5c] 	      1026	am.c	FUNCTION_31	CALL_15
0x294c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1026	am.c	FUNCTION_31	CALL_15
0x2950	      0xbe00000000	                              mov esi, 0	      1026	am.c	FUNCTION_31	CALL_15
0x2955	          0x4889c7	                            mov rdi, rax	      1026	am.c	FUNCTION_31	CALL_15
0x2958	      0xe892ddffff	               call sym.write_state_bool	      1026	am.c	FUNCTION_31	CALL_15
0x295d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1027	am.c	FUNCTION_31	CALL_16
0x2961	          0x8b5060	            mov edx, dword [rax + 0x60] 	      1027	am.c	FUNCTION_31	CALL_16
0x2964	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1027	am.c	FUNCTION_31	CALL_16
0x2968	      0xbe00000000	                              mov esi, 0	      1027	am.c	FUNCTION_31	CALL_16
0x296d	          0x4889c7	                            mov rdi, rax	      1027	am.c	FUNCTION_31	CALL_16
0x2970	      0xe87addffff	               call sym.write_state_bool	      1027	am.c	FUNCTION_31	CALL_16
0x2975	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1029	am.c	FUNCTION_31	IF_6
0x2979	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1029	am.c	FUNCTION_31	IF_6
0x297f	            0x85c0	                           test eax, eax	      1029	am.c	FUNCTION_31	IF_6
0x2981	            0x7424	                            je 0x40029e7	      1029	am.c	FUNCTION_31	IF_6
0x2983	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1031	am.c	FUNCTION_31	IF_6
0x2987	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1031	am.c	FUNCTION_31	IF_6
0x298d	          0x83f801	                              cmp eax, 1	      1030	am.c	FUNCTION_31	IF_6	CALL_17
0x2990	           0xf94c0	                                 sete al	      1030	am.c	FUNCTION_31	IF_6	CALL_17
0x2993	           0xfb6d0	                           movzx edx, al	      1030	am.c	FUNCTION_31	IF_6	CALL_17
0x2996	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1030	am.c	FUNCTION_31	IF_6	CALL_17
0x299a	      0xbe00000000	                              mov esi, 0	      1030	am.c	FUNCTION_31	IF_6	CALL_17
0x299f	          0x4889c7	                            mov rdi, rax	      1030	am.c	FUNCTION_31	IF_6	CALL_17
0x29a2	      0xe848ddffff	               call sym.write_state_bool	      1030	am.c	FUNCTION_31	IF_6	CALL_17
0x29a7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1033	am.c	FUNCTION_31	SWITCH_1
0x29ab	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1033	am.c	FUNCTION_31	SWITCH_1
0x29ae	          0x83f801	                              cmp eax, 1	      1033	am.c	FUNCTION_31	SWITCH_1
0x29b1	            0x7413	                            je 0x4002a06	      1033	am.c	FUNCTION_31	SWITCH_1
0x29b3	          0x83f802	                              cmp eax, 2	      1033	am.c	FUNCTION_31	SWITCH_1
0x29b6	            0x7418	                            je 0x4002a10	      1033	am.c	FUNCTION_31	SWITCH_1
0x29b8	            0x85c0	                           test eax, eax	      1033	am.c	FUNCTION_31	SWITCH_1
0x29ba	            0x751e	                           jne 0x4002a1a	      1033	am.c	FUNCTION_31	SWITCH_1
0x29bc	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1035	am.c	FUNCTION_31	SWITCH_1
0x29c4	            0xeb23	                           jmp 0x4002a29	      1036	am.c	FUNCTION_31	SWITCH_1
0x29c6	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1038	am.c	FUNCTION_31	SWITCH_1
0x29ce	            0xeb19	                           jmp 0x4002a29	      1039	am.c	FUNCTION_31	SWITCH_1
0x29d0	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1041	am.c	FUNCTION_31	SWITCH_1
0x29d8	            0xeb0f	                           jmp 0x4002a29	      1042	am.c	FUNCTION_31	SWITCH_1
0x29da	      0xbf00000000	                              mov edi, 0	      1044	am.c	FUNCTION_31	SWITCH_1	CALL_18
0x29df	      0xb800000000	                              mov eax, 0	      1044	am.c	FUNCTION_31	SWITCH_1	CALL_18
0x29e4	      0xe800000000	                          call 0x4002a29	      1044	am.c	FUNCTION_31	SWITCH_1	CALL_18
0x29e9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1047	am.c	FUNCTION_31	CALL_19
0x29ed	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1047	am.c	FUNCTION_31	CALL_19
0x29f1	      0xbe00000000	                              mov esi, 0	      1047	am.c	FUNCTION_31	CALL_19
0x29f6	          0x4889c7	                            mov rdi, rax	      1047	am.c	FUNCTION_31	CALL_19
0x29f9	      0xe868dcffff	               call sym.write_state_text	      1047	am.c	FUNCTION_31	CALL_19
0x29fe	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1048	am.c	FUNCTION_31	CALL_20
0x2a02	          0x8b5068	            mov edx, dword [rax + 0x68] 	      1048	am.c	FUNCTION_31	CALL_20
0x2a05	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1048	am.c	FUNCTION_31	CALL_20
0x2a09	      0xbe00000000	                              mov esi, 0	      1048	am.c	FUNCTION_31	CALL_20
0x2a0e	          0x4889c7	                            mov rdi, rax	      1048	am.c	FUNCTION_31	CALL_20
0x2a11	      0xe8d9dcffff	               call sym.write_state_bool	      1048	am.c	FUNCTION_31	CALL_20
0x2a16	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a1a	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a1d	            0x85c0	                           test eax, eax	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a1f	            0x7414	                            je 0x4002a75	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a21	          0x83f801	                              cmp eax, 1	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a24	            0x7419	                            je 0x4002a7f	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a26	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a29	            0x751e	                           jne 0x4002a89	      1050	am.c	FUNCTION_31	SWITCH_2
0x2a2b	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1052	am.c	FUNCTION_31	SWITCH_2
0x2a33	            0xeb23	                           jmp 0x4002a98	      1053	am.c	FUNCTION_31	SWITCH_2
0x2a35	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1055	am.c	FUNCTION_31	SWITCH_2
0x2a3d	            0xeb19	                           jmp 0x4002a98	      1056	am.c	FUNCTION_31	SWITCH_2
0x2a3f	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1058	am.c	FUNCTION_31	SWITCH_2
0x2a47	            0xeb0f	                           jmp 0x4002a98	      1059	am.c	FUNCTION_31	SWITCH_2
0x2a49	      0xbf00000000	                              mov edi, 0	      1061	am.c	FUNCTION_31	SWITCH_2	CALL_21
0x2a4e	      0xb800000000	                              mov eax, 0	      1061	am.c	FUNCTION_31	SWITCH_2	CALL_21
0x2a53	      0xe800000000	                          call 0x4002a98	      1061	am.c	FUNCTION_31	SWITCH_2	CALL_21
0x2a58	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1063	am.c	FUNCTION_31	CALL_22
0x2a5c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1063	am.c	FUNCTION_31	CALL_22
0x2a60	      0xbe00000000	                              mov esi, 0	      1063	am.c	FUNCTION_31	CALL_22
0x2a65	          0x4889c7	                            mov rdi, rax	      1063	am.c	FUNCTION_31	CALL_22
0x2a68	      0xe8f9dbffff	               call sym.write_state_text	      1063	am.c	FUNCTION_31	CALL_22
0x2a6d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1065	am.c	FUNCTION_31	CALL_23
0x2a71	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1065	am.c	FUNCTION_31	CALL_23
0x2a75	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1065	am.c	FUNCTION_31	CALL_23
0x2a79	          0x4889d6	                            mov rsi, rdx	      1065	am.c	FUNCTION_31	CALL_23
0x2a7c	          0x4889c7	                            mov rdi, rax	      1065	am.c	FUNCTION_31	CALL_23
0x2a7f	      0xe800000000	                          call 0x4002ac4	      1065	am.c	FUNCTION_31	CALL_23
0x2a84	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1066	am.c	FUNCTION_31	CALL_24
0x2a88	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1066	am.c	FUNCTION_31	CALL_24
0x2a8c	      0xbe00000000	                              mov esi, 0	      1066	am.c	FUNCTION_31	CALL_24
0x2a91	          0x4889c7	                            mov rdi, rax	      1066	am.c	FUNCTION_31	CALL_24
0x2a94	      0xe8cddbffff	               call sym.write_state_text	      1066	am.c	FUNCTION_31	CALL_24
0x2a99	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1068	am.c	FUNCTION_31	IF_7
0x2a9d	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1068	am.c	FUNCTION_31	IF_7
0x2aa3	            0x85c0	                           test eax, eax	      1068	am.c	FUNCTION_31	IF_7
0x2aa5	            0x7418	                            je 0x4002aff	      1068	am.c	FUNCTION_31	IF_7
0x2aa7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1069	am.c	FUNCTION_31	CALL_25
0x2aab	      0xba00000000	                              mov edx, 0	      1069	am.c	FUNCTION_31	CALL_25
0x2ab0	      0xbe00000000	                              mov esi, 0	      1069	am.c	FUNCTION_31	CALL_25
0x2ab5	          0x4889c7	                            mov rdi, rax	      1069	am.c	FUNCTION_31	CALL_25
0x2ab8	      0xe8a9dbffff	               call sym.write_state_text	      1069	am.c	FUNCTION_31	CALL_25
0x2abd	            0xeb16	                           jmp 0x4002b15	      1069	am.c	FUNCTION_31	CALL_25
0x2abf	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1071	am.c	FUNCTION_31	CALL_26
0x2ac3	      0xba00000000	                              mov edx, 0	      1071	am.c	FUNCTION_31	CALL_26
0x2ac8	      0xbe00000000	                              mov esi, 0	      1071	am.c	FUNCTION_31	CALL_26
0x2acd	          0x4889c7	                            mov rdi, rax	      1071	am.c	FUNCTION_31	CALL_26
0x2ad0	      0xe891dbffff	               call sym.write_state_text	      1071	am.c	FUNCTION_31	CALL_26
0x2ad5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1073	am.c	FUNCTION_31	IF_8	CALL_27
0x2ad9	          0x4889c6	                            mov rsi, rax	      1073	am.c	FUNCTION_31	IF_8	CALL_27
0x2adc	      0xbf00000000	                              mov edi, 0	      1073	am.c	FUNCTION_31	IF_8	CALL_27
0x2ae1	      0xe800000000	                          call 0x4002b26	      1073	am.c	FUNCTION_31	IF_8	CALL_27
0x2ae6	            0x85c0	                           test eax, eax	      1073	am.c	FUNCTION_31	IF_8	CALL_27
0x2ae8	            0x7557	                           jne 0x4002b81	      1073	am.c	FUNCTION_31	IF_8	CALL_27
0x2aea	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2aee	          0x4889c7	                            mov rdi, rax	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2af1	      0xe800000000	                          call 0x4002b36	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2af6	          0x4889c2	                            mov rdx, rax	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2af9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2afd	      0xbe00000000	                              mov esi, 0	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2b02	          0x4889c7	                            mov rdi, rax	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2b05	      0xe85cdbffff	               call sym.write_state_text	      1074	am.c	FUNCTION_31	IF_8	CALL_29
0x2b0a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x2b0e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x2b14	            0x85c0	                           test eax, eax	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x2b16	            0x7566	                           jne 0x4002bbe	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x2b18	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b1c	    0x41b901000000	                              mov r9d, 1	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b22	    0x41b800000000	                              mov r8d, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b28	      0xb900000000	                              mov ecx, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b2d	          0x4889c2	                            mov rdx, rax	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b30	      0xbe00000000	                              mov esi, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b35	      0xbf00000000	                              mov edi, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b3a	      0xe800000000	                          call 0x4002b7f	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b3f	            0xeb3d	                           jmp 0x4002bbe	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_30
0x2b41	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1079	am.c	FUNCTION_31	ELSE_2	CALL_31
0x2b45	      0xba00000000	                              mov edx, 0	      1079	am.c	FUNCTION_31	ELSE_2	CALL_31
0x2b4a	      0xbe00000000	                              mov esi, 0	      1079	am.c	FUNCTION_31	ELSE_2	CALL_31
0x2b4f	          0x4889c7	                            mov rdi, rax	      1079	am.c	FUNCTION_31	ELSE_2	CALL_31
0x2b52	      0xe80fdbffff	               call sym.write_state_text	      1079	am.c	FUNCTION_31	ELSE_2	CALL_31
0x2b57	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x2b5b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x2b61	            0x85c0	                           test eax, eax	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x2b63	            0x7519	                           jne 0x4002bbe	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x2b65	      0xb900000000	                              mov ecx, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_32
0x2b6a	      0xba00000000	                              mov edx, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_32
0x2b6f	      0xbe00000000	                              mov esi, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_32
0x2b74	      0xbf00000000	                              mov edi, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_32
0x2b79	      0xe800000000	                          call 0x4002bbe	      1081	am.c	FUNCTION_31	ELSE_2	CALL_32
0x2b7e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1089	am.c	FUNCTION_31	CALL_33
0x2b82	          0x8b5008	                mov edx, dword [rax + 8]	      1089	am.c	FUNCTION_31	CALL_33
0x2b85	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1089	am.c	FUNCTION_31	CALL_33
0x2b89	      0xbe00000000	                              mov esi, 0	      1089	am.c	FUNCTION_31	CALL_33
0x2b8e	          0x4889c7	                            mov rdi, rax	      1089	am.c	FUNCTION_31	CALL_33
0x2b91	      0xe816dbffff	              call sym.write_state_count	      1089	am.c	FUNCTION_31	CALL_33
0x2b96	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1090	am.c	FUNCTION_31	CALL_34
0x2b9a	          0x8b500c	              mov edx, dword [rax + 0xc]	      1090	am.c	FUNCTION_31	CALL_34
0x2b9d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1090	am.c	FUNCTION_31	CALL_34
0x2ba1	      0xbe00000000	                              mov esi, 0	      1090	am.c	FUNCTION_31	CALL_34
0x2ba6	          0x4889c7	                            mov rdi, rax	      1090	am.c	FUNCTION_31	CALL_34
0x2ba9	      0xe8fedaffff	              call sym.write_state_count	      1090	am.c	FUNCTION_31	CALL_34
0x2bae	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1092	am.c	FUNCTION_31	CALL_35
0x2bb2	          0x4889c7	                            mov rdi, rax	      1092	am.c	FUNCTION_31	CALL_35
0x2bb5	      0xe800000000	                          call 0x4002bfa	      1092	am.c	FUNCTION_31	CALL_35
0x2bba	              0x90	                                     nop	      1093	am.c	FUNCTION_31
0x2bbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1093	am.c	FUNCTION_31
0x2bbf	    0x644833042528	                xor rax, qword fs:[0x28]	      1093	am.c	FUNCTION_31
0x2bc8	            0x7405	                            je 0x4002c0f	      1093	am.c	FUNCTION_31
0x2bca	      0xe800000000	                          call 0x4002c0f	      1093	am.c	FUNCTION_31
0x2bcf	        0x4883c478	                           add rsp, 0x78	      1093	am.c	FUNCTION_31
0x2bd3	              0x5b	                                 pop rbx	      1093	am.c	FUNCTION_31
0x2bd4	              0x5d	                                 pop rbp	      1093	am.c	FUNCTION_31
0x2bd5	              0xc3	                                     ret	      1093	am.c	FUNCTION_31
run_apply	functions,0:DO,0:WHILE,0:FOR,0:CALL,16:IF,7:SWITCH,0:ELSE,1	120
0x3d6e	              0x55	                                push rbp	      1457	am.c	FUNCTION_43
0x3d6f	          0x4889e5	                            mov rbp, rsp	      1457	am.c	FUNCTION_43
0x3d72	    0x4881ec900100	                          sub rsp, 0x190	      1457	am.c	FUNCTION_43
0x3d79	    0x4889bd78feff	            mov qword [rbp - 0x188], rdi	      1457	am.c	FUNCTION_43
0x3d80	    0x4889b570feff	            mov qword [rbp - 0x190], rsi	      1457	am.c	FUNCTION_43
0x3d87	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	am.c	FUNCTION_43
0x3d90	        0x488945f8	                mov qword [rbp - 8], rax	      1457	am.c	FUNCTION_43
0x3d94	            0x31c0	                            xor eax, eax	      1457	am.c	FUNCTION_43
0x3d96	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      1458	am.c	FUNCTION_43
0x3da1	    0xc78598feffff	              mov dword [rbp - 0x168], 0	      1458	am.c	FUNCTION_43
0x3dab	    0xc7859cfeffff	              mov dword [rbp - 0x164], 0	      1458	am.c	FUNCTION_43
0x3db5	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      1459	am.c	FUNCTION_43
0x3dc0	    0xc785a8feffff	              mov dword [rbp - 0x158], 0	      1459	am.c	FUNCTION_43
0x3dca	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	      1459	am.c	FUNCTION_43
0x3dd4	    0xc78580feffff	              mov dword [rbp - 0x180], 0	      1462	am.c	FUNCTION_43
0x3dde	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	      1463	am.c	FUNCTION_43
0x3de8	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x3def	      0xbe00000000	                              mov esi, 0	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x3df4	          0x4889c7	                            mov rdi, rax	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x3df7	      0xe800000000	                          call 0x4003e3c	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x3dfc	            0x85c0	                           test eax, eax	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x3dfe	            0x740f	                            je 0x4003e4f	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x3e00	      0xbf00000000	                              mov edi, 0	      1466	am.c	FUNCTION_43	CALL_2
0x3e05	      0xb800000000	                              mov eax, 0	      1466	am.c	FUNCTION_43	CALL_2
0x3e0a	      0xe800000000	                          call 0x4003e4f	      1466	am.c	FUNCTION_43	CALL_2
0x3e0f	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      1468	am.c	FUNCTION_43	CALL_3
0x3e16	      0xbe00000000	                              mov esi, 0	      1468	am.c	FUNCTION_43	CALL_3
0x3e1b	          0x4889c7	                            mov rdi, rax	      1468	am.c	FUNCTION_43	CALL_3
0x3e1e	      0xe800000000	                          call 0x4003e63	      1468	am.c	FUNCTION_43	CALL_3
0x3e23	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1469	am.c	FUNCTION_43	CALL_4
0x3e2a	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1469	am.c	FUNCTION_43	CALL_4
0x3e2e	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      1469	am.c	FUNCTION_43	CALL_4
0x3e35	          0x4889d6	                            mov rsi, rdx	      1469	am.c	FUNCTION_43	CALL_4
0x3e38	          0x4889c7	                            mov rdi, rax	      1469	am.c	FUNCTION_43	CALL_4
0x3e3b	      0xe800000000	                          call 0x4003e80	      1469	am.c	FUNCTION_43	CALL_4
0x3e40	    0x488bb5a0feff	            mov rsi, qword [rbp - 0x160]	      1471	am.c	FUNCTION_43	CALL_5
0x3e47	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	      1471	am.c	FUNCTION_43	CALL_5
0x3e4d	    0x488dbd84feff	                  lea rdi, [rbp - 0x17c]	      1471	am.c	FUNCTION_43	CALL_5
0x3e54	    0x488d8d80feff	                  lea rcx, [rbp - 0x180]	      1471	am.c	FUNCTION_43	CALL_5
0x3e5b	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      1471	am.c	FUNCTION_43	CALL_5
0x3e62	    0x41b900000000	                              mov r9d, 0	      1471	am.c	FUNCTION_43	CALL_5
0x3e68	          0x4989f8	                             mov r8, rdi	      1471	am.c	FUNCTION_43	CALL_5
0x3e6b	            0x89c7	                            mov edi, eax	      1471	am.c	FUNCTION_43	CALL_5
0x3e6d	      0xe800000000	                          call 0x4003eb2	      1471	am.c	FUNCTION_43	CALL_5
0x3e72	    0x898588feffff	            mov dword [rbp - 0x178], eax	      1471	am.c	FUNCTION_43	CALL_5
0x3e78	    0x83bd88feffff	              cmp dword [rbp - 0x178], 0	      1475	am.c	FUNCTION_43	IF_2
0x3e7f	            0x740f	                            je 0x4003ed0	      1475	am.c	FUNCTION_43	IF_2
0x3e81	      0xbf00000000	                              mov edi, 0	      1476	am.c	FUNCTION_43	CALL_6
0x3e86	      0xb800000000	                              mov eax, 0	      1476	am.c	FUNCTION_43	CALL_6
0x3e8b	      0xe800000000	                          call 0x4003ed0	      1476	am.c	FUNCTION_43	CALL_6
0x3e90	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1478	am.c	FUNCTION_43	IF_3
0x3e98	            0x741a	                            je 0x4003ef4	      1478	am.c	FUNCTION_43	IF_3
0x3e9a	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1479	am.c	FUNCTION_43	IF_3
0x3ea1	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      1479	am.c	FUNCTION_43	IF_3
0x3ea8	    0xc785c4feffff	              mov dword [rbp - 0x13c], 1	      1480	am.c	FUNCTION_43	IF_3
0x3eb2	            0xeb0a	                           jmp 0x4003efe	      1480	am.c	FUNCTION_43	IF_3
0x3eb4	    0xc785ccfeffff	              mov dword [rbp - 0x134], 1	      1482	am.c	FUNCTION_43	ELSE_1
0x3ebe	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1488	am.c	FUNCTION_43	IF_4
0x3ec5	          0x8b4054	            mov eax, dword [rax + 0x54] 	      1488	am.c	FUNCTION_43	IF_4
0x3ec8	            0x85c0	                           test eax, eax	      1488	am.c	FUNCTION_43	IF_4
0x3eca	            0x7414	                            je 0x4003f20	      1488	am.c	FUNCTION_43	IF_4
0x3ecc	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1488	am.c	FUNCTION_43	IF_4
0x3ed4	            0x750a	                           jne 0x4003f20	      1488	am.c	FUNCTION_43	IF_4
0x3ed6	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xffffffff 	      1489	am.c	FUNCTION_43	IF_4
0x3ee0	    0x8b9580feffff	            mov edx, dword [rbp - 0x180]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x3ee6	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x3eed	            0x89d6	                            mov esi, edx	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x3eef	          0x4889c7	                            mov rdi, rax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x3ef2	      0xe800000000	                          call 0x4003f37	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x3ef7	            0x85c0	                           test eax, eax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x3ef9	            0x740f	                            je 0x4003f4a	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x3efb	      0xbf00000000	                              mov edi, 0	      1492	am.c	FUNCTION_43	CALL_8
0x3f00	      0xb800000000	                              mov eax, 0	      1492	am.c	FUNCTION_43	CALL_8
0x3f05	      0xe800000000	                          call 0x4003f4a	      1492	am.c	FUNCTION_43	CALL_8
0x3f0a	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1494	am.c	FUNCTION_43	CALL_10
0x3f11	      0xbe00000000	                              mov esi, 0	      1494	am.c	FUNCTION_43	CALL_10
0x3f16	          0x4889c7	                            mov rdi, rax	      1494	am.c	FUNCTION_43	CALL_10
0x3f19	      0xe819c7ffff	                        call sym.am_path	      1494	am.c	FUNCTION_43	CALL_10
0x3f1e	          0x4889c2	                            mov rdx, rax	      1494	am.c	FUNCTION_43	CALL_10
0x3f21	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1494	am.c	FUNCTION_43	CALL_10
0x3f28	          0x4889d6	                            mov rsi, rdx	      1494	am.c	FUNCTION_43	CALL_10
0x3f2b	          0x4889c7	                            mov rdi, rax	      1494	am.c	FUNCTION_43	CALL_10
0x3f2e	      0xe800000000	                          call 0x4003f73	      1494	am.c	FUNCTION_43	CALL_10
0x3f33	    0x8b8d84feffff	            mov ecx, dword [rbp - 0x17c]	      1496	am.c	FUNCTION_43	CALL_11
0x3f39	    0x488b9590feff	            mov rdx, qword [rbp - 0x170]	      1496	am.c	FUNCTION_43	CALL_11
0x3f40	    0x8bb598feffff	            mov esi, dword [rbp - 0x168]	      1496	am.c	FUNCTION_43	CALL_11
0x3f46	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1496	am.c	FUNCTION_43	CALL_11
0x3f4d	          0x4889c7	                            mov rdi, rax	      1496	am.c	FUNCTION_43	CALL_11
0x3f50	      0xe800000000	                          call 0x4003f95	      1496	am.c	FUNCTION_43	CALL_11
0x3f55	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      1496	am.c	FUNCTION_43	CALL_11
0x3f5b	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1498	am.c	FUNCTION_43	CALL_12
0x3f62	          0x4889c7	                            mov rdi, rax	      1498	am.c	FUNCTION_43	CALL_12
0x3f65	      0xe800000000	                          call 0x4003faa	      1498	am.c	FUNCTION_43	CALL_12
0x3f6a	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      1499	am.c	FUNCTION_43	CALL_13
0x3f71	          0x4889c7	                            mov rdi, rax	      1499	am.c	FUNCTION_43	CALL_13
0x3f74	      0xe800000000	                          call 0x4003fb9	      1499	am.c	FUNCTION_43	CALL_13
0x3f79	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1500	am.c	FUNCTION_43	CALL_14
0x3f80	          0x4889c7	                            mov rdi, rax	      1500	am.c	FUNCTION_43	CALL_14
0x3f83	      0xe800000000	                          call 0x4003fc8	      1500	am.c	FUNCTION_43	CALL_14
0x3f88	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 0	      1502	am.c	FUNCTION_43	IF_6
0x3f8f	            0x7408	                            je 0x4003fd9	      1502	am.c	FUNCTION_43	IF_6
0x3f91	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      1503	am.c	FUNCTION_43	IF_6
0x3f97	            0xeb35	                           jmp 0x400400e	      1503	am.c	FUNCTION_43	IF_6
0x3f99	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1505	am.c	FUNCTION_43	IF_7
0x3fa1	            0x7426	                            je 0x4004009	      1505	am.c	FUNCTION_43	IF_7
0x3fa3	      0xbf00000000	                              mov edi, 0	      1507	am.c	FUNCTION_43	IF_7	CALL_15
0x3fa8	      0xe800000000	                          call 0x4003fed	      1507	am.c	FUNCTION_43	IF_7	CALL_15
0x3fad	      0xe800000000	                          call 0x4003ff2	      1508	am.c	FUNCTION_43	IF_7	CALL_16
0x3fb2	          0x4889c2	                            mov rdx, rax	      1508	am.c	FUNCTION_43	IF_7	CALL_16
0x3fb5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1508	am.c	FUNCTION_43	IF_7	CALL_16
0x3fbc	          0x4889c6	                            mov rsi, rax	      1508	am.c	FUNCTION_43	IF_7	CALL_16
0x3fbf	      0xbf00000000	                              mov edi, 0	      1508	am.c	FUNCTION_43	IF_7	CALL_16
0x3fc4	      0xe800000000	                          call 0x4004009	      1508	am.c	FUNCTION_43	IF_7	CALL_16
0x3fc9	      0xb800000000	                              mov eax, 0	      1511	am.c	FUNCTION_43
0x3fce	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1512	am.c	FUNCTION_43
0x3fd2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1512	am.c	FUNCTION_43
0x3fdb	            0x7405	                            je 0x4004022	      1512	am.c	FUNCTION_43
0x3fdd	      0xe800000000	                          call 0x4004022	      1512	am.c	FUNCTION_43
0x3fe2	              0xc9	                                   leave	      1512	am.c	FUNCTION_43
0x3fe3	              0xc3	                                     ret	      1512	am.c	FUNCTION_43
stgit_patch_to_mail	functions,0:DO,0:WHILE,2:FOR,0:CALL,14:IF,4:SWITCH,0:ELSE,4	109
0x2013	              0x55	                                push rbp	       803	am.c	FUNCTION_27
0x2014	          0x4889e5	                            mov rbp, rsp	       803	am.c	FUNCTION_27
0x2017	        0x4883ec50	                           sub rsp, 0x50	       803	am.c	FUNCTION_27
0x201b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       803	am.c	FUNCTION_27
0x201f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       803	am.c	FUNCTION_27
0x2023	          0x8955bc	             mov dword [rbp - 0x44], edx	       803	am.c	FUNCTION_27
0x2026	    0x64488b042528	                mov rax, qword fs:[0x28]	       803	am.c	FUNCTION_27
0x202f	        0x488945f8	                mov qword [rbp - 8], rax	       803	am.c	FUNCTION_27
0x2033	            0x31c0	                            xor eax, eax	       803	am.c	FUNCTION_27
0x2035	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       804	am.c	FUNCTION_27
0x203d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       804	am.c	FUNCTION_27
0x2045	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       804	am.c	FUNCTION_27
0x204d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       805	am.c	FUNCTION_27
0x2054	      0xe9d8000000	                           jmp 0x4002171	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x2059	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x205d	          0x4889c7	                            mov rdi, rax	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x2060	      0xe830e4ffff	                    call sym.str_isspace	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x2065	            0x85c0	                           test eax, eax	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x2067	            0x7405	                            je 0x40020ae	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x2069	      0xe9c3000000	                           jmp 0x4002171	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x206e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x2072	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x2076	      0xbe00000000	                              mov esi, 0	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x207b	          0x4889c7	                            mov rdi, rax	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x207e	      0xe8aadfffff	                    call sym.skip_prefix	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x2083	            0x85c0	                           test eax, eax	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x2085	            0x741f	                            je 0x40020e6	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x2087	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x208b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x208f	      0xbe00000000	                              mov esi, 0	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x2094	          0x4889c7	                            mov rdi, rax	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x2097	      0xb800000000	                              mov eax, 0	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x209c	      0xe800000000	                          call 0x40020e1	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x20a1	      0xe98b000000	                           jmp 0x4002171	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x20a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20aa	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20af	          0x4889c7	                            mov rdi, rax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20b2	      0xe800000000	                          call 0x40020f7	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20b7	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20b9	            0x7515	                           jne 0x4002110	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20bf	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20c4	          0x4889c7	                            mov rdi, rax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20c7	      0xe800000000	                          call 0x400210c	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20cc	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20ce	            0x741c	                            je 0x400212c	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x20d0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x20d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x20d8	      0xbe00000000	                              mov esi, 0	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x20dd	          0x4889c7	                            mov rdi, rax	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x20e0	      0xb800000000	                              mov eax, 0	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x20e5	      0xe800000000	                          call 0x400212a	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x20ea	            0xeb45	                           jmp 0x4002171	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x20ec	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x20f0	            0x7523	                           jne 0x4002155	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x20f2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x20f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x20fa	      0xbe00000000	                              mov esi, 0	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x20ff	          0x4889c7	                            mov rdi, rax	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x2102	      0xb800000000	                              mov eax, 0	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x2107	      0xe800000000	                          call 0x400214c	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x210c	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x2113	            0xeb1c	                           jmp 0x4002171	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x2115	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x2119	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x211d	      0xbe00000000	                              mov esi, 0	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x2122	          0x4889c7	                            mov rdi, rax	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x2125	      0xb800000000	                              mov eax, 0	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x212a	      0xe800000000	                          call 0x400216f	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x212f	            0xeb1b	                           jmp 0x400218c	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x2131	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x2135	        0x488d45e0	                   lea rax, [rbp - 0x20]	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x2139	          0x4889d6	                            mov rsi, rdx	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x213c	          0x4889c7	                            mov rdi, rax	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x213f	      0xe800000000	                          call 0x4002184	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x2144	            0x85c0	                           test eax, eax	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x2146	     0xf840dffffff	                            je 0x4002099	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x214c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       825	am.c	FUNCTION_27	CALL_10
0x2150	      0xbe00000000	                              mov esi, 0	       825	am.c	FUNCTION_27	CALL_10
0x2155	          0x4889c7	                            mov rdi, rax	       825	am.c	FUNCTION_27	CALL_10
0x2158	      0xe85cdfffff	                  call sym.strbuf_setlen	       825	am.c	FUNCTION_27	CALL_10
0x215d	            0xeb2a	                           jmp 0x40021c9	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x215f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       827	am.c	FUNCTION_27	WHILE_2	CALL_12
0x2163	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       827	am.c	FUNCTION_27	WHILE_2	CALL_12
0x2167	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       827	am.c	FUNCTION_27	WHILE_2	CALL_12
0x216b	      0xbe01000000	                              mov esi, 1	       827	am.c	FUNCTION_27	WHILE_2	CALL_12
0x2170	          0x4889c7	                            mov rdi, rax	       827	am.c	FUNCTION_27	WHILE_2	CALL_12
0x2173	      0xe800000000	                          call 0x40021b8	       827	am.c	FUNCTION_27	WHILE_2	CALL_12
0x2178	        0x488d45e0	                   lea rax, [rbp - 0x20]	       828	am.c	FUNCTION_27	WHILE_2	CALL_13
0x217c	      0xbe00000000	                              mov esi, 0	       828	am.c	FUNCTION_27	WHILE_2	CALL_13
0x2181	          0x4889c7	                            mov rdi, rax	       828	am.c	FUNCTION_27	WHILE_2	CALL_13
0x2184	      0xe830dfffff	                  call sym.strbuf_setlen	       828	am.c	FUNCTION_27	WHILE_2	CALL_13
0x2189	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x218d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x2191	      0xbe00200000	                         mov esi, 0x2000	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x2196	          0x4889c7	                            mov rdi, rax	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x2199	      0xe800000000	                          call 0x40021de	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x219e	          0x4885c0	                           test rax, rax	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x21a1	            0x75bc	                           jne 0x400219f	       826	am.c	FUNCTION_27	WHILE_2	CALL_11
0x21a3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       831	am.c	FUNCTION_27	CALL_14
0x21a7	          0x4889c7	                            mov rdi, rax	       831	am.c	FUNCTION_27	CALL_14
0x21aa	      0xe800000000	                          call 0x40021ef	       831	am.c	FUNCTION_27	CALL_14
0x21af	      0xb800000000	                              mov eax, 0	       832	am.c	FUNCTION_27
0x21b4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       833	am.c	FUNCTION_27
0x21b8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       833	am.c	FUNCTION_27
0x21c1	            0x7405	                            je 0x4002208	       833	am.c	FUNCTION_27
0x21c3	      0xe800000000	                          call 0x4002208	       833	am.c	FUNCTION_27
0x21c8	              0xc9	                                   leave	       833	am.c	FUNCTION_27
0x21c9	              0xc3	                                     ret	       833	am.c	FUNCTION_27
write_state_count	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,0:SWITCH,0:ELSE,0	21
0x6ac	              0x55	                                push rbp	       197	am.c	FUNCTION_8
0x6ad	          0x4889e5	                            mov rbp, rsp	       197	am.c	FUNCTION_8
0x6b0	        0x4883ec20	                           sub rsp, 0x20	       197	am.c	FUNCTION_8
0x6b4	        0x48897df8	                mov qword [rbp - 8], rdi	       197	am.c	FUNCTION_8
0x6b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       197	am.c	FUNCTION_8
0x6bc	          0x8955ec	             mov dword [rbp - 0x14], edx	       197	am.c	FUNCTION_8
0x6bf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       198	am.c	FUNCTION_8	CALL_2
0x6c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	am.c	FUNCTION_8	CALL_2
0x6c7	          0x4889d6	                            mov rsi, rdx	       198	am.c	FUNCTION_8	CALL_2
0x6ca	          0x4889c7	                            mov rdi, rax	       198	am.c	FUNCTION_8	CALL_2
0x6cd	      0xe865ffffff	                        call sym.am_path	       198	am.c	FUNCTION_8	CALL_2
0x6d2	          0x4889c1	                            mov rcx, rax	       198	am.c	FUNCTION_8	CALL_2
0x6d5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       198	am.c	FUNCTION_8	CALL_2
0x6d8	            0x89c2	                            mov edx, eax	       198	am.c	FUNCTION_8	CALL_2
0x6da	      0xbe00000000	                              mov esi, 0	       198	am.c	FUNCTION_8	CALL_2
0x6df	          0x4889cf	                            mov rdi, rcx	       198	am.c	FUNCTION_8	CALL_2
0x6e2	      0xb800000000	                              mov eax, 0	       198	am.c	FUNCTION_8	CALL_2
0x6e7	      0xe800000000	                          call 0x400072c	       198	am.c	FUNCTION_8	CALL_2
0x6ec	              0x90	                                     nop	       199	am.c	FUNCTION_8
0x6ed	              0xc9	                                   leave	       199	am.c	FUNCTION_8
0x6ee	              0xc3	                                     ret	       199	am.c	FUNCTION_8
refresh_and_write_cache	functions,0:DO,0:WHILE,0:FOR,0:CALL,5:IF,1:SWITCH,0:ELSE,0	36
0x2db8	              0x55	                                push rbp	      1142	am.c	FUNCTION_34
0x2db9	          0x4889e5	                            mov rbp, rsp	      1142	am.c	FUNCTION_34
0x2dbc	        0x4883ec10	                           sub rsp, 0x10	      1142	am.c	FUNCTION_34
0x2dc0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1142	am.c	FUNCTION_34
0x2dc9	        0x488945f8	                mov qword [rbp - 8], rax	      1142	am.c	FUNCTION_34
0x2dcd	            0x31c0	                            xor eax, eax	      1142	am.c	FUNCTION_34
0x2dcf	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1143	am.c	FUNCTION_34
0x2dd7	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1145	am.c	FUNCTION_34	CALL_1
0x2ddb	      0xbe01000000	                              mov esi, 1	      1145	am.c	FUNCTION_34	CALL_1
0x2de0	          0x4889c7	                            mov rdi, rax	      1145	am.c	FUNCTION_34	CALL_1
0x2de3	      0xe800000000	                          call 0x4002e28	      1145	am.c	FUNCTION_34	CALL_1
0x2de8	    0x41b800000000	                              mov r8d, 0	      1146	am.c	FUNCTION_34	CALL_2
0x2dee	      0xb900000000	                              mov ecx, 0	      1146	am.c	FUNCTION_34	CALL_2
0x2df3	      0xba00000000	                              mov edx, 0	      1146	am.c	FUNCTION_34	CALL_2
0x2df8	      0xbe04000000	                              mov esi, 4	      1146	am.c	FUNCTION_34	CALL_2
0x2dfd	      0xbf00000000	                              mov edi, 0	      1146	am.c	FUNCTION_34	CALL_2
0x2e02	      0xe800000000	                          call 0x4002e47	      1146	am.c	FUNCTION_34	CALL_2
0x2e07	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1147	am.c	FUNCTION_34	IF_1	CALL_3
0x2e0b	      0xba01000000	                              mov edx, 1	      1147	am.c	FUNCTION_34	IF_1	CALL_3
0x2e10	          0x4889c6	                            mov rsi, rax	      1147	am.c	FUNCTION_34	IF_1	CALL_3
0x2e13	      0xbf00000000	                              mov edi, 0	      1147	am.c	FUNCTION_34	IF_1	CALL_3
0x2e18	      0xe800000000	                          call 0x4002e5d	      1147	am.c	FUNCTION_34	IF_1	CALL_3
0x2e1d	            0x85c0	                           test eax, eax	      1147	am.c	FUNCTION_34	IF_1	CALL_3
0x2e1f	            0x7417	                            je 0x4002e78	      1147	am.c	FUNCTION_34	IF_1	CALL_3
0x2e21	      0xbf00000000	                              mov edi, 0	      1148	am.c	FUNCTION_34	CALL_5
0x2e26	      0xe8cbd3ffff	                               call sym.	      1148	am.c	FUNCTION_34	CALL_5
0x2e2b	          0x4889c7	                            mov rdi, rax	      1148	am.c	FUNCTION_34	CALL_5
0x2e2e	      0xb800000000	                              mov eax, 0	      1148	am.c	FUNCTION_34	CALL_5
0x2e33	      0xe800000000	                          call 0x4002e78	      1148	am.c	FUNCTION_34	CALL_5
0x2e38	              0x90	                                     nop	      1149	am.c	FUNCTION_34
0x2e39	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	am.c	FUNCTION_34
0x2e3d	    0x644833042528	                xor rax, qword fs:[0x28]	      1149	am.c	FUNCTION_34
0x2e46	            0x7405	                            je 0x4002e8d	      1149	am.c	FUNCTION_34
0x2e48	      0xe800000000	                          call 0x4002e8d	      1149	am.c	FUNCTION_34
0x2e4d	              0xc9	                                   leave	      1149	am.c	FUNCTION_34
0x2e4e	              0xc3	                                     ret	      1149	am.c	FUNCTION_34
parse_key_value_squoted	functions,0:DO,0:WHILE,1:FOR,0:CALL,5:IF,2:SWITCH,0:ELSE,0	61
0x9e0	              0x55	                                push rbp	       267	am.c	FUNCTION_13
0x9e1	          0x4889e5	                            mov rbp, rsp	       267	am.c	FUNCTION_13
0x9e4	        0x4883ec30	                           sub rsp, 0x30	       267	am.c	FUNCTION_13
0x9e8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       267	am.c	FUNCTION_13
0x9ec	        0x488975d0	             mov qword [rbp - 0x30], rsi	       267	am.c	FUNCTION_13
0x9f0	      0xe9b7000000	                           jmp 0x4000aec	       268	am.c	FUNCTION_13	WHILE_1
0x9f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x9f9	      0xbe3d000000	                           mov esi, 0x3d	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x9fe	          0x4889c7	                            mov rdi, rax	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0xa01	      0xe800000000	                          call 0x4000a46	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0xa06	        0x488945e8	             mov qword [rbp - 0x18], rax	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0xa0a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0xa0f	            0x750a	                           jne 0x4000a5b	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0xa11	      0xb8ffffffff	                     mov eax, 0xffffffff	       273	am.c	FUNCTION_13	WHILE_1	IF_1
0xa16	      0xe9a5000000	                           jmp 0x4000b00	       273	am.c	FUNCTION_13	WHILE_1	IF_1
0xa1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	am.c	FUNCTION_13	WHILE_1	CALL_2
0xa1f	      0xbe0a000000	                            mov esi, 0xa	       274	am.c	FUNCTION_13	WHILE_1	CALL_2
0xa24	          0x4889c7	                            mov rdi, rax	       274	am.c	FUNCTION_13	WHILE_1	CALL_2
0xa27	      0xe800000000	                          call 0x4000a6c	       274	am.c	FUNCTION_13	WHILE_1	CALL_2
0xa2c	        0x488945f0	             mov qword [rbp - 0x10], rax	       274	am.c	FUNCTION_13	WHILE_1	CALL_2
0xa30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	am.c	FUNCTION_13	WHILE_1
0xa34	        0x488d5001	                      lea rdx, [rax + 1]	       275	am.c	FUNCTION_13	WHILE_1
0xa38	        0x488955e8	             mov qword [rbp - 0x18], rdx	       275	am.c	FUNCTION_13	WHILE_1
0xa3c	          0xc60000	                       mov byte [rax], 0	       275	am.c	FUNCTION_13	WHILE_1
0xa3f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       276	am.c	FUNCTION_13	WHILE_1	CALL_3
0xa43	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       276	am.c	FUNCTION_13	WHILE_1	CALL_3
0xa47	          0x4889d6	                            mov rsi, rdx	       276	am.c	FUNCTION_13	WHILE_1	CALL_3
0xa4a	          0x4889c7	                            mov rdi, rax	       276	am.c	FUNCTION_13	WHILE_1	CALL_3
0xa4d	      0xe800000000	                          call 0x4000a92	       276	am.c	FUNCTION_13	WHILE_1	CALL_3
0xa52	        0x488945f8	                mov qword [rbp - 8], rax	       276	am.c	FUNCTION_13	WHILE_1	CALL_3
0xa56	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       278	am.c	FUNCTION_13	WHILE_1
0xa5a	           0xfb600	                   movzx eax, byte [rax]	       278	am.c	FUNCTION_13	WHILE_1
0xa5d	            0x3c0a	                             cmp al, 0xa	       278	am.c	FUNCTION_13	WHILE_1
0xa5f	           0xf94c0	                                 sete al	       278	am.c	FUNCTION_13	WHILE_1
0xa62	           0xfb6d0	                           movzx edx, al	       278	am.c	FUNCTION_13	WHILE_1
0xa65	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       278	am.c	FUNCTION_13	WHILE_1
0xa69	          0x4801d0	                            add rax, rdx	       278	am.c	FUNCTION_13	WHILE_1
0xa6c	        0x488945d8	             mov qword [rbp - 0x28], rax	       278	am.c	FUNCTION_13	WHILE_1
0xa70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	am.c	FUNCTION_13	WHILE_1
0xa74	          0xc60000	                       mov byte [rax], 0	       279	am.c	FUNCTION_13	WHILE_1
0xa77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	am.c	FUNCTION_13	WHILE_1	CALL_4
0xa7b	          0x4889c7	                            mov rdi, rax	       280	am.c	FUNCTION_13	WHILE_1	CALL_4
0xa7e	      0xe800000000	                          call 0x4000ac3	       280	am.c	FUNCTION_13	WHILE_1	CALL_4
0xa83	        0x488945e8	             mov qword [rbp - 0x18], rax	       280	am.c	FUNCTION_13	WHILE_1	CALL_4
0xa87	      0x48837de800	               cmp qword [rbp - 0x18], 0	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0xa8c	            0x7507	                           jne 0x4000ad5	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0xa8e	      0xb8ffffffff	                     mov eax, 0xffffffff	       282	am.c	FUNCTION_13	WHILE_1	IF_2
0xa93	            0xeb2b	                           jmp 0x4000b00	       282	am.c	FUNCTION_13	WHILE_1	IF_2
0xa95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	am.c	FUNCTION_13	WHILE_1	CALL_5
0xa99	          0x4889c7	                            mov rdi, rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_5
0xa9c	      0xe800000000	                          call 0x4000ae1	       283	am.c	FUNCTION_13	WHILE_1	CALL_5
0xaa1	          0x4889c2	                            mov rdx, rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_5
0xaa4	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	am.c	FUNCTION_13	WHILE_1	CALL_5
0xaa8	        0x48895008	                mov qword [rax + 8], rdx	       283	am.c	FUNCTION_13	WHILE_1	CALL_5
0xaac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       268	am.c	FUNCTION_13	WHILE_1
0xab0	           0xfb600	                   movzx eax, byte [rax]	       268	am.c	FUNCTION_13	WHILE_1
0xab3	            0x84c0	                             test al, al	       268	am.c	FUNCTION_13	WHILE_1
0xab5	     0xf853affffff	                           jne 0x4000a35	       268	am.c	FUNCTION_13	WHILE_1
0xabb	      0xb800000000	                              mov eax, 0	       285	am.c	FUNCTION_13
0xac0	              0xc9	                                   leave	       286	am.c	FUNCTION_13
0xac1	              0xc3	                                     ret	       286	am.c	FUNCTION_13
cmd_am	functions,0:DO,0:WHILE,0:FOR,1:CALL,115:IF,12:SWITCH,1:ELSE,2	534
0x5d7a	              0x55	                                push rbp	      2200	am.c	FUNCTION_61
0x5d7b	          0x4889e5	                            mov rbp, rsp	      2200	am.c	FUNCTION_61
0x5d7e	              0x53	                                push rbx	      2200	am.c	FUNCTION_61
0x5d7f	    0x4881ecf80900	                          sub rsp, 0x9f8	      2200	am.c	FUNCTION_61
0x5d86	    0x89bd1cf6ffff	            mov dword [rbp - 0x9e4], edi	      2200	am.c	FUNCTION_61
0x5d8c	    0x4889b510f6ff	            mov qword [rbp - 0x9f0], rsi	      2200	am.c	FUNCTION_61
0x5d93	    0x48899508f6ff	            mov qword [rbp - 0x9f8], rdx	      2200	am.c	FUNCTION_61
0x5d9a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2200	am.c	FUNCTION_61
0x5da3	        0x488945e8	             mov qword [rbp - 0x18], rax	      2200	am.c	FUNCTION_61
0x5da7	            0x31c0	                            xor eax, eax	      2200	am.c	FUNCTION_61
0x5da9	    0xc78524f6ffff	    mov dword [rbp - 0x9dc], 0xffffffff 	      2202	am.c	FUNCTION_61
0x5db3	    0xc78528f6ffff	    mov dword [rbp - 0x9d8], 0xffffffff 	      2203	am.c	FUNCTION_61
0x5dbd	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 0	      2204	am.c	FUNCTION_61
0x5dc7	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      2205	am.c	FUNCTION_61
0x5dd1	    0xc78534f6ffff	              mov dword [rbp - 0x9cc], 0	      2207	am.c	FUNCTION_61
0x5ddb	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	      2209	am.c	FUNCTION_61
0x5de6	    0x48c78558f6ff	              mov qword [rbp - 0x9a8], 0	      2209	am.c	FUNCTION_61
0x5df1	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	      2209	am.c	FUNCTION_61
0x5dfc	    0x488d9520f7ff	                  lea rdx, [rbp - 0x8e0]	      2215	am.c	FUNCTION_61
0x5e03	      0xb800000000	                              mov eax, 0	      2215	am.c	FUNCTION_61
0x5e08	      0xb918010000	                          mov ecx, 0x118	      2215	am.c	FUNCTION_61
0x5e0d	          0x4889d7	                            mov rdi, rdx	      2215	am.c	FUNCTION_61
0x5e10	          0xf348ab	              rep stosq qword [rdi], rax	      2215	am.c	FUNCTION_61
0x5e13	    0xc78520f7ffff	              mov dword [rbp - 0x8e0], 7	      2215	am.c	FUNCTION_61
0x5e1d	    0xc78524f7ffff	          mov dword [rbp - 0x8dc], 0x69 	      2215	am.c	FUNCTION_61
0x5e27	    0x48c78528f7ff	              mov qword [rbp - 0x8d8], 0	      2215	am.c	FUNCTION_61
0x5e32	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x5e39	        0x4883c050	                           add rax, 0x50	      2215	am.c	FUNCTION_61
0x5e3d	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	      2215	am.c	FUNCTION_61
0x5e44	    0x48c78540f7ff	              mov qword [rbp - 0x8c0], 0	      2215	am.c	FUNCTION_61
0x5e4f	    0xc78548f7ffff	              mov dword [rbp - 0x8b8], 2	      2215	am.c	FUNCTION_61
0x5e59	    0x48c78558f7ff	              mov qword [rbp - 0x8a8], 1	      2215	am.c	FUNCTION_61
0x5e64	    0xc78560f7ffff	              mov dword [rbp - 0x8a0], 7	      2215	am.c	FUNCTION_61
0x5e6e	    0xc78564f7ffff	          mov dword [rbp - 0x89c], 0x62 	      2215	am.c	FUNCTION_61
0x5e78	    0x48c78568f7ff	              mov qword [rbp - 0x898], 0	      2215	am.c	FUNCTION_61
0x5e83	    0x488d8524f6ff	                  lea rax, [rbp - 0x9dc]	      2215	am.c	FUNCTION_61
0x5e8a	    0x48898570f7ff	            mov qword [rbp - 0x890], rax	      2215	am.c	FUNCTION_61
0x5e91	    0x48c78580f7ff	              mov qword [rbp - 0x880], 0	      2215	am.c	FUNCTION_61
0x5e9c	    0xc78588f7ffff	            mov dword [rbp - 0x878], 0xa	      2215	am.c	FUNCTION_61
0x5ea6	    0x48c78598f7ff	              mov qword [rbp - 0x868], 1	      2215	am.c	FUNCTION_61
0x5eb1	    0xc785a0f7ffff	              mov dword [rbp - 0x860], 7	      2215	am.c	FUNCTION_61
0x5ebb	    0xc785a4f7ffff	          mov dword [rbp - 0x85c], 0x33 	      2215	am.c	FUNCTION_61
0x5ec5	    0x48c785a8f7ff	              mov qword [rbp - 0x858], 0	      2215	am.c	FUNCTION_61
0x5ed0	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x5ed7	        0x4883c054	                           add rax, 0x54	      2215	am.c	FUNCTION_61
0x5edb	    0x488985b0f7ff	            mov qword [rbp - 0x850], rax	      2215	am.c	FUNCTION_61
0x5ee2	    0x48c785c0f7ff	              mov qword [rbp - 0x840], 0	      2215	am.c	FUNCTION_61
0x5eed	    0xc785c8f7ffff	              mov dword [rbp - 0x838], 2	      2215	am.c	FUNCTION_61
0x5ef7	    0x48c785d8f7ff	              mov qword [rbp - 0x828], 1	      2215	am.c	FUNCTION_61
0x5f02	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 6	      2215	am.c	FUNCTION_61
0x5f0c	    0xc785e4f7ffff	          mov dword [rbp - 0x81c], 0x71 	      2215	am.c	FUNCTION_61
0x5f16	    0x48c785e8f7ff	              mov qword [rbp - 0x818], 0	      2215	am.c	FUNCTION_61
0x5f21	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x5f28	        0x4883c058	                           add rax, 0x58	      2215	am.c	FUNCTION_61
0x5f2c	    0x488985f0f7ff	            mov qword [rbp - 0x810], rax	      2215	am.c	FUNCTION_61
0x5f33	    0x48c78500f8ff	              mov qword [rbp - 0x800], 0	      2215	am.c	FUNCTION_61
0x5f3e	    0xc78508f8ffff	              mov dword [rbp - 0x7f8], 2	      2215	am.c	FUNCTION_61
0x5f48	    0xc78520f8ffff	              mov dword [rbp - 0x7e0], 7	      2215	am.c	FUNCTION_61
0x5f52	    0xc78524f8ffff	          mov dword [rbp - 0x7dc], 0x73 	      2215	am.c	FUNCTION_61
0x5f5c	    0x48c78528f8ff	              mov qword [rbp - 0x7d8], 0	      2215	am.c	FUNCTION_61
0x5f67	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x5f6e	        0x4883c05c	                           add rax, 0x5c	      2215	am.c	FUNCTION_61
0x5f72	    0x48898530f8ff	            mov qword [rbp - 0x7d0], rax	      2215	am.c	FUNCTION_61
0x5f79	    0x48c78540f8ff	              mov qword [rbp - 0x7c0], 0	      2215	am.c	FUNCTION_61
0x5f84	    0xc78548f8ffff	              mov dword [rbp - 0x7b8], 2	      2215	am.c	FUNCTION_61
0x5f8e	    0x48c78558f8ff	              mov qword [rbp - 0x7a8], 2	      2215	am.c	FUNCTION_61
0x5f99	    0xc78560f8ffff	              mov dword [rbp - 0x7a0], 7	      2215	am.c	FUNCTION_61
0x5fa3	    0xc78564f8ffff	          mov dword [rbp - 0x79c], 0x75 	      2215	am.c	FUNCTION_61
0x5fad	    0x48c78568f8ff	              mov qword [rbp - 0x798], 0	      2215	am.c	FUNCTION_61
0x5fb8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x5fbf	        0x4883c060	                           add rax, 0x60	      2215	am.c	FUNCTION_61
0x5fc3	    0x48898570f8ff	            mov qword [rbp - 0x790], rax	      2215	am.c	FUNCTION_61
0x5fca	    0x48c78580f8ff	              mov qword [rbp - 0x780], 0	      2215	am.c	FUNCTION_61
0x5fd5	    0xc78588f8ffff	              mov dword [rbp - 0x778], 2	      2215	am.c	FUNCTION_61
0x5fdf	    0x48c78598f8ff	              mov qword [rbp - 0x768], 1	      2215	am.c	FUNCTION_61
0x5fea	    0xc785a0f8ffff	              mov dword [rbp - 0x760], 7	      2215	am.c	FUNCTION_61
0x5ff4	    0xc785a4f8ffff	          mov dword [rbp - 0x75c], 0x6b 	      2215	am.c	FUNCTION_61
0x5ffe	    0x48c785a8f8ff	              mov qword [rbp - 0x758], 0	      2215	am.c	FUNCTION_61
0x6009	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6010	        0x4883c064	                           add rax, 0x64	      2215	am.c	FUNCTION_61
0x6014	    0x488985b0f8ff	            mov qword [rbp - 0x750], rax	      2215	am.c	FUNCTION_61
0x601b	    0x48c785c0f8ff	              mov qword [rbp - 0x740], 0	      2215	am.c	FUNCTION_61
0x6026	    0xc785c8f8ffff	              mov dword [rbp - 0x738], 2	      2215	am.c	FUNCTION_61
0x6030	    0x48c785d8f8ff	              mov qword [rbp - 0x728], 1	      2215	am.c	FUNCTION_61
0x603b	    0xc785e0f8ffff	              mov dword [rbp - 0x720], 7	      2215	am.c	FUNCTION_61
0x6045	    0x48c785e8f8ff	              mov qword [rbp - 0x718], 0	      2215	am.c	FUNCTION_61
0x6050	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6057	        0x4883c064	                           add rax, 0x64	      2215	am.c	FUNCTION_61
0x605b	    0x488985f0f8ff	            mov qword [rbp - 0x710], rax	      2215	am.c	FUNCTION_61
0x6062	    0x48c78500f9ff	              mov qword [rbp - 0x700], 0	      2215	am.c	FUNCTION_61
0x606d	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 2	      2215	am.c	FUNCTION_61
0x6077	    0x48c78518f9ff	              mov qword [rbp - 0x6e8], 2	      2215	am.c	FUNCTION_61
0x6082	    0xc78520f9ffff	              mov dword [rbp - 0x6e0], 7	      2215	am.c	FUNCTION_61
0x608c	    0xc78524f9ffff	          mov dword [rbp - 0x6dc], 0x6d 	      2215	am.c	FUNCTION_61
0x6096	    0x48c78528f9ff	              mov qword [rbp - 0x6d8], 0	      2215	am.c	FUNCTION_61
0x60a1	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x60a8	        0x4883c068	                           add rax, 0x68	      2215	am.c	FUNCTION_61
0x60ac	    0x48898530f9ff	            mov qword [rbp - 0x6d0], rax	      2215	am.c	FUNCTION_61
0x60b3	    0x48c78540f9ff	              mov qword [rbp - 0x6c0], 0	      2215	am.c	FUNCTION_61
0x60be	    0xc78548f9ffff	              mov dword [rbp - 0x6b8], 2	      2215	am.c	FUNCTION_61
0x60c8	    0x48c78558f9ff	              mov qword [rbp - 0x6a8], 1	      2215	am.c	FUNCTION_61
0x60d3	    0xc78560f9ffff	              mov dword [rbp - 0x6a0], 7	      2215	am.c	FUNCTION_61
0x60dd	    0x48c78568f9ff	              mov qword [rbp - 0x698], 0	      2215	am.c	FUNCTION_61
0x60e8	    0x488d8528f6ff	                  lea rax, [rbp - 0x9d8]	      2215	am.c	FUNCTION_61
0x60ef	    0x48898570f9ff	            mov qword [rbp - 0x690], rax	      2215	am.c	FUNCTION_61
0x60f6	    0x48c78580f9ff	              mov qword [rbp - 0x680], 0	      2215	am.c	FUNCTION_61
0x6101	    0xc78588f9ffff	              mov dword [rbp - 0x678], 6	      2215	am.c	FUNCTION_61
0x610b	    0x48c78598f9ff	              mov qword [rbp - 0x668], 1	      2215	am.c	FUNCTION_61
0x6116	    0xc785a0f9ffff	              mov dword [rbp - 0x660], 7	      2215	am.c	FUNCTION_61
0x6120	    0x48c785a8f9ff	              mov qword [rbp - 0x658], 0	      2215	am.c	FUNCTION_61
0x612b	    0x488d8528f6ff	                  lea rax, [rbp - 0x9d8]	      2215	am.c	FUNCTION_61
0x6132	    0x488985b0f9ff	            mov qword [rbp - 0x650], rax	      2215	am.c	FUNCTION_61
0x6139	    0x48c785c0f9ff	              mov qword [rbp - 0x640], 0	      2215	am.c	FUNCTION_61
0x6144	    0xc785c8f9ffff	              mov dword [rbp - 0x638], 6	      2215	am.c	FUNCTION_61
0x614e	    0xc785e0f9ffff	              mov dword [rbp - 0x620], 7	      2215	am.c	FUNCTION_61
0x6158	    0xc785e4f9ffff	          mov dword [rbp - 0x61c], 0x63 	      2215	am.c	FUNCTION_61
0x6162	    0x48c785e8f9ff	              mov qword [rbp - 0x618], 0	      2215	am.c	FUNCTION_61
0x616d	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6174	        0x4883c06c	                           add rax, 0x6c	      2215	am.c	FUNCTION_61
0x6178	    0x488985f0f9ff	            mov qword [rbp - 0x610], rax	      2215	am.c	FUNCTION_61
0x617f	    0x48c78500faff	              mov qword [rbp - 0x600], 0	      2215	am.c	FUNCTION_61
0x618a	    0xc78508faffff	              mov dword [rbp - 0x5f8], 2	      2215	am.c	FUNCTION_61
0x6194	    0x48c78518faff	              mov qword [rbp - 0x5e8], 1	      2215	am.c	FUNCTION_61
0x619f	    0xc78520faffff	           mov dword [rbp - 0x5e0], 0xc 	      2215	am.c	FUNCTION_61
0x61a9	    0x48c78528faff	              mov qword [rbp - 0x5d8], 0	      2215	am.c	FUNCTION_61
0x61b4	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x61bb	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x61bf	    0x48898530faff	            mov qword [rbp - 0x5d0], rax	      2215	am.c	FUNCTION_61
0x61c6	    0x48c78538faff	              mov qword [rbp - 0x5c8], 0	      2215	am.c	FUNCTION_61
0x61d1	    0x48c78540faff	              mov qword [rbp - 0x5c0], 0	      2215	am.c	FUNCTION_61
0x61dc	    0x48c78550faff	              mov qword [rbp - 0x5b0], 0	      2215	am.c	FUNCTION_61
0x61e7	    0xc78560faffff	           mov dword [rbp - 0x5a0], 0xc 	      2215	am.c	FUNCTION_61
0x61f1	    0x48c78568faff	              mov qword [rbp - 0x598], 0	      2215	am.c	FUNCTION_61
0x61fc	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6203	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x6207	    0x48898570faff	            mov qword [rbp - 0x590], rax	      2215	am.c	FUNCTION_61
0x620e	    0x48c78580faff	              mov qword [rbp - 0x580], 0	      2215	am.c	FUNCTION_61
0x6219	    0xc78588faffff	              mov dword [rbp - 0x578], 2	      2215	am.c	FUNCTION_61
0x6223	    0x48c78590faff	              mov qword [rbp - 0x570], 0	      2215	am.c	FUNCTION_61
0x622e	    0xc785a0faffff	           mov dword [rbp - 0x560], 0xc 	      2215	am.c	FUNCTION_61
0x6238	    0x48c785a8faff	              mov qword [rbp - 0x558], 0	      2215	am.c	FUNCTION_61
0x6243	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x624a	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x624e	    0x488985b0faff	            mov qword [rbp - 0x550], rax	      2215	am.c	FUNCTION_61
0x6255	    0x48c785c0faff	              mov qword [rbp - 0x540], 0	      2215	am.c	FUNCTION_61
0x6260	    0xc785c8faffff	              mov dword [rbp - 0x538], 2	      2215	am.c	FUNCTION_61
0x626a	    0x48c785d0faff	              mov qword [rbp - 0x530], 0	      2215	am.c	FUNCTION_61
0x6275	    0xc785e0faffff	           mov dword [rbp - 0x520], 0xc 	      2215	am.c	FUNCTION_61
0x627f	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	      2215	am.c	FUNCTION_61
0x628a	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6291	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x6295	    0x488985f0faff	            mov qword [rbp - 0x510], rax	      2215	am.c	FUNCTION_61
0x629c	    0x48c785f8faff	              mov qword [rbp - 0x508], 0	      2215	am.c	FUNCTION_61
0x62a7	    0x48c78500fbff	              mov qword [rbp - 0x500], 0	      2215	am.c	FUNCTION_61
0x62b2	    0x48c78510fbff	              mov qword [rbp - 0x4f0], 0	      2215	am.c	FUNCTION_61
0x62bd	    0xc78520fbffff	           mov dword [rbp - 0x4e0], 0xc 	      2215	am.c	FUNCTION_61
0x62c7	    0x48c78528fbff	              mov qword [rbp - 0x4d8], 0	      2215	am.c	FUNCTION_61
0x62d2	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x62d9	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x62dd	    0x48898530fbff	            mov qword [rbp - 0x4d0], rax	      2215	am.c	FUNCTION_61
0x62e4	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	      2215	am.c	FUNCTION_61
0x62ef	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	      2215	am.c	FUNCTION_61
0x62fa	    0x48c78550fbff	              mov qword [rbp - 0x4b0], 0	      2215	am.c	FUNCTION_61
0x6305	    0xc78560fbffff	           mov dword [rbp - 0x4a0], 0xc 	      2215	am.c	FUNCTION_61
0x630f	    0x48c78568fbff	              mov qword [rbp - 0x498], 0	      2215	am.c	FUNCTION_61
0x631a	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6321	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x6325	    0x48898570fbff	            mov qword [rbp - 0x490], rax	      2215	am.c	FUNCTION_61
0x632c	    0x48c78578fbff	              mov qword [rbp - 0x488], 0	      2215	am.c	FUNCTION_61
0x6337	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	      2215	am.c	FUNCTION_61
0x6342	    0x48c78590fbff	              mov qword [rbp - 0x470], 0	      2215	am.c	FUNCTION_61
0x634d	    0xc785a0fbffff	           mov dword [rbp - 0x460], 0xc 	      2215	am.c	FUNCTION_61
0x6357	    0xc785a4fbffff	          mov dword [rbp - 0x45c], 0x43 	      2215	am.c	FUNCTION_61
0x6361	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6368	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x636c	    0x488985b0fbff	            mov qword [rbp - 0x450], rax	      2215	am.c	FUNCTION_61
0x6373	    0x48c785b8fbff	              mov qword [rbp - 0x448], 0	      2215	am.c	FUNCTION_61
0x637e	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	      2215	am.c	FUNCTION_61
0x6389	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	      2215	am.c	FUNCTION_61
0x6394	    0xc785e0fbffff	           mov dword [rbp - 0x420], 0xc 	      2215	am.c	FUNCTION_61
0x639e	    0xc785e4fbffff	          mov dword [rbp - 0x41c], 0x70 	      2215	am.c	FUNCTION_61
0x63a8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x63af	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x63b3	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	      2215	am.c	FUNCTION_61
0x63ba	    0x48c785f8fbff	              mov qword [rbp - 0x408], 0	      2215	am.c	FUNCTION_61
0x63c5	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	      2215	am.c	FUNCTION_61
0x63d0	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	      2215	am.c	FUNCTION_61
0x63db	    0xc78520fcffff	           mov dword [rbp - 0x3e0], 0xc 	      2215	am.c	FUNCTION_61
0x63e5	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 0	      2215	am.c	FUNCTION_61
0x63f0	    0x488d852cf6ff	                  lea rax, [rbp - 0x9d4]	      2215	am.c	FUNCTION_61
0x63f7	    0x48898530fcff	            mov qword [rbp - 0x3d0], rax	      2215	am.c	FUNCTION_61
0x63fe	    0x48c78538fcff	              mov qword [rbp - 0x3c8], 0	      2215	am.c	FUNCTION_61
0x6409	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	      2215	am.c	FUNCTION_61
0x6414	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	      2215	am.c	FUNCTION_61
0x641f	    0xc78560fcffff	           mov dword [rbp - 0x3a0], 0xc 	      2215	am.c	FUNCTION_61
0x6429	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	      2215	am.c	FUNCTION_61
0x6434	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x643b	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x643f	    0x48898570fcff	            mov qword [rbp - 0x390], rax	      2215	am.c	FUNCTION_61
0x6446	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	      2215	am.c	FUNCTION_61
0x6451	    0xc78588fcffff	              mov dword [rbp - 0x378], 2	      2215	am.c	FUNCTION_61
0x645b	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	      2215	am.c	FUNCTION_61
0x6466	    0xc785a0fcffff	              mov dword [rbp - 0x360], 9	      2215	am.c	FUNCTION_61
0x6470	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	      2215	am.c	FUNCTION_61
0x647b	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6482	        0x4883e880	             sub rax, 0xffffffffffffff80	      2215	am.c	FUNCTION_61
0x6486	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	      2215	am.c	FUNCTION_61
0x648d	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	      2215	am.c	FUNCTION_61
0x6498	    0xc785e0fcffff	              mov dword [rbp - 0x320], 8	      2215	am.c	FUNCTION_61
0x64a2	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	      2215	am.c	FUNCTION_61
0x64ad	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x64b4	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	      2215	am.c	FUNCTION_61
0x64bb	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	      2215	am.c	FUNCTION_61
0x64c6	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 6	      2215	am.c	FUNCTION_61
0x64d0	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 2	      2215	am.c	FUNCTION_61
0x64db	    0xc78520fdffff	              mov dword [rbp - 0x2e0], 8	      2215	am.c	FUNCTION_61
0x64e5	    0xc78524fdffff	          mov dword [rbp - 0x2dc], 0x72 	      2215	am.c	FUNCTION_61
0x64ef	    0x48c78528fdff	              mov qword [rbp - 0x2d8], 0	      2215	am.c	FUNCTION_61
0x64fa	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x6501	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      2215	am.c	FUNCTION_61
0x6508	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	      2215	am.c	FUNCTION_61
0x6513	    0xc78548fdffff	              mov dword [rbp - 0x2b8], 6	      2215	am.c	FUNCTION_61
0x651d	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 2	      2215	am.c	FUNCTION_61
0x6528	    0xc78560fdffff	              mov dword [rbp - 0x2a0], 8	      2215	am.c	FUNCTION_61
0x6532	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	      2215	am.c	FUNCTION_61
0x653d	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x6544	    0x48898570fdff	            mov qword [rbp - 0x290], rax	      2215	am.c	FUNCTION_61
0x654b	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	      2215	am.c	FUNCTION_61
0x6556	    0xc78588fdffff	              mov dword [rbp - 0x278], 6	      2215	am.c	FUNCTION_61
0x6560	    0x48c78598fdff	              mov qword [rbp - 0x268], 3	      2215	am.c	FUNCTION_61
0x656b	    0xc785a0fdffff	              mov dword [rbp - 0x260], 8	      2215	am.c	FUNCTION_61
0x6575	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	      2215	am.c	FUNCTION_61
0x6580	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x6587	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2215	am.c	FUNCTION_61
0x658e	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      2215	am.c	FUNCTION_61
0x6599	    0xc785c8fdffff	              mov dword [rbp - 0x238], 6	      2215	am.c	FUNCTION_61
0x65a3	    0x48c785d8fdff	              mov qword [rbp - 0x228], 4	      2215	am.c	FUNCTION_61
0x65ae	    0xc785e0fdffff	              mov dword [rbp - 0x220], 8	      2215	am.c	FUNCTION_61
0x65b8	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      2215	am.c	FUNCTION_61
0x65c3	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x65ca	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      2215	am.c	FUNCTION_61
0x65d1	    0x48c78500feff	              mov qword [rbp - 0x200], 0	      2215	am.c	FUNCTION_61
0x65dc	    0xc78508feffff	              mov dword [rbp - 0x1f8], 6	      2215	am.c	FUNCTION_61
0x65e6	    0x48c78518feff	              mov qword [rbp - 0x1e8], 5	      2215	am.c	FUNCTION_61
0x65f1	    0xc78520feffff	              mov dword [rbp - 0x1e0], 8	      2215	am.c	FUNCTION_61
0x65fb	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	      2215	am.c	FUNCTION_61
0x6606	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x660d	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      2215	am.c	FUNCTION_61
0x6614	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      2215	am.c	FUNCTION_61
0x661f	    0xc78548feffff	              mov dword [rbp - 0x1b8], 6	      2215	am.c	FUNCTION_61
0x6629	    0x48c78558feff	              mov qword [rbp - 0x1a8], 6	      2215	am.c	FUNCTION_61
0x6634	    0xc78560feffff	              mov dword [rbp - 0x1a0], 7	      2215	am.c	FUNCTION_61
0x663e	    0x48c78568feff	              mov qword [rbp - 0x198], 0	      2215	am.c	FUNCTION_61
0x6649	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6650	    0x480588000000	                           add rax, 0x88	      2215	am.c	FUNCTION_61
0x6656	    0x48898570feff	            mov qword [rbp - 0x190], rax	      2215	am.c	FUNCTION_61
0x665d	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      2215	am.c	FUNCTION_61
0x6668	    0xc78588feffff	              mov dword [rbp - 0x178], 2	      2215	am.c	FUNCTION_61
0x6672	    0x48c78598feff	              mov qword [rbp - 0x168], 1	      2215	am.c	FUNCTION_61
0x667d	    0xc785a0feffff	              mov dword [rbp - 0x160], 7	      2215	am.c	FUNCTION_61
0x6687	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	      2215	am.c	FUNCTION_61
0x6692	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6699	    0x48058c000000	                           add rax, 0x8c	      2215	am.c	FUNCTION_61
0x669f	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      2215	am.c	FUNCTION_61
0x66a6	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	      2215	am.c	FUNCTION_61
0x66b1	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	      2215	am.c	FUNCTION_61
0x66bb	    0x48c785d8feff	              mov qword [rbp - 0x128], 1	      2215	am.c	FUNCTION_61
0x66c6	    0xc785e0feffff	           mov dword [rbp - 0x120], 0xc 	      2215	am.c	FUNCTION_61
0x66d0	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      2215	am.c	FUNCTION_61
0x66db	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x66e2	    0x480590000000	                           add rax, 0x90	      2215	am.c	FUNCTION_61
0x66e8	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      2215	am.c	FUNCTION_61
0x66ef	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2215	am.c	FUNCTION_61
0x66fa	    0xc78508ffffff	               mov dword [rbp - 0xf8], 2	      2215	am.c	FUNCTION_61
0x6704	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2215	am.c	FUNCTION_61
0x670f	    0xc78520ffffff	               mov dword [rbp - 0xe0], 9	      2215	am.c	FUNCTION_61
0x6719	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x53 	      2215	am.c	FUNCTION_61
0x6723	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      2215	am.c	FUNCTION_61
0x672e	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x6735	    0x480598000000	                           add rax, 0x98	      2215	am.c	FUNCTION_61
0x673b	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2215	am.c	FUNCTION_61
0x6742	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      2215	am.c	FUNCTION_61
0x674d	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2215	am.c	FUNCTION_61
0x6758	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      2215	am.c	FUNCTION_61
0x6762	      0xb800000000	                              mov eax, 0	      2300	am.c	FUNCTION_61
0x6767	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2215	am.c	FUNCTION_61
0x676e	    0xc78560ffffff	               mov dword [rbp - 0xa0], 7	      2215	am.c	FUNCTION_61
0x6778	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2215	am.c	FUNCTION_61
0x6783	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x678a	    0x4805a0000000	                           add rax, 0xa0	      2215	am.c	FUNCTION_61
0x6790	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2215	am.c	FUNCTION_61
0x6797	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2215	am.c	FUNCTION_61
0x679f	    0xc745880a0000	             mov dword [rbp - 0x78], 0xa	      2215	am.c	FUNCTION_61
0x67a6	    0x48c745980100	               mov qword [rbp - 0x68], 1	      2215	am.c	FUNCTION_61
0x67ae	    0x83bd1cf6ffff	              cmp dword [rbp - 0x9e4], 2	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67b5	            0x7538	                           jne 0x400682f	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67b7	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67be	        0x4883c008	                              add rax, 8	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67c2	          0x488b00	                    mov rax, qword [rax]	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67c5	      0xbe00000000	                              mov esi, 0	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67ca	          0x4889c7	                            mov rdi, rax	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67cd	      0xe800000000	                          call 0x4006812	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67d2	            0x85c0	                           test eax, eax	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67d4	            0x7519	                           jne 0x400682f	      2306	am.c	FUNCTION_61	IF_1	CALL_76
0x67d6	    0x488d9520f7ff	                  lea rdx, [rbp - 0x8e0]	      2307	am.c	FUNCTION_61	CALL_77
0x67dd	    0x488d8550f6ff	                  lea rax, [rbp - 0x9b0]	      2307	am.c	FUNCTION_61	CALL_77
0x67e4	          0x4889d6	                            mov rsi, rdx	      2307	am.c	FUNCTION_61	CALL_77
0x67e7	          0x4889c7	                            mov rdi, rax	      2307	am.c	FUNCTION_61	CALL_77
0x67ea	      0xe800000000	                          call 0x400682f	      2307	am.c	FUNCTION_61	CALL_77
0x67ef	      0xbe00000000	                              mov esi, 0	      2309	am.c	FUNCTION_61	CALL_78
0x67f4	      0xbf00000000	                              mov edi, 0	      2309	am.c	FUNCTION_61	CALL_78
0x67f9	      0xe800000000	                          call 0x400683e	      2309	am.c	FUNCTION_61	CALL_78
0x67fe	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2311	am.c	FUNCTION_61	CALL_79
0x6805	          0x4889c7	                            mov rdi, rax	      2311	am.c	FUNCTION_61	CALL_79
0x6808	      0xe8cd9cffff	                  call sym.am_state_init	      2311	am.c	FUNCTION_61	CALL_79
0x680d	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2313	am.c	FUNCTION_61	CALL_80
0x6814	          0x4889c7	                            mov rdi, rax	      2313	am.c	FUNCTION_61	CALL_80
0x6817	      0xe802a0ffff	                 call sym.am_in_progress	      2313	am.c	FUNCTION_61	CALL_80
0x681c	    0x89853cf6ffff	            mov dword [rbp - 0x9c4], eax	      2313	am.c	FUNCTION_61	CALL_80
0x6822	    0x83bd3cf6ffff	              cmp dword [rbp - 0x9c4], 0	      2314	am.c	FUNCTION_61	IF_2
0x6829	            0x740f	                            je 0x400687a	      2314	am.c	FUNCTION_61	IF_2
0x682b	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2315	am.c	FUNCTION_61	CALL_81
0x6832	          0x4889c7	                            mov rdi, rax	      2315	am.c	FUNCTION_61	CALL_81
0x6835	      0xe8fda6ffff	                        call sym.am_load	      2315	am.c	FUNCTION_61	CALL_81
0x683a	    0x488dbd50f6ff	                  lea rdi, [rbp - 0x9b0]	      2317	am.c	FUNCTION_61	CALL_82
0x6841	    0x488d8d20f7ff	                  lea rcx, [rbp - 0x8e0]	      2317	am.c	FUNCTION_61	CALL_82
0x6848	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	      2317	am.c	FUNCTION_61	CALL_82
0x684f	    0x488bb510f6ff	            mov rsi, qword [rbp - 0x9f0]	      2317	am.c	FUNCTION_61	CALL_82
0x6856	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      2317	am.c	FUNCTION_61	CALL_82
0x685c	    0x41b900000000	                              mov r9d, 0	      2317	am.c	FUNCTION_61	CALL_82
0x6862	          0x4989f8	                             mov r8, rdi	      2317	am.c	FUNCTION_61	CALL_82
0x6865	            0x89c7	                            mov edi, eax	      2317	am.c	FUNCTION_61	CALL_82
0x6867	      0xe800000000	                          call 0x40068ac	      2317	am.c	FUNCTION_61	CALL_82
0x686c	    0x89851cf6ffff	            mov dword [rbp - 0x9e4], eax	      2317	am.c	FUNCTION_61	CALL_82
0x6872	    0x8b8524f6ffff	            mov eax, dword [rbp - 0x9dc]	      2319	am.c	FUNCTION_61	IF_3
0x6878	            0x85c0	                           test eax, eax	      2319	am.c	FUNCTION_61	IF_3
0x687a	            0x7824	                            js 0x40068e0	      2319	am.c	FUNCTION_61	IF_3
0x687c	      0xbf00000000	                              mov edi, 0	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x6881	      0xe87099ffff	                               call sym.	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x6886	          0x4889c2	                            mov rdx, rax	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x6889	    0x488b05000000	            mov rax, qword [0x040068d0] 	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x6890	          0x4889d6	                            mov rsi, rdx	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x6893	          0x4889c7	                            mov rdi, rax	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x6896	      0xb800000000	                              mov eax, 0	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x689b	      0xe800000000	                          call 0x40068e0	      2320	am.c	FUNCTION_61	IF_3	CALL_84
0x68a0	      0xbf01000000	                              mov edi, 1	      2324	am.c	FUNCTION_61	CALL_85
0x68a5	      0xe800000000	                          call 0x40068ea	      2324	am.c	FUNCTION_61	CALL_85
0x68aa	      0xbe00000000	                              mov esi, 0	      2326	am.c	FUNCTION_61	IF_4	CALL_86
0x68af	      0xbf00000000	                              mov edi, 0	      2326	am.c	FUNCTION_61	IF_4	CALL_86
0x68b4	      0xe800000000	                          call 0x40068f9	      2326	am.c	FUNCTION_61	IF_4	CALL_86
0x68b9	            0x85c0	                           test eax, eax	      2326	am.c	FUNCTION_61	IF_4	CALL_86
0x68bb	            0x7917	                           jns 0x4006914	      2326	am.c	FUNCTION_61	IF_4	CALL_86
0x68bd	      0xbf00000000	                              mov edi, 0	      2327	am.c	FUNCTION_61	CALL_88
0x68c2	      0xe82f99ffff	                               call sym.	      2327	am.c	FUNCTION_61	CALL_88
0x68c7	          0x4889c7	                            mov rdi, rax	      2327	am.c	FUNCTION_61	CALL_88
0x68ca	      0xb800000000	                              mov eax, 0	      2327	am.c	FUNCTION_61	CALL_88
0x68cf	      0xe800000000	                          call 0x4006914	      2327	am.c	FUNCTION_61	CALL_88
0x68d4	    0x83bd3cf6ffff	              cmp dword [rbp - 0x9c4], 0	      2329	am.c	FUNCTION_61	IF_5
0x68db	            0x7479	                            je 0x4006996	      2329	am.c	FUNCTION_61	IF_5
0x68dd	    0x83bd1cf6ffff	              cmp dword [rbp - 0x9e4], 0	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68e4	            0x7518	                           jne 0x400693e	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68e6	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68ec	            0x85c0	                           test eax, eax	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68ee	            0x752f	                           jne 0x400695f	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68f0	      0xbf00000000	                              mov edi, 0	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68f5	      0xe800000000	                          call 0x400693a	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68fa	            0x85c0	                           test eax, eax	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68fc	            0x7521	                           jne 0x400695f	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_89
0x68fe	    0x488b9d70f6ff	            mov rbx, qword [rbp - 0x990]	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_91
0x6905	      0xbf00000000	                              mov edi, 0	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_91
0x690a	      0xe8e798ffff	                               call sym.	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_91
0x690f	          0x4889de	                            mov rsi, rbx	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_91
0x6912	          0x4889c7	                            mov rdi, rax	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_91
0x6915	      0xb800000000	                              mov eax, 0	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_91
0x691a	      0xe800000000	                          call 0x400695f	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_91
0x691f	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2345	am.c	FUNCTION_61	IF_5	IF_7
0x6925	            0x85c0	                           test eax, eax	      2345	am.c	FUNCTION_61	IF_5	IF_7
0x6927	            0x750a	                           jne 0x4006973	      2345	am.c	FUNCTION_61	IF_5	IF_7
0x6929	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 1	      2346	am.c	FUNCTION_61	IF_5	IF_7
0x6933	    0x8b85ccf6ffff	            mov eax, dword [rbp - 0x934]	      2348	am.c	FUNCTION_61	IF_5	IF_8
0x6939	          0x83f802	                              cmp eax, 2	      2348	am.c	FUNCTION_61	IF_5	IF_8
0x693c	     0xf85da010000	                           jne 0x4006b5c	      2348	am.c	FUNCTION_61	IF_5	IF_8
0x6942	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2349	am.c	FUNCTION_61	IF_5	CALL_92
0x6949	          0x4889c7	                            mov rdi, rax	      2349	am.c	FUNCTION_61	IF_5	CALL_92
0x694c	      0xe8c1c5ffff	              call sym.am_append_signoff	      2349	am.c	FUNCTION_61	IF_5	CALL_92
0x6951	      0xe9c6010000	                           jmp 0x4006b5c	      2349	am.c	FUNCTION_61	IF_5	CALL_92
0x6956	    0x48c78540f6ff	              mov qword [rbp - 0x9c0], 0	      2351	am.c	FUNCTION_61	ELSE_1
0x6961	    0xc78548f6ffff	              mov dword [rbp - 0x9b8], 0	      2351	am.c	FUNCTION_61	ELSE_1
0x696b	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      2351	am.c	FUNCTION_61	ELSE_1
0x6975	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x697c	          0x4889c7	                            mov rdi, rax	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x697f	      0xe800000000	                          call 0x40069c4	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x6984	            0x85c0	                           test eax, eax	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x6986	            0x7469	                            je 0x4006a31	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x6988	    0x8b8510f7ffff	            mov eax, dword [rbp - 0x8f0]	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x698e	            0x85c0	                           test eax, eax	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x6990	            0x755f	                           jne 0x4006a31	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_93
0x6992	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x6998	          0x83f804	                              cmp eax, 4	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x699b	            0x740b	                            je 0x40069e8	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x699d	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x69a3	          0x83f805	                              cmp eax, 5	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x69a6	            0x7528	                           jne 0x4006a10	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x69a8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2361	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_94
0x69af	          0x4889c7	                            mov rdi, rax	      2361	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_94
0x69b2	      0xe824aaffff	                     call sym.am_destroy	      2361	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_94
0x69b7	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2362	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_95
0x69be	          0x4889c7	                            mov rdi, rax	      2362	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_95
0x69c1	      0xe8039cffff	               call sym.am_state_release	      2362	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_95
0x69c6	      0xb800000000	                              mov eax, 0	      2363	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x69cb	      0xe91a020000	                           jmp 0x4006c2a	      2363	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x69d0	    0x488b9d70f6ff	            mov rbx, qword [rbp - 0x990]	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_97
0x69d7	      0xbf00000000	                              mov edi, 0	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_97
0x69dc	      0xe81598ffff	                               call sym.	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_97
0x69e1	          0x4889de	                            mov rsi, rbx	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_97
0x69e4	          0x4889c7	                            mov rdi, rax	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_97
0x69e7	      0xb800000000	                              mov eax, 0	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_97
0x69ec	      0xe800000000	                          call 0x4006a31	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_97
0x69f1	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2371	am.c	FUNCTION_61	ELSE_1	IF_11
0x69f7	            0x85c0	                           test eax, eax	      2371	am.c	FUNCTION_61	ELSE_1	IF_11
0x69f9	            0x7417	                            je 0x4006a52	      2371	am.c	FUNCTION_61	ELSE_1	IF_11
0x69fb	      0xbf00000000	                              mov edi, 0	      2372	am.c	FUNCTION_61	ELSE_1	CALL_99
0x6a00	      0xe8f197ffff	                               call sym.	      2372	am.c	FUNCTION_61	ELSE_1	CALL_99
0x6a05	          0x4889c7	                            mov rdi, rax	      2372	am.c	FUNCTION_61	ELSE_1	CALL_99
0x6a08	      0xb800000000	                              mov eax, 0	      2372	am.c	FUNCTION_61	ELSE_1	CALL_99
0x6a0d	      0xe800000000	                          call 0x4006a52	      2372	am.c	FUNCTION_61	ELSE_1	CALL_99
0x6a12	    0xc78538f6ffff	              mov dword [rbp - 0x9c8], 0	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x6a1c	      0xe9b6000000	                           jmp 0x4006b17	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x6a21	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a27	            0x4898	                                    cdqe	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a29	    0x488d14c50000	                        lea rdx, [rax*8]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a31	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a38	          0x4801d0	                            add rax, rdx	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a3b	          0x488b00	                    mov rax, qword [rax]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a3e	          0x4889c7	                            mov rdi, rax	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a41	      0xe8c898ffff	               call sym.is_absolute_path	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a46	            0x85c0	                           test eax, eax	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a48	            0x750a	                           jne 0x4006a94	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a4a	    0x4883bd08f6ff	              cmp qword [rbp - 0x9f8], 0	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a52	            0x7531	                           jne 0x4006ac5	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_100
0x6a54	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a5a	            0x4898	                                    cdqe	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a5c	    0x488d14c50000	                        lea rdx, [rax*8]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a64	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a6b	          0x4801d0	                            add rax, rdx	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a6e	          0x488b10	                    mov rdx, qword [rax]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a71	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a78	          0x4889d6	                            mov rsi, rdx	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a7b	          0x4889c7	                            mov rdi, rax	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a7e	      0xe800000000	                          call 0x4006ac3	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a83	            0xeb4b	                           jmp 0x4006b10	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_101
0x6a85	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6a8b	            0x4898	                                    cdqe	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6a8d	    0x488d14c50000	                        lea rdx, [rax*8]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6a95	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6a9c	          0x4801d0	                            add rax, rdx	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6a9f	          0x488b10	                    mov rdx, qword [rax]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6aa2	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6aa9	          0x4889c6	                            mov rsi, rax	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6aac	      0xbf00000000	                              mov edi, 0	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6ab1	      0xb800000000	                              mov eax, 0	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6ab6	      0xe800000000	                          call 0x4006afb	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6abb	          0x4889c2	                            mov rdx, rax	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6abe	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6ac5	          0x4889d6	                            mov rsi, rdx	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6ac8	          0x4889c7	                            mov rdi, rax	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6acb	      0xe800000000	                          call 0x4006b10	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_103
0x6ad0	    0x838538f6ffff	              add dword [rbp - 0x9c8], 1	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x6ad7	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x6add	    0x3b851cf6ffff	            cmp eax, dword [rbp - 0x9e4]	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x6ae3	     0xf8c38ffffff	                            jl 0x4006a61	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x6ae9	    0x8b8d28f6ffff	            mov ecx, dword [rbp - 0x9d8]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_104
0x6aef	    0x488b9540f6ff	            mov rdx, qword [rbp - 0x9c0]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_104
0x6af6	    0x8b852cf6ffff	            mov eax, dword [rbp - 0x9d4]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_104
0x6afc	            0x89c6	                            mov esi, eax	      2381	am.c	FUNCTION_61	ELSE_1	CALL_104
0x6afe	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_104
0x6b05	          0x4889c7	                            mov rdi, rax	      2381	am.c	FUNCTION_61	ELSE_1	CALL_104
0x6b08	      0xe8cdbcffff	                       call sym.am_setup	      2381	am.c	FUNCTION_61	ELSE_1	CALL_104
0x6b0d	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      2383	am.c	FUNCTION_61	ELSE_1	CALL_105
0x6b14	          0x4889c7	                            mov rdi, rax	      2383	am.c	FUNCTION_61	ELSE_1	CALL_105
0x6b17	      0xe800000000	                          call 0x4006b5c	      2383	am.c	FUNCTION_61	ELSE_1	CALL_105
0x6b1c	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2386	am.c	FUNCTION_61	SWITCH_1
0x6b22	          0x83f806	                              cmp eax, 6	      2386	am.c	FUNCTION_61	SWITCH_1
0x6b25	     0xf879b000000	                            ja 0x4006c06	      2386	am.c	FUNCTION_61	SWITCH_1
0x6b2b	            0x89c0	                            mov eax, eax	      2386	am.c	FUNCTION_61	SWITCH_1
0x6b2d	    0x488b04c50000	                  mov rax, qword [rax*8]	      2386	am.c	FUNCTION_61	SWITCH_1
0x6b35	            0xffe0	                                 jmp rax	      2386	am.c	FUNCTION_61	SWITCH_1
0x6b37	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_106
0x6b3e	      0xbe00000000	                              mov esi, 0	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_106
0x6b43	          0x4889c7	                            mov rdi, rax	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_106
0x6b46	      0xe874e0ffff	                         call sym.am_run	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_106
0x6b4b	      0xe985000000	                           jmp 0x4006c15	      2389	am.c	FUNCTION_61	SWITCH_1
0x6b50	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_107
0x6b57	      0xbe01000000	                              mov esi, 1	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_107
0x6b5c	          0x4889c7	                            mov rdi, rax	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_107
0x6b5f	      0xe85be0ffff	                         call sym.am_run	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_107
0x6b64	            0xeb6f	                           jmp 0x4006c15	      2392	am.c	FUNCTION_61	SWITCH_1
0x6b66	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2394	am.c	FUNCTION_61	SWITCH_1	CALL_108
0x6b6d	          0x4889c7	                            mov rdi, rax	      2394	am.c	FUNCTION_61	SWITCH_1	CALL_108
0x6b70	      0xe86ce5ffff	                     call sym.am_resolve	      2394	am.c	FUNCTION_61	SWITCH_1	CALL_108
0x6b75	            0xeb5e	                           jmp 0x4006c15	      2395	am.c	FUNCTION_61	SWITCH_1
0x6b77	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2397	am.c	FUNCTION_61	SWITCH_1	CALL_109
0x6b7e	          0x4889c7	                            mov rdi, rax	      2397	am.c	FUNCTION_61	SWITCH_1	CALL_109
0x6b81	      0xe8e1ebffff	                        call sym.am_skip	      2397	am.c	FUNCTION_61	SWITCH_1	CALL_109
0x6b86	            0xeb4d	                           jmp 0x4006c15	      2398	am.c	FUNCTION_61	SWITCH_1
0x6b88	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2400	am.c	FUNCTION_61	SWITCH_1	CALL_110
0x6b8f	          0x4889c7	                            mov rdi, rax	      2400	am.c	FUNCTION_61	SWITCH_1	CALL_110
0x6b92	      0xe8d0edffff	                       call sym.am_abort	      2400	am.c	FUNCTION_61	SWITCH_1	CALL_110
0x6b97	            0xeb3c	                           jmp 0x4006c15	      2401	am.c	FUNCTION_61	SWITCH_1
0x6b99	      0xe856ebffff	                call sym.am_rerere_clear	      2403	am.c	FUNCTION_61	SWITCH_1	CALL_111
0x6b9e	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2404	am.c	FUNCTION_61	SWITCH_1	CALL_112
0x6ba5	          0x4889c7	                            mov rdi, rax	      2404	am.c	FUNCTION_61	SWITCH_1	CALL_112
0x6ba8	      0xe82ea8ffff	                     call sym.am_destroy	      2404	am.c	FUNCTION_61	SWITCH_1	CALL_112
0x6bad	            0xeb26	                           jmp 0x4006c15	      2405	am.c	FUNCTION_61	SWITCH_1
0x6baf	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_113
0x6bb6	          0x4889c7	                            mov rdi, rax	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_113
0x6bb9	      0xe817efffff	                     call sym.show_patch	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_113
0x6bbe	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_113
0x6bc4	            0xeb0f	                           jmp 0x4006c15	      2408	am.c	FUNCTION_61	SWITCH_1
0x6bc6	      0xbf00000000	                              mov edi, 0	      2410	am.c	FUNCTION_61	SWITCH_1	CALL_114
0x6bcb	      0xb800000000	                              mov eax, 0	      2410	am.c	FUNCTION_61	SWITCH_1	CALL_114
0x6bd0	      0xe800000000	                          call 0x4006c15	      2410	am.c	FUNCTION_61	SWITCH_1	CALL_114
0x6bd5	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2413	am.c	FUNCTION_61	CALL_115
0x6bdc	          0x4889c7	                            mov rdi, rax	      2413	am.c	FUNCTION_61	CALL_115
0x6bdf	      0xe8e599ffff	               call sym.am_state_release	      2413	am.c	FUNCTION_61	CALL_115
0x6be4	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      2415	am.c	FUNCTION_61
0x6bea	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2416	am.c	FUNCTION_61
0x6bee	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2416	am.c	FUNCTION_61
0x6bf7	            0x7405	                            je 0x4006c3e	      2416	am.c	FUNCTION_61
0x6bf9	      0xe800000000	                          call 0x4006c3e	      2416	am.c	FUNCTION_61
0x6bfe	    0x4881c4f80900	                          add rsp, 0x9f8	      2416	am.c	FUNCTION_61
0x6c05	              0x5b	                                 pop rbx	      2416	am.c	FUNCTION_61
0x6c06	              0x5d	                                 pop rbp	      2416	am.c	FUNCTION_61
0x6c07	              0xc3	                                     ret	      2416	am.c	FUNCTION_61
validate_resume_state	functions,0:DO,0:WHILE,0:FOR,0:CALL,6:IF,2:SWITCH,0:ELSE,0	48
0x4862	              0x55	                                push rbp	      1681	am.c	FUNCTION_47
0x4863	          0x4889e5	                            mov rbp, rsp	      1681	am.c	FUNCTION_47
0x4866	              0x53	                                push rbx	      1681	am.c	FUNCTION_47
0x4867	        0x4883ec18	                           sub rsp, 0x18	      1681	am.c	FUNCTION_47
0x486b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1681	am.c	FUNCTION_47
0x486f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1682	am.c	FUNCTION_47	IF_1
0x4873	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1682	am.c	FUNCTION_47	IF_1
0x4877	          0x4885c0	                           test rax, rax	      1682	am.c	FUNCTION_47	IF_1
0x487a	            0x752e	                           jne 0x40048ea	      1682	am.c	FUNCTION_47	IF_1
0x487c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4880	      0xbe00000000	                              mov esi, 0	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4885	          0x4889c7	                            mov rdi, rax	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4888	      0xe8aabdffff	                        call sym.am_path	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x488d	          0x4889c3	                            mov rbx, rax	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4890	      0xbf00000000	                              mov edi, 0	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4895	      0xe85cb9ffff	                               call sym.	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x489a	          0x4889de	                            mov rsi, rbx	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x489d	          0x4889c7	                            mov rdi, rax	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x48a0	      0xb800000000	                              mov eax, 0	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x48a5	      0xe800000000	                          call 0x40048ea	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x48aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	am.c	FUNCTION_47	IF_2
0x48ae	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1686	am.c	FUNCTION_47	IF_2
0x48b2	          0x4885c0	                           test rax, rax	      1686	am.c	FUNCTION_47	IF_2
0x48b5	            0x741a	                            je 0x4004911	      1686	am.c	FUNCTION_47	IF_2
0x48b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	am.c	FUNCTION_47	IF_2
0x48bb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1686	am.c	FUNCTION_47	IF_2
0x48bf	          0x4885c0	                           test rax, rax	      1686	am.c	FUNCTION_47	IF_2
0x48c2	            0x740d	                            je 0x4004911	      1686	am.c	FUNCTION_47	IF_2
0x48c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	am.c	FUNCTION_47	IF_2
0x48c8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1686	am.c	FUNCTION_47	IF_2
0x48cc	          0x4885c0	                           test rax, rax	      1686	am.c	FUNCTION_47	IF_2
0x48cf	            0x752e	                           jne 0x400493f	      1686	am.c	FUNCTION_47	IF_2
0x48d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48d5	      0xbe00000000	                              mov esi, 0	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48da	          0x4889c7	                            mov rdi, rax	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48dd	      0xe855bdffff	                        call sym.am_path	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48e2	          0x4889c3	                            mov rbx, rax	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48e5	      0xbf00000000	                              mov edi, 0	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48ea	      0xe807b9ffff	                               call sym.	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48ef	          0x4889de	                            mov rsi, rbx	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48f2	          0x4889c7	                            mov rdi, rax	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48f5	      0xb800000000	                              mov eax, 0	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48fa	      0xe800000000	                          call 0x400493f	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x48ff	              0x90	                                     nop	      1689	am.c	FUNCTION_47
0x4900	        0x4883c418	                           add rsp, 0x18	      1689	am.c	FUNCTION_47
0x4904	              0x5b	                                 pop rbx	      1689	am.c	FUNCTION_47
0x4905	              0x5d	                                 pop rbp	      1689	am.c	FUNCTION_47
0x4906	              0xc3	                                     ret	      1689	am.c	FUNCTION_47
git_am_config	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,1:SWITCH,0:ELSE,0	25
0x5d26	              0x55	                                push rbp	      2189	am.c	FUNCTION_60
0x5d27	          0x4889e5	                            mov rbp, rsp	      2189	am.c	FUNCTION_60
0x5d2a	        0x4883ec30	                           sub rsp, 0x30	      2189	am.c	FUNCTION_60
0x5d2e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2189	am.c	FUNCTION_60
0x5d32	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2189	am.c	FUNCTION_60
0x5d36	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2189	am.c	FUNCTION_60
0x5d3a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2192	am.c	FUNCTION_60	CALL_1
0x5d3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2192	am.c	FUNCTION_60	CALL_1
0x5d42	      0xba00000000	                              mov edx, 0	      2192	am.c	FUNCTION_60	CALL_1
0x5d47	          0x4889ce	                            mov rsi, rcx	      2192	am.c	FUNCTION_60	CALL_1
0x5d4a	          0x4889c7	                            mov rdi, rax	      2192	am.c	FUNCTION_60	CALL_1
0x5d4d	      0xe800000000	                          call 0x4005d92	      2192	am.c	FUNCTION_60	CALL_1
0x5d52	          0x8945fc	                mov dword [rbp - 4], eax	      2192	am.c	FUNCTION_60	CALL_1
0x5d55	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2193	am.c	FUNCTION_60	IF_1
0x5d59	            0x7405	                            je 0x4005da0	      2193	am.c	FUNCTION_60	IF_1
0x5d5b	          0x8b45fc	                mov eax, dword [rbp - 4]	      2194	am.c	FUNCTION_60	IF_1
0x5d5e	            0xeb18	                           jmp 0x4005db8	      2194	am.c	FUNCTION_60	IF_1
0x5d60	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2196	am.c	FUNCTION_60	CALL_2
0x5d64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2196	am.c	FUNCTION_60	CALL_2
0x5d68	      0xba00000000	                              mov edx, 0	      2196	am.c	FUNCTION_60	CALL_2
0x5d6d	          0x4889ce	                            mov rsi, rcx	      2196	am.c	FUNCTION_60	CALL_2
0x5d70	          0x4889c7	                            mov rdi, rax	      2196	am.c	FUNCTION_60	CALL_2
0x5d73	      0xe800000000	                          call 0x4005db8	      2196	am.c	FUNCTION_60	CALL_2
0x5d78	              0xc9	                                   leave	      2197	am.c	FUNCTION_60
0x5d79	              0xc3	                                     ret	      2197	am.c	FUNCTION_60
do_commit	functions,0:DO,0:WHILE,0:FOR,0:CALL,30:IF,7:SWITCH,0:ELSE,1	203
0x44a6	              0x55	                                push rbp	      1619	am.c	FUNCTION_46
0x44a7	          0x4889e5	                            mov rbp, rsp	      1619	am.c	FUNCTION_46
0x44aa	              0x53	                                push rbx	      1619	am.c	FUNCTION_46
0x44ab	    0x4881ecc80000	                           sub rsp, 0xc8	      1619	am.c	FUNCTION_46
0x44b2	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1619	am.c	FUNCTION_46
0x44b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	am.c	FUNCTION_46
0x44c2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1619	am.c	FUNCTION_46
0x44c6	            0x31c0	                            xor eax, eax	      1619	am.c	FUNCTION_46
0x44c8	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1622	am.c	FUNCTION_46
0x44d3	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      1624	am.c	FUNCTION_46
0x44de	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1624	am.c	FUNCTION_46
0x44e9	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1624	am.c	FUNCTION_46
0x44f1	      0xba00000000	                              mov edx, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x44f6	      0xbe00000000	                              mov esi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x44fb	      0xbf00000000	                              mov edi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4500	      0xb800000000	                              mov eax, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4505	      0xe800000000	                          call 0x400454a	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x450a	            0x85c0	                           test eax, eax	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x450c	            0x740a	                            je 0x4004558	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x450e	      0xbf01000000	                              mov edi, 1	      1627	am.c	FUNCTION_46	CALL_2
0x4513	      0xe800000000	                          call 0x4004558	      1627	am.c	FUNCTION_46	CALL_2
0x4518	        0x488d4590	                   lea rax, [rbp - 0x70]	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x451c	      0xba00000000	                              mov edx, 0	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4521	      0xbe00000000	                              mov esi, 0	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4526	          0x4889c7	                            mov rdi, rax	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4529	      0xe800000000	                          call 0x400456e	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x452e	            0x85c0	                           test eax, eax	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4530	            0x7417	                            je 0x4004589	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4532	      0xbf00000000	                              mov edi, 0	      1630	am.c	FUNCTION_46	CALL_5
0x4537	      0xe8babcffff	                               call sym.	      1630	am.c	FUNCTION_46	CALL_5
0x453c	          0x4889c7	                            mov rdi, rax	      1630	am.c	FUNCTION_46	CALL_5
0x453f	      0xb800000000	                              mov eax, 0	      1630	am.c	FUNCTION_46	CALL_5
0x4544	      0xe800000000	                          call 0x4004589	      1630	am.c	FUNCTION_46	CALL_5
0x4549	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x454d	          0x4889c6	                            mov rsi, rax	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4550	      0xbf00000000	                              mov edi, 0	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4555	      0xe800000000	                          call 0x400459a	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x455a	            0x85c0	                           test eax, eax	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x455c	            0x752e	                           jne 0x40045cc	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x455e	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1633	am.c	FUNCTION_46	IF_3
0x4562	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1633	am.c	FUNCTION_46	IF_3
0x4569	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x456d	          0x4889c7	                            mov rdi, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4570	      0xe800000000	                          call 0x40045b5	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4575	          0x4889c2	                            mov rdx, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4578	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x457f	          0x4889c6	                            mov rsi, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4582	          0x4889d7	                            mov rdi, rdx	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4585	      0xe800000000	                          call 0x40045ca	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x458a	            0xeb36	                           jmp 0x4004602	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x458c	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1636	am.c	FUNCTION_46	ELSE_1
0x4597	      0xbf00000000	                              mov edi, 0	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x459c	      0xe855bcffff	                               call sym.	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45a1	          0x4889c2	                            mov rdx, rax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45a4	    0x488b0d000000	            mov rcx, qword [0x040045eb] 	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45ab	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45b2	          0x4889ce	                            mov rsi, rcx	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45b5	          0x4889c7	                            mov rdi, rax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45b8	      0xb800000000	                              mov eax, 0	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45bd	      0xe868c1ffff	                            call sym.say	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x45c2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1641	am.c	FUNCTION_46
0x45c9	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1641	am.c	FUNCTION_46
0x45cf	            0x85c0	                           test eax, eax	      1640	am.c	FUNCTION_46	CALL_11
0x45d1	            0x750d	                           jne 0x4004620	      1640	am.c	FUNCTION_46	CALL_11
0x45d3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1640	am.c	FUNCTION_46	CALL_11
0x45da	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1640	am.c	FUNCTION_46	CALL_11
0x45de	            0xeb05	                           jmp 0x4004625	      1640	am.c	FUNCTION_46	CALL_11
0x45e0	      0xb800000000	                              mov eax, 0	      1640	am.c	FUNCTION_46	CALL_11
0x45e5	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1640	am.c	FUNCTION_46	CALL_11
0x45ec	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1640	am.c	FUNCTION_46	CALL_11
0x45f0	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1640	am.c	FUNCTION_46	CALL_11
0x45f7	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      1640	am.c	FUNCTION_46	CALL_11
0x45fb	      0xb901000000	                              mov ecx, 1	      1640	am.c	FUNCTION_46	CALL_11
0x4600	          0x4889c2	                            mov rdx, rax	      1640	am.c	FUNCTION_46	CALL_11
0x4603	      0xe800000000	                          call 0x4004648	      1640	am.c	FUNCTION_46	CALL_11
0x4608	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1640	am.c	FUNCTION_46	CALL_11
0x460f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1644	am.c	FUNCTION_46	IF_4
0x4616	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1644	am.c	FUNCTION_46	IF_4
0x461c	            0x85c0	                           test eax, eax	      1644	am.c	FUNCTION_46	IF_4
0x461e	            0x7435	                            je 0x4004695	      1644	am.c	FUNCTION_46	IF_4
0x4620	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1646	am.c	FUNCTION_46	IF_4
0x4627	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1646	am.c	FUNCTION_46	IF_4
0x462d	            0x85c0	                           test eax, eax	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x462f	            0x750d	                           jne 0x400467e	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x4631	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x4638	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x463c	            0xeb05	                           jmp 0x4004683	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x463e	      0xb800000000	                              mov eax, 0	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x4643	      0xba01000000	                              mov edx, 1	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x4648	          0x4889c6	                            mov rsi, rax	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x464b	      0xbf00000000	                              mov edi, 0	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x4650	      0xe800000000	                          call 0x4004695	      1645	am.c	FUNCTION_46	IF_4	CALL_12
0x4655	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x465c	    0x488bb8980000	            mov rdi, qword [rax + 0x98] 	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4663	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x466a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4671	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4675	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x467c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4680	    0x4c8b8d60ffff	              mov r9, qword [rbp - 0xa0]	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4687	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x468b	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x468f	        0x4883ec08	                              sub rsp, 8	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4693	              0x57	                                push rdi	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4694	          0x4889c7	                            mov rdi, rax	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x4697	      0xe800000000	                          call 0x40046dc	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x469c	        0x4883c410	                           add rsp, 0x10	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x46a0	            0x85c0	                           test eax, eax	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x46a2	            0x7417	                            je 0x40046fb	      1648	am.c	FUNCTION_46	IF_5	CALL_13
0x46a4	      0xbf00000000	                              mov edi, 0	      1650	am.c	FUNCTION_46	CALL_15
0x46a9	      0xe848bbffff	                               call sym.	      1650	am.c	FUNCTION_46	CALL_15
0x46ae	          0x4889c7	                            mov rdi, rax	      1650	am.c	FUNCTION_46	CALL_15
0x46b1	      0xb800000000	                              mov eax, 0	      1650	am.c	FUNCTION_46	CALL_15
0x46b6	      0xe800000000	                          call 0x40046fb	      1650	am.c	FUNCTION_46	CALL_15
0x46bb	      0xbf00000000	                              mov edi, 0	      1652	am.c	FUNCTION_46	CALL_16
0x46c0	      0xe800000000	                          call 0x4004705	      1652	am.c	FUNCTION_46	CALL_16
0x46c5	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1652	am.c	FUNCTION_46	CALL_16
0x46cc	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1653	am.c	FUNCTION_46	IF_6
0x46d4	            0x750b	                           jne 0x4004721	      1653	am.c	FUNCTION_46	IF_6
0x46d6	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1654	am.c	FUNCTION_46	IF_6
0x46e1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1656	am.c	FUNCTION_46	CALL_18
0x46e8	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1656	am.c	FUNCTION_46	CALL_18
0x46ec	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1656	am.c	FUNCTION_46	CALL_18
0x46f3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1656	am.c	FUNCTION_46	CALL_18
0x46f7	          0x4889c7	                            mov rdi, rax	      1656	am.c	FUNCTION_46	CALL_18
0x46fa	      0xe86abdffff	                        call sym.linelen	      1656	am.c	FUNCTION_46	CALL_18
0x46ff	            0x89c1	                            mov ecx, eax	      1656	am.c	FUNCTION_46	CALL_18
0x4701	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1656	am.c	FUNCTION_46	CALL_18
0x4708	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1656	am.c	FUNCTION_46	CALL_18
0x470f	          0x4989d8	                             mov r8, rbx	      1656	am.c	FUNCTION_46	CALL_18
0x4712	      0xbe00000000	                              mov esi, 0	      1656	am.c	FUNCTION_46	CALL_18
0x4717	          0x4889c7	                            mov rdi, rax	      1656	am.c	FUNCTION_46	CALL_18
0x471a	      0xb800000000	                              mov eax, 0	      1656	am.c	FUNCTION_46	CALL_18
0x471f	      0xe800000000	                          call 0x4004764	      1656	am.c	FUNCTION_46	CALL_18
0x4724	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1659	am.c	FUNCTION_46	CALL_19
0x4728	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      1659	am.c	FUNCTION_46	CALL_19
0x472f	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1659	am.c	FUNCTION_46	CALL_19
0x4733	    0x41b901000000	                              mov r9d, 1	      1659	am.c	FUNCTION_46	CALL_19
0x4739	    0x41b800000000	                              mov r8d, 0	      1659	am.c	FUNCTION_46	CALL_19
0x473f	      0xbe00000000	                              mov esi, 0	      1659	am.c	FUNCTION_46	CALL_19
0x4744	          0x4889c7	                            mov rdi, rax	      1659	am.c	FUNCTION_46	CALL_19
0x4747	      0xe800000000	                          call 0x400478c	      1659	am.c	FUNCTION_46	CALL_19
0x474c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1662	am.c	FUNCTION_46	IF_7
0x4753	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1662	am.c	FUNCTION_46	IF_7
0x4759	            0x85c0	                           test eax, eax	      1662	am.c	FUNCTION_46	IF_7
0x475b	     0xf84be000000	                            je 0x400485f	      1662	am.c	FUNCTION_46	IF_7
0x4761	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x4768	      0xbe00000000	                              mov esi, 0	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x476d	          0x4889c7	                            mov rdi, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x4770	      0xe8c2beffff	                        call sym.am_path	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x4775	      0xbe00000000	                              mov esi, 0	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x477a	          0x4889c7	                            mov rdi, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x477d	      0xe800000000	                          call 0x40047c2	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x4782	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1663	am.c	FUNCTION_46	IF_7	CALL_21
0x4789	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x4790	        0x4883c038	                           add rax, 0x38	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x4794	          0x4889c7	                            mov rdi, rax	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x4797	      0xe8d5baffff	                    call sym.is_null_oid	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x479c	            0x85c0	                           test eax, eax	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x479e	            0x7419	                            je 0x40047f9	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x47a0	      0xb900000000	                              mov ecx, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x47a5	      0xba81060000	                          mov edx, 0x681	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x47aa	      0xbe00000000	                              mov esi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x47af	      0xbf00000000	                              mov edi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x47b4	      0xe800000000	                          call 0x40047f9	      1665	am.c	FUNCTION_46	IF_7	CALL_23
0x47b9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47c0	        0x4883c038	                           add rax, 0x38	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47c4	          0x4889c7	                            mov rdi, rax	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47c7	      0xe800000000	                          call 0x400480c	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47cc	          0x4889c2	                            mov rdx, rax	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47d6	      0xbe00000000	                              mov esi, 0	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47db	          0x4889c7	                            mov rdi, rax	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47de	      0xb800000000	                              mov eax, 0	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47e3	      0xe800000000	                          call 0x4004828	      1666	am.c	FUNCTION_46	IF_7	CALL_25
0x47e8	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x47ec	          0x4889c7	                            mov rdi, rax	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x47ef	      0xe800000000	                          call 0x4004834	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x47f4	          0x4889c2	                            mov rdx, rax	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x47f7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x47fe	      0xbe00000000	                              mov esi, 0	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x4803	          0x4889c7	                            mov rdi, rax	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x4806	      0xb800000000	                              mov eax, 0	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x480b	      0xe800000000	                          call 0x4004850	      1667	am.c	FUNCTION_46	IF_7	CALL_27
0x4810	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1668	am.c	FUNCTION_46	IF_7	CALL_28
0x4817	          0x4889c7	                            mov rdi, rax	      1668	am.c	FUNCTION_46	IF_7	CALL_28
0x481a	      0xe800000000	                          call 0x400485f	      1668	am.c	FUNCTION_46	IF_7	CALL_28
0x481f	      0xba00000000	                              mov edx, 0	      1671	am.c	FUNCTION_46	CALL_29
0x4824	      0xbe00000000	                              mov esi, 0	      1671	am.c	FUNCTION_46	CALL_29
0x4829	      0xbf00000000	                              mov edi, 0	      1671	am.c	FUNCTION_46	CALL_29
0x482e	      0xb800000000	                              mov eax, 0	      1671	am.c	FUNCTION_46	CALL_29
0x4833	      0xe800000000	                          call 0x4004878	      1671	am.c	FUNCTION_46	CALL_29
0x4838	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1673	am.c	FUNCTION_46	CALL_30
0x483f	          0x4889c7	                            mov rdi, rax	      1673	am.c	FUNCTION_46	CALL_30
0x4842	      0xe800000000	                          call 0x4004887	      1673	am.c	FUNCTION_46	CALL_30
0x4847	              0x90	                                     nop	      1674	am.c	FUNCTION_46
0x4848	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1674	am.c	FUNCTION_46
0x484c	    0x644833042528	                xor rax, qword fs:[0x28]	      1674	am.c	FUNCTION_46
0x4855	            0x7405	                            je 0x400489c	      1674	am.c	FUNCTION_46
0x4857	      0xe800000000	                          call 0x400489c	      1674	am.c	FUNCTION_46
0x485c	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1674	am.c	FUNCTION_46
0x4860	              0xc9	                                   leave	      1674	am.c	FUNCTION_46
0x4861	              0xc3	                                     ret	      1674	am.c	FUNCTION_46
split_mail_conv	functions,0:DO,0:WHILE,0:FOR,1:CALL,14:IF,7:SWITCH,0:ELSE,1	121
0x1e3e	              0x55	                                push rbp	       752	am.c	FUNCTION_26
0x1e3f	          0x4889e5	                            mov rbp, rsp	       752	am.c	FUNCTION_26
0x1e42	              0x53	                                push rbx	       752	am.c	FUNCTION_26
0x1e43	        0x4883ec48	                           sub rsp, 0x48	       752	am.c	FUNCTION_26
0x1e47	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       752	am.c	FUNCTION_26
0x1e4b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       752	am.c	FUNCTION_26
0x1e4f	        0x488955b8	             mov qword [rbp - 0x48], rdx	       752	am.c	FUNCTION_26
0x1e53	          0x894db4	             mov dword [rbp - 0x4c], ecx	       752	am.c	FUNCTION_26
0x1e56	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       756	am.c	FUNCTION_26	IF_1
0x1e5a	          0x488b00	                    mov rax, qword [rax]	       756	am.c	FUNCTION_26	IF_1
0x1e5d	          0x4885c0	                           test rax, rax	       756	am.c	FUNCTION_26	IF_1
0x1e60	            0x7508	                           jne 0x4001eaa	       756	am.c	FUNCTION_26	IF_1
0x1e62	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       757	am.c	FUNCTION_26	IF_1
0x1e6a	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       759	am.c	FUNCTION_26	FOR_1
0x1e71	      0xe96c010000	                           jmp 0x4002022	       759	am.c	FUNCTION_26	FOR_1
0x1e76	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x1e7a	          0x488b00	                    mov rax, qword [rax]	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x1e7d	      0xbe00000000	                              mov esi, 0	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x1e82	          0x4889c7	                            mov rdi, rax	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x1e85	      0xe800000000	                          call 0x4001eca	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x1e8a	            0x85c0	                           test eax, eax	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x1e8c	            0x750d	                           jne 0x4001edb	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x1e8e	    0x488b05000000	            mov rax, qword [0x04001ed5] 	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x1e95	        0x488945d8	             mov qword [rbp - 0x28], rax	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x1e99	            0xeb18	                           jmp 0x4001ef3	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x1e9b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       767	am.c	FUNCTION_26	FOR_1	CALL_2
0x1e9f	          0x488b00	                    mov rax, qword [rax]	       767	am.c	FUNCTION_26	FOR_1	CALL_2
0x1ea2	      0xbe00000000	                              mov esi, 0	       767	am.c	FUNCTION_26	FOR_1	CALL_2
0x1ea7	          0x4889c7	                            mov rdi, rax	       767	am.c	FUNCTION_26	FOR_1	CALL_2
0x1eaa	      0xe800000000	                          call 0x4001eef	       767	am.c	FUNCTION_26	FOR_1	CALL_2
0x1eaf	        0x488945d8	             mov qword [rbp - 0x28], rax	       767	am.c	FUNCTION_26	FOR_1	CALL_2
0x1eb3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x1eb8	            0x752b	                           jne 0x4001f25	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x1eba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ebe	          0x488b18	                    mov rbx, qword [rax]	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ec1	      0xbf00000000	                              mov edi, 0	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ec6	      0xe82be3ffff	                               call sym.	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ecb	          0x4889de	                            mov rsi, rbx	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ece	          0x4889c7	                            mov rdi, rax	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ed1	      0xb800000000	                              mov eax, 0	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ed6	      0xe800000000	                          call 0x4001f1b	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1edb	      0xe842e1ffff	                    call sym.const_error	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ee0	      0xe927010000	                           jmp 0x400204c	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_4
0x1ee5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1ee8	          0x8d4801	                      lea ecx, [rax + 1]	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1eeb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1eef	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1ef2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1ef6	          0x488b00	                    mov rax, qword [rax]	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1ef9	          0x4889c6	                            mov rsi, rax	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1efc	      0xbf00000000	                              mov edi, 0	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1f01	      0xb800000000	                              mov eax, 0	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1f06	      0xe800000000	                          call 0x4001f4b	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1f0b	        0x488945e0	             mov qword [rbp - 0x20], rax	       773	am.c	FUNCTION_26	FOR_1	CALL_5
0x1f0f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       775	am.c	FUNCTION_26	FOR_1	CALL_6
0x1f13	      0xbe00000000	                              mov esi, 0	       775	am.c	FUNCTION_26	FOR_1	CALL_6
0x1f18	          0x4889c7	                            mov rdi, rax	       775	am.c	FUNCTION_26	FOR_1	CALL_6
0x1f1b	      0xe800000000	                          call 0x4001f60	       775	am.c	FUNCTION_26	FOR_1	CALL_6
0x1f20	        0x488945e8	             mov qword [rbp - 0x18], rax	       775	am.c	FUNCTION_26	FOR_1	CALL_6
0x1f24	      0x48837de800	               cmp qword [rbp - 0x18], 0	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x1f29	            0x7544	                           jne 0x4001faf	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x1f2b	    0x488b05000000	            mov rax, qword [0x04001f72] 	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x1f32	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x1f36	            0x740c	                            je 0x4001f84	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x1f38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_7
0x1f3c	          0x4889c7	                            mov rdi, rax	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_7
0x1f3f	      0xe800000000	                          call 0x4001f84	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_7
0x1f44	      0xbf00000000	                              mov edi, 0	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f49	      0xe8a8e2ffff	                               call sym.	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f4e	          0x4889c2	                            mov rdx, rax	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f55	          0x4889c6	                            mov rsi, rax	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f58	          0x4889d7	                            mov rdi, rdx	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f5b	      0xb800000000	                              mov eax, 0	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f60	      0xe800000000	                          call 0x4001fa5	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f65	      0xe8b8e0ffff	                    call sym.const_error	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f6a	      0xe99d000000	                           jmp 0x400204c	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_9
0x1f6f	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       783	am.c	FUNCTION_26	FOR_1	CALL_10
0x1f72	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       783	am.c	FUNCTION_26	FOR_1	CALL_10
0x1f76	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       783	am.c	FUNCTION_26	FOR_1	CALL_10
0x1f7a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       783	am.c	FUNCTION_26	FOR_1	CALL_10
0x1f7e	          0x4889cf	                            mov rdi, rcx	       783	am.c	FUNCTION_26	FOR_1	CALL_10
0x1f81	            0xffd0	                                call rax	       783	am.c	FUNCTION_26	FOR_1	CALL_10
0x1f83	          0x8945d4	             mov dword [rbp - 0x2c], eax	       783	am.c	FUNCTION_26	FOR_1	CALL_10
0x1f86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       785	am.c	FUNCTION_26	FOR_1	CALL_11
0x1f8a	          0x4889c7	                            mov rdi, rax	       785	am.c	FUNCTION_26	FOR_1	CALL_11
0x1f8d	      0xe800000000	                          call 0x4001fd2	       785	am.c	FUNCTION_26	FOR_1	CALL_11
0x1f92	    0x488b05000000	            mov rax, qword [0x04001fd9] 	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x1f99	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x1f9d	            0x740c	                            je 0x4001feb	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x1f9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       787	am.c	FUNCTION_26	FOR_1	CALL_12
0x1fa3	          0x4889c7	                            mov rdi, rax	       787	am.c	FUNCTION_26	FOR_1	CALL_12
0x1fa6	      0xe800000000	                          call 0x4001feb	       787	am.c	FUNCTION_26	FOR_1	CALL_12
0x1fab	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x1faf	            0x7428	                            je 0x4002019	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x1fb1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fb5	          0x488b18	                    mov rbx, qword [rax]	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fb8	      0xbf00000000	                              mov edi, 0	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fbd	      0xe834e2ffff	                               call sym.	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fc2	          0x4889de	                            mov rsi, rbx	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fc5	          0x4889c7	                            mov rdi, rax	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fc8	      0xb800000000	                              mov eax, 0	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fcd	      0xe800000000	                          call 0x4002012	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fd2	      0xe84be0ffff	                    call sym.const_error	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fd7	            0xeb33	                           jmp 0x400204c	       790	am.c	FUNCTION_26	FOR_1	CALL_14
0x1fd9	      0x488345b808	               add qword [rbp - 0x48], 8	       759	am.c	FUNCTION_26	FOR_1
0x1fde	        0x8345d001	               add dword [rbp - 0x30], 1	       759	am.c	FUNCTION_26	FOR_1
0x1fe2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       759	am.c	FUNCTION_26	FOR_1
0x1fe6	          0x488b00	                    mov rax, qword [rax]	       759	am.c	FUNCTION_26	FOR_1
0x1fe9	          0x4885c0	                           test rax, rax	       759	am.c	FUNCTION_26	FOR_1
0x1fec	     0xf8584feffff	                           jne 0x4001eb6	       759	am.c	FUNCTION_26	FOR_1
0x1ff2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       793	am.c	FUNCTION_26
0x1ff6	    0xc74008010000	                  mov dword [rax + 8], 1	       793	am.c	FUNCTION_26
0x1ffd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       794	am.c	FUNCTION_26
0x2001	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       794	am.c	FUNCTION_26
0x2004	          0x89500c	              mov dword [rax + 0xc], edx	       794	am.c	FUNCTION_26
0x2007	      0xb800000000	                              mov eax, 0	       795	am.c	FUNCTION_26
0x200c	        0x4883c448	                           add rsp, 0x48	       796	am.c	FUNCTION_26
0x2010	              0x5b	                                 pop rbx	       796	am.c	FUNCTION_26
0x2011	              0x5d	                                 pop rbp	       796	am.c	FUNCTION_26
0x2012	              0xc3	                                     ret	       796	am.c	FUNCTION_26
_	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,1:SWITCH,0:ELSE,0	15
0x1f6	              0x55	                                push rbp	        51	gettext.h	FUNCTION_113
0x1f7	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_113
0x1fa	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_113
0x1fe	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_113
0x202	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_113	IF_1
0x206	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_113	IF_1
0x209	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_113	IF_1
0x20b	            0x7507	                           jne 0x4000254	        52	gettext.h	FUNCTION_113	IF_1
0x20d	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_113	IF_1
0x212	            0xeb0c	                           jmp 0x4000260	        53	gettext.h	FUNCTION_113	IF_1
0x214	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_113	CALL_2
0x218	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_113	CALL_2
0x21b	      0xe800000000	                          call 0x4000260	        54	gettext.h	FUNCTION_113	CALL_2
0x220	              0xc9	                                   leave	        55	gettext.h	FUNCTION_113
0x221	              0xc3	                                     ret	        55	gettext.h	FUNCTION_113
read_author_script	functions,0:DO,0:WHILE,0:FOR,0:CALL,15:IF,4:SWITCH,0:ELSE,0	148
0xac2	              0x55	                                push rbp	       305	am.c	FUNCTION_14
0xac3	          0x4889e5	                            mov rbp, rsp	       305	am.c	FUNCTION_14
0xac6	        0x4883ec70	                           sub rsp, 0x70	       305	am.c	FUNCTION_14
0xaca	        0x48897d98	             mov qword [rbp - 0x68], rdi	       305	am.c	FUNCTION_14
0xace	    0x64488b042528	                mov rax, qword fs:[0x28]	       305	am.c	FUNCTION_14
0xad7	        0x488945f8	                mov qword [rbp - 8], rax	       305	am.c	FUNCTION_14
0xadb	            0x31c0	                            xor eax, eax	       305	am.c	FUNCTION_14
0xadd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       306	am.c	FUNCTION_14	CALL_1
0xae1	      0xbe00000000	                              mov esi, 0	       306	am.c	FUNCTION_14	CALL_1
0xae6	          0x4889c7	                            mov rdi, rax	       306	am.c	FUNCTION_14	CALL_1
0xae9	      0xe849fbffff	                        call sym.am_path	       306	am.c	FUNCTION_14	CALL_1
0xaee	        0x488945a8	             mov qword [rbp - 0x58], rax	       306	am.c	FUNCTION_14	CALL_1
0xaf2	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       307	am.c	FUNCTION_14
0xafa	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       307	am.c	FUNCTION_14
0xb02	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       307	am.c	FUNCTION_14
0xb0a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       308	am.c	FUNCTION_14
0xb12	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       308	am.c	FUNCTION_14
0xb19	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       308	am.c	FUNCTION_14
0xb20	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       308	am.c	FUNCTION_14
0xb24	          0x83c801	                               or eax, 1	       308	am.c	FUNCTION_14
0xb27	          0x8845e0	               mov byte [rbp - 0x20], al	       308	am.c	FUNCTION_14
0xb2a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       308	am.c	FUNCTION_14
0xb32	    0xc745a0ffffff	     mov dword [rbp - 0x60], 0xffffffff 	       309	am.c	FUNCTION_14
0xb39	        0x488b4598	             mov rax, qword [rbp - 0x68]	       312	am.c	FUNCTION_14	CALL_2
0xb3d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       312	am.c	FUNCTION_14	CALL_2
0xb41	          0x4885c0	                           test rax, rax	       312	am.c	FUNCTION_14	CALL_2
0xb44	            0x7419	                            je 0x4000b9f	       312	am.c	FUNCTION_14	CALL_2
0xb46	      0xb900000000	                              mov ecx, 0	       312	am.c	FUNCTION_14	CALL_2
0xb4b	      0xba38010000	                          mov edx, 0x138	       312	am.c	FUNCTION_14	CALL_2
0xb50	      0xbe00000000	                              mov esi, 0	       312	am.c	FUNCTION_14	CALL_2
0xb55	      0xbf00000000	                              mov edi, 0	       312	am.c	FUNCTION_14	CALL_2
0xb5a	      0xe800000000	                          call 0x4000b9f	       312	am.c	FUNCTION_14	CALL_2
0xb5f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       313	am.c	FUNCTION_14	CALL_3
0xb63	        0x488b4018	            mov rax, qword [rax + 0x18] 	       313	am.c	FUNCTION_14	CALL_3
0xb67	          0x4885c0	                           test rax, rax	       313	am.c	FUNCTION_14	CALL_3
0xb6a	            0x7419	                            je 0x4000bc5	       313	am.c	FUNCTION_14	CALL_3
0xb6c	      0xb900000000	                              mov ecx, 0	       313	am.c	FUNCTION_14	CALL_3
0xb71	      0xba39010000	                          mov edx, 0x139	       313	am.c	FUNCTION_14	CALL_3
0xb76	      0xbe00000000	                              mov esi, 0	       313	am.c	FUNCTION_14	CALL_3
0xb7b	      0xbf00000000	                              mov edi, 0	       313	am.c	FUNCTION_14	CALL_3
0xb80	      0xe800000000	                          call 0x4000bc5	       313	am.c	FUNCTION_14	CALL_3
0xb85	        0x488b4598	             mov rax, qword [rbp - 0x68]	       314	am.c	FUNCTION_14	CALL_4
0xb89	        0x488b4020	            mov rax, qword [rax + 0x20] 	       314	am.c	FUNCTION_14	CALL_4
0xb8d	          0x4885c0	                           test rax, rax	       314	am.c	FUNCTION_14	CALL_4
0xb90	            0x7419	                            je 0x4000beb	       314	am.c	FUNCTION_14	CALL_4
0xb92	      0xb900000000	                              mov ecx, 0	       314	am.c	FUNCTION_14	CALL_4
0xb97	      0xba3a010000	                          mov edx, 0x13a	       314	am.c	FUNCTION_14	CALL_4
0xb9c	      0xbe00000000	                              mov esi, 0	       314	am.c	FUNCTION_14	CALL_4
0xba1	      0xbf00000000	                              mov edi, 0	       314	am.c	FUNCTION_14	CALL_4
0xba6	      0xe800000000	                          call 0x4000beb	       314	am.c	FUNCTION_14	CALL_4
0xbab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       316	am.c	FUNCTION_14	CALL_5
0xbaf	      0xbe00000000	                              mov esi, 0	       316	am.c	FUNCTION_14	CALL_5
0xbb4	          0x4889c7	                            mov rdi, rax	       316	am.c	FUNCTION_14	CALL_5
0xbb7	      0xb800000000	                              mov eax, 0	       316	am.c	FUNCTION_14	CALL_5
0xbbc	      0xe800000000	                          call 0x4000c01	       316	am.c	FUNCTION_14	CALL_5
0xbc1	          0x8945a4	             mov dword [rbp - 0x5c], eax	       316	am.c	FUNCTION_14	CALL_5
0xbc4	        0x837da400	               cmp dword [rbp - 0x5c], 0	       317	am.c	FUNCTION_14	IF_1
0xbc8	            0x7937	                           jns 0x4000c41	       317	am.c	FUNCTION_14	IF_1
0xbca	      0xe800000000	                          call 0x4000c0f	       318	am.c	FUNCTION_14	IF_1	IF_2
0xbcf	            0x8b00	                    mov eax, dword [rax]	       318	am.c	FUNCTION_14	IF_1	IF_2
0xbd1	          0x83f802	                              cmp eax, 2	       318	am.c	FUNCTION_14	IF_1	IF_2
0xbd4	            0x750a	                           jne 0x4000c20	       318	am.c	FUNCTION_14	IF_1	IF_2
0xbd6	      0xb800000000	                              mov eax, 0	       319	am.c	FUNCTION_14	IF_1	IF_2
0xbdb	      0xe921010000	                           jmp 0x4000d41	       319	am.c	FUNCTION_14	IF_1	IF_2
0xbe0	      0xbf00000000	                              mov edi, 0	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xbe5	      0xe80cf6ffff	                               call sym.	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xbea	          0x4889c2	                            mov rdx, rax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xbed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xbf1	          0x4889c6	                            mov rsi, rax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xbf4	          0x4889d7	                            mov rdi, rdx	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xbf7	      0xb800000000	                              mov eax, 0	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xbfc	      0xe800000000	                          call 0x4000c41	       320	am.c	FUNCTION_14	IF_1	CALL_7
0xc01	          0x8b4da4	             mov ecx, dword [rbp - 0x5c]	       322	am.c	FUNCTION_14	CALL_8
0xc04	        0x488d45b0	                   lea rax, [rbp - 0x50]	       322	am.c	FUNCTION_14	CALL_8
0xc08	      0xba00000000	                              mov edx, 0	       322	am.c	FUNCTION_14	CALL_8
0xc0d	            0x89ce	                            mov esi, ecx	       322	am.c	FUNCTION_14	CALL_8
0xc0f	          0x4889c7	                            mov rdi, rax	       322	am.c	FUNCTION_14	CALL_8
0xc12	      0xe800000000	                          call 0x4000c57	       322	am.c	FUNCTION_14	CALL_8
0xc17	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       323	am.c	FUNCTION_14	CALL_9
0xc1a	            0x89c7	                            mov edi, eax	       323	am.c	FUNCTION_14	CALL_9
0xc1c	      0xe800000000	                          call 0x4000c61	       323	am.c	FUNCTION_14	CALL_9
0xc21	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       324	am.c	FUNCTION_14	IF_3	CALL_10
0xc25	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       324	am.c	FUNCTION_14	IF_3	CALL_10
0xc29	          0x4889d6	                            mov rsi, rdx	       324	am.c	FUNCTION_14	IF_3	CALL_10
0xc2c	          0x4889c7	                            mov rdi, rax	       324	am.c	FUNCTION_14	IF_3	CALL_10
0xc2f	      0xe8acfdffff	        call sym.parse_key_value_squoted	       324	am.c	FUNCTION_14	IF_3	CALL_10
0xc34	            0x85c0	                           test eax, eax	       324	am.c	FUNCTION_14	IF_3	CALL_10
0xc36	     0xf859d000000	                           jne 0x4000d19	       324	am.c	FUNCTION_14	IF_3	CALL_10
0xc3c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       327	am.c	FUNCTION_14	IF_4
0xc3f	          0x83f803	                              cmp eax, 3	       327	am.c	FUNCTION_14	IF_4
0xc42	     0xf8592000000	                           jne 0x4000d1a	       327	am.c	FUNCTION_14	IF_4
0xc48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       328	am.c	FUNCTION_14	IF_4	CALL_11
0xc4c	          0x488b00	                    mov rax, qword [rax]	       328	am.c	FUNCTION_14	IF_4	CALL_11
0xc4f	      0xbe00000000	                              mov esi, 0	       328	am.c	FUNCTION_14	IF_4	CALL_11
0xc54	          0x4889c7	                            mov rdi, rax	       328	am.c	FUNCTION_14	IF_4	CALL_11
0xc57	      0xe800000000	                          call 0x4000c9c	       328	am.c	FUNCTION_14	IF_4	CALL_11
0xc5c	            0x85c0	                           test eax, eax	       327	am.c	FUNCTION_14	IF_4
0xc5e	            0x757a	                           jne 0x4000d1a	       327	am.c	FUNCTION_14	IF_4
0xc60	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc64	        0x4883c010	                           add rax, 0x10	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc68	          0x488b00	                    mov rax, qword [rax]	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc6b	      0xbe00000000	                              mov esi, 0	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc70	          0x4889c7	                            mov rdi, rax	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc73	      0xe800000000	                          call 0x4000cb8	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc78	            0x85c0	                           test eax, eax	       328	am.c	FUNCTION_14	IF_4	CALL_11
0xc7a	            0x755e	                           jne 0x4000d1a	       328	am.c	FUNCTION_14	IF_4	CALL_11
0xc7c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       330	am.c	FUNCTION_14	IF_4	CALL_13
0xc80	        0x4883c020	                           add rax, 0x20	       330	am.c	FUNCTION_14	IF_4	CALL_13
0xc84	          0x488b00	                    mov rax, qword [rax]	       330	am.c	FUNCTION_14	IF_4	CALL_13
0xc87	      0xbe00000000	                              mov esi, 0	       330	am.c	FUNCTION_14	IF_4	CALL_13
0xc8c	          0x4889c7	                            mov rdi, rax	       330	am.c	FUNCTION_14	IF_4	CALL_13
0xc8f	      0xe800000000	                          call 0x4000cd4	       330	am.c	FUNCTION_14	IF_4	CALL_13
0xc94	            0x85c0	                           test eax, eax	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc96	            0x7542	                           jne 0x4000d1a	       329	am.c	FUNCTION_14	IF_4	CALL_12
0xc98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       332	am.c	FUNCTION_14
0xc9c	        0x488b5008	                mov rdx, qword [rax + 8]	       332	am.c	FUNCTION_14
0xca0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       332	am.c	FUNCTION_14
0xca4	        0x48895010	             mov qword [rax + 0x10], rdx	       332	am.c	FUNCTION_14
0xca8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       333	am.c	FUNCTION_14
0xcac	        0x4883c010	                           add rax, 0x10	       333	am.c	FUNCTION_14
0xcb0	        0x488b5008	                mov rdx, qword [rax + 8]	       333	am.c	FUNCTION_14
0xcb4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       333	am.c	FUNCTION_14
0xcb8	        0x48895018	             mov qword [rax + 0x18], rdx	       333	am.c	FUNCTION_14
0xcbc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       334	am.c	FUNCTION_14
0xcc0	        0x4883c020	                           add rax, 0x20	       334	am.c	FUNCTION_14
0xcc4	        0x488b5008	                mov rdx, qword [rax + 8]	       334	am.c	FUNCTION_14
0xcc8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       334	am.c	FUNCTION_14
0xccc	        0x48895020	             mov qword [rax + 0x20], rdx	       334	am.c	FUNCTION_14
0xcd0	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       335	am.c	FUNCTION_14
0xcd7	            0xeb01	                           jmp 0x4000d1a	       335	am.c	FUNCTION_14
0xcd9	              0x90	                                     nop	       325	am.c	FUNCTION_14	IF_3
0xcda	        0x837da000	               cmp dword [rbp - 0x60], 0	       337	am.c	FUNCTION_14	CALL_14
0xcde	           0xf95c0	                                setne al	       337	am.c	FUNCTION_14	CALL_14
0xce1	           0xfb6d0	                           movzx edx, al	       337	am.c	FUNCTION_14	CALL_14
0xce4	        0x488d45d0	                   lea rax, [rbp - 0x30]	       337	am.c	FUNCTION_14	CALL_14
0xce8	            0x89d6	                            mov esi, edx	       337	am.c	FUNCTION_14	CALL_14
0xcea	          0x4889c7	                            mov rdi, rax	       337	am.c	FUNCTION_14	CALL_14
0xced	      0xe800000000	                          call 0x4000d32	       337	am.c	FUNCTION_14	CALL_14
0xcf2	        0x488d45b0	                   lea rax, [rbp - 0x50]	       338	am.c	FUNCTION_14	CALL_15
0xcf6	          0x4889c7	                            mov rdi, rax	       338	am.c	FUNCTION_14	CALL_15
0xcf9	      0xe800000000	                          call 0x4000d3e	       338	am.c	FUNCTION_14	CALL_15
0xcfe	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       339	am.c	FUNCTION_14
0xd01	        0x488b4df8	                mov rcx, qword [rbp - 8]	       340	am.c	FUNCTION_14
0xd05	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       340	am.c	FUNCTION_14
0xd0e	            0x7405	                            je 0x4000d55	       340	am.c	FUNCTION_14
0xd10	      0xe800000000	                          call 0x4000d55	       340	am.c	FUNCTION_14
0xd15	              0xc9	                                   leave	       340	am.c	FUNCTION_14
0xd16	              0xc3	                                     ret	       340	am.c	FUNCTION_14
write_commit_msg	functions,0:DO,0:WHILE,0:FOR,0:CALL,2:IF,0:SWITCH,0:ELSE,0	20
0xef4	              0x55	                                push rbp	       393	am.c	FUNCTION_17
0xef5	          0x4889e5	                            mov rbp, rsp	       393	am.c	FUNCTION_17
0xef8	        0x4883ec20	                           sub rsp, 0x20	       393	am.c	FUNCTION_17
0xefc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       393	am.c	FUNCTION_17
0xf00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	am.c	FUNCTION_17	CALL_1
0xf04	      0xbe00000000	                              mov esi, 0	       394	am.c	FUNCTION_17	CALL_1
0xf09	          0x4889c7	                            mov rdi, rax	       394	am.c	FUNCTION_17	CALL_1
0xf0c	      0xe826f7ffff	                        call sym.am_path	       394	am.c	FUNCTION_17	CALL_1
0xf11	        0x488945f8	                mov qword [rbp - 8], rax	       394	am.c	FUNCTION_17	CALL_1
0xf15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	am.c	FUNCTION_17	CALL_2
0xf19	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       395	am.c	FUNCTION_17	CALL_2
0xf1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	am.c	FUNCTION_17	CALL_2
0xf21	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       395	am.c	FUNCTION_17	CALL_2
0xf25	        0x488b45f8	                mov rax, qword [rbp - 8]	       395	am.c	FUNCTION_17	CALL_2
0xf29	          0x4889ce	                            mov rsi, rcx	       395	am.c	FUNCTION_17	CALL_2
0xf2c	          0x4889c7	                            mov rdi, rax	       395	am.c	FUNCTION_17	CALL_2
0xf2f	      0xe800000000	                          call 0x4000f74	       395	am.c	FUNCTION_17	CALL_2
0xf34	              0x90	                                     nop	       396	am.c	FUNCTION_17
0xf35	              0xc9	                                   leave	       396	am.c	FUNCTION_17
0xf36	              0xc3	                                     ret	       396	am.c	FUNCTION_17
split_mail_mbox	functions,0:DO,0:WHILE,0:FOR,0:CALL,11:IF,3:SWITCH,0:ELSE,0	111
0x1c45	              0x55	                                push rbp	       708	am.c	FUNCTION_25
0x1c46	          0x4889e5	                            mov rbp, rsp	       708	am.c	FUNCTION_25
0x1c49	    0x4881ecc00000	                           sub rsp, 0xc0	       708	am.c	FUNCTION_25
0x1c50	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       708	am.c	FUNCTION_25
0x1c57	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       708	am.c	FUNCTION_25
0x1c5e	    0x89954cffffff	             mov dword [rbp - 0xb4], edx	       708	am.c	FUNCTION_25
0x1c64	    0x898d48ffffff	             mov dword [rbp - 0xb8], ecx	       708	am.c	FUNCTION_25
0x1c6a	    0x64488b042528	                mov rax, qword fs:[0x28]	       708	am.c	FUNCTION_25
0x1c73	        0x488945f8	                mov qword [rbp - 8], rax	       708	am.c	FUNCTION_25
0x1c77	            0x31c0	                            xor eax, eax	       708	am.c	FUNCTION_25
0x1c79	        0x488d5590	                   lea rdx, [rbp - 0x70]	       709	am.c	FUNCTION_25
0x1c7d	      0xb800000000	                              mov eax, 0	       709	am.c	FUNCTION_25
0x1c82	      0xb90c000000	                            mov ecx, 0xc	       709	am.c	FUNCTION_25
0x1c87	          0x4889d7	                            mov rdi, rdx	       709	am.c	FUNCTION_25
0x1c8a	          0xf348ab	              rep stosq qword [rdi], rax	       709	am.c	FUNCTION_25
0x1c8d	    0x48c745980000	               mov qword [rbp - 0x68], 0	       709	am.c	FUNCTION_25
0x1c95	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       709	am.c	FUNCTION_25
0x1c9d	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       710	am.c	FUNCTION_25
0x1ca8	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       710	am.c	FUNCTION_25
0x1cb3	    0x48c745800000	               mov qword [rbp - 0x80], 0	       710	am.c	FUNCTION_25
0x1cbb	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       713	am.c	FUNCTION_25
0x1cbf	          0x83c808	                               or eax, 8	       713	am.c	FUNCTION_25
0x1cc2	          0x8845d8	               mov byte [rbp - 0x28], al	       713	am.c	FUNCTION_25
0x1cc5	        0x488d4590	                   lea rax, [rbp - 0x70]	       714	am.c	FUNCTION_25	CALL_1
0x1cc9	        0x4883c008	                              add rax, 8	       714	am.c	FUNCTION_25	CALL_1
0x1ccd	      0xbe00000000	                              mov esi, 0	       714	am.c	FUNCTION_25	CALL_1
0x1cd2	          0x4889c7	                            mov rdi, rax	       714	am.c	FUNCTION_25	CALL_1
0x1cd5	      0xe800000000	                          call 0x4001d1a	       714	am.c	FUNCTION_25	CALL_1
0x1cda	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       715	am.c	FUNCTION_25	CALL_2
0x1ce1	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       715	am.c	FUNCTION_25	CALL_2
0x1ce4	        0x488d5590	                   lea rdx, [rbp - 0x70]	       715	am.c	FUNCTION_25	CALL_2
0x1ce8	        0x488d4a08	                      lea rcx, [rdx + 8]	       715	am.c	FUNCTION_25	CALL_2
0x1cec	            0x89c2	                            mov edx, eax	       715	am.c	FUNCTION_25	CALL_2
0x1cee	      0xbe00000000	                              mov esi, 0	       715	am.c	FUNCTION_25	CALL_2
0x1cf3	          0x4889cf	                            mov rdi, rcx	       715	am.c	FUNCTION_25	CALL_2
0x1cf6	      0xb800000000	                              mov eax, 0	       715	am.c	FUNCTION_25	CALL_2
0x1cfb	      0xe800000000	                          call 0x4001d40	       715	am.c	FUNCTION_25	CALL_2
0x1d00	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       716	am.c	FUNCTION_25	CALL_3
0x1d07	          0x488b00	                    mov rax, qword [rax]	       716	am.c	FUNCTION_25	CALL_3
0x1d0a	        0x488d5590	                   lea rdx, [rbp - 0x70]	       716	am.c	FUNCTION_25	CALL_3
0x1d0e	        0x488d4a08	                      lea rcx, [rdx + 8]	       716	am.c	FUNCTION_25	CALL_3
0x1d12	          0x4889c2	                            mov rdx, rax	       716	am.c	FUNCTION_25	CALL_3
0x1d15	      0xbe00000000	                              mov esi, 0	       716	am.c	FUNCTION_25	CALL_3
0x1d1a	          0x4889cf	                            mov rdi, rcx	       716	am.c	FUNCTION_25	CALL_3
0x1d1d	      0xb800000000	                              mov eax, 0	       716	am.c	FUNCTION_25	CALL_3
0x1d22	      0xe800000000	                          call 0x4001d67	       716	am.c	FUNCTION_25	CALL_3
0x1d27	        0x488d4590	                   lea rax, [rbp - 0x70]	       717	am.c	FUNCTION_25	CALL_4
0x1d2b	        0x4883c008	                              add rax, 8	       717	am.c	FUNCTION_25	CALL_4
0x1d2f	      0xbe00000000	                              mov esi, 0	       717	am.c	FUNCTION_25	CALL_4
0x1d34	          0x4889c7	                            mov rdi, rax	       717	am.c	FUNCTION_25	CALL_4
0x1d37	      0xe800000000	                          call 0x4001d7c	       717	am.c	FUNCTION_25	CALL_4
0x1d3c	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       718	am.c	FUNCTION_25	IF_1
0x1d43	            0x7415	                            je 0x4001d9a	       718	am.c	FUNCTION_25	IF_1
0x1d45	        0x488d4590	                   lea rax, [rbp - 0x70]	       719	am.c	FUNCTION_25	CALL_5
0x1d49	        0x4883c008	                              add rax, 8	       719	am.c	FUNCTION_25	CALL_5
0x1d4d	      0xbe00000000	                              mov esi, 0	       719	am.c	FUNCTION_25	CALL_5
0x1d52	          0x4889c7	                            mov rdi, rax	       719	am.c	FUNCTION_25	CALL_5
0x1d55	      0xe800000000	                          call 0x4001d9a	       719	am.c	FUNCTION_25	CALL_5
0x1d5a	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       720	am.c	FUNCTION_25	IF_2
0x1d61	            0x7415	                            je 0x4001db8	       720	am.c	FUNCTION_25	IF_2
0x1d63	        0x488d4590	                   lea rax, [rbp - 0x70]	       721	am.c	FUNCTION_25	CALL_6
0x1d67	        0x4883c008	                              add rax, 8	       721	am.c	FUNCTION_25	CALL_6
0x1d6b	      0xbe00000000	                              mov esi, 0	       721	am.c	FUNCTION_25	CALL_6
0x1d70	          0x4889c7	                            mov rdi, rax	       721	am.c	FUNCTION_25	CALL_6
0x1d73	      0xe800000000	                          call 0x4001db8	       721	am.c	FUNCTION_25	CALL_6
0x1d78	        0x488d4590	                   lea rax, [rbp - 0x70]	       722	am.c	FUNCTION_25	CALL_7
0x1d7c	        0x4883c008	                              add rax, 8	       722	am.c	FUNCTION_25	CALL_7
0x1d80	      0xbe00000000	                              mov esi, 0	       722	am.c	FUNCTION_25	CALL_7
0x1d85	          0x4889c7	                            mov rdi, rax	       722	am.c	FUNCTION_25	CALL_7
0x1d88	      0xe800000000	                          call 0x4001dcd	       722	am.c	FUNCTION_25	CALL_7
0x1d8d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       723	am.c	FUNCTION_25	CALL_8
0x1d94	        0x488d5590	                   lea rdx, [rbp - 0x70]	       723	am.c	FUNCTION_25	CALL_8
0x1d98	        0x4883c208	                              add rdx, 8	       723	am.c	FUNCTION_25	CALL_8
0x1d9c	          0x4889c6	                            mov rsi, rax	       723	am.c	FUNCTION_25	CALL_8
0x1d9f	          0x4889d7	                            mov rdi, rdx	       723	am.c	FUNCTION_25	CALL_8
0x1da2	      0xe800000000	                          call 0x4001de7	       723	am.c	FUNCTION_25	CALL_8
0x1da7	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       725	am.c	FUNCTION_25	CALL_9
0x1dae	        0x488d4590	                   lea rax, [rbp - 0x70]	       725	am.c	FUNCTION_25	CALL_9
0x1db2	      0xba08000000	                              mov edx, 8	       725	am.c	FUNCTION_25	CALL_9
0x1db7	          0x4889ce	                            mov rsi, rcx	       725	am.c	FUNCTION_25	CALL_9
0x1dba	          0x4889c7	                            mov rdi, rax	       725	am.c	FUNCTION_25	CALL_9
0x1dbd	      0xe8aae5ffff	                call sym.capture_command	       725	am.c	FUNCTION_25	CALL_9
0x1dc2	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       725	am.c	FUNCTION_25	CALL_9
0x1dc8	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       726	am.c	FUNCTION_25	IF_3
0x1dcf	            0x7532	                           jne 0x4001e43	       726	am.c	FUNCTION_25	IF_3
0x1dd1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       729	am.c	FUNCTION_25
0x1dd8	    0xc74008010000	                  mov dword [rax + 8], 1	       729	am.c	FUNCTION_25
0x1ddf	        0x488b4580	             mov rax, qword [rbp - 0x80]	       730	am.c	FUNCTION_25	CALL_10
0x1de3	      0xba0a000000	                            mov edx, 0xa	       730	am.c	FUNCTION_25	CALL_10
0x1de8	      0xbe00000000	                              mov esi, 0	       730	am.c	FUNCTION_25	CALL_10
0x1ded	          0x4889c7	                            mov rdi, rax	       730	am.c	FUNCTION_25	CALL_10
0x1df0	      0xe800000000	                          call 0x4001e35	       730	am.c	FUNCTION_25	CALL_10
0x1df5	            0x89c2	                            mov edx, eax	       730	am.c	FUNCTION_25	CALL_10
0x1df7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       730	am.c	FUNCTION_25	CALL_10
0x1dfe	          0x89500c	              mov dword [rax + 0xc], edx	       730	am.c	FUNCTION_25	CALL_10
0x1e01	            0xeb01	                           jmp 0x4001e44	       730	am.c	FUNCTION_25	CALL_10
0x1e03	              0x90	                                     nop	       727	am.c	FUNCTION_25	IF_3
0x1e04	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       733	am.c	FUNCTION_25	CALL_11
0x1e0b	          0x4889c7	                            mov rdi, rax	       733	am.c	FUNCTION_25	CALL_11
0x1e0e	      0xe800000000	                          call 0x4001e53	       733	am.c	FUNCTION_25	CALL_11
0x1e13	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       734	am.c	FUNCTION_25
0x1e1a	            0x7407	                            je 0x4001e63	       734	am.c	FUNCTION_25
0x1e1c	      0xb8ffffffff	                     mov eax, 0xffffffff	       734	am.c	FUNCTION_25
0x1e21	            0xeb05	                           jmp 0x4001e68	       734	am.c	FUNCTION_25
0x1e23	      0xb800000000	                              mov eax, 0	       734	am.c	FUNCTION_25
0x1e28	        0x488b4df8	                mov rcx, qword [rbp - 8]	       735	am.c	FUNCTION_25
0x1e2c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       735	am.c	FUNCTION_25
0x1e35	            0x7405	                            je 0x4001e7c	       735	am.c	FUNCTION_25
0x1e37	      0xe800000000	                          call 0x4001e7c	       735	am.c	FUNCTION_25
0x1e3c	              0xc9	                                   leave	       735	am.c	FUNCTION_25
0x1e3d	              0xc3	                                     ret	       735	am.c	FUNCTION_25
show_patch	functions,0:DO,0:WHILE,0:FOR,0:CALL,13:IF,2:SWITCH,0:ELSE,0	81
0x5ad5	              0x55	                                push rbp	      2128	am.c	FUNCTION_58
0x5ad6	          0x4889e5	                            mov rbp, rsp	      2128	am.c	FUNCTION_58
0x5ad9	        0x4883c480	             add rsp, 0xffffffffffffff80	      2128	am.c	FUNCTION_58
0x5add	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2128	am.c	FUNCTION_58
0x5ae1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2128	am.c	FUNCTION_58
0x5aea	        0x488945f8	                mov qword [rbp - 8], rax	      2128	am.c	FUNCTION_58
0x5aee	            0x31c0	                            xor eax, eax	      2128	am.c	FUNCTION_58
0x5af0	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2129	am.c	FUNCTION_58
0x5af8	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2129	am.c	FUNCTION_58
0x5b00	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2129	am.c	FUNCTION_58
0x5b08	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x5b0c	        0x4883c038	                           add rax, 0x38	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x5b10	          0x4889c7	                            mov rdi, rax	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x5b13	      0xe859a7ffff	                    call sym.is_null_oid	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x5b18	            0x85c0	                           test eax, eax	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x5b1a	            0x756c	                           jne 0x4005bc8	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x5b1c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2134	am.c	FUNCTION_58	IF_1
0x5b24	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2134	am.c	FUNCTION_58	IF_1
0x5b2c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2134	am.c	FUNCTION_58	IF_1
0x5b34	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2134	am.c	FUNCTION_58	IF_1
0x5b3c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b40	        0x4883c038	                           add rax, 0x38	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b44	          0x4889c7	                            mov rdi, rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b47	      0xe800000000	                          call 0x4005b8c	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b4c	          0x4889c7	                            mov rdi, rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b4f	      0xe800000000	                          call 0x4005b94	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b54	        0x488945a0	             mov qword [rbp - 0x60], rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b58	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b5c	        0x488945d8	             mov qword [rbp - 0x28], rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x5b60	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x5b64	      0xbe02000000	                              mov esi, 2	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x5b69	          0x4889c7	                            mov rdi, rax	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x5b6c	      0xe800000000	                          call 0x4005bb1	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x5b71	          0x894598	             mov dword [rbp - 0x68], eax	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x5b74	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2140	am.c	FUNCTION_58	IF_1	CALL_5
0x5b78	          0x4889c7	                            mov rdi, rax	      2140	am.c	FUNCTION_58	IF_1	CALL_5
0x5b7b	      0xe800000000	                          call 0x4005bc0	      2140	am.c	FUNCTION_58	IF_1	CALL_5
0x5b80	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2141	am.c	FUNCTION_58	IF_1
0x5b83	      0xe98f000000	                           jmp 0x4005c57	      2141	am.c	FUNCTION_58	IF_1
0x5b88	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2144	am.c	FUNCTION_58	CALL_7
0x5b8c	          0x4889c7	                            mov rdi, rax	      2144	am.c	FUNCTION_58	CALL_7
0x5b8f	      0xe8dad1ffff	                         call sym.msgnum	      2144	am.c	FUNCTION_58	CALL_7
0x5b94	          0x4889c2	                            mov rdx, rax	      2144	am.c	FUNCTION_58	CALL_7
0x5b97	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2144	am.c	FUNCTION_58	CALL_7
0x5b9b	          0x4889d6	                            mov rsi, rdx	      2144	am.c	FUNCTION_58	CALL_7
0x5b9e	          0x4889c7	                            mov rdi, rax	      2144	am.c	FUNCTION_58	CALL_7
0x5ba1	      0xe891aaffff	                        call sym.am_path	      2144	am.c	FUNCTION_58	CALL_7
0x5ba6	        0x488945a8	             mov qword [rbp - 0x58], rax	      2144	am.c	FUNCTION_58	CALL_7
0x5baa	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2145	am.c	FUNCTION_58	CALL_8
0x5bae	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2145	am.c	FUNCTION_58	CALL_8
0x5bb2	      0xba00000000	                              mov edx, 0	      2145	am.c	FUNCTION_58	CALL_8
0x5bb7	          0x4889ce	                            mov rsi, rcx	      2145	am.c	FUNCTION_58	CALL_8
0x5bba	          0x4889c7	                            mov rdi, rax	      2145	am.c	FUNCTION_58	CALL_8
0x5bbd	      0xe800000000	                          call 0x4005c02	      2145	am.c	FUNCTION_58	CALL_8
0x5bc2	          0x89459c	             mov dword [rbp - 0x64], eax	      2145	am.c	FUNCTION_58	CALL_8
0x5bc5	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2146	am.c	FUNCTION_58	IF_2
0x5bc9	            0x7921	                           jns 0x4005c2c	      2146	am.c	FUNCTION_58	IF_2
0x5bcb	      0xbf00000000	                              mov edi, 0	      2147	am.c	FUNCTION_58	CALL_10
0x5bd0	      0xe821a6ffff	                               call sym.	      2147	am.c	FUNCTION_58	CALL_10
0x5bd5	          0x4889c2	                            mov rdx, rax	      2147	am.c	FUNCTION_58	CALL_10
0x5bd8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2147	am.c	FUNCTION_58	CALL_10
0x5bdc	          0x4889c6	                            mov rsi, rax	      2147	am.c	FUNCTION_58	CALL_10
0x5bdf	          0x4889d7	                            mov rdi, rdx	      2147	am.c	FUNCTION_58	CALL_10
0x5be2	      0xb800000000	                              mov eax, 0	      2147	am.c	FUNCTION_58	CALL_10
0x5be7	      0xe800000000	                          call 0x4005c2c	      2147	am.c	FUNCTION_58	CALL_10
0x5bec	      0xe800000000	                          call 0x4005c31	      2149	am.c	FUNCTION_58	CALL_11
0x5bf1	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2150	am.c	FUNCTION_58	CALL_12
0x5bf5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2150	am.c	FUNCTION_58	CALL_12
0x5bf9	          0x4889c6	                            mov rsi, rax	      2150	am.c	FUNCTION_58	CALL_12
0x5bfc	      0xbf01000000	                              mov edi, 1	      2150	am.c	FUNCTION_58	CALL_12
0x5c01	      0xe800000000	                          call 0x4005c46	      2150	am.c	FUNCTION_58	CALL_12
0x5c06	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2151	am.c	FUNCTION_58	CALL_13
0x5c0a	          0x4889c7	                            mov rdi, rax	      2151	am.c	FUNCTION_58	CALL_13
0x5c0d	      0xe800000000	                          call 0x4005c52	      2151	am.c	FUNCTION_58	CALL_13
0x5c12	      0xb800000000	                              mov eax, 0	      2152	am.c	FUNCTION_58
0x5c17	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2153	am.c	FUNCTION_58
0x5c1b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2153	am.c	FUNCTION_58
0x5c24	            0x7405	                            je 0x4005c6b	      2153	am.c	FUNCTION_58
0x5c26	      0xe800000000	                          call 0x4005c6b	      2153	am.c	FUNCTION_58
0x5c2b	              0xc9	                                   leave	      2153	am.c	FUNCTION_58
0x5c2c	              0xc3	                                     ret	      2153	am.c	FUNCTION_58
write_index_patch	functions,0:DO,0:WHILE,0:FOR,0:CALL,9:IF,1:SWITCH,0:ELSE,1	71
0x3afc	              0x55	                                push rbp	      1396	am.c	FUNCTION_41
0x3afd	          0x4889e5	                            mov rbp, rsp	      1396	am.c	FUNCTION_41
0x3b00	    0x4881ec000900	                          sub rsp, 0x900	      1396	am.c	FUNCTION_41
0x3b07	    0x4889bd08f7ff	            mov qword [rbp - 0x8f8], rdi	      1396	am.c	FUNCTION_41
0x3b0e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1396	am.c	FUNCTION_41
0x3b17	        0x488945f8	                mov qword [rbp - 8], rax	      1396	am.c	FUNCTION_41
0x3b1b	            0x31c0	                            xor eax, eax	      1396	am.c	FUNCTION_41
0x3b1d	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x3b24	          0x4889c6	                            mov rsi, rax	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x3b27	      0xbf00000000	                              mov edi, 0	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x3b2c	      0xe800000000	                          call 0x4003b71	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x3b31	            0x85c0	                           test eax, eax	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x3b33	            0x7518	                           jne 0x4003b8d	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x3b35	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1403	am.c	FUNCTION_41	CALL_2
0x3b3c	          0x4889c7	                            mov rdi, rax	      1403	am.c	FUNCTION_41	CALL_2
0x3b3f	      0xe800000000	                          call 0x4003b84	      1403	am.c	FUNCTION_41	CALL_2
0x3b44	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	      1403	am.c	FUNCTION_41	CALL_2
0x3b4b	            0xeb1e	                           jmp 0x4003bab	      1403	am.c	FUNCTION_41	CALL_2
0x3b4d	    0x488b05000000	            mov rax, qword [0x04003b94] 	      1405	am.c	FUNCTION_41	CALL_3
0x3b54	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1405	am.c	FUNCTION_41	CALL_3
0x3b58	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1405	am.c	FUNCTION_41	CALL_3
0x3b5c	          0x4889c7	                            mov rdi, rax	      1405	am.c	FUNCTION_41	CALL_3
0x3b5f	      0xe800000000	                          call 0x4003ba4	      1405	am.c	FUNCTION_41	CALL_3
0x3b64	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	      1405	am.c	FUNCTION_41	CALL_3
0x3b6b	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	      1407	am.c	FUNCTION_41	CALL_5
0x3b72	      0xbe00000000	                              mov esi, 0	      1407	am.c	FUNCTION_41	CALL_5
0x3b77	          0x4889c7	                            mov rdi, rax	      1407	am.c	FUNCTION_41	CALL_5
0x3b7a	      0xe8b8caffff	                        call sym.am_path	      1407	am.c	FUNCTION_41	CALL_5
0x3b7f	      0xbe00000000	                              mov esi, 0	      1407	am.c	FUNCTION_41	CALL_5
0x3b84	          0x4889c7	                            mov rdi, rax	      1407	am.c	FUNCTION_41	CALL_5
0x3b87	      0xe800000000	                          call 0x4003bcc	      1407	am.c	FUNCTION_41	CALL_5
0x3b8c	    0x48898518f7ff	            mov qword [rbp - 0x8e8], rax	      1407	am.c	FUNCTION_41	CALL_5
0x3b93	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1408	am.c	FUNCTION_41	CALL_6
0x3b9a	      0xbe00000000	                              mov esi, 0	      1408	am.c	FUNCTION_41	CALL_6
0x3b9f	          0x4889c7	                            mov rdi, rax	      1408	am.c	FUNCTION_41	CALL_6
0x3ba2	      0xe800000000	                          call 0x4003be7	      1408	am.c	FUNCTION_41	CALL_6
0x3ba7	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1409	am.c	FUNCTION_41
0x3bae	          0x83c801	                               or eax, 1	      1409	am.c	FUNCTION_41
0x3bb1	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1409	am.c	FUNCTION_41
0x3bb7	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	      1410	am.c	FUNCTION_41
0x3bbe	          0x83c880	                      or eax, 0xffffff80	      1410	am.c	FUNCTION_41
0x3bc1	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	      1410	am.c	FUNCTION_41
0x3bc7	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1411	am.c	FUNCTION_41
0x3bce	          0x83c808	                               or eax, 8	      1411	am.c	FUNCTION_41
0x3bd1	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1411	am.c	FUNCTION_41
0x3bd7	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x10 	      1412	am.c	FUNCTION_41
0x3be1	    0xc78578fcffff	              mov dword [rbp - 0x388], 0	      1413	am.c	FUNCTION_41
0x3beb	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      1414	am.c	FUNCTION_41
0x3bf2	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	      1414	am.c	FUNCTION_41
0x3bf9	    0xc78540fdffff	              mov dword [rbp - 0x2c0], 1	      1415	am.c	FUNCTION_41
0x3c03	    0x488b8d10f7ff	            mov rcx, qword [rbp - 0x8f0]	      1416	am.c	FUNCTION_41	CALL_7
0x3c0a	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1416	am.c	FUNCTION_41	CALL_7
0x3c11	      0xba00000000	                              mov edx, 0	      1416	am.c	FUNCTION_41	CALL_7
0x3c16	          0x4889ce	                            mov rsi, rcx	      1416	am.c	FUNCTION_41	CALL_7
0x3c19	          0x4889c7	                            mov rdi, rax	      1416	am.c	FUNCTION_41	CALL_7
0x3c1c	      0xe800000000	                          call 0x4003c61	      1416	am.c	FUNCTION_41	CALL_7
0x3c21	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1417	am.c	FUNCTION_41	CALL_8
0x3c28	    0x4805f8040000	                          add rax, 0x4f8	      1417	am.c	FUNCTION_41	CALL_8
0x3c2e	          0x4889c7	                            mov rdi, rax	      1417	am.c	FUNCTION_41	CALL_8
0x3c31	      0xe800000000	                          call 0x4003c76	      1417	am.c	FUNCTION_41	CALL_8
0x3c36	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1418	am.c	FUNCTION_41	CALL_9
0x3c3d	      0xbe01000000	                              mov esi, 1	      1418	am.c	FUNCTION_41	CALL_9
0x3c42	          0x4889c7	                            mov rdi, rax	      1418	am.c	FUNCTION_41	CALL_9
0x3c45	      0xe800000000	                          call 0x4003c8a	      1418	am.c	FUNCTION_41	CALL_9
0x3c4a	              0x90	                                     nop	      1419	am.c	FUNCTION_41
0x3c4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1419	am.c	FUNCTION_41
0x3c4f	    0x644833042528	                xor rax, qword fs:[0x28]	      1419	am.c	FUNCTION_41
0x3c58	            0x7405	                            je 0x4003c9f	      1419	am.c	FUNCTION_41
0x3c5a	      0xe800000000	                          call 0x4003c9f	      1419	am.c	FUNCTION_41
0x3c5f	              0xc9	                                   leave	      1419	am.c	FUNCTION_41
0x3c60	              0xc3	                                     ret	      1419	am.c	FUNCTION_41
linelen	functions,0:DO,0:WHILE,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0	14
0x469	              0x55	                                push rbp	        56	am.c	FUNCTION_2
0x46a	          0x4889e5	                            mov rbp, rsp	        56	am.c	FUNCTION_2
0x46d	        0x4883ec10	                           sub rsp, 0x10	        56	am.c	FUNCTION_2
0x471	        0x48897df8	                mov qword [rbp - 8], rdi	        56	am.c	FUNCTION_2
0x475	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	am.c	FUNCTION_2	CALL_1
0x479	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2	CALL_1
0x47e	          0x4889c7	                            mov rdi, rax	        57	am.c	FUNCTION_2	CALL_1
0x481	      0xe800000000	                          call 0x40004c6	        57	am.c	FUNCTION_2	CALL_1
0x486	          0x4889c2	                            mov rdx, rax	        57	am.c	FUNCTION_2	CALL_1
0x489	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	am.c	FUNCTION_2	CALL_1
0x48d	          0x4829c2	                            sub rdx, rax	        57	am.c	FUNCTION_2	CALL_1
0x490	          0x4889d0	                            mov rax, rdx	        57	am.c	FUNCTION_2	CALL_1
0x493	              0xc9	                                   leave	        58	am.c	FUNCTION_2
0x494	              0xc3	                                     ret	        58	am.c	FUNCTION_2
am_abort	functions,0:DO,0:WHILE,0:FOR,0:CALL,13:IF,5:SWITCH,0:ELSE,1	95
0x5967	              0x55	                                push rbp	      2093	am.c	FUNCTION_57
0x5968	          0x4889e5	                            mov rbp, rsp	      2093	am.c	FUNCTION_57
0x596b	        0x4883ec60	                           sub rsp, 0x60	      2093	am.c	FUNCTION_57
0x596f	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2093	am.c	FUNCTION_57
0x5973	    0x64488b042528	                mov rax, qword fs:[0x28]	      2093	am.c	FUNCTION_57
0x597c	        0x488945f8	                mov qword [rbp - 8], rax	      2093	am.c	FUNCTION_57
0x5980	            0x31c0	                            xor eax, eax	      2093	am.c	FUNCTION_57
0x5982	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x5986	          0x4889c7	                            mov rdi, rax	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x5989	      0xe88dfeffff	                  call sym.safe_to_abort	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x598e	            0x85c0	                           test eax, eax	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x5990	            0x7511	                           jne 0x40059e3	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x5992	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x5996	          0x4889c7	                            mov rdi, rax	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x5999	      0xe83dbaffff	                     call sym.am_destroy	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x599e	      0xe91c010000	                           jmp 0x4005aff	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x59a3	      0xe84cfdffff	                call sym.am_rerere_clear	      2103	am.c	FUNCTION_57	CALL_3
0x59a8	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2105	am.c	FUNCTION_57	CALL_4
0x59ac	      0xb900000000	                              mov ecx, 0	      2105	am.c	FUNCTION_57	CALL_4
0x59b1	          0x4889c2	                            mov rdx, rax	      2105	am.c	FUNCTION_57	CALL_4
0x59b4	      0xbe00000000	                              mov esi, 0	      2105	am.c	FUNCTION_57	CALL_4
0x59b9	      0xbf00000000	                              mov edi, 0	      2105	am.c	FUNCTION_57	CALL_4
0x59be	      0xe800000000	                          call 0x4005a03	      2105	am.c	FUNCTION_57	CALL_4
0x59c3	        0x488945b8	             mov qword [rbp - 0x48], rax	      2105	am.c	FUNCTION_57	CALL_4
0x59c7	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2106	am.c	FUNCTION_57	CALL_5
0x59cc	            0x7417	                            je 0x4005a25	      2106	am.c	FUNCTION_57	CALL_5
0x59ce	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2106	am.c	FUNCTION_57	CALL_5
0x59d2	          0x4889c7	                            mov rdi, rax	      2106	am.c	FUNCTION_57	CALL_5
0x59d5	      0xe897a8ffff	                    call sym.is_null_oid	      2106	am.c	FUNCTION_57	CALL_5
0x59da	            0x85c0	                           test eax, eax	      2106	am.c	FUNCTION_57	CALL_5
0x59dc	            0x7507	                           jne 0x4005a25	      2106	am.c	FUNCTION_57	CALL_5
0x59de	      0xb801000000	                              mov eax, 1	      2106	am.c	FUNCTION_57	CALL_5
0x59e3	            0xeb05	                           jmp 0x4005a2a	      2106	am.c	FUNCTION_57	CALL_5
0x59e5	      0xb800000000	                              mov eax, 0	      2106	am.c	FUNCTION_57	CALL_5
0x59ea	          0x8945b0	             mov dword [rbp - 0x50], eax	      2106	am.c	FUNCTION_57	CALL_5
0x59ed	        0x837db000	               cmp dword [rbp - 0x50], 0	      2107	am.c	FUNCTION_57	IF_2
0x59f1	            0x7511	                           jne 0x4005a44	      2107	am.c	FUNCTION_57	IF_2
0x59f3	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2108	am.c	FUNCTION_57	CALL_6
0x59f7	      0xbe00000000	                              mov esi, 0	      2108	am.c	FUNCTION_57	CALL_6
0x59fc	          0x4889c7	                            mov rdi, rax	      2108	am.c	FUNCTION_57	CALL_6
0x59ff	      0xe894a8ffff	                        call sym.hashcpy	      2108	am.c	FUNCTION_57	CALL_6
0x5a04	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2110	am.c	FUNCTION_57	CALL_7
0x5a08	          0x4889c6	                            mov rsi, rax	      2110	am.c	FUNCTION_57	CALL_7
0x5a0b	      0xbf00000000	                              mov edi, 0	      2110	am.c	FUNCTION_57	CALL_7
0x5a10	      0xe800000000	                          call 0x4005a55	      2110	am.c	FUNCTION_57	CALL_7
0x5a15	            0x85c0	                           test eax, eax	      2110	am.c	FUNCTION_57	CALL_7
0x5a17	           0xf94c0	                                 sete al	      2110	am.c	FUNCTION_57	CALL_7
0x5a1a	           0xfb6c0	                           movzx eax, al	      2110	am.c	FUNCTION_57	CALL_7
0x5a1d	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2110	am.c	FUNCTION_57	CALL_7
0x5a20	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2111	am.c	FUNCTION_57	IF_3
0x5a24	            0x7511	                           jne 0x4005a77	      2111	am.c	FUNCTION_57	IF_3
0x5a26	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2112	am.c	FUNCTION_57	CALL_8
0x5a2a	      0xbe00000000	                              mov esi, 0	      2112	am.c	FUNCTION_57	CALL_8
0x5a2f	          0x4889c7	                            mov rdi, rax	      2112	am.c	FUNCTION_57	CALL_8
0x5a32	      0xe861a8ffff	                        call sym.hashcpy	      2112	am.c	FUNCTION_57	CALL_8
0x5a37	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2114	am.c	FUNCTION_57	CALL_9
0x5a3b	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2114	am.c	FUNCTION_57	CALL_9
0x5a3f	          0x4889d6	                            mov rsi, rdx	      2114	am.c	FUNCTION_57	CALL_9
0x5a42	          0x4889c7	                            mov rdi, rax	      2114	am.c	FUNCTION_57	CALL_9
0x5a45	      0xe8fcfaffff	                    call sym.clean_index	      2114	am.c	FUNCTION_57	CALL_9
0x5a4a	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2116	am.c	FUNCTION_57	IF_4
0x5a4e	            0x7435	                            je 0x4005ac5	      2116	am.c	FUNCTION_57	IF_4
0x5a50	        0x837db000	               cmp dword [rbp - 0x50], 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a54	            0x7406	                            je 0x4005a9c	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a56	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a5a	            0xeb05	                           jmp 0x4005aa1	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a5c	      0xb800000000	                              mov eax, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a61	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a65	    0x41b901000000	                              mov r9d, 1	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a6b	    0x41b800000000	                              mov r8d, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a71	          0x4889c1	                            mov rcx, rax	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a74	      0xbe00000000	                              mov esi, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a79	      0xbf00000000	                              mov edi, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a7e	      0xe800000000	                          call 0x4005ac3	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a83	            0xeb22	                           jmp 0x4005ae7	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x5a85	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2120	am.c	FUNCTION_57	ELSE_1	IF_5
0x5a8a	            0x741b	                            je 0x4005ae7	      2120	am.c	FUNCTION_57	ELSE_1	IF_5
0x5a8c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x5a90	      0xb901000000	                              mov ecx, 1	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x5a95	      0xba00000000	                              mov edx, 0	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x5a9a	          0x4889c6	                            mov rsi, rax	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x5a9d	      0xbf00000000	                              mov edi, 0	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x5aa2	      0xe800000000	                          call 0x4005ae7	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x5aa7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2123	am.c	FUNCTION_57	CALL_12
0x5aab	          0x4889c7	                            mov rdi, rax	      2123	am.c	FUNCTION_57	CALL_12
0x5aae	      0xe800000000	                          call 0x4005af3	      2123	am.c	FUNCTION_57	CALL_12
0x5ab3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2124	am.c	FUNCTION_57	CALL_13
0x5ab7	          0x4889c7	                            mov rdi, rax	      2124	am.c	FUNCTION_57	CALL_13
0x5aba	      0xe81cb9ffff	                     call sym.am_destroy	      2124	am.c	FUNCTION_57	CALL_13
0x5abf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2125	am.c	FUNCTION_57
0x5ac3	    0x644833042528	                xor rax, qword fs:[0x28]	      2125	am.c	FUNCTION_57
0x5acc	            0x7405	                            je 0x4005b13	      2125	am.c	FUNCTION_57
0x5ace	      0xe800000000	                          call 0x4005b13	      2125	am.c	FUNCTION_57
0x5ad3	              0xc9	                                   leave	      2125	am.c	FUNCTION_57
0x5ad4	              0xc3	                                     ret	      2125	am.c	FUNCTION_57
parse_mail	functions,0:DO,0:WHILE,1:FOR,0:CALL,49:IF,10:SWITCH,2:ELSE,4	322
0x2fb8	              0x55	                                push rbp	      1192	am.c	FUNCTION_37
0x2fb9	          0x4889e5	                            mov rbp, rsp	      1192	am.c	FUNCTION_37
0x2fbc	              0x53	                                push rbx	      1192	am.c	FUNCTION_37
0x2fbd	    0x4881ecf80100	                          sub rsp, 0x1f8	      1192	am.c	FUNCTION_37
0x2fc4	    0x4889bd08feff	            mov qword [rbp - 0x1f8], rdi	      1192	am.c	FUNCTION_37
0x2fcb	    0x4889b500feff	            mov qword [rbp - 0x200], rsi	      1192	am.c	FUNCTION_37
0x2fd2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1192	am.c	FUNCTION_37
0x2fdb	        0x488945e8	             mov qword [rbp - 0x18], rax	      1192	am.c	FUNCTION_37
0x2fdf	            0x31c0	                            xor eax, eax	      1192	am.c	FUNCTION_37
0x2fe1	    0x48c78530feff	              mov qword [rbp - 0x1d0], 0	      1194	am.c	FUNCTION_37
0x2fec	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	      1194	am.c	FUNCTION_37
0x2ff7	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      1194	am.c	FUNCTION_37
0x3002	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	      1195	am.c	FUNCTION_37
0x300d	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      1195	am.c	FUNCTION_37
0x3018	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      1195	am.c	FUNCTION_37
0x3023	    0x48c78570feff	              mov qword [rbp - 0x190], 0	      1196	am.c	FUNCTION_37
0x302e	    0x48c78578feff	              mov qword [rbp - 0x188], 0	      1196	am.c	FUNCTION_37
0x3039	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      1196	am.c	FUNCTION_37
0x3044	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      1197	am.c	FUNCTION_37
0x304f	    0x48c78598feff	              mov qword [rbp - 0x168], 0	      1197	am.c	FUNCTION_37
0x305a	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      1197	am.c	FUNCTION_37
0x3065	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	      1198	am.c	FUNCTION_37
0x3070	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	      1198	am.c	FUNCTION_37
0x307b	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	      1198	am.c	FUNCTION_37
0x3086	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 0	      1199	am.c	FUNCTION_37
0x3090	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1202	am.c	FUNCTION_37	CALL_1
0x3097	          0x4889c7	                            mov rdi, rax	      1202	am.c	FUNCTION_37	CALL_1
0x309a	      0xe800000000	                          call 0x40030df	      1202	am.c	FUNCTION_37	CALL_1
0x309f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1204	am.c	FUNCTION_37	IF_1
0x30a6	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1204	am.c	FUNCTION_37	IF_1
0x30a9	            0x85c0	                           test eax, eax	      1204	am.c	FUNCTION_37	IF_1
0x30ab	            0x740e	                            je 0x40030fb	      1204	am.c	FUNCTION_37	IF_1
0x30ad	      0xe800000000	                          call 0x40030f2	      1205	am.c	FUNCTION_37	CALL_2
0x30b2	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1205	am.c	FUNCTION_37	CALL_2
0x30b9	            0xeb0b	                           jmp 0x4003106	      1205	am.c	FUNCTION_37	CALL_2
0x30bb	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	      1207	am.c	FUNCTION_37	ELSE_1
0x30c6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30cd	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30d0	          0x83f801	                              cmp eax, 1	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30d3	            0x740b	                            je 0x4003120	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30d5	          0x83f802	                              cmp eax, 2	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30d8	            0x7412	                            je 0x400312c	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30da	            0x85c0	                           test eax, eax	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30dc	            0x7429	                            je 0x4003147	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30de	            0xeb18	                           jmp 0x4003138	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30e0	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	      1213	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30ea	            0xeb1c	                           jmp 0x4003148	      1214	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30ec	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      1216	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30f6	            0xeb10	                           jmp 0x4003148	      1217	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x30f8	      0xbf00000000	                              mov edi, 0	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x30fd	      0xb800000000	                              mov eax, 0	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x3102	      0xe800000000	                          call 0x4003147	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x3107	              0x90	                                     nop	      1211	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x3108	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1222	am.c	FUNCTION_37	IF_2
0x310f	          0x8b4068	            mov eax, dword [rax + 0x68] 	      1222	am.c	FUNCTION_37	IF_2
0x3112	            0x85c0	                           test eax, eax	      1222	am.c	FUNCTION_37	IF_2
0x3114	            0x740a	                            je 0x4003160	      1222	am.c	FUNCTION_37	IF_2
0x3116	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      1223	am.c	FUNCTION_37	IF_2
0x3120	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1225	am.c	FUNCTION_37	SWITCH_2
0x3127	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1225	am.c	FUNCTION_37	SWITCH_2
0x312a	            0x85c0	                           test eax, eax	      1225	am.c	FUNCTION_37	SWITCH_2
0x312c	            0x740c	                            je 0x400317a	      1225	am.c	FUNCTION_37	SWITCH_2
0x312e	          0x83f801	                              cmp eax, 1	      1225	am.c	FUNCTION_37	SWITCH_2
0x3131	            0x7413	                            je 0x4003186	      1225	am.c	FUNCTION_37	SWITCH_2
0x3133	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1225	am.c	FUNCTION_37	SWITCH_2
0x3136	            0x7429	                            je 0x40031a1	      1225	am.c	FUNCTION_37	SWITCH_2
0x3138	            0xeb18	                           jmp 0x4003192	      1225	am.c	FUNCTION_37	SWITCH_2
0x313a	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      1229	am.c	FUNCTION_37	SWITCH_2
0x3144	            0xeb1c	                           jmp 0x40031a2	      1230	am.c	FUNCTION_37	SWITCH_2
0x3146	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      1232	am.c	FUNCTION_37	SWITCH_2
0x3150	            0xeb10	                           jmp 0x40031a2	      1233	am.c	FUNCTION_37	SWITCH_2
0x3152	      0xbf00000000	                              mov edi, 0	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x3157	      0xb800000000	                              mov eax, 0	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x315c	      0xe800000000	                          call 0x40031a1	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x3161	              0x90	                                     nop	      1227	am.c	FUNCTION_37	SWITCH_2
0x3162	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1238	am.c	FUNCTION_37	CALL_5
0x3169	      0xbe00000000	                              mov esi, 0	      1238	am.c	FUNCTION_37	CALL_5
0x316e	          0x4889c7	                            mov rdi, rax	      1238	am.c	FUNCTION_37	CALL_5
0x3171	      0xe800000000	                          call 0x40031b6	      1238	am.c	FUNCTION_37	CALL_5
0x3176	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      1238	am.c	FUNCTION_37	CALL_5
0x317d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1239	am.c	FUNCTION_37	CALL_7
0x3184	      0xbe00000000	                              mov esi, 0	      1239	am.c	FUNCTION_37	CALL_7
0x3189	          0x4889c7	                            mov rdi, rax	      1239	am.c	FUNCTION_37	CALL_7
0x318c	      0xe8a6d4ffff	                        call sym.am_path	      1239	am.c	FUNCTION_37	CALL_7
0x3191	      0xbe00000000	                              mov esi, 0	      1239	am.c	FUNCTION_37	CALL_7
0x3196	          0x4889c7	                            mov rdi, rax	      1239	am.c	FUNCTION_37	CALL_7
0x3199	      0xe800000000	                          call 0x40031de	      1239	am.c	FUNCTION_37	CALL_7
0x319e	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1239	am.c	FUNCTION_37	CALL_7
0x31a5	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31ac	      0xbe00000000	                              mov esi, 0	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31b1	          0x4889c7	                            mov rdi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31b4	      0xe87ed4ffff	                        call sym.am_path	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31b9	          0x4889c3	                            mov rbx, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31bc	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31c3	      0xbe00000000	                              mov esi, 0	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31c8	          0x4889c7	                            mov rdi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31cb	      0xe867d4ffff	                        call sym.am_path	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31d0	          0x4889c1	                            mov rcx, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31d3	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31da	          0x4889da	                            mov rdx, rbx	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31dd	          0x4889ce	                            mov rsi, rcx	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31e0	          0x4889c7	                            mov rdi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31e3	      0xe800000000	                          call 0x4003228	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31e8	            0x85c0	                           test eax, eax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31ea	            0x740f	                            je 0x400323b	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x31ec	      0xbf00000000	                              mov edi, 0	      1241	am.c	FUNCTION_37	CALL_11
0x31f1	      0xb800000000	                              mov eax, 0	      1241	am.c	FUNCTION_37	CALL_11
0x31f6	      0xe800000000	                          call 0x400323b	      1241	am.c	FUNCTION_37	CALL_11
0x31fb	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1243	am.c	FUNCTION_37	CALL_12
0x3202	          0x4889c7	                            mov rdi, rax	      1243	am.c	FUNCTION_37	CALL_12
0x3205	      0xe800000000	                          call 0x400324a	      1243	am.c	FUNCTION_37	CALL_12
0x320a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1244	am.c	FUNCTION_37	CALL_13
0x3211	          0x4889c7	                            mov rdi, rax	      1244	am.c	FUNCTION_37	CALL_13
0x3214	      0xe800000000	                          call 0x4003259	      1244	am.c	FUNCTION_37	CALL_13
0x3219	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1247	am.c	FUNCTION_37	CALL_15
0x3220	      0xbe00000000	                              mov esi, 0	      1247	am.c	FUNCTION_37	CALL_15
0x3225	          0x4889c7	                            mov rdi, rax	      1247	am.c	FUNCTION_37	CALL_15
0x3228	      0xe80ad4ffff	                        call sym.am_path	      1247	am.c	FUNCTION_37	CALL_15
0x322d	      0xbe00000000	                              mov esi, 0	      1247	am.c	FUNCTION_37	CALL_15
0x3232	          0x4889c7	                            mov rdi, rax	      1247	am.c	FUNCTION_37	CALL_15
0x3235	      0xe800000000	                          call 0x400327a	      1247	am.c	FUNCTION_37	CALL_15
0x323a	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      1247	am.c	FUNCTION_37	CALL_15
0x3241	      0xe909010000	                           jmp 0x400338f	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x3246	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x324d	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x3254	      0xbe00000000	                              mov esi, 0	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x3259	          0x4889c7	                            mov rdi, rax	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x325c	      0xe8cccdffff	                    call sym.skip_prefix	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x3261	            0x85c0	                           test eax, eax	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x3263	            0x743e	                            je 0x40032e3	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x3265	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x326c	          0x4885c0	                           test rax, rax	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x326f	            0x7414	                            je 0x40032c5	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x3271	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x3278	      0xbe0a000000	                            mov esi, 0xa	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x327d	          0x4889c7	                            mov rdi, rax	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x3280	      0xe8ceceffff	                   call sym.strbuf_addch	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x3285	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x328c	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x3293	          0x4889d6	                            mov rsi, rdx	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x3296	          0x4889c7	                            mov rdi, rax	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x3299	      0xe823cfffff	                  call sym.strbuf_addstr	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x329e	      0xe9ac000000	                           jmp 0x400338f	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x32a3	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x32aa	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x32b1	      0xbe00000000	                              mov esi, 0	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x32b6	          0x4889c7	                            mov rdi, rax	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x32b9	      0xe86fcdffff	                    call sym.skip_prefix	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x32be	            0x85c0	                           test eax, eax	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x32c0	            0x741b	                            je 0x400331d	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x32c2	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x32c9	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x32d0	          0x4889d6	                            mov rsi, rdx	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x32d3	          0x4889c7	                            mov rdi, rax	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x32d6	      0xe8e6ceffff	                  call sym.strbuf_addstr	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x32db	            0xeb72	                           jmp 0x400338f	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x32dd	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x32e4	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x32eb	      0xbe00000000	                              mov esi, 0	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x32f0	          0x4889c7	                            mov rdi, rax	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x32f3	      0xe835cdffff	                    call sym.skip_prefix	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x32f8	            0x85c0	                           test eax, eax	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x32fa	            0x741b	                            je 0x4003357	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x32fc	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x3303	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x330a	          0x4889d6	                            mov rsi, rdx	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x330d	          0x4889c7	                            mov rdi, rax	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x3310	      0xe8acceffff	                  call sym.strbuf_addstr	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x3315	            0xeb38	                           jmp 0x400338f	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x3317	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x331e	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x3325	      0xbe00000000	                              mov esi, 0	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x332a	          0x4889c7	                            mov rdi, rax	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x332d	      0xe8fbccffff	                    call sym.skip_prefix	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x3332	            0x85c0	                           test eax, eax	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x3334	            0x7419	                            je 0x400338f	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x3336	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x333d	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x3344	          0x4889d6	                            mov rsi, rdx	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x3347	          0x4889c7	                            mov rdi, rax	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x334a	      0xe872ceffff	                  call sym.strbuf_addstr	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x334f	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x3356	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x335d	          0x4889d6	                            mov rsi, rdx	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x3360	          0x4889c7	                            mov rdi, rax	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x3363	      0xe800000000	                          call 0x40033a8	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x3368	            0x85c0	                           test eax, eax	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x336a	     0xf84d6feffff	                            je 0x4003286	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x3370	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      1262	am.c	FUNCTION_37	CALL_26
0x3377	          0x4889c7	                            mov rdi, rax	      1262	am.c	FUNCTION_37	CALL_26
0x337a	      0xe800000000	                          call 0x40033bf	      1262	am.c	FUNCTION_37	CALL_26
0x337f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x3386	      0xbe00000000	                              mov esi, 0	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x338b	          0x4889c7	                            mov rdi, rax	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x338e	      0xe800000000	                          call 0x40033d3	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x3393	            0x85c0	                           test eax, eax	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x3395	            0x750f	                           jne 0x40033e6	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x3397	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 1	      1266	am.c	FUNCTION_37	IF_9
0x33a1	      0xe9c3010000	                           jmp 0x40035a9	      1267	am.c	FUNCTION_37	IF_9
0x33a6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33ad	      0xbe00000000	                              mov esi, 0	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33b2	          0x4889c7	                            mov rdi, rax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33b5	      0xe87dd2ffff	                        call sym.am_path	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33ba	          0x4889c7	                            mov rdi, rax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33bd	      0xe80fd0ffff	                  call sym.is_empty_file	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33c2	            0x85c0	                           test eax, eax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33c4	            0x7426	                            je 0x400342c	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x33c6	      0xbf00000000	                              mov edi, 0	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x33cb	      0xe826ceffff	                               call sym.	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x33d0	          0x4889c7	                            mov rdi, rax	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x33d3	      0xb800000000	                              mov eax, 0	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x33d8	      0xe800000000	                          call 0x400341d	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x33dd	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x33e4	          0x4889c7	                            mov rdi, rax	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x33e7	      0xe863faffff	               call sym.die_user_resolve	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x33ec	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1275	am.c	FUNCTION_37	CALL_33
0x33f3	      0xbe00000000	                              mov esi, 0	      1275	am.c	FUNCTION_37	CALL_33
0x33f8	          0x4889c7	                            mov rdi, rax	      1275	am.c	FUNCTION_37	CALL_33
0x33fb	      0xe8c1cdffff	                  call sym.strbuf_addstr	      1275	am.c	FUNCTION_37	CALL_33
0x3400	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1276	am.c	FUNCTION_37	CALL_34
0x3407	    0x488d90f00000	                   lea rdx, [rax + 0xf0]	      1276	am.c	FUNCTION_37	CALL_34
0x340e	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1276	am.c	FUNCTION_37	CALL_34
0x3415	          0x4889d6	                            mov rsi, rdx	      1276	am.c	FUNCTION_37	CALL_34
0x3418	          0x4889c7	                            mov rdi, rax	      1276	am.c	FUNCTION_37	CALL_34
0x341b	      0xe800000000	                          call 0x4003460	      1276	am.c	FUNCTION_37	CALL_34
0x3420	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1277	am.c	FUNCTION_37	CALL_35
0x3427	      0xbe00000000	                              mov esi, 0	      1277	am.c	FUNCTION_37	CALL_35
0x342c	          0x4889c7	                            mov rdi, rax	      1277	am.c	FUNCTION_37	CALL_35
0x342f	      0xe800000000	                          call 0x4003474	      1277	am.c	FUNCTION_37	CALL_35
0x3434	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1279	am.c	FUNCTION_37	CALL_36
0x343b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1279	am.c	FUNCTION_37	CALL_36
0x343f	          0x4885c0	                           test rax, rax	      1279	am.c	FUNCTION_37	CALL_36
0x3442	            0x7419	                            je 0x400349d	      1279	am.c	FUNCTION_37	CALL_36
0x3444	      0xb900000000	                              mov ecx, 0	      1279	am.c	FUNCTION_37	CALL_36
0x3449	      0xbaff040000	                          mov edx, 0x4ff	      1279	am.c	FUNCTION_37	CALL_36
0x344e	      0xbe00000000	                              mov esi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x3453	      0xbf00000000	                              mov edi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x3458	      0xe800000000	                          call 0x400349d	      1279	am.c	FUNCTION_37	CALL_36
0x345d	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      1280	am.c	FUNCTION_37	CALL_37
0x3464	      0xbe00000000	                              mov esi, 0	      1280	am.c	FUNCTION_37	CALL_37
0x3469	          0x4889c7	                            mov rdi, rax	      1280	am.c	FUNCTION_37	CALL_37
0x346c	      0xe800000000	                          call 0x40034b1	      1280	am.c	FUNCTION_37	CALL_37
0x3471	          0x4889c2	                            mov rdx, rax	      1280	am.c	FUNCTION_37	CALL_37
0x3474	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1280	am.c	FUNCTION_37	CALL_37
0x347b	        0x48895010	             mov qword [rax + 0x10], rdx	      1280	am.c	FUNCTION_37	CALL_37
0x347f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1282	am.c	FUNCTION_37	CALL_38
0x3486	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1282	am.c	FUNCTION_37	CALL_38
0x348a	          0x4885c0	                           test rax, rax	      1282	am.c	FUNCTION_37	CALL_38
0x348d	            0x7419	                            je 0x40034e8	      1282	am.c	FUNCTION_37	CALL_38
0x348f	      0xb900000000	                              mov ecx, 0	      1282	am.c	FUNCTION_37	CALL_38
0x3494	      0xba02050000	                          mov edx, 0x502	      1282	am.c	FUNCTION_37	CALL_38
0x3499	      0xbe00000000	                              mov esi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x349e	      0xbf00000000	                              mov edi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x34a3	      0xe800000000	                          call 0x40034e8	      1282	am.c	FUNCTION_37	CALL_38
0x34a8	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1283	am.c	FUNCTION_37	CALL_39
0x34af	      0xbe00000000	                              mov esi, 0	      1283	am.c	FUNCTION_37	CALL_39
0x34b4	          0x4889c7	                            mov rdi, rax	      1283	am.c	FUNCTION_37	CALL_39
0x34b7	      0xe800000000	                          call 0x40034fc	      1283	am.c	FUNCTION_37	CALL_39
0x34bc	          0x4889c2	                            mov rdx, rax	      1283	am.c	FUNCTION_37	CALL_39
0x34bf	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1283	am.c	FUNCTION_37	CALL_39
0x34c6	        0x48895018	             mov qword [rax + 0x18], rdx	      1283	am.c	FUNCTION_37	CALL_39
0x34ca	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1285	am.c	FUNCTION_37	CALL_40
0x34d1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1285	am.c	FUNCTION_37	CALL_40
0x34d5	          0x4885c0	                           test rax, rax	      1285	am.c	FUNCTION_37	CALL_40
0x34d8	            0x7419	                            je 0x4003533	      1285	am.c	FUNCTION_37	CALL_40
0x34da	      0xb900000000	                              mov ecx, 0	      1285	am.c	FUNCTION_37	CALL_40
0x34df	      0xba05050000	                          mov edx, 0x505	      1285	am.c	FUNCTION_37	CALL_40
0x34e4	      0xbe00000000	                              mov esi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x34e9	      0xbf00000000	                              mov edi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x34ee	      0xe800000000	                          call 0x4003533	      1285	am.c	FUNCTION_37	CALL_40
0x34f3	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1286	am.c	FUNCTION_37	CALL_41
0x34fa	      0xbe00000000	                              mov esi, 0	      1286	am.c	FUNCTION_37	CALL_41
0x34ff	          0x4889c7	                            mov rdi, rax	      1286	am.c	FUNCTION_37	CALL_41
0x3502	      0xe800000000	                          call 0x4003547	      1286	am.c	FUNCTION_37	CALL_41
0x3507	          0x4889c2	                            mov rdx, rax	      1286	am.c	FUNCTION_37	CALL_41
0x350a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1286	am.c	FUNCTION_37	CALL_41
0x3511	        0x48895020	             mov qword [rax + 0x20], rdx	      1286	am.c	FUNCTION_37	CALL_41
0x3515	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1288	am.c	FUNCTION_37	CALL_42
0x351c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1288	am.c	FUNCTION_37	CALL_42
0x3520	          0x4885c0	                           test rax, rax	      1288	am.c	FUNCTION_37	CALL_42
0x3523	            0x7419	                            je 0x400357e	      1288	am.c	FUNCTION_37	CALL_42
0x3525	      0xb900000000	                              mov ecx, 0	      1288	am.c	FUNCTION_37	CALL_42
0x352a	      0xba08050000	                          mov edx, 0x508	      1288	am.c	FUNCTION_37	CALL_42
0x352f	      0xbe00000000	                              mov esi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x3534	      0xbf00000000	                              mov edi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x3539	      0xe800000000	                          call 0x400357e	      1288	am.c	FUNCTION_37	CALL_42
0x353e	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1289	am.c	FUNCTION_37	CALL_43
0x3545	        0x488d5030	                   lea rdx, [rax + 0x30]	      1289	am.c	FUNCTION_37	CALL_43
0x3549	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1289	am.c	FUNCTION_37	CALL_43
0x3550	          0x4889d6	                            mov rsi, rdx	      1289	am.c	FUNCTION_37	CALL_43
0x3553	          0x4889c7	                            mov rdi, rax	      1289	am.c	FUNCTION_37	CALL_43
0x3556	      0xe800000000	                          call 0x400359b	      1289	am.c	FUNCTION_37	CALL_43
0x355b	          0x4889c2	                            mov rdx, rax	      1289	am.c	FUNCTION_37	CALL_43
0x355e	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1289	am.c	FUNCTION_37	CALL_43
0x3565	        0x48895028	             mov qword [rax + 0x28], rdx	      1289	am.c	FUNCTION_37	CALL_43
0x3569	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1292	am.c	FUNCTION_37	CALL_44
0x3570	          0x4889c7	                            mov rdi, rax	      1292	am.c	FUNCTION_37	CALL_44
0x3573	      0xe800000000	                          call 0x40035b8	      1292	am.c	FUNCTION_37	CALL_44
0x3578	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1293	am.c	FUNCTION_37	CALL_45
0x357f	          0x4889c7	                            mov rdi, rax	      1293	am.c	FUNCTION_37	CALL_45
0x3582	      0xe800000000	                          call 0x40035c7	      1293	am.c	FUNCTION_37	CALL_45
0x3587	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1294	am.c	FUNCTION_37	CALL_46
0x358e	          0x4889c7	                            mov rdi, rax	      1294	am.c	FUNCTION_37	CALL_46
0x3591	      0xe800000000	                          call 0x40035d6	      1294	am.c	FUNCTION_37	CALL_46
0x3596	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      1295	am.c	FUNCTION_37	CALL_47
0x359d	          0x4889c7	                            mov rdi, rax	      1295	am.c	FUNCTION_37	CALL_47
0x35a0	      0xe800000000	                          call 0x40035e5	      1295	am.c	FUNCTION_37	CALL_47
0x35a5	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	      1296	am.c	FUNCTION_37	CALL_48
0x35ac	          0x4889c7	                            mov rdi, rax	      1296	am.c	FUNCTION_37	CALL_48
0x35af	      0xe800000000	                          call 0x40035f4	      1296	am.c	FUNCTION_37	CALL_48
0x35b4	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1297	am.c	FUNCTION_37	CALL_49
0x35bb	          0x4889c7	                            mov rdi, rax	      1297	am.c	FUNCTION_37	CALL_49
0x35be	      0xe800000000	                          call 0x4003603	      1297	am.c	FUNCTION_37	CALL_49
0x35c3	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      1298	am.c	FUNCTION_37
0x35c9	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1299	am.c	FUNCTION_37
0x35cd	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1299	am.c	FUNCTION_37
0x35d6	            0x7405	                            je 0x400361d	      1299	am.c	FUNCTION_37
0x35d8	      0xe800000000	                          call 0x400361d	      1299	am.c	FUNCTION_37
0x35dd	    0x4881c4f80100	                          add rsp, 0x1f8	      1299	am.c	FUNCTION_37
0x35e4	              0x5b	                                 pop rbx	      1299	am.c	FUNCTION_37
0x35e5	              0x5d	                                 pop rbp	      1299	am.c	FUNCTION_37
0x35e6	              0xc3	                                     ret	      1299	am.c	FUNCTION_37
hg_patch_to_mail	functions,0:DO,0:WHILE,2:FOR,0:CALL,27:IF,8:SWITCH,0:ELSE,3	223
0x237e	              0x55	                                push rbp	       886	am.c	FUNCTION_29
0x237f	          0x4889e5	                            mov rbp, rsp	       886	am.c	FUNCTION_29
0x2382	        0x4883ec70	                           sub rsp, 0x70	       886	am.c	FUNCTION_29
0x2386	        0x48897da8	             mov qword [rbp - 0x58], rdi	       886	am.c	FUNCTION_29
0x238a	        0x488975a0	             mov qword [rbp - 0x60], rsi	       886	am.c	FUNCTION_29
0x238e	          0x89559c	             mov dword [rbp - 0x64], edx	       886	am.c	FUNCTION_29
0x2391	    0x64488b042528	                mov rax, qword fs:[0x28]	       886	am.c	FUNCTION_29
0x239a	        0x488945f8	                mov qword [rbp - 8], rax	       886	am.c	FUNCTION_29
0x239e	            0x31c0	                            xor eax, eax	       886	am.c	FUNCTION_29
0x23a0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       887	am.c	FUNCTION_29
0x23a8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       887	am.c	FUNCTION_29
0x23b0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       887	am.c	FUNCTION_29
0x23b8	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       888	am.c	FUNCTION_29
0x23bf	      0xe9a2020000	                           jmp 0x40026a6	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x23c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x23c8	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x23cc	      0xbe00000000	                              mov esi, 0	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x23d1	          0x4889c7	                            mov rdi, rax	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x23d4	      0xe854dcffff	                    call sym.skip_prefix	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x23d9	            0x85c0	                           test eax, eax	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x23db	            0x741f	                            je 0x400243c	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x23dd	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x23e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x23e5	      0xbe00000000	                              mov esi, 0	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x23ea	          0x4889c7	                            mov rdi, rax	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x23ed	      0xb800000000	                              mov eax, 0	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x23f2	      0xe800000000	                          call 0x4002437	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x23f7	      0xe96a020000	                           jmp 0x40026a6	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x23fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x2400	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x2404	      0xbe00000000	                              mov esi, 0	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x2409	          0x4889c7	                            mov rdi, rax	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x240c	      0xe81cdcffff	                    call sym.skip_prefix	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x2411	            0x85c0	                           test eax, eax	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x2413	     0xf841a020000	                            je 0x4002673	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x2419	      0xe800000000	                          call 0x400245e	       900	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x241e	    0xc70000000000	                      mov dword [rax], 0	       900	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x2424	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_5
0x2428	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_5
0x242c	      0xba0a000000	                            mov edx, 0xa	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_5
0x2431	          0x4889ce	                            mov rsi, rcx	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_5
0x2434	          0x4889c7	                            mov rdi, rax	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_5
0x2437	      0xe800000000	                          call 0x400247c	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_5
0x243c	        0x488945d0	             mov qword [rbp - 0x30], rax	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_5
0x2440	      0xe800000000	                          call 0x4002485	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x2445	            0x8b00	                    mov eax, dword [rax]	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x2447	            0x85c0	                           test eax, eax	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x2449	            0x7424	                            je 0x40024af	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x244b	      0xbf00000000	                              mov edi, 0	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_7
0x2450	      0xe8a1ddffff	                               call sym.	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_7
0x2455	          0x4889c7	                            mov rdi, rax	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_7
0x2458	      0xb800000000	                              mov eax, 0	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_7
0x245d	      0xe800000000	                          call 0x40024a2	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_7
0x2462	      0xe8bbdbffff	                    call sym.const_error	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_7
0x2467	          0x8945b4	             mov dword [rbp - 0x4c], eax	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_7
0x246a	      0xe969020000	                           jmp 0x4002718	       904	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x246f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_8
0x2473	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_8
0x2477	      0xbe00000000	                              mov esi, 0	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_8
0x247c	          0x4889c7	                            mov rdi, rax	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_8
0x247f	      0xe8a9dbffff	                    call sym.skip_prefix	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_8
0x2484	            0x85c0	                           test eax, eax	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_8
0x2486	            0x7524	                           jne 0x40024ec	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_8
0x2488	      0xbf00000000	                              mov edi, 0	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_10
0x248d	      0xe864ddffff	                               call sym.	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_10
0x2492	          0x4889c7	                            mov rdi, rax	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_10
0x2495	      0xb800000000	                              mov eax, 0	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_10
0x249a	      0xe800000000	                          call 0x40024df	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_10
0x249f	      0xe87edbffff	                    call sym.const_error	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_10
0x24a4	          0x8945b4	             mov dword [rbp - 0x4c], eax	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_10
0x24a7	      0xe92c020000	                           jmp 0x4002718	       909	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4
0x24ac	      0xe800000000	                          call 0x40024f1	       912	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x24b1	    0xc70000000000	                      mov dword [rax], 0	       912	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x24b7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_11
0x24bb	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_11
0x24bf	      0xba0a000000	                            mov edx, 0xa	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_11
0x24c4	          0x4889ce	                            mov rsi, rcx	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_11
0x24c7	          0x4889c7	                            mov rdi, rax	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_11
0x24ca	      0xe800000000	                          call 0x400250f	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_11
0x24cf	        0x488945d8	             mov qword [rbp - 0x28], rax	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_11
0x24d3	      0xe800000000	                          call 0x4002518	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x24d8	            0x8b00	                    mov eax, dword [rax]	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x24da	            0x85c0	                           test eax, eax	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x24dc	            0x7424	                            je 0x4002542	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x24de	      0xbf00000000	                              mov edi, 0	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_13
0x24e3	      0xe80eddffff	                               call sym.	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_13
0x24e8	          0x4889c7	                            mov rdi, rax	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_13
0x24eb	      0xb800000000	                              mov eax, 0	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_13
0x24f0	      0xe800000000	                          call 0x4002535	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_13
0x24f5	      0xe828dbffff	                    call sym.const_error	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_13
0x24fa	          0x8945b4	             mov dword [rbp - 0x4c], eax	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_13
0x24fd	      0xe9d6010000	                           jmp 0x4002718	       916	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x2502	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x2506	           0xfb600	                   movzx eax, byte [rax]	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x2509	            0x84c0	                             test al, al	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x250b	            0x7424	                            je 0x4002571	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x250d	      0xbf00000000	                              mov edi, 0	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_15
0x2512	      0xe8dfdcffff	                               call sym.	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_15
0x2517	          0x4889c7	                            mov rdi, rax	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_15
0x251a	      0xb800000000	                              mov eax, 0	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_15
0x251f	      0xe800000000	                          call 0x4002564	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_15
0x2524	      0xe8f9daffff	                    call sym.const_error	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_15
0x2529	          0x8945b4	             mov dword [rbp - 0x4c], eax	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_15
0x252c	      0xe9a7010000	                           jmp 0x4002718	       921	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x2531	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2535	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2539	          0x4889c1	                            mov rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x253c	        0x48334dd8	             xor rcx, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2540	          0x4829c1	                            sub rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2543	    0x48ba057cf36a	          movabs rdx, 0x48d159e26af37c05	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x254d	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2550	          0x48f7ea	                                imul rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2553	        0x48c1fa0a	                            sar rdx, 0xa	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2557	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x255a	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x255e	          0x4829c2	                            sub rdx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2561	          0x4889d0	                            mov rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2564	        0x48c1e002	                              shl rax, 2	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2568	          0x4801d0	                            add rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x256b	    0x488d14850000	                        lea rdx, [rax*4]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2573	          0x4801d0	                            add rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2576	        0x48c1e002	                              shl rax, 2	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x257a	          0x4889c7	                            mov rdi, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x257d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2581	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2585	          0x4889c1	                            mov rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2588	        0x48334dd8	             xor rcx, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x258c	          0x4829c1	                            sub rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x258f	    0x48ba057cf36a	          movabs rdx, 0x48d159e26af37c05	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x2599	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x259c	          0x48f7ea	                                imul rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x259f	        0x48c1fa0a	                            sar rdx, 0xa	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25a3	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25a6	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25aa	          0x4889d6	                            mov rsi, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25ad	          0x4829c6	                            sub rsi, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25b0	    0x4869c6100e00	                    imul rax, rsi, 0xe10	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25b7	          0x4829c1	                            sub rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25ba	          0x4889ce	                            mov rsi, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25bd	    0x48ba89888888	          movabs rdx, 0x8888888888888889	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25c7	          0x4889f0	                            mov rax, rsi	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25ca	          0x48f7ea	                                imul rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25cd	        0x488d0432	                    lea rax, [rdx + rsi]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25d1	        0x48c1f805	                              sar rax, 5	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25d5	          0x4889c2	                            mov rdx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25d8	          0x4889f0	                            mov rax, rsi	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25db	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25df	          0x4829c2	                            sub rdx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25e2	          0x4889d0	                            mov rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25e5	          0x4801f8	                            add rax, rdi	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25e8	        0x488945c8	             mov qword [rbp - 0x38], rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_17
0x25ec	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       930	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_7
0x25f1	            0x7e04	                           jle 0x4002637	       930	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_7
0x25f3	        0x48f75dc8	                  neg qword [rbp - 0x38]	       931	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_7
0x25f7	      0xbf05000000	                              mov edi, 5	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x25fc	      0xe800000000	                          call 0x4002641	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2601	          0x4889c2	                            mov rdx, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2604	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2608	            0x89c1	                            mov ecx, eax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x260a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x260e	            0x89ce	                            mov esi, ecx	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2610	          0x4889c7	                            mov rdi, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2613	      0xe800000000	                          call 0x4002658	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2618	          0x4889c2	                            mov rdx, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x261b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x261f	      0xbe00000000	                              mov esi, 0	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2624	          0x4889c7	                            mov rdi, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2627	      0xb800000000	                              mov eax, 0	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x262c	      0xe800000000	                          call 0x4002671	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2631	            0xeb33	                           jmp 0x40026a6	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_20
0x2633	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_21
0x2637	      0xbe00000000	                              mov esi, 0	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_21
0x263c	          0x4889c7	                            mov rdi, rax	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_21
0x263f	      0xe800000000	                          call 0x4002684	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_21
0x2644	            0x85c0	                           test eax, eax	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_21
0x2646	            0x7402	                            je 0x400268a	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_21
0x2648	            0xeb1c	                           jmp 0x40026a6	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_21
0x264a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_22
0x264e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_22
0x2652	      0xbe00000000	                              mov esi, 0	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_22
0x2657	          0x4889c7	                            mov rdi, rax	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_22
0x265a	      0xb800000000	                              mov eax, 0	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_22
0x265f	      0xe800000000	                          call 0x40026a4	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_22
0x2664	            0xeb1b	                           jmp 0x40026c1	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_22
0x2666	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x266a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x266e	          0x4889d6	                            mov rsi, rdx	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x2671	          0x4889c7	                            mov rdi, rax	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x2674	      0xe800000000	                          call 0x40026b9	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x2679	            0x85c0	                           test eax, eax	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x267b	     0xf8443fdffff	                            je 0x4002404	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x2681	        0x488d45e0	                   lea rax, [rbp - 0x20]	       942	am.c	FUNCTION_29	CALL_23
0x2685	      0xbe00000000	                              mov esi, 0	       942	am.c	FUNCTION_29	CALL_23
0x268a	          0x4889c7	                            mov rdi, rax	       942	am.c	FUNCTION_29	CALL_23
0x268d	      0xe827daffff	                  call sym.strbuf_setlen	       942	am.c	FUNCTION_29	CALL_23
0x2692	            0xeb2a	                           jmp 0x40026fe	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x2694	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       944	am.c	FUNCTION_29	WHILE_2	CALL_25
0x2698	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       944	am.c	FUNCTION_29	WHILE_2	CALL_25
0x269c	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       944	am.c	FUNCTION_29	WHILE_2	CALL_25
0x26a0	      0xbe01000000	                              mov esi, 1	       944	am.c	FUNCTION_29	WHILE_2	CALL_25
0x26a5	          0x4889c7	                            mov rdi, rax	       944	am.c	FUNCTION_29	WHILE_2	CALL_25
0x26a8	      0xe800000000	                          call 0x40026ed	       944	am.c	FUNCTION_29	WHILE_2	CALL_25
0x26ad	        0x488d45e0	                   lea rax, [rbp - 0x20]	       945	am.c	FUNCTION_29	WHILE_2	CALL_26
0x26b1	      0xbe00000000	                              mov esi, 0	       945	am.c	FUNCTION_29	WHILE_2	CALL_26
0x26b6	          0x4889c7	                            mov rdi, rax	       945	am.c	FUNCTION_29	WHILE_2	CALL_26
0x26b9	      0xe8fbd9ffff	                  call sym.strbuf_setlen	       945	am.c	FUNCTION_29	WHILE_2	CALL_26
0x26be	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x26c2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x26c6	      0xbe00200000	                         mov esi, 0x2000	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x26cb	          0x4889c7	                            mov rdi, rax	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x26ce	      0xe800000000	                          call 0x4002713	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x26d3	          0x4885c0	                           test rax, rax	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x26d6	            0x75bc	                           jne 0x40026d4	       943	am.c	FUNCTION_29	WHILE_2	CALL_24
0x26d8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       948	am.c	FUNCTION_29	CALL_27
0x26dc	          0x4889c7	                            mov rdi, rax	       948	am.c	FUNCTION_29	CALL_27
0x26df	      0xe800000000	                          call 0x4002724	       948	am.c	FUNCTION_29	CALL_27
0x26e4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       949	am.c	FUNCTION_29
0x26e7	        0x488b75f8	                mov rsi, qword [rbp - 8]	       950	am.c	FUNCTION_29
0x26eb	    0x644833342528	                xor rsi, qword fs:[0x28]	       950	am.c	FUNCTION_29
0x26f4	            0x7405	                            je 0x400273b	       950	am.c	FUNCTION_29
0x26f6	      0xe800000000	                          call 0x400273b	       950	am.c	FUNCTION_29
0x26fb	              0xc9	                                   leave	       950	am.c	FUNCTION_29
0x26fc	              0xc3	                                     ret	       950	am.c	FUNCTION_29
git_has_dos_drive_prefix	functions,0:DO,0:WHILE,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0	6
0x0	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_62
0x1	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_62
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_62
0x8	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_62
0xd	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_62
0xe	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_62
split_mail_stgit_series	functions,0:DO,0:WHILE,1:FOR,0:CALL,15:IF,3:SWITCH,0:ELSE,0	110
0x21ca	              0x55	                                push rbp	       846	am.c	FUNCTION_28
0x21cb	          0x4889e5	                            mov rbp, rsp	       846	am.c	FUNCTION_28
0x21ce	              0x53	                                push rbx	       846	am.c	FUNCTION_28
0x21cf	        0x4883ec78	                           sub rsp, 0x78	       846	am.c	FUNCTION_28
0x21d3	        0x48897d98	             mov qword [rbp - 0x68], rdi	       846	am.c	FUNCTION_28
0x21d7	        0x48897590	             mov qword [rbp - 0x70], rsi	       846	am.c	FUNCTION_28
0x21db	          0x89558c	             mov dword [rbp - 0x74], edx	       846	am.c	FUNCTION_28
0x21de	    0x64488b042528	                mov rax, qword fs:[0x28]	       846	am.c	FUNCTION_28
0x21e7	        0x488945e8	             mov qword [rbp - 0x18], rax	       846	am.c	FUNCTION_28
0x21eb	            0x31c0	                            xor eax, eax	       846	am.c	FUNCTION_28
0x21ed	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       850	am.c	FUNCTION_28
0x21f5	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       850	am.c	FUNCTION_28
0x21fc	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       850	am.c	FUNCTION_28
0x2203	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       851	am.c	FUNCTION_28
0x220b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       851	am.c	FUNCTION_28
0x2213	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       851	am.c	FUNCTION_28
0x221b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       854	am.c	FUNCTION_28	IF_1
0x221f	          0x488b00	                    mov rax, qword [rax]	       854	am.c	FUNCTION_28	IF_1
0x2222	          0x4885c0	                           test rax, rax	       854	am.c	FUNCTION_28	IF_1
0x2225	            0x7410	                            je 0x4002277	       854	am.c	FUNCTION_28	IF_1
0x2227	        0x488b4590	             mov rax, qword [rbp - 0x70]	       854	am.c	FUNCTION_28	IF_1
0x222b	        0x4883c008	                              add rax, 8	       854	am.c	FUNCTION_28	IF_1
0x222f	          0x488b00	                    mov rax, qword [rax]	       854	am.c	FUNCTION_28	IF_1
0x2232	          0x4885c0	                           test rax, rax	       854	am.c	FUNCTION_28	IF_1
0x2235	            0x7421	                            je 0x4002298	       854	am.c	FUNCTION_28	IF_1
0x2237	      0xbf00000000	                              mov edi, 0	       855	am.c	FUNCTION_28	CALL_2
0x223c	      0xe8b5dfffff	                               call sym.	       855	am.c	FUNCTION_28	CALL_2
0x2241	          0x4889c7	                            mov rdi, rax	       855	am.c	FUNCTION_28	CALL_2
0x2244	      0xb800000000	                              mov eax, 0	       855	am.c	FUNCTION_28	CALL_2
0x2249	      0xe800000000	                          call 0x400228e	       855	am.c	FUNCTION_28	CALL_2
0x224e	      0xe8cfddffff	                    call sym.const_error	       855	am.c	FUNCTION_28	CALL_2
0x2253	      0xe90b010000	                           jmp 0x40023a3	       855	am.c	FUNCTION_28	CALL_2
0x2258	        0x488b4590	             mov rax, qword [rbp - 0x70]	       857	am.c	FUNCTION_28	CALL_3
0x225c	          0x488b00	                    mov rax, qword [rax]	       857	am.c	FUNCTION_28	CALL_3
0x225f	          0x4889c7	                            mov rdi, rax	       857	am.c	FUNCTION_28	CALL_3
0x2262	      0xe800000000	                          call 0x40022a7	       857	am.c	FUNCTION_28	CALL_3
0x2267	        0x488945a8	             mov qword [rbp - 0x58], rax	       857	am.c	FUNCTION_28	CALL_3
0x226b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       858	am.c	FUNCTION_28	CALL_4
0x226f	          0x4889c7	                            mov rdi, rax	       858	am.c	FUNCTION_28	CALL_4
0x2272	      0xe800000000	                          call 0x40022b7	       858	am.c	FUNCTION_28	CALL_4
0x2277	        0x488945b0	             mov qword [rbp - 0x50], rax	       858	am.c	FUNCTION_28	CALL_4
0x227b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       860	am.c	FUNCTION_28	CALL_5
0x227f	          0x488b00	                    mov rax, qword [rax]	       860	am.c	FUNCTION_28	CALL_5
0x2282	      0xbe00000000	                              mov esi, 0	       860	am.c	FUNCTION_28	CALL_5
0x2287	          0x4889c7	                            mov rdi, rax	       860	am.c	FUNCTION_28	CALL_5
0x228a	      0xe800000000	                          call 0x40022cf	       860	am.c	FUNCTION_28	CALL_5
0x228f	        0x488945b8	             mov qword [rbp - 0x48], rax	       860	am.c	FUNCTION_28	CALL_5
0x2293	      0x48837db800	               cmp qword [rbp - 0x48], 0	       861	am.c	FUNCTION_28	IF_2
0x2298	            0x7564	                           jne 0x400233e	       861	am.c	FUNCTION_28	IF_2
0x229a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       862	am.c	FUNCTION_28	CALL_7
0x229e	          0x488b18	                    mov rbx, qword [rax]	       862	am.c	FUNCTION_28	CALL_7
0x22a1	      0xbf00000000	                              mov edi, 0	       862	am.c	FUNCTION_28	CALL_7
0x22a6	      0xe84bdfffff	                               call sym.	       862	am.c	FUNCTION_28	CALL_7
0x22ab	          0x4889de	                            mov rsi, rbx	       862	am.c	FUNCTION_28	CALL_7
0x22ae	          0x4889c7	                            mov rdi, rax	       862	am.c	FUNCTION_28	CALL_7
0x22b1	      0xb800000000	                              mov eax, 0	       862	am.c	FUNCTION_28	CALL_7
0x22b6	      0xe800000000	                          call 0x40022fb	       862	am.c	FUNCTION_28	CALL_7
0x22bb	      0xe862ddffff	                    call sym.const_error	       862	am.c	FUNCTION_28	CALL_7
0x22c0	      0xe99e000000	                           jmp 0x40023a3	       862	am.c	FUNCTION_28	CALL_7
0x22c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x22c9	           0xfb600	                   movzx eax, byte [rax]	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x22cc	            0x3c23	                            cmp al, 0x23	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x22ce	            0x7502	                           jne 0x4002312	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x22d0	            0xeb2c	                           jmp 0x400233e	       866	am.c	FUNCTION_28	WHILE_1	IF_3
0x22d2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22da	          0x4889c6	                            mov rsi, rax	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22dd	      0xbf00000000	                              mov edi, 0	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22e2	      0xb800000000	                              mov eax, 0	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22e7	      0xe800000000	                          call 0x400232c	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22ec	          0x4889c2	                            mov rdx, rax	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22ef	        0x488d45c0	                   lea rax, [rbp - 0x40]	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22f3	          0x4889d6	                            mov rsi, rdx	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22f6	          0x4889c7	                            mov rdi, rax	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22f9	      0xe800000000	                          call 0x400233e	       868	am.c	FUNCTION_28	WHILE_1	CALL_10
0x22fe	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       864	am.c	FUNCTION_28	WHILE_1	CALL_8
0x2302	        0x488d45d0	                   lea rax, [rbp - 0x30]	       864	am.c	FUNCTION_28	WHILE_1	CALL_8
0x2306	          0x4889d6	                            mov rsi, rdx	       864	am.c	FUNCTION_28	WHILE_1	CALL_8
0x2309	          0x4889c7	                            mov rdi, rax	       864	am.c	FUNCTION_28	WHILE_1	CALL_8
0x230c	      0xe800000000	                          call 0x4002351	       864	am.c	FUNCTION_28	WHILE_1	CALL_8
0x2311	            0x85c0	                           test eax, eax	       864	am.c	FUNCTION_28	WHILE_1	CALL_8
0x2313	            0x74b0	                            je 0x4002305	       864	am.c	FUNCTION_28	WHILE_1	CALL_8
0x2315	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       871	am.c	FUNCTION_28	CALL_11
0x2319	          0x4889c7	                            mov rdi, rax	       871	am.c	FUNCTION_28	CALL_11
0x231c	      0xe800000000	                          call 0x4002361	       871	am.c	FUNCTION_28	CALL_11
0x2321	        0x488d45d0	                   lea rax, [rbp - 0x30]	       872	am.c	FUNCTION_28	CALL_12
0x2325	          0x4889c7	                            mov rdi, rax	       872	am.c	FUNCTION_28	CALL_12
0x2328	      0xe800000000	                          call 0x400236d	       872	am.c	FUNCTION_28	CALL_12
0x232d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       873	am.c	FUNCTION_28	CALL_13
0x2331	          0x4889c7	                            mov rdi, rax	       873	am.c	FUNCTION_28	CALL_13
0x2334	      0xe800000000	                          call 0x4002379	       873	am.c	FUNCTION_28	CALL_13
0x2339	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       875	am.c	FUNCTION_28	CALL_14
0x233d	          0x8b4d8c	             mov ecx, dword [rbp - 0x74]	       875	am.c	FUNCTION_28	CALL_14
0x2340	        0x488b4598	             mov rax, qword [rbp - 0x68]	       875	am.c	FUNCTION_28	CALL_14
0x2344	          0x4889c6	                            mov rsi, rax	       875	am.c	FUNCTION_28	CALL_14
0x2347	      0xbf00000000	                              mov edi, 0	       875	am.c	FUNCTION_28	CALL_14
0x234c	      0xe8edfaffff	                call sym.split_mail_conv	       875	am.c	FUNCTION_28	CALL_14
0x2351	          0x8945a4	             mov dword [rbp - 0x5c], eax	       875	am.c	FUNCTION_28	CALL_14
0x2354	        0x488d45c0	                   lea rax, [rbp - 0x40]	       877	am.c	FUNCTION_28	CALL_15
0x2358	          0x4889c7	                            mov rdi, rax	       877	am.c	FUNCTION_28	CALL_15
0x235b	      0xe800000000	                          call 0x40023a0	       877	am.c	FUNCTION_28	CALL_15
0x2360	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       878	am.c	FUNCTION_28
0x2363	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       879	am.c	FUNCTION_28
0x2367	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       879	am.c	FUNCTION_28
0x2370	            0x7405	                            je 0x40023b7	       879	am.c	FUNCTION_28
0x2372	      0xe800000000	                          call 0x40023b7	       879	am.c	FUNCTION_28
0x2377	        0x4883c478	                           add rsp, 0x78	       879	am.c	FUNCTION_28
0x237b	              0x5b	                                 pop rbx	       879	am.c	FUNCTION_28
0x237c	              0x5d	                                 pop rbp	       879	am.c	FUNCTION_28
0x237d	              0xc3	                                     ret	       879	am.c	FUNCTION_28
const_error	functions,0:DO,0:WHILE,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0	5
0x22	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_67
0x23	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_67
0x26	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_67
0x2b	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_67
0x2c	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_67
build_fake_ancestor	functions,0:DO,0:WHILE,0:FOR,0:CALL,6:IF,1:SWITCH,0:ELSE,0	62
0x3fe4	              0x55	                                push rbp	      1518	am.c	FUNCTION_44
0x3fe5	          0x4889e5	                            mov rbp, rsp	      1518	am.c	FUNCTION_44
0x3fe8	        0x4883c480	             add rsp, 0xffffffffffffff80	      1518	am.c	FUNCTION_44
0x3fec	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1518	am.c	FUNCTION_44
0x3ff0	        0x48897580	             mov qword [rbp - 0x80], rsi	      1518	am.c	FUNCTION_44
0x3ff4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1518	am.c	FUNCTION_44
0x3ffd	        0x488945f8	                mov qword [rbp - 8], rax	      1518	am.c	FUNCTION_44
0x4001	            0x31c0	                            xor eax, eax	      1518	am.c	FUNCTION_44
0x4003	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1519	am.c	FUNCTION_44
0x4007	      0xb800000000	                              mov eax, 0	      1519	am.c	FUNCTION_44
0x400c	      0xb90c000000	                            mov ecx, 0xc	      1519	am.c	FUNCTION_44
0x4011	          0x4889d7	                            mov rdi, rdx	      1519	am.c	FUNCTION_44
0x4014	          0xf348ab	              rep stosq qword [rdi], rax	      1519	am.c	FUNCTION_44
0x4017	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1519	am.c	FUNCTION_44
0x401f	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1519	am.c	FUNCTION_44
0x4027	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	      1521	am.c	FUNCTION_44
0x402b	          0x83c808	                               or eax, 8	      1521	am.c	FUNCTION_44
0x402e	          0x8845d8	               mov byte [rbp - 0x28], al	      1521	am.c	FUNCTION_44
0x4031	        0x488d4590	                   lea rax, [rbp - 0x70]	      1522	am.c	FUNCTION_44	CALL_1
0x4035	        0x4883c008	                              add rax, 8	      1522	am.c	FUNCTION_44	CALL_1
0x4039	      0xbe00000000	                              mov esi, 0	      1522	am.c	FUNCTION_44	CALL_1
0x403e	          0x4889c7	                            mov rdi, rax	      1522	am.c	FUNCTION_44	CALL_1
0x4041	      0xe800000000	                          call 0x4004086	      1522	am.c	FUNCTION_44	CALL_1
0x4046	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1523	am.c	FUNCTION_44	CALL_2
0x404a	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1523	am.c	FUNCTION_44	CALL_2
0x404e	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1523	am.c	FUNCTION_44	CALL_2
0x4052	        0x4883c208	                              add rdx, 8	      1523	am.c	FUNCTION_44	CALL_2
0x4056	          0x4889c6	                            mov rsi, rax	      1523	am.c	FUNCTION_44	CALL_2
0x4059	          0x4889d7	                            mov rdi, rdx	      1523	am.c	FUNCTION_44	CALL_2
0x405c	      0xe800000000	                          call 0x40040a1	      1523	am.c	FUNCTION_44	CALL_2
0x4061	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1524	am.c	FUNCTION_44	CALL_3
0x4065	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1524	am.c	FUNCTION_44	CALL_3
0x4069	        0x488d4a08	                      lea rcx, [rdx + 8]	      1524	am.c	FUNCTION_44	CALL_3
0x406d	          0x4889c2	                            mov rdx, rax	      1524	am.c	FUNCTION_44	CALL_3
0x4070	      0xbe00000000	                              mov esi, 0	      1524	am.c	FUNCTION_44	CALL_3
0x4075	          0x4889cf	                            mov rdi, rcx	      1524	am.c	FUNCTION_44	CALL_3
0x4078	      0xb800000000	                              mov eax, 0	      1524	am.c	FUNCTION_44	CALL_3
0x407d	      0xe800000000	                          call 0x40040c2	      1524	am.c	FUNCTION_44	CALL_3
0x4082	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1525	am.c	FUNCTION_44	CALL_5
0x4086	      0xbe00000000	                              mov esi, 0	      1525	am.c	FUNCTION_44	CALL_5
0x408b	          0x4889c7	                            mov rdi, rax	      1525	am.c	FUNCTION_44	CALL_5
0x408e	      0xe8a4c5ffff	                        call sym.am_path	      1525	am.c	FUNCTION_44	CALL_5
0x4093	          0x4889c2	                            mov rdx, rax	      1525	am.c	FUNCTION_44	CALL_5
0x4096	        0x488d4590	                   lea rax, [rbp - 0x70]	      1525	am.c	FUNCTION_44	CALL_5
0x409a	        0x4883c008	                              add rax, 8	      1525	am.c	FUNCTION_44	CALL_5
0x409e	          0x4889d6	                            mov rsi, rdx	      1525	am.c	FUNCTION_44	CALL_5
0x40a1	          0x4889c7	                            mov rdi, rax	      1525	am.c	FUNCTION_44	CALL_5
0x40a4	      0xe800000000	                          call 0x40040e9	      1525	am.c	FUNCTION_44	CALL_5
0x40a9	        0x488d4590	                   lea rax, [rbp - 0x70]	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40ad	          0x4889c7	                            mov rdi, rax	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40b0	      0xe800000000	                          call 0x40040f5	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40b5	            0x85c0	                           test eax, eax	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40b7	            0x7407	                            je 0x4004100	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40b9	      0xb8ffffffff	                     mov eax, 0xffffffff	      1528	am.c	FUNCTION_44	IF_1
0x40be	            0xeb05	                           jmp 0x4004105	      1528	am.c	FUNCTION_44	IF_1
0x40c0	      0xb800000000	                              mov eax, 0	      1530	am.c	FUNCTION_44
0x40c5	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1531	am.c	FUNCTION_44
0x40c9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1531	am.c	FUNCTION_44
0x40d2	            0x7405	                            je 0x4004119	      1531	am.c	FUNCTION_44
0x40d4	      0xe800000000	                          call 0x4004119	      1531	am.c	FUNCTION_44
0x40d9	              0xc9	                                   leave	      1531	am.c	FUNCTION_44
0x40da	              0xc3	                                     ret	      1531	am.c	FUNCTION_44
am_load	functions,0:DO,0:WHILE,0:FOR,0:CALL,45:IF,11:SWITCH,0:ELSE,6	301
0xf37	              0x55	                                push rbp	       402	am.c	FUNCTION_18
0xf38	          0x4889e5	                            mov rbp, rsp	       402	am.c	FUNCTION_18
0xf3b	              0x53	                                push rbx	       402	am.c	FUNCTION_18
0xf3c	        0x4883ec38	                           sub rsp, 0x38	       402	am.c	FUNCTION_18
0xf40	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       402	am.c	FUNCTION_18
0xf44	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	am.c	FUNCTION_18
0xf4d	        0x488945e8	             mov qword [rbp - 0x18], rax	       402	am.c	FUNCTION_18
0xf51	            0x31c0	                            xor eax, eax	       402	am.c	FUNCTION_18
0xf53	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       403	am.c	FUNCTION_18
0xf5b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       403	am.c	FUNCTION_18
0xf63	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       403	am.c	FUNCTION_18
0xf6b	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf6f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf73	      0xb901000000	                              mov ecx, 1	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf78	      0xba00000000	                              mov edx, 0	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf7d	          0x4889c7	                            mov rdi, rax	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf80	      0xe89df9ffff	                call sym.read_state_file	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf85	            0x85c0	                           test eax, eax	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf87	            0x790f	                           jns 0x4000fd8	       405	am.c	FUNCTION_18	IF_1	CALL_1
0xf89	      0xbf00000000	                              mov edi, 0	       406	am.c	FUNCTION_18	CALL_2
0xf8e	      0xb800000000	                              mov eax, 0	       406	am.c	FUNCTION_18	CALL_2
0xf93	      0xe800000000	                          call 0x4000fd8	       406	am.c	FUNCTION_18	CALL_2
0xf98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       407	am.c	FUNCTION_18	CALL_3
0xf9c	      0xba0a000000	                            mov edx, 0xa	       407	am.c	FUNCTION_18	CALL_3
0xfa1	      0xbe00000000	                              mov esi, 0	       407	am.c	FUNCTION_18	CALL_3
0xfa6	          0x4889c7	                            mov rdi, rax	       407	am.c	FUNCTION_18	CALL_3
0xfa9	      0xe800000000	                          call 0x4000fee	       407	am.c	FUNCTION_18	CALL_3
0xfae	            0x89c2	                            mov edx, eax	       407	am.c	FUNCTION_18	CALL_3
0xfb0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       407	am.c	FUNCTION_18	CALL_3
0xfb4	          0x895008	                mov dword [rax + 8], edx	       407	am.c	FUNCTION_18	CALL_3
0xfb7	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfbb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfbf	      0xb901000000	                              mov ecx, 1	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfc4	      0xba00000000	                              mov edx, 0	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfc9	          0x4889c7	                            mov rdi, rax	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfcc	      0xe851f9ffff	                call sym.read_state_file	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfd1	            0x85c0	                           test eax, eax	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfd3	            0x790f	                           jns 0x4001024	       409	am.c	FUNCTION_18	IF_2	CALL_4
0xfd5	      0xbf00000000	                              mov edi, 0	       410	am.c	FUNCTION_18	CALL_5
0xfda	      0xb800000000	                              mov eax, 0	       410	am.c	FUNCTION_18	CALL_5
0xfdf	      0xe800000000	                          call 0x4001024	       410	am.c	FUNCTION_18	CALL_5
0xfe4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	am.c	FUNCTION_18	CALL_6
0xfe8	      0xba0a000000	                            mov edx, 0xa	       411	am.c	FUNCTION_18	CALL_6
0xfed	      0xbe00000000	                              mov esi, 0	       411	am.c	FUNCTION_18	CALL_6
0xff2	          0x4889c7	                            mov rdi, rax	       411	am.c	FUNCTION_18	CALL_6
0xff5	      0xe800000000	                          call 0x400103a	       411	am.c	FUNCTION_18	CALL_6
0xffa	            0x89c2	                            mov edx, eax	       411	am.c	FUNCTION_18	CALL_6
0xffc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       411	am.c	FUNCTION_18	CALL_6
0x1000	          0x89500c	              mov dword [rax + 0xc], edx	       411	am.c	FUNCTION_18	CALL_6
0x1003	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x1007	          0x4889c7	                            mov rdi, rax	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x100a	      0xe8b3faffff	             call sym.read_author_script	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x100f	            0x85c0	                           test eax, eax	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x1011	            0x7917	                           jns 0x400106a	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x1013	      0xbf00000000	                              mov edi, 0	       414	am.c	FUNCTION_18	CALL_9
0x1018	      0xe8d9f1ffff	                               call sym.	       414	am.c	FUNCTION_18	CALL_9
0x101d	          0x4889c7	                            mov rdi, rax	       414	am.c	FUNCTION_18	CALL_9
0x1020	      0xb800000000	                              mov eax, 0	       414	am.c	FUNCTION_18	CALL_9
0x1025	      0xe800000000	                          call 0x400106a	       414	am.c	FUNCTION_18	CALL_9
0x102a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       416	am.c	FUNCTION_18	CALL_10
0x102e	          0x4889c7	                            mov rdi, rax	       416	am.c	FUNCTION_18	CALL_10
0x1031	      0xe8f7fdffff	                call sym.read_commit_msg	       416	am.c	FUNCTION_18	CALL_10
0x1036	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x103a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x103e	      0xb901000000	                              mov ecx, 1	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x1043	      0xba00000000	                              mov edx, 0	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x1048	          0x4889c7	                            mov rdi, rax	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x104b	      0xe8d2f8ffff	                call sym.read_state_file	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x1050	            0x85c0	                           test eax, eax	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x1052	            0x7912	                           jns 0x40010a6	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x1054	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       419	am.c	FUNCTION_18	CALL_12
0x1058	        0x4883c038	                           add rax, 0x38	       419	am.c	FUNCTION_18	CALL_12
0x105c	          0x4889c7	                            mov rdi, rax	       419	am.c	FUNCTION_18	CALL_12
0x105f	      0xe885f2ffff	                         call sym.oidclr	       419	am.c	FUNCTION_18	CALL_12
0x1064	            0xeb49	                           jmp 0x40010ef	       419	am.c	FUNCTION_18	CALL_12
0x1066	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x106a	        0x488d5038	                   lea rdx, [rax + 0x38]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x106e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x1072	          0x4889d6	                            mov rsi, rdx	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x1075	          0x4889c7	                            mov rdi, rax	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x1078	      0xe800000000	                          call 0x40010bd	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x107d	            0x85c0	                           test eax, eax	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x107f	            0x792e	                           jns 0x40010ef	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x1081	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x1085	      0xbe00000000	                              mov esi, 0	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x108a	          0x4889c7	                            mov rdi, rax	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x108d	      0xe8a5f5ffff	                        call sym.am_path	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x1092	          0x4889c3	                            mov rbx, rax	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x1095	      0xbf00000000	                              mov edi, 0	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x109a	      0xe857f1ffff	                               call sym.	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x109f	          0x4889de	                            mov rsi, rbx	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x10a2	          0x4889c7	                            mov rdi, rax	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x10a5	      0xb800000000	                              mov eax, 0	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x10aa	      0xe800000000	                          call 0x40010ef	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x10af	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       423	am.c	FUNCTION_18	CALL_17
0x10b3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       423	am.c	FUNCTION_18	CALL_17
0x10b7	      0xb901000000	                              mov ecx, 1	       423	am.c	FUNCTION_18	CALL_17
0x10bc	      0xba00000000	                              mov edx, 0	       423	am.c	FUNCTION_18	CALL_17
0x10c1	          0x4889c7	                            mov rdi, rax	       423	am.c	FUNCTION_18	CALL_17
0x10c4	      0xe859f8ffff	                call sym.read_state_file	       423	am.c	FUNCTION_18	CALL_17
0x10c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       424	am.c	FUNCTION_18	CALL_18
0x10cd	      0xbe00000000	                              mov esi, 0	       424	am.c	FUNCTION_18	CALL_18
0x10d2	          0x4889c7	                            mov rdi, rax	       424	am.c	FUNCTION_18	CALL_18
0x10d5	      0xe800000000	                          call 0x400111a	       424	am.c	FUNCTION_18	CALL_18
0x10da	            0x85c0	                           test eax, eax	       424	am.c	FUNCTION_18	CALL_18
0x10dc	           0xf94c0	                                 sete al	       424	am.c	FUNCTION_18	CALL_18
0x10df	           0xfb6d0	                           movzx edx, al	       424	am.c	FUNCTION_18	CALL_18
0x10e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       424	am.c	FUNCTION_18	CALL_18
0x10e6	          0x895054	             mov dword [rax + 0x54], edx	       424	am.c	FUNCTION_18	CALL_18
0x10e9	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       426	am.c	FUNCTION_18	CALL_19
0x10ed	        0x488d45d0	                   lea rax, [rbp - 0x30]	       426	am.c	FUNCTION_18	CALL_19
0x10f1	      0xb901000000	                              mov ecx, 1	       426	am.c	FUNCTION_18	CALL_19
0x10f6	      0xba00000000	                              mov edx, 0	       426	am.c	FUNCTION_18	CALL_19
0x10fb	          0x4889c7	                            mov rdi, rax	       426	am.c	FUNCTION_18	CALL_19
0x10fe	      0xe81ff8ffff	                call sym.read_state_file	       426	am.c	FUNCTION_18	CALL_19
0x1103	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       427	am.c	FUNCTION_18	CALL_20
0x1107	      0xbe00000000	                              mov esi, 0	       427	am.c	FUNCTION_18	CALL_20
0x110c	          0x4889c7	                            mov rdi, rax	       427	am.c	FUNCTION_18	CALL_20
0x110f	      0xe800000000	                          call 0x4001154	       427	am.c	FUNCTION_18	CALL_20
0x1114	            0x85c0	                           test eax, eax	       427	am.c	FUNCTION_18	CALL_20
0x1116	           0xf94c0	                                 sete al	       427	am.c	FUNCTION_18	CALL_20
0x1119	           0xfb6d0	                           movzx edx, al	       427	am.c	FUNCTION_18	CALL_20
0x111c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       427	am.c	FUNCTION_18	CALL_20
0x1120	          0x895058	             mov dword [rax + 0x58], edx	       427	am.c	FUNCTION_18	CALL_20
0x1123	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       429	am.c	FUNCTION_18	CALL_21
0x1127	        0x488d45d0	                   lea rax, [rbp - 0x30]	       429	am.c	FUNCTION_18	CALL_21
0x112b	      0xb901000000	                              mov ecx, 1	       429	am.c	FUNCTION_18	CALL_21
0x1130	      0xba00000000	                              mov edx, 0	       429	am.c	FUNCTION_18	CALL_21
0x1135	          0x4889c7	                            mov rdi, rax	       429	am.c	FUNCTION_18	CALL_21
0x1138	      0xe8e5f7ffff	                call sym.read_state_file	       429	am.c	FUNCTION_18	CALL_21
0x113d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       430	am.c	FUNCTION_18	CALL_22
0x1141	      0xbe00000000	                              mov esi, 0	       430	am.c	FUNCTION_18	CALL_22
0x1146	          0x4889c7	                            mov rdi, rax	       430	am.c	FUNCTION_18	CALL_22
0x1149	      0xe800000000	                          call 0x400118e	       430	am.c	FUNCTION_18	CALL_22
0x114e	            0x85c0	                           test eax, eax	       430	am.c	FUNCTION_18	CALL_22
0x1150	           0xf94c0	                                 sete al	       430	am.c	FUNCTION_18	CALL_22
0x1153	           0xfb6d0	                           movzx edx, al	       430	am.c	FUNCTION_18	CALL_22
0x1156	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       430	am.c	FUNCTION_18	CALL_22
0x115a	          0x89505c	             mov dword [rax + 0x5c], edx	       430	am.c	FUNCTION_18	CALL_22
0x115d	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       432	am.c	FUNCTION_18	CALL_23
0x1161	        0x488d45d0	                   lea rax, [rbp - 0x30]	       432	am.c	FUNCTION_18	CALL_23
0x1165	      0xb901000000	                              mov ecx, 1	       432	am.c	FUNCTION_18	CALL_23
0x116a	      0xba00000000	                              mov edx, 0	       432	am.c	FUNCTION_18	CALL_23
0x116f	          0x4889c7	                            mov rdi, rax	       432	am.c	FUNCTION_18	CALL_23
0x1172	      0xe8abf7ffff	                call sym.read_state_file	       432	am.c	FUNCTION_18	CALL_23
0x1177	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       433	am.c	FUNCTION_18	CALL_24
0x117b	      0xbe00000000	                              mov esi, 0	       433	am.c	FUNCTION_18	CALL_24
0x1180	          0x4889c7	                            mov rdi, rax	       433	am.c	FUNCTION_18	CALL_24
0x1183	      0xe800000000	                          call 0x40011c8	       433	am.c	FUNCTION_18	CALL_24
0x1188	            0x85c0	                           test eax, eax	       433	am.c	FUNCTION_18	CALL_24
0x118a	           0xf94c0	                                 sete al	       433	am.c	FUNCTION_18	CALL_24
0x118d	           0xfb6d0	                           movzx edx, al	       433	am.c	FUNCTION_18	CALL_24
0x1190	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       433	am.c	FUNCTION_18	CALL_24
0x1194	          0x895060	             mov dword [rax + 0x60], edx	       433	am.c	FUNCTION_18	CALL_24
0x1197	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x119b	      0xbe00000000	                              mov esi, 0	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x11a0	          0x4889c7	                            mov rdi, rax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x11a3	      0xe88ff4ffff	                        call sym.am_path	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x11a8	          0x4889c7	                            mov rdi, rax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x11ab	      0xe800000000	                          call 0x40011f0	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x11b0	            0x85c0	                           test eax, eax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x11b2	            0x7447	                            je 0x400123b	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x11b4	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x11b8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x11bc	      0xb901000000	                              mov ecx, 1	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x11c1	      0xba00000000	                              mov edx, 0	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x11c6	          0x4889c7	                            mov rdi, rax	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x11c9	      0xe854f7ffff	                call sym.read_state_file	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x11ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x11d2	      0xbe00000000	                              mov esi, 0	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x11d7	          0x4889c7	                            mov rdi, rax	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x11da	      0xe800000000	                          call 0x400121f	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x11df	            0x85c0	                           test eax, eax	       438	am.c	FUNCTION_18	IF_6
0x11e1	            0x7407	                            je 0x400122a	       438	am.c	FUNCTION_18	IF_6
0x11e3	      0xba02000000	                              mov edx, 2	       438	am.c	FUNCTION_18	IF_6
0x11e8	            0xeb05	                           jmp 0x400122f	       438	am.c	FUNCTION_18	IF_6
0x11ea	      0xba01000000	                              mov edx, 1	       438	am.c	FUNCTION_18	IF_6
0x11ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x11f3	    0x899090000000	             mov dword [rax + 0x90], edx	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x11f9	            0xeb0e	                           jmp 0x4001249	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x11fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       440	am.c	FUNCTION_18	ELSE_2
0x11ff	    0xc78090000000	               mov dword [rax + 0x90], 0	       440	am.c	FUNCTION_18	ELSE_2
0x1209	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       443	am.c	FUNCTION_18	CALL_29
0x120d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       443	am.c	FUNCTION_18	CALL_29
0x1211	      0xb901000000	                              mov ecx, 1	       443	am.c	FUNCTION_18	CALL_29
0x1216	      0xba00000000	                              mov edx, 0	       443	am.c	FUNCTION_18	CALL_29
0x121b	          0x4889c7	                            mov rdi, rax	       443	am.c	FUNCTION_18	CALL_29
0x121e	      0xe8fff6ffff	                call sym.read_state_file	       443	am.c	FUNCTION_18	CALL_29
0x1223	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x1227	      0xbe00000000	                              mov esi, 0	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x122c	          0x4889c7	                            mov rdi, rax	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x122f	      0xe800000000	                          call 0x4001274	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x1234	            0x85c0	                           test eax, eax	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x1236	            0x750d	                           jne 0x4001285	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x1238	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       445	am.c	FUNCTION_18	IF_7
0x123c	    0xc74064010000	               mov dword [rax + 0x64], 1	       445	am.c	FUNCTION_18	IF_7
0x1243	            0xeb2d	                           jmp 0x40012b2	       445	am.c	FUNCTION_18	IF_7
0x1245	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x1249	      0xbe00000000	                              mov esi, 0	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x124e	          0x4889c7	                            mov rdi, rax	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x1251	      0xe800000000	                          call 0x4001296	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x1256	            0x85c0	                           test eax, eax	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x1258	            0x750d	                           jne 0x40012a7	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x125a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x125e	    0xc74064020000	               mov dword [rax + 0x64], 2	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x1265	            0xeb0b	                           jmp 0x40012b2	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x1267	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       449	am.c	FUNCTION_18	ELSE_4
0x126b	    0xc74064000000	               mov dword [rax + 0x64], 0	       449	am.c	FUNCTION_18	ELSE_4
0x1272	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       451	am.c	FUNCTION_18	CALL_32
0x1276	        0x488d45d0	                   lea rax, [rbp - 0x30]	       451	am.c	FUNCTION_18	CALL_32
0x127a	      0xb901000000	                              mov ecx, 1	       451	am.c	FUNCTION_18	CALL_32
0x127f	      0xba00000000	                              mov edx, 0	       451	am.c	FUNCTION_18	CALL_32
0x1284	          0x4889c7	                            mov rdi, rax	       451	am.c	FUNCTION_18	CALL_32
0x1287	      0xe896f6ffff	                call sym.read_state_file	       451	am.c	FUNCTION_18	CALL_32
0x128c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       452	am.c	FUNCTION_18	CALL_33
0x1290	      0xbe00000000	                              mov esi, 0	       452	am.c	FUNCTION_18	CALL_33
0x1295	          0x4889c7	                            mov rdi, rax	       452	am.c	FUNCTION_18	CALL_33
0x1298	      0xe800000000	                          call 0x40012dd	       452	am.c	FUNCTION_18	CALL_33
0x129d	            0x85c0	                           test eax, eax	       452	am.c	FUNCTION_18	CALL_33
0x129f	           0xf94c0	                                 sete al	       452	am.c	FUNCTION_18	CALL_33
0x12a2	           0xfb6d0	                           movzx edx, al	       452	am.c	FUNCTION_18	CALL_33
0x12a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       452	am.c	FUNCTION_18	CALL_33
0x12a9	          0x895068	             mov dword [rax + 0x68], edx	       452	am.c	FUNCTION_18	CALL_33
0x12ac	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       454	am.c	FUNCTION_18	CALL_34
0x12b0	        0x488d45d0	                   lea rax, [rbp - 0x30]	       454	am.c	FUNCTION_18	CALL_34
0x12b4	      0xb901000000	                              mov ecx, 1	       454	am.c	FUNCTION_18	CALL_34
0x12b9	      0xba00000000	                              mov edx, 0	       454	am.c	FUNCTION_18	CALL_34
0x12be	          0x4889c7	                            mov rdi, rax	       454	am.c	FUNCTION_18	CALL_34
0x12c1	      0xe85cf6ffff	                call sym.read_state_file	       454	am.c	FUNCTION_18	CALL_34
0x12c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x12ca	      0xbe00000000	                              mov esi, 0	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x12cf	          0x4889c7	                            mov rdi, rax	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x12d2	      0xe800000000	                          call 0x4001317	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x12d7	            0x85c0	                           test eax, eax	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x12d9	            0x750d	                           jne 0x4001328	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x12db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       456	am.c	FUNCTION_18	IF_9
0x12df	    0xc7406c010000	               mov dword [rax + 0x6c], 1	       456	am.c	FUNCTION_18	IF_9
0x12e6	            0xeb2d	                           jmp 0x4001355	       456	am.c	FUNCTION_18	IF_9
0x12e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x12ec	      0xbe00000000	                              mov esi, 0	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x12f1	          0x4889c7	                            mov rdi, rax	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x12f4	      0xe800000000	                          call 0x4001339	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x12f9	            0x85c0	                           test eax, eax	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x12fb	            0x750d	                           jne 0x400134a	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x12fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x1301	    0xc7406c000000	               mov dword [rax + 0x6c], 0	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x1308	            0xeb0b	                           jmp 0x4001355	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x130a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       460	am.c	FUNCTION_18	ELSE_6
0x130e	    0xc7406cffffff	     mov dword [rax + 0x6c], 0xffffffff 	       460	am.c	FUNCTION_18	ELSE_6
0x1315	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       462	am.c	FUNCTION_18	CALL_37
0x1319	        0x488d45d0	                   lea rax, [rbp - 0x30]	       462	am.c	FUNCTION_18	CALL_37
0x131d	      0xb901000000	                              mov ecx, 1	       462	am.c	FUNCTION_18	CALL_37
0x1322	      0xba00000000	                              mov edx, 0	       462	am.c	FUNCTION_18	CALL_37
0x1327	          0x4889c7	                            mov rdi, rax	       462	am.c	FUNCTION_18	CALL_37
0x132a	      0xe8f3f5ffff	                call sym.read_state_file	       462	am.c	FUNCTION_18	CALL_37
0x132f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       463	am.c	FUNCTION_18	CALL_38
0x1333	        0x4883c070	                           add rax, 0x70	       463	am.c	FUNCTION_18	CALL_38
0x1337	          0x4889c7	                            mov rdi, rax	       463	am.c	FUNCTION_18	CALL_38
0x133a	      0xe800000000	                          call 0x400137f	       463	am.c	FUNCTION_18	CALL_38
0x133f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x1343	        0x488d5070	                   lea rdx, [rax + 0x70]	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x1347	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x134b	          0x4889d6	                            mov rsi, rdx	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x134e	          0x4889c7	                            mov rdi, rax	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x1351	      0xe800000000	                          call 0x4001396	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x1356	            0x85c0	                           test eax, eax	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x1358	            0x792e	                           jns 0x40013c8	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x135a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       465	am.c	FUNCTION_18	CALL_42
0x135e	      0xbe00000000	                              mov esi, 0	       465	am.c	FUNCTION_18	CALL_42
0x1363	          0x4889c7	                            mov rdi, rax	       465	am.c	FUNCTION_18	CALL_42
0x1366	      0xe8ccf2ffff	                        call sym.am_path	       465	am.c	FUNCTION_18	CALL_42
0x136b	          0x4889c3	                            mov rbx, rax	       465	am.c	FUNCTION_18	CALL_42
0x136e	      0xbf00000000	                              mov edi, 0	       465	am.c	FUNCTION_18	CALL_42
0x1373	      0xe87eeeffff	                               call sym.	       465	am.c	FUNCTION_18	CALL_42
0x1378	          0x4889de	                            mov rsi, rbx	       465	am.c	FUNCTION_18	CALL_42
0x137b	          0x4889c7	                            mov rdi, rax	       465	am.c	FUNCTION_18	CALL_42
0x137e	      0xb800000000	                              mov eax, 0	       465	am.c	FUNCTION_18	CALL_42
0x1383	      0xe800000000	                          call 0x40013c8	       465	am.c	FUNCTION_18	CALL_42
0x1388	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       467	am.c	FUNCTION_18	CALL_44
0x138c	      0xbe00000000	                              mov esi, 0	       467	am.c	FUNCTION_18	CALL_44
0x1391	          0x4889c7	                            mov rdi, rax	       467	am.c	FUNCTION_18	CALL_44
0x1394	      0xe89ef2ffff	                        call sym.am_path	       467	am.c	FUNCTION_18	CALL_44
0x1399	          0x4889c7	                            mov rdi, rax	       467	am.c	FUNCTION_18	CALL_44
0x139c	      0xe800000000	                          call 0x40013e1	       467	am.c	FUNCTION_18	CALL_44
0x13a1	            0x85c0	                           test eax, eax	       467	am.c	FUNCTION_18	CALL_44
0x13a3	           0xf95c0	                                setne al	       467	am.c	FUNCTION_18	CALL_44
0x13a6	           0xfb6d0	                           movzx edx, al	       467	am.c	FUNCTION_18	CALL_44
0x13a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       467	am.c	FUNCTION_18	CALL_44
0x13ad	    0x8990a0000000	             mov dword [rax + 0xa0], edx	       467	am.c	FUNCTION_18	CALL_44
0x13b3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       469	am.c	FUNCTION_18	CALL_45
0x13b7	          0x4889c7	                            mov rdi, rax	       469	am.c	FUNCTION_18	CALL_45
0x13ba	      0xe800000000	                          call 0x40013ff	       469	am.c	FUNCTION_18	CALL_45
0x13bf	              0x90	                                     nop	       470	am.c	FUNCTION_18
0x13c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	am.c	FUNCTION_18
0x13c4	    0x644833042528	                xor rax, qword fs:[0x28]	       470	am.c	FUNCTION_18
0x13cd	            0x7405	                            je 0x4001414	       470	am.c	FUNCTION_18
0x13cf	      0xe800000000	                          call 0x4001414	       470	am.c	FUNCTION_18
0x13d4	        0x4883c438	                           add rsp, 0x38	       470	am.c	FUNCTION_18
0x13d8	              0x5b	                                 pop rbx	       470	am.c	FUNCTION_18
0x13d9	              0x5d	                                 pop rbp	       470	am.c	FUNCTION_18
0x13da	              0xc3	                                     ret	       470	am.c	FUNCTION_18
