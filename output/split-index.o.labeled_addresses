replace_index_entry_in_base	WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0:IF,2:DO,0:ELSE,0	72
0x10dc	              0x55	                                push rbp	       310	split-index.c	FUNCTION_13
0x10dd	          0x4889e5	                            mov rbp, rsp	       310	split-index.c	FUNCTION_13
0x10e0	        0x4883ec20	                           sub rsp, 0x20	       310	split-index.c	FUNCTION_13
0x10e4	        0x48897df8	                mov qword [rbp - 8], rdi	       310	split-index.c	FUNCTION_13
0x10e8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       310	split-index.c	FUNCTION_13
0x10ec	        0x488955e8	             mov qword [rbp - 0x18], rdx	       310	split-index.c	FUNCTION_13
0x10f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       311	split-index.c	FUNCTION_13	IF_1
0x10f4	          0x8b4040	            mov eax, dword [rax + 0x40] 	       311	split-index.c	FUNCTION_13	IF_1
0x10f7	            0x85c0	                           test eax, eax	       311	split-index.c	FUNCTION_13	IF_1
0x10f9	     0xf84d3000000	                            je 0x4001212	       311	split-index.c	FUNCTION_13	IF_1
0x10ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       312	split-index.c	FUNCTION_13	IF_1
0x1103	        0x488b4028	            mov rax, qword [rax + 0x28] 	       312	split-index.c	FUNCTION_13	IF_1
0x1107	          0x4885c0	                           test rax, rax	       311	split-index.c	FUNCTION_13	IF_1
0x110a	     0xf84c2000000	                            je 0x4001212	       311	split-index.c	FUNCTION_13	IF_1
0x1110	        0x488b45f8	                mov rax, qword [rbp - 8]	       313	split-index.c	FUNCTION_13	IF_1
0x1114	        0x488b4028	            mov rax, qword [rax + 0x28] 	       313	split-index.c	FUNCTION_13	IF_1
0x1118	        0x488b4018	            mov rax, qword [rax + 0x18] 	       313	split-index.c	FUNCTION_13	IF_1
0x111c	          0x4885c0	                           test rax, rax	       312	split-index.c	FUNCTION_13	IF_1
0x111f	     0xf84ad000000	                            je 0x4001212	       312	split-index.c	FUNCTION_13	IF_1
0x1125	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       314	split-index.c	FUNCTION_13	IF_1
0x1129	          0x8b5040	            mov edx, dword [rax + 0x40] 	       314	split-index.c	FUNCTION_13	IF_1
0x112c	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	split-index.c	FUNCTION_13	IF_1
0x1130	        0x488b4028	            mov rax, qword [rax + 0x28] 	       314	split-index.c	FUNCTION_13	IF_1
0x1134	        0x488b4018	            mov rax, qword [rax + 0x18] 	       314	split-index.c	FUNCTION_13	IF_1
0x1138	          0x8b400c	              mov eax, dword [rax + 0xc]	       314	split-index.c	FUNCTION_13	IF_1
0x113b	            0x39c2	                            cmp edx, eax	       313	split-index.c	FUNCTION_13	IF_1
0x113d	     0xf878f000000	                            ja 0x4001212	       313	split-index.c	FUNCTION_13	IF_1
0x1143	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       315	split-index.c	FUNCTION_13	IF_1
0x1147	          0x8b5040	            mov edx, dword [rax + 0x40] 	       315	split-index.c	FUNCTION_13	IF_1
0x114a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	split-index.c	FUNCTION_13	IF_1
0x114e	          0x895040	             mov dword [rax + 0x40], edx	       315	split-index.c	FUNCTION_13	IF_1
0x1151	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1155	        0x488b4028	            mov rax, qword [rax + 0x28] 	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1159	        0x488b4018	            mov rax, qword [rax + 0x18] 	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x115d	          0x488b10	                    mov rdx, qword [rax]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1160	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1164	          0x8b4040	            mov eax, dword [rax + 0x40] 	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1167	          0x83e801	                              sub eax, 1	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x116a	            0x89c0	                            mov eax, eax	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x116c	        0x48c1e003	                              shl rax, 3	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1170	          0x4801d0	                            add rax, rdx	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1173	          0x488b00	                    mov rax, qword [rax]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x1176	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x117a	            0x742d	                            je 0x40011e9	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x117c	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x1180	        0x488b4028	            mov rax, qword [rax + 0x28] 	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x1184	        0x488b4018	            mov rax, qword [rax + 0x18] 	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x1188	          0x488b10	                    mov rdx, qword [rax]	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x118b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x118f	          0x8b4040	            mov eax, dword [rax + 0x40] 	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x1192	          0x83e801	                              sub eax, 1	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x1195	            0x89c0	                            mov eax, eax	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x1197	        0x48c1e003	                              shl rax, 3	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x119b	          0x4801d0	                            add rax, rdx	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x119e	          0x488b00	                    mov rax, qword [rax]	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x11a1	          0x4889c7	                            mov rdi, rax	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x11a4	      0xe800000000	                          call 0x40011e9	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x11a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	split-index.c	FUNCTION_13	IF_1
0x11ad	        0x488b4028	            mov rax, qword [rax + 0x28] 	       318	split-index.c	FUNCTION_13	IF_1
0x11b1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       318	split-index.c	FUNCTION_13	IF_1
0x11b5	          0x488b10	                    mov rdx, qword [rax]	       318	split-index.c	FUNCTION_13	IF_1
0x11b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	split-index.c	FUNCTION_13	IF_1
0x11bc	          0x8b4040	            mov eax, dword [rax + 0x40] 	       318	split-index.c	FUNCTION_13	IF_1
0x11bf	          0x83e801	                              sub eax, 1	       318	split-index.c	FUNCTION_13	IF_1
0x11c2	            0x89c0	                            mov eax, eax	       318	split-index.c	FUNCTION_13	IF_1
0x11c4	        0x48c1e003	                              shl rax, 3	       318	split-index.c	FUNCTION_13	IF_1
0x11c8	          0x4801c2	                            add rdx, rax	       318	split-index.c	FUNCTION_13	IF_1
0x11cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	split-index.c	FUNCTION_13	IF_1
0x11cf	          0x488902	                    mov qword [rdx], rax	       318	split-index.c	FUNCTION_13	IF_1
0x11d2	              0x90	                                     nop	       320	split-index.c	FUNCTION_13
0x11d3	              0xc9	                                   leave	       320	split-index.c	FUNCTION_13
0x11d4	              0xc3	                                     ret	       320	split-index.c	FUNCTION_13
write_link_extension	WHILE,0:CALL,3:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,0	39
0x315	              0x55	                                push rbp	        46	split-index.c	FUNCTION_3
0x316	          0x4889e5	                            mov rbp, rsp	        46	split-index.c	FUNCTION_3
0x319	        0x4883ec20	                           sub rsp, 0x20	        46	split-index.c	FUNCTION_3
0x31d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        46	split-index.c	FUNCTION_3
0x321	        0x488975e0	             mov qword [rbp - 0x20], rsi	        46	split-index.c	FUNCTION_3
0x325	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        47	split-index.c	FUNCTION_3
0x329	        0x488b4028	            mov rax, qword [rax + 0x28] 	        47	split-index.c	FUNCTION_3
0x32d	        0x488945f8	                mov qword [rbp - 8], rax	        47	split-index.c	FUNCTION_3
0x331	        0x488b4df8	                mov rcx, qword [rbp - 8]	        48	split-index.c	FUNCTION_3	CALL_1
0x335	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        48	split-index.c	FUNCTION_3	CALL_1
0x339	      0xba14000000	                           mov edx, 0x14	        48	split-index.c	FUNCTION_3	CALL_1
0x33e	          0x4889ce	                            mov rsi, rcx	        48	split-index.c	FUNCTION_3	CALL_1
0x341	          0x4889c7	                            mov rdi, rax	        48	split-index.c	FUNCTION_3	CALL_1
0x344	      0xe800000000	                          call 0x4000389	        48	split-index.c	FUNCTION_3	CALL_1
0x349	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	split-index.c	FUNCTION_3	IF_1
0x34d	        0x488b4020	            mov rax, qword [rax + 0x20] 	        49	split-index.c	FUNCTION_3	IF_1
0x351	          0x4885c0	                           test rax, rax	        49	split-index.c	FUNCTION_3	IF_1
0x354	            0x7514	                           jne 0x40003aa	        49	split-index.c	FUNCTION_3	IF_1
0x356	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	split-index.c	FUNCTION_3	IF_1
0x35a	        0x488b4028	            mov rax, qword [rax + 0x28] 	        49	split-index.c	FUNCTION_3	IF_1
0x35e	          0x4885c0	                           test rax, rax	        49	split-index.c	FUNCTION_3	IF_1
0x361	            0x7507	                           jne 0x40003aa	        49	split-index.c	FUNCTION_3	IF_1
0x363	      0xb800000000	                              mov eax, 0	        50	split-index.c	FUNCTION_3	IF_1
0x368	            0xeb33	                           jmp 0x40003dd	        50	split-index.c	FUNCTION_3	IF_1
0x36a	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	split-index.c	FUNCTION_3	CALL_2
0x36e	        0x488b4020	            mov rax, qword [rax + 0x20] 	        51	split-index.c	FUNCTION_3	CALL_2
0x372	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        51	split-index.c	FUNCTION_3	CALL_2
0x376	          0x4889d6	                            mov rsi, rdx	        51	split-index.c	FUNCTION_3	CALL_2
0x379	          0x4889c7	                            mov rdi, rax	        51	split-index.c	FUNCTION_3	CALL_2
0x37c	      0xe800000000	                          call 0x40003c1	        51	split-index.c	FUNCTION_3	CALL_2
0x381	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	split-index.c	FUNCTION_3	CALL_3
0x385	        0x488b4028	            mov rax, qword [rax + 0x28] 	        52	split-index.c	FUNCTION_3	CALL_3
0x389	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        52	split-index.c	FUNCTION_3	CALL_3
0x38d	          0x4889d6	                            mov rsi, rdx	        52	split-index.c	FUNCTION_3	CALL_3
0x390	          0x4889c7	                            mov rdi, rax	        52	split-index.c	FUNCTION_3	CALL_3
0x393	      0xe800000000	                          call 0x40003d8	        52	split-index.c	FUNCTION_3	CALL_3
0x398	      0xb800000000	                              mov eax, 0	        53	split-index.c	FUNCTION_3
0x39d	              0xc9	                                   leave	        54	split-index.c	FUNCTION_3
0x39e	              0xc3	                                     ret	        54	split-index.c	FUNCTION_3
add_split_index	WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,0	20
0x11d5	              0x55	                                push rbp	       323	split-index.c	FUNCTION_14
0x11d6	          0x4889e5	                            mov rbp, rsp	       323	split-index.c	FUNCTION_14
0x11d9	        0x4883ec10	                           sub rsp, 0x10	       323	split-index.c	FUNCTION_14
0x11dd	        0x48897df8	                mov qword [rbp - 8], rdi	       323	split-index.c	FUNCTION_14
0x11e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	split-index.c	FUNCTION_14	IF_1
0x11e5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       324	split-index.c	FUNCTION_14	IF_1
0x11e9	          0x4885c0	                           test rax, rax	       324	split-index.c	FUNCTION_14	IF_1
0x11ec	            0x751f	                           jne 0x400124d	       324	split-index.c	FUNCTION_14	IF_1
0x11ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       325	split-index.c	FUNCTION_14	IF_1	CALL_1
0x11f2	          0x4889c7	                            mov rdi, rax	       325	split-index.c	FUNCTION_14	IF_1	CALL_1
0x11f5	      0xe800000000	                          call 0x400123a	       325	split-index.c	FUNCTION_14	IF_1	CALL_1
0x11fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	split-index.c	FUNCTION_14	IF_1
0x11fe	          0x8b4014	            mov eax, dword [rax + 0x14] 	       326	split-index.c	FUNCTION_14	IF_1
0x1201	          0x83c840	                            or eax, 0x40	       326	split-index.c	FUNCTION_14	IF_1
0x1204	            0x89c2	                            mov edx, eax	       326	split-index.c	FUNCTION_14	IF_1
0x1206	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	split-index.c	FUNCTION_14	IF_1
0x120a	          0x895014	             mov dword [rax + 0x14], edx	       326	split-index.c	FUNCTION_14	IF_1
0x120d	              0x90	                                     nop	       328	split-index.c	FUNCTION_14
0x120e	              0xc9	                                   leave	       328	split-index.c	FUNCTION_14
0x120f	              0xc3	                                     ret	       328	split-index.c	FUNCTION_14
replace_entry	WHILE,0:CALL,7:functions,0:SWITCH,0:FOR,0:IF,4:DO,0:ELSE,0	103
0x630	              0x55	                                push rbp	       103	split-index.c	FUNCTION_7
0x631	          0x4889e5	                            mov rbp, rsp	       103	split-index.c	FUNCTION_7
0x634	        0x4883ec30	                           sub rsp, 0x30	       103	split-index.c	FUNCTION_7
0x638	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       103	split-index.c	FUNCTION_7
0x63c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       103	split-index.c	FUNCTION_7
0x640	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       104	split-index.c	FUNCTION_7
0x644	        0x488945e0	             mov qword [rbp - 0x20], rax	       104	split-index.c	FUNCTION_7
0x648	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       105	split-index.c	FUNCTION_7
0x64c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       105	split-index.c	FUNCTION_7
0x650	        0x488945e8	             mov qword [rbp - 0x18], rax	       105	split-index.c	FUNCTION_7
0x654	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       108	split-index.c	FUNCTION_7	IF_1
0x658	          0x8b400c	              mov eax, dword [rax + 0xc]	       108	split-index.c	FUNCTION_7	IF_1
0x65b	            0x89c0	                            mov eax, eax	       108	split-index.c	FUNCTION_7	IF_1
0x65d	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       108	split-index.c	FUNCTION_7	IF_1
0x661	            0x7720	                            ja 0x40006c3	       108	split-index.c	FUNCTION_7	IF_1
0x663	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x667	          0x8b400c	              mov eax, dword [rax + 0xc]	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x66a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x66e	            0x89d1	                            mov ecx, edx	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x670	            0x89c2	                            mov edx, eax	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x672	            0x89ce	                            mov esi, ecx	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x674	      0xbf00000000	                              mov edi, 0	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x679	      0xb800000000	                              mov eax, 0	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x67e	      0xe800000000	                          call 0x40006c3	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x683	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	split-index.c	FUNCTION_7	IF_2
0x687	          0x8b5040	            mov edx, dword [rax + 0x40] 	       111	split-index.c	FUNCTION_7	IF_2
0x68a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	split-index.c	FUNCTION_7	IF_2
0x68e	          0x8b4038	            mov eax, dword [rax + 0x38] 	       111	split-index.c	FUNCTION_7	IF_2
0x691	            0x39c2	                            cmp edx, eax	       111	split-index.c	FUNCTION_7	IF_2
0x693	            0x721f	                            jb 0x40006f4	       111	split-index.c	FUNCTION_7	IF_2
0x695	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x699	          0x8b5038	            mov edx, dword [rax + 0x38] 	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x69c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x6a0	          0x8b4040	            mov eax, dword [rax + 0x40] 	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x6a3	            0x89c6	                            mov esi, eax	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x6a5	      0xbf00000000	                              mov edi, 0	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x6aa	      0xb800000000	                              mov eax, 0	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x6af	      0xe800000000	                          call 0x40006f4	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x6b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       114	split-index.c	FUNCTION_7
0x6b8	          0x488b00	                    mov rax, qword [rax]	       114	split-index.c	FUNCTION_7
0x6bb	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       114	split-index.c	FUNCTION_7
0x6bf	        0x48c1e203	                              shl rdx, 3	       114	split-index.c	FUNCTION_7
0x6c3	          0x4801d0	                            add rax, rdx	       114	split-index.c	FUNCTION_7
0x6c6	          0x488b00	                    mov rax, qword [rax]	       114	split-index.c	FUNCTION_7
0x6c9	        0x488945f0	             mov qword [rbp - 0x10], rax	       114	split-index.c	FUNCTION_7
0x6cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       115	split-index.c	FUNCTION_7	IF_3
0x6d1	          0x8b4038	            mov eax, dword [rax + 0x38] 	       115	split-index.c	FUNCTION_7	IF_3
0x6d4	      0x2500000200	                        and eax, 0x20000	       115	split-index.c	FUNCTION_7	IF_3
0x6d9	            0x85c0	                           test eax, eax	       115	split-index.c	FUNCTION_7	IF_3
0x6db	            0x7415	                            je 0x4000732	       115	split-index.c	FUNCTION_7	IF_3
0x6dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x6e1	            0x89c6	                            mov esi, eax	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x6e3	      0xbf00000000	                              mov edi, 0	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x6e8	      0xb800000000	                              mov eax, 0	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x6ed	      0xe800000000	                          call 0x4000732	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x6f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	split-index.c	FUNCTION_7
0x6f6	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       118	split-index.c	FUNCTION_7
0x6fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	split-index.c	FUNCTION_7
0x6fe	          0x8b4040	            mov eax, dword [rax + 0x40] 	       118	split-index.c	FUNCTION_7
0x701	            0x89c0	                            mov eax, eax	       118	split-index.c	FUNCTION_7
0x703	        0x48c1e003	                              shl rax, 3	       118	split-index.c	FUNCTION_7
0x707	          0x4801d0	                            add rax, rdx	       118	split-index.c	FUNCTION_7
0x70a	          0x488b00	                    mov rax, qword [rax]	       118	split-index.c	FUNCTION_7
0x70d	        0x488945f8	                mov qword [rbp - 8], rax	       118	split-index.c	FUNCTION_7
0x711	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	split-index.c	FUNCTION_7	IF_4	CALL_4
0x715	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       119	split-index.c	FUNCTION_7	IF_4	CALL_4
0x718	            0x85c0	                           test eax, eax	       119	split-index.c	FUNCTION_7	IF_4	CALL_4
0x71a	            0x7415	                            je 0x4000771	       119	split-index.c	FUNCTION_7	IF_4	CALL_4
0x71c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x720	            0x89c6	                            mov esi, eax	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x722	      0xbf00000000	                              mov edi, 0	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x727	      0xb800000000	                              mov eax, 0	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x72c	      0xe800000000	                          call 0x4000771	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x731	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       122	split-index.c	FUNCTION_7
0x735	          0x8d5001	                      lea edx, [rax + 1]	       122	split-index.c	FUNCTION_7
0x738	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	split-index.c	FUNCTION_7
0x73c	          0x895040	             mov dword [rax + 0x40], edx	       122	split-index.c	FUNCTION_7
0x73f	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	split-index.c	FUNCTION_7
0x743	          0x8b4038	            mov eax, dword [rax + 0x38] 	       123	split-index.c	FUNCTION_7
0x746	       0xd00000008	                    or eax, section_end.	       123	split-index.c	FUNCTION_7
0x74b	            0x89c2	                            mov edx, eax	       123	split-index.c	FUNCTION_7
0x74d	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	split-index.c	FUNCTION_7
0x751	          0x895038	             mov dword [rax + 0x38], edx	       123	split-index.c	FUNCTION_7
0x754	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	split-index.c	FUNCTION_7
0x758	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       124	split-index.c	FUNCTION_7
0x75b	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	split-index.c	FUNCTION_7
0x75f	          0x89503c	             mov dword [rax + 0x3c], edx	       124	split-index.c	FUNCTION_7
0x762	        0x488b55f8	                mov rdx, qword [rbp - 8]	       125	split-index.c	FUNCTION_7	CALL_6
0x766	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	split-index.c	FUNCTION_7	CALL_6
0x76a	          0x4889d6	                            mov rsi, rdx	       125	split-index.c	FUNCTION_7	CALL_6
0x76d	          0x4889c7	                            mov rdi, rax	       125	split-index.c	FUNCTION_7	CALL_6
0x770	      0xe833f9ffff	               call sym.copy_cache_entry	       125	split-index.c	FUNCTION_7	CALL_6
0x775	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	split-index.c	FUNCTION_7	CALL_7
0x779	          0x4889c7	                            mov rdi, rax	       126	split-index.c	FUNCTION_7	CALL_7
0x77c	      0xe800000000	                          call 0x40007c1	       126	split-index.c	FUNCTION_7	CALL_7
0x781	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	split-index.c	FUNCTION_7
0x785	          0x8b4040	            mov eax, dword [rax + 0x40] 	       127	split-index.c	FUNCTION_7
0x788	          0x8d5001	                      lea edx, [rax + 1]	       127	split-index.c	FUNCTION_7
0x78b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	split-index.c	FUNCTION_7
0x78f	          0x895040	             mov dword [rax + 0x40], edx	       127	split-index.c	FUNCTION_7
0x792	              0x90	                                     nop	       128	split-index.c	FUNCTION_7
0x793	              0xc9	                                   leave	       128	split-index.c	FUNCTION_7
0x794	              0xc3	                                     ret	       128	split-index.c	FUNCTION_7
move_cache_to_base_index	WHILE,0:CALL,4:functions,0:SWITCH,0:FOR,1:IF,0:DO,0:ELSE,0	131
0x3e5	              0x55	                                push rbp	        71	split-index.c	FUNCTION_5
0x3e6	          0x4889e5	                            mov rbp, rsp	        71	split-index.c	FUNCTION_5
0x3e9	              0x53	                                push rbx	        71	split-index.c	FUNCTION_5
0x3ea	        0x4883ec28	                           sub rsp, 0x28	        71	split-index.c	FUNCTION_5
0x3ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        71	split-index.c	FUNCTION_5
0x3f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        72	split-index.c	FUNCTION_5
0x3f6	        0x488b4028	            mov rax, qword [rax + 0x28] 	        72	split-index.c	FUNCTION_5
0x3fa	        0x488945e8	             mov qword [rbp - 0x18], rax	        72	split-index.c	FUNCTION_5
0x3fe	      0xbed0000000	                           mov esi, 0xd0	        80	split-index.c	FUNCTION_5	CALL_1
0x403	      0xbf01000000	                              mov edi, 1	        80	split-index.c	FUNCTION_5	CALL_1
0x408	      0xe800000000	                          call 0x400044d	        80	split-index.c	FUNCTION_5	CALL_1
0x40d	          0x4889c2	                            mov rdx, rax	        80	split-index.c	FUNCTION_5	CALL_1
0x410	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	split-index.c	FUNCTION_5	CALL_1
0x414	        0x48895018	             mov qword [rax + 0x18], rdx	        80	split-index.c	FUNCTION_5	CALL_1
0x418	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	split-index.c	FUNCTION_5
0x41c	        0x488b4018	            mov rax, qword [rax + 0x18] 	        81	split-index.c	FUNCTION_5
0x420	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        81	split-index.c	FUNCTION_5
0x424	          0x8b5208	                mov edx, dword [rdx + 8]	        81	split-index.c	FUNCTION_5
0x427	          0x895008	                mov dword [rax + 8], edx	        81	split-index.c	FUNCTION_5
0x42a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        83	split-index.c	FUNCTION_5
0x42e	        0x488b4018	            mov rax, qword [rax + 0x18] 	        83	split-index.c	FUNCTION_5
0x432	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        83	split-index.c	FUNCTION_5
0x436	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	        83	split-index.c	FUNCTION_5
0x43a	        0x48895030	             mov qword [rax + 0x30], rdx	        83	split-index.c	FUNCTION_5
0x43e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	split-index.c	FUNCTION_5	CALL_2
0x442	          0x8b500c	              mov edx, dword [rax + 0xc]	        84	split-index.c	FUNCTION_5	CALL_2
0x445	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x449	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x44d	          0x8b4010	            mov eax, dword [rax + 0x10] 	        84	split-index.c	FUNCTION_5	CALL_2
0x450	            0x39c2	                            cmp edx, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x452	     0xf8696000000	                           jbe 0x400052e	        84	split-index.c	FUNCTION_5	CALL_2
0x458	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x45c	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x460	          0x8b5010	            mov edx, dword [rax + 0x10] 	        84	split-index.c	FUNCTION_5	CALL_2
0x463	            0x89d0	                            mov eax, edx	        84	split-index.c	FUNCTION_5	CALL_2
0x465	             0x1c0	                            add eax, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x467	             0x1d0	                            add eax, edx	        84	split-index.c	FUNCTION_5	CALL_2
0x469	          0x83c030	                           add eax, 0x30	        84	split-index.c	FUNCTION_5	CALL_2
0x46c	            0xd1e8	                              shr eax, 1	        84	split-index.c	FUNCTION_5	CALL_2
0x46e	            0x89c2	                            mov edx, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x470	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	split-index.c	FUNCTION_5	CALL_2
0x474	          0x8b400c	              mov eax, dword [rax + 0xc]	        84	split-index.c	FUNCTION_5	CALL_2
0x477	            0x39c2	                            cmp edx, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x479	            0x7314	                           jae 0x40004cf	        84	split-index.c	FUNCTION_5	CALL_2
0x47b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x47f	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x483	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        84	split-index.c	FUNCTION_5	CALL_2
0x487	          0x8b520c	              mov edx, dword [rdx + 0xc]	        84	split-index.c	FUNCTION_5	CALL_2
0x48a	          0x895010	             mov dword [rax + 0x10], edx	        84	split-index.c	FUNCTION_5	CALL_2
0x48d	            0xeb21	                           jmp 0x40004f0	        84	split-index.c	FUNCTION_5	CALL_2
0x48f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x493	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x497	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x49b	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x49f	          0x8b5010	            mov edx, dword [rax + 0x10] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4a2	            0x89d0	                            mov eax, edx	        84	split-index.c	FUNCTION_5	CALL_2
0x4a4	             0x1c0	                            add eax, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x4a6	             0x1d0	                            add eax, edx	        84	split-index.c	FUNCTION_5	CALL_2
0x4a8	          0x83c030	                           add eax, 0x30	        84	split-index.c	FUNCTION_5	CALL_2
0x4ab	            0xd1e8	                              shr eax, 1	        84	split-index.c	FUNCTION_5	CALL_2
0x4ad	          0x894110	             mov dword [rcx + 0x10], eax	        84	split-index.c	FUNCTION_5	CALL_2
0x4b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x4b4	        0x488b5818	            mov rbx, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x4bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4c0	          0x8b4010	            mov eax, dword [rax + 0x10] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4c3	            0x89c0	                            mov eax, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x4c5	          0x4889c6	                            mov rsi, rax	        84	split-index.c	FUNCTION_5	CALL_2
0x4c8	      0xbf08000000	                              mov edi, 8	        84	split-index.c	FUNCTION_5	CALL_2
0x4cd	      0xe839fbffff	                        call sym.st_mult	        84	split-index.c	FUNCTION_5	CALL_2
0x4d2	          0x4889c2	                            mov rdx, rax	        84	split-index.c	FUNCTION_5	CALL_2
0x4d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	split-index.c	FUNCTION_5	CALL_2
0x4d9	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4dd	          0x488b00	                    mov rax, qword [rax]	        84	split-index.c	FUNCTION_5	CALL_2
0x4e0	          0x4889d6	                            mov rsi, rdx	        84	split-index.c	FUNCTION_5	CALL_2
0x4e3	          0x4889c7	                            mov rdi, rax	        84	split-index.c	FUNCTION_5	CALL_2
0x4e6	      0xe800000000	                          call 0x400052b	        84	split-index.c	FUNCTION_5	CALL_2
0x4eb	          0x488903	                    mov qword [rbx], rax	        84	split-index.c	FUNCTION_5	CALL_2
0x4ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	split-index.c	FUNCTION_5
0x4f2	        0x488b4018	            mov rax, qword [rax + 0x18] 	        85	split-index.c	FUNCTION_5
0x4f6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        85	split-index.c	FUNCTION_5
0x4fa	          0x8b520c	              mov edx, dword [rdx + 0xc]	        85	split-index.c	FUNCTION_5
0x4fd	          0x89500c	              mov dword [rax + 0xc], edx	        85	split-index.c	FUNCTION_5
0x500	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	split-index.c	FUNCTION_5	CALL_3
0x504	          0x8b400c	              mov eax, dword [rax + 0xc]	        86	split-index.c	FUNCTION_5	CALL_3
0x507	            0x89c2	                            mov edx, eax	        86	split-index.c	FUNCTION_5	CALL_3
0x509	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	split-index.c	FUNCTION_5	CALL_3
0x50d	          0x488b30	                    mov rsi, qword [rax]	        86	split-index.c	FUNCTION_5	CALL_3
0x510	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        86	split-index.c	FUNCTION_5	CALL_3
0x514	        0x488b4018	            mov rax, qword [rax + 0x18] 	        86	split-index.c	FUNCTION_5	CALL_3
0x518	          0x488b00	                    mov rax, qword [rax]	        86	split-index.c	FUNCTION_5	CALL_3
0x51b	      0xb908000000	                              mov ecx, 8	        86	split-index.c	FUNCTION_5	CALL_3
0x520	          0x4889c7	                            mov rdi, rax	        86	split-index.c	FUNCTION_5	CALL_3
0x523	      0xe835fbffff	                     call sym.copy_array	        86	split-index.c	FUNCTION_5	CALL_3
0x528	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        87	split-index.c	FUNCTION_5	CALL_4
0x52c	        0x488b4018	            mov rax, qword [rax + 0x18] 	        87	split-index.c	FUNCTION_5	CALL_4
0x530	          0x4889c7	                            mov rdi, rax	        87	split-index.c	FUNCTION_5	CALL_4
0x533	      0xe867feffff	        call sym.mark_base_index_entries	        87	split-index.c	FUNCTION_5	CALL_4
0x538	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        88	split-index.c	FUNCTION_5	FOR_1
0x53f	            0xeb46	                           jmp 0x40005c7	        88	split-index.c	FUNCTION_5	FOR_1
0x541	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	split-index.c	FUNCTION_5	FOR_1
0x545	        0x488b4018	            mov rax, qword [rax + 0x18] 	        89	split-index.c	FUNCTION_5	FOR_1
0x549	          0x488b00	                    mov rax, qword [rax]	        89	split-index.c	FUNCTION_5	FOR_1
0x54c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        89	split-index.c	FUNCTION_5	FOR_1
0x54f	          0x4863d2	                         movsxd rdx, edx	        89	split-index.c	FUNCTION_5	FOR_1
0x552	        0x48c1e203	                              shl rdx, 3	        89	split-index.c	FUNCTION_5	FOR_1
0x556	          0x4801d0	                            add rax, rdx	        89	split-index.c	FUNCTION_5	FOR_1
0x559	          0x488b00	                    mov rax, qword [rax]	        89	split-index.c	FUNCTION_5	FOR_1
0x55c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        89	split-index.c	FUNCTION_5	FOR_1
0x560	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	        89	split-index.c	FUNCTION_5	FOR_1
0x564	          0x488b12	                    mov rdx, qword [rdx]	        89	split-index.c	FUNCTION_5	FOR_1
0x567	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	        89	split-index.c	FUNCTION_5	FOR_1
0x56a	          0x4863c9	                         movsxd rcx, ecx	        89	split-index.c	FUNCTION_5	FOR_1
0x56d	        0x48c1e103	                              shl rcx, 3	        89	split-index.c	FUNCTION_5	FOR_1
0x571	          0x4801ca	                            add rdx, rcx	        89	split-index.c	FUNCTION_5	FOR_1
0x574	          0x488b12	                    mov rdx, qword [rdx]	        89	split-index.c	FUNCTION_5	FOR_1
0x577	          0x8b5238	            mov edx, dword [rdx + 0x38] 	        89	split-index.c	FUNCTION_5	FOR_1
0x57a	    0x81e2fffffff7	                     and edx, 0xf7ffffff	        89	split-index.c	FUNCTION_5	FOR_1
0x580	          0x895038	             mov dword [rax + 0x38], edx	        89	split-index.c	FUNCTION_5	FOR_1
0x583	        0x8345e401	               add dword [rbp - 0x1c], 1	        88	split-index.c	FUNCTION_5	FOR_1
0x587	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	split-index.c	FUNCTION_5	FOR_1
0x58b	        0x488b4018	            mov rax, qword [rax + 0x18] 	        88	split-index.c	FUNCTION_5	FOR_1
0x58f	          0x8b500c	              mov edx, dword [rax + 0xc]	        88	split-index.c	FUNCTION_5	FOR_1
0x592	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        88	split-index.c	FUNCTION_5	FOR_1
0x595	            0x39c2	                            cmp edx, eax	        88	split-index.c	FUNCTION_5	FOR_1
0x597	            0x77a8	                            ja 0x4000581	        88	split-index.c	FUNCTION_5	FOR_1
0x599	              0x90	                                     nop	        90	split-index.c	FUNCTION_5
0x59a	        0x4883c428	                           add rsp, 0x28	        90	split-index.c	FUNCTION_5
0x59e	              0x5b	                                 pop rbx	        90	split-index.c	FUNCTION_5
0x59f	              0x5d	                                 pop rbp	        90	split-index.c	FUNCTION_5
0x5a0	              0xc3	                                     ret	        90	split-index.c	FUNCTION_5
read_link_extension	WHILE,0:CALL,10:functions,0:SWITCH,0:FOR,0:IF,5:DO,0:ELSE,0	86
0x1ca	              0x55	                                push rbp	        16	split-index.c	FUNCTION_2
0x1cb	          0x4889e5	                            mov rbp, rsp	        16	split-index.c	FUNCTION_2
0x1ce	        0x4883ec40	                           sub rsp, 0x40	        16	split-index.c	FUNCTION_2
0x1d2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        16	split-index.c	FUNCTION_2
0x1d6	        0x488975d0	             mov qword [rbp - 0x30], rsi	        16	split-index.c	FUNCTION_2
0x1da	        0x488955c8	             mov qword [rbp - 0x38], rdx	        16	split-index.c	FUNCTION_2
0x1de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        17	split-index.c	FUNCTION_2
0x1e2	        0x488945f0	             mov qword [rbp - 0x10], rax	        17	split-index.c	FUNCTION_2
0x1e6	      0x48837dc813	           cmp qword [rbp - 0x38], 0x13 	        21	split-index.c	FUNCTION_2	IF_1
0x1eb	            0x7719	                            ja 0x4000246	        21	split-index.c	FUNCTION_2	IF_1
0x1ed	      0xbf00000000	                              mov edi, 0	        22	split-index.c	FUNCTION_2	CALL_1
0x1f2	      0xb800000000	                              mov eax, 0	        22	split-index.c	FUNCTION_2	CALL_1
0x1f7	      0xe800000000	                          call 0x400023c	        22	split-index.c	FUNCTION_2	CALL_1
0x1fc	      0xe8fffdffff	                    call sym.const_error	        22	split-index.c	FUNCTION_2	CALL_1
0x201	      0xe90d010000	                           jmp 0x4000353	        22	split-index.c	FUNCTION_2	CALL_1
0x206	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        23	split-index.c	FUNCTION_2	CALL_2
0x20a	          0x4889c7	                            mov rdi, rax	        23	split-index.c	FUNCTION_2	CALL_2
0x20d	      0xe800000000	                          call 0x4000252	        23	split-index.c	FUNCTION_2	CALL_2
0x212	        0x488945f8	                mov qword [rbp - 8], rax	        23	split-index.c	FUNCTION_2	CALL_2
0x216	        0x488b45f8	                mov rax, qword [rbp - 8]	        24	split-index.c	FUNCTION_2	CALL_3
0x21a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        24	split-index.c	FUNCTION_2	CALL_3
0x21e	          0x4889d6	                            mov rsi, rdx	        24	split-index.c	FUNCTION_2	CALL_3
0x221	          0x4889c7	                            mov rdi, rax	        24	split-index.c	FUNCTION_2	CALL_3
0x224	      0xe82affffff	                        call sym.hashcpy	        24	split-index.c	FUNCTION_2	CALL_3
0x229	      0x488345f014	            add qword [rbp - 0x10], 0x14	        25	split-index.c	FUNCTION_2
0x22e	      0x48836dc814	            sub qword [rbp - 0x38], 0x14	        26	split-index.c	FUNCTION_2
0x233	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        27	split-index.c	FUNCTION_2	IF_2
0x238	            0x750a	                           jne 0x4000284	        27	split-index.c	FUNCTION_2	IF_2
0x23a	      0xb800000000	                              mov eax, 0	        28	split-index.c	FUNCTION_2	IF_2
0x23f	      0xe9cf000000	                           jmp 0x4000353	        28	split-index.c	FUNCTION_2	IF_2
0x244	      0xe800000000	                          call 0x4000289	        29	split-index.c	FUNCTION_2	CALL_4
0x249	          0x4889c2	                            mov rdx, rax	        29	split-index.c	FUNCTION_2	CALL_4
0x24c	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	split-index.c	FUNCTION_2	CALL_4
0x250	        0x48895020	             mov qword [rax + 0x20], rdx	        29	split-index.c	FUNCTION_2	CALL_4
0x254	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	split-index.c	FUNCTION_2	CALL_5
0x258	        0x488b4020	            mov rax, qword [rax + 0x20] 	        30	split-index.c	FUNCTION_2	CALL_5
0x25c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        30	split-index.c	FUNCTION_2	CALL_5
0x260	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        30	split-index.c	FUNCTION_2	CALL_5
0x264	          0x4889ce	                            mov rsi, rcx	        30	split-index.c	FUNCTION_2	CALL_5
0x267	          0x4889c7	                            mov rdi, rax	        30	split-index.c	FUNCTION_2	CALL_5
0x26a	      0xe800000000	                          call 0x40002af	        30	split-index.c	FUNCTION_2	CALL_5
0x26f	          0x8945ec	             mov dword [rbp - 0x14], eax	        30	split-index.c	FUNCTION_2	CALL_5
0x272	        0x837dec00	               cmp dword [rbp - 0x14], 0	        31	split-index.c	FUNCTION_2	IF_3
0x276	            0x7919	                           jns 0x40002d1	        31	split-index.c	FUNCTION_2	IF_3
0x278	      0xbf00000000	                              mov edi, 0	        32	split-index.c	FUNCTION_2	CALL_6
0x27d	      0xb800000000	                              mov eax, 0	        32	split-index.c	FUNCTION_2	CALL_6
0x282	      0xe800000000	                          call 0x40002c7	        32	split-index.c	FUNCTION_2	CALL_6
0x287	      0xe874fdffff	                    call sym.const_error	        32	split-index.c	FUNCTION_2	CALL_6
0x28c	      0xe982000000	                           jmp 0x4000353	        32	split-index.c	FUNCTION_2	CALL_6
0x291	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        33	split-index.c	FUNCTION_2
0x294	            0x4898	                                    cdqe	        33	split-index.c	FUNCTION_2
0x296	        0x480145f0	            add qword [rbp - 0x10], rax 	        33	split-index.c	FUNCTION_2
0x29a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        34	split-index.c	FUNCTION_2
0x29d	            0x4898	                                    cdqe	        34	split-index.c	FUNCTION_2
0x29f	        0x482945c8	             sub qword [rbp - 0x38], rax	        34	split-index.c	FUNCTION_2
0x2a3	      0xe800000000	                          call 0x40002e8	        35	split-index.c	FUNCTION_2	CALL_7
0x2a8	          0x4889c2	                            mov rdx, rax	        35	split-index.c	FUNCTION_2	CALL_7
0x2ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	split-index.c	FUNCTION_2	CALL_7
0x2af	        0x48895028	             mov qword [rax + 0x28], rdx	        35	split-index.c	FUNCTION_2	CALL_7
0x2b3	        0x488b45f8	                mov rax, qword [rbp - 8]	        36	split-index.c	FUNCTION_2	CALL_8
0x2b7	        0x488b4028	            mov rax, qword [rax + 0x28] 	        36	split-index.c	FUNCTION_2	CALL_8
0x2bb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        36	split-index.c	FUNCTION_2	CALL_8
0x2bf	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        36	split-index.c	FUNCTION_2	CALL_8
0x2c3	          0x4889ce	                            mov rsi, rcx	        36	split-index.c	FUNCTION_2	CALL_8
0x2c6	          0x4889c7	                            mov rdi, rax	        36	split-index.c	FUNCTION_2	CALL_8
0x2c9	      0xe800000000	                          call 0x400030e	        36	split-index.c	FUNCTION_2	CALL_8
0x2ce	          0x8945ec	             mov dword [rbp - 0x14], eax	        36	split-index.c	FUNCTION_2	CALL_8
0x2d1	        0x837dec00	               cmp dword [rbp - 0x14], 0	        37	split-index.c	FUNCTION_2	IF_4
0x2d5	            0x7916	                           jns 0x400032d	        37	split-index.c	FUNCTION_2	IF_4
0x2d7	      0xbf00000000	                              mov edi, 0	        38	split-index.c	FUNCTION_2	CALL_9
0x2dc	      0xb800000000	                              mov eax, 0	        38	split-index.c	FUNCTION_2	CALL_9
0x2e1	      0xe800000000	                          call 0x4000326	        38	split-index.c	FUNCTION_2	CALL_9
0x2e6	      0xe815fdffff	                    call sym.const_error	        38	split-index.c	FUNCTION_2	CALL_9
0x2eb	            0xeb26	                           jmp 0x4000353	        38	split-index.c	FUNCTION_2	CALL_9
0x2ed	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        39	split-index.c	FUNCTION_2	IF_5
0x2f0	            0x4898	                                    cdqe	        39	split-index.c	FUNCTION_2	IF_5
0x2f2	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        39	split-index.c	FUNCTION_2	IF_5
0x2f6	            0x7416	                            je 0x400034e	        39	split-index.c	FUNCTION_2	IF_5
0x2f8	      0xbf00000000	                              mov edi, 0	        40	split-index.c	FUNCTION_2	CALL_10
0x2fd	      0xb800000000	                              mov eax, 0	        40	split-index.c	FUNCTION_2	CALL_10
0x302	      0xe800000000	                          call 0x4000347	        40	split-index.c	FUNCTION_2	CALL_10
0x307	      0xe8f4fcffff	                    call sym.const_error	        40	split-index.c	FUNCTION_2	CALL_10
0x30c	            0xeb05	                           jmp 0x4000353	        40	split-index.c	FUNCTION_2	CALL_10
0x30e	      0xb800000000	                              mov eax, 0	        41	split-index.c	FUNCTION_2
0x313	              0xc9	                                   leave	        42	split-index.c	FUNCTION_2
0x314	              0xc3	                                     ret	        42	split-index.c	FUNCTION_2
st_mult	WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,0	22
0xb	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_30
0xc	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_30
0xf	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_30
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_30
0x17	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_30
0x1b	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x20	            0x7430	                            je 0x4000092	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x22	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x29	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x2e	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x32	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x36	            0x731a	                           jae 0x4000092	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x38	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x40	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x43	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x48	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4d	      0xe800000000	                          call 0x4000092	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x52	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_30
0x56	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_30
0x5b	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_30
0x5c	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_30
mark_entry_for_delete	WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,0	42
0x5a1	              0x55	                                push rbp	        93	split-index.c	FUNCTION_6
0x5a2	          0x4889e5	                            mov rbp, rsp	        93	split-index.c	FUNCTION_6
0x5a5	        0x4883ec20	                           sub rsp, 0x20	        93	split-index.c	FUNCTION_6
0x5a9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	split-index.c	FUNCTION_6
0x5ad	        0x488975e0	             mov qword [rbp - 0x20], rsi	        93	split-index.c	FUNCTION_6
0x5b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	split-index.c	FUNCTION_6
0x5b5	        0x488945f8	                mov qword [rbp - 8], rax	        94	split-index.c	FUNCTION_6
0x5b9	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	split-index.c	FUNCTION_6	IF_1
0x5bd	          0x8b400c	              mov eax, dword [rax + 0xc]	        95	split-index.c	FUNCTION_6	IF_1
0x5c0	            0x89c0	                            mov eax, eax	        95	split-index.c	FUNCTION_6	IF_1
0x5c2	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        95	split-index.c	FUNCTION_6	IF_1
0x5c6	            0x7720	                            ja 0x4000628	        95	split-index.c	FUNCTION_6	IF_1
0x5c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5cc	          0x8b400c	              mov eax, dword [rax + 0xc]	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5cf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5d3	            0x89d1	                            mov ecx, edx	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5d5	            0x89c2	                            mov edx, eax	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5d7	            0x89ce	                            mov esi, ecx	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5d9	      0xbf00000000	                              mov edi, 0	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5de	      0xb800000000	                              mov eax, 0	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5e3	      0xe800000000	                          call 0x4000628	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x5e8	        0x488b45f8	                mov rax, qword [rbp - 8]	        98	split-index.c	FUNCTION_6
0x5ec	          0x488b00	                    mov rax, qword [rax]	        98	split-index.c	FUNCTION_6
0x5ef	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        98	split-index.c	FUNCTION_6
0x5f3	        0x48c1e203	                              shl rdx, 3	        98	split-index.c	FUNCTION_6
0x5f7	          0x4801d0	                            add rax, rdx	        98	split-index.c	FUNCTION_6
0x5fa	          0x488b00	                    mov rax, qword [rax]	        98	split-index.c	FUNCTION_6
0x5fd	        0x488b55f8	                mov rdx, qword [rbp - 8]	        98	split-index.c	FUNCTION_6
0x601	          0x488b12	                    mov rdx, qword [rdx]	        98	split-index.c	FUNCTION_6
0x604	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        98	split-index.c	FUNCTION_6
0x608	        0x48c1e103	                              shl rcx, 3	        98	split-index.c	FUNCTION_6
0x60c	          0x4801ca	                            add rdx, rcx	        98	split-index.c	FUNCTION_6
0x60f	          0x488b12	                    mov rdx, qword [rdx]	        98	split-index.c	FUNCTION_6
0x612	          0x8b5238	            mov edx, dword [rdx + 0x38] 	        98	split-index.c	FUNCTION_6
0x615	    0x81ca00000200	                         or edx, 0x20000	        98	split-index.c	FUNCTION_6
0x61b	          0x895038	             mov dword [rax + 0x38], edx	        98	split-index.c	FUNCTION_6
0x61e	        0x488b45f8	                mov rax, qword [rbp - 8]	        99	split-index.c	FUNCTION_6
0x622	        0x488b4028	            mov rax, qword [rax + 0x28] 	        99	split-index.c	FUNCTION_6
0x626	    0xc7403c010000	               mov dword [rax + 0x3c], 1	        99	split-index.c	FUNCTION_6
0x62d	              0x90	                                     nop	       100	split-index.c	FUNCTION_6
0x62e	              0xc9	                                   leave	       100	split-index.c	FUNCTION_6
0x62f	              0xc3	                                     ret	       100	split-index.c	FUNCTION_6
discard_split_index	WHILE,0:CALL,3:functions,0:SWITCH,0:FOR,0:IF,3:DO,0:ELSE,0	41
0xfb0	              0x55	                                push rbp	       280	split-index.c	FUNCTION_11
0xfb1	          0x4889e5	                            mov rbp, rsp	       280	split-index.c	FUNCTION_11
0xfb4	        0x4883ec20	                           sub rsp, 0x20	       280	split-index.c	FUNCTION_11
0xfb8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       280	split-index.c	FUNCTION_11
0xfbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       281	split-index.c	FUNCTION_11
0xfc0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       281	split-index.c	FUNCTION_11
0xfc4	        0x488945f8	                mov qword [rbp - 8], rax	       281	split-index.c	FUNCTION_11
0xfc8	      0x48837df800	                  cmp qword [rbp - 8], 0	       282	split-index.c	FUNCTION_11	IF_1
0xfcd	            0x7463	                            je 0x4001072	       282	split-index.c	FUNCTION_11	IF_1
0xfcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       284	split-index.c	FUNCTION_11
0xfd3	    0x48c740280000	               mov qword [rax + 0x28], 0	       284	split-index.c	FUNCTION_11
0xfdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	split-index.c	FUNCTION_11
0xfdf	          0x8b4044	            mov eax, dword [rax + 0x44] 	       285	split-index.c	FUNCTION_11
0xfe2	          0x8d50ff	                      lea edx, [rax - 1]	       285	split-index.c	FUNCTION_11
0xfe5	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	split-index.c	FUNCTION_11
0xfe9	          0x895044	             mov dword [rax + 0x44], edx	       285	split-index.c	FUNCTION_11
0xfec	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	split-index.c	FUNCTION_11	IF_2
0xff0	          0x8b4044	            mov eax, dword [rax + 0x44] 	       286	split-index.c	FUNCTION_11	IF_2
0xff3	            0x85c0	                           test eax, eax	       286	split-index.c	FUNCTION_11	IF_2
0xff5	            0x753e	                           jne 0x4001075	       286	split-index.c	FUNCTION_11	IF_2
0xff7	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	split-index.c	FUNCTION_11	IF_3
0xffb	        0x488b4018	            mov rax, qword [rax + 0x18] 	       288	split-index.c	FUNCTION_11	IF_3
0xfff	          0x4885c0	                           test rax, rax	       288	split-index.c	FUNCTION_11	IF_3
0x1002	            0x7420	                            je 0x4001064	       288	split-index.c	FUNCTION_11	IF_3
0x1004	        0x488b45f8	                mov rax, qword [rbp - 8]	       289	split-index.c	FUNCTION_11	IF_3	CALL_1
0x1008	        0x488b4018	            mov rax, qword [rax + 0x18] 	       289	split-index.c	FUNCTION_11	IF_3	CALL_1
0x100c	          0x4889c7	                            mov rdi, rax	       289	split-index.c	FUNCTION_11	IF_3	CALL_1
0x100f	      0xe800000000	                          call 0x4001054	       289	split-index.c	FUNCTION_11	IF_3	CALL_1
0x1014	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x1018	        0x488b4018	            mov rax, qword [rax + 0x18] 	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x101c	          0x4889c7	                            mov rdi, rax	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x101f	      0xe800000000	                          call 0x4001064	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x1024	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	split-index.c	FUNCTION_11	CALL_3
0x1028	          0x4889c7	                            mov rdi, rax	       292	split-index.c	FUNCTION_11	CALL_3
0x102b	      0xe800000000	                          call 0x4001070	       292	split-index.c	FUNCTION_11	CALL_3
0x1030	            0xeb04	                           jmp 0x4001076	       292	split-index.c	FUNCTION_11	CALL_3
0x1032	              0x90	                                     nop	       283	split-index.c	FUNCTION_11	IF_1
0x1033	            0xeb01	                           jmp 0x4001076	       283	split-index.c	FUNCTION_11	IF_1
0x1035	              0x90	                                     nop	       287	split-index.c	FUNCTION_11	IF_2
0x1036	              0xc9	                                   leave	       293	split-index.c	FUNCTION_11
0x1037	              0xc3	                                     ret	       293	split-index.c	FUNCTION_11
save_or_free_index_entry	WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,1	52
0x1038	              0x55	                                push rbp	       296	split-index.c	FUNCTION_12
0x1039	          0x4889e5	                            mov rbp, rsp	       296	split-index.c	FUNCTION_12
0x103c	        0x4883ec10	                           sub rsp, 0x10	       296	split-index.c	FUNCTION_12
0x1040	        0x48897df8	                mov qword [rbp - 8], rdi	       296	split-index.c	FUNCTION_12
0x1044	        0x488975f0	             mov qword [rbp - 0x10], rsi	       296	split-index.c	FUNCTION_12
0x1048	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       297	split-index.c	FUNCTION_12	IF_1
0x104c	          0x8b4040	            mov eax, dword [rax + 0x40] 	       297	split-index.c	FUNCTION_12	IF_1
0x104f	            0x85c0	                           test eax, eax	       297	split-index.c	FUNCTION_12	IF_1
0x1051	            0x747a	                            je 0x400110d	       297	split-index.c	FUNCTION_12	IF_1
0x1053	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	split-index.c	FUNCTION_12	IF_1
0x1057	        0x488b4028	            mov rax, qword [rax + 0x28] 	       298	split-index.c	FUNCTION_12	IF_1
0x105b	          0x4885c0	                           test rax, rax	       297	split-index.c	FUNCTION_12	IF_1
0x105e	            0x746d	                            je 0x400110d	       297	split-index.c	FUNCTION_12	IF_1
0x1060	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	split-index.c	FUNCTION_12	IF_1
0x1064	        0x488b4028	            mov rax, qword [rax + 0x28] 	       299	split-index.c	FUNCTION_12	IF_1
0x1068	        0x488b4018	            mov rax, qword [rax + 0x18] 	       299	split-index.c	FUNCTION_12	IF_1
0x106c	          0x4885c0	                           test rax, rax	       298	split-index.c	FUNCTION_12	IF_1
0x106f	            0x745c	                            je 0x400110d	       298	split-index.c	FUNCTION_12	IF_1
0x1071	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       300	split-index.c	FUNCTION_12	IF_1
0x1075	          0x8b5040	            mov edx, dword [rax + 0x40] 	       300	split-index.c	FUNCTION_12	IF_1
0x1078	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	split-index.c	FUNCTION_12	IF_1
0x107c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       300	split-index.c	FUNCTION_12	IF_1
0x1080	        0x488b4018	            mov rax, qword [rax + 0x18] 	       300	split-index.c	FUNCTION_12	IF_1
0x1084	          0x8b400c	              mov eax, dword [rax + 0xc]	       300	split-index.c	FUNCTION_12	IF_1
0x1087	            0x39c2	                            cmp edx, eax	       299	split-index.c	FUNCTION_12	IF_1
0x1089	            0x7742	                            ja 0x400110d	       299	split-index.c	FUNCTION_12	IF_1
0x108b	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	split-index.c	FUNCTION_12	IF_1
0x108f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       301	split-index.c	FUNCTION_12	IF_1
0x1093	        0x488b4018	            mov rax, qword [rax + 0x18] 	       301	split-index.c	FUNCTION_12	IF_1
0x1097	          0x488b10	                    mov rdx, qword [rax]	       301	split-index.c	FUNCTION_12	IF_1
0x109a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       301	split-index.c	FUNCTION_12	IF_1
0x109e	          0x8b4040	            mov eax, dword [rax + 0x40] 	       301	split-index.c	FUNCTION_12	IF_1
0x10a1	          0x83e801	                              sub eax, 1	       301	split-index.c	FUNCTION_12	IF_1
0x10a4	            0x89c0	                            mov eax, eax	       301	split-index.c	FUNCTION_12	IF_1
0x10a6	        0x48c1e003	                              shl rax, 3	       301	split-index.c	FUNCTION_12	IF_1
0x10aa	          0x4801d0	                            add rax, rdx	       301	split-index.c	FUNCTION_12	IF_1
0x10ad	          0x488b00	                    mov rax, qword [rax]	       301	split-index.c	FUNCTION_12	IF_1
0x10b0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       300	split-index.c	FUNCTION_12	IF_1
0x10b4	            0x7517	                           jne 0x400110d	       300	split-index.c	FUNCTION_12	IF_1
0x10b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       302	split-index.c	FUNCTION_12	IF_1
0x10ba	          0x8b4038	            mov eax, dword [rax + 0x38] 	       302	split-index.c	FUNCTION_12	IF_1
0x10bd	       0xd00000200	                         or eax, 0x20000	       302	split-index.c	FUNCTION_12	IF_1
0x10c2	            0x89c2	                            mov edx, eax	       302	split-index.c	FUNCTION_12	IF_1
0x10c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       302	split-index.c	FUNCTION_12	IF_1
0x10c8	          0x895038	             mov dword [rax + 0x38], edx	       302	split-index.c	FUNCTION_12	IF_1
0x10cb	            0xeb0c	                           jmp 0x4001119	       302	split-index.c	FUNCTION_12	IF_1
0x10cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	split-index.c	FUNCTION_12	CALL_1
0x10d1	          0x4889c7	                            mov rdi, rax	       304	split-index.c	FUNCTION_12	CALL_1
0x10d4	      0xe800000000	                          call 0x4001119	       304	split-index.c	FUNCTION_12	CALL_1
0x10d9	              0x90	                                     nop	       305	split-index.c	FUNCTION_12
0x10da	              0xc9	                                   leave	       305	split-index.c	FUNCTION_12
0x10db	              0xc3	                                     ret	       305	split-index.c	FUNCTION_12
merge_base_index	WHILE,0:CALL,12:functions,0:SWITCH,0:FOR,1:IF,2:DO,0:ELSE,0	173
0x795	              0x55	                                push rbp	       131	split-index.c	FUNCTION_8
0x796	          0x4889e5	                            mov rbp, rsp	       131	split-index.c	FUNCTION_8
0x799	        0x4883ec20	                           sub rsp, 0x20	       131	split-index.c	FUNCTION_8
0x79d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       131	split-index.c	FUNCTION_8
0x7a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	split-index.c	FUNCTION_8
0x7a5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       132	split-index.c	FUNCTION_8
0x7a9	        0x488945f8	                mov qword [rbp - 8], rax	       132	split-index.c	FUNCTION_8
0x7ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	split-index.c	FUNCTION_8	CALL_1
0x7b1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       135	split-index.c	FUNCTION_8	CALL_1
0x7b5	          0x4889c7	                            mov rdi, rax	       135	split-index.c	FUNCTION_8	CALL_1
0x7b8	      0xe8e2fbffff	        call sym.mark_base_index_entries	       135	split-index.c	FUNCTION_8	CALL_1
0x7bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	split-index.c	FUNCTION_8
0x7c1	          0x488b10	                    mov rdx, qword [rax]	       137	split-index.c	FUNCTION_8
0x7c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	split-index.c	FUNCTION_8
0x7c8	        0x48895030	             mov qword [rax + 0x30], rdx	       137	split-index.c	FUNCTION_8
0x7cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	split-index.c	FUNCTION_8
0x7d0	          0x8b500c	              mov edx, dword [rax + 0xc]	       138	split-index.c	FUNCTION_8
0x7d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	split-index.c	FUNCTION_8
0x7d7	          0x895038	             mov dword [rax + 0x38], edx	       138	split-index.c	FUNCTION_8
0x7da	        0x488b45f8	                mov rax, qword [rbp - 8]	       139	split-index.c	FUNCTION_8
0x7de	        0x488b4018	            mov rax, qword [rax + 0x18] 	       139	split-index.c	FUNCTION_8
0x7e2	          0x8b500c	              mov edx, dword [rax + 0xc]	       139	split-index.c	FUNCTION_8
0x7e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       139	split-index.c	FUNCTION_8
0x7e9	          0x89500c	              mov dword [rax + 0xc], edx	       139	split-index.c	FUNCTION_8
0x7ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	split-index.c	FUNCTION_8
0x7f0	    0x48c700000000	                      mov qword [rax], 0	       140	split-index.c	FUNCTION_8
0x7f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	split-index.c	FUNCTION_8
0x7fb	    0xc74010000000	               mov dword [rax + 0x10], 0	       141	split-index.c	FUNCTION_8
0x802	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x806	          0x8b500c	              mov edx, dword [rax + 0xc]	       142	split-index.c	FUNCTION_8	CALL_2
0x809	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x80d	          0x8b4010	            mov eax, dword [rax + 0x10] 	       142	split-index.c	FUNCTION_8	CALL_2
0x810	            0x39c2	                            cmp edx, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x812	            0x767f	                           jbe 0x40008d3	       142	split-index.c	FUNCTION_8	CALL_2
0x814	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x818	          0x8b5010	            mov edx, dword [rax + 0x10] 	       142	split-index.c	FUNCTION_8	CALL_2
0x81b	            0x89d0	                            mov eax, edx	       142	split-index.c	FUNCTION_8	CALL_2
0x81d	             0x1c0	                            add eax, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x81f	             0x1d0	                            add eax, edx	       142	split-index.c	FUNCTION_8	CALL_2
0x821	          0x83c030	                           add eax, 0x30	       142	split-index.c	FUNCTION_8	CALL_2
0x824	            0xd1e8	                              shr eax, 1	       142	split-index.c	FUNCTION_8	CALL_2
0x826	            0x89c2	                            mov edx, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x828	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x82c	          0x8b400c	              mov eax, dword [rax + 0xc]	       142	split-index.c	FUNCTION_8	CALL_2
0x82f	            0x39c2	                            cmp edx, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x831	            0x7310	                           jae 0x4000883	       142	split-index.c	FUNCTION_8	CALL_2
0x833	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x837	          0x8b500c	              mov edx, dword [rax + 0xc]	       142	split-index.c	FUNCTION_8	CALL_2
0x83a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x83e	          0x895010	             mov dword [rax + 0x10], edx	       142	split-index.c	FUNCTION_8	CALL_2
0x841	            0xeb1b	                           jmp 0x400089e	       142	split-index.c	FUNCTION_8	CALL_2
0x843	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x847	          0x8b5010	            mov edx, dword [rax + 0x10] 	       142	split-index.c	FUNCTION_8	CALL_2
0x84a	            0x89d0	                            mov eax, edx	       142	split-index.c	FUNCTION_8	CALL_2
0x84c	             0x1c0	                            add eax, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x84e	             0x1d0	                            add eax, edx	       142	split-index.c	FUNCTION_8	CALL_2
0x850	          0x83c030	                           add eax, 0x30	       142	split-index.c	FUNCTION_8	CALL_2
0x853	            0xd1e8	                              shr eax, 1	       142	split-index.c	FUNCTION_8	CALL_2
0x855	            0x89c2	                            mov edx, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x857	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x85b	          0x895010	             mov dword [rax + 0x10], edx	       142	split-index.c	FUNCTION_8	CALL_2
0x85e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x862	          0x8b4010	            mov eax, dword [rax + 0x10] 	       142	split-index.c	FUNCTION_8	CALL_2
0x865	            0x89c0	                            mov eax, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x867	          0x4889c6	                            mov rsi, rax	       142	split-index.c	FUNCTION_8	CALL_2
0x86a	      0xbf08000000	                              mov edi, 8	       142	split-index.c	FUNCTION_8	CALL_2
0x86f	      0xe897f7ffff	                        call sym.st_mult	       142	split-index.c	FUNCTION_8	CALL_2
0x874	          0x4889c2	                            mov rdx, rax	       142	split-index.c	FUNCTION_8	CALL_2
0x877	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x87b	          0x488b00	                    mov rax, qword [rax]	       142	split-index.c	FUNCTION_8	CALL_2
0x87e	          0x4889d6	                            mov rsi, rdx	       142	split-index.c	FUNCTION_8	CALL_2
0x881	          0x4889c7	                            mov rdi, rax	       142	split-index.c	FUNCTION_8	CALL_2
0x884	      0xe800000000	                          call 0x40008c9	       142	split-index.c	FUNCTION_8	CALL_2
0x889	          0x4889c2	                            mov rdx, rax	       142	split-index.c	FUNCTION_8	CALL_2
0x88c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	split-index.c	FUNCTION_8	CALL_2
0x890	          0x488910	                    mov qword [rax], rdx	       142	split-index.c	FUNCTION_8	CALL_2
0x893	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	split-index.c	FUNCTION_8	CALL_3
0x897	          0x8b400c	              mov eax, dword [rax + 0xc]	       143	split-index.c	FUNCTION_8	CALL_3
0x89a	            0x89c2	                            mov edx, eax	       143	split-index.c	FUNCTION_8	CALL_3
0x89c	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	split-index.c	FUNCTION_8	CALL_3
0x8a0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       143	split-index.c	FUNCTION_8	CALL_3
0x8a4	          0x488b30	                    mov rsi, qword [rax]	       143	split-index.c	FUNCTION_8	CALL_3
0x8a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	split-index.c	FUNCTION_8	CALL_3
0x8ab	          0x488b00	                    mov rax, qword [rax]	       143	split-index.c	FUNCTION_8	CALL_3
0x8ae	      0xb908000000	                              mov ecx, 8	       143	split-index.c	FUNCTION_8	CALL_3
0x8b3	          0x4889c7	                            mov rdi, rax	       143	split-index.c	FUNCTION_8	CALL_3
0x8b6	      0xe8a2f7ffff	                     call sym.copy_array	       143	split-index.c	FUNCTION_8	CALL_3
0x8bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	split-index.c	FUNCTION_8
0x8bf	    0xc7403c000000	               mov dword [rax + 0x3c], 0	       145	split-index.c	FUNCTION_8
0x8c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       146	split-index.c	FUNCTION_8
0x8ca	    0xc74040000000	               mov dword [rax + 0x40], 0	       146	split-index.c	FUNCTION_8
0x8d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	split-index.c	FUNCTION_8	CALL_4
0x8d5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       147	split-index.c	FUNCTION_8	CALL_4
0x8d9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       147	split-index.c	FUNCTION_8	CALL_4
0x8dd	      0xbe00000000	                              mov esi, 0	       147	split-index.c	FUNCTION_8	CALL_4
0x8e2	          0x4889c7	                            mov rdi, rax	       147	split-index.c	FUNCTION_8	CALL_4
0x8e5	      0xe800000000	                          call 0x400092a	       147	split-index.c	FUNCTION_8	CALL_4
0x8ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	split-index.c	FUNCTION_8	CALL_5
0x8ee	        0x488b4020	            mov rax, qword [rax + 0x20] 	       148	split-index.c	FUNCTION_8	CALL_5
0x8f2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       148	split-index.c	FUNCTION_8	CALL_5
0x8f6	      0xbe00000000	                              mov esi, 0	       148	split-index.c	FUNCTION_8	CALL_5
0x8fb	          0x4889c7	                            mov rdi, rax	       148	split-index.c	FUNCTION_8	CALL_5
0x8fe	      0xe800000000	                          call 0x4000943	       148	split-index.c	FUNCTION_8	CALL_5
0x903	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	split-index.c	FUNCTION_8	IF_1
0x907	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       149	split-index.c	FUNCTION_8	IF_1
0x90a	            0x85c0	                           test eax, eax	       149	split-index.c	FUNCTION_8	IF_1
0x90c	            0x740c	                            je 0x400095a	       149	split-index.c	FUNCTION_8	IF_1
0x90e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	split-index.c	FUNCTION_8	CALL_6
0x912	          0x4889c7	                            mov rdi, rax	       150	split-index.c	FUNCTION_8	CALL_6
0x915	      0xe800000000	                          call 0x400095a	       150	split-index.c	FUNCTION_8	CALL_6
0x91a	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	split-index.c	FUNCTION_8	FOR_1
0x91e	          0x8b4040	            mov eax, dword [rax + 0x40] 	       152	split-index.c	FUNCTION_8	FOR_1
0x921	          0x8945f4	              mov dword [rbp - 0xc], eax	       152	split-index.c	FUNCTION_8	FOR_1
0x924	            0xeb76	                           jmp 0x40009dc	       152	split-index.c	FUNCTION_8	FOR_1
0x926	        0x488b45f8	                mov rax, qword [rbp - 8]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x92a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x92e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x931	        0x48c1e203	                              shl rdx, 3	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x935	          0x4801d0	                            add rax, rdx	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x938	          0x488b00	                    mov rax, qword [rax]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x93b	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x93e	            0x85c0	                           test eax, eax	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x940	            0x7514	                           jne 0x4000996	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x942	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x945	            0x89c6	                            mov esi, eax	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x947	      0xbf00000000	                              mov edi, 0	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x94c	      0xb800000000	                              mov eax, 0	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x951	      0xe800000000	                          call 0x4000996	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x956	        0x488b45f8	                mov rax, qword [rbp - 8]	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x95a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x95e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x961	        0x48c1e203	                              shl rdx, 3	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x965	          0x4801d0	                            add rax, rdx	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x968	          0x488b08	                    mov rcx, qword [rax]	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x96b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x96f	      0xba25000000	                           mov edx, 0x25	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x974	          0x4889ce	                            mov rsi, rcx	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x977	          0x4889c7	                            mov rdi, rax	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x97a	      0xe800000000	                          call 0x40009bf	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x97f	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	split-index.c	FUNCTION_8	FOR_1
0x983	        0x488b4030	            mov rax, qword [rax + 0x30] 	       165	split-index.c	FUNCTION_8	FOR_1
0x987	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       165	split-index.c	FUNCTION_8	FOR_1
0x98a	        0x48c1e203	                              shl rdx, 3	       165	split-index.c	FUNCTION_8	FOR_1
0x98e	          0x4801d0	                            add rax, rdx	       165	split-index.c	FUNCTION_8	FOR_1
0x991	    0x48c700000000	                      mov qword [rax], 0	       165	split-index.c	FUNCTION_8	FOR_1
0x998	        0x8345f401	                add dword [rbp - 0xc], 1	       152	split-index.c	FUNCTION_8	FOR_1
0x99c	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	split-index.c	FUNCTION_8	FOR_1
0x9a0	          0x8b4038	            mov eax, dword [rax + 0x38] 	       152	split-index.c	FUNCTION_8	FOR_1
0x9a3	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       152	split-index.c	FUNCTION_8	FOR_1
0x9a6	     0xf877affffff	                            ja 0x4000966	       152	split-index.c	FUNCTION_8	FOR_1
0x9ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	split-index.c	FUNCTION_8	CALL_10
0x9b0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       168	split-index.c	FUNCTION_8	CALL_10
0x9b4	          0x4889c7	                            mov rdi, rax	       168	split-index.c	FUNCTION_8	CALL_10
0x9b7	      0xe800000000	                          call 0x40009fc	       168	split-index.c	FUNCTION_8	CALL_10
0x9bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	split-index.c	FUNCTION_8	CALL_11
0x9c0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       169	split-index.c	FUNCTION_8	CALL_11
0x9c4	          0x4889c7	                            mov rdi, rax	       169	split-index.c	FUNCTION_8	CALL_11
0x9c7	      0xe800000000	                          call 0x4000a0c	       169	split-index.c	FUNCTION_8	CALL_11
0x9cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	split-index.c	FUNCTION_8	CALL_12
0x9d0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       170	split-index.c	FUNCTION_8	CALL_12
0x9d4	          0x4889c7	                            mov rdi, rax	       170	split-index.c	FUNCTION_8	CALL_12
0x9d7	      0xe800000000	                          call 0x4000a1c	       170	split-index.c	FUNCTION_8	CALL_12
0x9dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	split-index.c	FUNCTION_8	CALL_12
0x9e0	    0x48c740300000	               mov qword [rax + 0x30], 0	       170	split-index.c	FUNCTION_8	CALL_12
0x9e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	split-index.c	FUNCTION_8
0x9ec	    0x48c740200000	               mov qword [rax + 0x20], 0	       171	split-index.c	FUNCTION_8
0x9f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	split-index.c	FUNCTION_8
0x9f8	    0x48c740280000	               mov qword [rax + 0x28], 0	       172	split-index.c	FUNCTION_8
0xa00	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	split-index.c	FUNCTION_8
0xa04	    0xc74038000000	               mov dword [rax + 0x38], 0	       173	split-index.c	FUNCTION_8
0xa0b	              0x90	                                     nop	       174	split-index.c	FUNCTION_8
0xa0c	              0xc9	                                   leave	       174	split-index.c	FUNCTION_8
0xa0d	              0xc3	                                     ret	       174	split-index.c	FUNCTION_8
prepare_to_write_split_index	WHILE,0:CALL,12:functions,0:SWITCH,0:FOR,3:IF,10:DO,0:ELSE,1	381
0xa0e	              0x55	                                push rbp	       177	split-index.c	FUNCTION_9
0xa0f	          0x4889e5	                            mov rbp, rsp	       177	split-index.c	FUNCTION_9
0xa12	        0x4883ec50	                           sub rsp, 0x50	       177	split-index.c	FUNCTION_9
0xa16	        0x48897db8	             mov qword [rbp - 0x48], rdi	       177	split-index.c	FUNCTION_9
0xa1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       178	split-index.c	FUNCTION_9	CALL_1
0xa1e	          0x4889c7	                            mov rdi, rax	       178	split-index.c	FUNCTION_9	CALL_1
0xa21	      0xe800000000	                          call 0x4000a66	       178	split-index.c	FUNCTION_9	CALL_1
0xa26	        0x488945e8	             mov qword [rbp - 0x18], rax	       178	split-index.c	FUNCTION_9	CALL_1
0xa2a	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       179	split-index.c	FUNCTION_9
0xa32	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       180	split-index.c	FUNCTION_9
0xa39	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       180	split-index.c	FUNCTION_9
0xa40	      0xe800000000	                          call 0x4000a85	       182	split-index.c	FUNCTION_9	CALL_2
0xa45	          0x4889c2	                            mov rdx, rax	       182	split-index.c	FUNCTION_9	CALL_2
0xa48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       182	split-index.c	FUNCTION_9	CALL_2
0xa4c	        0x48895020	             mov qword [rax + 0x20], rdx	       182	split-index.c	FUNCTION_9	CALL_2
0xa50	      0xe800000000	                          call 0x4000a95	       183	split-index.c	FUNCTION_9	CALL_3
0xa55	          0x4889c2	                            mov rdx, rax	       183	split-index.c	FUNCTION_9	CALL_3
0xa58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	split-index.c	FUNCTION_9	CALL_3
0xa5c	        0x48895028	             mov qword [rax + 0x28], rdx	       183	split-index.c	FUNCTION_9	CALL_3
0xa60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	split-index.c	FUNCTION_9	IF_1
0xa64	        0x488b4018	            mov rax, qword [rax + 0x18] 	       185	split-index.c	FUNCTION_9	IF_1
0xa68	          0x4885c0	                           test rax, rax	       185	split-index.c	FUNCTION_9	IF_1
0xa6b	     0xf8444030000	                            je 0x4000df5	       185	split-index.c	FUNCTION_9	IF_1
0xa71	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa78	      0xe9a7010000	                           jmp 0x4000c64	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa7d	    0xc745d000b000	      mov dword [rbp - 0x30], 0x6000b000	       196	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa84	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa88	          0x488b00	                    mov rax, qword [rax]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa8b	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa8e	          0x4863d2	                         movsxd rdx, edx	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa91	        0x48c1e203	                              shl rdx, 3	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa95	          0x4801d0	                            add rax, rdx	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa98	          0x488b00	                    mov rax, qword [rax]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa9b	        0x488945f0	             mov qword [rbp - 0x10], rax	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0xa9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0xaa3	          0x8b4040	            mov eax, dword [rax + 0x40] 	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0xaa6	            0x85c0	                           test eax, eax	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0xaa8	     0xf846e010000	                            je 0x4000c5c	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0xaae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xab2	          0x8b5040	            mov edx, dword [rax + 0x40] 	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xab5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xab9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xabd	          0x8b400c	              mov eax, dword [rax + 0xc]	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xac0	            0x39c2	                            cmp edx, eax	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xac2	            0x7610	                           jbe 0x4000b14	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xac4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xac8	    0xc74040000000	               mov dword [rax + 0x40], 0	       203	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xacf	      0xe94c010000	                           jmp 0x4000c60	       204	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0xad4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0xad8	          0x8b4038	            mov eax, dword [rax + 0x38] 	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0xadb	       0xd00000004	           or eax, loc.imp.discard_index	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0xae0	            0x89c2	                            mov edx, eax	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0xae2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0xae6	          0x895038	             mov dword [rax + 0x38], edx	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0xae9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xaed	        0x488b4018	            mov rax, qword [rax + 0x18] 	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xaf1	          0x488b10	                    mov rdx, qword [rax]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xaf4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xaf8	          0x8b4040	            mov eax, dword [rax + 0x40] 	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xafb	          0x83e801	                              sub eax, 1	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xafe	            0x89c0	                            mov eax, eax	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb00	        0x48c1e003	                              shl rax, 3	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb04	          0x4801d0	                            add rax, rdx	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb07	          0x488b00	                    mov rax, qword [rax]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb0a	        0x488945f8	                mov qword [rbp - 8], rax	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       208	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0xb12	        0x483b45f8	                cmp rax, qword [rbp - 8]	       208	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0xb16	     0xf8403010000	                            je 0x4000c5f	       208	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0xb1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb20	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb23	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb27	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb2a	            0x39c2	                            cmp edx, eax	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb2c	            0x751f	                           jne 0x4000b8d	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb2e	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0xb32	        0x488d5058	                   lea rdx, [rax + 0x58]	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0xb36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0xb3a	        0x4883c058	                           add rax, 0x58	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0xb3e	          0x4889d6	                            mov rsi, rdx	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0xb41	          0x4889c7	                            mov rdi, rax	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0xb44	      0xe800000000	                          call 0x4000b89	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0xb49	            0x85c0	                           test eax, eax	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb4b	            0x7410	                            je 0x4000b9d	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       212	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb51	    0xc74040000000	               mov dword [rax + 0x40], 0	       212	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb58	      0xe9c3000000	                           jmp 0x4000c60	       213	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0xb5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       215	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb61	          0x8b4038	            mov eax, dword [rax + 0x38] 	       215	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb64	          0x8945d4	             mov dword [rbp - 0x2c], eax	       215	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb67	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb6b	          0x8b4038	            mov eax, dword [rax + 0x38] 	       216	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb6e	          0x8945d8	             mov dword [rbp - 0x28], eax	       216	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb71	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb75	          0x8b4038	            mov eax, dword [rax + 0x38] 	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb78	          0x2345d0	             and eax, dword [rbp - 0x30]	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb7b	            0x89c2	                            mov edx, eax	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb81	          0x895038	             mov dword [rax + 0x38], edx	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb84	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb88	          0x8b4038	            mov eax, dword [rax + 0x38] 	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb8b	          0x2345d0	             and eax, dword [rbp - 0x30]	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb8e	            0x89c2	                            mov edx, eax	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb90	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb94	          0x895038	             mov dword [rax + 0x38], edx	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0xb97	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xb9b	        0x488d4810	                   lea rcx, [rax + 0x10]	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xb9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xba3	        0x4883c010	                           add rax, 0x10	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xba7	      0xba48000000	                           mov edx, 0x48	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xbac	          0x4889ce	                            mov rsi, rcx	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xbaf	          0x4889c7	                            mov rdi, rax	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xbb2	      0xe800000000	                          call 0x4000bf7	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xbb7	          0x8945dc	             mov dword [rbp - 0x24], eax	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0xbba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       223	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbbe	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       223	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbc1	          0x895038	             mov dword [rax + 0x38], edx	       223	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbc8	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       224	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbcb	          0x895038	             mov dword [rax + 0x38], edx	       224	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbce	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       225	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbd2	            0x7415	                            je 0x4000c29	       225	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbd4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbd8	          0x8b4038	            mov eax, dword [rax + 0x38] 	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbdb	       0xd00000008	                    or eax, section_end.	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbe0	            0x89c2	                            mov edx, eax	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbe2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbe6	          0x895038	             mov dword [rax + 0x38], edx	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0xbe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_6
0xbed	          0x4889c7	                            mov rdi, rax	       227	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_6
0xbf0	      0xe800000000	                          call 0x4000c35	       227	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_6
0xbf5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbf9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xbfd	          0x488b10	                    mov rdx, qword [rax]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc04	          0x8b4040	            mov eax, dword [rax + 0x40] 	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc07	          0x83e801	                              sub eax, 1	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc0a	            0x89c0	                            mov eax, eax	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc0c	        0x48c1e003	                              shl rax, 3	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc10	          0x4801c2	                            add rdx, rax	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc17	          0x488902	                    mov qword [rdx], rax	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc1a	            0xeb04	                           jmp 0x4000c60	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc1c	              0x90	                                     nop	       201	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0xc1d	            0xeb01	                           jmp 0x4000c60	       201	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0xc1f	              0x90	                                     nop	       209	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0xc20	        0x8345c401	               add dword [rbp - 0x3c], 1	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc24	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc28	          0x8b500c	              mov edx, dword [rax + 0xc]	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc2b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc2e	            0x39c2	                            cmp edx, eax	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc30	     0xf8747feffff	                            ja 0x4000abd	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0xc36	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc3d	      0xe95d010000	                           jmp 0x4000ddf	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc46	        0x488b4018	            mov rax, qword [rax + 0x18] 	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc4a	          0x488b00	                    mov rax, qword [rax]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc4d	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc50	          0x4863d2	                         movsxd rdx, edx	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc53	        0x48c1e203	                              shl rdx, 3	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc57	          0x4801d0	                            add rax, rdx	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc5a	          0x488b00	                    mov rax, qword [rax]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc5d	        0x488945f0	             mov qword [rbp - 0x10], rax	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0xc61	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc65	          0x8b4038	            mov eax, dword [rax + 0x38] 	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc68	      0x2500000200	                        and eax, 0x20000	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc6d	            0x85c0	                           test eax, eax	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc6f	            0x7510	                           jne 0x4000cc1	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc71	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       233	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc75	          0x8b4038	            mov eax, dword [rax + 0x38] 	       233	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc78	      0x2500000004	          and eax, loc.imp.discard_index	       233	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc7d	            0x85c0	                           test eax, eax	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc7f	            0x751e	                           jne 0x4000cdf	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0xc81	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc84	          0x4863d0	                         movsxd rdx, eax	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc8b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc8f	          0x4889d6	                            mov rsi, rdx	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc92	          0x4889c7	                            mov rdi, rax	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc95	      0xe800000000	                          call 0x4000cda	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc9a	      0xe9da000000	                           jmp 0x4000db9	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0xc9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xca3	          0x8b4038	            mov eax, dword [rax + 0x38] 	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xca6	      0x2500000008	                   and eax, section_end.	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcab	            0x85c0	                           test eax, eax	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcad	     0xf84c6000000	                            je 0x4000db9	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcb3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0xcb6	          0x4863d0	                         movsxd rdx, eax	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0xcb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0xcbd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0xcc1	          0x4889d6	                            mov rsi, rdx	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0xcc4	          0x4889c7	                            mov rdi, rax	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0xcc7	      0xe800000000	                          call 0x4000d0c	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0xccc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcd0	          0x8b4038	            mov eax, dword [rax + 0x38] 	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcd3	       0xd00000010	                      or eax, 0x10000000	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcd8	            0x89c2	                            mov edx, eax	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xcde	          0x895038	             mov dword [rax + 0x38], edx	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xce1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xce4	          0x83c001	                              add eax, 1	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xce7	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcea	            0x7e6c	                           jle 0x4000d98	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcec	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcef	          0x8d5010	                   lea edx, [rax + 0x10]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcf2	            0x89d0	                            mov eax, edx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcf4	             0x1c0	                            add eax, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcf6	             0x1d0	                            add eax, edx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcf8	            0x89c2	                            mov edx, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcfa	          0xc1ea1f	                           shr edx, 0x1f	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcfd	             0x1d0	                            add eax, edx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xcff	            0xd1f8	                              sar eax, 1	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd01	            0x89c2	                            mov edx, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd03	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd06	          0x83c001	                              add eax, 1	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd09	            0x39c2	                            cmp edx, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd0b	            0x7d0b	                           jge 0x4000d58	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd0d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd10	          0x83c001	                              add eax, 1	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd13	          0x8945cc	             mov dword [rbp - 0x34], eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd16	            0xeb18	                           jmp 0x4000d70	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd18	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd1b	          0x8d5010	                   lea edx, [rax + 0x10]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd1e	            0x89d0	                            mov eax, edx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd20	             0x1c0	                            add eax, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd22	             0x1d0	                            add eax, edx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd24	            0x89c2	                            mov edx, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd26	          0xc1ea1f	                           shr edx, 0x1f	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd29	             0x1d0	                            add eax, edx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd2b	            0xd1f8	                              sar eax, 1	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd2d	          0x8945cc	             mov dword [rbp - 0x34], eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd30	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd33	            0x4898	                                    cdqe	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd35	          0x4889c6	                            mov rsi, rax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd38	      0xbf08000000	                              mov edi, 8	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd3d	      0xe8c9f2ffff	                        call sym.st_mult	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd42	          0x4889c2	                            mov rdx, rax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd45	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd49	          0x4889d6	                            mov rsi, rdx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd4c	          0x4889c7	                            mov rdi, rax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd4f	      0xe800000000	                          call 0x4000d94	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd54	        0x488945e0	             mov qword [rbp - 0x20], rax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0xd58	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd5b	          0x8d5001	                      lea edx, [rax + 1]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd5e	          0x8955c8	             mov dword [rbp - 0x38], edx	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd61	            0x4898	                                    cdqe	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd63	    0x488d14c50000	                        lea rdx, [rax*8]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd6f	          0x4801c2	                            add rdx, rax	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd76	          0x488902	                    mov qword [rdx], rax	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0xd79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0xd7d	        0x4883c044	                           add rax, 0x44	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0xd81	          0x4889c7	                            mov rdi, rax	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0xd84	      0xe8a3f3ffff	                    call sym.is_null_oid	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0xd89	            0x85c0	                           test eax, eax	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0xd8b	            0x740e	                            je 0x4000ddb	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0xd8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       242	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9
0xd91	         0xfb65038	           movzx edx, byte [rax + 0x38] 	       242	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9
0xd95	          0x83ca04	                               or edx, 4	       242	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9
0xd98	          0x885038	               mov byte [rax + 0x38], dl	       242	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9
0xd9b	        0x8345c401	               add dword [rbp - 0x3c], 1	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xd9f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xda3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xda7	          0x8b500c	              mov edx, dword [rax + 0xc]	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xdaa	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xdad	            0x39c2	                            cmp edx, eax	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xdaf	     0xf878dfeffff	                            ja 0x4000c82	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0xdb5	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       246	split-index.c	FUNCTION_9	FOR_3
0xdbc	      0xe925010000	                           jmp 0x4000f26	       246	split-index.c	FUNCTION_9	FOR_3
0xdc1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       247	split-index.c	FUNCTION_9	FOR_3
0xdc5	          0x488b00	                    mov rax, qword [rax]	       247	split-index.c	FUNCTION_9	FOR_3
0xdc8	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       247	split-index.c	FUNCTION_9	FOR_3
0xdcb	          0x4863d2	                         movsxd rdx, edx	       247	split-index.c	FUNCTION_9	FOR_3
0xdce	        0x48c1e203	                              shl rdx, 3	       247	split-index.c	FUNCTION_9	FOR_3
0xdd2	          0x4801d0	                            add rax, rdx	       247	split-index.c	FUNCTION_9	FOR_3
0xdd5	          0x488b00	                    mov rax, qword [rax]	       247	split-index.c	FUNCTION_9	FOR_3
0xdd8	        0x488945f0	             mov qword [rbp - 0x10], rax	       247	split-index.c	FUNCTION_9	FOR_3
0xddc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xde0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xde4	          0x4885c0	                           test rax, rax	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xde7	            0x740f	                            je 0x4000e38	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xde9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xded	          0x8b4040	            mov eax, dword [rax + 0x40] 	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xdf0	            0x85c0	                           test eax, eax	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xdf2	     0xf85d5000000	                           jne 0x4000f0d	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xdf8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xdfc	          0x8b4038	            mov eax, dword [rax + 0x38] 	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xdff	      0x2500000200	                        and eax, 0x20000	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xe04	            0x85c0	                           test eax, eax	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xe06	     0xf85c1000000	                           jne 0x4000f0d	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0xe0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe10	          0x8b4038	            mov eax, dword [rax + 0x38] 	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe13	      0x2500000010	                     and eax, 0x10000000	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe18	            0x85c0	                           test eax, eax	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe1a	            0x7419	                            je 0x4000e75	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe1c	      0xb900000000	                              mov ecx, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe21	      0xbaf9000000	                           mov edx, 0xf9	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe26	      0xbe00000000	                              mov esi, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe2b	      0xbf00000000	                              mov edi, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe30	      0xe800000000	                          call 0x4000e75	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0xe35	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe38	          0x83c001	                              add eax, 1	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe3b	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe3e	            0x7e6c	                           jle 0x4000eec	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe40	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe43	          0x8d5010	                   lea edx, [rax + 0x10]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe46	            0x89d0	                            mov eax, edx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe48	             0x1c0	                            add eax, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe4a	             0x1d0	                            add eax, edx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe4c	            0x89c2	                            mov edx, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe4e	          0xc1ea1f	                           shr edx, 0x1f	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe51	             0x1d0	                            add eax, edx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe53	            0xd1f8	                              sar eax, 1	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe55	            0x89c2	                            mov edx, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe57	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe5a	          0x83c001	                              add eax, 1	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe5d	            0x39c2	                            cmp edx, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe5f	            0x7d0b	                           jge 0x4000eac	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe61	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe64	          0x83c001	                              add eax, 1	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe67	          0x8945cc	             mov dword [rbp - 0x34], eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe6a	            0xeb18	                           jmp 0x4000ec4	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe6c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe6f	          0x8d5010	                   lea edx, [rax + 0x10]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe72	            0x89d0	                            mov eax, edx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe74	             0x1c0	                            add eax, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe76	             0x1d0	                            add eax, edx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe78	            0x89c2	                            mov edx, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe7a	          0xc1ea1f	                           shr edx, 0x1f	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe7d	             0x1d0	                            add eax, edx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe7f	            0xd1f8	                              sar eax, 1	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe81	          0x8945cc	             mov dword [rbp - 0x34], eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe84	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe87	            0x4898	                                    cdqe	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe89	          0x4889c6	                            mov rsi, rax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe8c	      0xbf08000000	                              mov edi, 8	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe91	      0xe875f1ffff	                        call sym.st_mult	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe96	          0x4889c2	                            mov rdx, rax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xe9d	          0x4889d6	                            mov rsi, rdx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xea0	          0x4889c7	                            mov rdi, rax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xea3	      0xe800000000	                          call 0x4000ee8	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xea8	        0x488945e0	             mov qword [rbp - 0x20], rax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0xeac	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xeaf	          0x8d5001	                      lea edx, [rax + 1]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xeb2	          0x8955c8	             mov dword [rbp - 0x38], edx	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xeb5	            0x4898	                                    cdqe	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xeb7	    0x488d14c50000	                        lea rdx, [rax*8]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xebf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xec3	          0x4801c2	                            add rdx, rax	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xec6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xeca	          0x488902	                    mov qword [rdx], rax	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0xecd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       253	split-index.c	FUNCTION_9	FOR_3
0xed1	          0x8b4038	            mov eax, dword [rax + 0x38] 	       253	split-index.c	FUNCTION_9	FOR_3
0xed4	      0x25fffffffb	                     and eax, 0xfbffffff	       253	split-index.c	FUNCTION_9	FOR_3
0xed9	            0x89c2	                            mov edx, eax	       253	split-index.c	FUNCTION_9	FOR_3
0xedb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       253	split-index.c	FUNCTION_9	FOR_3
0xedf	          0x895038	             mov dword [rax + 0x38], edx	       253	split-index.c	FUNCTION_9	FOR_3
0xee2	        0x8345c401	               add dword [rbp - 0x3c], 1	       246	split-index.c	FUNCTION_9	FOR_3
0xee6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       246	split-index.c	FUNCTION_9	FOR_3
0xeea	          0x8b500c	              mov edx, dword [rax + 0xc]	       246	split-index.c	FUNCTION_9	FOR_3
0xeed	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       246	split-index.c	FUNCTION_9	FOR_3
0xef0	            0x39c2	                            cmp edx, eax	       246	split-index.c	FUNCTION_9	FOR_3
0xef2	     0xf87c9feffff	                            ja 0x4000e01	       246	split-index.c	FUNCTION_9	FOR_3
0xef8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	split-index.c	FUNCTION_9
0xefc	          0x488b10	                    mov rdx, qword [rax]	       260	split-index.c	FUNCTION_9
0xeff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       260	split-index.c	FUNCTION_9
0xf03	        0x48895030	             mov qword [rax + 0x30], rdx	       260	split-index.c	FUNCTION_9
0xf07	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       261	split-index.c	FUNCTION_9
0xf0b	          0x8b500c	              mov edx, dword [rax + 0xc]	       261	split-index.c	FUNCTION_9
0xf0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       261	split-index.c	FUNCTION_9
0xf12	          0x895038	             mov dword [rax + 0x38], edx	       261	split-index.c	FUNCTION_9
0xf15	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       262	split-index.c	FUNCTION_9
0xf19	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       262	split-index.c	FUNCTION_9
0xf1d	          0x488910	                    mov qword [rax], rdx	       262	split-index.c	FUNCTION_9
0xf20	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       263	split-index.c	FUNCTION_9
0xf23	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       263	split-index.c	FUNCTION_9
0xf27	          0x89500c	              mov dword [rax + 0xc], edx	       263	split-index.c	FUNCTION_9
0xf2a	              0x90	                                     nop	       264	split-index.c	FUNCTION_9
0xf2b	              0xc9	                                   leave	       264	split-index.c	FUNCTION_9
0xf2c	              0xc3	                                     ret	       264	split-index.c	FUNCTION_9
mark_base_index_entries	WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,1:IF,0:DO,0:ELSE,0	24
0x39f	              0x55	                                push rbp	        57	split-index.c	FUNCTION_4
0x3a0	          0x4889e5	                            mov rbp, rsp	        57	split-index.c	FUNCTION_4
0x3a3	        0x48897de8	             mov qword [rbp - 0x18], rdi	        57	split-index.c	FUNCTION_4
0x3a7	    0xc745fc000000	                  mov dword [rbp - 4], 0	        66	split-index.c	FUNCTION_4	FOR_1
0x3ae	            0xeb24	                           jmp 0x4000414	        66	split-index.c	FUNCTION_4	FOR_1
0x3b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	split-index.c	FUNCTION_4	FOR_1
0x3b4	          0x488b00	                    mov rax, qword [rax]	        67	split-index.c	FUNCTION_4	FOR_1
0x3b7	          0x8b55fc	                mov edx, dword [rbp - 4]	        67	split-index.c	FUNCTION_4	FOR_1
0x3ba	          0x4863d2	                         movsxd rdx, edx	        67	split-index.c	FUNCTION_4	FOR_1
0x3bd	        0x48c1e203	                              shl rdx, 3	        67	split-index.c	FUNCTION_4	FOR_1
0x3c1	          0x4801d0	                            add rax, rdx	        67	split-index.c	FUNCTION_4	FOR_1
0x3c4	          0x488b00	                    mov rax, qword [rax]	        67	split-index.c	FUNCTION_4	FOR_1
0x3c7	          0x8b55fc	                mov edx, dword [rbp - 4]	        67	split-index.c	FUNCTION_4	FOR_1
0x3ca	          0x83c201	                              add edx, 1	        67	split-index.c	FUNCTION_4	FOR_1
0x3cd	          0x895040	             mov dword [rax + 0x40], edx	        67	split-index.c	FUNCTION_4	FOR_1
0x3d0	        0x8345fc01	                  add dword [rbp - 4], 1	        66	split-index.c	FUNCTION_4	FOR_1
0x3d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	split-index.c	FUNCTION_4	FOR_1
0x3d8	          0x8b500c	              mov edx, dword [rax + 0xc]	        66	split-index.c	FUNCTION_4	FOR_1
0x3db	          0x8b45fc	                mov eax, dword [rbp - 4]	        66	split-index.c	FUNCTION_4	FOR_1
0x3de	            0x39c2	                            cmp edx, eax	        66	split-index.c	FUNCTION_4	FOR_1
0x3e0	            0x77ce	                            ja 0x40003f0	        66	split-index.c	FUNCTION_4	FOR_1
0x3e2	              0x90	                                     nop	        68	split-index.c	FUNCTION_4
0x3e3	              0x5d	                                 pop rbp	        68	split-index.c	FUNCTION_4
0x3e4	              0xc3	                                     ret	        68	split-index.c	FUNCTION_4
const_error	WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,0:IF,0:DO,0:ELSE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_21
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_21
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_21
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_21
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_21
finish_writing_split_index	WHILE,0:CALL,4:functions,0:SWITCH,0:FOR,0:IF,0:DO,0:ELSE,0	35
0xf2d	              0x55	                                push rbp	       267	split-index.c	FUNCTION_10
0xf2e	          0x4889e5	                            mov rbp, rsp	       267	split-index.c	FUNCTION_10
0xf31	        0x4883ec20	                           sub rsp, 0x20	       267	split-index.c	FUNCTION_10
0xf35	        0x48897de8	             mov qword [rbp - 0x18], rdi	       267	split-index.c	FUNCTION_10
0xf39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	split-index.c	FUNCTION_10	CALL_1
0xf3d	          0x4889c7	                            mov rdi, rax	       268	split-index.c	FUNCTION_10	CALL_1
0xf40	      0xe800000000	                          call 0x4000f85	       268	split-index.c	FUNCTION_10	CALL_1
0xf45	        0x488945f8	                mov qword [rbp - 8], rax	       268	split-index.c	FUNCTION_10	CALL_1
0xf49	        0x488b45f8	                mov rax, qword [rbp - 8]	       270	split-index.c	FUNCTION_10	CALL_2
0xf4d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       270	split-index.c	FUNCTION_10	CALL_2
0xf51	          0x4889c7	                            mov rdi, rax	       270	split-index.c	FUNCTION_10	CALL_2
0xf54	      0xe800000000	                          call 0x4000f99	       270	split-index.c	FUNCTION_10	CALL_2
0xf59	        0x488b45f8	                mov rax, qword [rbp - 8]	       271	split-index.c	FUNCTION_10	CALL_3
0xf5d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       271	split-index.c	FUNCTION_10	CALL_3
0xf61	          0x4889c7	                            mov rdi, rax	       271	split-index.c	FUNCTION_10	CALL_3
0xf64	      0xe800000000	                          call 0x4000fa9	       271	split-index.c	FUNCTION_10	CALL_3
0xf69	        0x488b45f8	                mov rax, qword [rbp - 8]	       272	split-index.c	FUNCTION_10
0xf6d	    0x48c740200000	               mov qword [rax + 0x20], 0	       272	split-index.c	FUNCTION_10
0xf75	        0x488b45f8	                mov rax, qword [rbp - 8]	       273	split-index.c	FUNCTION_10
0xf79	    0x48c740280000	               mov qword [rax + 0x28], 0	       273	split-index.c	FUNCTION_10
0xf81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	split-index.c	FUNCTION_10	CALL_4
0xf85	          0x488b00	                    mov rax, qword [rax]	       274	split-index.c	FUNCTION_10	CALL_4
0xf88	          0x4889c7	                            mov rdi, rax	       274	split-index.c	FUNCTION_10	CALL_4
0xf8b	      0xe800000000	                          call 0x4000fd0	       274	split-index.c	FUNCTION_10	CALL_4
0xf90	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	split-index.c	FUNCTION_10
0xf94	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       275	split-index.c	FUNCTION_10
0xf98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	split-index.c	FUNCTION_10
0xf9c	          0x488910	                    mov qword [rax], rdx	       275	split-index.c	FUNCTION_10
0xf9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       276	split-index.c	FUNCTION_10
0xfa3	          0x8b5038	            mov edx, dword [rax + 0x38] 	       276	split-index.c	FUNCTION_10
0xfa6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       276	split-index.c	FUNCTION_10
0xfaa	          0x89500c	              mov dword [rax + 0xc], edx	       276	split-index.c	FUNCTION_10
0xfad	              0x90	                                     nop	       277	split-index.c	FUNCTION_10
0xfae	              0xc9	                                   leave	       277	split-index.c	FUNCTION_10
0xfaf	              0xc3	                                     ret	       277	split-index.c	FUNCTION_10
remove_split_index	WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,0	18
0x1210	              0x55	                                push rbp	       331	split-index.c	FUNCTION_15
0x1211	          0x4889e5	                            mov rbp, rsp	       331	split-index.c	FUNCTION_15
0x1214	        0x48897df8	                mov qword [rbp - 8], rdi	       331	split-index.c	FUNCTION_15
0x1218	        0x488b45f8	                mov rax, qword [rbp - 8]	       332	split-index.c	FUNCTION_15	IF_1
0x121c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       332	split-index.c	FUNCTION_15	IF_1
0x1220	          0x4885c0	                           test rax, rax	       332	split-index.c	FUNCTION_15	IF_1
0x1223	            0x741f	                            je 0x4001284	       332	split-index.c	FUNCTION_15	IF_1
0x1225	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	split-index.c	FUNCTION_15	IF_1
0x1229	    0x48c740280000	               mov qword [rax + 0x28], 0	       339	split-index.c	FUNCTION_15	IF_1
0x1231	        0x488b45f8	                mov rax, qword [rbp - 8]	       340	split-index.c	FUNCTION_15	IF_1
0x1235	          0x8b4014	            mov eax, dword [rax + 0x14] 	       340	split-index.c	FUNCTION_15	IF_1
0x1238	          0x83c801	                               or eax, 1	       340	split-index.c	FUNCTION_15	IF_1
0x123b	            0x89c2	                            mov edx, eax	       340	split-index.c	FUNCTION_15	IF_1
0x123d	        0x488b45f8	                mov rax, qword [rbp - 8]	       340	split-index.c	FUNCTION_15	IF_1
0x1241	          0x895014	             mov dword [rax + 0x14], edx	       340	split-index.c	FUNCTION_15	IF_1
0x1244	              0x90	                                     nop	       342	split-index.c	FUNCTION_15
0x1245	              0x5d	                                 pop rbp	       342	split-index.c	FUNCTION_15
0x1246	              0xc3	                                     ret	       342	split-index.c	FUNCTION_15
copy_array	WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,0	23
0x5d	              0x55	                                push rbp	       852	git-compat-util.h	FUNCTION_32
0x5e	          0x4889e5	                            mov rbp, rsp	       852	git-compat-util.h	FUNCTION_32
0x61	        0x4883ec20	                           sub rsp, 0x20	       852	git-compat-util.h	FUNCTION_32
0x65	        0x48897df8	                mov qword [rbp - 8], rdi	       852	git-compat-util.h	FUNCTION_32
0x69	        0x488975f0	             mov qword [rbp - 0x10], rsi	       852	git-compat-util.h	FUNCTION_32
0x6d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       852	git-compat-util.h	FUNCTION_32
0x71	        0x48894de0	             mov qword [rbp - 0x20], rcx	       852	git-compat-util.h	FUNCTION_32
0x75	      0x48837de800	               cmp qword [rbp - 0x18], 0	       853	git-compat-util.h	FUNCTION_32	IF_1
0x7a	            0x7429	                            je 0x40000e5	       853	git-compat-util.h	FUNCTION_32	IF_1
0x7c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x80	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x84	          0x4889d6	                            mov rsi, rdx	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x87	          0x4889c7	                            mov rdi, rax	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x8a	      0xe87cffffff	                        call sym.st_mult	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x8f	          0x4889c2	                            mov rdx, rax	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x92	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x96	        0x488b45f8	                mov rax, qword [rbp - 8]	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x9a	          0x4889ce	                            mov rsi, rcx	       854	git-compat-util.h	FUNCTION_32	CALL_2
0x9d	          0x4889c7	                            mov rdi, rax	       854	git-compat-util.h	FUNCTION_32	CALL_2
0xa0	      0xe800000000	                          call 0x40000e5	       854	git-compat-util.h	FUNCTION_32	CALL_2
0xa5	              0x90	                                     nop	       855	git-compat-util.h	FUNCTION_32
0xa6	              0xc9	                                   leave	       855	git-compat-util.h	FUNCTION_32
0xa7	              0xc3	                                     ret	       855	git-compat-util.h	FUNCTION_32
init_split_index	WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0:IF,1:DO,0:ELSE,0	21
0x17e	              0x55	                                push rbp	         6	split-index.c	FUNCTION_1
0x17f	          0x4889e5	                            mov rbp, rsp	         6	split-index.c	FUNCTION_1
0x182	        0x4883ec10	                           sub rsp, 0x10	         6	split-index.c	FUNCTION_1
0x186	        0x48897df8	                mov qword [rbp - 8], rdi	         6	split-index.c	FUNCTION_1
0x18a	        0x488b45f8	                mov rax, qword [rbp - 8]	         7	split-index.c	FUNCTION_1	IF_1
0x18e	        0x488b4028	            mov rax, qword [rax + 0x28] 	         7	split-index.c	FUNCTION_1	IF_1
0x192	          0x4885c0	                           test rax, rax	         7	split-index.c	FUNCTION_1	IF_1
0x195	            0x7529	                           jne 0x4000200	         7	split-index.c	FUNCTION_1	IF_1
0x197	      0xbe48000000	                           mov esi, 0x48	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x19c	      0xbf01000000	                              mov edi, 1	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x1a1	      0xe800000000	                          call 0x40001e6	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x1a6	          0x4889c2	                            mov rdx, rax	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x1a9	        0x488b45f8	                mov rax, qword [rbp - 8]	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x1ad	        0x48895028	             mov qword [rax + 0x28], rdx	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x1b1	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	split-index.c	FUNCTION_1	IF_1
0x1b5	        0x488b4028	            mov rax, qword [rax + 0x28] 	         9	split-index.c	FUNCTION_1	IF_1
0x1b9	    0xc74044010000	               mov dword [rax + 0x44], 1	         9	split-index.c	FUNCTION_1	IF_1
0x1c0	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	split-index.c	FUNCTION_1
0x1c4	        0x488b4028	            mov rax, qword [rax + 0x28] 	        11	split-index.c	FUNCTION_1
0x1c8	              0xc9	                                   leave	        12	split-index.c	FUNCTION_1
0x1c9	              0xc3	                                     ret	        12	split-index.c	FUNCTION_1
