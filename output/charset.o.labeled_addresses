byte2cells	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	17
0x120d	              0x55	                                push rbp	       718	charset.c	FUNCTION_11
0x120e	          0x4889e5	                            mov rbp, rsp	       718	charset.c	FUNCTION_11
0x1211	          0x897dfc	                mov dword [rbp - 4], edi	       718	charset.c	FUNCTION_11
0x1214	    0x8b0500000000	            mov eax, dword [0x0400125a] 	       720	charset.c	FUNCTION_11	IF_1
0x121a	            0x85c0	                           test eax, eax	       720	charset.c	FUNCTION_11	IF_1
0x121c	            0x740d	                            je 0x400126b	       720	charset.c	FUNCTION_11	IF_1
0x121e	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	       720	charset.c	FUNCTION_11	IF_1
0x1222	            0x7e07	                           jle 0x400126b	       720	charset.c	FUNCTION_11	IF_1
0x1224	      0xb800000000	                              mov eax, 0	       721	charset.c	FUNCTION_11	IF_1
0x1229	            0xeb12	                           jmp 0x400127d	       721	charset.c	FUNCTION_11	IF_1
0x122b	          0x8b45fc	                mov eax, dword [rbp - 4]	       723	charset.c	FUNCTION_11
0x122e	            0x4898	                                    cdqe	       723	charset.c	FUNCTION_11
0x1230	     0xfb680000000	                   movzx eax, byte [rax]	       723	charset.c	FUNCTION_11
0x1237	           0xfb6c0	                           movzx eax, al	       723	charset.c	FUNCTION_11
0x123a	          0x83e007	                              and eax, 7	       723	charset.c	FUNCTION_11
0x123d	              0x5d	                                 pop rbp	       724	charset.c	FUNCTION_11
0x123e	              0xc3	                                     ret	       724	charset.c	FUNCTION_11
vim_iswordp_buf	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	29
0x16d9	              0x55	                                push rbp	       926	charset.c	FUNCTION_25
0x16da	          0x4889e5	                            mov rbp, rsp	       926	charset.c	FUNCTION_25
0x16dd	        0x4883ec20	                           sub rsp, 0x20	       926	charset.c	FUNCTION_25
0x16e1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       926	charset.c	FUNCTION_25
0x16e5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       926	charset.c	FUNCTION_25
0x16e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       927	charset.c	FUNCTION_25
0x16ed	           0xfb600	                   movzx eax, byte [rax]	       927	charset.c	FUNCTION_25
0x16f0	           0xfb6c0	                           movzx eax, al	       927	charset.c	FUNCTION_25
0x16f3	          0x8945fc	                mov dword [rbp - 4], eax	       927	charset.c	FUNCTION_25
0x16f6	    0x8b0500000000	            mov eax, dword [0x0400173c] 	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x16fc	            0x85c0	                           test eax, eax	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x16fe	            0x7423	                            je 0x4001763	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x1700	          0x8b45fc	                mov eax, dword [rbp - 4]	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x1703	            0x4898	                                    cdqe	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x1705	     0xfb680000000	                   movzx eax, byte [rax]	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x170c	            0x3c01	                               cmp al, 1	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x170e	            0x7e13	                           jle 0x4001763	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x1710	    0x488b05000000	            mov rax, qword [0x04001757] 	       931	charset.c	FUNCTION_25	IF_1
0x1717	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       931	charset.c	FUNCTION_25	IF_1
0x171b	          0x4889d7	                            mov rdi, rdx	       931	charset.c	FUNCTION_25	IF_1
0x171e	            0xffd0	                                call rax	       931	charset.c	FUNCTION_25	IF_1
0x1720	          0x8945fc	                mov dword [rbp - 4], eax	       931	charset.c	FUNCTION_25	IF_1
0x1723	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       933	charset.c	FUNCTION_25	CALL_2
0x1727	          0x8b45fc	                mov eax, dword [rbp - 4]	       933	charset.c	FUNCTION_25	CALL_2
0x172a	          0x4889d6	                            mov rsi, rdx	       933	charset.c	FUNCTION_25	CALL_2
0x172d	            0x89c7	                            mov edi, eax	       933	charset.c	FUNCTION_25	CALL_2
0x172f	      0xe800000000	                          call 0x4001774	       933	charset.c	FUNCTION_25	CALL_2
0x1734	              0xc9	                                   leave	       934	charset.c	FUNCTION_25
0x1735	              0xc3	                                     ret	       934	charset.c	FUNCTION_25
skipwhite	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	18
0x2996	              0x55	                                push rbp	      1530	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x2997	          0x4889e5	                            mov rbp, rsp	      1530	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x299a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1530	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x299e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1531	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x29a2	        0x488945f8	                mov qword [rbp - 8], rax	      1531	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x29a6	            0xeb05	                           jmp 0x40029ed	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29a8	      0x488345f801	                  add qword [rbp - 8], 1	      1534	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1
0x29ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29b1	           0xfb600	                   movzx eax, byte [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29b4	            0x3c20	                            cmp al, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29b6	            0x74f0	                            je 0x40029e8	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29bc	           0xfb600	                   movzx eax, byte [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29bf	            0x3c09	                               cmp al, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29c1	            0x74e5	                            je 0x40029e8	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x29c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1535	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x29c7	              0x5d	                                 pop rbp	      1536	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x29c8	              0xc3	                                     ret	      1536	charset.c	ELSE_3	ELSE_4	FUNCTION_39
backslash_halve_save	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	18
0x3537	              0x55	                                push rbp	      2090	charset.c	FUNCTION_64
0x3538	          0x4889e5	                            mov rbp, rsp	      2090	charset.c	FUNCTION_64
0x353b	        0x4883ec20	                           sub rsp, 0x20	      2090	charset.c	FUNCTION_64
0x353f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2090	charset.c	FUNCTION_64
0x3543	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2093	charset.c	FUNCTION_64	CALL_1
0x3547	          0x4889c7	                            mov rdi, rax	      2093	charset.c	FUNCTION_64	CALL_1
0x354a	      0xe800000000	                          call 0x400358f	      2093	charset.c	FUNCTION_64	CALL_1
0x354f	        0x488945f8	                mov qword [rbp - 8], rax	      2093	charset.c	FUNCTION_64	CALL_1
0x3553	      0x48837df800	                  cmp qword [rbp - 8], 0	      2094	charset.c	FUNCTION_64	IF_1
0x3558	            0x7506	                           jne 0x40035a0	      2094	charset.c	FUNCTION_64	IF_1
0x355a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2095	charset.c	FUNCTION_64	IF_1
0x355e	            0xeb10	                           jmp 0x40035b0	      2095	charset.c	FUNCTION_64	IF_1
0x3560	        0x488b45f8	                mov rax, qword [rbp - 8]	      2096	charset.c	FUNCTION_64	CALL_2
0x3564	          0x4889c7	                            mov rdi, rax	      2096	charset.c	FUNCTION_64	CALL_2
0x3567	      0xe800000000	                          call 0x40035ac	      2096	charset.c	FUNCTION_64	CALL_2
0x356c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2097	charset.c	FUNCTION_64
0x3570	              0xc9	                                   leave	      2098	charset.c	FUNCTION_64
0x3571	              0xc3	                                     ret	      2098	charset.c	FUNCTION_64
vim_strnsize	IF,1:DO,0:SWITCH,0:ELSE,1:WHILE,1:functions,0:CALL,2:FOR,0	44
0x1358	              0x55	                                push rbp	       787	charset.c	FUNCTION_15
0x1359	          0x4889e5	                            mov rbp, rsp	       787	charset.c	FUNCTION_15
0x135c	        0x4883ec20	                           sub rsp, 0x20	       787	charset.c	FUNCTION_15
0x1360	        0x48897de8	             mov qword [rbp - 0x18], rdi	       787	charset.c	FUNCTION_15
0x1364	          0x8975e4	             mov dword [rbp - 0x1c], esi	       787	charset.c	FUNCTION_15
0x1367	    0xc745f8000000	                  mov dword [rbp - 8], 0	       788	charset.c	FUNCTION_15
0x136e	            0xeb5c	                           jmp 0x400140c	       790	charset.c	FUNCTION_15	WHILE_1
0x1370	    0x8b0500000000	            mov eax, dword [0x040013b6] 	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x1376	            0x85c0	                           test eax, eax	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x1378	            0x7436	                            je 0x40013f0	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x137a	    0x488b05000000	            mov rax, qword [0x040013c1] 	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x1381	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x1385	          0x4889d7	                            mov rdi, rdx	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x1388	            0xffd0	                                call rax	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x138a	          0x8945fc	                mov dword [rbp - 4], eax	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x138d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x1391	          0x4889c7	                            mov rdi, rax	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x1394	      0xe800000000	                          call 0x40013d9	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x1399	           0x145f8	                add dword [rbp - 8], eax	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x139c	          0x8b45fc	                mov eax, dword [rbp - 4]	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x139f	            0x4898	                                    cdqe	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x13a1	        0x480145e8	            add qword [rbp - 0x18], rax 	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x13a5	          0x8b45fc	                mov eax, dword [rbp - 4]	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x13a8	          0x83e801	                              sub eax, 1	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x13ab	          0x2945e4	             sub dword [rbp - 0x1c], eax	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x13ae	            0xeb1c	                           jmp 0x400140c	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x13b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13b4	        0x488d5001	                      lea rdx, [rax + 1]	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13b8	        0x488955e8	             mov qword [rbp - 0x18], rdx	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13bc	           0xfb600	                   movzx eax, byte [rax]	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13bf	           0xfb6c0	                           movzx eax, al	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13c2	            0x89c7	                            mov edi, eax	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13c4	      0xe800000000	                          call 0x4001409	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13c9	           0x145f8	                add dword [rbp - 8], eax	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x13cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	charset.c	FUNCTION_15	WHILE_1
0x13d0	           0xfb600	                   movzx eax, byte [rax]	       790	charset.c	FUNCTION_15	WHILE_1
0x13d3	            0x84c0	                             test al, al	       790	charset.c	FUNCTION_15	WHILE_1
0x13d5	            0x740a	                            je 0x4001421	       790	charset.c	FUNCTION_15	WHILE_1
0x13d7	        0x836de401	               sub dword [rbp - 0x1c], 1	       790	charset.c	FUNCTION_15	WHILE_1
0x13db	        0x837de400	               cmp dword [rbp - 0x1c], 0	       790	charset.c	FUNCTION_15	WHILE_1
0x13df	            0x798f	                           jns 0x40013b0	       790	charset.c	FUNCTION_15	WHILE_1
0x13e1	          0x8b45f8	                mov eax, dword [rbp - 8]	       805	charset.c	FUNCTION_15
0x13e4	              0xc9	                                   leave	       806	charset.c	FUNCTION_15
0x13e5	              0xc3	                                     ret	       806	charset.c	FUNCTION_15
vim_str2nr	IF,26:DO,0:SWITCH,0:ELSE,11:WHILE,4:functions,0:CALL,6:FOR,1	321
0x2fb1	              0x55	                                push rbp	      1871	charset.c	FUNCTION_59
0x2fb2	          0x4889e5	                            mov rbp, rsp	      1871	charset.c	FUNCTION_59
0x2fb5	              0x53	                                push rbx	      1871	charset.c	FUNCTION_59
0x2fb6	        0x4883ec58	                           sub rsp, 0x58	      1871	charset.c	FUNCTION_59
0x2fba	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1871	charset.c	FUNCTION_59
0x2fbe	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1871	charset.c	FUNCTION_59
0x2fc2	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1871	charset.c	FUNCTION_59
0x2fc6	          0x894db4	             mov dword [rbp - 0x4c], ecx	      1871	charset.c	FUNCTION_59
0x2fc9	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1871	charset.c	FUNCTION_59
0x2fcd	        0x4c894da0	              mov qword [rbp - 0x60], r9	      1871	charset.c	FUNCTION_59
0x2fd1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1872	charset.c	FUNCTION_59
0x2fd5	        0x488945e0	             mov qword [rbp - 0x20], rax	      1872	charset.c	FUNCTION_59
0x2fd9	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1873	charset.c	FUNCTION_59
0x2fe0	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1874	charset.c	FUNCTION_59
0x2fe7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1875	charset.c	FUNCTION_59
0x2fef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1878	charset.c	FUNCTION_59	IF_1
0x2ff3	           0xfb600	                   movzx eax, byte [rax]	      1878	charset.c	FUNCTION_59	IF_1
0x2ff6	            0x3c2d	                            cmp al, 0x2d	      1878	charset.c	FUNCTION_59	IF_1
0x2ff8	            0x750c	                           jne 0x4003046	      1878	charset.c	FUNCTION_59	IF_1
0x2ffa	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1880	charset.c	FUNCTION_59	IF_1
0x3001	      0x488345e001	               add qword [rbp - 0x20], 1	      1881	charset.c	FUNCTION_59	IF_1
0x3006	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1885	charset.c	FUNCTION_59	IF_2
0x300a	           0xfb600	                   movzx eax, byte [rax]	      1885	charset.c	FUNCTION_59	IF_2
0x300d	            0x3c30	                            cmp al, 0x30	      1885	charset.c	FUNCTION_59	IF_2
0x300f	     0xf8533010000	                           jne 0x4003188	      1885	charset.c	FUNCTION_59	IF_2
0x3015	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1885	charset.c	FUNCTION_59	IF_2
0x3019	        0x4883c001	                              add rax, 1	      1885	charset.c	FUNCTION_59	IF_2
0x301d	           0xfb600	                   movzx eax, byte [rax]	      1885	charset.c	FUNCTION_59	IF_2
0x3020	            0x3c38	                            cmp al, 0x38	      1885	charset.c	FUNCTION_59	IF_2
0x3022	     0xf8420010000	                            je 0x4003188	      1885	charset.c	FUNCTION_59	IF_2
0x3028	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1885	charset.c	FUNCTION_59	IF_2
0x302c	        0x4883c001	                              add rax, 1	      1885	charset.c	FUNCTION_59	IF_2
0x3030	           0xfb600	                   movzx eax, byte [rax]	      1885	charset.c	FUNCTION_59	IF_2
0x3033	            0x3c39	                            cmp al, 0x39	      1885	charset.c	FUNCTION_59	IF_2
0x3035	     0xf840d010000	                            je 0x4003188	      1885	charset.c	FUNCTION_59	IF_2
0x303b	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1886	charset.c	FUNCTION_59	IF_2
0x303f	            0x740a	                            je 0x400308b	      1886	charset.c	FUNCTION_59	IF_2
0x3041	        0x837d1001	               cmp dword [rbp + 0x10], 1	      1886	charset.c	FUNCTION_59	IF_2
0x3045	     0xf8efd000000	                           jle 0x4003188	      1886	charset.c	FUNCTION_59	IF_2
0x304b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1888	charset.c	FUNCTION_59	IF_2
0x304f	        0x4883c001	                              add rax, 1	      1888	charset.c	FUNCTION_59	IF_2
0x3053	           0xfb600	                   movzx eax, byte [rax]	      1888	charset.c	FUNCTION_59	IF_2
0x3056	           0xfb6c0	                           movzx eax, al	      1888	charset.c	FUNCTION_59	IF_2
0x3059	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1888	charset.c	FUNCTION_59	IF_2
0x305c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x305f	          0x83e004	                              and eax, 4	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x3062	            0x85c0	                           test eax, eax	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x3064	            0x743b	                            je 0x40030e1	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x3066	        0x837dd458	           cmp dword [rbp - 0x2c], 0x58 	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x306a	            0x7406	                            je 0x40030b2	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x306c	        0x837dd478	           cmp dword [rbp - 0x2c], 0x78 	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x3070	            0x752f	                           jne 0x40030e1	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x3072	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x3076	        0x4883c002	                              add rax, 2	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x307a	           0xfb600	                   movzx eax, byte [rax]	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x307d	           0xfb6c0	                           movzx eax, al	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x3080	            0x89c7	                            mov edi, eax	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x3082	      0xe800000000	                          call 0x40030c7	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x3087	            0x85c0	                           test eax, eax	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x3089	            0x7416	                            je 0x40030e1	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x308b	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x308f	            0x7406	                            je 0x40030d7	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x3091	        0x837d1002	               cmp dword [rbp + 0x10], 2	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x3095	            0x7e0a	                           jle 0x40030e1	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x3097	      0x488345e002	               add qword [rbp - 0x20], 2	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x309c	      0xe9a7000000	                           jmp 0x4003188	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x30a1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30a4	          0x83e001	                              and eax, 1	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30a7	            0x85c0	                           test eax, eax	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30a9	            0x7438	                            je 0x4003123	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30ab	        0x837dd442	           cmp dword [rbp - 0x2c], 0x42 	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30af	            0x7406	                            je 0x40030f7	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30b1	        0x837dd462	           cmp dword [rbp - 0x2c], 0x62 	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30b5	            0x752c	                           jne 0x4003123	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30bb	        0x4883c002	                              add rax, 2	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30bf	           0xfb600	                   movzx eax, byte [rax]	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30c2	           0xfb6c0	                           movzx eax, al	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30c5	            0x89c7	                            mov edi, eax	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30c7	      0xe800000000	                          call 0x400310c	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30cc	            0x85c0	                           test eax, eax	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30ce	            0x7413	                            je 0x4003123	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x30d0	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30d4	            0x7406	                            je 0x400311c	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30d6	        0x837d1002	               cmp dword [rbp + 0x10], 2	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30da	            0x7e07	                           jle 0x4003123	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30dc	      0x488345e002	               add qword [rbp - 0x20], 2	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30e1	            0xeb65	                           jmp 0x4003188	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x30e3	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1902	charset.c	FUNCTION_59	IF_2	ELSE_2
0x30ea	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x30ed	          0x83e002	                              and eax, 2	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x30f0	            0x85c0	                           test eax, eax	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x30f2	            0x7454	                            je 0x4003188	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x30f4	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x30fb	            0xeb28	                           jmp 0x4003165	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x30fd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x3100	          0x4863d0	                         movsxd rdx, eax	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x3103	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x3107	          0x4801d0	                            add rax, rdx	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x310a	           0xfb600	                   movzx eax, byte [rax]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x310d	            0x3c37	                            cmp al, 0x37	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x310f	            0x7609	                           jbe 0x400315a	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x3111	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1910	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x3118	            0xeb2e	                           jmp 0x4003188	      1911	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x311a	    0xc745d4300000	           mov dword [rbp - 0x2c], 0x30 	      1913	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1
0x3121	        0x8345dc01	               add dword [rbp - 0x24], 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3125	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3128	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x312b	            0x741b	                            je 0x4003188	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x312d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3130	          0x4863d0	                         movsxd rdx, eax	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3133	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3137	          0x4801d0	                            add rax, rdx	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x313a	           0xfb600	                   movzx eax, byte [rax]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x313d	           0xfb6c0	                           movzx eax, al	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3140	          0x83e830	                           sub eax, 0x30	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3143	          0x83f809	                              cmp eax, 9	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3146	            0x76b5	                           jbe 0x400313d	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x3148	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1922	charset.c	FUNCTION_59
0x314f	        0x837dd442	           cmp dword [rbp - 0x2c], 0x42 	      1923	charset.c	FUNCTION_59	IF_7
0x3153	            0x740c	                            je 0x40031a1	      1923	charset.c	FUNCTION_59	IF_7
0x3155	        0x837dd462	           cmp dword [rbp - 0x2c], 0x62 	      1923	charset.c	FUNCTION_59	IF_7
0x3159	            0x7406	                            je 0x40031a1	      1923	charset.c	FUNCTION_59	IF_7
0x315b	        0x837db409	               cmp dword [rbp - 0x4c], 9	      1923	charset.c	FUNCTION_59	IF_7
0x315f	            0x757c	                           jne 0x400321d	      1923	charset.c	FUNCTION_59	IF_7
0x3161	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1926	charset.c	FUNCTION_59	IF_7	IF_8
0x3165	            0x7451	                            je 0x40031f8	      1926	charset.c	FUNCTION_59	IF_7	IF_8
0x3167	        0x8345dc02	               add dword [rbp - 0x24], 2	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x316b	            0xeb4b	                           jmp 0x40031f8	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x316d	    0x48b8feffffff	         movabs rax, 0x7ffffffffffffffe 	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x3177	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x317b	            0x7720	                            ja 0x40031dd	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x317d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x3181	        0x488d1400	                    lea rdx, [rax + rax]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x3185	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x3189	           0xfb600	                   movzx eax, byte [rax]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x318c	           0xfb6c0	                           movzx eax, al	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x318f	          0x83e830	                           sub eax, 0x30	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x3192	            0x4898	                                    cdqe	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x3194	          0x4801d0	                            add rax, rdx	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x3197	        0x488945e8	             mov qword [rbp - 0x18], rax	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x319b	            0xeb08	                           jmp 0x40031e5	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x319d	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1934	charset.c	FUNCTION_59	IF_7	WHILE_1	ELSE_3
0x31a5	      0x488345e001	               add qword [rbp - 0x20], 1	      1935	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31aa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x31ad	          0x8d5001	                      lea edx, [rax + 1]	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x31b0	          0x8955dc	             mov dword [rbp - 0x24], edx	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x31b3	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x31b6	            0x741f	                            je 0x4003217	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x31b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31bc	           0xfb600	                   movzx eax, byte [rax]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31bf	            0x3c2f	                            cmp al, 0x2f	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31c1	     0xf868b010000	                           jbe 0x4003392	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31cb	           0xfb600	                   movzx eax, byte [rax]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31ce	            0x3c31	                            cmp al, 0x31	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31d0	            0x769b	                           jbe 0x40031ad	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x31d2	      0xe97b010000	                           jmp 0x4003392	      1923	charset.c	FUNCTION_59	IF_7
0x31d7	              0x90	                                     nop	      1937	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x31d8	      0xe975010000	                           jmp 0x4003392	      1923	charset.c	FUNCTION_59	IF_7
0x31dd	        0x837dd430	           cmp dword [rbp - 0x2c], 0x30 	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x31e1	            0x7457	                            je 0x400327a	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x31e3	        0x837db40a	            cmp dword [rbp - 0x4c], 0xa 	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x31e7	            0x7576	                           jne 0x400329f	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x31e9	            0xeb4f	                           jmp 0x400327a	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x31eb	    0x48b8feffffff	         movabs rax, 0x1ffffffffffffffe 	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x31f5	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x31f9	            0x7724	                            ja 0x400325f	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x31fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x31ff	    0x488d14c50000	                        lea rdx, [rax*8]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x3207	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x320b	           0xfb600	                   movzx eax, byte [rax]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x320e	           0xfb6c0	                           movzx eax, al	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x3211	          0x83e830	                           sub eax, 0x30	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x3214	            0x4898	                                    cdqe	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x3216	          0x4801d0	                            add rax, rdx	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x3219	        0x488945e8	             mov qword [rbp - 0x18], rax	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x321d	            0xeb08	                           jmp 0x4003267	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x321f	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1949	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	ELSE_5
0x3227	      0x488345e001	               add qword [rbp - 0x20], 1	      1950	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x322c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x322f	          0x8d5001	                      lea edx, [rax + 1]	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x3232	          0x8955dc	             mov dword [rbp - 0x24], edx	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x3235	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x3238	            0x741f	                            je 0x4003299	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x323a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x323e	           0xfb600	                   movzx eax, byte [rax]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x3241	            0x3c2f	                            cmp al, 0x2f	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x3243	     0xf860c010000	                           jbe 0x4003395	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x3249	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x324d	           0xfb600	                   movzx eax, byte [rax]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x3250	            0x3c37	                            cmp al, 0x37	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x3252	            0x7697	                           jbe 0x400322b	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x3254	      0xe9fc000000	                           jmp 0x4003395	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x3259	              0x90	                                     nop	      1952	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x325a	      0xe9f6000000	                           jmp 0x4003395	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x325f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x3263	            0x750a	                           jne 0x40032af	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x3265	        0x837db40c	            cmp dword [rbp - 0x4c], 0xc 	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x3269	     0xf85cf000000	                           jne 0x400337e	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x326f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1958	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x3273	            0x7458	                            je 0x400330d	      1958	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x3275	        0x8345dc02	               add dword [rbp - 0x24], 2	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x3279	            0xeb52	                           jmp 0x400330d	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x327b	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x3285	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x3289	            0x7727	                            ja 0x40032f2	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x328b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x328f	        0x48c1e004	                              shl rax, 4	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x3293	          0x4889c3	                            mov rbx, rax	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x3296	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x329a	           0xfb600	                   movzx eax, byte [rax]	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x329d	           0xfb6c0	                           movzx eax, al	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x32a0	            0x89c7	                            mov edi, eax	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x32a2	      0xe800000000	                          call 0x40032e7	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x32a7	            0x4898	                                    cdqe	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x32a9	          0x4801d8	                            add rax, rbx	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x32ac	        0x488945e8	             mov qword [rbp - 0x18], rax	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x32b0	            0xeb08	                           jmp 0x40032fa	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x32b2	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1966	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	ELSE_7
0x32ba	      0x488345e001	               add qword [rbp - 0x20], 1	      1967	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3
0x32bf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x32c2	          0x8d5001	                      lea edx, [rax + 1]	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x32c5	          0x8955dc	             mov dword [rbp - 0x24], edx	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x32c8	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x32cb	            0x7417	                            je 0x4003324	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x32cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x32d1	           0xfb600	                   movzx eax, byte [rax]	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x32d4	           0xfb6c0	                           movzx eax, al	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x32d7	            0x89c7	                            mov edi, eax	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x32d9	      0xe800000000	                          call 0x400331e	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x32de	            0x85c0	                           test eax, eax	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x32e0	            0x7599	                           jne 0x40032bb	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x32e2	            0xeb75	                           jmp 0x4003399	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x32e4	              0x90	                                     nop	      1969	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x32e5	            0xeb72	                           jmp 0x4003399	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x32e7	    0x48b898999999	          movabs rax, 0x1999999999999998	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x32f1	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x32f5	            0x772c	                            ja 0x4003363	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x32f7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x32fb	          0x4889d0	                            mov rax, rdx	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x32fe	        0x48c1e002	                              shl rax, 2	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3302	          0x4801d0	                            add rax, rdx	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3305	          0x4801c0	                            add rax, rax	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3308	          0x4889c2	                            mov rdx, rax	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x330b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x330f	           0xfb600	                   movzx eax, byte [rax]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3312	           0xfb6c0	                           movzx eax, al	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3315	          0x83e830	                           sub eax, 0x30	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3318	            0x4898	                                    cdqe	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x331a	          0x4801d0	                            add rax, rdx	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x331d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3321	            0xeb08	                           jmp 0x400336b	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x3323	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1981	charset.c	FUNCTION_59	ELSE_8	WHILE_4	ELSE_9
0x332b	      0x488345e001	               add qword [rbp - 0x20], 1	      1982	charset.c	FUNCTION_59	ELSE_8	WHILE_4
0x3330	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x3333	          0x8d5001	                      lea edx, [rax + 1]	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x3336	          0x8955dc	             mov dword [rbp - 0x24], edx	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x3339	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x333c	            0x741a	                            je 0x4003398	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x333e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x3342	           0xfb600	                   movzx eax, byte [rax]	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x3345	           0xfb6c0	                           movzx eax, al	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x3348	          0x83e830	                           sub eax, 0x30	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x334b	          0x83f809	                              cmp eax, 9	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x334e	            0x7697	                           jbe 0x4003327	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x3350	            0xeb07	                           jmp 0x4003399	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x3352	              0x90	                                     nop	      1923	charset.c	FUNCTION_59	IF_7
0x3353	            0xeb04	                           jmp 0x4003399	      1923	charset.c	FUNCTION_59	IF_7
0x3355	              0x90	                                     nop	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x3356	            0xeb01	                           jmp 0x4003399	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x3358	              0x90	                                     nop	      1984	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x3359	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1988	charset.c	FUNCTION_59	IF_20
0x335e	            0x7409	                            je 0x40033a9	      1988	charset.c	FUNCTION_59	IF_20
0x3360	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1989	charset.c	FUNCTION_59	IF_20
0x3364	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1989	charset.c	FUNCTION_59	IF_20
0x3367	            0x8910	                    mov dword [rax], edx	      1989	charset.c	FUNCTION_59	IF_20
0x3369	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1990	charset.c	FUNCTION_59	IF_21
0x336e	            0x7416	                            je 0x40033c6	      1990	charset.c	FUNCTION_59	IF_21
0x3370	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1991	charset.c	FUNCTION_59	IF_21
0x3374	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1991	charset.c	FUNCTION_59	IF_21
0x3378	          0x4829c2	                            sub rdx, rax	      1991	charset.c	FUNCTION_59	IF_21
0x337b	          0x4889d0	                            mov rax, rdx	      1991	charset.c	FUNCTION_59	IF_21
0x337e	            0x89c2	                            mov edx, eax	      1991	charset.c	FUNCTION_59	IF_21
0x3380	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1991	charset.c	FUNCTION_59	IF_21
0x3384	            0x8910	                    mov dword [rax], edx	      1991	charset.c	FUNCTION_59	IF_21
0x3386	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1992	charset.c	FUNCTION_59	IF_22
0x338b	            0x7457	                            je 0x4003424	      1992	charset.c	FUNCTION_59	IF_22
0x338d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x3391	            0x742f	                            je 0x4003402	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x3393	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x3397	          0x4885c0	                           test rax, rax	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x339a	            0x7913	                           jns 0x40033ef	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x339c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x33a0	    0x48b900000000	          movabs rcx, 0x8000000000000000	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x33aa	          0x488908	                    mov qword [rax], rcx	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x33ad	            0xeb35	                           jmp 0x4003424	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x33af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x33b3	          0x48f7d8	                                 neg rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x33b6	          0x4889c2	                            mov rdx, rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x33b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x33bd	          0x488910	                    mov qword [rax], rdx	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x33c0	            0xeb22	                           jmp 0x4003424	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x33c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x33c6	          0x4885c0	                           test rax, rax	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x33c9	            0x790e	                           jns 0x4003419	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x33cb	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	      2005	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x33d5	        0x488945e8	             mov qword [rbp - 0x18], rax	      2005	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x33d9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x33dd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x33e1	          0x488910	                    mov qword [rax], rdx	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x33e4	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2009	charset.c	FUNCTION_59	IF_26
0x33e9	            0x740b	                            je 0x4003436	      2009	charset.c	FUNCTION_59	IF_26
0x33eb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2010	charset.c	FUNCTION_59	IF_26
0x33ef	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2010	charset.c	FUNCTION_59	IF_26
0x33f3	          0x488910	                    mov qword [rax], rdx	      2010	charset.c	FUNCTION_59	IF_26
0x33f6	              0x90	                                     nop	      2011	charset.c	FUNCTION_59
0x33f7	        0x4883c458	                           add rsp, 0x58	      2011	charset.c	FUNCTION_59
0x33fb	              0x5b	                                 pop rbx	      2011	charset.c	FUNCTION_59
0x33fc	              0x5d	                                 pop rbp	      2011	charset.c	FUNCTION_59
0x33fd	              0xc3	                                     ret	      2011	charset.c	FUNCTION_59
vim_iswordc	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	11
0x15e4	              0x55	                                push rbp	       895	charset.c	FUNCTION_22
0x15e5	          0x4889e5	                            mov rbp, rsp	       895	charset.c	FUNCTION_22
0x15e8	        0x4883ec10	                           sub rsp, 0x10	       895	charset.c	FUNCTION_22
0x15ec	          0x897dfc	                mov dword [rbp - 4], edi	       895	charset.c	FUNCTION_22
0x15ef	    0x488b15000000	            mov rdx, qword [0x04001636] 	       896	charset.c	FUNCTION_22	CALL_1
0x15f6	          0x8b45fc	                mov eax, dword [rbp - 4]	       896	charset.c	FUNCTION_22	CALL_1
0x15f9	          0x4889d6	                            mov rsi, rdx	       896	charset.c	FUNCTION_22	CALL_1
0x15fc	            0x89c7	                            mov edi, eax	       896	charset.c	FUNCTION_22	CALL_1
0x15fe	      0xe800000000	                          call 0x4001643	       896	charset.c	FUNCTION_22	CALL_1
0x1603	              0xc9	                                   leave	       897	charset.c	FUNCTION_22
0x1604	              0xc3	                                     ret	       897	charset.c	FUNCTION_22
vim_toupper	IF,7:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,4:FOR,0	60
0x2d06	              0x55	                                push rbp	      1733	charset.c	FUNCTION_53
0x2d07	          0x4889e5	                            mov rbp, rsp	      1733	charset.c	FUNCTION_53
0x2d0a	        0x4883ec10	                           sub rsp, 0x10	      1733	charset.c	FUNCTION_53
0x2d0e	          0x897dfc	                mov dword [rbp - 4], edi	      1733	charset.c	FUNCTION_53
0x2d11	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1734	charset.c	FUNCTION_53	IF_1
0x2d15	            0x7f08	                            jg 0x4002d5f	      1734	charset.c	FUNCTION_53	IF_1
0x2d17	          0x8b45fc	                mov eax, dword [rbp - 4]	      1735	charset.c	FUNCTION_53	IF_1
0x2d1a	      0xe99e000000	                           jmp 0x4002dfd	      1735	charset.c	FUNCTION_53	IF_1
0x2d1f	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1736	charset.c	FUNCTION_53	IF_2
0x2d23	            0x7f0d	                            jg 0x4002d72	      1736	charset.c	FUNCTION_53	IF_2
0x2d25	    0x8b0500000000	            mov eax, dword [0x04002d6b] 	      1736	charset.c	FUNCTION_53	IF_2
0x2d2b	          0x83e002	                              and eax, 2	      1736	charset.c	FUNCTION_53	IF_2
0x2d2e	            0x85c0	                           test eax, eax	      1736	charset.c	FUNCTION_53	IF_2
0x2d30	            0x7555	                           jne 0x4002dc7	      1736	charset.c	FUNCTION_53	IF_2
0x2d32	    0x8b0500000000	            mov eax, dword [0x04002d78] 	      1738	charset.c	FUNCTION_53	IF_2	IF_3
0x2d38	            0x85c0	                           test eax, eax	      1738	charset.c	FUNCTION_53	IF_2	IF_3
0x2d3a	            0x740c	                            je 0x4002d88	      1738	charset.c	FUNCTION_53	IF_2	IF_3
0x2d3c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x2d3f	            0x89c7	                            mov edi, eax	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x2d41	      0xe800000000	                          call 0x4002d86	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x2d46	            0xeb75	                           jmp 0x4002dfd	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x2d48	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1740	charset.c	FUNCTION_53	IF_2	IF_4
0x2d4f	            0x7e1b	                           jle 0x4002dac	      1740	charset.c	FUNCTION_53	IF_2	IF_4
0x2d51	    0x8b0500000000	            mov eax, dword [0x04002d97] 	      1743	charset.c	FUNCTION_53	IF_2	IF_4	IF_5
0x2d57	            0x85c0	                           test eax, eax	      1743	charset.c	FUNCTION_53	IF_2	IF_4	IF_5
0x2d59	            0x740c	                            je 0x4002da7	      1743	charset.c	FUNCTION_53	IF_2	IF_4	IF_5
0x2d5b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x2d5e	            0x89c7	                            mov edi, eax	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x2d60	      0xe800000000	                          call 0x4002da5	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x2d65	            0xeb56	                           jmp 0x4002dfd	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x2d67	          0x8b45fc	                mov eax, dword [rbp - 4]	      1747	charset.c	FUNCTION_53	IF_2	IF_4
0x2d6a	            0xeb51	                           jmp 0x4002dfd	      1747	charset.c	FUNCTION_53	IF_2	IF_4
0x2d6c	    0x8b0500000000	            mov eax, dword [0x04002db2] 	      1749	charset.c	FUNCTION_53	IF_2	IF_6
0x2d72	            0x85c0	                           test eax, eax	      1749	charset.c	FUNCTION_53	IF_2	IF_6
0x2d74	            0x7411	                            je 0x4002dc7	      1749	charset.c	FUNCTION_53	IF_2	IF_6
0x2d76	          0x8b45fc	                mov eax, dword [rbp - 4]	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x2d79	            0x4898	                                    cdqe	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x2d7b	     0xfb680000000	                   movzx eax, byte [rax]	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x2d82	           0xfb6c0	                           movzx eax, al	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x2d85	            0xeb36	                           jmp 0x4002dfd	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x2d87	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1752	charset.c	FUNCTION_53	IF_7
0x2d8b	            0x7f26	                            jg 0x4002df3	      1752	charset.c	FUNCTION_53	IF_7
0x2d8d	    0x8b0500000000	            mov eax, dword [0x04002dd3] 	      1752	charset.c	FUNCTION_53	IF_7
0x2d93	          0x83e002	                              and eax, 2	      1752	charset.c	FUNCTION_53	IF_7
0x2d96	            0x85c0	                           test eax, eax	      1752	charset.c	FUNCTION_53	IF_7
0x2d98	            0x7419	                            je 0x4002df3	      1752	charset.c	FUNCTION_53	IF_7
0x2d9a	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      1753	charset.c	FUNCTION_53	CALL_3
0x2d9e	            0x7e0e	                           jle 0x4002dee	      1753	charset.c	FUNCTION_53	CALL_3
0x2da0	        0x837dfc7a	               cmp dword [rbp - 4], 0x7a	      1753	charset.c	FUNCTION_53	CALL_3
0x2da4	            0x7f08	                            jg 0x4002dee	      1753	charset.c	FUNCTION_53	CALL_3
0x2da6	          0x8b45fc	                mov eax, dword [rbp - 4]	      1753	charset.c	FUNCTION_53	CALL_3
0x2da9	          0x83e820	                           sub eax, 0x20	      1753	charset.c	FUNCTION_53	CALL_3
0x2dac	            0xeb0f	                           jmp 0x4002dfd	      1753	charset.c	FUNCTION_53	CALL_3
0x2dae	          0x8b45fc	                mov eax, dword [rbp - 4]	      1753	charset.c	FUNCTION_53	CALL_3
0x2db1	            0xeb0a	                           jmp 0x4002dfd	      1753	charset.c	FUNCTION_53	CALL_3
0x2db3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1754	charset.c	FUNCTION_53	CALL_4
0x2db6	            0x89c7	                            mov edi, eax	      1754	charset.c	FUNCTION_53	CALL_4
0x2db8	      0xe800000000	                          call 0x4002dfd	      1754	charset.c	FUNCTION_53	CALL_4
0x2dbd	              0xc9	                                   leave	      1755	charset.c	FUNCTION_53
0x2dbe	              0xc3	                                     ret	      1755	charset.c	FUNCTION_53
char2cells	IF,5:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,4:FOR,0	54
0x123f	              0x55	                                push rbp	       733	charset.c	FUNCTION_12
0x1240	          0x4889e5	                            mov rbp, rsp	       733	charset.c	FUNCTION_12
0x1243	        0x4883ec10	                           sub rsp, 0x10	       733	charset.c	FUNCTION_12
0x1247	          0x897dfc	                mov dword [rbp - 4], edi	       733	charset.c	FUNCTION_12
0x124a	        0x837dfc00	                  cmp dword [rbp - 4], 0	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x124e	            0x7931	                           jns 0x40012c1	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x1250	    0x817dfc800000	               cmp dword [rbp - 4], 0x80	       735	charset.c	FUNCTION_12	CALL_3
0x1257	            0x7417	                            je 0x40012b0	       735	charset.c	FUNCTION_12	CALL_3
0x1259	        0x837dfc00	                  cmp dword [rbp - 4], 0	       735	charset.c	FUNCTION_12	CALL_3
0x125d	            0x740a	                            je 0x40012a9	       735	charset.c	FUNCTION_12	CALL_3
0x125f	          0x8b45fc	                mov eax, dword [rbp - 4]	       735	charset.c	FUNCTION_12	CALL_3
0x1262	            0xf7d8	                                 neg eax	       735	charset.c	FUNCTION_12	CALL_3
0x1264	           0xfb6c0	                           movzx eax, al	       735	charset.c	FUNCTION_12	CALL_3
0x1267	            0xeb0c	                           jmp 0x40012b5	       735	charset.c	FUNCTION_12	CALL_3
0x1269	      0xb8ff000000	                           mov eax, 0xff	       735	charset.c	FUNCTION_12	CALL_3
0x126e	            0xeb05	                           jmp 0x40012b5	       735	charset.c	FUNCTION_12	CALL_3
0x1270	      0xb8fe000000	                           mov eax, 0xfe	       735	charset.c	FUNCTION_12	CALL_3
0x1275	            0x89c7	                            mov edi, eax	       735	charset.c	FUNCTION_12	CALL_3
0x1277	      0xe800000000	                          call 0x40012bc	       735	charset.c	FUNCTION_12	CALL_3
0x127c	          0x83c002	                              add eax, 2	       735	charset.c	FUNCTION_12	CALL_3
0x127f	            0xeb6c	                           jmp 0x400132d	       735	charset.c	FUNCTION_12	CALL_3
0x1281	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	       737	charset.c	FUNCTION_12	IF_2
0x1285	            0x7e51	                           jle 0x4001318	       737	charset.c	FUNCTION_12	IF_2
0x1287	    0x8b0500000000	            mov eax, dword [0x040012cd] 	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x128d	            0x85c0	                           test eax, eax	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x128f	            0x740c	                            je 0x40012dd	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x1291	          0x8b45fc	                mov eax, dword [rbp - 4]	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x1294	            0x89c7	                            mov edi, eax	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x1296	      0xe800000000	                          call 0x40012db	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x129b	            0xeb50	                           jmp 0x400132d	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x129d	    0x8b0500000000	            mov eax, dword [0x040012e3] 	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x12a3	            0x85c0	                           test eax, eax	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x12a5	            0x7431	                            je 0x4001318	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x12a7	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x12ae	            0x7e28	                           jle 0x4001318	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x12b0	    0x8b0500000000	            mov eax, dword [0x040012f6] 	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12b6	      0x3dcc260000	                         cmp eax, 0x26cc	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12bb	            0x7514	                           jne 0x4001311	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12bd	          0x8b45fc	                mov eax, dword [rbp - 4]	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12c0	          0xc1e808	                              shr eax, 8	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12c3	      0x3d8e000000	                           cmp eax, 0x8e	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12c8	            0x7507	                           jne 0x4001311	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12ca	      0xb801000000	                              mov eax, 1	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12cf	            0xeb1c	                           jmp 0x400132d	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x12d1	      0xb802000000	                              mov eax, 2	       748	charset.c	FUNCTION_12	IF_2	IF_4
0x12d6	            0xeb15	                           jmp 0x400132d	       748	charset.c	FUNCTION_12	IF_2	IF_4
0x12d8	          0x8b45fc	                mov eax, dword [rbp - 4]	       752	charset.c	FUNCTION_12
0x12db	           0xfb6c0	                           movzx eax, al	       752	charset.c	FUNCTION_12
0x12de	            0x4898	                                    cdqe	       752	charset.c	FUNCTION_12
0x12e0	     0xfb680000000	                   movzx eax, byte [rax]	       752	charset.c	FUNCTION_12
0x12e7	           0xfb6c0	                           movzx eax, al	       752	charset.c	FUNCTION_12
0x12ea	          0x83e007	                              and eax, 7	       752	charset.c	FUNCTION_12
0x12ed	              0xc9	                                   leave	       753	charset.c	FUNCTION_12
0x12ee	              0xc3	                                     ret	       753	charset.c	FUNCTION_12
getwhitecols	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	13
0x29dc	              0x55	                                push rbp	      1550	charset.c	FUNCTION_41
0x29dd	          0x4889e5	                            mov rbp, rsp	      1550	charset.c	FUNCTION_41
0x29e0	        0x4883ec08	                              sub rsp, 8	      1550	charset.c	FUNCTION_41
0x29e4	        0x48897df8	                mov qword [rbp - 8], rdi	      1550	charset.c	FUNCTION_41
0x29e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1551	charset.c	FUNCTION_41	CALL_1
0x29ec	          0x4889c7	                            mov rdi, rax	      1551	charset.c	FUNCTION_41	CALL_1
0x29ef	      0xe800000000	                          call 0x4002a34	      1551	charset.c	FUNCTION_41	CALL_1
0x29f4	          0x4889c2	                            mov rdx, rax	      1551	charset.c	FUNCTION_41	CALL_1
0x29f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1551	charset.c	FUNCTION_41	CALL_1
0x29fb	          0x4829c2	                            sub rdx, rax	      1551	charset.c	FUNCTION_41	CALL_1
0x29fe	          0x4889d0	                            mov rax, rdx	      1551	charset.c	FUNCTION_41	CALL_1
0x2a01	              0xc9	                                   leave	      1552	charset.c	FUNCTION_41
0x2a02	              0xc3	                                     ret	      1552	charset.c	FUNCTION_41
vim_isfilec	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	19
0x1736	              0x55	                                push rbp	       942	charset.c	FUNCTION_26
0x1737	          0x4889e5	                            mov rbp, rsp	       942	charset.c	FUNCTION_26
0x173a	          0x897dfc	                mov dword [rbp - 4], edi	       942	charset.c	FUNCTION_26
0x173d	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       943	charset.c	FUNCTION_26
0x1744	            0x7f1c	                            jg 0x40017a2	       943	charset.c	FUNCTION_26
0x1746	        0x837dfc00	                  cmp dword [rbp - 4], 0	       943	charset.c	FUNCTION_26
0x174a	            0x7e1d	                           jle 0x40017a9	       943	charset.c	FUNCTION_26
0x174c	          0x8b45fc	                mov eax, dword [rbp - 4]	       943	charset.c	FUNCTION_26
0x174f	            0x4898	                                    cdqe	       943	charset.c	FUNCTION_26
0x1751	     0xfb680000000	                   movzx eax, byte [rax]	       943	charset.c	FUNCTION_26
0x1758	           0xfb6c0	                           movzx eax, al	       943	charset.c	FUNCTION_26
0x175b	          0x83e040	                           and eax, 0x40	       943	charset.c	FUNCTION_26
0x175e	            0x85c0	                           test eax, eax	       943	charset.c	FUNCTION_26
0x1760	            0x7407	                            je 0x40017a9	       943	charset.c	FUNCTION_26
0x1762	      0xb801000000	                              mov eax, 1	       943	charset.c	FUNCTION_26
0x1767	            0xeb05	                           jmp 0x40017ae	       943	charset.c	FUNCTION_26
0x1769	      0xb800000000	                              mov eax, 0	       943	charset.c	FUNCTION_26
0x176e	              0x5d	                                 pop rbp	       944	charset.c	FUNCTION_26
0x176f	              0xc3	                                     ret	       944	charset.c	FUNCTION_26
vim_iswordp	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	11
0x16b5	              0x55	                                push rbp	       920	charset.c	FUNCTION_24
0x16b6	          0x4889e5	                            mov rbp, rsp	       920	charset.c	FUNCTION_24
0x16b9	        0x4883ec10	                           sub rsp, 0x10	       920	charset.c	FUNCTION_24
0x16bd	        0x48897df8	                mov qword [rbp - 8], rdi	       920	charset.c	FUNCTION_24
0x16c1	    0x488b15000000	            mov rdx, qword [0x04001708] 	       921	charset.c	FUNCTION_24	CALL_1
0x16c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	charset.c	FUNCTION_24	CALL_1
0x16cc	          0x4889d6	                            mov rsi, rdx	       921	charset.c	FUNCTION_24	CALL_1
0x16cf	          0x4889c7	                            mov rdi, rax	       921	charset.c	FUNCTION_24	CALL_1
0x16d2	      0xe800000000	                          call 0x4001717	       921	charset.c	FUNCTION_24	CALL_1
0x16d7	              0xc9	                                   leave	       922	charset.c	FUNCTION_24
0x16d8	              0xc3	                                     ret	       922	charset.c	FUNCTION_24
win_chartabsize	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	32
0x1448	              0x55	                                push rbp	       834	charset.c	FUNCTION_17
0x1449	          0x4889e5	                            mov rbp, rsp	       834	charset.c	FUNCTION_17
0x144c	        0x4883ec30	                           sub rsp, 0x30	       834	charset.c	FUNCTION_17
0x1450	        0x48897de8	             mov qword [rbp - 0x18], rdi	       834	charset.c	FUNCTION_17
0x1454	        0x488975e0	             mov qword [rbp - 0x20], rsi	       834	charset.c	FUNCTION_17
0x1458	          0x8955dc	             mov dword [rbp - 0x24], edx	       834	charset.c	FUNCTION_17
0x145b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       835	charset.c	FUNCTION_17	CALL_1
0x145f	           0xfb600	                   movzx eax, byte [rax]	       835	charset.c	FUNCTION_17	CALL_1
0x1462	            0x3c09	                               cmp al, 9	       835	charset.c	FUNCTION_17	CALL_1
0x1464	            0x7538	                           jne 0x40014de	       835	charset.c	FUNCTION_17	CALL_1
0x1466	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       835	charset.c	FUNCTION_17	CALL_1
0x146a	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	       835	charset.c	FUNCTION_17	CALL_1
0x1470	            0x85c0	                           test eax, eax	       835	charset.c	FUNCTION_17	CALL_1
0x1472	            0x740a	                            je 0x40014be	       835	charset.c	FUNCTION_17	CALL_1
0x1474	    0x8b0500000000	            mov eax, dword [0x040014ba] 	       835	charset.c	FUNCTION_17	CALL_1
0x147a	            0x85c0	                           test eax, eax	       835	charset.c	FUNCTION_17	CALL_1
0x147c	            0x7420	                            je 0x40014de	       835	charset.c	FUNCTION_17	CALL_1
0x147e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       835	charset.c	FUNCTION_17	CALL_1
0x1482	        0x488b4008	                mov rax, qword [rax + 8]	       835	charset.c	FUNCTION_17	CALL_1
0x1486	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	       835	charset.c	FUNCTION_17	CALL_1
0x148d	          0x8945fc	                mov dword [rbp - 4], eax	       835	charset.c	FUNCTION_17	CALL_1
0x1490	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       835	charset.c	FUNCTION_17	CALL_1
0x1493	              0x99	                                     cdq	       835	charset.c	FUNCTION_17	CALL_1
0x1494	          0xf77dfc	                    idiv dword [rbp - 4]	       835	charset.c	FUNCTION_17	CALL_1
0x1497	          0x8b45fc	                mov eax, dword [rbp - 4]	       835	charset.c	FUNCTION_17	CALL_1
0x149a	            0x29d0	                            sub eax, edx	       835	charset.c	FUNCTION_17	CALL_1
0x149c	            0xeb0c	                           jmp 0x40014ea	       835	charset.c	FUNCTION_17	CALL_1
0x149e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       835	charset.c	FUNCTION_17	CALL_1
0x14a2	          0x4889c7	                            mov rdi, rax	       835	charset.c	FUNCTION_17	CALL_1
0x14a5	      0xe800000000	                          call 0x40014ea	       835	charset.c	FUNCTION_17	CALL_1
0x14aa	              0xc9	                                   leave	       836	charset.c	FUNCTION_17
0x14ab	              0xc3	                                     ret	       836	charset.c	FUNCTION_17
vim_isfilec_or_wc	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	31
0x1770	              0x55	                                push rbp	       954	charset.c	FUNCTION_27
0x1771	          0x4889e5	                            mov rbp, rsp	       954	charset.c	FUNCTION_27
0x1774	        0x4883ec20	                           sub rsp, 0x20	       954	charset.c	FUNCTION_27
0x1778	          0x897dec	             mov dword [rbp - 0x14], edi	       954	charset.c	FUNCTION_27
0x177b	    0x64488b042528	                mov rax, qword fs:[0x28]	       954	charset.c	FUNCTION_27
0x1784	        0x488945f8	                mov qword [rbp - 8], rax	       954	charset.c	FUNCTION_27
0x1788	            0x31c0	                            xor eax, eax	       954	charset.c	FUNCTION_27
0x178a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       957	charset.c	FUNCTION_27
0x178d	          0x8845f0	               mov byte [rbp - 0x10], al	       957	charset.c	FUNCTION_27
0x1790	        0xc645f100	                 mov byte [rbp - 0xf], 0	       958	charset.c	FUNCTION_27
0x1794	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       959	charset.c	FUNCTION_27	CALL_2
0x1797	            0x89c7	                            mov edi, eax	       959	charset.c	FUNCTION_27	CALL_2
0x1799	      0xe800000000	                          call 0x40017de	       959	charset.c	FUNCTION_27	CALL_2
0x179e	            0x85c0	                           test eax, eax	       959	charset.c	FUNCTION_27	CALL_2
0x17a0	            0x7516	                           jne 0x40017f8	       959	charset.c	FUNCTION_27	CALL_2
0x17a2	        0x837dec5d	           cmp dword [rbp - 0x14], 0x5d 	       959	charset.c	FUNCTION_27	CALL_2
0x17a6	            0x7410	                            je 0x40017f8	       959	charset.c	FUNCTION_27	CALL_2
0x17a8	        0x488d45f0	                   lea rax, [rbp - 0x10]	       959	charset.c	FUNCTION_27	CALL_2
0x17ac	          0x4889c7	                            mov rdi, rax	       959	charset.c	FUNCTION_27	CALL_2
0x17af	      0xe800000000	                          call 0x40017f4	       959	charset.c	FUNCTION_27	CALL_2
0x17b4	            0x85c0	                           test eax, eax	       959	charset.c	FUNCTION_27	CALL_2
0x17b6	            0x7407	                            je 0x40017ff	       959	charset.c	FUNCTION_27	CALL_2
0x17b8	      0xb801000000	                              mov eax, 1	       959	charset.c	FUNCTION_27	CALL_2
0x17bd	            0xeb05	                           jmp 0x4001804	       959	charset.c	FUNCTION_27	CALL_2
0x17bf	      0xb800000000	                              mov eax, 0	       959	charset.c	FUNCTION_27	CALL_2
0x17c4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       960	charset.c	FUNCTION_27
0x17c8	    0x644833142528	                xor rdx, qword fs:[0x28]	       960	charset.c	FUNCTION_27
0x17d1	            0x7405	                            je 0x4001818	       960	charset.c	FUNCTION_27
0x17d3	      0xe800000000	                          call 0x4001818	       960	charset.c	FUNCTION_27
0x17d8	              0xc9	                                   leave	       960	charset.c	FUNCTION_27
0x17d9	              0xc3	                                     ret	       960	charset.c	FUNCTION_27
backslash_halve	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,1	29
0x34db	              0x55	                                push rbp	      2079	charset.c	FUNCTION_63
0x34dc	          0x4889e5	                            mov rbp, rsp	      2079	charset.c	FUNCTION_63
0x34df	        0x4883ec10	                           sub rsp, 0x10	      2079	charset.c	FUNCTION_63
0x34e3	        0x48897df8	                mov qword [rbp - 8], rdi	      2079	charset.c	FUNCTION_63
0x34e7	            0xeb40	                           jmp 0x4003569	      2080	charset.c	FUNCTION_63	FOR_1
0x34e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x34ed	          0x4889c7	                            mov rdi, rax	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x34f0	      0xe800000000	                          call 0x4003535	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x34f5	            0x85c0	                           test eax, eax	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x34f7	            0x742b	                            je 0x4003564	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x34f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x34fd	        0x4883c001	                              add rax, 1	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x3501	          0x4889c7	                            mov rdi, rax	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x3504	      0xe800000000	                          call 0x4003549	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x3509	        0x488d5001	                      lea rdx, [rax + 1]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x350d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x3511	        0x488d4801	                      lea rcx, [rax + 1]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x3515	        0x488b45f8	                mov rax, qword [rbp - 8]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x3519	          0x4889ce	                            mov rsi, rcx	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x351c	          0x4889c7	                            mov rdi, rax	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x351f	      0xe800000000	                          call 0x4003564	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x3524	      0x488345f801	                  add qword [rbp - 8], 1	      2080	charset.c	FUNCTION_63	FOR_1
0x3529	        0x488b45f8	                mov rax, qword [rbp - 8]	      2080	charset.c	FUNCTION_63	FOR_1
0x352d	           0xfb600	                   movzx eax, byte [rax]	      2080	charset.c	FUNCTION_63	FOR_1
0x3530	            0x84c0	                             test al, al	      2080	charset.c	FUNCTION_63	FOR_1
0x3532	            0x75b5	                           jne 0x4003529	      2080	charset.c	FUNCTION_63	FOR_1
0x3534	              0x90	                                     nop	      2083	charset.c	FUNCTION_63
0x3535	              0xc9	                                   leave	      2083	charset.c	FUNCTION_63
0x3536	              0xc3	                                     ret	      2083	charset.c	FUNCTION_63
rem_backslash	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	17
0x34ab	              0x55	                                push rbp	      2056	charset.c	FUNCTION_62
0x34ac	          0x4889e5	                            mov rbp, rsp	      2056	charset.c	FUNCTION_62
0x34af	        0x48897df8	                mov qword [rbp - 8], rdi	      2056	charset.c	FUNCTION_62
0x34b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2068	charset.c	FUNCTION_62
0x34b7	           0xfb600	                   movzx eax, byte [rax]	      2068	charset.c	FUNCTION_62
0x34ba	            0x3c5c	                            cmp al, 0x5c	      2068	charset.c	FUNCTION_62
0x34bc	            0x7516	                           jne 0x4003514	      2068	charset.c	FUNCTION_62
0x34be	        0x488b45f8	                mov rax, qword [rbp - 8]	      2068	charset.c	FUNCTION_62
0x34c2	        0x4883c001	                              add rax, 1	      2068	charset.c	FUNCTION_62
0x34c6	           0xfb600	                   movzx eax, byte [rax]	      2068	charset.c	FUNCTION_62
0x34c9	            0x84c0	                             test al, al	      2068	charset.c	FUNCTION_62
0x34cb	            0x7407	                            je 0x4003514	      2068	charset.c	FUNCTION_62
0x34cd	      0xb801000000	                              mov eax, 1	      2068	charset.c	FUNCTION_62
0x34d2	            0xeb05	                           jmp 0x4003519	      2068	charset.c	FUNCTION_62
0x34d4	      0xb800000000	                              mov eax, 0	      2068	charset.c	FUNCTION_62
0x34d9	              0x5d	                                 pop rbp	      2070	charset.c	FUNCTION_62
0x34da	              0xc3	                                     ret	      2070	charset.c	FUNCTION_62
skipdigits	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	16
0x2a03	              0x55	                                push rbp	      1559	charset.c	FUNCTION_42
0x2a04	          0x4889e5	                            mov rbp, rsp	      1559	charset.c	FUNCTION_42
0x2a07	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1559	charset.c	FUNCTION_42
0x2a0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1560	charset.c	FUNCTION_42
0x2a0f	        0x488945f8	                mov qword [rbp - 8], rax	      1560	charset.c	FUNCTION_42
0x2a13	            0xeb05	                           jmp 0x4002a5a	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x2a15	      0x488345f801	                  add qword [rbp - 8], 1	      1563	charset.c	FUNCTION_42	WHILE_1
0x2a1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x2a1e	           0xfb600	                   movzx eax, byte [rax]	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x2a21	           0xfb6c0	                           movzx eax, al	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x2a24	          0x83e830	                           sub eax, 0x30	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x2a27	          0x83f809	                              cmp eax, 9	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x2a2a	            0x76e9	                           jbe 0x4002a55	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x2a2c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1564	charset.c	FUNCTION_42
0x2a30	              0x5d	                                 pop rbp	      1565	charset.c	FUNCTION_42
0x2a31	              0xc3	                                     ret	      1565	charset.c	FUNCTION_42
transchar_byte	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	20
0xfbe	              0x55	                                push rbp	       594	charset.c	FUNCTION_7
0xfbf	          0x4889e5	                            mov rbp, rsp	       594	charset.c	FUNCTION_7
0xfc2	        0x4883ec10	                           sub rsp, 0x10	       594	charset.c	FUNCTION_7
0xfc6	          0x897dfc	                mov dword [rbp - 4], edi	       594	charset.c	FUNCTION_7
0xfc9	    0x8b0500000000	            mov eax, dword [0x0400100f] 	       595	charset.c	FUNCTION_7	IF_1
0xfcf	            0x85c0	                           test eax, eax	       595	charset.c	FUNCTION_7	IF_1
0xfd1	            0x741c	                            je 0x400102f	       595	charset.c	FUNCTION_7	IF_1
0xfd3	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	       595	charset.c	FUNCTION_7	IF_1
0xfd7	            0x7e16	                           jle 0x400102f	       595	charset.c	FUNCTION_7	IF_1
0xfd9	          0x8b45fc	                mov eax, dword [rbp - 4]	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0xfdc	            0x89c6	                            mov esi, eax	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0xfde	      0xbf00000000	                              mov edi, 0	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0xfe3	      0xe800000000	                          call 0x4001028	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0xfe8	      0xb800000000	                              mov eax, 0	       598	charset.c	FUNCTION_7	IF_1
0xfed	            0xeb0a	                           jmp 0x4001039	       598	charset.c	FUNCTION_7	IF_1
0xfef	          0x8b45fc	                mov eax, dword [rbp - 4]	       600	charset.c	FUNCTION_7	CALL_2
0xff2	            0x89c7	                            mov edi, eax	       600	charset.c	FUNCTION_7	CALL_2
0xff4	      0xe800000000	                          call 0x4001039	       600	charset.c	FUNCTION_7	CALL_2
0xff9	              0xc9	                                   leave	       601	charset.c	FUNCTION_7
0xffa	              0xc3	                                     ret	       601	charset.c	FUNCTION_7
linetabsize	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	10
0x14ac	              0x55	                                push rbp	       845	charset.c	FUNCTION_18
0x14ad	          0x4889e5	                            mov rbp, rsp	       845	charset.c	FUNCTION_18
0x14b0	        0x4883ec10	                           sub rsp, 0x10	       845	charset.c	FUNCTION_18
0x14b4	        0x48897df8	                mov qword [rbp - 8], rdi	       845	charset.c	FUNCTION_18
0x14b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       846	charset.c	FUNCTION_18	CALL_1
0x14bc	          0x4889c6	                            mov rsi, rax	       846	charset.c	FUNCTION_18	CALL_1
0x14bf	      0xbf00000000	                              mov edi, 0	       846	charset.c	FUNCTION_18	CALL_1
0x14c4	      0xe800000000	                          call 0x4001509	       846	charset.c	FUNCTION_18	CALL_1
0x14c9	              0xc9	                                   leave	       847	charset.c	FUNCTION_18
0x14ca	              0xc3	                                     ret	       847	charset.c	FUNCTION_18
nr2hex	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	16
0x11e5	              0x55	                                push rbp	       702	charset.c	FUNCTION_10
0x11e6	          0x4889e5	                            mov rbp, rsp	       702	charset.c	FUNCTION_10
0x11e9	          0x897dfc	                mov dword [rbp - 4], edi	       702	charset.c	FUNCTION_10
0x11ec	          0x8b45fc	                mov eax, dword [rbp - 4]	       703	charset.c	FUNCTION_10	IF_1
0x11ef	          0x83e00f	                            and eax, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x11f2	          0x83f809	                              cmp eax, 9	       703	charset.c	FUNCTION_10	IF_1
0x11f5	            0x770b	                            ja 0x4001242	       703	charset.c	FUNCTION_10	IF_1
0x11f7	          0x8b45fc	                mov eax, dword [rbp - 4]	       704	charset.c	FUNCTION_10	IF_1
0x11fa	          0x83e00f	                            and eax, 0xf	       704	charset.c	FUNCTION_10	IF_1
0x11fd	          0x83c030	                           add eax, 0x30	       704	charset.c	FUNCTION_10	IF_1
0x1200	            0xeb09	                           jmp 0x400124b	       704	charset.c	FUNCTION_10	IF_1
0x1202	          0x8b45fc	                mov eax, dword [rbp - 4]	       705	charset.c	FUNCTION_10
0x1205	          0x83e00f	                            and eax, 0xf	       705	charset.c	FUNCTION_10
0x1208	          0x83c057	                           add eax, 0x57	       705	charset.c	FUNCTION_10
0x120b	              0x5d	                                 pop rbp	       706	charset.c	FUNCTION_10
0x120c	              0xc3	                                     ret	       706	charset.c	FUNCTION_10
lbr_chartabsize_adv	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	34
0x19c2	              0x55	                                push rbp	      1025	charset.c	FUNCTION_31
0x19c3	          0x4889e5	                            mov rbp, rsp	      1025	charset.c	FUNCTION_31
0x19c6	        0x4883ec30	                           sub rsp, 0x30	      1025	charset.c	FUNCTION_31
0x19ca	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1025	charset.c	FUNCTION_31
0x19ce	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1025	charset.c	FUNCTION_31
0x19d2	          0x8955dc	             mov dword [rbp - 0x24], edx	      1025	charset.c	FUNCTION_31
0x19d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1028	charset.c	FUNCTION_31	CALL_1
0x19d9	          0x488b08	                    mov rcx, qword [rax]	      1028	charset.c	FUNCTION_31	CALL_1
0x19dc	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1028	charset.c	FUNCTION_31	CALL_1
0x19df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1028	charset.c	FUNCTION_31	CALL_1
0x19e3	          0x4889ce	                            mov rsi, rcx	      1028	charset.c	FUNCTION_31	CALL_1
0x19e6	          0x4889c7	                            mov rdi, rax	      1028	charset.c	FUNCTION_31	CALL_1
0x19e9	      0xe800000000	                          call 0x4001a2e	      1028	charset.c	FUNCTION_31	CALL_1
0x19ee	          0x8945fc	                mov dword [rbp - 4], eax	      1028	charset.c	FUNCTION_31	CALL_1
0x19f1	    0x8b0500000000	            mov eax, dword [0x04001a37] 	      1029	charset.c	FUNCTION_31	CALL_2
0x19f7	            0x85c0	                           test eax, eax	      1029	charset.c	FUNCTION_31	CALL_2
0x19f9	            0x7417	                            je 0x4001a52	      1029	charset.c	FUNCTION_31	CALL_2
0x19fb	    0x488b05000000	            mov rax, qword [0x04001a42] 	      1029	charset.c	FUNCTION_31	CALL_2
0x1a02	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1029	charset.c	FUNCTION_31	CALL_2
0x1a06	          0x488b12	                    mov rdx, qword [rdx]	      1029	charset.c	FUNCTION_31	CALL_2
0x1a09	          0x4889d7	                            mov rdi, rdx	      1029	charset.c	FUNCTION_31	CALL_2
0x1a0c	            0xffd0	                                call rax	      1029	charset.c	FUNCTION_31	CALL_2
0x1a0e	            0x89c1	                            mov ecx, eax	      1029	charset.c	FUNCTION_31	CALL_2
0x1a10	            0xeb05	                           jmp 0x4001a57	      1029	charset.c	FUNCTION_31	CALL_2
0x1a12	      0xb901000000	                              mov ecx, 1	      1029	charset.c	FUNCTION_31	CALL_2
0x1a17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1029	charset.c	FUNCTION_31	CALL_2
0x1a1b	          0x488b10	                    mov rdx, qword [rax]	      1029	charset.c	FUNCTION_31	CALL_2
0x1a1e	          0x4863c1	                         movsxd rax, ecx	      1029	charset.c	FUNCTION_31	CALL_2
0x1a21	          0x4801c2	                            add rdx, rax	      1029	charset.c	FUNCTION_31	CALL_2
0x1a24	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1029	charset.c	FUNCTION_31	CALL_2
0x1a28	          0x488910	                    mov qword [rax], rdx	      1029	charset.c	FUNCTION_31	CALL_2
0x1a2b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1030	charset.c	FUNCTION_31
0x1a2e	              0xc9	                                   leave	      1031	charset.c	FUNCTION_31
0x1a2f	              0xc3	                                     ret	      1031	charset.c	FUNCTION_31
vim_isxdigit	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	20
0x2b7b	              0x55	                                push rbp	      1653	charset.c	FUNCTION_49
0x2b7c	          0x4889e5	                            mov rbp, rsp	      1653	charset.c	FUNCTION_49
0x2b7f	          0x897dfc	                mov dword [rbp - 4], edi	      1653	charset.c	FUNCTION_49
0x2b82	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	      1656	charset.c	FUNCTION_49
0x2b86	            0x7e06	                           jle 0x4002bce	      1656	charset.c	FUNCTION_49
0x2b88	        0x837dfc39	               cmp dword [rbp - 4], 0x39	      1654	charset.c	FUNCTION_49
0x2b8c	            0x7e18	                           jle 0x4002be6	      1654	charset.c	FUNCTION_49
0x2b8e	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      1655	charset.c	FUNCTION_49
0x2b92	            0x7e06	                           jle 0x4002bda	      1655	charset.c	FUNCTION_49
0x2b94	        0x837dfc66	               cmp dword [rbp - 4], 0x66	      1655	charset.c	FUNCTION_49
0x2b98	            0x7e0c	                           jle 0x4002be6	      1655	charset.c	FUNCTION_49
0x2b9a	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1656	charset.c	FUNCTION_49
0x2b9e	            0x7e0d	                           jle 0x4002bed	      1656	charset.c	FUNCTION_49
0x2ba0	        0x837dfc46	               cmp dword [rbp - 4], 0x46	      1656	charset.c	FUNCTION_49
0x2ba4	            0x7f07	                            jg 0x4002bed	      1656	charset.c	FUNCTION_49
0x2ba6	      0xb801000000	                              mov eax, 1	      1656	charset.c	FUNCTION_49
0x2bab	            0xeb05	                           jmp 0x4002bf2	      1656	charset.c	FUNCTION_49
0x2bad	      0xb800000000	                              mov eax, 0	      1656	charset.c	FUNCTION_49
0x2bb2	              0x5d	                                 pop rbp	      1657	charset.c	FUNCTION_49
0x2bb3	              0xc3	                                     ret	      1657	charset.c	FUNCTION_49
skipbin	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	18
0x2a32	              0x55	                                push rbp	      1573	charset.c	FUNCTION_43
0x2a33	          0x4889e5	                            mov rbp, rsp	      1573	charset.c	FUNCTION_43
0x2a36	        0x4883ec20	                           sub rsp, 0x20	      1573	charset.c	FUNCTION_43
0x2a3a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1573	charset.c	FUNCTION_43
0x2a3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1574	charset.c	FUNCTION_43
0x2a42	        0x488945f8	                mov qword [rbp - 8], rax	      1574	charset.c	FUNCTION_43
0x2a46	            0xeb05	                           jmp 0x4002a8d	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a48	      0x488345f801	                  add qword [rbp - 8], 1	      1577	charset.c	FUNCTION_43	WHILE_1
0x2a4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a51	           0xfb600	                   movzx eax, byte [rax]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a54	           0xfb6c0	                           movzx eax, al	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a57	            0x89c7	                            mov edi, eax	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a59	      0xe800000000	                          call 0x4002a9e	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a5e	            0x85c0	                           test eax, eax	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a60	            0x75e6	                           jne 0x4002a88	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x2a62	        0x488b45f8	                mov rax, qword [rbp - 8]	      1578	charset.c	FUNCTION_43
0x2a66	              0xc9	                                   leave	      1579	charset.c	FUNCTION_43
0x2a67	              0xc3	                                     ret	      1579	charset.c	FUNCTION_43
vim_isdigit	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	12
0x2b5a	              0x55	                                push rbp	      1642	charset.c	FUNCTION_48
0x2b5b	          0x4889e5	                            mov rbp, rsp	      1642	charset.c	FUNCTION_48
0x2b5e	          0x897dfc	                mov dword [rbp - 4], edi	      1642	charset.c	FUNCTION_48
0x2b61	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	      1643	charset.c	FUNCTION_48
0x2b65	            0x7e0d	                           jle 0x4002bb4	      1643	charset.c	FUNCTION_48
0x2b67	        0x837dfc39	               cmp dword [rbp - 4], 0x39	      1643	charset.c	FUNCTION_48
0x2b6b	            0x7f07	                            jg 0x4002bb4	      1643	charset.c	FUNCTION_48
0x2b6d	      0xb801000000	                              mov eax, 1	      1643	charset.c	FUNCTION_48
0x2b72	            0xeb05	                           jmp 0x4002bb9	      1643	charset.c	FUNCTION_48
0x2b74	      0xb800000000	                              mov eax, 0	      1643	charset.c	FUNCTION_48
0x2b79	              0x5d	                                 pop rbp	      1644	charset.c	FUNCTION_48
0x2b7a	              0xc3	                                     ret	      1644	charset.c	FUNCTION_48
vim_iswordc_buf	IF,3:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,3:FOR,0	58
0x1605	              0x55	                                push rbp	       901	charset.c	FUNCTION_23
0x1606	          0x4889e5	                            mov rbp, rsp	       901	charset.c	FUNCTION_23
0x1609	        0x4883ec10	                           sub rsp, 0x10	       901	charset.c	FUNCTION_23
0x160d	          0x897dfc	                mov dword [rbp - 4], edi	       901	charset.c	FUNCTION_23
0x1610	        0x488975f0	             mov qword [rbp - 0x10], rsi	       901	charset.c	FUNCTION_23
0x1614	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       902	charset.c	FUNCTION_23	IF_1
0x161b	            0x7e57	                           jle 0x40016b4	       902	charset.c	FUNCTION_23	IF_1
0x161d	    0x8b0500000000	            mov eax, dword [0x04001663] 	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x1623	            0x85c0	                           test eax, eax	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x1625	            0x7420	                            je 0x4001687	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x1627	          0x8b45fc	                mov eax, dword [rbp - 4]	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x162a	           0xfb6c0	                           movzx eax, al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x162d	          0x8b55fc	                mov edx, dword [rbp - 4]	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x1630	          0xc1ea08	                              shr edx, 8	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x1633	            0x89c6	                            mov esi, eax	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x1635	            0x89d7	                            mov edi, edx	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x1637	      0xe800000000	                          call 0x400167c	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x163c	          0x83f801	                              cmp eax, 1	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x163f	           0xf9fc0	                                 setg al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x1642	           0xfb6c0	                           movzx eax, al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x1645	            0xeb6c	                           jmp 0x40016f3	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x1647	    0x8b0500000000	            mov eax, dword [0x0400168d] 	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x164d	            0x85c0	                           test eax, eax	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x164f	            0x741c	                            je 0x40016ad	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x1651	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x1655	          0x8b45fc	                mov eax, dword [rbp - 4]	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x1658	          0x4889d6	                            mov rsi, rdx	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x165b	            0x89c7	                            mov edi, eax	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x165d	      0xe800000000	                          call 0x40016a2	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x1662	          0x83f801	                              cmp eax, 1	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x1665	           0xf9fc0	                                 setg al	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x1668	           0xfb6c0	                           movzx eax, al	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x166b	            0xeb46	                           jmp 0x40016f3	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x166d	      0xb800000000	                              mov eax, 0	       910	charset.c	FUNCTION_23	IF_1
0x1672	            0xeb3f	                           jmp 0x40016f3	       910	charset.c	FUNCTION_23	IF_1
0x1674	        0x837dfc00	                  cmp dword [rbp - 4], 0	       912	charset.c	FUNCTION_23	CALL_3
0x1678	            0x7e33	                           jle 0x40016ed	       912	charset.c	FUNCTION_23	CALL_3
0x167a	          0x8b45fc	                mov eax, dword [rbp - 4]	       912	charset.c	FUNCTION_23	CALL_3
0x167d	          0xc1e803	                              shr eax, 3	       912	charset.c	FUNCTION_23	CALL_3
0x1680	            0x89c2	                            mov edx, eax	       912	charset.c	FUNCTION_23	CALL_3
0x1682	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       912	charset.c	FUNCTION_23	CALL_3
0x1686	            0x89d2	                            mov edx, edx	       912	charset.c	FUNCTION_23	CALL_3
0x1688	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       912	charset.c	FUNCTION_23	CALL_3
0x1690	           0xfb6d0	                           movzx edx, al	       912	charset.c	FUNCTION_23	CALL_3
0x1693	          0x8b45fc	                mov eax, dword [rbp - 4]	       912	charset.c	FUNCTION_23	CALL_3
0x1696	          0x83e007	                              and eax, 7	       912	charset.c	FUNCTION_23	CALL_3
0x1699	            0x89c1	                            mov ecx, eax	       912	charset.c	FUNCTION_23	CALL_3
0x169b	            0xd3fa	                             sar edx, cl	       912	charset.c	FUNCTION_23	CALL_3
0x169d	            0x89d0	                            mov eax, edx	       912	charset.c	FUNCTION_23	CALL_3
0x169f	          0x83e001	                              and eax, 1	       912	charset.c	FUNCTION_23	CALL_3
0x16a2	            0x85c0	                           test eax, eax	       912	charset.c	FUNCTION_23	CALL_3
0x16a4	            0x7407	                            je 0x40016ed	       912	charset.c	FUNCTION_23	CALL_3
0x16a6	      0xb801000000	                              mov eax, 1	       912	charset.c	FUNCTION_23	CALL_3
0x16ab	            0xeb05	                           jmp 0x40016f2	       912	charset.c	FUNCTION_23	CALL_3
0x16ad	      0xb800000000	                              mov eax, 0	       912	charset.c	FUNCTION_23	CALL_3
0x16b2	              0x90	                                     nop	       912	charset.c	FUNCTION_23	CALL_3
0x16b3	              0xc9	                                   leave	       913	charset.c	FUNCTION_23
0x16b4	              0xc3	                                     ret	       913	charset.c	FUNCTION_23
skiptodigit	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	20
0x2adf	              0x55	                                push rbp	      1613	charset.c	FUNCTION_46
0x2ae0	          0x4889e5	                            mov rbp, rsp	      1613	charset.c	FUNCTION_46
0x2ae3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1613	charset.c	FUNCTION_46
0x2ae7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1614	charset.c	FUNCTION_46
0x2aeb	        0x488945f8	                mov qword [rbp - 8], rax	      1614	charset.c	FUNCTION_46
0x2aef	            0xeb05	                           jmp 0x4002b36	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2af1	      0x488345f801	                  add qword [rbp - 8], 1	      1617	charset.c	FUNCTION_46	WHILE_1
0x2af6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2afa	           0xfb600	                   movzx eax, byte [rax]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2afd	            0x84c0	                             test al, al	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2aff	            0x7412	                            je 0x4002b53	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2b01	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2b05	           0xfb600	                   movzx eax, byte [rax]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2b08	           0xfb6c0	                           movzx eax, al	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2b0b	          0x83e830	                           sub eax, 0x30	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2b0e	          0x83f809	                              cmp eax, 9	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2b11	            0x77de	                            ja 0x4002b31	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x2b13	        0x488b45f8	                mov rax, qword [rbp - 8]	      1618	charset.c	FUNCTION_46
0x2b17	              0x5d	                                 pop rbp	      1619	charset.c	FUNCTION_46
0x2b18	              0xc3	                                     ret	      1619	charset.c	FUNCTION_46
getvvcol	IF,7:DO,0:SWITCH,0:ELSE,2:WHILE,0:functions,0:CALL,7:FOR,0	108
0x268a	              0x55	                                push rbp	      1441	charset.c	FUNCTION_37
0x268b	          0x4889e5	                            mov rbp, rsp	      1441	charset.c	FUNCTION_37
0x268e	              0x53	                                push rbx	      1441	charset.c	FUNCTION_37
0x268f	        0x4883ec58	                           sub rsp, 0x58	      1441	charset.c	FUNCTION_37
0x2693	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1441	charset.c	FUNCTION_37
0x2697	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1441	charset.c	FUNCTION_37
0x269b	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1441	charset.c	FUNCTION_37
0x269f	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1441	charset.c	FUNCTION_37
0x26a3	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1441	charset.c	FUNCTION_37
0x26a7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1441	charset.c	FUNCTION_37
0x26b0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1441	charset.c	FUNCTION_37
0x26b4	            0x31c0	                            xor eax, eax	      1441	charset.c	FUNCTION_37
0x26b6	      0xe800000000	                          call 0x40026fb	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x26bb	            0x85c0	                           test eax, eax	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x26bd	     0xf8408010000	                            je 0x400280b	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x26c3	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x26c7	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x26cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x26cf	    0x41b800000000	                              mov r8d, 0	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x26d5	      0xb900000000	                              mov ecx, 0	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x26da	          0x4889c7	                            mov rdi, rax	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x26dd	      0xe800000000	                          call 0x4002722	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x26e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1454	charset.c	FUNCTION_37	IF_1
0x26e6	          0x8b400c	              mov eax, dword [rax + 0xc]	      1454	charset.c	FUNCTION_37	IF_1
0x26e9	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1454	charset.c	FUNCTION_37	IF_1
0x26ec	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1455	charset.c	FUNCTION_37	IF_1
0x26f3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x26f7	          0x488b08	                    mov rcx, qword [rax]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x26fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x26fe	        0x488b4008	                mov rax, qword [rax + 8]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x2702	      0xba00000000	                              mov edx, 0	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x2707	          0x4889ce	                            mov rsi, rcx	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x270a	          0x4889c7	                            mov rdi, rax	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x270d	      0xe800000000	                          call 0x4002752	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x2712	        0x488945e0	             mov qword [rbp - 0x20], rax	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x2716	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x271a	          0x8b5808	                mov ebx, dword [rax + 8]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x271d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x2721	          0x4889c7	                            mov rdi, rax	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x2724	      0xe800000000	                          call 0x4002769	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x2729	            0x39c3	                            cmp ebx, eax	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x272b	            0x7d5c	                           jge 0x40027c9	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x272d	    0x488b05000000	            mov rax, qword [0x04002774] 	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x2734	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x2738	          0x8b5208	                mov edx, dword [rdx + 8]	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x273b	          0x4863ca	                         movsxd rcx, edx	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x273e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x2742	          0x4801ca	                            add rdx, rcx	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x2745	          0x4889d7	                            mov rdi, rdx	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x2748	            0xffd0	                                call rax	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x274a	          0x8945dc	             mov dword [rbp - 0x24], eax	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x274d	        0x837ddc09	               cmp dword [rbp - 0x24], 9	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x2751	            0x7436	                            je 0x40027c9	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x2753	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x2756	            0x89c7	                            mov edi, eax	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x2758	      0xe800000000	                          call 0x400279d	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x275d	            0x85c0	                           test eax, eax	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x275f	            0x7428	                            je 0x40027c9	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x2761	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x2764	            0x89c7	                            mov edi, eax	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x2766	      0xe800000000	                          call 0x40027ab	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x276b	          0x83e801	                              sub eax, 1	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x276e	          0x8945d8	             mov dword [rbp - 0x28], eax	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x2771	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x2774	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x2777	            0x7e09	                           jle 0x40027c2	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x2779	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1467	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x2780	            0xeb07	                           jmp 0x40027c9	      1467	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x2782	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1469	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	ELSE_1
0x2789	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1473	charset.c	FUNCTION_37	IF_1
0x278c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1473	charset.c	FUNCTION_37	IF_1
0x278f	             0x1d0	                            add eax, edx	      1473	charset.c	FUNCTION_37	IF_1
0x2791	          0x8945d0	             mov dword [rbp - 0x30], eax	      1473	charset.c	FUNCTION_37	IF_1
0x2794	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1474	charset.c	FUNCTION_37	IF_1	IF_5
0x2799	            0x7409	                            je 0x40027e4	      1474	charset.c	FUNCTION_37	IF_1	IF_5
0x279b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1475	charset.c	FUNCTION_37	IF_1	IF_5
0x279e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1475	charset.c	FUNCTION_37	IF_1	IF_5
0x27a2	            0x8910	                    mov dword [rax], edx	      1475	charset.c	FUNCTION_37	IF_1	IF_5
0x27a4	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1476	charset.c	FUNCTION_37	IF_1	IF_6
0x27a9	            0x7409	                            je 0x40027f4	      1476	charset.c	FUNCTION_37	IF_1	IF_6
0x27ab	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1477	charset.c	FUNCTION_37	IF_1	IF_6
0x27ae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1477	charset.c	FUNCTION_37	IF_1	IF_6
0x27b2	            0x8910	                    mov dword [rax], edx	      1477	charset.c	FUNCTION_37	IF_1	IF_6
0x27b4	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1478	charset.c	FUNCTION_37	IF_1	IF_7
0x27b9	            0x742f	                            je 0x400282a	      1478	charset.c	FUNCTION_37	IF_1	IF_7
0x27bb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x27be	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x27c1	             0x1c2	                            add edx, eax	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x27c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x27c7	            0x8910	                    mov dword [rax], edx	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x27c9	            0xeb1f	                           jmp 0x400282a	      1483	charset.c	FUNCTION_37
0x27cb	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      1482	charset.c	FUNCTION_37	CALL_7
0x27cf	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1482	charset.c	FUNCTION_37	CALL_7
0x27d3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1482	charset.c	FUNCTION_37	CALL_7
0x27d7	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1482	charset.c	FUNCTION_37	CALL_7
0x27db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1482	charset.c	FUNCTION_37	CALL_7
0x27df	          0x4989f8	                             mov r8, rdi	      1482	charset.c	FUNCTION_37	CALL_7
0x27e2	          0x4889c7	                            mov rdi, rax	      1482	charset.c	FUNCTION_37	CALL_7
0x27e5	      0xe800000000	                          call 0x400282a	      1482	charset.c	FUNCTION_37	CALL_7
0x27ea	              0x90	                                     nop	      1483	charset.c	FUNCTION_37
0x27eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1483	charset.c	FUNCTION_37
0x27ef	    0x644833042528	                xor rax, qword fs:[0x28]	      1483	charset.c	FUNCTION_37
0x27f8	            0x7405	                            je 0x400283f	      1483	charset.c	FUNCTION_37
0x27fa	      0xe800000000	                          call 0x400283f	      1483	charset.c	FUNCTION_37
0x27ff	        0x4883c458	                           add rsp, 0x58	      1483	charset.c	FUNCTION_37
0x2803	              0x5b	                                 pop rbx	      1483	charset.c	FUNCTION_37
0x2804	              0x5d	                                 pop rbp	      1483	charset.c	FUNCTION_37
0x2805	              0xc3	                                     ret	      1483	charset.c	FUNCTION_37
skiptohex	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	22
0x2b19	              0x55	                                push rbp	      1626	charset.c	FUNCTION_47
0x2b1a	          0x4889e5	                            mov rbp, rsp	      1626	charset.c	FUNCTION_47
0x2b1d	        0x4883ec20	                           sub rsp, 0x20	      1626	charset.c	FUNCTION_47
0x2b21	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1626	charset.c	FUNCTION_47
0x2b25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1627	charset.c	FUNCTION_47
0x2b29	        0x488945f8	                mov qword [rbp - 8], rax	      1627	charset.c	FUNCTION_47
0x2b2d	            0xeb05	                           jmp 0x4002b74	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b2f	      0x488345f801	                  add qword [rbp - 8], 1	      1630	charset.c	FUNCTION_47	WHILE_1
0x2b34	        0x488b45f8	                mov rax, qword [rbp - 8]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b38	           0xfb600	                   movzx eax, byte [rax]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b3b	            0x84c0	                             test al, al	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b3d	            0x7415	                            je 0x4002b94	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b43	           0xfb600	                   movzx eax, byte [rax]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b46	           0xfb6c0	                           movzx eax, al	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b49	            0x89c7	                            mov edi, eax	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b4b	      0xe800000000	                          call 0x4002b90	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b50	            0x85c0	                           test eax, eax	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b52	            0x74db	                            je 0x4002b6f	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x2b54	        0x488b45f8	                mov rax, qword [rbp - 8]	      1631	charset.c	FUNCTION_47
0x2b58	              0xc9	                                   leave	      1632	charset.c	FUNCTION_47
0x2b59	              0xc3	                                     ret	      1632	charset.c	FUNCTION_47
transstr	IF,7:DO,0:SWITCH,0:ELSE,6:WHILE,2:functions,0:CALL,13:FOR,0	150
0x890	              0x55	                                push rbp	       360	charset.c	FUNCTION_4
0x891	          0x4889e5	                            mov rbp, rsp	       360	charset.c	FUNCTION_4
0x894	        0x4883ec50	                           sub rsp, 0x50	       360	charset.c	FUNCTION_4
0x898	        0x48897db8	             mov qword [rbp - 0x48], rdi	       360	charset.c	FUNCTION_4
0x89c	    0x64488b042528	                mov rax, qword fs:[0x28]	       360	charset.c	FUNCTION_4
0x8a5	        0x488945f8	                mov qword [rbp - 8], rax	       360	charset.c	FUNCTION_4
0x8a9	            0x31c0	                            xor eax, eax	       360	charset.c	FUNCTION_4
0x8ab	    0x8b0500000000	            mov eax, dword [0x040008f1] 	       369	charset.c	FUNCTION_4	IF_1
0x8b1	            0x85c0	                           test eax, eax	       369	charset.c	FUNCTION_4	IF_1
0x8b3	     0xf84d1000000	                            je 0x40009ca	       369	charset.c	FUNCTION_4	IF_1
0x8b9	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       373	charset.c	FUNCTION_4	IF_1
0x8c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       374	charset.c	FUNCTION_4	IF_1
0x8c4	        0x488945d8	             mov qword [rbp - 0x28], rax	       374	charset.c	FUNCTION_4	IF_1
0x8c8	      0xe99b000000	                           jmp 0x40009a8	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x8cd	    0x488b05000000	            mov rax, qword [0x04000914] 	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8d4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8d8	          0x4889d7	                            mov rdi, rdx	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8db	            0xffd0	                                call rax	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8dd	          0x8945c8	             mov dword [rbp - 0x38], eax	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8e0	        0x837dc801	               cmp dword [rbp - 0x38], 1	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8e4	            0x7e54	                           jle 0x400097a	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8e6	    0x488b05000000	            mov rax, qword [0x0400092d] 	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8ed	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8f1	          0x4889d7	                            mov rdi, rdx	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8f4	            0xffd0	                                call rax	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8f6	          0x8945cc	             mov dword [rbp - 0x34], eax	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8f9	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8fc	            0x4898	                                    cdqe	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x8fe	        0x480145d8	            add qword [rbp - 0x28], rax 	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x902	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x905	            0x89c7	                            mov edi, eax	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x907	      0xe800000000	                          call 0x400094c	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x90c	            0x85c0	                           test eax, eax	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x90e	            0x7408	                            je 0x4000958	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x910	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x913	           0x145c4	             add dword [rbp - 0x3c], eax	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x916	            0xeb50	                           jmp 0x40009a8	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x918	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x91b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x91f	            0x89d6	                            mov esi, edx	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x921	          0x4889c7	                            mov rdi, rax	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x924	      0xe800000000	                          call 0x4000969	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x929	        0x488d45e0	                   lea rax, [rbp - 0x20]	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x92d	          0x4889c7	                            mov rdi, rax	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x930	      0xe800000000	                          call 0x4000975	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x935	           0x145c4	             add dword [rbp - 0x3c], eax	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x938	            0xeb2e	                           jmp 0x40009a8	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x93a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x93e	        0x488d5001	                      lea rdx, [rax + 1]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x942	        0x488955d8	             mov qword [rbp - 0x28], rdx	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x946	           0xfb600	                   movzx eax, byte [rax]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x949	           0xfb6c0	                           movzx eax, al	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x94c	            0x89c7	                            mov edi, eax	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x94e	      0xe800000000	                          call 0x4000993	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x953	          0x8945c8	             mov dword [rbp - 0x38], eax	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x956	        0x837dc800	               cmp dword [rbp - 0x38], 0	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x95a	            0x7e08	                           jle 0x40009a4	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x95c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x95f	           0x145c4	             add dword [rbp - 0x3c], eax	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x962	            0xeb04	                           jmp 0x40009a8	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x964	        0x8345c404	               add dword [rbp - 0x3c], 4	       395	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	ELSE_3
0x968	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x96c	           0xfb600	                   movzx eax, byte [rax]	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x96f	            0x84c0	                             test al, al	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x971	     0xf8556ffffff	                           jne 0x400090d	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x977	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x97a	          0x83c001	                              add eax, 1	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x97d	            0x89c7	                            mov edi, eax	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x97f	      0xe800000000	                          call 0x40009c4	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x984	        0x488945d0	             mov qword [rbp - 0x30], rax	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x988	            0xeb1a	                           jmp 0x40009e4	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x98a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       402	charset.c	FUNCTION_4	CALL_7
0x98e	          0x4889c7	                            mov rdi, rax	       402	charset.c	FUNCTION_4	CALL_7
0x991	      0xe800000000	                          call 0x40009d6	       402	charset.c	FUNCTION_4	CALL_7
0x996	          0x83c001	                              add eax, 1	       402	charset.c	FUNCTION_4	CALL_7
0x999	            0x89c7	                            mov edi, eax	       402	charset.c	FUNCTION_4	CALL_7
0x99b	      0xe800000000	                          call 0x40009e0	       402	charset.c	FUNCTION_4	CALL_7
0x9a0	        0x488945d0	             mov qword [rbp - 0x30], rax	       402	charset.c	FUNCTION_4	CALL_7
0x9a4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       403	charset.c	FUNCTION_4	IF_5
0x9a9	     0xf84df000000	                            je 0x4000ace	       403	charset.c	FUNCTION_4	IF_5
0x9af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       405	charset.c	FUNCTION_4	IF_5
0x9b3	          0xc60000	                       mov byte [rax], 0	       405	charset.c	FUNCTION_4	IF_5
0x9b6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       406	charset.c	FUNCTION_4	IF_5
0x9ba	        0x488945d8	             mov qword [rbp - 0x28], rax	       406	charset.c	FUNCTION_4	IF_5
0x9be	      0xe9bc000000	                           jmp 0x4000abf	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x9c3	    0x8b0500000000	            mov eax, dword [0x04000a09] 	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9c9	            0x85c0	                           test eax, eax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9cb	     0xf8483000000	                            je 0x4000a94	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9d1	    0x488b05000000	            mov rax, qword [0x04000a18] 	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9d8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9dc	          0x4889d7	                            mov rdi, rdx	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9df	            0xffd0	                                call rax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9e1	          0x8945c8	             mov dword [rbp - 0x38], eax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9e4	        0x837dc801	               cmp dword [rbp - 0x38], 1	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9e8	            0x7e6a	                           jle 0x4000a94	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9ea	    0x488b05000000	            mov rax, qword [0x04000a31] 	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9f1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9f5	          0x4889d7	                            mov rdi, rdx	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9f8	            0xffd0	                                call rax	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9fa	          0x8945cc	             mov dword [rbp - 0x34], eax	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x9fd	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0xa00	            0x89c7	                            mov edi, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0xa02	      0xe800000000	                          call 0x4000a47	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0xa07	            0x85c0	                           test eax, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0xa09	            0x741b	                            je 0x4000a66	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0xa0b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa0e	          0x4863d0	                         movsxd rdx, eax	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa11	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa15	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa19	          0x4889ce	                            mov rsi, rcx	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa1c	          0x4889c7	                            mov rdi, rax	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa1f	      0xe800000000	                          call 0x4000a64	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa24	            0xeb23	                           jmp 0x4000a89	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0xa26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa2a	          0x4889c7	                            mov rdi, rax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa2d	      0xe800000000	                          call 0x4000a72	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa32	          0x4889c2	                            mov rdx, rax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa35	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa39	          0x4801c2	                            add rdx, rax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa3c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa3f	            0x89c6	                            mov esi, eax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa41	          0x4889d7	                            mov rdi, rdx	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa44	      0xe800000000	                          call 0x4000a89	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0xa49	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0xa4c	            0x4898	                                    cdqe	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0xa4e	        0x480145d8	            add qword [rbp - 0x28], rax 	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0xa52	            0xeb2b	                           jmp 0x4000abf	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0xa54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa58	        0x488d5001	                      lea rdx, [rax + 1]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa5c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa60	           0xfb600	                   movzx eax, byte [rax]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa63	           0xfb6c0	                           movzx eax, al	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa66	            0x89c7	                            mov edi, eax	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa68	      0xe800000000	                          call 0x4000aad	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa6d	          0x4889c2	                            mov rdx, rax	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa70	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa74	          0x4889d6	                            mov rsi, rdx	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa77	          0x4889c7	                            mov rdi, rax	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa7a	      0xe800000000	                          call 0x4000abf	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0xa7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0xa83	           0xfb600	                   movzx eax, byte [rax]	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0xa86	            0x84c0	                             test al, al	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0xa88	     0xf8535ffffff	                           jne 0x4000a03	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0xa8e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       424	charset.c	FUNCTION_4
0xa92	        0x488b4df8	                mov rcx, qword [rbp - 8]	       425	charset.c	FUNCTION_4
0xa96	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       425	charset.c	FUNCTION_4
0xa9f	            0x7405	                            je 0x4000ae6	       425	charset.c	FUNCTION_4
0xaa1	      0xe800000000	                          call 0x4000ae6	       425	charset.c	FUNCTION_4
0xaa6	              0xc9	                                   leave	       425	charset.c	FUNCTION_4
0xaa7	              0xc3	                                     ret	       425	charset.c	FUNCTION_4
win_lbr_chartabsize	IF,24:DO,0:SWITCH,0:ELSE,3:WHILE,0:functions,0:CALL,23:FOR,1	430
0x1a30	              0x55	                                push rbp	      1047	charset.c	FUNCTION_32
0x1a31	          0x4889e5	                            mov rbp, rsp	      1047	charset.c	FUNCTION_32
0x1a34	              0x53	                                push rbx	      1047	charset.c	FUNCTION_32
0x1a35	    0x4881ec880000	                           sub rsp, 0x88	      1047	charset.c	FUNCTION_32
0x1a3c	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1047	charset.c	FUNCTION_32
0x1a40	        0x48897590	             mov qword [rbp - 0x70], rsi	      1047	charset.c	FUNCTION_32
0x1a44	        0x48895588	             mov qword [rbp - 0x78], rdx	      1047	charset.c	FUNCTION_32
0x1a48	          0x894d84	             mov dword [rbp - 0x7c], ecx	      1047	charset.c	FUNCTION_32
0x1a4b	    0x4c898578ffff	              mov qword [rbp - 0x88], r8	      1047	charset.c	FUNCTION_32
0x1a52	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1052	charset.c	FUNCTION_32
0x1a59	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      1056	charset.c	FUNCTION_32
0x1a60	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1062	charset.c	FUNCTION_32
0x1a64	           0xfb600	                   movzx eax, byte [rax]	      1062	charset.c	FUNCTION_32
0x1a67	            0x3c09	                               cmp al, 9	      1062	charset.c	FUNCTION_32
0x1a69	           0xf94c0	                                 sete al	      1062	charset.c	FUNCTION_32
0x1a6c	           0xfb6c0	                           movzx eax, al	      1062	charset.c	FUNCTION_32
0x1a6f	          0x8945d0	             mov dword [rbp - 0x30], eax	      1062	charset.c	FUNCTION_32
0x1a72	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1068	charset.c	FUNCTION_32	IF_1
0x1a76	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1068	charset.c	FUNCTION_32	IF_1
0x1a7c	            0x85c0	                           test eax, eax	      1068	charset.c	FUNCTION_32	IF_1
0x1a7e	     0xf85a8000000	                           jne 0x4001b6c	      1068	charset.c	FUNCTION_32	IF_1
0x1a84	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1068	charset.c	FUNCTION_32	IF_1
0x1a88	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1068	charset.c	FUNCTION_32	IF_1
0x1a8e	            0x85c0	                           test eax, eax	      1068	charset.c	FUNCTION_32	IF_1
0x1a90	     0xf8596000000	                           jne 0x4001b6c	      1068	charset.c	FUNCTION_32	IF_1
0x1a96	    0x488b05000000	            mov rax, qword [0x04001add] 	      1068	charset.c	FUNCTION_32	IF_1
0x1a9d	           0xfb600	                   movzx eax, byte [rax]	      1068	charset.c	FUNCTION_32	IF_1
0x1aa0	            0x84c0	                             test al, al	      1068	charset.c	FUNCTION_32	IF_1
0x1aa2	     0xf8584000000	                           jne 0x4001b6c	      1068	charset.c	FUNCTION_32	IF_1
0x1aa8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x1aac	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x1ab2	            0x85c0	                           test eax, eax	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x1ab4	            0x741f	                            je 0x4001b15	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x1ab6	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x1abd	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x1ac0	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x1ac4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x1ac8	          0x4889c7	                            mov rdi, rax	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x1acb	      0xe866050000	          call sym.win_nolbr_chartabsize	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x1ad0	      0xe957050000	                           jmp 0x400206c	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x1ad5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1ad9	           0xfb600	                   movzx eax, byte [rax]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1adc	            0x3c09	                               cmp al, 9	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1ade	            0x753b	                           jne 0x4001b5b	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1ae0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1ae4	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1aea	            0x85c0	                           test eax, eax	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1aec	            0x740a	                            je 0x4001b38	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1aee	    0x8b0500000000	            mov eax, dword [0x04001b34] 	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1af4	            0x85c0	                           test eax, eax	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1af6	            0x7423	                            je 0x4001b5b	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1af8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1afc	        0x488b4008	                mov rax, qword [rax + 8]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b00	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b07	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b0a	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b0d	              0x99	                                     cdq	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b0e	          0xf77dd4	                 idiv dword [rbp - 0x2c]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b11	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b14	            0x29d0	                            sub eax, edx	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b16	      0xe911050000	                           jmp 0x400206c	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b1b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b1f	          0x4889c7	                            mov rdi, rax	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b22	      0xe800000000	                          call 0x4001b67	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b27	      0xe900050000	                           jmp 0x400206c	      1075	charset.c	FUNCTION_32	IF_1	CALL_2
0x1b2c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1082	charset.c	FUNCTION_32	CALL_3
0x1b2f	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1082	charset.c	FUNCTION_32	CALL_3
0x1b33	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1082	charset.c	FUNCTION_32	CALL_3
0x1b37	          0x4889ce	                            mov rsi, rcx	      1082	charset.c	FUNCTION_32	CALL_3
0x1b3a	          0x4889c7	                            mov rdi, rax	      1082	charset.c	FUNCTION_32	CALL_3
0x1b3d	      0xe806f9ffff	                call sym.win_chartabsize	      1082	charset.c	FUNCTION_32	CALL_3
0x1b42	          0x8945ac	             mov dword [rbp - 0x54], eax	      1082	charset.c	FUNCTION_32	CALL_3
0x1b45	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1083	charset.c	FUNCTION_32
0x1b49	           0xfb600	                   movzx eax, byte [rax]	      1083	charset.c	FUNCTION_32
0x1b4c	           0xfb6c0	                           movzx eax, al	      1083	charset.c	FUNCTION_32
0x1b4f	          0x8945d8	             mov dword [rbp - 0x28], eax	      1083	charset.c	FUNCTION_32
0x1b52	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1084	charset.c	FUNCTION_32	IF_3
0x1b56	            0x7409	                            je 0x4001ba1	      1084	charset.c	FUNCTION_32	IF_3
0x1b58	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1085	charset.c	FUNCTION_32	IF_3
0x1b5b	          0x83e801	                              sub eax, 1	      1085	charset.c	FUNCTION_32	IF_3
0x1b5e	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1085	charset.c	FUNCTION_32	IF_3
0x1b61	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1091	charset.c	FUNCTION_32	IF_4
0x1b65	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1091	charset.c	FUNCTION_32	IF_4
0x1b6b	            0x85c0	                           test eax, eax	      1091	charset.c	FUNCTION_32	IF_4
0x1b6d	     0xf84b4010000	                            je 0x4001d67	      1091	charset.c	FUNCTION_32	IF_4
0x1b73	    0x817dd8ff0000	           cmp dword [rbp - 0x28], 0xff 	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b7a	     0xf8fa7010000	                            jg 0x4001d67	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b80	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b83	           0xfb6c0	                           movzx eax, al	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b86	            0x4898	                                    cdqe	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b88	     0xfb680000000	                   movzx eax, byte [rax]	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b8f	            0x84c0	                             test al, al	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b91	     0xf8490010000	                            je 0x4001d67	      1092	charset.c	FUNCTION_32	IF_4	CALL_4
0x1b97	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1b9b	        0x4883c001	                              add rax, 1	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1b9f	           0xfb600	                   movzx eax, byte [rax]	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1ba2	           0xfb6c0	                           movzx eax, al	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1ba5	            0x4898	                                    cdqe	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1ba7	     0xfb680000000	                   movzx eax, byte [rax]	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1bae	            0x84c0	                             test al, al	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1bb0	     0xf8571010000	                           jne 0x4001d67	      1093	charset.c	FUNCTION_32	IF_4	CALL_5
0x1bb6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1094	charset.c	FUNCTION_32	IF_4
0x1bba	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1094	charset.c	FUNCTION_32	IF_4
0x1bc0	            0x85c0	                           test eax, eax	      1094	charset.c	FUNCTION_32	IF_4
0x1bc2	     0xf845f010000	                            je 0x4001d67	      1094	charset.c	FUNCTION_32	IF_4
0x1bc8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1095	charset.c	FUNCTION_32	IF_4
0x1bcc	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1095	charset.c	FUNCTION_32	IF_4
0x1bd2	            0x85c0	                           test eax, eax	      1095	charset.c	FUNCTION_32	IF_4
0x1bd4	     0xf844d010000	                            je 0x4001d67	      1095	charset.c	FUNCTION_32	IF_4
0x1bda	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1101	charset.c	FUNCTION_32	IF_4	CALL_6
0x1bde	          0x4889c7	                            mov rdi, rax	      1101	charset.c	FUNCTION_32	IF_4	CALL_6
0x1be1	      0xe800000000	                          call 0x4001c26	      1101	charset.c	FUNCTION_32	IF_4	CALL_6
0x1be6	          0x8945dc	             mov dword [rbp - 0x24], eax	      1101	charset.c	FUNCTION_32	IF_4	CALL_6
0x1be9	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1102	charset.c	FUNCTION_32	IF_4
0x1bec	          0x8945b0	             mov dword [rbp - 0x50], eax	      1102	charset.c	FUNCTION_32	IF_4
0x1bef	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1103	charset.c	FUNCTION_32	IF_4
0x1bf3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1103	charset.c	FUNCTION_32	IF_4
0x1bf9	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      1103	charset.c	FUNCTION_32	IF_4
0x1bfc	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1103	charset.c	FUNCTION_32	IF_4
0x1bff	          0x8945b8	             mov dword [rbp - 0x48], eax	      1103	charset.c	FUNCTION_32	IF_4
0x1c02	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x1c05	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x1c08	            0x7c39	                            jl 0x4001c83	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x1c0a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x1c0d	           0x145b8	             add dword [rbp - 0x48], eax	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x1c10	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_7
0x1c14	          0x4889c7	                            mov rdi, rax	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_7
0x1c17	      0xe800000000	                          call 0x4001c5c	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_7
0x1c1c	            0x89c2	                            mov edx, eax	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_7
0x1c1e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_7
0x1c21	             0x1d0	                            add eax, edx	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_7
0x1c23	          0x8945e0	             mov dword [rbp - 0x20], eax	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_7
0x1c26	        0x837de000	               cmp dword [rbp - 0x20], 0	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c2a	            0x7e17	                           jle 0x4001c83	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c2c	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c2f	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c32	              0x99	                                     cdq	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c33	          0xf77de0	                 idiv dword [rbp - 0x20]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c36	          0x83c001	                              add eax, 1	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c39	         0xfaf45e0	            imul eax, dword [rbp - 0x20]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c3d	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c40	           0x145b8	             add dword [rbp - 0x48], eax	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x1c43	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1114	charset.c	FUNCTION_32	IF_4	FOR_1
0x1c47	        0x488945e8	             mov qword [rbp - 0x18], rax	      1114	charset.c	FUNCTION_32	IF_4	FOR_1
0x1c4b	    0x8b0500000000	            mov eax, dword [0x04001c91] 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c51	            0x85c0	                           test eax, eax	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c53	            0x7412	                            je 0x4001ca7	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c55	    0x488b05000000	            mov rax, qword [0x04001c9c] 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c5c	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c60	          0x4889d7	                            mov rdi, rdx	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c63	            0xffd0	                                call rax	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c65	            0xeb05	                           jmp 0x4001cac	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c67	      0xb801000000	                              mov eax, 1	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c6c	            0x4898	                                    cdqe	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c6e	        0x48014588	            add qword [rbp - 0x78], rax 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_8
0x1c72	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x1c76	           0xfb600	                   movzx eax, byte [rax]	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x1c79	           0xfb6c0	                           movzx eax, al	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x1c7c	          0x8945d8	             mov dword [rbp - 0x28], eax	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x1c7f	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x1c83	     0xf84f5000000	                            je 0x4001dbe	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x1c89	    0x817dd8ff0000	           cmp dword [rbp - 0x28], 0xff 	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x1c90	            0x7f13	                            jg 0x4001ce5	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x1c92	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x1c95	           0xfb6c0	                           movzx eax, al	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x1c98	            0x4898	                                    cdqe	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x1c9a	     0xfb680000000	                   movzx eax, byte [rax]	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x1ca1	            0x84c0	                             test al, al	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x1ca3	            0x7543	                           jne 0x4001d28	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x1ca5	    0x817dd8ff0000	           cmp dword [rbp - 0x28], 0xff 	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cac	            0x7f17	                            jg 0x4001d05	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cae	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cb1	           0xfb6c0	                           movzx eax, al	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cb4	            0x4898	                                    cdqe	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cb6	     0xfb680000000	                   movzx eax, byte [rax]	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cbd	            0x84c0	                             test al, al	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cbf	     0xf85b9000000	                           jne 0x4001dbe	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x1cc5	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1cc8	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1ccb	            0x741b	                            je 0x4001d28	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1ccd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1cd1	           0xfb600	                   movzx eax, byte [rax]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1cd4	           0xfb6c0	                           movzx eax, al	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1cd7	            0x4898	                                    cdqe	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1cd9	     0xfb680000000	                   movzx eax, byte [rax]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1ce0	            0x84c0	                             test al, al	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1ce2	     0xf8596000000	                           jne 0x4001dbe	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_11
0x1ce8	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_12
0x1ceb	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_12
0x1cef	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_12
0x1cf3	          0x4889ce	                            mov rsi, rcx	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_12
0x1cf6	          0x4889c7	                            mov rdi, rax	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_12
0x1cf9	      0xe84af7ffff	                call sym.win_chartabsize	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_12
0x1cfe	           0x145b0	             add dword [rbp - 0x50], eax	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_12
0x1d01	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d04	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d07	     0xf8c36ffffff	                            jl 0x4001c83	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d0d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d10	          0x2b4584	             sub eax, dword [rbp - 0x7c]	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d13	            0x89c2	                            mov edx, eax	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d15	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d18	             0x1d0	                            add eax, edx	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d1a	          0x8945ac	             mov dword [rbp - 0x54], eax	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d1d	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1127	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d24	              0x90	                                     nop	      1128	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x1d25	            0xeb57	                           jmp 0x4001dbe	      1091	charset.c	FUNCTION_32	IF_4
0x1d27	    0x8b0500000000	            mov eax, dword [0x04001d6d] 	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d2d	            0x85c0	                           test eax, eax	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d2f	            0x744e	                            je 0x4001dbf	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d31	        0x837dac02	               cmp dword [rbp - 0x54], 2	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d35	            0x7548	                           jne 0x4001dbf	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d37	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d3b	           0xfb600	                   movzx eax, byte [rax]	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d3e	           0xfb6c0	                           movzx eax, al	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d41	            0x4898	                                    cdqe	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d43	     0xfb680000000	                   movzx eax, byte [rax]	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d4a	            0x3c01	                               cmp al, 1	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d4c	            0x7e31	                           jle 0x4001dbf	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x1d4e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d52	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d58	            0x85c0	                           test eax, eax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d5a	            0x7423	                            je 0x4001dbf	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d5c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d5f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d63	            0x89d6	                            mov esi, edx	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d65	          0x4889c7	                            mov rdi, rax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d68	      0xe800000000	                          call 0x4001dad	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d6d	            0x85c0	                           test eax, eax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d6f	            0x740e	                            je 0x4001dbf	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_14
0x1d71	        0x8345ac01	               add dword [rbp - 0x54], 1	      1136	charset.c	FUNCTION_32	ELSE_1	IF_9
0x1d75	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      1137	charset.c	FUNCTION_32	ELSE_1	IF_9
0x1d7c	            0xeb01	                           jmp 0x4001dbf	      1137	charset.c	FUNCTION_32	ELSE_1	IF_9
0x1d7e	              0x90	                                     nop	      1091	charset.c	FUNCTION_32	IF_4
0x1d7f	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1146	charset.c	FUNCTION_32
0x1d86	    0x488b05000000	            mov rax, qword [0x04001dcd] 	      1147	charset.c	FUNCTION_32	IF_10
0x1d8d	           0xfb600	                   movzx eax, byte [rax]	      1147	charset.c	FUNCTION_32	IF_10
0x1d90	            0x84c0	                             test al, al	      1147	charset.c	FUNCTION_32	IF_10
0x1d92	            0x7512	                           jne 0x4001de6	      1147	charset.c	FUNCTION_32	IF_10
0x1d94	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1147	charset.c	FUNCTION_32	IF_10
0x1d98	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1147	charset.c	FUNCTION_32	IF_10
0x1d9e	            0x85c0	                           test eax, eax	      1147	charset.c	FUNCTION_32	IF_10
0x1da0	     0xf8468020000	                            je 0x400204e	      1147	charset.c	FUNCTION_32	IF_10
0x1da6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1147	charset.c	FUNCTION_32	IF_10
0x1daa	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1147	charset.c	FUNCTION_32	IF_10
0x1db0	            0x85c0	                           test eax, eax	      1147	charset.c	FUNCTION_32	IF_10
0x1db2	     0xf8456020000	                            je 0x400204e	      1147	charset.c	FUNCTION_32	IF_10
0x1db8	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1147	charset.c	FUNCTION_32	IF_10
0x1dbc	     0xf844c020000	                            je 0x400204e	      1147	charset.c	FUNCTION_32	IF_10
0x1dc2	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      1149	charset.c	FUNCTION_32	IF_10
0x1dc9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1150	charset.c	FUNCTION_32	IF_10	CALL_15
0x1dcd	          0x4889c7	                            mov rdi, rax	      1150	charset.c	FUNCTION_32	IF_10	CALL_15
0x1dd0	      0xe800000000	                          call 0x4001e15	      1150	charset.c	FUNCTION_32	IF_10	CALL_15
0x1dd5	          0x8945c8	             mov dword [rbp - 0x38], eax	      1150	charset.c	FUNCTION_32	IF_10	CALL_15
0x1dd8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1152	charset.c	FUNCTION_32	IF_10
0x1ddb	          0x8945dc	             mov dword [rbp - 0x24], eax	      1152	charset.c	FUNCTION_32	IF_10
0x1dde	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1153	charset.c	FUNCTION_32	IF_10
0x1de1	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1153	charset.c	FUNCTION_32	IF_10
0x1de4	             0x1d0	                            add eax, edx	      1153	charset.c	FUNCTION_32	IF_10
0x1de6	           0x14584	             add dword [rbp - 0x7c], eax	      1153	charset.c	FUNCTION_32	IF_10
0x1de9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x1ded	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x1df3	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x1df6	     0xf8fdd000000	                            jg 0x4001f19	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x1dfc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x1e00	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x1e06	          0x294584	             sub dword [rbp - 0x7c], eax	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x1e09	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e0d	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e13	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e17	          0x4889c7	                            mov rdi, rax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e1a	      0xe800000000	                          call 0x4001e5f	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e1f	            0x89c2	                            mov edx, eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e21	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e24	            0x29d0	                            sub eax, edx	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e26	            0x29c3	                            sub ebx, eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e28	            0x89d8	                            mov eax, ebx	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e2a	          0x8945dc	             mov dword [rbp - 0x24], eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_16
0x1e2d	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e30	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e33	            0x7c10	                            jl 0x4001e85	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e35	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e39	            0x7e0a	                           jle 0x4001e85	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e3b	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e3e	              0x99	                                     cdq	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e3f	          0xf77ddc	                 idiv dword [rbp - 0x24]	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e42	          0x895584	             mov dword [rbp - 0x7c], edx	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x1e45	    0x488b05000000	            mov rax, qword [0x04001e8c] 	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x1e4c	           0xfb600	                   movzx eax, byte [rax]	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x1e4f	            0x84c0	                             test al, al	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x1e51	            0x743b	                            je 0x4001ece	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x1e53	    0x8b0500000000	            mov eax, dword [0x04001e99] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e59	            0x85c0	                           test eax, eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e5b	            0x7411	                            je 0x4001eae	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e5d	    0x488b05000000	            mov rax, qword [0x04001ea4] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e64	          0x4889c7	                            mov rdi, rax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e67	      0xe800000000	                          call 0x4001eac	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e6c	            0xeb0f	                           jmp 0x4001ebd	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e6e	    0x488b05000000	            mov rax, qword [0x04001eb5] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e75	          0x4889c7	                            mov rdi, rax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e78	      0xe800000000	                          call 0x4001ebd	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e7d	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_17
0x1e80	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1163	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x1e83	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1163	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x1e86	            0x7c06	                            jl 0x4001ece	      1163	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x1e88	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x1e8b	          0x294584	             sub dword [rbp - 0x7c], eax	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x1e8e	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1e91	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1e94	            0x7c12	                            jl 0x4001ee8	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1e96	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1e9a	            0x7e0c	                           jle 0x4001ee8	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1e9c	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1e9f	              0x99	                                     cdq	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1ea0	          0xf77ddc	                 idiv dword [rbp - 0x24]	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1ea3	          0x895584	             mov dword [rbp - 0x7c], edx	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1ea6	            0xeb22	                           jmp 0x4001f0a	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x1ea8	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1eac	            0x7e1c	                           jle 0x4001f0a	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1eae	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1eb2	            0x7e16	                           jle 0x4001f0a	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1eb4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1eb8	          0x4889c7	                            mov rdi, rax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1ebb	      0xe800000000	                          call 0x4001f00	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1ec0	            0x89c2	                            mov edx, eax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1ec2	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1ec5	            0x29d0	                            sub eax, edx	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1ec7	           0x14584	             add dword [rbp - 0x7c], eax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x1eca	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_19
0x1ece	          0x4889c7	                            mov rdi, rax	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_19
0x1ed1	      0xe800000000	                          call 0x4001f16	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_19
0x1ed6	          0x2945c8	             sub dword [rbp - 0x38], eax	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_19
0x1ed9	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1edd	            0x741f	                            je 0x4001f3e	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1edf	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1ee2	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1ee5	             0x1c2	                            add edx, eax	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1ee7	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1eea	             0x1c2	                            add edx, eax	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1eec	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1ef0	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1ef6	            0x39c2	                            cmp edx, eax	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1ef8	     0xf8e10010000	                           jle 0x400204e	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x1efe	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1175	charset.c	FUNCTION_32	IF_10	IF_17
0x1f05	    0x488b05000000	            mov rax, qword [0x04001f4c] 	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x1f0c	           0xfb600	                   movzx eax, byte [rax]	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x1f0f	            0x84c0	                             test al, al	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x1f11	     0xf84c0000000	                            je 0x4002017	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x1f17	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f1a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f1d	             0x1c2	                            add edx, eax	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f1f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f22	             0x1c2	                            add edx, eax	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f24	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f28	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f2e	            0x39c2	                            cmp edx, eax	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f30	     0xf8e8f000000	                           jle 0x4002005	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f36	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f3a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f40	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f43	          0x2b45c8	             sub eax, dword [rbp - 0x38]	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f46	          0x8945cc	             mov dword [rbp - 0x34], eax	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f49	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f4d	            0x7416	                            je 0x4001fa5	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f4f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f53	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f59	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f5c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f5f	             0x1ca	                            add edx, ecx	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f61	            0x29d0	                            sub eax, edx	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f63	            0xeb05	                           jmp 0x4001faa	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f65	      0xb800000000	                              mov eax, 0	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f6a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x1f6d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x1f71	            0x750d	                           jne 0x4001fc0	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x1f73	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x1f77	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x1f7d	          0x8945cc	             mov dword [rbp - 0x34], eax	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x1f80	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f83	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f86	              0x99	                                     cdq	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f87	          0xf77dcc	                 idiv dword [rbp - 0x34]	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f8a	            0x89c3	                            mov ebx, eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f8c	    0x488b05000000	            mov rax, qword [0x04001fd3] 	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f93	          0x4889c7	                            mov rdi, rax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f96	      0xe800000000	                          call 0x4001fdb	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f9b	           0xfafc3	                           imul eax, ebx	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1f9e	           0x145bc	             add dword [rbp - 0x44], eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x1fa1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x1fa4	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x1fa7	              0x99	                                     cdq	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x1fa8	          0xf77dcc	                 idiv dword [rbp - 0x34]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x1fab	            0x89d0	                            mov eax, edx	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x1fad	            0x85c0	                           test eax, eax	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x1faf	            0x7426	                            je 0x4002017	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x1fb1	    0x488b05000000	            mov rax, qword [0x04001ff8] 	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_21
0x1fb8	          0x4889c7	                            mov rdi, rax	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_21
0x1fbb	      0xe800000000	                          call 0x4002000	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_21
0x1fc0	           0x145bc	             add dword [rbp - 0x44], eax	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_21
0x1fc3	            0xeb12	                           jmp 0x4002017	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_21
0x1fc5	    0x488b05000000	            mov rax, qword [0x0400200c] 	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_22
0x1fcc	          0x4889c7	                            mov rdi, rax	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_22
0x1fcf	      0xe800000000	                          call 0x4002014	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_22
0x1fd4	           0x145bc	             add dword [rbp - 0x44], eax	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_22
0x1fd7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x1fdb	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x1fe1	            0x85c0	                           test eax, eax	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x1fe3	            0x7416	                            je 0x400203b	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x1fe5	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_23
0x1fe9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_23
0x1fed	          0x4889d6	                            mov rsi, rdx	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_23
0x1ff0	          0x4889c7	                            mov rdi, rax	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_23
0x1ff3	      0xe800000000	                          call 0x4002038	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_23
0x1ff8	           0x145bc	             add dword [rbp - 0x44], eax	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_23
0x1ffb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1196	charset.c	FUNCTION_32	IF_10	IF_17
0x1ffe	           0x145ac	             add dword [rbp - 0x54], eax	      1196	charset.c	FUNCTION_32	IF_10	IF_17
0x2001	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1197	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x2005	            0x7407	                            je 0x400204e	      1197	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x2007	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x200e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1201	charset.c	FUNCTION_32	IF_24
0x2016	            0x7411	                            je 0x4002069	      1201	charset.c	FUNCTION_32	IF_24
0x2018	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1202	charset.c	FUNCTION_32	IF_24
0x201b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1202	charset.c	FUNCTION_32	IF_24
0x201e	             0x1c2	                            add edx, eax	      1202	charset.c	FUNCTION_32	IF_24
0x2020	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1202	charset.c	FUNCTION_32	IF_24
0x2027	            0x8910	                    mov dword [rax], edx	      1202	charset.c	FUNCTION_32	IF_24
0x2029	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1203	charset.c	FUNCTION_32
0x202c	    0x4881c4880000	                           add rsp, 0x88	      1205	charset.c	FUNCTION_32
0x2033	              0x5b	                                 pop rbx	      1205	charset.c	FUNCTION_32
0x2034	              0x5d	                                 pop rbp	      1205	charset.c	FUNCTION_32
0x2035	              0xc3	                                     ret	      1205	charset.c	FUNCTION_32
win_linetabsize	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,1	44
0x1513	              0x55	                                push rbp	       868	charset.c	FUNCTION_20
0x1514	          0x4889e5	                            mov rbp, rsp	       868	charset.c	FUNCTION_20
0x1517	        0x4883ec30	                           sub rsp, 0x30	       868	charset.c	FUNCTION_20
0x151b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       868	charset.c	FUNCTION_20
0x151f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       868	charset.c	FUNCTION_20
0x1523	          0x8955dc	             mov dword [rbp - 0x24], edx	       868	charset.c	FUNCTION_20
0x1526	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       869	charset.c	FUNCTION_20
0x152d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       872	charset.c	FUNCTION_20	FOR_1
0x1531	        0x488945f8	                mov qword [rbp - 8], rax	       872	charset.c	FUNCTION_20	FOR_1
0x1535	            0xeb47	                           jmp 0x40015be	       872	charset.c	FUNCTION_20	FOR_1
0x1537	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       874	charset.c	FUNCTION_20	CALL_2
0x153a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       874	charset.c	FUNCTION_20	CALL_2
0x153e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       874	charset.c	FUNCTION_20	CALL_2
0x1542	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       874	charset.c	FUNCTION_20	CALL_2
0x1546	    0x41b800000000	                              mov r8d, 0	       874	charset.c	FUNCTION_20	CALL_2
0x154c	          0x4889c7	                            mov rdi, rax	       874	charset.c	FUNCTION_20	CALL_2
0x154f	      0xe800000000	                          call 0x4001594	       874	charset.c	FUNCTION_20	CALL_2
0x1554	           0x145f4	              add dword [rbp - 0xc], eax	       874	charset.c	FUNCTION_20	CALL_2
0x1557	    0x8b0500000000	            mov eax, dword [0x0400159d] 	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x155d	            0x85c0	                           test eax, eax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x155f	            0x7412	                            je 0x40015b3	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x1561	    0x488b05000000	            mov rax, qword [0x040015a8] 	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x1568	        0x488b55f8	                mov rdx, qword [rbp - 8]	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x156c	          0x4889d7	                            mov rdi, rdx	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x156f	            0xffd0	                                call rax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x1571	            0xeb05	                           jmp 0x40015b8	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x1573	      0xb801000000	                              mov eax, 1	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x1578	            0x4898	                                    cdqe	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x157a	        0x480145f8	                add qword [rbp - 8], rax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x157e	        0x488b45f8	                mov rax, qword [rbp - 8]	       872	charset.c	FUNCTION_20	FOR_1
0x1582	           0xfb600	                   movzx eax, byte [rax]	       872	charset.c	FUNCTION_20	FOR_1
0x1585	            0x84c0	                             test al, al	       872	charset.c	FUNCTION_20	FOR_1
0x1587	            0x741c	                            je 0x40015e5	       872	charset.c	FUNCTION_20	FOR_1
0x1589	    0x817ddcffffff	     cmp dword [rbp - 0x24], 0x7fffffff 	       872	charset.c	FUNCTION_20	FOR_1
0x1590	            0x74a5	                            je 0x4001577	       872	charset.c	FUNCTION_20	FOR_1
0x1592	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       872	charset.c	FUNCTION_20	FOR_1
0x1595	          0x4863d0	                         movsxd rdx, eax	       872	charset.c	FUNCTION_20	FOR_1
0x1598	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       872	charset.c	FUNCTION_20	FOR_1
0x159c	          0x4801d0	                            add rax, rdx	       872	charset.c	FUNCTION_20	FOR_1
0x159f	        0x483b45f8	                cmp rax, qword [rbp - 8]	       872	charset.c	FUNCTION_20	FOR_1
0x15a3	            0x7792	                            ja 0x4001577	       872	charset.c	FUNCTION_20	FOR_1
0x15a5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       875	charset.c	FUNCTION_20
0x15a8	              0xc9	                                   leave	       876	charset.c	FUNCTION_20
0x15a9	              0xc3	                                     ret	       876	charset.c	FUNCTION_20
vim_isupper	IF,6:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,3:FOR,0	51
0x2c61	              0x55	                                push rbp	      1709	charset.c	FUNCTION_52
0x2c62	          0x4889e5	                            mov rbp, rsp	      1709	charset.c	FUNCTION_52
0x2c65	        0x4883ec10	                           sub rsp, 0x10	      1709	charset.c	FUNCTION_52
0x2c69	          0x897dfc	                mov dword [rbp - 4], edi	      1709	charset.c	FUNCTION_52
0x2c6c	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1710	charset.c	FUNCTION_52	IF_1
0x2c70	            0x7f0a	                            jg 0x4002cbc	      1710	charset.c	FUNCTION_52	IF_1
0x2c72	      0xb800000000	                              mov eax, 0	      1711	charset.c	FUNCTION_52	IF_1
0x2c77	      0xe988000000	                           jmp 0x4002d44	      1711	charset.c	FUNCTION_52	IF_1
0x2c7c	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1712	charset.c	FUNCTION_52	IF_2
0x2c80	            0x7e63	                           jle 0x4002d25	      1712	charset.c	FUNCTION_52	IF_2
0x2c82	    0x8b0500000000	            mov eax, dword [0x04002cc8] 	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x2c88	            0x85c0	                           test eax, eax	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x2c8a	            0x740c	                            je 0x4002cd8	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x2c8c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x2c8f	            0x89c7	                            mov edi, eax	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x2c91	      0xe800000000	                          call 0x4002cd6	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x2c96	            0xeb6c	                           jmp 0x4002d44	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x2c98	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1716	charset.c	FUNCTION_52	IF_2	IF_4
0x2c9f	            0x7e1d	                           jle 0x4002cfe	      1716	charset.c	FUNCTION_52	IF_2	IF_4
0x2ca1	    0x8b0500000000	            mov eax, dword [0x04002ce7] 	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x2ca7	            0x85c0	                           test eax, eax	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x2ca9	            0x740c	                            je 0x4002cf7	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x2cab	          0x8b45fc	                mov eax, dword [rbp - 4]	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x2cae	            0x89c7	                            mov edi, eax	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x2cb0	      0xe800000000	                          call 0x4002cf5	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x2cb5	            0xeb4d	                           jmp 0x4002d44	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x2cb7	      0xb800000000	                              mov eax, 0	      1723	charset.c	FUNCTION_52	IF_2	IF_4
0x2cbc	            0xeb46	                           jmp 0x4002d44	      1723	charset.c	FUNCTION_52	IF_2	IF_4
0x2cbe	    0x8b0500000000	            mov eax, dword [0x04002d04] 	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x2cc4	            0x85c0	                           test eax, eax	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x2cc6	            0x741d	                            je 0x4002d25	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x2cc8	          0x8b45fc	                mov eax, dword [rbp - 4]	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2ccb	            0x4898	                                    cdqe	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2ccd	     0xfb680000000	                   movzx eax, byte [rax]	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2cd4	           0xfb6c0	                           movzx eax, al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2cd7	          0x83e055	                           and eax, 0x55	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2cda	          0x83f855	                           cmp eax, 0x55	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2cdd	           0xf94c0	                                 sete al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2ce0	           0xfb6c0	                           movzx eax, al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2ce3	            0xeb1f	                           jmp 0x4002d44	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x2ce5	      0xe800000000	                          call 0x4002d2a	      1728	charset.c	FUNCTION_52	CALL_3
0x2cea	          0x488b00	                    mov rax, qword [rax]	      1728	charset.c	FUNCTION_52	CALL_3
0x2ced	          0x8b55fc	                mov edx, dword [rbp - 4]	      1728	charset.c	FUNCTION_52	CALL_3
0x2cf0	          0x4863d2	                         movsxd rdx, edx	      1728	charset.c	FUNCTION_52	CALL_3
0x2cf3	          0x4801d2	                            add rdx, rdx	      1728	charset.c	FUNCTION_52	CALL_3
0x2cf6	          0x4801d0	                            add rax, rdx	      1728	charset.c	FUNCTION_52	CALL_3
0x2cf9	           0xfb700	                   movzx eax, word [rax]	      1728	charset.c	FUNCTION_52	CALL_3
0x2cfc	           0xfb7c0	                           movzx eax, ax	      1728	charset.c	FUNCTION_52	CALL_3
0x2cff	      0x2500010000	                          and eax, 0x100	      1728	charset.c	FUNCTION_52	CALL_3
0x2d04	              0xc9	                                   leave	      1729	charset.c	FUNCTION_52
0x2d05	              0xc3	                                     ret	      1729	charset.c	FUNCTION_52
skiptobin	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	22
0x2a9e	              0x55	                                push rbp	      1600	charset.c	FUNCTION_45
0x2a9f	          0x4889e5	                            mov rbp, rsp	      1600	charset.c	FUNCTION_45
0x2aa2	        0x4883ec20	                           sub rsp, 0x20	      1600	charset.c	FUNCTION_45
0x2aa6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1600	charset.c	FUNCTION_45
0x2aaa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1601	charset.c	FUNCTION_45
0x2aae	        0x488945f8	                mov qword [rbp - 8], rax	      1601	charset.c	FUNCTION_45
0x2ab2	            0xeb05	                           jmp 0x4002af9	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ab4	      0x488345f801	                  add qword [rbp - 8], 1	      1604	charset.c	FUNCTION_45	WHILE_1
0x2ab9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2abd	           0xfb600	                   movzx eax, byte [rax]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ac0	            0x84c0	                             test al, al	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ac2	            0x7415	                            je 0x4002b19	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ac4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ac8	           0xfb600	                   movzx eax, byte [rax]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2acb	           0xfb6c0	                           movzx eax, al	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ace	            0x89c7	                            mov edi, eax	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ad0	      0xe800000000	                          call 0x4002b15	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ad5	            0x85c0	                           test eax, eax	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ad7	            0x74db	                            je 0x4002af4	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x2ad9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1605	charset.c	FUNCTION_45
0x2add	              0xc9	                                   leave	      1606	charset.c	FUNCTION_45
0x2ade	              0xc3	                                     ret	      1606	charset.c	FUNCTION_45
vim_strsize	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	10
0x1339	              0x55	                                push rbp	       777	charset.c	FUNCTION_14
0x133a	          0x4889e5	                            mov rbp, rsp	       777	charset.c	FUNCTION_14
0x133d	        0x4883ec10	                           sub rsp, 0x10	       777	charset.c	FUNCTION_14
0x1341	        0x48897df8	                mov qword [rbp - 8], rdi	       777	charset.c	FUNCTION_14
0x1345	        0x488b45f8	                mov rax, qword [rbp - 8]	       778	charset.c	FUNCTION_14	CALL_1
0x1349	      0xbeffffff7f	                     mov esi, 0x7fffffff	       778	charset.c	FUNCTION_14	CALL_1
0x134e	          0x4889c7	                            mov rdi, rax	       778	charset.c	FUNCTION_14	CALL_1
0x1351	      0xe800000000	                          call 0x4001396	       778	charset.c	FUNCTION_14	CALL_1
0x1356	              0xc9	                                   leave	       779	charset.c	FUNCTION_14
0x1357	              0xc3	                                     ret	       779	charset.c	FUNCTION_14
str_foldcase	IF,14:DO,0:SWITCH,0:ELSE,5:WHILE,1:functions,0:CALL,26:FOR,0	330
0xaa8	              0x55	                                push rbp	       441	charset.c	FUNCTION_5
0xaa9	          0x4889e5	                            mov rbp, rsp	       441	charset.c	FUNCTION_5
0xaac	              0x53	                                push rbx	       441	charset.c	FUNCTION_5
0xaad	        0x4883ec68	                           sub rsp, 0x68	       441	charset.c	FUNCTION_5
0xab1	        0x48897da8	             mov qword [rbp - 0x58], rdi	       441	charset.c	FUNCTION_5
0xab5	          0x8975a4	             mov dword [rbp - 0x5c], esi	       441	charset.c	FUNCTION_5
0xab8	        0x48895598	             mov qword [rbp - 0x68], rdx	       441	charset.c	FUNCTION_5
0xabc	          0x894da0	             mov dword [rbp - 0x60], ecx	       441	charset.c	FUNCTION_5
0xabf	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	charset.c	FUNCTION_5
0xac8	        0x488945e8	             mov qword [rbp - 0x18], rax	       441	charset.c	FUNCTION_5
0xacc	            0x31c0	                            xor eax, eax	       441	charset.c	FUNCTION_5
0xace	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       444	charset.c	FUNCTION_5
0xad1	          0x8945bc	             mov dword [rbp - 0x44], eax	       444	charset.c	FUNCTION_5
0xad4	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       452	charset.c	FUNCTION_5	IF_1
0xad9	            0x7559	                           jne 0x4000b74	       452	charset.c	FUNCTION_5	IF_1
0xadb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0xadf	      0xba0a000000	                            mov edx, 0xa	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0xae4	      0xbe01000000	                              mov esi, 1	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0xae9	          0x4889c7	                            mov rdi, rax	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0xaec	      0xe800000000	                          call 0x4000b31	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0xaf1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xaf4	          0x8d5001	                      lea edx, [rax + 1]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xaf7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xafb	            0x89d6	                            mov esi, edx	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xafd	          0x4889c7	                            mov rdi, rax	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xb00	      0xe800000000	                          call 0x4000b45	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xb05	            0x85c0	                           test eax, eax	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xb07	            0x750a	                           jne 0x4000b53	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0xb09	      0xb800000000	                              mov eax, 0	       456	charset.c	FUNCTION_5	IF_1	IF_2
0xb0e	      0xe9b5030000	                           jmp 0x4000f08	       456	charset.c	FUNCTION_5	IF_1	IF_2
0xb13	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0xb16	          0x4863d0	                         movsxd rdx, eax	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0xb19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0xb1d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0xb21	          0x4889ce	                            mov rsi, rcx	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0xb24	          0x4889c7	                            mov rdi, rax	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0xb27	      0xe800000000	                          call 0x4000b6c	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0xb2c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       458	charset.c	FUNCTION_5	IF_1
0xb2f	          0x8945d0	             mov dword [rbp - 0x30], eax	       458	charset.c	FUNCTION_5	IF_1
0xb32	            0xeb2a	                           jmp 0x4000b9e	       458	charset.c	FUNCTION_5	IF_1
0xb34	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       462	charset.c	FUNCTION_5	ELSE_1	IF_3
0xb37	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       462	charset.c	FUNCTION_5	ELSE_1	IF_3
0xb3a	            0x7c09	                            jl 0x4000b85	       462	charset.c	FUNCTION_5	ELSE_1	IF_3
0xb3c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0xb3f	          0x83e801	                              sub eax, 1	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0xb42	          0x8945bc	             mov dword [rbp - 0x44], eax	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0xb45	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0xb48	          0x4863d0	                         movsxd rdx, eax	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0xb4b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0xb4f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0xb53	          0x4889ce	                            mov rsi, rcx	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0xb56	          0x4889c7	                            mov rdi, rax	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0xb59	      0xe800000000	                          call 0x4000b9e	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0xb5e	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       466	charset.c	FUNCTION_5	IF_4
0xb63	            0x7511	                           jne 0x4000bb6	       466	charset.c	FUNCTION_5	IF_4
0xb65	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       467	charset.c	FUNCTION_5	CALL_5
0xb69	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       467	charset.c	FUNCTION_5	CALL_5
0xb6c	            0x4898	                                    cdqe	       467	charset.c	FUNCTION_5	CALL_5
0xb6e	          0x4801d0	                            add rax, rdx	       467	charset.c	FUNCTION_5	CALL_5
0xb71	          0xc60000	                       mov byte [rax], 0	       467	charset.c	FUNCTION_5	CALL_5
0xb74	            0xeb10	                           jmp 0x4000bc6	       467	charset.c	FUNCTION_5	CALL_5
0xb76	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       469	charset.c	FUNCTION_5	ELSE_2
0xb79	          0x4863d0	                         movsxd rdx, eax	       469	charset.c	FUNCTION_5	ELSE_2
0xb7c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       469	charset.c	FUNCTION_5	ELSE_2
0xb80	          0x4801d0	                            add rax, rdx	       469	charset.c	FUNCTION_5	ELSE_2
0xb83	          0xc60000	                       mov byte [rax], 0	       469	charset.c	FUNCTION_5	ELSE_2
0xb86	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       472	charset.c	FUNCTION_5	ELSE_2
0xb8d	      0xe9eb020000	                           jmp 0x4000ebd	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xb92	    0x8b0500000000	            mov eax, dword [0x04000bd8] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xb98	            0x85c0	                           test eax, eax	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xb9a	            0x754d	                           jne 0x4000c29	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xb9c	    0x8b0500000000	            mov eax, dword [0x04000be2] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xba2	            0x85c0	                           test eax, eax	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xba4	     0xf8474020000	                            je 0x4000e5e	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbaa	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbaf	            0x7514	                           jne 0x4000c05	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbb1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbb5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbb8	            0x4898	                                    cdqe	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbba	          0x4801d0	                            add rax, rdx	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbbd	           0xfb600	                   movzx eax, byte [rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbc0	           0xfb6c0	                           movzx eax, al	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbc3	            0xeb13	                           jmp 0x4000c18	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbc5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbc8	          0x4863d0	                         movsxd rdx, eax	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbcb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbcf	          0x4801d0	                            add rax, rdx	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbd2	           0xfb600	                   movzx eax, byte [rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbd5	           0xfb6c0	                           movzx eax, al	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbd8	            0x4898	                                    cdqe	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbda	     0xfb680000000	                   movzx eax, byte [rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbe1	            0x3c01	                               cmp al, 1	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbe3	     0xf8e35020000	                           jle 0x4000e5e	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_8
0xbe9	    0x8b0500000000	            mov eax, dword [0x04000c2f] 	       478	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6
0xbef	            0x85c0	                           test eax, eax	       478	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6
0xbf1	     0xf84f4010000	                            je 0x4000e2b	       478	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6
0xbf7	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xbfc	            0x750e	                           jne 0x4000c4c	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xbfe	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc02	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc05	            0x4898	                                    cdqe	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc07	          0x4801d0	                            add rax, rdx	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc0a	            0xeb0d	                           jmp 0x4000c59	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc0c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc0f	          0x4863d0	                         movsxd rdx, eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc12	        0x488b4598	             mov rax, qword [rbp - 0x68]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc16	          0x4801d0	                            add rax, rdx	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc19	          0x4889c7	                            mov rdi, rax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc1c	      0xe800000000	                          call 0x4000c61	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc21	          0x8945c8	             mov dword [rbp - 0x38], eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_10
0xc24	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc29	            0x750e	                           jne 0x4000c79	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc2b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc2f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc32	            0x4898	                                    cdqe	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc34	          0x4801d0	                            add rax, rdx	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc37	            0xeb0d	                           jmp 0x4000c86	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc39	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc3c	          0x4863d0	                         movsxd rdx, eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc3f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc43	          0x4801d0	                            add rax, rdx	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc46	          0x4889c7	                            mov rdi, rax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc49	      0xe800000000	                          call 0x4000c8e	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc4e	          0x8945cc	             mov dword [rbp - 0x34], eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_12
0xc51	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_13
0xc54	            0x89c7	                            mov edi, eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_13
0xc56	      0xe800000000	                          call 0x4000c9b	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_13
0xc5b	          0x8945c0	             mov dword [rbp - 0x40], eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_13
0xc5e	        0x837dc87f	           cmp dword [rbp - 0x38], 0x7f 	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0xc62	            0x7e0a	                           jle 0x4000cae	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0xc64	        0x837dcc01	               cmp dword [rbp - 0x34], 1	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0xc68	     0xf8e7d010000	                           jle 0x4000e2b	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0xc6e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0xc71	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0xc74	     0xf8471010000	                            je 0x4000e2b	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0xc7a	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_14
0xc7d	            0x89c7	                            mov edi, eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_14
0xc7f	      0xe800000000	                          call 0x4000cc4	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_14
0xc84	          0x8945c4	             mov dword [rbp - 0x3c], eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_14
0xc87	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0xc8a	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0xc8d	     0xf8429010000	                            je 0x4000dfc	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0xc93	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0xc96	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0xc99	            0x7e46	                           jle 0x4000d21	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0xc9b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xca0	            0x751e	                           jne 0x4000d00	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xca2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0xca5	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0xca8	          0x8d5001	                      lea edx, [rax + 1]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0xcab	        0x488d45d0	                   lea rax, [rbp - 0x30]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0xcaf	            0x89d6	                            mov esi, edx	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0xcb1	          0x4889c7	                            mov rdi, rax	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0xcb4	      0xe800000000	                          call 0x4000cf9	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0xcb9	            0x85c0	                           test eax, eax	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcbb	           0xf94c0	                                 sete al	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcbe	            0xeb11	                           jmp 0x4000d11	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcc0	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcc3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcc6	             0x1d0	                            add eax, edx	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcc8	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xccb	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcce	           0xf9dc0	                                setge al	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcd1	            0x84c0	                             test al, al	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcd3	            0x740c	                            je 0x4000d21	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcd5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       502	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcd8	          0x8945c0	             mov dword [rbp - 0x40], eax	       502	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcdb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       503	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xcde	          0x8945c4	             mov dword [rbp - 0x3c], eax	       503	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0xce1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       506	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11
0xce4	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       506	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11
0xce7	     0xf84cf000000	                            je 0x4000dfc	       506	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11
0xced	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xcf2	            0x7569	                           jne 0x4000d9d	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xcf4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xcf8	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xcfb	          0x4863ca	                         movsxd rcx, edx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xcfe	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd01	          0x4863d2	                         movsxd rdx, edx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd04	          0x4801ca	                            add rdx, rcx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd07	          0x4801d0	                            add rax, rdx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd0a	          0x4889c7	                            mov rdi, rax	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd0d	      0xe800000000	                          call 0x4000d52	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd12	        0x488d5001	                      lea rdx, [rax + 1]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd1a	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd1d	          0x4863f1	                         movsxd rsi, ecx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd20	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd23	          0x4863c9	                         movsxd rcx, ecx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd26	          0x4801f1	                            add rcx, rsi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd29	          0x4801c1	                            add rcx, rax	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd30	          0x8b75b8	             mov esi, dword [rbp - 0x48]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd33	          0x4863fe	                         movsxd rdi, esi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd36	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd39	          0x4863f6	                         movsxd rsi, esi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd3c	          0x4801fe	                            add rsi, rdi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd3f	          0x4801f0	                            add rax, rsi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd42	          0x4889ce	                            mov rsi, rcx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd45	          0x4889c7	                            mov rdi, rax	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd48	      0xe800000000	                          call 0x4000d8d	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_18
0xd4d	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xd50	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xd53	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xd56	             0x1d0	                            add eax, edx	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xd58	          0x8945d0	             mov dword [rbp - 0x30], eax	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xd5b	            0xeb5f	                           jmp 0x4000dfc	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0xd5d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd60	          0x4863d0	                         movsxd rdx, eax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd63	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd66	            0x4898	                                    cdqe	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd68	          0x4801c2	                            add rdx, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd6b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd6f	          0x4801d0	                            add rax, rdx	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd72	          0x4889c7	                            mov rdi, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd75	      0xe800000000	                          call 0x4000dba	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd7a	        0x488d5001	                      lea rdx, [rax + 1]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd7e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd81	          0x4863c8	                         movsxd rcx, eax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd84	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd87	            0x4898	                                    cdqe	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd89	          0x4801c1	                            add rcx, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd8c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd90	          0x4801c1	                            add rcx, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd93	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd96	          0x4863f0	                         movsxd rsi, eax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd99	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd9c	            0x4898	                                    cdqe	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xd9e	          0x4801c6	                            add rsi, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xda1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xda5	          0x4801f0	                            add rax, rsi	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xda8	          0x4889ce	                            mov rsi, rcx	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xdab	          0x4889c7	                            mov rdi, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xdae	      0xe800000000	                          call 0x4000df3	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_19
0xdb3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0xdb6	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0xdb9	           0x145bc	             add dword [rbp - 0x44], eax	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0xdbc	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdc1	            0x750e	                           jne 0x4000e11	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdc3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdc7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdca	            0x4898	                                    cdqe	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdcc	          0x4801d0	                            add rax, rdx	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdcf	            0xeb0d	                           jmp 0x4000e1e	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdd1	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdd4	          0x4863d0	                         movsxd rdx, eax	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdd7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xddb	          0x4801d0	                            add rax, rdx	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdde	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xde1	          0x4889c6	                            mov rsi, rax	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xde4	            0x89d7	                            mov edi, edx	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xde6	      0xe800000000	                          call 0x4000e2b	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_21
0xdeb	    0x488b15000000	            mov rdx, qword [0x04000e32] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xdf2	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xdf7	            0x750e	                           jne 0x4000e47	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xdf9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xdfd	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe00	            0x4898	                                    cdqe	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe02	          0x4801c8	                            add rax, rcx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe05	            0xeb0d	                           jmp 0x4000e54	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe07	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe0a	          0x4863c8	                         movsxd rcx, eax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe0d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe11	          0x4801c8	                            add rax, rcx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe14	          0x4889c7	                            mov rdi, rax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe17	            0xffd2	                                call rdx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe19	           0x145b8	             add dword [rbp - 0x48], eax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe1c	            0xeb5f	                           jmp 0x4000ebd	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_22
0xe1e	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0xe23	            0x752a	                           jne 0x4000e8f	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0xe25	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe29	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe2c	            0x4898	                                    cdqe	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe2e	        0x488d1c02	                    lea rbx, [rdx + rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe32	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe36	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe39	            0x4898	                                    cdqe	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe3b	          0x4801d0	                            add rax, rdx	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe3e	           0xfb600	                   movzx eax, byte [rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe41	           0xfb6c0	                           movzx eax, al	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe44	            0x89c7	                            mov edi, eax	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe46	      0xe800000000	                          call 0x4000e8b	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe4b	            0x8803	                      mov byte [rbx], al	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe4d	            0xeb2a	                           jmp 0x4000eb9	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_25
0xe4f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe52	          0x4863d0	                         movsxd rdx, eax	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe55	        0x488b4598	             mov rax, qword [rbp - 0x68]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe59	        0x488d1c02	                    lea rbx, [rdx + rax]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe5d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe60	          0x4863d0	                         movsxd rdx, eax	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe63	        0x488b4598	             mov rax, qword [rbp - 0x68]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe67	          0x4801d0	                            add rax, rdx	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe6a	           0xfb600	                   movzx eax, byte [rax]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe6d	           0xfb6c0	                           movzx eax, al	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe70	            0x89c7	                            mov edi, eax	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe72	      0xe800000000	                          call 0x4000eb7	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe77	            0x8803	                      mov byte [rbx], al	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_26
0xe79	        0x8345b801	               add dword [rbp - 0x48], 1	       533	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4
0xe7d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe82	            0x7516	                           jne 0x4000eda	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe84	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe88	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe8b	            0x4898	                                    cdqe	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe8d	          0x4801d0	                            add rax, rdx	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe90	           0xfb600	                   movzx eax, byte [rax]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe93	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe95	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe98	            0xeb15	                           jmp 0x4000eef	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe9a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xe9d	          0x4863d0	                         movsxd rdx, eax	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xea0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xea4	          0x4801d0	                            add rax, rdx	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xea7	           0xfb600	                   movzx eax, byte [rax]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xeaa	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xeac	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xeaf	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xeb1	     0xf85dbfcffff	                           jne 0x4000bd2	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0xeb7	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       537	charset.c	FUNCTION_5	IF_14
0xebc	            0x7506	                           jne 0x4000f04	       537	charset.c	FUNCTION_5	IF_14
0xebe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       538	charset.c	FUNCTION_5	IF_14
0xec2	            0xeb04	                           jmp 0x4000f08	       538	charset.c	FUNCTION_5	IF_14
0xec4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       539	charset.c	FUNCTION_5
0xec8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       540	charset.c	FUNCTION_5
0xecc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       540	charset.c	FUNCTION_5
0xed5	            0x7405	                            je 0x4000f1c	       540	charset.c	FUNCTION_5
0xed7	      0xe800000000	                          call 0x4000f1c	       540	charset.c	FUNCTION_5
0xedc	        0x4883c468	                           add rsp, 0x68	       540	charset.c	FUNCTION_5
0xee0	              0x5b	                                 pop rbx	       540	charset.c	FUNCTION_5
0xee1	              0x5d	                                 pop rbp	       540	charset.c	FUNCTION_5
0xee2	              0xc3	                                     ret	       540	charset.c	FUNCTION_5
init_chartab	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	8
0x0	              0x55	                                push rbp	        72	charset.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        72	charset.c	FUNCTION_1
0x4	    0x488b05000000	            mov rax, qword [0x0400004b] 	        73	charset.c	FUNCTION_1	CALL_1
0xb	      0xbe01000000	                              mov esi, 1	        73	charset.c	FUNCTION_1	CALL_1
0x10	          0x4889c7	                            mov rdi, rax	        73	charset.c	FUNCTION_1	CALL_1
0x13	      0xe800000000	                          call 0x4000058	        73	charset.c	FUNCTION_1	CALL_1
0x18	              0x5d	                                 pop rbp	        74	charset.c	FUNCTION_1
0x19	              0xc3	                                     ret	        74	charset.c	FUNCTION_1
in_win_border	IF,4:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	56
0x20ee	              0x55	                                push rbp	      1245	charset.c	FUNCTION_34
0x20ef	          0x4889e5	                            mov rbp, rsp	      1245	charset.c	FUNCTION_34
0x20f2	              0x53	                                push rbx	      1245	charset.c	FUNCTION_34
0x20f3	        0x4883ec28	                           sub rsp, 0x28	      1245	charset.c	FUNCTION_34
0x20f7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1245	charset.c	FUNCTION_34
0x20fb	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1245	charset.c	FUNCTION_34
0x20fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1249	charset.c	FUNCTION_34	IF_1
0x2102	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1249	charset.c	FUNCTION_34	IF_1
0x2108	            0x85c0	                           test eax, eax	      1249	charset.c	FUNCTION_34	IF_1
0x210a	            0x7507	                           jne 0x4002153	      1249	charset.c	FUNCTION_34	IF_1
0x210c	      0xb800000000	                              mov eax, 0	      1250	charset.c	FUNCTION_34	IF_1
0x2111	            0xeb7c	                           jmp 0x40021cf	      1250	charset.c	FUNCTION_34	IF_1
0x2113	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1251	charset.c	FUNCTION_34	CALL_1
0x2117	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      1251	charset.c	FUNCTION_34	CALL_1
0x211d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1251	charset.c	FUNCTION_34	CALL_1
0x2121	          0x4889c7	                            mov rdi, rax	      1251	charset.c	FUNCTION_34	CALL_1
0x2124	      0xe800000000	                          call 0x4002169	      1251	charset.c	FUNCTION_34	CALL_1
0x2129	            0x29c3	                            sub ebx, eax	      1251	charset.c	FUNCTION_34	CALL_1
0x212b	            0x89d8	                            mov eax, ebx	      1251	charset.c	FUNCTION_34	CALL_1
0x212d	          0x8945e8	             mov dword [rbp - 0x18], eax	      1251	charset.c	FUNCTION_34	CALL_1
0x2130	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1252	charset.c	FUNCTION_34	IF_2
0x2133	          0x83e801	                              sub eax, 1	      1252	charset.c	FUNCTION_34	IF_2
0x2136	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1252	charset.c	FUNCTION_34	IF_2
0x2139	            0x7e07	                           jle 0x4002182	      1252	charset.c	FUNCTION_34	IF_2
0x213b	      0xb800000000	                              mov eax, 0	      1253	charset.c	FUNCTION_34	IF_2
0x2140	            0xeb4d	                           jmp 0x40021cf	      1253	charset.c	FUNCTION_34	IF_2
0x2142	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1254	charset.c	FUNCTION_34	IF_3
0x2145	          0x83e801	                              sub eax, 1	      1254	charset.c	FUNCTION_34	IF_3
0x2148	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1254	charset.c	FUNCTION_34	IF_3
0x214b	            0x7507	                           jne 0x4002194	      1254	charset.c	FUNCTION_34	IF_3
0x214d	      0xb801000000	                              mov eax, 1	      1255	charset.c	FUNCTION_34	IF_3
0x2152	            0xeb3b	                           jmp 0x40021cf	      1255	charset.c	FUNCTION_34	IF_3
0x2154	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1256	charset.c	FUNCTION_34	CALL_2
0x2158	          0x4889c7	                            mov rdi, rax	      1256	charset.c	FUNCTION_34	CALL_2
0x215b	      0xe800000000	                          call 0x40021a0	      1256	charset.c	FUNCTION_34	CALL_2
0x2160	            0x89c2	                            mov edx, eax	      1256	charset.c	FUNCTION_34	CALL_2
0x2162	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1256	charset.c	FUNCTION_34	CALL_2
0x2165	             0x1d0	                            add eax, edx	      1256	charset.c	FUNCTION_34	CALL_2
0x2167	          0x8945ec	             mov dword [rbp - 0x14], eax	      1256	charset.c	FUNCTION_34	CALL_2
0x216a	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1257	charset.c	FUNCTION_34	IF_4
0x216e	            0x7f07	                            jg 0x40021b7	      1257	charset.c	FUNCTION_34	IF_4
0x2170	      0xb800000000	                              mov eax, 0	      1258	charset.c	FUNCTION_34	IF_4
0x2175	            0xeb18	                           jmp 0x40021cf	      1258	charset.c	FUNCTION_34	IF_4
0x2177	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1259	charset.c	FUNCTION_34
0x217a	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1259	charset.c	FUNCTION_34
0x217d	              0x99	                                     cdq	      1259	charset.c	FUNCTION_34
0x217e	          0xf77dec	                 idiv dword [rbp - 0x14]	      1259	charset.c	FUNCTION_34
0x2181	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1259	charset.c	FUNCTION_34
0x2184	          0x83e801	                              sub eax, 1	      1259	charset.c	FUNCTION_34
0x2187	            0x39c2	                            cmp edx, eax	      1259	charset.c	FUNCTION_34
0x2189	           0xf94c0	                                 sete al	      1259	charset.c	FUNCTION_34
0x218c	           0xfb6c0	                           movzx eax, al	      1259	charset.c	FUNCTION_34
0x218f	        0x4883c428	                           add rsp, 0x28	      1260	charset.c	FUNCTION_34
0x2193	              0x5b	                                 pop rbx	      1260	charset.c	FUNCTION_34
0x2194	              0x5d	                                 pop rbp	      1260	charset.c	FUNCTION_34
0x2195	              0xc3	                                     ret	      1260	charset.c	FUNCTION_34
linetabsize_col	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	24
0x14cb	              0x55	                                push rbp	       854	charset.c	FUNCTION_19
0x14cc	          0x4889e5	                            mov rbp, rsp	       854	charset.c	FUNCTION_19
0x14cf	        0x4883ec20	                           sub rsp, 0x20	       854	charset.c	FUNCTION_19
0x14d3	          0x897dec	             mov dword [rbp - 0x14], edi	       854	charset.c	FUNCTION_19
0x14d6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       854	charset.c	FUNCTION_19
0x14da	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       855	charset.c	FUNCTION_19
0x14dd	          0x8945f4	              mov dword [rbp - 0xc], eax	       855	charset.c	FUNCTION_19
0x14e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       856	charset.c	FUNCTION_19
0x14e4	        0x488945f8	                mov qword [rbp - 8], rax	       856	charset.c	FUNCTION_19
0x14e8	            0xeb19	                           jmp 0x4001543	       858	charset.c	FUNCTION_19	WHILE_1
0x14ea	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       859	charset.c	FUNCTION_19	CALL_1
0x14ed	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       859	charset.c	FUNCTION_19	CALL_1
0x14f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       859	charset.c	FUNCTION_19	CALL_1
0x14f5	          0x4889ce	                            mov rsi, rcx	       859	charset.c	FUNCTION_19	CALL_1
0x14f8	          0x4889c7	                            mov rdi, rax	       859	charset.c	FUNCTION_19	CALL_1
0x14fb	      0xe800000000	                          call 0x4001540	       859	charset.c	FUNCTION_19	CALL_1
0x1500	           0x145f4	              add dword [rbp - 0xc], eax	       859	charset.c	FUNCTION_19	CALL_1
0x1503	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       858	charset.c	FUNCTION_19	WHILE_1
0x1507	           0xfb600	                   movzx eax, byte [rax]	       858	charset.c	FUNCTION_19	WHILE_1
0x150a	            0x84c0	                             test al, al	       858	charset.c	FUNCTION_19	WHILE_1
0x150c	            0x75dc	                           jne 0x400152a	       858	charset.c	FUNCTION_19	WHILE_1
0x150e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       860	charset.c	FUNCTION_19
0x1511	              0xc9	                                   leave	       861	charset.c	FUNCTION_19
0x1512	              0xc3	                                     ret	       861	charset.c	FUNCTION_19
trans_characters	IF,3:DO,0:SWITCH,0:ELSE,1:WHILE,1:functions,0:CALL,5:FOR,0	73
0x7a1	              0x55	                                push rbp	       319	charset.c	FUNCTION_3
0x7a2	          0x4889e5	                            mov rbp, rsp	       319	charset.c	FUNCTION_3
0x7a5	        0x4883ec30	                           sub rsp, 0x30	       319	charset.c	FUNCTION_3
0x7a9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       319	charset.c	FUNCTION_3
0x7ad	          0x8975d4	             mov dword [rbp - 0x2c], esi	       319	charset.c	FUNCTION_3
0x7b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	charset.c	FUNCTION_3	CALL_1
0x7b4	          0x4889c7	                            mov rdi, rax	       325	charset.c	FUNCTION_3	CALL_1
0x7b7	      0xe800000000	                          call 0x40007fc	       325	charset.c	FUNCTION_3	CALL_1
0x7bc	          0x8945ec	             mov dword [rbp - 0x14], eax	       325	charset.c	FUNCTION_3	CALL_1
0x7bf	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       326	charset.c	FUNCTION_3
0x7c2	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       326	charset.c	FUNCTION_3
0x7c5	          0x8945f0	             mov dword [rbp - 0x10], eax	       326	charset.c	FUNCTION_3
0x7c8	      0xe9af000000	                           jmp 0x40008bc	       327	charset.c	FUNCTION_3	WHILE_1
0x7cd	    0x8b0500000000	            mov eax, dword [0x04000813] 	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7d3	            0x85c0	                           test eax, eax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7d5	            0x7421	                            je 0x4000838	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7d7	    0x488b05000000	            mov rax, qword [0x0400081e] 	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7de	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7e2	          0x4889d7	                            mov rdi, rdx	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7e5	            0xffd0	                                call rax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7e7	          0x8945f4	              mov dword [rbp - 0xc], eax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7ea	        0x837df401	                cmp dword [rbp - 0xc], 1	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7ee	            0x7e08	                           jle 0x4000838	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7f0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7f3	          0x2945ec	             sub dword [rbp - 0x14], eax	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7f6	            0xeb7b	                           jmp 0x40008b3	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x7f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x7fc	           0xfb600	                   movzx eax, byte [rax]	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x7ff	           0xfb6c0	                           movzx eax, al	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x802	            0x89c7	                            mov edi, eax	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x804	      0xe800000000	                          call 0x4000849	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x809	        0x488945f8	                mov qword [rbp - 8], rax	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x80d	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x811	          0x4889c7	                            mov rdi, rax	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x814	      0xe800000000	                          call 0x4000859	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x819	          0x8945f4	              mov dword [rbp - 0xc], eax	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x81c	        0x837df401	                cmp dword [rbp - 0xc], 1	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x820	            0x7e34	                           jle 0x4000896	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x822	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x825	          0x83e801	                              sub eax, 1	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x828	          0x2945f0	             sub dword [rbp - 0x10], eax	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x82b	        0x837df000	               cmp dword [rbp - 0x10], 0	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x82f	            0x7e5c	                           jle 0x40008cd	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x831	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x834	            0x4898	                                    cdqe	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x836	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x83a	        0x488d7201	                      lea rsi, [rdx + 1]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x83e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x841	          0x4863ca	                         movsxd rcx, edx	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x844	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x848	          0x4801d1	                            add rcx, rdx	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x84b	          0x4889c2	                            mov rdx, rax	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x84e	          0x4889cf	                            mov rdi, rcx	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x851	      0xe800000000	                          call 0x4000896	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x856	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x859	          0x4863d0	                         movsxd rdx, eax	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x85c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x864	          0x4889ce	                            mov rsi, rcx	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x867	          0x4889c7	                            mov rdi, rax	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x86a	      0xe800000000	                          call 0x40008af	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x86f	        0x836dec01	               sub dword [rbp - 0x14], 1	       346	charset.c	FUNCTION_3	WHILE_1	ELSE_1
0x873	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       348	charset.c	FUNCTION_3	WHILE_1
0x876	            0x4898	                                    cdqe	       348	charset.c	FUNCTION_3	WHILE_1
0x878	        0x480145d8	            add qword [rbp - 0x28], rax 	       348	charset.c	FUNCTION_3	WHILE_1
0x87c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       327	charset.c	FUNCTION_3	WHILE_1
0x880	           0xfb600	                   movzx eax, byte [rax]	       327	charset.c	FUNCTION_3	WHILE_1
0x883	            0x84c0	                             test al, al	       327	charset.c	FUNCTION_3	WHILE_1
0x885	     0xf8542ffffff	                           jne 0x400080d	       327	charset.c	FUNCTION_3	WHILE_1
0x88b	            0xeb01	                           jmp 0x40008ce	       327	charset.c	FUNCTION_3	WHILE_1
0x88d	              0x90	                                     nop	       342	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x88e	              0xc9	                                   leave	       350	charset.c	FUNCTION_3
0x88f	              0xc3	                                     ret	       350	charset.c	FUNCTION_3
getdigits	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	26
0x2f0e	              0x55	                                push rbp	      1816	charset.c	FUNCTION_57
0x2f0f	          0x4889e5	                            mov rbp, rsp	      1816	charset.c	FUNCTION_57
0x2f12	        0x4883ec20	                           sub rsp, 0x20	      1816	charset.c	FUNCTION_57
0x2f16	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1816	charset.c	FUNCTION_57
0x2f1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1820	charset.c	FUNCTION_57
0x2f1e	          0x488b00	                    mov rax, qword [rax]	      1820	charset.c	FUNCTION_57
0x2f21	        0x488945f0	             mov qword [rbp - 0x10], rax	      1820	charset.c	FUNCTION_57
0x2f25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1821	charset.c	FUNCTION_57	CALL_1
0x2f29	          0x4889c7	                            mov rdi, rax	      1821	charset.c	FUNCTION_57	CALL_1
0x2f2c	      0xe800000000	                          call 0x4002f71	      1821	charset.c	FUNCTION_57	CALL_1
0x2f31	        0x488945f8	                mov qword [rbp - 8], rax	      1821	charset.c	FUNCTION_57	CALL_1
0x2f35	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1822	charset.c	FUNCTION_57	IF_1
0x2f39	           0xfb600	                   movzx eax, byte [rax]	      1822	charset.c	FUNCTION_57	IF_1
0x2f3c	            0x3c2d	                            cmp al, 0x2d	      1822	charset.c	FUNCTION_57	IF_1
0x2f3e	            0x7505	                           jne 0x4002f85	      1822	charset.c	FUNCTION_57	IF_1
0x2f40	      0x488345f001	               add qword [rbp - 0x10], 1	      1823	charset.c	FUNCTION_57	IF_1
0x2f45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1824	charset.c	FUNCTION_57	CALL_2
0x2f49	          0x4889c7	                            mov rdi, rax	      1824	charset.c	FUNCTION_57	CALL_2
0x2f4c	      0xe800000000	                          call 0x4002f91	      1824	charset.c	FUNCTION_57	CALL_2
0x2f51	        0x488945f0	             mov qword [rbp - 0x10], rax	      1824	charset.c	FUNCTION_57	CALL_2
0x2f55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1825	charset.c	FUNCTION_57
0x2f59	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1825	charset.c	FUNCTION_57
0x2f5d	          0x488910	                    mov qword [rax], rdx	      1825	charset.c	FUNCTION_57
0x2f60	        0x488b45f8	                mov rax, qword [rbp - 8]	      1826	charset.c	FUNCTION_57
0x2f64	              0xc9	                                   leave	      1827	charset.c	FUNCTION_57
0x2f65	              0xc3	                                     ret	      1827	charset.c	FUNCTION_57
vim_tolower	IF,7:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,4:FOR,0	60
0x2dbf	              0x55	                                push rbp	      1759	charset.c	FUNCTION_54
0x2dc0	          0x4889e5	                            mov rbp, rsp	      1759	charset.c	FUNCTION_54
0x2dc3	        0x4883ec10	                           sub rsp, 0x10	      1759	charset.c	FUNCTION_54
0x2dc7	          0x897dfc	                mov dword [rbp - 4], edi	      1759	charset.c	FUNCTION_54
0x2dca	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1760	charset.c	FUNCTION_54	IF_1
0x2dce	            0x7f08	                            jg 0x4002e18	      1760	charset.c	FUNCTION_54	IF_1
0x2dd0	          0x8b45fc	                mov eax, dword [rbp - 4]	      1761	charset.c	FUNCTION_54	IF_1
0x2dd3	      0xe99e000000	                           jmp 0x4002eb6	      1761	charset.c	FUNCTION_54	IF_1
0x2dd8	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1762	charset.c	FUNCTION_54	IF_2
0x2ddc	            0x7f0d	                            jg 0x4002e2b	      1762	charset.c	FUNCTION_54	IF_2
0x2dde	    0x8b0500000000	            mov eax, dword [0x04002e24] 	      1762	charset.c	FUNCTION_54	IF_2
0x2de4	          0x83e002	                              and eax, 2	      1762	charset.c	FUNCTION_54	IF_2
0x2de7	            0x85c0	                           test eax, eax	      1762	charset.c	FUNCTION_54	IF_2
0x2de9	            0x7555	                           jne 0x4002e80	      1762	charset.c	FUNCTION_54	IF_2
0x2deb	    0x8b0500000000	            mov eax, dword [0x04002e31] 	      1764	charset.c	FUNCTION_54	IF_2	IF_3
0x2df1	            0x85c0	                           test eax, eax	      1764	charset.c	FUNCTION_54	IF_2	IF_3
0x2df3	            0x740c	                            je 0x4002e41	      1764	charset.c	FUNCTION_54	IF_2	IF_3
0x2df5	          0x8b45fc	                mov eax, dword [rbp - 4]	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x2df8	            0x89c7	                            mov edi, eax	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x2dfa	      0xe800000000	                          call 0x4002e3f	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x2dff	            0xeb75	                           jmp 0x4002eb6	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x2e01	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1766	charset.c	FUNCTION_54	IF_2	IF_4
0x2e08	            0x7e1b	                           jle 0x4002e65	      1766	charset.c	FUNCTION_54	IF_2	IF_4
0x2e0a	    0x8b0500000000	            mov eax, dword [0x04002e50] 	      1769	charset.c	FUNCTION_54	IF_2	IF_4	IF_5
0x2e10	            0x85c0	                           test eax, eax	      1769	charset.c	FUNCTION_54	IF_2	IF_4	IF_5
0x2e12	            0x740c	                            je 0x4002e60	      1769	charset.c	FUNCTION_54	IF_2	IF_4	IF_5
0x2e14	          0x8b45fc	                mov eax, dword [rbp - 4]	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x2e17	            0x89c7	                            mov edi, eax	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x2e19	      0xe800000000	                          call 0x4002e5e	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x2e1e	            0xeb56	                           jmp 0x4002eb6	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x2e20	          0x8b45fc	                mov eax, dword [rbp - 4]	      1773	charset.c	FUNCTION_54	IF_2	IF_4
0x2e23	            0xeb51	                           jmp 0x4002eb6	      1773	charset.c	FUNCTION_54	IF_2	IF_4
0x2e25	    0x8b0500000000	            mov eax, dword [0x04002e6b] 	      1775	charset.c	FUNCTION_54	IF_2	IF_6
0x2e2b	            0x85c0	                           test eax, eax	      1775	charset.c	FUNCTION_54	IF_2	IF_6
0x2e2d	            0x7411	                            je 0x4002e80	      1775	charset.c	FUNCTION_54	IF_2	IF_6
0x2e2f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x2e32	            0x4898	                                    cdqe	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x2e34	     0xfb680000000	                   movzx eax, byte [rax]	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x2e3b	           0xfb6c0	                           movzx eax, al	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x2e3e	            0xeb36	                           jmp 0x4002eb6	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x2e40	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1778	charset.c	FUNCTION_54	IF_7
0x2e44	            0x7f26	                            jg 0x4002eac	      1778	charset.c	FUNCTION_54	IF_7
0x2e46	    0x8b0500000000	            mov eax, dword [0x04002e8c] 	      1778	charset.c	FUNCTION_54	IF_7
0x2e4c	          0x83e002	                              and eax, 2	      1778	charset.c	FUNCTION_54	IF_7
0x2e4f	            0x85c0	                           test eax, eax	      1778	charset.c	FUNCTION_54	IF_7
0x2e51	            0x7419	                            je 0x4002eac	      1778	charset.c	FUNCTION_54	IF_7
0x2e53	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1779	charset.c	FUNCTION_54	CALL_3
0x2e57	            0x7e0e	                           jle 0x4002ea7	      1779	charset.c	FUNCTION_54	CALL_3
0x2e59	        0x837dfc5a	               cmp dword [rbp - 4], 0x5a	      1779	charset.c	FUNCTION_54	CALL_3
0x2e5d	            0x7f08	                            jg 0x4002ea7	      1779	charset.c	FUNCTION_54	CALL_3
0x2e5f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1779	charset.c	FUNCTION_54	CALL_3
0x2e62	          0x83c020	                           add eax, 0x20	      1779	charset.c	FUNCTION_54	CALL_3
0x2e65	            0xeb0f	                           jmp 0x4002eb6	      1779	charset.c	FUNCTION_54	CALL_3
0x2e67	          0x8b45fc	                mov eax, dword [rbp - 4]	      1779	charset.c	FUNCTION_54	CALL_3
0x2e6a	            0xeb0a	                           jmp 0x4002eb6	      1779	charset.c	FUNCTION_54	CALL_3
0x2e6c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1780	charset.c	FUNCTION_54	CALL_4
0x2e6f	            0x89c7	                            mov edi, eax	      1780	charset.c	FUNCTION_54	CALL_4
0x2e71	      0xe800000000	                          call 0x4002eb6	      1780	charset.c	FUNCTION_54	CALL_4
0x2e76	              0xc9	                                   leave	      1781	charset.c	FUNCTION_54
0x2e77	              0xc3	                                     ret	      1781	charset.c	FUNCTION_54
getvcol	IF,16:DO,0:SWITCH,0:ELSE,6:WHILE,0:functions,0:CALL,9:FOR,2	299
0x2196	              0x55	                                push rbp	      1278	charset.c	FUNCTION_35
0x2197	          0x4889e5	                            mov rbp, rsp	      1278	charset.c	FUNCTION_35
0x219a	        0x4883ec70	                           sub rsp, 0x70	      1278	charset.c	FUNCTION_35
0x219e	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1278	charset.c	FUNCTION_35
0x21a2	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1278	charset.c	FUNCTION_35
0x21a6	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1278	charset.c	FUNCTION_35
0x21aa	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1278	charset.c	FUNCTION_35
0x21ae	        0x4c894598	              mov qword [rbp - 0x68], r8	      1278	charset.c	FUNCTION_35
0x21b2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1278	charset.c	FUNCTION_35
0x21bb	        0x488945f8	                mov qword [rbp - 8], rax	      1278	charset.c	FUNCTION_35
0x21bf	            0x31c0	                            xor eax, eax	      1278	charset.c	FUNCTION_35
0x21c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1285	charset.c	FUNCTION_35
0x21c5	        0x488b4008	                mov rax, qword [rax + 8]	      1285	charset.c	FUNCTION_35
0x21c9	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1285	charset.c	FUNCTION_35
0x21d0	          0x8945d8	             mov dword [rbp - 0x28], eax	      1285	charset.c	FUNCTION_35
0x21d3	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1288	charset.c	FUNCTION_35
0x21da	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1289	charset.c	FUNCTION_35	CALL_1
0x21de	          0x488b08	                    mov rcx, qword [rax]	      1289	charset.c	FUNCTION_35	CALL_1
0x21e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1289	charset.c	FUNCTION_35	CALL_1
0x21e5	        0x488b4008	                mov rax, qword [rax + 8]	      1289	charset.c	FUNCTION_35	CALL_1
0x21e9	      0xba00000000	                              mov edx, 0	      1289	charset.c	FUNCTION_35	CALL_1
0x21ee	          0x4889ce	                            mov rsi, rcx	      1289	charset.c	FUNCTION_35	CALL_1
0x21f1	          0x4889c7	                            mov rdi, rax	      1289	charset.c	FUNCTION_35	CALL_1
0x21f4	      0xe800000000	                          call 0x4002239	      1289	charset.c	FUNCTION_35	CALL_1
0x21f9	        0x488945e0	             mov qword [rbp - 0x20], rax	      1289	charset.c	FUNCTION_35	CALL_1
0x21fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1289	charset.c	FUNCTION_35	CALL_1
0x2201	        0x488945f0	             mov qword [rbp - 0x10], rax	      1289	charset.c	FUNCTION_35	CALL_1
0x2205	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1290	charset.c	FUNCTION_35	IF_1
0x2209	          0x8b4008	                mov eax, dword [rax + 8]	      1290	charset.c	FUNCTION_35	IF_1
0x220c	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1290	charset.c	FUNCTION_35	IF_1
0x2211	            0x750a	                           jne 0x400225d	      1290	charset.c	FUNCTION_35	IF_1
0x2213	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1291	charset.c	FUNCTION_35	IF_1
0x221b	            0xeb55	                           jmp 0x40022b2	      1291	charset.c	FUNCTION_35	IF_1
0x221d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x2221	           0xfb600	                   movzx eax, byte [rax]	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x2224	            0x84c0	                             test al, al	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x2226	            0x750b	                           jne 0x4002273	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x2228	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1297	charset.c	FUNCTION_35	ELSE_1	IF_2
0x222c	    0xc74008000000	                  mov dword [rax + 8], 0	      1297	charset.c	FUNCTION_35	ELSE_1	IF_2
0x2233	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1298	charset.c	FUNCTION_35	ELSE_1
0x2237	          0x8b4008	                mov eax, dword [rax + 8]	      1298	charset.c	FUNCTION_35	ELSE_1
0x223a	          0x4863d0	                         movsxd rdx, eax	      1298	charset.c	FUNCTION_35	ELSE_1
0x223d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1298	charset.c	FUNCTION_35	ELSE_1
0x2241	          0x4801d0	                            add rax, rdx	      1298	charset.c	FUNCTION_35	ELSE_1
0x2244	        0x488945e8	             mov qword [rbp - 0x18], rax	      1298	charset.c	FUNCTION_35	ELSE_1
0x2248	    0x8b0500000000	            mov eax, dword [0x0400228e] 	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x224e	            0x85c0	                           test eax, eax	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2250	            0x7420	                            je 0x40022b2	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2252	    0x488b05000000	            mov rax, qword [0x04002299] 	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2259	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x225d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2261	          0x4889ce	                            mov rsi, rcx	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2264	          0x4889d7	                            mov rdi, rdx	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2267	            0xffd0	                                call rax	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2269	            0x4898	                                    cdqe	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x226b	          0x48f7d8	                                 neg rax	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x226e	        0x480145e8	            add qword [rbp - 0x18], rax 	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x2272	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1312	charset.c	FUNCTION_35	IF_4
0x2276	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1312	charset.c	FUNCTION_35	IF_4
0x227c	            0x85c0	                           test eax, eax	      1312	charset.c	FUNCTION_35	IF_4
0x227e	            0x740e	                            je 0x40022ce	      1312	charset.c	FUNCTION_35	IF_4
0x2280	    0x8b0500000000	            mov eax, dword [0x040022c6] 	      1312	charset.c	FUNCTION_35	IF_4
0x2286	            0x85c0	                           test eax, eax	      1312	charset.c	FUNCTION_35	IF_4
0x2288	     0xf8462010000	                            je 0x4002430	      1312	charset.c	FUNCTION_35	IF_4
0x228e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1314	charset.c	FUNCTION_35	IF_4
0x2292	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1314	charset.c	FUNCTION_35	IF_4
0x2298	            0x85c0	                           test eax, eax	      1314	charset.c	FUNCTION_35	IF_4
0x229a	     0xf8550010000	                           jne 0x4002430	      1314	charset.c	FUNCTION_35	IF_4
0x22a0	    0x488b05000000	            mov rax, qword [0x040022e7] 	      1314	charset.c	FUNCTION_35	IF_4
0x22a7	           0xfb600	                   movzx eax, byte [rax]	      1314	charset.c	FUNCTION_35	IF_4
0x22aa	            0x84c0	                             test al, al	      1314	charset.c	FUNCTION_35	IF_4
0x22ac	     0xf853e010000	                           jne 0x4002430	      1314	charset.c	FUNCTION_35	IF_4
0x22b2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1314	charset.c	FUNCTION_35	IF_4
0x22b6	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1314	charset.c	FUNCTION_35	IF_4
0x22bc	            0x85c0	                           test eax, eax	      1314	charset.c	FUNCTION_35	IF_4
0x22be	     0xf852c010000	                           jne 0x4002430	      1314	charset.c	FUNCTION_35	IF_4
0x22c4	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1324	charset.c	FUNCTION_35	IF_4	FOR_1
0x22cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x22cf	           0xfb600	                   movzx eax, byte [rax]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x22d2	           0xfb6c0	                           movzx eax, al	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x22d5	          0x8945dc	             mov dword [rbp - 0x24], eax	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x22d8	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x22dc	            0x750c	                           jne 0x400232a	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x22de	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1330	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x22e5	      0xe904010000	                           jmp 0x400242e	      1331	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x22ea	        0x837ddc09	               cmp dword [rbp - 0x24], 9	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22ee	            0x7514	                           jne 0x4002344	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22f0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22f3	              0x99	                                     cdq	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22f4	          0xf77dd8	                 idiv dword [rbp - 0x28]	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22f7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22fa	            0x29d0	                            sub eax, edx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22fc	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x22ff	      0xe9a6000000	                           jmp 0x40023ea	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x2304	    0x8b0500000000	            mov eax, dword [0x0400234a] 	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x230a	            0x85c0	                           test eax, eax	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x230c	     0xf8483000000	                            je 0x40023d5	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x2312	    0x8b0500000000	            mov eax, dword [0x04002358] 	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x2318	            0x85c0	                           test eax, eax	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x231a	            0x7417	                            je 0x4002373	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x231c	        0x837ddc7f	           cmp dword [rbp - 0x24], 0x7f 	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x2320	            0x7e11	                           jle 0x4002373	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x2322	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x2326	          0x4889c7	                            mov rdi, rax	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x2329	      0xe800000000	                          call 0x400236e	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x232e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x2331	            0xeb15	                           jmp 0x4002388	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x2333	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x2336	            0x4898	                                    cdqe	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x2338	     0xfb680000000	                   movzx eax, byte [rax]	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x233f	           0xfb6c0	                           movzx eax, al	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x2342	          0x83e007	                              and eax, 7	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x2345	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x2348	        0x837dd402	               cmp dword [rbp - 0x2c], 2	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x234c	            0x755c	                           jne 0x40023ea	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x234e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2352	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2358	            0x85c0	                           test eax, eax	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x235a	            0x744e	                            je 0x40023ea	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x235c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2360	           0xfb600	                   movzx eax, byte [rax]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2363	           0xfb6c0	                           movzx eax, al	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2366	            0x4898	                                    cdqe	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2368	     0xfb680000000	                   movzx eax, byte [rax]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x236f	            0x3c01	                               cmp al, 1	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2371	            0x7e37	                           jle 0x40023ea	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x2373	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x2376	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x237a	            0x89d6	                            mov esi, edx	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x237c	          0x4889c7	                            mov rdi, rax	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x237f	      0xe800000000	                          call 0x40023c4	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x2384	            0x85c0	                           test eax, eax	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x2386	            0x7422	                            je 0x40023ea	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x2388	        0x8345d401	               add dword [rbp - 0x2c], 1	      1354	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x238c	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      1355	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x2393	            0xeb15	                           jmp 0x40023ea	      1355	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x2395	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x2398	            0x4898	                                    cdqe	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x239a	     0xfb680000000	                   movzx eax, byte [rax]	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x23a1	           0xfb6c0	                           movzx eax, al	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x23a4	          0x83e007	                              and eax, 7	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x23a7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x23aa	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x23af	            0x740a	                            je 0x40023fb	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x23b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x23b5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x23b9	            0x7332	                           jae 0x400242d	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x23bb	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x23be	           0x145d0	             add dword [rbp - 0x30], eax	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x23c1	    0x8b0500000000	            mov eax, dword [0x04002407] 	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23c7	            0x85c0	                           test eax, eax	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23c9	            0x7412	                            je 0x400241d	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23cb	    0x488b05000000	            mov rax, qword [0x04002412] 	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23d2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23d6	          0x4889d7	                            mov rdi, rdx	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23d9	            0xffd0	                                call rax	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23db	            0xeb05	                           jmp 0x4002422	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23dd	      0xb801000000	                              mov eax, 1	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23e2	            0x4898	                                    cdqe	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23e4	        0x480145e0	            add qword [rbp - 0x20], rax 	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x23e8	      0xe9d7feffff	                           jmp 0x4002304	      1368	charset.c	FUNCTION_35	IF_4	FOR_1
0x23ed	              0x90	                                     nop	      1364	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x23ee	            0xeb7d	                           jmp 0x40024ad	      1312	charset.c	FUNCTION_35	IF_4
0x23f0	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1375	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x23f7	        0x488d7dcc	                   lea rdi, [rbp - 0x34]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x23fb	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x23fe	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x2402	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x2406	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x240a	          0x4989f8	                             mov r8, rdi	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x240d	          0x4889c7	                            mov rdi, rax	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x2410	      0xe800000000	                          call 0x4002455	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x2415	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x2418	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x241c	           0xfb600	                   movzx eax, byte [rax]	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x241f	            0x84c0	                             test al, al	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x2421	            0x7509	                           jne 0x400246c	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x2423	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1380	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x242a	            0xeb41	                           jmp 0x40024ad	      1381	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x242c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x2431	            0x740a	                            je 0x400247d	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x2433	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x2437	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x243b	            0x732f	                           jae 0x40024ac	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x243d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1387	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x2440	           0x145d0	             add dword [rbp - 0x30], eax	      1387	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x2443	    0x8b0500000000	            mov eax, dword [0x04002489] 	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x2449	            0x85c0	                           test eax, eax	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x244b	            0x7412	                            je 0x400249f	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x244d	    0x488b05000000	            mov rax, qword [0x04002494] 	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x2454	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x2458	          0x4889d7	                            mov rdi, rdx	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x245b	            0xffd0	                                call rax	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x245d	            0xeb05	                           jmp 0x40024a4	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x245f	      0xb801000000	                              mov eax, 1	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x2464	            0x4898	                                    cdqe	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x2466	        0x480145e0	            add qword [rbp - 0x20], rax 	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x246a	            0xeb84	                           jmp 0x4002430	      1389	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x246c	              0x90	                                     nop	      1385	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x246d	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1391	charset.c	FUNCTION_35	IF_13
0x2472	            0x740e	                            je 0x40024c2	      1391	charset.c	FUNCTION_35	IF_13
0x2474	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1392	charset.c	FUNCTION_35	IF_13
0x2477	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1392	charset.c	FUNCTION_35	IF_13
0x247a	             0x1c2	                            add edx, eax	      1392	charset.c	FUNCTION_35	IF_13
0x247c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1392	charset.c	FUNCTION_35	IF_13
0x2480	            0x8910	                    mov dword [rax], edx	      1392	charset.c	FUNCTION_35	IF_13
0x2482	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1393	charset.c	FUNCTION_35	IF_14
0x2487	            0x7411	                            je 0x40024da	      1393	charset.c	FUNCTION_35	IF_14
0x2489	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1394	charset.c	FUNCTION_35	IF_14
0x248c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1394	charset.c	FUNCTION_35	IF_14
0x248f	             0x1d0	                            add eax, edx	      1394	charset.c	FUNCTION_35	IF_14
0x2491	          0x8d50ff	                      lea edx, [rax - 1]	      1394	charset.c	FUNCTION_35	IF_14
0x2494	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1394	charset.c	FUNCTION_35	IF_14
0x2498	            0x8910	                    mov dword [rax], edx	      1394	charset.c	FUNCTION_35	IF_14
0x249a	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1395	charset.c	FUNCTION_35	IF_15
0x249f	     0xf8412010000	                            je 0x40025f7	      1395	charset.c	FUNCTION_35	IF_15
0x24a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x24a9	           0xfb600	                   movzx eax, byte [rax]	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x24ac	            0x3c09	                               cmp al, 9	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x24ae	     0xf85f5000000	                           jne 0x40025e9	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x24b4	    0x8b0500000000	            mov eax, dword [0x040024fa] 	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x24ba	          0x83e001	                              and eax, 1	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x24bd	            0x85c0	                           test eax, eax	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x24bf	     0xf84e4000000	                            je 0x40025e9	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x24c5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x24c9	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x24cf	            0x85c0	                           test eax, eax	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x24d1	     0xf85d2000000	                           jne 0x40025e9	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x24d7	      0xe800000000	                          call 0x400251c	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x24dc	            0x85c0	                           test eax, eax	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x24de	     0xf85c5000000	                           jne 0x40025e9	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x24e4	    0x8b0500000000	            mov eax, dword [0x0400252a] 	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x24ea	            0x85c0	                           test eax, eax	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x24ec	     0xf84a4000000	                            je 0x40025d6	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x24f2	    0x488b05000000	            mov rax, qword [0x04002539] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x24f9	           0xfb600	                   movzx eax, byte [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x24fc	            0x3c65	                            cmp al, 0x65	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x24fe	     0xf84a5000000	                            je 0x40025e9	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x2504	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2508	          0x488b10	                    mov rdx, qword [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x250b	    0x488b05000000	            mov rax, qword [0x04002552] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2512	          0x4839c2	                            cmp rdx, rax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x2515	            0x7415	                            je 0x400256c	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x2517	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x251b	          0x488b10	                    mov rdx, qword [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x251e	    0x488b05000000	            mov rax, qword [0x04002565] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2525	          0x4839c2	                            cmp rdx, rax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2528	            0x7d37	                           jge 0x40025a1	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x252a	            0xeb7d	                           jmp 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x252c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2530	          0x8b5008	                mov edx, dword [rax + 8]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2533	    0x8b0500000000	            mov eax, dword [0x04002579] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2539	            0x39c2	                            cmp edx, eax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x253b	            0x7413	                            je 0x4002590	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x253d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2541	          0x8b5008	                mov edx, dword [rax + 8]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2544	    0x8b0500000000	            mov eax, dword [0x0400258a] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x254a	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x254c	            0x7d13	                           jge 0x40025a1	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x254e	            0xeb59	                           jmp 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2550	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2554	          0x8b500c	              mov edx, dword [rax + 0xc]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2557	    0x8b0500000000	            mov eax, dword [0x0400259d] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x255d	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x255f	            0x7c48	                            jl 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2561	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2565	          0x488b10	                    mov rdx, qword [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2568	    0x488b05000000	            mov rax, qword [0x040025af] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x256f	          0x4839c2	                            cmp rdx, rax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2572	            0x7522	                           jne 0x40025d6	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2574	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2578	          0x8b5008	                mov edx, dword [rax + 8]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x257b	    0x8b0500000000	            mov eax, dword [0x040025c1] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2581	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2583	            0x7511	                           jne 0x40025d6	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2585	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2589	          0x8b500c	              mov edx, dword [rax + 0xc]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x258c	    0x8b0500000000	            mov eax, dword [0x040025d2] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2592	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2594	            0x7413	                            je 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x2596	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x2599	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x259c	             0x1d0	                            add eax, edx	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x259e	          0x8d50ff	                      lea edx, [rax - 1]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x25a1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x25a5	            0x8910	                    mov dword [rax], edx	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x25a7	            0xeb0e	                           jmp 0x40025f7	      1408	charset.c	FUNCTION_35	ELSE_6
0x25a9	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x25ac	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x25af	             0x1c2	                            add edx, eax	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x25b1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x25b5	            0x8910	                    mov dword [rax], edx	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x25b7	              0x90	                                     nop	      1408	charset.c	FUNCTION_35	ELSE_6
0x25b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	charset.c	FUNCTION_35	ELSE_6
0x25bc	    0x644833042528	                xor rax, qword fs:[0x28]	      1408	charset.c	FUNCTION_35	ELSE_6
0x25c5	            0x7405	                            je 0x400260c	      1408	charset.c	FUNCTION_35	ELSE_6
0x25c7	      0xe800000000	                          call 0x400260c	      1408	charset.c	FUNCTION_35	ELSE_6
0x25cc	              0xc9	                                   leave	      1408	charset.c	FUNCTION_35	ELSE_6
0x25cd	              0xc3	                                     ret	      1408	charset.c	FUNCTION_35	ELSE_6
transchar	IF,2:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0:CALL,5:FOR,0	64
0xee3	              0x55	                                push rbp	       555	charset.c	FUNCTION_6
0xee4	          0x4889e5	                            mov rbp, rsp	       555	charset.c	FUNCTION_6
0xee7	        0x4883ec20	                           sub rsp, 0x20	       555	charset.c	FUNCTION_6
0xeeb	          0x897dec	             mov dword [rbp - 0x14], edi	       555	charset.c	FUNCTION_6
0xeee	    0xc745fc000000	                  mov dword [rbp - 4], 0	       558	charset.c	FUNCTION_6
0xef5	        0x837dec00	               cmp dword [rbp - 0x14], 0	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0xef9	            0x793d	                           jns 0x4000f78	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0xefb	    0xc60500000000	            mov byte [0x04000f42], 0x7e 	       561	charset.c	FUNCTION_6	IF_1
0xf02	    0xc60500000000	            mov byte [0x04000f49], 0x40 	       562	charset.c	FUNCTION_6	IF_1
0xf09	    0xc745fc020000	                  mov dword [rbp - 4], 2	       563	charset.c	FUNCTION_6	IF_1
0xf10	    0x817dec800000	           cmp dword [rbp - 0x14], 0x80 	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf17	            0x7417	                            je 0x4000f70	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf19	        0x837dec00	               cmp dword [rbp - 0x14], 0	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf1d	            0x740a	                            je 0x4000f69	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf1f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf22	            0xf7d8	                                 neg eax	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf24	           0xfb6c0	                           movzx eax, al	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf27	            0xeb0c	                           jmp 0x4000f75	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf29	      0xb8ff000000	                           mov eax, 0xff	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf2e	            0xeb05	                           jmp 0x4000f75	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf30	      0xb8fe000000	                           mov eax, 0xfe	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf35	          0x8945ec	             mov dword [rbp - 0x14], eax	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0xf38	    0x8b0500000000	            mov eax, dword [0x04000f7e] 	       567	charset.c	FUNCTION_6	IF_2
0xf3e	            0x85c0	                           test eax, eax	       567	charset.c	FUNCTION_6	IF_2
0xf40	            0x7524	                           jne 0x4000fa6	       567	charset.c	FUNCTION_6	IF_2
0xf42	        0x837dec1f	           cmp dword [rbp - 0x14], 0x1f 	       567	charset.c	FUNCTION_6	IF_2
0xf46	            0x7e06	                           jle 0x4000f8e	       567	charset.c	FUNCTION_6	IF_2
0xf48	        0x837dec7e	           cmp dword [rbp - 0x14], 0x7e 	       571	charset.c	FUNCTION_6	IF_2
0xf4c	            0x7e2f	                           jle 0x4000fbd	       571	charset.c	FUNCTION_6	IF_2
0xf4e	    0x8b0500000000	            mov eax, dword [0x04000f94] 	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf54	            0x85c0	                           test eax, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf56	            0x740e	                            je 0x4000fa6	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf58	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf5b	            0x89c7	                            mov edi, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf5d	      0xe800000000	                          call 0x4000fa2	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf62	            0x85c0	                           test eax, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf64	            0x7517	                           jne 0x4000fbd	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0xf66	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0xf6d	            0x7f2f	                            jg 0x4000fde	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0xf6f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0xf72	            0x89c7	                            mov edi, eax	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0xf74	      0xe800000000	                          call 0x4000fb9	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0xf79	            0x85c0	                           test eax, eax	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0xf7b	            0x7421	                            je 0x4000fde	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0xf7d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       579	charset.c	FUNCTION_6	IF_2
0xf80	            0x89c2	                            mov edx, eax	       579	charset.c	FUNCTION_6	IF_2
0xf82	          0x8b45fc	                mov eax, dword [rbp - 4]	       579	charset.c	FUNCTION_6	IF_2
0xf85	            0x4898	                                    cdqe	       579	charset.c	FUNCTION_6	IF_2
0xf87	    0x889000000000	                      mov byte [rax], dl	       579	charset.c	FUNCTION_6	IF_2
0xf8d	          0x8b45fc	                mov eax, dword [rbp - 4]	       580	charset.c	FUNCTION_6	IF_2
0xf90	          0x83c001	                              add eax, 1	       580	charset.c	FUNCTION_6	IF_2
0xf93	            0x4898	                                    cdqe	       580	charset.c	FUNCTION_6	IF_2
0xf95	    0xc68000000000	                       mov byte [rax], 0	       580	charset.c	FUNCTION_6	IF_2
0xf9c	            0xeb19	                           jmp 0x4000ff7	       580	charset.c	FUNCTION_6	IF_2
0xf9e	          0x8b45fc	                mov eax, dword [rbp - 4]	       583	charset.c	FUNCTION_6	CALL_5
0xfa1	            0x4898	                                    cdqe	       583	charset.c	FUNCTION_6	CALL_5
0xfa3	    0x488d90000000	                          lea rdx, [rax]	       583	charset.c	FUNCTION_6	CALL_5
0xfaa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       583	charset.c	FUNCTION_6	CALL_5
0xfad	            0x89c6	                            mov esi, eax	       583	charset.c	FUNCTION_6	CALL_5
0xfaf	          0x4889d7	                            mov rdi, rdx	       583	charset.c	FUNCTION_6	CALL_5
0xfb2	      0xe800000000	                          call 0x4000ff7	       583	charset.c	FUNCTION_6	CALL_5
0xfb7	      0xb800000000	                              mov eax, 0	       584	charset.c	FUNCTION_6
0xfbc	              0xc9	                                   leave	       585	charset.c	FUNCTION_6
0xfbd	              0xc3	                                     ret	       585	charset.c	FUNCTION_6
buf_init_chartab	IF,31:DO,0:SWITCH,0:ELSE,18:WHILE,7:functions,0:CALL,22:FOR,3	534
0x1a	              0x55	                                push rbp	        80	charset.c	FUNCTION_2
0x1b	          0x4889e5	                            mov rbp, rsp	        80	charset.c	FUNCTION_2
0x1e	        0x4883ec40	                           sub rsp, 0x40	        80	charset.c	FUNCTION_2
0x22	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        80	charset.c	FUNCTION_2
0x26	          0x8975c4	             mov dword [rbp - 0x3c], esi	        80	charset.c	FUNCTION_2
0x29	    0x64488b042528	                mov rax, qword fs:[0x28]	        80	charset.c	FUNCTION_2
0x32	        0x488945f8	                mov qword [rbp - 8], rax	        80	charset.c	FUNCTION_2
0x36	            0x31c0	                            xor eax, eax	        80	charset.c	FUNCTION_2
0x38	        0x837dc400	               cmp dword [rbp - 0x3c], 0	        88	charset.c	FUNCTION_2	IF_1
0x3c	     0xf84b1010000	                            je 0x4000233	        88	charset.c	FUNCTION_2	IF_1
0x42	    0xc745dc000000	               mov dword [rbp - 0x24], 0	        98	charset.c	FUNCTION_2	IF_1
0x49	            0xeb2a	                           jmp 0x40000b5	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4e	          0x8d5001	                      lea edx, [rax + 1]	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x51	          0x8955dc	             mov dword [rbp - 0x24], edx	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x54	    0x8b1500000000	            mov edx, dword [0x0400009a] 	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x5a	          0x83e204	                              and edx, 4	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x5d	            0x85d2	                           test edx, edx	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x5f	            0x7407	                            je 0x40000a8	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x61	      0xba04000000	                              mov edx, 4	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x66	            0xeb05	                           jmp 0x40000ad	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x68	      0xba02000000	                              mov edx, 2	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x6d	            0x4898	                                    cdqe	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x6f	    0x889000000000	                      mov byte [rax], dl	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x75	        0x837ddc1f	           cmp dword [rbp - 0x24], 0x1f 	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x79	            0x7ed0	                           jle 0x400008b	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x7b	            0xeb12	                           jmp 0x40000cf	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x7d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x80	          0x8d5001	                      lea edx, [rax + 1]	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x83	          0x8955dc	             mov dword [rbp - 0x24], edx	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x86	            0x4898	                                    cdqe	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x88	    0xc68000000000	                    mov byte [rax], 0x11	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x8f	        0x837ddc7e	           cmp dword [rbp - 0x24], 0x7e 	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x93	            0x7ee8	                           jle 0x40000bd	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x95	    0x8b0500000000	            mov eax, dword [0x040000db] 	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x9b	            0x85c0	                           test eax, eax	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x9d	     0xf84ce000000	                            je 0x40001b1	       108	charset.c	FUNCTION_2	IF_1	IF_2
0xa3	            0xeb12	                           jmp 0x40000f7	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xa5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xa8	          0x8d5001	                      lea edx, [rax + 1]	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xab	          0x8955dc	             mov dword [rbp - 0x24], edx	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xae	            0x4898	                                    cdqe	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xb0	    0xc68000000000	                    mov byte [rax], 0x11	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xb7	    0x817ddce00000	           cmp dword [rbp - 0x24], 0xe0 	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xbe	            0x7ee5	                           jle 0x40000e5	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0xc0	      0xe9ac000000	                           jmp 0x40001b1	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0xc5	    0x8b0500000000	            mov eax, dword [0x0400010b] 	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xcb	            0x85c0	                           test eax, eax	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xcd	            0x7420	                            je 0x400012f	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xcf	    0x817ddc9f0000	           cmp dword [rbp - 0x24], 0x9f 	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xd6	            0x7e17	                           jle 0x400012f	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xd8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xdb	          0x8d5001	                      lea edx, [rax + 1]	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xde	          0x8955dc	             mov dword [rbp - 0x24], edx	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xe1	            0x4898	                                    cdqe	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xe3	    0xc68000000000	                    mov byte [rax], 0x11	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xea	      0xe982000000	                           jmp 0x40001b1	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0xef	    0x8b0500000000	            mov eax, dword [0x04000135] 	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0xf5	      0x3dcc260000	                         cmp eax, 0x26cc	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0xfa	            0x751d	                           jne 0x4000159	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0xfc	    0x817ddc8e0000	           cmp dword [rbp - 0x24], 0x8e 	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x103	            0x7514	                           jne 0x4000159	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x105	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x108	          0x8d5001	                      lea edx, [rax + 1]	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x10b	          0x8955dc	             mov dword [rbp - 0x24], edx	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x10e	            0x4898	                                    cdqe	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x110	    0xc68000000000	                    mov byte [rax], 0x11	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x117	            0xeb58	                           jmp 0x40001b1	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x119	    0x8b0500000000	            mov eax, dword [0x0400015f] 	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x11f	            0x85c0	                           test eax, eax	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x121	            0x7424	                            je 0x4000187	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x123	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x126	            0x4898	                                    cdqe	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x128	     0xfb680000000	                   movzx eax, byte [rax]	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x12f	            0x3c02	                               cmp al, 2	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x131	            0x7514	                           jne 0x4000187	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x133	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x136	          0x8d5001	                      lea edx, [rax + 1]	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x139	          0x8955dc	             mov dword [rbp - 0x24], edx	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x13c	            0x4898	                                    cdqe	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x13e	    0xc68000000000	                    mov byte [rax], 0x12	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x145	            0xeb2a	                           jmp 0x40001b1	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x147	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x14a	          0x8d5001	                      lea edx, [rax + 1]	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x14d	          0x8955dc	             mov dword [rbp - 0x24], edx	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x150	    0x8b1500000000	            mov edx, dword [0x04000196] 	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x156	          0x83e204	                              and edx, 4	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x159	            0x85d2	                           test edx, edx	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x15b	            0x7407	                            je 0x40001a4	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x15d	      0xba04000000	                              mov edx, 4	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x162	            0xeb05	                           jmp 0x40001a9	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x164	      0xba02000000	                              mov edx, 2	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x169	            0x4898	                                    cdqe	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x16b	    0x889000000000	                      mov byte [rax], dl	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x171	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x178	     0xf8e47ffffff	                           jle 0x4000105	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x17e	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x185	            0xeb63	                           jmp 0x400022a	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x187	    0x8b0500000000	            mov eax, dword [0x040001cd] 	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x18d	            0x85c0	                           test eax, eax	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x18f	            0x7410	                            je 0x40001e1	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x191	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x194	            0x4898	                                    cdqe	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x196	     0xfb680000000	                   movzx eax, byte [rax]	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x19d	            0x3c01	                               cmp al, 1	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x19f	            0x7f29	                            jg 0x400020a	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x1a1	    0x8b0500000000	            mov eax, dword [0x040001e7] 	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1a7	      0x3dcc260000	                         cmp eax, 0x26cc	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1ac	            0x7509	                           jne 0x40001f7	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1ae	    0x817ddc8e0000	           cmp dword [rbp - 0x24], 0x8e 	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1b5	            0x7413	                            je 0x400020a	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1b7	    0x8b0500000000	            mov eax, dword [0x040001fd] 	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1bd	            0x85c0	                           test eax, eax	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1bf	            0x7425	                            je 0x4000226	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1c1	    0x817ddc9f0000	           cmp dword [rbp - 0x24], 0x9f 	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1c8	            0x7e1c	                           jle 0x4000226	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1ca	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1cd	            0x4898	                                    cdqe	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1cf	     0xfb680000000	                   movzx eax, byte [rax]	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1d6	          0x83c840	                            or eax, 0x40	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1d9	            0x89c2	                            mov edx, eax	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1db	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1de	            0x4898	                                    cdqe	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1e0	    0x889000000000	                      mov byte [rax], dl	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x1e6	        0x8345dc01	               add dword [rbp - 0x24], 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x1ea	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x1f1	            0x7e94	                           jle 0x40001c7	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x1f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       145	charset.c	FUNCTION_2	CALL_3
0x1f7	    0x4805a0090000	                          add rax, 0x9a0	       145	charset.c	FUNCTION_2	CALL_3
0x1fd	      0xba20000000	                           mov edx, 0x20	       145	charset.c	FUNCTION_2	CALL_3
0x202	      0xbe00000000	                              mov esi, 0	       145	charset.c	FUNCTION_2	CALL_3
0x207	          0x4889c7	                            mov rdi, rax	       145	charset.c	FUNCTION_2	CALL_3
0x20a	      0xe800000000	                          call 0x400024f	       145	charset.c	FUNCTION_2	CALL_3
0x20f	    0x8b0500000000	            mov eax, dword [0x04000255] 	       147	charset.c	FUNCTION_2	IF_7
0x215	            0x85c0	                           test eax, eax	       147	charset.c	FUNCTION_2	IF_7
0x217	            0x7468	                            je 0x40002c1	       147	charset.c	FUNCTION_2	IF_7
0x219	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x220	            0xeb56	                           jmp 0x40002b8	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x222	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x225	            0x4898	                                    cdqe	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x227	     0xfb680000000	                   movzx eax, byte [rax]	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x22e	            0x3c02	                               cmp al, 2	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x230	            0x7542	                           jne 0x40002b4	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x232	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x235	          0xc1e803	                              shr eax, 3	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x238	            0x89c6	                            mov esi, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x23a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x23d	          0xc1e803	                              shr eax, 3	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x240	            0x89c2	                            mov edx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x242	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x246	            0x89d2	                            mov edx, edx	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x248	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x250	            0x89c7	                            mov edi, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x252	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x255	          0x83e007	                              and eax, 7	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x258	      0xba01000000	                              mov edx, 1	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x25d	            0x89c1	                            mov ecx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x25f	            0xd3e2	                             shl edx, cl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x261	            0x89d0	                            mov eax, edx	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x263	             0x9f8	                             or eax, edi	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x265	            0x89c1	                            mov ecx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x267	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x26b	            0x89f2	                            mov edx, esi	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x26d	    0x888c10a00900	        mov byte [rax + rdx + 0x9a0], cl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	CALL_5
0x274	        0x8345dc01	               add dword [rbp - 0x24], 1	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x278	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x27f	            0x7ea1	                           jle 0x4000262	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x281	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       160	charset.c	FUNCTION_2	IF_9
0x285	    0x8b8020150000	          mov eax, dword [rax + 0x1520] 	       160	charset.c	FUNCTION_2	IF_9
0x28b	            0x85c0	                           test eax, eax	       160	charset.c	FUNCTION_2	IF_9
0x28d	            0x741a	                            je 0x40002e9	       160	charset.c	FUNCTION_2	IF_9
0x28f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	charset.c	FUNCTION_2	CALL_6
0x293	     0xfb680a50900	          movzx eax, byte [rax + 0x9a5] 	       161	charset.c	FUNCTION_2	CALL_6
0x29a	          0x83c820	                            or eax, 0x20	       161	charset.c	FUNCTION_2	CALL_6
0x29d	            0x89c2	                            mov edx, eax	       161	charset.c	FUNCTION_2	CALL_6
0x29f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	charset.c	FUNCTION_2	CALL_6
0x2a3	    0x8890a5090000	              mov byte [rax + 0x9a5], dl	       161	charset.c	FUNCTION_2	CALL_6
0x2a9	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       168	charset.c	FUNCTION_2	FOR_3
0x2ad	            0x7407	                            je 0x40002f6	       168	charset.c	FUNCTION_2	FOR_3
0x2af	      0xb800000000	                              mov eax, 0	       168	charset.c	FUNCTION_2	FOR_3
0x2b4	            0xeb05	                           jmp 0x40002fb	       168	charset.c	FUNCTION_2	FOR_3
0x2b6	      0xb803000000	                              mov eax, 3	       168	charset.c	FUNCTION_2	FOR_3
0x2bb	          0x8945e4	             mov dword [rbp - 0x1c], eax	       168	charset.c	FUNCTION_2	FOR_3
0x2be	      0xe9af040000	                           jmp 0x40007b2	       168	charset.c	FUNCTION_2	FOR_3
0x2c3	        0x837de400	               cmp dword [rbp - 0x1c], 0	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x2c7	            0x7510	                           jne 0x4000319	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x2c9	    0x488b05000000	            mov rax, qword [0x04000310] 	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x2d0	        0x488945f0	             mov qword [rbp - 0x10], rax	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x2d4	      0xe986040000	                           jmp 0x400079f	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x2d9	        0x837de401	               cmp dword [rbp - 0x1c], 1	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x2dd	            0x7510	                           jne 0x400032f	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x2df	    0x488b05000000	            mov rax, qword [0x04000326] 	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x2e6	        0x488945f0	             mov qword [rbp - 0x10], rax	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x2ea	      0xe970040000	                           jmp 0x400079f	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x2ef	        0x837de402	               cmp dword [rbp - 0x1c], 2	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x2f3	            0x7510	                           jne 0x4000345	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x2f5	    0x488b05000000	            mov rax, qword [0x0400033c] 	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x2fc	        0x488945f0	             mov qword [rbp - 0x10], rax	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x300	      0xe95a040000	                           jmp 0x400079f	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x305	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x309	    0x488b80b81400	          mov rax, qword [rax + 0x14b8] 	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x310	        0x488945f0	             mov qword [rbp - 0x10], rax	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x314	      0xe946040000	                           jmp 0x400079f	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x319	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       181	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x320	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x327	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x32b	           0xfb600	                   movzx eax, byte [rax]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x32e	            0x3c5e	                            cmp al, 0x5e	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x330	            0x7522	                           jne 0x4000394	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x332	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x336	        0x4883c001	                              add rax, 1	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x33a	           0xfb600	                   movzx eax, byte [rax]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x33d	            0x84c0	                             test al, al	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x33f	            0x7413	                            je 0x4000394	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x341	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       185	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x348	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x34c	        0x4883c001	                              add rax, 1	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x350	        0x488945f0	             mov qword [rbp - 0x10], rax	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x354	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_7
0x358	           0xfb600	                   movzx eax, byte [rax]	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_7
0x35b	           0xfb6c0	                           movzx eax, al	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_7
0x35e	          0x83e830	                           sub eax, 0x30	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_7
0x361	          0x83f809	                              cmp eax, 9	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_7
0x364	            0x7711	                            ja 0x40003b7	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_7
0x366	        0x488d45f0	                   lea rax, [rbp - 0x10]	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_8
0x36a	          0x4889c7	                            mov rdi, rax	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_8
0x36d	      0xe800000000	                          call 0x40003b2	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_8
0x372	          0x8945dc	             mov dword [rbp - 0x24], eax	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_8
0x375	            0xeb30	                           jmp 0x40003e7	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_8
0x377	    0x8b0500000000	            mov eax, dword [0x040003bd] 	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x37d	            0x85c0	                           test eax, eax	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x37f	            0x7411	                            je 0x40003d2	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x381	        0x488d45f0	                   lea rax, [rbp - 0x10]	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x385	          0x4889c7	                            mov rdi, rax	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x388	      0xe800000000	                          call 0x40003cd	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x38d	          0x8945dc	             mov dword [rbp - 0x24], eax	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x390	            0xeb15	                           jmp 0x40003e7	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x392	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x396	        0x488d5001	                      lea rdx, [rax + 1]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x39a	        0x488955f0	             mov qword [rbp - 0x10], rdx	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x39e	           0xfb600	                   movzx eax, byte [rax]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x3a1	           0xfb6c0	                           movzx eax, al	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x3a4	          0x8945dc	             mov dword [rbp - 0x24], eax	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x3a7	    0xc745e0ffffff	     mov dword [rbp - 0x20], 0xffffffff 	       197	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x3ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3b2	           0xfb600	                   movzx eax, byte [rax]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3b5	            0x3c2d	                            cmp al, 0x2d	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3b7	            0x756e	                           jne 0x4000467	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3bd	        0x4883c001	                              add rax, 1	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3c1	           0xfb600	                   movzx eax, byte [rax]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3c4	            0x84c0	                             test al, al	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3c6	            0x745f	                            je 0x4000467	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3cc	        0x4883c001	                              add rax, 1	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3d0	        0x488945f0	             mov qword [rbp - 0x10], rax	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x3d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_10
0x3d8	           0xfb600	                   movzx eax, byte [rax]	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_10
0x3db	           0xfb6c0	                           movzx eax, al	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_10
0x3de	          0x83e830	                           sub eax, 0x30	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_10
0x3e1	          0x83f809	                              cmp eax, 9	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_10
0x3e4	            0x7711	                            ja 0x4000437	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_10
0x3e6	        0x488d45f0	                   lea rax, [rbp - 0x10]	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_11
0x3ea	          0x4889c7	                            mov rdi, rax	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_11
0x3ed	      0xe800000000	                          call 0x4000432	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_11
0x3f2	          0x8945e0	             mov dword [rbp - 0x20], eax	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_11
0x3f5	            0xeb30	                           jmp 0x4000467	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_11
0x3f7	    0x8b0500000000	            mov eax, dword [0x0400043d] 	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x3fd	            0x85c0	                           test eax, eax	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x3ff	            0x7411	                            je 0x4000452	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x401	        0x488d45f0	                   lea rax, [rbp - 0x10]	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x405	          0x4889c7	                            mov rdi, rax	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x408	      0xe800000000	                          call 0x400044d	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x40d	          0x8945e0	             mov dword [rbp - 0x20], eax	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x410	            0xeb15	                           jmp 0x4000467	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x412	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x416	        0x488d5001	                      lea rdx, [rax + 1]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x41a	        0x488955f0	             mov qword [rbp - 0x10], rdx	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x41e	           0xfb600	                   movzx eax, byte [rax]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x421	           0xfb6c0	                           movzx eax, al	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x424	          0x8945e0	             mov dword [rbp - 0x20], eax	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x427	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x42b	            0x7e36	                           jle 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x42d	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x434	            0x7f2d	                            jg 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x436	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x439	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x43c	            0x7d06	                           jge 0x4000484	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x43e	        0x837de0ff	cmp dword [rbp - 0x20], 0xffffffffffffffff	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x442	            0x751f	                           jne 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x444	    0x817de0ff0000	           cmp dword [rbp - 0x20], 0xff 	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x44b	            0x7f16	                            jg 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x44d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x451	           0xfb600	                   movzx eax, byte [rax]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x454	            0x84c0	                             test al, al	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x456	            0x7415	                            je 0x40004ad	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x458	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x45c	           0xfb600	                   movzx eax, byte [rax]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x45f	            0x3c2c	                            cmp al, 0x2c	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x461	            0x740a	                            je 0x40004ad	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x463	      0xb800000000	                              mov eax, 0	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x468	      0xe91e030000	                           jmp 0x40007cb	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x46d	        0x837de0ff	cmp dword [rbp - 0x20], 0xffffffffffffffff	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x471	     0xf85a7020000	                           jne 0x400075e	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x477	        0x837ddc40	           cmp dword [rbp - 0x24], 0x40 	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x47b	            0x751a	                           jne 0x40004d7	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x47d	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       225	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x484	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       226	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x48b	    0xc745e0ff0000	           mov dword [rbp - 0x20], 0xff 	       227	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x492	      0xe987020000	                           jmp 0x400075e	       227	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x497	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       230	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	ELSE_11
0x49a	          0x8945e0	             mov dword [rbp - 0x20], eax	       230	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	ELSE_11
0x49d	      0xe97c020000	                           jmp 0x400075e	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4a2	        0x837dec00	               cmp dword [rbp - 0x14], 0	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4a6	            0x744a	                            je 0x4000532	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4a8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4ab	            0x89c7	                            mov edi, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4ad	      0xe800000000	                          call 0x40004f2	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4b2	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4b4	            0x753c	                           jne 0x4000532	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4b6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4b9	            0x89c7	                            mov edi, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4bb	      0xe800000000	                          call 0x4000500	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4c0	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4c2	            0x752e	                           jne 0x4000532	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4c4	    0x8b0500000000	            mov eax, dword [0x0400050a] 	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4ca	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4cc	     0xf8448020000	                            je 0x400075a	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4d2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4d5	            0x89c7	                            mov edi, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4d7	      0xe800000000	                          call 0x400051c	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4dc	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4de	            0x7512	                           jne 0x4000532	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4e0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4e3	            0x89c7	                            mov edi, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4e5	      0xe800000000	                          call 0x400052a	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4ea	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4ec	     0xf8428020000	                            je 0x400075a	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_16
0x4f2	        0x837de400	               cmp dword [rbp - 0x1c], 0	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x4f6	            0x7548	                           jne 0x4000580	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x4f8	        0x837de800	               cmp dword [rbp - 0x18], 0	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4fc	            0x7421	                            je 0x400055f	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4fe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x501	            0x4898	                                    cdqe	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x503	     0xfb680000000	                   movzx eax, byte [rax]	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x50a	          0x83e0df	                     and eax, 0xffffffdf	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x50d	            0x89c2	                            mov edx, eax	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x50f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x512	            0x4898	                                    cdqe	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x514	    0x889000000000	                      mov byte [rax], dl	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x51a	      0xe9fb010000	                           jmp 0x400075a	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x51f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x522	            0x4898	                                    cdqe	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x524	     0xfb680000000	                   movzx eax, byte [rax]	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x52b	          0x83c820	                            or eax, 0x20	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x52e	            0x89c2	                            mov edx, eax	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x530	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x533	            0x4898	                                    cdqe	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x535	    0x889000000000	                      mov byte [rax], dl	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x53b	      0xe9da010000	                           jmp 0x400075a	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x540	        0x837de401	               cmp dword [rbp - 0x1c], 1	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x544	     0xf85f4000000	                           jne 0x400067e	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x54a	        0x837ddc1f	           cmp dword [rbp - 0x24], 0x1f 	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x54e	            0x7e34	                           jle 0x40005c4	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x550	        0x837ddc7e	           cmp dword [rbp - 0x24], 0x7e 	       254	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x554	            0x7f2e	                            jg 0x40005c4	       254	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x556	    0x8b0500000000	            mov eax, dword [0x0400059c] 	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x55c	            0x85c0	                           test eax, eax	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x55e	     0xf84b6010000	                            je 0x400075a	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x564	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x567	            0x89c7	                            mov edi, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x569	      0xe800000000	                          call 0x40005ae	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x56e	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x570	            0x7512	                           jne 0x40005c4	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x572	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x575	            0x89c7	                            mov edi, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x577	      0xe800000000	                          call 0x40005bc	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x57c	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x57e	     0xf8496010000	                            je 0x400075a	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_18
0x584	    0x8b0500000000	            mov eax, dword [0x040005ca] 	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x58a	            0x85c0	                           test eax, eax	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x58c	            0x7414	                            je 0x40005e2	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x58e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x591	            0x4898	                                    cdqe	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x593	     0xfb680000000	                   movzx eax, byte [rax]	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x59a	            0x3c02	                               cmp al, 2	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x59c	     0xf8478010000	                            je 0x400075a	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_19
0x5a2	        0x837de800	               cmp dword [rbp - 0x18], 0	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5a6	            0x7458	                            je 0x4000640	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5a8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5ab	            0x4898	                                    cdqe	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5ad	     0xfb680000000	                   movzx eax, byte [rax]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5b4	          0x83e0f8	                     and eax, 0xfffffff8	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5b7	            0x89c2	                            mov edx, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5b9	    0x8b0500000000	            mov eax, dword [0x040005ff] 	       271	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5bf	          0x83e004	                              and eax, 4	       271	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5c2	            0x85c0	                           test eax, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5c4	            0x7407	                            je 0x400060d	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5c6	      0xb804000000	                              mov eax, 4	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5cb	            0xeb05	                           jmp 0x4000612	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5cd	      0xb802000000	                              mov eax, 2	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5d2	             0x1c2	                            add edx, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5d4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5d7	            0x4898	                                    cdqe	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5d9	    0x889000000000	                      mov byte [rax], dl	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5df	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5e2	            0x4898	                                    cdqe	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5e4	     0xfb680000000	                   movzx eax, byte [rax]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5eb	          0x83e0ef	                     and eax, 0xffffffef	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5ee	            0x89c2	                            mov edx, eax	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5f0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5f3	            0x4898	                                    cdqe	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5f5	    0x889000000000	                      mov byte [rax], dl	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x5fb	      0xe91a010000	                           jmp 0x400075a	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x600	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x603	            0x4898	                                    cdqe	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x605	     0xfb680000000	                   movzx eax, byte [rax]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x60c	          0x83e0f8	                     and eax, 0xfffffff8	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x60f	          0x8d5001	                      lea edx, [rax + 1]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x612	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x615	            0x4898	                                    cdqe	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x617	    0x889000000000	                      mov byte [rax], dl	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x61d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x620	            0x4898	                                    cdqe	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x622	     0xfb680000000	                   movzx eax, byte [rax]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x629	          0x83c810	                            or eax, 0x10	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x62c	            0x89c2	                            mov edx, eax	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x62e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x631	            0x4898	                                    cdqe	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x633	    0x889000000000	                      mov byte [rax], dl	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x639	      0xe9dc000000	                           jmp 0x400075a	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x63e	        0x837de402	               cmp dword [rbp - 0x1c], 2	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x642	            0x7548	                           jne 0x40006cc	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x644	        0x837de800	               cmp dword [rbp - 0x18], 0	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x648	            0x7421	                            je 0x40006ab	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x64a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x64d	            0x4898	                                    cdqe	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x64f	     0xfb680000000	                   movzx eax, byte [rax]	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x656	          0x83e0bf	                     and eax, 0xffffffbf	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x659	            0x89c2	                            mov edx, eax	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x65b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x65e	            0x4898	                                    cdqe	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x660	    0x889000000000	                      mov byte [rax], dl	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x666	      0xe9af000000	                           jmp 0x400075a	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x66b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x66e	            0x4898	                                    cdqe	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x670	     0xfb680000000	                   movzx eax, byte [rax]	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x677	          0x83c840	                            or eax, 0x40	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x67a	            0x89c2	                            mov edx, eax	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x67c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x67f	            0x4898	                                    cdqe	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x681	    0x889000000000	                      mov byte [rax], dl	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x687	      0xe98e000000	                           jmp 0x400075a	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x68c	        0x837de800	               cmp dword [rbp - 0x18], 0	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x690	            0x7446	                            je 0x4000718	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x692	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x695	          0xc1e803	                              shr eax, 3	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x698	            0x89c6	                            mov esi, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x69a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x69d	          0xc1e803	                              shr eax, 3	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6a0	            0x89c2	                            mov edx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6a6	            0x89d2	                            mov edx, edx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6a8	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6b0	            0x89c2	                            mov edx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6b2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6b5	          0x83e007	                              and eax, 7	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6b8	      0xbf01000000	                              mov edi, 1	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6bd	            0x89c1	                            mov ecx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6bf	            0xd3e7	                             shl edi, cl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6c1	            0x89f8	                            mov eax, edi	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6c3	            0xf7d0	                                 not eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6c5	            0x21d0	                            and eax, edx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6c7	            0x89c1	                            mov ecx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6cd	            0x89f2	                            mov edx, esi	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6cf	    0x888c10a00900	        mov byte [rax + rdx + 0x9a0], cl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6d6	            0xeb42	                           jmp 0x400075a	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_20
0x6d8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6db	          0xc1e803	                              shr eax, 3	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6de	            0x89c6	                            mov esi, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6e0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6e3	          0xc1e803	                              shr eax, 3	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6e6	            0x89c2	                            mov edx, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6ec	            0x89d2	                            mov edx, edx	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6ee	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6f6	            0x89c7	                            mov edi, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6f8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6fb	          0x83e007	                              and eax, 7	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x6fe	      0xba01000000	                              mov edx, 1	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x703	            0x89c1	                            mov ecx, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x705	            0xd3e2	                             shl edx, cl	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x707	            0x89d0	                            mov eax, edx	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x709	             0x9f8	                             or eax, edi	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x70b	            0x89c1	                            mov ecx, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x70d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x711	            0x89f2	                            mov edx, esi	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x713	    0x888c10a00900	        mov byte [rax + rdx + 0x9a0], cl	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	CALL_21
0x71a	        0x8345dc01	               add dword [rbp - 0x24], 1	       296	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x71e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x721	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x724	     0xf8e78fdffff	                           jle 0x40004e2	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x72a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x72e	           0xfb600	                   movzx eax, byte [rax]	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x731	           0xfb6c0	                           movzx eax, al	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x734	          0x8945dc	             mov dword [rbp - 0x24], eax	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x737	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_22
0x73b	          0x4889c7	                            mov rdi, rax	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_22
0x73e	      0xe800000000	                          call 0x4000783	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_22
0x743	        0x488945f0	             mov qword [rbp - 0x10], rax	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_22
0x747	        0x837ddc2c	           cmp dword [rbp - 0x24], 0x2c 	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x74b	            0x7512	                           jne 0x400079f	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x74d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x751	           0xfb600	                   movzx eax, byte [rax]	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x754	            0x84c0	                             test al, al	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x756	            0x7507	                           jne 0x400079f	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x758	      0xb800000000	                              mov eax, 0	       303	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x75d	            0xeb2c	                           jmp 0x40007cb	       303	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x75f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x763	           0xfb600	                   movzx eax, byte [rax]	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x766	            0x84c0	                             test al, al	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x768	     0xf85abfbffff	                           jne 0x4000359	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x76e	        0x8345e401	               add dword [rbp - 0x1c], 1	       168	charset.c	FUNCTION_2	FOR_3
0x772	        0x837de403	               cmp dword [rbp - 0x1c], 3	       168	charset.c	FUNCTION_2	FOR_3
0x776	     0xf8e47fbffff	                           jle 0x4000303	       168	charset.c	FUNCTION_2	FOR_3
0x77c	    0xc70500000000	               mov dword [0x040007c6], 1	       306	charset.c	FUNCTION_2
0x786	      0xb801000000	                              mov eax, 1	       307	charset.c	FUNCTION_2
0x78b	        0x488b75f8	                mov rsi, qword [rbp - 8]	       308	charset.c	FUNCTION_2
0x78f	    0x644833342528	                xor rsi, qword fs:[0x28]	       308	charset.c	FUNCTION_2
0x798	            0x7405	                            je 0x40007df	       308	charset.c	FUNCTION_2
0x79a	      0xe800000000	                          call 0x40007df	       308	charset.c	FUNCTION_2
0x79f	              0xc9	                                   leave	       308	charset.c	FUNCTION_2
0x7a0	              0xc3	                                     ret	       308	charset.c	FUNCTION_2
transchar_nonprint	IF,9:DO,0:SWITCH,0:ELSE,8:WHILE,0:functions,0:CALL,6:FOR,0	81
0xffb	              0x55	                                push rbp	       611	charset.c	FUNCTION_8
0xffc	          0x4889e5	                            mov rbp, rsp	       611	charset.c	FUNCTION_8
0xfff	        0x4883ec10	                           sub rsp, 0x10	       611	charset.c	FUNCTION_8
0x1003	        0x48897df8	                mov qword [rbp - 8], rdi	       611	charset.c	FUNCTION_8
0x1007	          0x8975f4	              mov dword [rbp - 0xc], esi	       611	charset.c	FUNCTION_8
0x100a	        0x837df40a	              cmp dword [rbp - 0xc], 0xa	       612	charset.c	FUNCTION_8	IF_1
0x100e	            0x7509	                           jne 0x4001059	       612	charset.c	FUNCTION_8	IF_1
0x1010	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       613	charset.c	FUNCTION_8	IF_1
0x1017	            0xeb21	                           jmp 0x400107a	       613	charset.c	FUNCTION_8	IF_1
0x1019	        0x837df40d	              cmp dword [rbp - 0xc], 0xd	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x101d	            0x751b	                           jne 0x400107a	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x101f	    0x488b05000000	            mov rax, qword [0x04001066] 	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x1026	          0x4889c7	                            mov rdi, rax	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x1029	      0xe800000000	                          call 0x400106e	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x102e	          0x83f802	                              cmp eax, 2	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x1031	            0x7507	                           jne 0x400107a	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x1033	    0xc745f40a0000	              mov dword [rbp - 0xc], 0xa	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x103a	    0x8b0500000000	            mov eax, dword [0x04001080] 	       617	charset.c	FUNCTION_8	IF_3
0x1040	          0x83e004	                              and eax, 4	       617	charset.c	FUNCTION_8	IF_3
0x1043	            0x85c0	                           test eax, eax	       617	charset.c	FUNCTION_8	IF_3
0x1045	            0x7416	                            je 0x400109d	       617	charset.c	FUNCTION_8	IF_3
0x1047	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       618	charset.c	FUNCTION_8	CALL_2
0x104a	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	charset.c	FUNCTION_8	CALL_2
0x104e	            0x89d6	                            mov esi, edx	       618	charset.c	FUNCTION_8	CALL_2
0x1050	          0x4889c7	                            mov rdi, rax	       618	charset.c	FUNCTION_8	CALL_2
0x1053	      0xe800000000	                          call 0x4001098	       618	charset.c	FUNCTION_8	CALL_2
0x1058	      0xe9ad000000	                           jmp 0x400114a	       674	charset.c	FUNCTION_8
0x105d	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1061	            0x7f27	                            jg 0x40010ca	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1063	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1067	          0xc6005e	                    mov byte [rax], 0x5e	       627	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x106a	        0x488b45f8	                mov rax, qword [rbp - 8]	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x106e	        0x4883c001	                              add rax, 1	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1072	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1075	          0x83f240	                           xor edx, 0x40	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1078	            0x8810	                      mov byte [rax], dl	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x107a	        0x488b45f8	                mov rax, qword [rbp - 8]	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x107e	        0x4883c002	                              add rax, 2	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1082	          0xc60000	                       mov byte [rax], 0	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x1085	      0xe980000000	                           jmp 0x400114a	       674	charset.c	FUNCTION_8
0x108a	    0x8b0500000000	            mov eax, dword [0x040010d0] 	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x1090	            0x85c0	                           test eax, eax	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x1092	            0x7419	                            je 0x40010ed	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x1094	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x1098	            0x7e13	                           jle 0x40010ed	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x109a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x109d	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x10a1	            0x89d6	                            mov esi, edx	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x10a3	          0x4889c7	                            mov rdi, rax	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x10a6	      0xe800000000	                          call 0x40010eb	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x10ab	            0xeb5d	                           jmp 0x400114a	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x10ad	    0x817df49f0000	            cmp dword [rbp - 0xc], 0x9f 	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10b4	            0x7e2d	                           jle 0x4001123	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10b6	    0x817df4fe0000	            cmp dword [rbp - 0xc], 0xfe 	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10bd	            0x7f24	                            jg 0x4001123	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       648	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10c3	          0xc6007c	                    mov byte [rax], 0x7c	       648	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10ca	        0x4883c001	                              add rax, 1	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10ce	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10d1	          0x83c280	             add edx, 0xffffffffffffff80	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10d4	            0x8810	                      mov byte [rax], dl	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10da	        0x4883c002	                              add rax, 2	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10de	          0xc60000	                       mov byte [rax], 0	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10e1	            0xeb27	                           jmp 0x400114a	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x10e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       666	charset.c	FUNCTION_8	ELSE_8
0x10e7	          0xc6007e	                    mov byte [rax], 0x7e	       666	charset.c	FUNCTION_8	ELSE_8
0x10ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       670	charset.c	FUNCTION_8	ELSE_8
0x10ee	        0x4883c001	                              add rax, 1	       670	charset.c	FUNCTION_8	ELSE_8
0x10f2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       670	charset.c	FUNCTION_8	ELSE_8
0x10f5	          0x83c280	             add edx, 0xffffffffffffff80	       670	charset.c	FUNCTION_8	ELSE_8
0x10f8	          0x83f240	                           xor edx, 0x40	       670	charset.c	FUNCTION_8	ELSE_8
0x10fb	            0x8810	                      mov byte [rax], dl	       670	charset.c	FUNCTION_8	ELSE_8
0x10fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       672	charset.c	FUNCTION_8	ELSE_8
0x1101	        0x4883c002	                              add rax, 2	       672	charset.c	FUNCTION_8	ELSE_8
0x1105	          0xc60000	                       mov byte [rax], 0	       672	charset.c	FUNCTION_8	ELSE_8
0x1108	            0xeb00	                           jmp 0x400114a	       674	charset.c	FUNCTION_8
0x110a	              0x90	                                     nop	       674	charset.c	FUNCTION_8
0x110b	              0xc9	                                   leave	       674	charset.c	FUNCTION_8
0x110c	              0xc3	                                     ret	       674	charset.c	FUNCTION_8
vim_islower	IF,6:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,3:FOR,0	44
0x2bd5	              0x55	                                push rbp	      1685	charset.c	FUNCTION_51
0x2bd6	          0x4889e5	                            mov rbp, rsp	      1685	charset.c	FUNCTION_51
0x2bd9	        0x4883ec10	                           sub rsp, 0x10	      1685	charset.c	FUNCTION_51
0x2bdd	          0x897dfc	                mov dword [rbp - 4], edi	      1685	charset.c	FUNCTION_51
0x2be0	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1686	charset.c	FUNCTION_51	IF_1
0x2be4	            0x7f07	                            jg 0x4002c2d	      1686	charset.c	FUNCTION_51	IF_1
0x2be6	      0xb800000000	                              mov eax, 0	      1687	charset.c	FUNCTION_51	IF_1
0x2beb	            0xeb72	                           jmp 0x4002c9f	      1687	charset.c	FUNCTION_51	IF_1
0x2bed	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1688	charset.c	FUNCTION_51	IF_2
0x2bf1	            0x7e4d	                           jle 0x4002c80	      1688	charset.c	FUNCTION_51	IF_2
0x2bf3	    0x8b0500000000	            mov eax, dword [0x04002c39] 	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x2bf9	            0x85c0	                           test eax, eax	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x2bfb	            0x740c	                            je 0x4002c49	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x2bfd	          0x8b45fc	                mov eax, dword [rbp - 4]	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x2c00	            0x89c7	                            mov edi, eax	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x2c02	      0xe800000000	                          call 0x4002c47	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x2c07	            0xeb56	                           jmp 0x4002c9f	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x2c09	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1692	charset.c	FUNCTION_51	IF_2	IF_4
0x2c10	            0x7e07	                           jle 0x4002c59	      1692	charset.c	FUNCTION_51	IF_2	IF_4
0x2c12	      0xb800000000	                              mov eax, 0	      1699	charset.c	FUNCTION_51	IF_2	IF_4
0x2c17	            0xeb46	                           jmp 0x4002c9f	      1699	charset.c	FUNCTION_51	IF_2	IF_4
0x2c19	    0x8b0500000000	            mov eax, dword [0x04002c5f] 	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x2c1f	            0x85c0	                           test eax, eax	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x2c21	            0x741d	                            je 0x4002c80	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x2c23	          0x8b45fc	                mov eax, dword [rbp - 4]	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c26	            0x4898	                                    cdqe	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c28	     0xfb680000000	                   movzx eax, byte [rax]	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c2f	           0xfb6c0	                           movzx eax, al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c32	          0x83e06c	                           and eax, 0x6c	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c35	          0x83f86c	                           cmp eax, 0x6c	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c38	           0xf94c0	                                 sete al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c3b	           0xfb6c0	                           movzx eax, al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c3e	            0xeb1f	                           jmp 0x4002c9f	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x2c40	      0xe800000000	                          call 0x4002c85	      1704	charset.c	FUNCTION_51	CALL_3
0x2c45	          0x488b00	                    mov rax, qword [rax]	      1704	charset.c	FUNCTION_51	CALL_3
0x2c48	          0x8b55fc	                mov edx, dword [rbp - 4]	      1704	charset.c	FUNCTION_51	CALL_3
0x2c4b	          0x4863d2	                         movsxd rdx, edx	      1704	charset.c	FUNCTION_51	CALL_3
0x2c4e	          0x4801d2	                            add rdx, rdx	      1704	charset.c	FUNCTION_51	CALL_3
0x2c51	          0x4801d0	                            add rax, rdx	      1704	charset.c	FUNCTION_51	CALL_3
0x2c54	           0xfb700	                   movzx eax, word [rax]	      1704	charset.c	FUNCTION_51	CALL_3
0x2c57	           0xfb7c0	                           movzx eax, ax	      1704	charset.c	FUNCTION_51	CALL_3
0x2c5a	      0x2500020000	                          and eax, 0x200	      1704	charset.c	FUNCTION_51	CALL_3
0x2c5f	              0xc9	                                   leave	      1705	charset.c	FUNCTION_51
0x2c60	              0xc3	                                     ret	      1705	charset.c	FUNCTION_51
skiptowhite	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,0:FOR,0	20
0x2e78	              0x55	                                push rbp	      1789	charset.c	FUNCTION_55
0x2e79	          0x4889e5	                            mov rbp, rsp	      1789	charset.c	FUNCTION_55
0x2e7c	        0x48897df8	                mov qword [rbp - 8], rdi	      1789	charset.c	FUNCTION_55
0x2e80	            0xeb05	                           jmp 0x4002ec7	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e82	      0x488345f801	                  add qword [rbp - 8], 1	      1791	charset.c	FUNCTION_55	WHILE_1
0x2e87	        0x488b45f8	                mov rax, qword [rbp - 8]	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e8b	           0xfb600	                   movzx eax, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e8e	            0x3c20	                            cmp al, 0x20	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e90	            0x7416	                            je 0x4002ee8	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e92	        0x488b45f8	                mov rax, qword [rbp - 8]	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e96	           0xfb600	                   movzx eax, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e99	            0x3c09	                               cmp al, 9	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e9b	            0x740b	                            je 0x4002ee8	      1790	charset.c	FUNCTION_55	WHILE_1
0x2e9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1790	charset.c	FUNCTION_55	WHILE_1
0x2ea1	           0xfb600	                   movzx eax, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x2ea4	            0x84c0	                             test al, al	      1790	charset.c	FUNCTION_55	WHILE_1
0x2ea6	            0x75da	                           jne 0x4002ec2	      1790	charset.c	FUNCTION_55	WHILE_1
0x2ea8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	charset.c	FUNCTION_55
0x2eac	              0x5d	                                 pop rbp	      1793	charset.c	FUNCTION_55
0x2ead	              0xc3	                                     ret	      1793	charset.c	FUNCTION_55
ptr2cells	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	24
0x12ef	              0x55	                                push rbp	       761	charset.c	FUNCTION_13
0x12f0	          0x4889e5	                            mov rbp, rsp	       761	charset.c	FUNCTION_13
0x12f3	        0x4883ec10	                           sub rsp, 0x10	       761	charset.c	FUNCTION_13
0x12f7	        0x48897df8	                mov qword [rbp - 8], rdi	       761	charset.c	FUNCTION_13
0x12fb	    0x8b0500000000	            mov eax, dword [0x04001341] 	       764	charset.c	FUNCTION_13	IF_1
0x1301	            0x85c0	                           test eax, eax	       764	charset.c	FUNCTION_13	IF_1
0x1303	            0x7419	                            je 0x400135e	       764	charset.c	FUNCTION_13	IF_1
0x1305	        0x488b45f8	                mov rax, qword [rbp - 8]	       764	charset.c	FUNCTION_13	IF_1
0x1309	           0xfb600	                   movzx eax, byte [rax]	       764	charset.c	FUNCTION_13	IF_1
0x130c	            0x84c0	                             test al, al	       764	charset.c	FUNCTION_13	IF_1
0x130e	            0x790e	                           jns 0x400135e	       764	charset.c	FUNCTION_13	IF_1
0x1310	        0x488b45f8	                mov rax, qword [rbp - 8]	       765	charset.c	FUNCTION_13	CALL_1
0x1314	          0x4889c7	                            mov rdi, rax	       765	charset.c	FUNCTION_13	CALL_1
0x1317	      0xe800000000	                          call 0x400135c	       765	charset.c	FUNCTION_13	CALL_1
0x131c	            0xeb19	                           jmp 0x4001377	       765	charset.c	FUNCTION_13	CALL_1
0x131e	        0x488b45f8	                mov rax, qword [rbp - 8]	       768	charset.c	FUNCTION_13
0x1322	           0xfb600	                   movzx eax, byte [rax]	       768	charset.c	FUNCTION_13
0x1325	           0xfb6c0	                           movzx eax, al	       768	charset.c	FUNCTION_13
0x1328	            0x4898	                                    cdqe	       768	charset.c	FUNCTION_13
0x132a	     0xfb680000000	                   movzx eax, byte [rax]	       768	charset.c	FUNCTION_13
0x1331	           0xfb6c0	                           movzx eax, al	       768	charset.c	FUNCTION_13
0x1334	          0x83e007	                              and eax, 7	       768	charset.c	FUNCTION_13
0x1337	              0xc9	                                   leave	       769	charset.c	FUNCTION_13
0x1338	              0xc3	                                     ret	       769	charset.c	FUNCTION_13
vim_isIDc	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	19
0x15aa	              0x55	                                push rbp	       884	charset.c	FUNCTION_21
0x15ab	          0x4889e5	                            mov rbp, rsp	       884	charset.c	FUNCTION_21
0x15ae	          0x897dfc	                mov dword [rbp - 4], edi	       884	charset.c	FUNCTION_21
0x15b1	        0x837dfc00	                  cmp dword [rbp - 4], 0	       885	charset.c	FUNCTION_21
0x15b5	            0x7e26	                           jle 0x400161d	       885	charset.c	FUNCTION_21
0x15b7	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       885	charset.c	FUNCTION_21
0x15be	            0x7f1d	                            jg 0x400161d	       885	charset.c	FUNCTION_21
0x15c0	          0x8b45fc	                mov eax, dword [rbp - 4]	       885	charset.c	FUNCTION_21
0x15c3	            0x4898	                                    cdqe	       885	charset.c	FUNCTION_21
0x15c5	     0xfb680000000	                   movzx eax, byte [rax]	       885	charset.c	FUNCTION_21
0x15cc	           0xfb6c0	                           movzx eax, al	       885	charset.c	FUNCTION_21
0x15cf	          0x83e020	                           and eax, 0x20	       885	charset.c	FUNCTION_21
0x15d2	            0x85c0	                           test eax, eax	       885	charset.c	FUNCTION_21
0x15d4	            0x7407	                            je 0x400161d	       885	charset.c	FUNCTION_21
0x15d6	      0xb801000000	                              mov eax, 1	       885	charset.c	FUNCTION_21
0x15db	            0xeb05	                           jmp 0x4001622	       885	charset.c	FUNCTION_21
0x15dd	      0xb800000000	                              mov eax, 0	       885	charset.c	FUNCTION_21
0x15e2	              0x5d	                                 pop rbp	       886	charset.c	FUNCTION_21
0x15e3	              0xc3	                                     ret	       886	charset.c	FUNCTION_21
win_nolbr_chartabsize	IF,3:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,3:FOR,0	57
0x2036	              0x55	                                push rbp	      1219	charset.c	FUNCTION_33
0x2037	          0x4889e5	                            mov rbp, rsp	      1219	charset.c	FUNCTION_33
0x203a	        0x4883ec30	                           sub rsp, 0x30	      1219	charset.c	FUNCTION_33
0x203e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1219	charset.c	FUNCTION_33
0x2042	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1219	charset.c	FUNCTION_33
0x2046	          0x8955dc	             mov dword [rbp - 0x24], edx	      1219	charset.c	FUNCTION_33
0x2049	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1219	charset.c	FUNCTION_33
0x204d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1222	charset.c	FUNCTION_33	IF_1
0x2051	           0xfb600	                   movzx eax, byte [rax]	      1222	charset.c	FUNCTION_33	IF_1
0x2054	            0x3c09	                               cmp al, 9	      1222	charset.c	FUNCTION_33	IF_1
0x2056	            0x7538	                           jne 0x40020d0	      1222	charset.c	FUNCTION_33	IF_1
0x2058	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1222	charset.c	FUNCTION_33	IF_1
0x205c	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1222	charset.c	FUNCTION_33	IF_1
0x2062	            0x85c0	                           test eax, eax	      1222	charset.c	FUNCTION_33	IF_1
0x2064	            0x740a	                            je 0x40020b0	      1222	charset.c	FUNCTION_33	IF_1
0x2066	    0x8b0500000000	            mov eax, dword [0x040020ac] 	      1222	charset.c	FUNCTION_33	IF_1
0x206c	            0x85c0	                           test eax, eax	      1222	charset.c	FUNCTION_33	IF_1
0x206e	            0x7420	                            je 0x40020d0	      1222	charset.c	FUNCTION_33	IF_1
0x2070	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1224	charset.c	FUNCTION_33	IF_1
0x2074	        0x488b4008	                mov rax, qword [rax + 8]	      1224	charset.c	FUNCTION_33	IF_1
0x2078	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1224	charset.c	FUNCTION_33	IF_1
0x207f	          0x8945fc	                mov dword [rbp - 4], eax	      1224	charset.c	FUNCTION_33	IF_1
0x2082	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1225	charset.c	FUNCTION_33	IF_1
0x2085	              0x99	                                     cdq	      1225	charset.c	FUNCTION_33	IF_1
0x2086	          0xf77dfc	                    idiv dword [rbp - 4]	      1225	charset.c	FUNCTION_33	IF_1
0x2089	          0x8b45fc	                mov eax, dword [rbp - 4]	      1225	charset.c	FUNCTION_33	IF_1
0x208c	            0x29d0	                            sub eax, edx	      1225	charset.c	FUNCTION_33	IF_1
0x208e	            0xeb5c	                           jmp 0x400212c	      1225	charset.c	FUNCTION_33	IF_1
0x2090	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1227	charset.c	FUNCTION_33	CALL_1
0x2094	          0x4889c7	                            mov rdi, rax	      1227	charset.c	FUNCTION_33	CALL_1
0x2097	      0xe800000000	                          call 0x40020dc	      1227	charset.c	FUNCTION_33	CALL_1
0x209c	          0x8945fc	                mov dword [rbp - 4], eax	      1227	charset.c	FUNCTION_33	CALL_1
0x209f	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20a3	            0x7544	                           jne 0x4002129	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20a9	           0xfb600	                   movzx eax, byte [rax]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20ac	           0xfb6c0	                           movzx eax, al	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20af	            0x4898	                                    cdqe	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20b1	     0xfb680000000	                   movzx eax, byte [rax]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20b8	            0x3c01	                               cmp al, 1	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20ba	            0x7e2d	                           jle 0x4002129	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20bc	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20c3	            0x89d6	                            mov esi, edx	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20c5	          0x4889c7	                            mov rdi, rax	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20c8	      0xe800000000	                          call 0x400210d	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20cd	            0x85c0	                           test eax, eax	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20cf	            0x7418	                            je 0x4002129	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x20d1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1232	charset.c	FUNCTION_33	IF_2	IF_3
0x20d6	            0x740a	                            je 0x4002122	      1232	charset.c	FUNCTION_33	IF_2	IF_3
0x20d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	charset.c	FUNCTION_33	IF_2	IF_3
0x20dc	    0xc70001000000	                      mov dword [rax], 1	      1233	charset.c	FUNCTION_33	IF_2	IF_3
0x20e2	      0xb803000000	                              mov eax, 3	      1234	charset.c	FUNCTION_33	IF_2
0x20e7	            0xeb03	                           jmp 0x400212c	      1234	charset.c	FUNCTION_33	IF_2
0x20e9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1236	charset.c	FUNCTION_33
0x20ec	              0xc9	                                   leave	      1237	charset.c	FUNCTION_33
0x20ed	              0xc3	                                     ret	      1237	charset.c	FUNCTION_33
getvcols	IF,4:DO,0:SWITCH,0:ELSE,4:WHILE,0:functions,0:CALL,5:FOR,0	121
0x2806	              0x55	                                push rbp	      1497	charset.c	FUNCTION_38
0x2807	          0x4889e5	                            mov rbp, rsp	      1497	charset.c	FUNCTION_38
0x280a	        0x4883ec50	                           sub rsp, 0x50	      1497	charset.c	FUNCTION_38
0x280e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1497	charset.c	FUNCTION_38
0x2812	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1497	charset.c	FUNCTION_38
0x2816	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1497	charset.c	FUNCTION_38
0x281a	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1497	charset.c	FUNCTION_38
0x281e	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      1497	charset.c	FUNCTION_38
0x2822	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	charset.c	FUNCTION_38
0x282b	        0x488945f8	                mov qword [rbp - 8], rax	      1497	charset.c	FUNCTION_38
0x282f	            0x31c0	                            xor eax, eax	      1497	charset.c	FUNCTION_38
0x2831	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2835	          0x488b10	                    mov rdx, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2838	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x283c	          0x488b00	                    mov rax, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x283f	          0x4839c2	                            cmp rdx, rax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2842	            0x7416	                            je 0x400289a	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2844	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2848	          0x488b10	                    mov rdx, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x284b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x284f	          0x488b00	                    mov rax, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2852	          0x4839c2	                            cmp rdx, rax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2855	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2858	            0xeb3a	                           jmp 0x40028d4	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x285a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x285e	          0x8b5008	                mov edx, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2861	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2865	          0x8b4008	                mov eax, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2868	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x286a	            0x7415	                            je 0x40028c1	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x286c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2870	          0x8b5008	                mov edx, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2873	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2877	          0x8b4008	                mov eax, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x287a	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x287c	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x287f	            0xeb13	                           jmp 0x40028d4	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2881	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2885	          0x8b500c	              mov edx, dword [rax + 0xc]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2888	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x288c	          0x8b400c	              mov eax, dword [rax + 0xc]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x288f	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2891	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2894	            0x84c0	                             test al, al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2896	            0x7442	                            je 0x400291a	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x2898	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x289c	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x28a0	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x28a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x28a8	          0x4989c8	                             mov r8, rcx	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x28ab	      0xb900000000	                              mov ecx, 0	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x28b0	          0x4889c7	                            mov rdi, rax	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x28b3	      0xe800000000	                          call 0x40028f8	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x28b8	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28bc	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28c0	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28c8	          0x4989c8	                             mov r8, rcx	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28cb	      0xb900000000	                              mov ecx, 0	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28d0	          0x4889c7	                            mov rdi, rax	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28d3	      0xe800000000	                          call 0x4002918	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28d8	            0xeb40	                           jmp 0x400295a	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x28da	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28de	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28e2	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28ea	          0x4989c8	                             mov r8, rcx	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28ed	      0xb900000000	                              mov ecx, 0	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28f2	          0x4889c7	                            mov rdi, rax	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28f5	      0xe800000000	                          call 0x400293a	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x28fa	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x28fe	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x2902	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x2906	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x290a	          0x4989c8	                             mov r8, rcx	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x290d	      0xb900000000	                              mov ecx, 0	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x2912	          0x4889c7	                            mov rdi, rax	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x2915	      0xe800000000	                          call 0x400295a	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x291a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1510	charset.c	FUNCTION_38	IF_2
0x291d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1510	charset.c	FUNCTION_38	IF_2
0x2920	            0x39c2	                            cmp edx, eax	      1510	charset.c	FUNCTION_38	IF_2
0x2922	            0x7d0b	                           jge 0x400296f	      1510	charset.c	FUNCTION_38	IF_2
0x2924	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1511	charset.c	FUNCTION_38	IF_2
0x2927	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1511	charset.c	FUNCTION_38	IF_2
0x292b	            0x8910	                    mov dword [rax], edx	      1511	charset.c	FUNCTION_38	IF_2
0x292d	            0xeb09	                           jmp 0x4002978	      1511	charset.c	FUNCTION_38	IF_2
0x292f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1513	charset.c	FUNCTION_38	ELSE_2
0x2932	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1513	charset.c	FUNCTION_38	ELSE_2
0x2936	            0x8910	                    mov dword [rax], edx	      1513	charset.c	FUNCTION_38	ELSE_2
0x2938	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x293b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x293e	            0x39c2	                            cmp edx, eax	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x2940	            0x7e34	                           jle 0x40029b6	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x2942	    0x488b05000000	            mov rax, qword [0x04002989] 	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2949	           0xfb600	                   movzx eax, byte [rax]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x294c	            0x3c65	                            cmp al, 0x65	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x294e	            0x751b	                           jne 0x40029ab	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2950	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2953	          0x8d50ff	                      lea edx, [rax - 1]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2956	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2959	            0x39c2	                            cmp edx, eax	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x295b	            0x7c0e	                            jl 0x40029ab	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x295d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2960	          0x8d50ff	                      lea edx, [rax - 1]	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2963	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2967	            0x8910	                    mov dword [rax], edx	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x2969	            0xeb14	                           jmp 0x40029bf	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x296b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x296e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x2972	            0x8910	                    mov dword [rax], edx	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x2974	            0xeb09	                           jmp 0x40029bf	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x2976	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x2979	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x297d	            0x8910	                    mov dword [rax], edx	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x297f	              0x90	                                     nop	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x2980	        0x488b45f8	                mov rax, qword [rbp - 8]	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x2984	    0x644833042528	                xor rax, qword fs:[0x28]	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x298d	            0x7405	                            je 0x40029d4	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x298f	      0xe800000000	                          call 0x40029d4	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x2994	              0xc9	                                   leave	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x2995	              0xc3	                                     ret	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
transchar_hex	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,4:FOR,0	67
0x110d	              0x55	                                push rbp	       678	charset.c	FUNCTION_9
0x110e	          0x4889e5	                            mov rbp, rsp	       678	charset.c	FUNCTION_9
0x1111	              0x53	                                push rbx	       678	charset.c	FUNCTION_9
0x1112	        0x4883ec28	                           sub rsp, 0x28	       678	charset.c	FUNCTION_9
0x1116	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       678	charset.c	FUNCTION_9
0x111a	          0x8975d4	             mov dword [rbp - 0x2c], esi	       678	charset.c	FUNCTION_9
0x111d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       679	charset.c	FUNCTION_9
0x1124	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       681	charset.c	FUNCTION_9
0x1128	          0xc6003c	                    mov byte [rax], 0x3c	       681	charset.c	FUNCTION_9
0x112b	    0x817dd4ff0000	           cmp dword [rbp - 0x2c], 0xff 	       683	charset.c	FUNCTION_9	IF_1
0x1132	            0x7e42	                           jle 0x40011b6	       683	charset.c	FUNCTION_9	IF_1
0x1134	        0x8345ec01	               add dword [rbp - 0x14], 1	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x1138	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x113b	          0x4863d0	                         movsxd rdx, eax	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x113e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x1142	        0x488d1c02	                    lea rbx, [rdx + rax]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x1146	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x1149	          0xc1e80c	                            shr eax, 0xc	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x114c	            0x89c7	                            mov edi, eax	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x114e	      0xe892000000	                         call sym.nr2hex	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x1153	            0x8803	                      mov byte [rbx], al	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x1155	        0x8345ec01	               add dword [rbp - 0x14], 1	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x1159	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x115c	          0x4863d0	                         movsxd rdx, eax	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x115f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x1163	        0x488d1c02	                    lea rbx, [rdx + rax]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x1167	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x116a	          0xc1e808	                              shr eax, 8	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x116d	            0x89c7	                            mov edi, eax	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x116f	      0xe871000000	                         call sym.nr2hex	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x1174	            0x8803	                      mov byte [rbx], al	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x1176	        0x8345ec01	               add dword [rbp - 0x14], 1	       689	charset.c	FUNCTION_9	CALL_3
0x117a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       689	charset.c	FUNCTION_9	CALL_3
0x117d	          0x4863d0	                         movsxd rdx, eax	       689	charset.c	FUNCTION_9	CALL_3
0x1180	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       689	charset.c	FUNCTION_9	CALL_3
0x1184	        0x488d1c02	                    lea rbx, [rdx + rax]	       689	charset.c	FUNCTION_9	CALL_3
0x1188	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       689	charset.c	FUNCTION_9	CALL_3
0x118b	          0xc1e804	                              shr eax, 4	       689	charset.c	FUNCTION_9	CALL_3
0x118e	            0x89c7	                            mov edi, eax	       689	charset.c	FUNCTION_9	CALL_3
0x1190	      0xe850000000	                         call sym.nr2hex	       689	charset.c	FUNCTION_9	CALL_3
0x1195	            0x8803	                      mov byte [rbx], al	       689	charset.c	FUNCTION_9	CALL_3
0x1197	        0x8345ec01	               add dword [rbp - 0x14], 1	       690	charset.c	FUNCTION_9	CALL_4
0x119b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       690	charset.c	FUNCTION_9	CALL_4
0x119e	          0x4863d0	                         movsxd rdx, eax	       690	charset.c	FUNCTION_9	CALL_4
0x11a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       690	charset.c	FUNCTION_9	CALL_4
0x11a5	        0x488d1c02	                    lea rbx, [rdx + rax]	       690	charset.c	FUNCTION_9	CALL_4
0x11a9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       690	charset.c	FUNCTION_9	CALL_4
0x11ac	            0x89c7	                            mov edi, eax	       690	charset.c	FUNCTION_9	CALL_4
0x11ae	      0xe832000000	                         call sym.nr2hex	       690	charset.c	FUNCTION_9	CALL_4
0x11b3	            0x8803	                      mov byte [rbx], al	       690	charset.c	FUNCTION_9	CALL_4
0x11b5	        0x8345ec01	               add dword [rbp - 0x14], 1	       691	charset.c	FUNCTION_9
0x11b9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       691	charset.c	FUNCTION_9
0x11bc	          0x4863d0	                         movsxd rdx, eax	       691	charset.c	FUNCTION_9
0x11bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       691	charset.c	FUNCTION_9
0x11c3	          0x4801d0	                            add rax, rdx	       691	charset.c	FUNCTION_9
0x11c6	          0xc6003e	                    mov byte [rax], 0x3e	       691	charset.c	FUNCTION_9
0x11c9	        0x8345ec01	               add dword [rbp - 0x14], 1	       692	charset.c	FUNCTION_9
0x11cd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       692	charset.c	FUNCTION_9
0x11d0	          0x4863d0	                         movsxd rdx, eax	       692	charset.c	FUNCTION_9
0x11d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       692	charset.c	FUNCTION_9
0x11d7	          0x4801d0	                            add rax, rdx	       692	charset.c	FUNCTION_9
0x11da	          0xc60000	                       mov byte [rax], 0	       692	charset.c	FUNCTION_9
0x11dd	              0x90	                                     nop	       693	charset.c	FUNCTION_9
0x11de	        0x4883c428	                           add rsp, 0x28	       693	charset.c	FUNCTION_9
0x11e2	              0x5b	                                 pop rbx	       693	charset.c	FUNCTION_9
0x11e3	              0x5d	                                 pop rbp	       693	charset.c	FUNCTION_9
0x11e4	              0xc3	                                     ret	       693	charset.c	FUNCTION_9
vim_isblankline	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	25
0x2f66	              0x55	                                push rbp	      1834	charset.c	FUNCTION_58
0x2f67	          0x4889e5	                            mov rbp, rsp	      1834	charset.c	FUNCTION_58
0x2f6a	        0x4883ec18	                           sub rsp, 0x18	      1834	charset.c	FUNCTION_58
0x2f6e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1834	charset.c	FUNCTION_58
0x2f72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1837	charset.c	FUNCTION_58	CALL_1
0x2f76	          0x4889c7	                            mov rdi, rax	      1837	charset.c	FUNCTION_58	CALL_1
0x2f79	      0xe800000000	                          call 0x4002fbe	      1837	charset.c	FUNCTION_58	CALL_1
0x2f7e	        0x488945f8	                mov qword [rbp - 8], rax	      1837	charset.c	FUNCTION_58	CALL_1
0x2f82	        0x488b45f8	                mov rax, qword [rbp - 8]	      1838	charset.c	FUNCTION_58
0x2f86	           0xfb600	                   movzx eax, byte [rax]	      1838	charset.c	FUNCTION_58
0x2f89	            0x84c0	                             test al, al	      1838	charset.c	FUNCTION_58
0x2f8b	            0x7416	                            je 0x4002fe3	      1838	charset.c	FUNCTION_58
0x2f8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1838	charset.c	FUNCTION_58
0x2f91	           0xfb600	                   movzx eax, byte [rax]	      1838	charset.c	FUNCTION_58
0x2f94	            0x3c0d	                             cmp al, 0xd	      1838	charset.c	FUNCTION_58
0x2f96	            0x740b	                            je 0x4002fe3	      1838	charset.c	FUNCTION_58
0x2f98	        0x488b45f8	                mov rax, qword [rbp - 8]	      1838	charset.c	FUNCTION_58
0x2f9c	           0xfb600	                   movzx eax, byte [rax]	      1838	charset.c	FUNCTION_58
0x2f9f	            0x3c0a	                             cmp al, 0xa	      1838	charset.c	FUNCTION_58
0x2fa1	            0x7507	                           jne 0x4002fea	      1838	charset.c	FUNCTION_58
0x2fa3	      0xb801000000	                              mov eax, 1	      1838	charset.c	FUNCTION_58
0x2fa8	            0xeb05	                           jmp 0x4002fef	      1838	charset.c	FUNCTION_58
0x2faa	      0xb800000000	                              mov eax, 0	      1838	charset.c	FUNCTION_58
0x2faf	              0xc9	                                   leave	      1839	charset.c	FUNCTION_58
0x2fb0	              0xc3	                                     ret	      1839	charset.c	FUNCTION_58
chartabsize	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	30
0x13e6	              0x55	                                push rbp	       827	charset.c	FUNCTION_16
0x13e7	          0x4889e5	                            mov rbp, rsp	       827	charset.c	FUNCTION_16
0x13ea	        0x4883ec20	                           sub rsp, 0x20	       827	charset.c	FUNCTION_16
0x13ee	        0x48897de8	             mov qword [rbp - 0x18], rdi	       827	charset.c	FUNCTION_16
0x13f2	          0x8975e4	             mov dword [rbp - 0x1c], esi	       827	charset.c	FUNCTION_16
0x13f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	charset.c	FUNCTION_16	CALL_1
0x13f9	           0xfb600	                   movzx eax, byte [rax]	       828	charset.c	FUNCTION_16	CALL_1
0x13fc	            0x3c09	                               cmp al, 9	       828	charset.c	FUNCTION_16	CALL_1
0x13fe	            0x753a	                           jne 0x400147a	       828	charset.c	FUNCTION_16	CALL_1
0x1400	    0x488b05000000	            mov rax, qword [0x04001447] 	       828	charset.c	FUNCTION_16	CALL_1
0x1407	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	       828	charset.c	FUNCTION_16	CALL_1
0x140d	            0x85c0	                           test eax, eax	       828	charset.c	FUNCTION_16	CALL_1
0x140f	            0x740a	                            je 0x400145b	       828	charset.c	FUNCTION_16	CALL_1
0x1411	    0x8b0500000000	            mov eax, dword [0x04001457] 	       828	charset.c	FUNCTION_16	CALL_1
0x1417	            0x85c0	                           test eax, eax	       828	charset.c	FUNCTION_16	CALL_1
0x1419	            0x741f	                            je 0x400147a	       828	charset.c	FUNCTION_16	CALL_1
0x141b	    0x488b05000000	            mov rax, qword [0x04001462] 	       828	charset.c	FUNCTION_16	CALL_1
0x1422	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	       828	charset.c	FUNCTION_16	CALL_1
0x1429	          0x8945fc	                mov dword [rbp - 4], eax	       828	charset.c	FUNCTION_16	CALL_1
0x142c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       828	charset.c	FUNCTION_16	CALL_1
0x142f	              0x99	                                     cdq	       828	charset.c	FUNCTION_16	CALL_1
0x1430	          0xf77dfc	                    idiv dword [rbp - 4]	       828	charset.c	FUNCTION_16	CALL_1
0x1433	          0x8b45fc	                mov eax, dword [rbp - 4]	       828	charset.c	FUNCTION_16	CALL_1
0x1436	            0x29d0	                            sub eax, edx	       828	charset.c	FUNCTION_16	CALL_1
0x1438	            0xeb0c	                           jmp 0x4001486	       828	charset.c	FUNCTION_16	CALL_1
0x143a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	charset.c	FUNCTION_16	CALL_1
0x143e	          0x4889c7	                            mov rdi, rax	       828	charset.c	FUNCTION_16	CALL_1
0x1441	      0xe800000000	                          call 0x4001486	       828	charset.c	FUNCTION_16	CALL_1
0x1446	              0xc9	                                   leave	       829	charset.c	FUNCTION_16
0x1447	              0xc3	                                     ret	       829	charset.c	FUNCTION_16
vim_isprintc_strict	IF,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	42
0x1838	              0x55	                                push rbp	       983	charset.c	FUNCTION_29
0x1839	          0x4889e5	                            mov rbp, rsp	       983	charset.c	FUNCTION_29
0x183c	        0x4883ec10	                           sub rsp, 0x10	       983	charset.c	FUNCTION_29
0x1840	          0x897dfc	                mov dword [rbp - 4], edi	       983	charset.c	FUNCTION_29
0x1843	    0x8b0500000000	            mov eax, dword [0x04001889] 	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x1849	            0x85c0	                           test eax, eax	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x184b	            0x7420	                            je 0x40018ad	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x184d	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x1854	            0x7f17	                            jg 0x40018ad	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x1856	          0x8b45fc	                mov eax, dword [rbp - 4]	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x1859	            0x4898	                                    cdqe	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x185b	     0xfb680000000	                   movzx eax, byte [rax]	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x1862	            0x3c01	                               cmp al, 1	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x1864	            0x7e07	                           jle 0x40018ad	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x1866	      0xb800000000	                              mov eax, 0	       986	charset.c	FUNCTION_29	IF_1
0x186b	            0xeb51	                           jmp 0x40018fe	       986	charset.c	FUNCTION_29	IF_1
0x186d	    0x8b0500000000	            mov eax, dword [0x040018b3] 	       987	charset.c	FUNCTION_29	IF_2
0x1873	            0x85c0	                           test eax, eax	       987	charset.c	FUNCTION_29	IF_2
0x1875	            0x7415	                            je 0x40018cc	       987	charset.c	FUNCTION_29	IF_2
0x1877	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       987	charset.c	FUNCTION_29	IF_2
0x187e	            0x7e0c	                           jle 0x40018cc	       987	charset.c	FUNCTION_29	IF_2
0x1880	          0x8b45fc	                mov eax, dword [rbp - 4]	       988	charset.c	FUNCTION_29	CALL_2
0x1883	            0x89c7	                            mov edi, eax	       988	charset.c	FUNCTION_29	CALL_2
0x1885	      0xe800000000	                          call 0x40018ca	       988	charset.c	FUNCTION_29	CALL_2
0x188a	            0xeb32	                           jmp 0x40018fe	       988	charset.c	FUNCTION_29	CALL_2
0x188c	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       990	charset.c	FUNCTION_29
0x1893	            0x7f1c	                            jg 0x40018f1	       990	charset.c	FUNCTION_29
0x1895	        0x837dfc00	                  cmp dword [rbp - 4], 0	       990	charset.c	FUNCTION_29
0x1899	            0x7e1d	                           jle 0x40018f8	       990	charset.c	FUNCTION_29
0x189b	          0x8b45fc	                mov eax, dword [rbp - 4]	       990	charset.c	FUNCTION_29
0x189e	            0x4898	                                    cdqe	       990	charset.c	FUNCTION_29
0x18a0	     0xfb680000000	                   movzx eax, byte [rax]	       990	charset.c	FUNCTION_29
0x18a7	           0xfb6c0	                           movzx eax, al	       990	charset.c	FUNCTION_29
0x18aa	          0x83e010	                           and eax, 0x10	       990	charset.c	FUNCTION_29
0x18ad	            0x85c0	                           test eax, eax	       990	charset.c	FUNCTION_29
0x18af	            0x7407	                            je 0x40018f8	       990	charset.c	FUNCTION_29
0x18b1	      0xb801000000	                              mov eax, 1	       990	charset.c	FUNCTION_29
0x18b6	            0xeb05	                           jmp 0x40018fd	       990	charset.c	FUNCTION_29
0x18b8	      0xb800000000	                              mov eax, 0	       990	charset.c	FUNCTION_29
0x18bd	              0x90	                                     nop	       990	charset.c	FUNCTION_29
0x18be	              0xc9	                                   leave	       991	charset.c	FUNCTION_29
0x18bf	              0xc3	                                     ret	       991	charset.c	FUNCTION_29
skiphex	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,1:FOR,0	18
0x2a68	              0x55	                                push rbp	      1586	charset.c	FUNCTION_44
0x2a69	          0x4889e5	                            mov rbp, rsp	      1586	charset.c	FUNCTION_44
0x2a6c	        0x4883ec20	                           sub rsp, 0x20	      1586	charset.c	FUNCTION_44
0x2a70	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1586	charset.c	FUNCTION_44
0x2a74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1587	charset.c	FUNCTION_44
0x2a78	        0x488945f8	                mov qword [rbp - 8], rax	      1587	charset.c	FUNCTION_44
0x2a7c	            0xeb05	                           jmp 0x4002ac3	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a7e	      0x488345f801	                  add qword [rbp - 8], 1	      1590	charset.c	FUNCTION_44	WHILE_1
0x2a83	        0x488b45f8	                mov rax, qword [rbp - 8]	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a87	           0xfb600	                   movzx eax, byte [rax]	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a8a	           0xfb6c0	                           movzx eax, al	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a8d	            0x89c7	                            mov edi, eax	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a8f	      0xe800000000	                          call 0x4002ad4	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a94	            0x85c0	                           test eax, eax	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a96	            0x75e6	                           jne 0x4002abe	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x2a98	        0x488b45f8	                mov rax, qword [rbp - 8]	      1591	charset.c	FUNCTION_44
0x2a9c	              0xc9	                                   leave	      1592	charset.c	FUNCTION_44
0x2a9d	              0xc3	                                     ret	      1592	charset.c	FUNCTION_44
vim_isbdigit	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	12
0x2bb4	              0x55	                                push rbp	      1665	charset.c	FUNCTION_50
0x2bb5	          0x4889e5	                            mov rbp, rsp	      1665	charset.c	FUNCTION_50
0x2bb8	          0x897dfc	                mov dword [rbp - 4], edi	      1665	charset.c	FUNCTION_50
0x2bbb	        0x837dfc30	               cmp dword [rbp - 4], 0x30	      1666	charset.c	FUNCTION_50
0x2bbf	            0x7406	                            je 0x4002c07	      1666	charset.c	FUNCTION_50
0x2bc1	        0x837dfc31	               cmp dword [rbp - 4], 0x31	      1666	charset.c	FUNCTION_50
0x2bc5	            0x7507	                           jne 0x4002c0e	      1666	charset.c	FUNCTION_50
0x2bc7	      0xb801000000	                              mov eax, 1	      1666	charset.c	FUNCTION_50
0x2bcc	            0xeb05	                           jmp 0x4002c13	      1666	charset.c	FUNCTION_50
0x2bce	      0xb800000000	                              mov eax, 0	      1666	charset.c	FUNCTION_50
0x2bd3	              0x5d	                                 pop rbp	      1667	charset.c	FUNCTION_50
0x2bd4	              0xc3	                                     ret	      1667	charset.c	FUNCTION_50
hex2nr	IF,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0	21
0x33fe	              0x55	                                push rbp	      2019	charset.c	FUNCTION_60
0x33ff	          0x4889e5	                            mov rbp, rsp	      2019	charset.c	FUNCTION_60
0x3402	          0x897dfc	                mov dword [rbp - 4], edi	      2019	charset.c	FUNCTION_60
0x3405	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      2020	charset.c	FUNCTION_60	IF_1
0x3409	            0x7e0e	                           jle 0x4003459	      2020	charset.c	FUNCTION_60	IF_1
0x340b	        0x837dfc66	               cmp dword [rbp - 4], 0x66	      2020	charset.c	FUNCTION_60	IF_1
0x340f	            0x7f08	                            jg 0x4003459	      2020	charset.c	FUNCTION_60	IF_1
0x3411	          0x8b45fc	                mov eax, dword [rbp - 4]	      2021	charset.c	FUNCTION_60	IF_1
0x3414	          0x83e857	                           sub eax, 0x57	      2021	charset.c	FUNCTION_60	IF_1
0x3417	            0xeb1a	                           jmp 0x4003473	      2021	charset.c	FUNCTION_60	IF_1
0x3419	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      2022	charset.c	FUNCTION_60	IF_2
0x341d	            0x7e0e	                           jle 0x400346d	      2022	charset.c	FUNCTION_60	IF_2
0x341f	        0x837dfc46	               cmp dword [rbp - 4], 0x46	      2022	charset.c	FUNCTION_60	IF_2
0x3423	            0x7f08	                            jg 0x400346d	      2022	charset.c	FUNCTION_60	IF_2
0x3425	          0x8b45fc	                mov eax, dword [rbp - 4]	      2023	charset.c	FUNCTION_60	IF_2
0x3428	          0x83e837	                           sub eax, 0x37	      2023	charset.c	FUNCTION_60	IF_2
0x342b	            0xeb06	                           jmp 0x4003473	      2023	charset.c	FUNCTION_60	IF_2
0x342d	          0x8b45fc	                mov eax, dword [rbp - 4]	      2024	charset.c	FUNCTION_60
0x3430	          0x83e830	                           sub eax, 0x30	      2024	charset.c	FUNCTION_60
0x3433	              0x5d	                                 pop rbp	      2025	charset.c	FUNCTION_60
0x3434	              0xc3	                                     ret	      2025	charset.c	FUNCTION_60
getvcol_nolist	IF,1:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0:CALL,2:FOR,0	43
0x25ce	              0x55	                                push rbp	      1415	charset.c	ELSE_6	FUNCTION_36
0x25cf	          0x4889e5	                            mov rbp, rsp	      1415	charset.c	ELSE_6	FUNCTION_36
0x25d2	        0x4883ec20	                           sub rsp, 0x20	      1415	charset.c	ELSE_6	FUNCTION_36
0x25d6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1415	charset.c	ELSE_6	FUNCTION_36
0x25da	    0x64488b042528	                mov rax, qword fs:[0x28]	      1415	charset.c	ELSE_6	FUNCTION_36
0x25e3	        0x488945f8	                mov qword [rbp - 8], rax	      1415	charset.c	ELSE_6	FUNCTION_36
0x25e7	            0x31c0	                            xor eax, eax	      1415	charset.c	ELSE_6	FUNCTION_36
0x25e9	    0x488b05000000	            mov rax, qword [0x04002630] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x25f0	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x25f6	          0x8945f4	              mov dword [rbp - 0xc], eax	      1416	charset.c	ELSE_6	FUNCTION_36
0x25f9	    0x488b05000000	            mov rax, qword [0x04002640] 	      1419	charset.c	ELSE_6	FUNCTION_36
0x2600	    0xc78034020000	              mov dword [rax + 0x234], 0	      1419	charset.c	ELSE_6	FUNCTION_36
0x260a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x260e	          0x8b400c	              mov eax, dword [rax + 0xc]	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x2611	            0x85c0	                           test eax, eax	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x2613	            0x7427	                            je 0x400267c	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x2615	    0x488b05000000	            mov rax, qword [0x0400265c] 	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x261c	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x2620	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x2624	    0x41b800000000	                              mov r8d, 0	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x262a	          0x4889d1	                            mov rcx, rdx	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x262d	      0xba00000000	                              mov edx, 0	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x2632	          0x4889c7	                            mov rdi, rax	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x2635	      0xe800000000	                          call 0x400267a	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x263a	            0xeb25	                           jmp 0x40026a1	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x263c	    0x488b05000000	            mov rax, qword [0x04002683] 	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x2643	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x2647	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x264b	    0x41b800000000	                              mov r8d, 0	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x2651	          0x4889d1	                            mov rcx, rdx	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x2654	      0xba00000000	                              mov edx, 0	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x2659	          0x4889c7	                            mov rdi, rax	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x265c	      0xe800000000	                          call 0x40026a1	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x2661	    0x488b05000000	            mov rax, qword [0x040026a8] 	      1426	charset.c	ELSE_6	FUNCTION_36
0x2668	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1426	charset.c	ELSE_6	FUNCTION_36
0x266b	    0x899034020000	            mov dword [rax + 0x234], edx	      1426	charset.c	ELSE_6	FUNCTION_36
0x2671	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1427	charset.c	ELSE_6	FUNCTION_36
0x2674	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1428	charset.c	ELSE_6	FUNCTION_36
0x2678	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1428	charset.c	ELSE_6	FUNCTION_36
0x2681	            0x7405	                            je 0x40026c8	      1428	charset.c	ELSE_6	FUNCTION_36
0x2683	      0xe800000000	                          call 0x40026c8	      1428	charset.c	ELSE_6	FUNCTION_36
0x2688	              0xc9	                                   leave	      1428	charset.c	ELSE_6	FUNCTION_36
0x2689	              0xc3	                                     ret	      1428	charset.c	ELSE_6	FUNCTION_36
lbr_chartabsize	IF,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,3:FOR,0	66
0x18c0	              0x55	                                push rbp	      1001	charset.c	FUNCTION_30
0x18c1	          0x4889e5	                            mov rbp, rsp	      1001	charset.c	FUNCTION_30
0x18c4	        0x4883ec30	                           sub rsp, 0x30	      1001	charset.c	FUNCTION_30
0x18c8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1001	charset.c	FUNCTION_30
0x18cc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1001	charset.c	FUNCTION_30
0x18d0	          0x8955dc	             mov dword [rbp - 0x24], edx	      1001	charset.c	FUNCTION_30
0x18d3	    0x488b05000000	            mov rax, qword [0x0400191a] 	      1003	charset.c	FUNCTION_30	IF_1
0x18da	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1003	charset.c	FUNCTION_30	IF_1
0x18e0	            0x85c0	                           test eax, eax	      1003	charset.c	FUNCTION_30	IF_1
0x18e2	     0xf85ab000000	                           jne 0x40019d3	      1003	charset.c	FUNCTION_30	IF_1
0x18e8	    0x488b05000000	            mov rax, qword [0x0400192f] 	      1003	charset.c	FUNCTION_30	IF_1
0x18ef	           0xfb600	                   movzx eax, byte [rax]	      1003	charset.c	FUNCTION_30	IF_1
0x18f2	            0x84c0	                             test al, al	      1003	charset.c	FUNCTION_30	IF_1
0x18f4	     0xf8599000000	                           jne 0x40019d3	      1003	charset.c	FUNCTION_30	IF_1
0x18fa	    0x488b05000000	            mov rax, qword [0x04001941] 	      1003	charset.c	FUNCTION_30	IF_1
0x1901	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1003	charset.c	FUNCTION_30	IF_1
0x1907	            0x85c0	                           test eax, eax	      1003	charset.c	FUNCTION_30	IF_1
0x1909	     0xf8584000000	                           jne 0x40019d3	      1003	charset.c	FUNCTION_30	IF_1
0x190f	    0x488b05000000	            mov rax, qword [0x04001956] 	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x1916	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x191c	            0x85c0	                           test eax, eax	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x191e	            0x7420	                            je 0x4001980	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x1920	    0x488b05000000	            mov rax, qword [0x04001967] 	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x1927	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x192a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x192e	      0xb900000000	                              mov ecx, 0	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x1933	          0x4889c7	                            mov rdi, rax	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x1936	      0xe8fb060000	          call sym.win_nolbr_chartabsize	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x193b	      0xe980000000	                           jmp 0x4001a00	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x1940	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1944	           0xfb600	                   movzx eax, byte [rax]	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1947	            0x3c09	                               cmp al, 9	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1949	            0x753a	                           jne 0x40019c5	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x194b	    0x488b05000000	            mov rax, qword [0x04001992] 	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1952	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1958	            0x85c0	                           test eax, eax	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x195a	            0x740a	                            je 0x40019a6	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x195c	    0x8b0500000000	            mov eax, dword [0x040019a2] 	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1962	            0x85c0	                           test eax, eax	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1964	            0x741f	                            je 0x40019c5	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1966	    0x488b05000000	            mov rax, qword [0x040019ad] 	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x196d	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1974	          0x8945fc	                mov dword [rbp - 4], eax	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1977	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x197a	              0x99	                                     cdq	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x197b	          0xf77dfc	                    idiv dword [rbp - 4]	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x197e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1981	            0x29d0	                            sub eax, edx	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1983	            0xeb3b	                           jmp 0x4001a00	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1985	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1989	          0x4889c7	                            mov rdi, rax	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x198c	      0xe800000000	                          call 0x40019d1	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1991	            0xeb2d	                           jmp 0x4001a00	      1010	charset.c	FUNCTION_30	IF_1	CALL_2
0x1993	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1013	charset.c	FUNCTION_30	CALL_3
0x1998	            0x7506	                           jne 0x40019e0	      1013	charset.c	FUNCTION_30	CALL_3
0x199a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1013	charset.c	FUNCTION_30	CALL_3
0x199e	            0xeb04	                           jmp 0x40019e4	      1013	charset.c	FUNCTION_30	CALL_3
0x19a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	charset.c	FUNCTION_30	CALL_3
0x19a4	    0x488b3d000000	            mov rdi, qword [0x040019eb] 	      1013	charset.c	FUNCTION_30	CALL_3
0x19ab	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1013	charset.c	FUNCTION_30	CALL_3
0x19ae	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1013	charset.c	FUNCTION_30	CALL_3
0x19b2	    0x41b800000000	                              mov r8d, 0	      1013	charset.c	FUNCTION_30	CALL_3
0x19b8	          0x4889c6	                            mov rsi, rax	      1013	charset.c	FUNCTION_30	CALL_3
0x19bb	      0xe800000000	                          call 0x4001a00	      1013	charset.c	FUNCTION_30	CALL_3
0x19c0	              0xc9	                                   leave	      1015	charset.c	FUNCTION_30
0x19c1	              0xc3	                                     ret	      1015	charset.c	FUNCTION_30
vim_isprintc	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:FOR,0	30
0x17da	              0x55	                                push rbp	       969	charset.c	FUNCTION_28
0x17db	          0x4889e5	                            mov rbp, rsp	       969	charset.c	FUNCTION_28
0x17de	        0x4883ec10	                           sub rsp, 0x10	       969	charset.c	FUNCTION_28
0x17e2	          0x897dfc	                mov dword [rbp - 4], edi	       969	charset.c	FUNCTION_28
0x17e5	    0x8b0500000000	            mov eax, dword [0x0400182b] 	       971	charset.c	FUNCTION_28	IF_1
0x17eb	            0x85c0	                           test eax, eax	       971	charset.c	FUNCTION_28	IF_1
0x17ed	            0x7415	                            je 0x4001844	       971	charset.c	FUNCTION_28	IF_1
0x17ef	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       971	charset.c	FUNCTION_28	IF_1
0x17f6	            0x7e0c	                           jle 0x4001844	       971	charset.c	FUNCTION_28	IF_1
0x17f8	          0x8b45fc	                mov eax, dword [rbp - 4]	       972	charset.c	FUNCTION_28	CALL_1
0x17fb	            0x89c7	                            mov edi, eax	       972	charset.c	FUNCTION_28	CALL_1
0x17fd	      0xe800000000	                          call 0x4001842	       972	charset.c	FUNCTION_28	CALL_1
0x1802	            0xeb32	                           jmp 0x4001876	       972	charset.c	FUNCTION_28	CALL_1
0x1804	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       974	charset.c	FUNCTION_28
0x180b	            0x7f1c	                            jg 0x4001869	       974	charset.c	FUNCTION_28
0x180d	        0x837dfc00	                  cmp dword [rbp - 4], 0	       974	charset.c	FUNCTION_28
0x1811	            0x7e1d	                           jle 0x4001870	       974	charset.c	FUNCTION_28
0x1813	          0x8b45fc	                mov eax, dword [rbp - 4]	       974	charset.c	FUNCTION_28
0x1816	            0x4898	                                    cdqe	       974	charset.c	FUNCTION_28
0x1818	     0xfb680000000	                   movzx eax, byte [rax]	       974	charset.c	FUNCTION_28
0x181f	           0xfb6c0	                           movzx eax, al	       974	charset.c	FUNCTION_28
0x1822	          0x83e010	                           and eax, 0x10	       974	charset.c	FUNCTION_28
0x1825	            0x85c0	                           test eax, eax	       974	charset.c	FUNCTION_28
0x1827	            0x7407	                            je 0x4001870	       974	charset.c	FUNCTION_28
0x1829	      0xb801000000	                              mov eax, 1	       974	charset.c	FUNCTION_28
0x182e	            0xeb05	                           jmp 0x4001875	       974	charset.c	FUNCTION_28
0x1830	      0xb800000000	                              mov eax, 0	       974	charset.c	FUNCTION_28
0x1835	              0x90	                                     nop	       974	charset.c	FUNCTION_28
0x1836	              0xc9	                                   leave	       975	charset.c	FUNCTION_28
0x1837	              0xc3	                                     ret	       975	charset.c	FUNCTION_28
getwhitecols_curline	IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,2:FOR,0	7
0x29c9	              0x55	                                push rbp	      1544	charset.c	FUNCTION_40
0x29ca	          0x4889e5	                            mov rbp, rsp	      1544	charset.c	FUNCTION_40
0x29cd	      0xe800000000	                          call 0x4002a12	      1545	charset.c	FUNCTION_40	CALL_2
0x29d2	          0x4889c7	                            mov rdi, rax	      1545	charset.c	FUNCTION_40	CALL_2
0x29d5	      0xe800000000	                          call 0x4002a1a	      1545	charset.c	FUNCTION_40	CALL_2
0x29da	              0x5d	                                 pop rbp	      1546	charset.c	FUNCTION_40
0x29db	              0xc3	                                     ret	      1546	charset.c	FUNCTION_40
skiptowhite_esc	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0:CALL,0:FOR,0	34
0x2eae	              0x55	                                push rbp	      1800	charset.c	FUNCTION_56
0x2eaf	          0x4889e5	                            mov rbp, rsp	      1800	charset.c	FUNCTION_56
0x2eb2	        0x48897df8	                mov qword [rbp - 8], rdi	      1800	charset.c	FUNCTION_56
0x2eb6	            0xeb2f	                           jmp 0x4002f27	      1801	charset.c	FUNCTION_56	WHILE_1
0x2eb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ebc	           0xfb600	                   movzx eax, byte [rax]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ebf	            0x3c5c	                            cmp al, 0x5c	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ec1	            0x740b	                            je 0x4002f0e	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ec3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ec7	           0xfb600	                   movzx eax, byte [rax]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2eca	            0x3c16	                            cmp al, 0x16	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ecc	            0x7514	                           jne 0x4002f22	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ece	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ed2	        0x4883c001	                              add rax, 1	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ed6	           0xfb600	                   movzx eax, byte [rax]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ed9	            0x84c0	                             test al, al	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2edb	            0x7405	                            je 0x4002f22	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2edd	      0x488345f801	                  add qword [rbp - 8], 1	      1804	charset.c	FUNCTION_56	WHILE_1	IF_1
0x2ee2	      0x488345f801	                  add qword [rbp - 8], 1	      1805	charset.c	FUNCTION_56	WHILE_1
0x2ee7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	charset.c	FUNCTION_56	WHILE_1
0x2eeb	           0xfb600	                   movzx eax, byte [rax]	      1801	charset.c	FUNCTION_56	WHILE_1
0x2eee	            0x3c20	                            cmp al, 0x20	      1801	charset.c	FUNCTION_56	WHILE_1
0x2ef0	            0x7416	                            je 0x4002f48	      1801	charset.c	FUNCTION_56	WHILE_1
0x2ef2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	charset.c	FUNCTION_56	WHILE_1
0x2ef6	           0xfb600	                   movzx eax, byte [rax]	      1801	charset.c	FUNCTION_56	WHILE_1
0x2ef9	            0x3c09	                               cmp al, 9	      1801	charset.c	FUNCTION_56	WHILE_1
0x2efb	            0x740b	                            je 0x4002f48	      1801	charset.c	FUNCTION_56	WHILE_1
0x2efd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	charset.c	FUNCTION_56	WHILE_1
0x2f01	           0xfb600	                   movzx eax, byte [rax]	      1801	charset.c	FUNCTION_56	WHILE_1
0x2f04	            0x84c0	                             test al, al	      1801	charset.c	FUNCTION_56	WHILE_1
0x2f06	            0x75b0	                           jne 0x4002ef8	      1801	charset.c	FUNCTION_56	WHILE_1
0x2f08	        0x488b45f8	                mov rax, qword [rbp - 8]	      1807	charset.c	FUNCTION_56
0x2f0c	              0x5d	                                 pop rbp	      1808	charset.c	FUNCTION_56
0x2f0d	              0xc3	                                     ret	      1808	charset.c	FUNCTION_56
hexhex2nr	IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,4:FOR,0	40
0x3435	              0x55	                                push rbp	      2034	charset.c	FUNCTION_61
0x3436	          0x4889e5	                            mov rbp, rsp	      2034	charset.c	FUNCTION_61
0x3439	              0x53	                                push rbx	      2034	charset.c	FUNCTION_61
0x343a	        0x4883ec08	                              sub rsp, 8	      2034	charset.c	FUNCTION_61
0x343e	        0x48897df0	             mov qword [rbp - 0x10], rdi	      2034	charset.c	FUNCTION_61
0x3442	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3446	           0xfb600	                   movzx eax, byte [rax]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3449	           0xfb6c0	                           movzx eax, al	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x344c	            0x89c7	                            mov edi, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x344e	      0xe800000000	                          call 0x4003493	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3453	            0x85c0	                           test eax, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3455	            0x7419	                            je 0x40034b0	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3457	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x345b	        0x4883c001	                              add rax, 1	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x345f	           0xfb600	                   movzx eax, byte [rax]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3462	           0xfb6c0	                           movzx eax, al	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3465	            0x89c7	                            mov edi, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3467	      0xe800000000	                          call 0x40034ac	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x346c	            0x85c0	                           test eax, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x346e	            0x7507	                           jne 0x40034b7	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x3470	      0xb8ffffffff	                     mov eax, 0xffffffff	      2036	charset.c	FUNCTION_61	IF_1
0x3475	            0xeb2d	                           jmp 0x40034e4	      2036	charset.c	FUNCTION_61	IF_1
0x3477	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2037	charset.c	FUNCTION_61	CALL_4
0x347b	           0xfb600	                   movzx eax, byte [rax]	      2037	charset.c	FUNCTION_61	CALL_4
0x347e	           0xfb6c0	                           movzx eax, al	      2037	charset.c	FUNCTION_61	CALL_4
0x3481	            0x89c7	                            mov edi, eax	      2037	charset.c	FUNCTION_61	CALL_4
0x3483	      0xe800000000	                          call 0x40034c8	      2037	charset.c	FUNCTION_61	CALL_4
0x3488	          0xc1e004	                              shl eax, 4	      2037	charset.c	FUNCTION_61	CALL_4
0x348b	            0x89c3	                            mov ebx, eax	      2037	charset.c	FUNCTION_61	CALL_4
0x348d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2037	charset.c	FUNCTION_61	CALL_4
0x3491	        0x4883c001	                              add rax, 1	      2037	charset.c	FUNCTION_61	CALL_4
0x3495	           0xfb600	                   movzx eax, byte [rax]	      2037	charset.c	FUNCTION_61	CALL_4
0x3498	           0xfb6c0	                           movzx eax, al	      2037	charset.c	FUNCTION_61	CALL_4
0x349b	            0x89c7	                            mov edi, eax	      2037	charset.c	FUNCTION_61	CALL_4
0x349d	      0xe800000000	                          call 0x40034e2	      2037	charset.c	FUNCTION_61	CALL_4
0x34a2	             0x1d8	                            add eax, ebx	      2037	charset.c	FUNCTION_61	CALL_4
0x34a4	        0x4883c408	                              add rsp, 8	      2038	charset.c	FUNCTION_61
0x34a8	              0x5b	                                 pop rbx	      2038	charset.c	FUNCTION_61
0x34a9	              0x5d	                                 pop rbp	      2038	charset.c	FUNCTION_61
0x34aa	              0xc3	                                     ret	      2038	charset.c	FUNCTION_61
