undo_read_4c	FOR,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0	45
0x1477	              0x55	                                push rbp	       994	undo.c	FUNCTION_20
0x1478	          0x4889e5	                            mov rbp, rsp	       994	undo.c	FUNCTION_20
0x147b	        0x4883ec30	                           sub rsp, 0x30	       994	undo.c	FUNCTION_20
0x147f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       994	undo.c	FUNCTION_20
0x1483	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	undo.c	FUNCTION_20
0x148c	        0x488945f8	                mov qword [rbp - 8], rax	       994	undo.c	FUNCTION_20
0x1490	            0x31c0	                            xor eax, eax	       994	undo.c	FUNCTION_20
0x1492	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       996	undo.c	FUNCTION_20	IF_1
0x1496	        0x488b4018	            mov rax, qword [rax + 0x18] 	       996	undo.c	FUNCTION_20	IF_1
0x149a	          0x4885c0	                           test rax, rax	       996	undo.c	FUNCTION_20	IF_1
0x149d	            0x744d	                            je 0x400152c	       996	undo.c	FUNCTION_20	IF_1
0x149f	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x14a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x14a7	      0xba04000000	                              mov edx, 4	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x14ac	          0x4889ce	                            mov rsi, rcx	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x14af	          0x4889c7	                            mov rdi, rax	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x14b2	      0xe8f3010000	                      call sym.undo_read	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x14b7	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      1002	undo.c	FUNCTION_20	IF_1
0x14bb	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x14be	          0xc1e018	                           shl eax, 0x18	      1002	undo.c	FUNCTION_20	IF_1
0x14c1	            0x89c2	                            mov edx, eax	      1002	undo.c	FUNCTION_20	IF_1
0x14c3	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1002	undo.c	FUNCTION_20	IF_1
0x14c7	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x14ca	          0xc1e010	                           shl eax, 0x10	      1002	undo.c	FUNCTION_20	IF_1
0x14cd	             0x1c2	                            add edx, eax	      1002	undo.c	FUNCTION_20	IF_1
0x14cf	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1002	undo.c	FUNCTION_20	IF_1
0x14d3	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x14d6	          0xc1e008	                              shl eax, 8	      1002	undo.c	FUNCTION_20	IF_1
0x14d9	             0x1c2	                            add edx, eax	      1002	undo.c	FUNCTION_20	IF_1
0x14db	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      1002	undo.c	FUNCTION_20	IF_1
0x14df	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x14e2	             0x1d0	                            add eax, edx	      1002	undo.c	FUNCTION_20	IF_1
0x14e4	          0x8945ec	             mov dword [rbp - 0x14], eax	      1002	undo.c	FUNCTION_20	IF_1
0x14e7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1003	undo.c	FUNCTION_20	IF_1
0x14ea	            0xeb10	                           jmp 0x400153c	      1003	undo.c	FUNCTION_20	IF_1
0x14ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1006	undo.c	FUNCTION_20	CALL_2
0x14f0	        0x488b4008	                mov rax, qword [rax + 8]	      1006	undo.c	FUNCTION_20	CALL_2
0x14f4	          0x4889c7	                            mov rdi, rax	      1006	undo.c	FUNCTION_20	CALL_2
0x14f7	      0xe800000000	                          call 0x400153c	      1006	undo.c	FUNCTION_20	CALL_2
0x14fc	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1007	undo.c	FUNCTION_20
0x1500	    0x644833342528	                xor rsi, qword fs:[0x28]	      1007	undo.c	FUNCTION_20
0x1509	            0x7405	                            je 0x4001550	      1007	undo.c	FUNCTION_20
0x150b	      0xe800000000	                          call 0x4001550	      1007	undo.c	FUNCTION_20
0x1510	              0xc9	                                   leave	      1007	undo.c	FUNCTION_20
0x1511	              0xc3	                                     ret	      1007	undo.c	FUNCTION_20
undo_flush	FOR,0:ELSE,0:functions,0:IF,2:CALL,2:DO,0:WHILE,0:SWITCH,0	44
0x11cf	              0x55	                                push rbp	       920	undo.c	FUNCTION_16
0x11d0	          0x4889e5	                            mov rbp, rsp	       920	undo.c	FUNCTION_16
0x11d3	        0x4883ec10	                           sub rsp, 0x10	       920	undo.c	FUNCTION_16
0x11d7	        0x48897df8	                mov qword [rbp - 8], rdi	       920	undo.c	FUNCTION_16
0x11db	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	undo.c	FUNCTION_16	IF_1
0x11df	        0x488b4018	            mov rax, qword [rax + 0x18] 	       921	undo.c	FUNCTION_16	IF_1
0x11e3	          0x4885c0	                           test rax, rax	       921	undo.c	FUNCTION_16	IF_1
0x11e6	            0x747e	                            je 0x40012a6	       921	undo.c	FUNCTION_16	IF_1
0x11e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	undo.c	FUNCTION_16	IF_1
0x11ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	       921	undo.c	FUNCTION_16	IF_1
0x11f0	          0x4885c0	                           test rax, rax	       921	undo.c	FUNCTION_16	IF_1
0x11f3	            0x7471	                            je 0x40012a6	       921	undo.c	FUNCTION_16	IF_1
0x11f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	undo.c	FUNCTION_16	IF_1
0x11f9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       921	undo.c	FUNCTION_16	IF_1
0x11fd	          0x4885c0	                           test rax, rax	       921	undo.c	FUNCTION_16	IF_1
0x1200	            0x7464	                            je 0x40012a6	       921	undo.c	FUNCTION_16	IF_1
0x1202	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x1206	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x120a	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x120e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x1212	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x1216	        0x488b4010	            mov rax, qword [rax + 0x10] 	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x121a	          0x4889ce	                            mov rsi, rcx	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x121d	          0x4889c7	                            mov rdi, rax	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x1220	      0xe800000000	                          call 0x4001265	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x1225	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1229	        0x488b5008	                mov rdx, qword [rax + 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x122d	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1231	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1235	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1239	        0x488b4018	            mov rax, qword [rax + 0x18] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x123d	          0x4889d1	                            mov rcx, rdx	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1240	      0xba01000000	                              mov edx, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1245	          0x4889c7	                            mov rdi, rax	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1248	      0xe800000000	                          call 0x400128d	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x124d	        0x4883f801	                              cmp rax, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1251	            0x7407	                            je 0x400129a	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x1253	      0xb800000000	                              mov eax, 0	       925	undo.c	FUNCTION_16	IF_1	IF_2
0x1258	            0xeb11	                           jmp 0x40012ab	       925	undo.c	FUNCTION_16	IF_1	IF_2
0x125a	        0x488b45f8	                mov rax, qword [rbp - 8]	       926	undo.c	FUNCTION_16	IF_1
0x125e	    0x48c740200000	               mov qword [rax + 0x20], 0	       926	undo.c	FUNCTION_16	IF_1
0x1266	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x126b	              0xc9	                                   leave	       929	undo.c	FUNCTION_16
0x126c	              0xc3	                                     ret	       929	undo.c	FUNCTION_16
u_savedel	FOR,0:ELSE,0:functions,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0	27
0x143	              0x55	                                push rbp	       319	undo.c	FUNCTION_7
0x144	          0x4889e5	                            mov rbp, rsp	       319	undo.c	FUNCTION_7
0x147	        0x4883ec10	                           sub rsp, 0x10	       319	undo.c	FUNCTION_7
0x14b	        0x48897df8	                mov qword [rbp - 8], rdi	       319	undo.c	FUNCTION_7
0x14f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       319	undo.c	FUNCTION_7
0x153	    0x8b0500000000	            mov eax, dword [0x04000199] 	       320	undo.c	FUNCTION_7	IF_1
0x159	            0x85c0	                           test eax, eax	       320	undo.c	FUNCTION_7	IF_1
0x15b	            0x7407	                            je 0x40001a4	       320	undo.c	FUNCTION_7	IF_1
0x15d	      0xb801000000	                              mov eax, 1	       321	undo.c	FUNCTION_7	IF_1
0x162	            0xeb3c	                           jmp 0x40001e0	       321	undo.c	FUNCTION_7	IF_1
0x164	    0x488b05000000	            mov rax, qword [0x040001ab] 	       324	undo.c	FUNCTION_7
0x16b	          0x488b00	                    mov rax, qword [rax]	       324	undo.c	FUNCTION_7
0x16e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       323	undo.c	FUNCTION_7	CALL_1
0x172	            0x7406	                            je 0x40001ba	       323	undo.c	FUNCTION_7	CALL_1
0x174	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	undo.c	FUNCTION_7	CALL_1
0x178	            0xeb05	                           jmp 0x40001bf	       323	undo.c	FUNCTION_7	CALL_1
0x17a	      0xb802000000	                              mov eax, 2	       323	undo.c	FUNCTION_7	CALL_1
0x17f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       323	undo.c	FUNCTION_7	CALL_1
0x183	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       323	undo.c	FUNCTION_7	CALL_1
0x187	        0x488d3411	                    lea rsi, [rcx + rdx]	       323	undo.c	FUNCTION_7	CALL_1
0x18b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       323	undo.c	FUNCTION_7	CALL_1
0x18f	        0x488d7aff	                      lea rdi, [rdx - 1]	       323	undo.c	FUNCTION_7	CALL_1
0x193	      0xb900000000	                              mov ecx, 0	       323	undo.c	FUNCTION_7	CALL_1
0x198	          0x4889c2	                            mov rdx, rax	       323	undo.c	FUNCTION_7	CALL_1
0x19b	      0xe800000000	                          call 0x40001e0	       323	undo.c	FUNCTION_7	CALL_1
0x1a0	              0xc9	                                   leave	       325	undo.c	FUNCTION_7
0x1a1	              0xc3	                                     ret	       325	undo.c	FUNCTION_7
serialize_uhp	FOR,2:ELSE,0:functions,0:IF,2:CALL,21:DO,0:WHILE,0:SWITCH,0	165
0x1d2b	              0x55	                                push rbp	      1231	undo.c	FUNCTION_27
0x1d2c	          0x4889e5	                            mov rbp, rsp	      1231	undo.c	FUNCTION_27
0x1d2f	        0x4883ec30	                           sub rsp, 0x30	      1231	undo.c	FUNCTION_27
0x1d33	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1231	undo.c	FUNCTION_27
0x1d37	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1231	undo.c	FUNCTION_27
0x1d3b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1231	undo.c	FUNCTION_27
0x1d44	        0x488945f8	                mov qword [rbp - 8], rax	      1231	undo.c	FUNCTION_27
0x1d48	            0x31c0	                            xor eax, eax	      1231	undo.c	FUNCTION_27
0x1d4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x1d4e	      0xba02000000	                              mov edx, 2	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x1d53	      0xbed05f0000	                         mov esi, 0x5fd0	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x1d58	          0x4889c7	                            mov rdi, rax	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x1d5b	      0xe849f6ffff	               call sym.undo_write_bytes	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x1d60	            0x85c0	                           test eax, eax	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x1d62	            0x750a	                           jne 0x4001dae	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x1d64	      0xb800000000	                              mov eax, 0	      1237	undo.c	FUNCTION_27	IF_1
0x1d69	      0xe92f020000	                           jmp 0x4001fdd	      1237	undo.c	FUNCTION_27	IF_1
0x1d6e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1239	undo.c	FUNCTION_27	CALL_2
0x1d72	          0x488b10	                    mov rdx, qword [rax]	      1239	undo.c	FUNCTION_27	CALL_2
0x1d75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1239	undo.c	FUNCTION_27	CALL_2
0x1d79	          0x4889d6	                            mov rsi, rdx	      1239	undo.c	FUNCTION_27	CALL_2
0x1d7c	          0x4889c7	                            mov rdi, rax	      1239	undo.c	FUNCTION_27	CALL_2
0x1d7f	      0xe8b3f6ffff	                 call sym.put_header_ptr	      1239	undo.c	FUNCTION_27	CALL_2
0x1d84	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1240	undo.c	FUNCTION_27	CALL_3
0x1d88	        0x488b5008	                mov rdx, qword [rax + 8]	      1240	undo.c	FUNCTION_27	CALL_3
0x1d8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1240	undo.c	FUNCTION_27	CALL_3
0x1d90	          0x4889d6	                            mov rsi, rdx	      1240	undo.c	FUNCTION_27	CALL_3
0x1d93	          0x4889c7	                            mov rdi, rax	      1240	undo.c	FUNCTION_27	CALL_3
0x1d96	      0xe89cf6ffff	                 call sym.put_header_ptr	      1240	undo.c	FUNCTION_27	CALL_3
0x1d9b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1241	undo.c	FUNCTION_27	CALL_4
0x1d9f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1241	undo.c	FUNCTION_27	CALL_4
0x1da3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1241	undo.c	FUNCTION_27	CALL_4
0x1da7	          0x4889d6	                            mov rsi, rdx	      1241	undo.c	FUNCTION_27	CALL_4
0x1daa	          0x4889c7	                            mov rdi, rax	      1241	undo.c	FUNCTION_27	CALL_4
0x1dad	      0xe885f6ffff	                 call sym.put_header_ptr	      1241	undo.c	FUNCTION_27	CALL_4
0x1db2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1242	undo.c	FUNCTION_27	CALL_5
0x1db6	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1242	undo.c	FUNCTION_27	CALL_5
0x1dba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1242	undo.c	FUNCTION_27	CALL_5
0x1dbe	          0x4889d6	                            mov rsi, rdx	      1242	undo.c	FUNCTION_27	CALL_5
0x1dc1	          0x4889c7	                            mov rdi, rax	      1242	undo.c	FUNCTION_27	CALL_5
0x1dc4	      0xe86ef6ffff	                 call sym.put_header_ptr	      1242	undo.c	FUNCTION_27	CALL_5
0x1dc9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1243	undo.c	FUNCTION_27	CALL_6
0x1dcd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1243	undo.c	FUNCTION_27	CALL_6
0x1dd1	          0x4889c1	                            mov rcx, rax	      1243	undo.c	FUNCTION_27	CALL_6
0x1dd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1243	undo.c	FUNCTION_27	CALL_6
0x1dd8	      0xba04000000	                              mov edx, 4	      1243	undo.c	FUNCTION_27	CALL_6
0x1ddd	          0x4889ce	                            mov rsi, rcx	      1243	undo.c	FUNCTION_27	CALL_6
0x1de0	          0x4889c7	                            mov rdi, rax	      1243	undo.c	FUNCTION_27	CALL_6
0x1de3	      0xe8c1f5ffff	               call sym.undo_write_bytes	      1243	undo.c	FUNCTION_27	CALL_6
0x1de8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1244	undo.c	FUNCTION_27	CALL_7
0x1dec	        0x488b4840	            mov rcx, qword [rax + 0x40] 	      1244	undo.c	FUNCTION_27	CALL_7
0x1df0	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1244	undo.c	FUNCTION_27	CALL_7
0x1df4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1244	undo.c	FUNCTION_27	CALL_7
0x1df8	          0x4889ce	                            mov rsi, rcx	      1244	undo.c	FUNCTION_27	CALL_7
0x1dfb	          0x4889c7	                            mov rdi, rax	      1244	undo.c	FUNCTION_27	CALL_7
0x1dfe	      0xe8b3070000	                  call sym.serialize_pos	      1244	undo.c	FUNCTION_27	CALL_7
0x1e03	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1246	undo.c	FUNCTION_27	CALL_8
0x1e07	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1246	undo.c	FUNCTION_27	CALL_8
0x1e0b	          0x4889c1	                            mov rcx, rax	      1246	undo.c	FUNCTION_27	CALL_8
0x1e0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1246	undo.c	FUNCTION_27	CALL_8
0x1e12	      0xba04000000	                              mov edx, 4	      1246	undo.c	FUNCTION_27	CALL_8
0x1e17	          0x4889ce	                            mov rsi, rcx	      1246	undo.c	FUNCTION_27	CALL_8
0x1e1a	          0x4889c7	                            mov rdi, rax	      1246	undo.c	FUNCTION_27	CALL_8
0x1e1d	      0xe887f5ffff	               call sym.undo_write_bytes	      1246	undo.c	FUNCTION_27	CALL_8
0x1e22	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1250	undo.c	FUNCTION_27	CALL_10
0x1e26	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1250	undo.c	FUNCTION_27	CALL_10
0x1e29	          0x4863c8	                         movsxd rcx, eax	      1250	undo.c	FUNCTION_27	CALL_10
0x1e2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1250	undo.c	FUNCTION_27	CALL_10
0x1e30	      0xba02000000	                              mov edx, 2	      1250	undo.c	FUNCTION_27	CALL_10
0x1e35	          0x4889ce	                            mov rsi, rcx	      1250	undo.c	FUNCTION_27	CALL_10
0x1e38	          0x4889c7	                            mov rdi, rax	      1250	undo.c	FUNCTION_27	CALL_10
0x1e3b	      0xe869f5ffff	               call sym.undo_write_bytes	      1250	undo.c	FUNCTION_27	CALL_10
0x1e40	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1252	undo.c	FUNCTION_27	FOR_1
0x1e47	            0xeb2f	                           jmp 0x4001eb8	      1252	undo.c	FUNCTION_27	FOR_1
0x1e49	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1253	undo.c	FUNCTION_27	CALL_11
0x1e4d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1253	undo.c	FUNCTION_27	CALL_11
0x1e50	          0x4863d2	                         movsxd rdx, edx	      1253	undo.c	FUNCTION_27	CALL_11
0x1e53	        0x4883c206	                              add rdx, 6	      1253	undo.c	FUNCTION_27	CALL_11
0x1e57	        0x48c1e204	                              shl rdx, 4	      1253	undo.c	FUNCTION_27	CALL_11
0x1e5b	          0x4801d0	                            add rax, rdx	      1253	undo.c	FUNCTION_27	CALL_11
0x1e5e	          0x488b08	                    mov rcx, qword [rax]	      1253	undo.c	FUNCTION_27	CALL_11
0x1e61	        0x488b5008	                mov rdx, qword [rax + 8]	      1253	undo.c	FUNCTION_27	CALL_11
0x1e65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1253	undo.c	FUNCTION_27	CALL_11
0x1e69	          0x4889ce	                            mov rsi, rcx	      1253	undo.c	FUNCTION_27	CALL_11
0x1e6c	          0x4889c7	                            mov rdi, rax	      1253	undo.c	FUNCTION_27	CALL_11
0x1e6f	      0xe842070000	                  call sym.serialize_pos	      1253	undo.c	FUNCTION_27	CALL_11
0x1e74	        0x8345e401	               add dword [rbp - 0x1c], 1	      1252	undo.c	FUNCTION_27	FOR_1
0x1e78	        0x837de419	           cmp dword [rbp - 0x1c], 0x19 	      1252	undo.c	FUNCTION_27	FOR_1
0x1e7c	            0x7ecb	                           jle 0x4001e89	      1252	undo.c	FUNCTION_27	FOR_1
0x1e7e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1254	undo.c	FUNCTION_27	CALL_12
0x1e82	    0x488d90000200	                  lea rdx, [rax + 0x200]	      1254	undo.c	FUNCTION_27	CALL_12
0x1e89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1254	undo.c	FUNCTION_27	CALL_12
0x1e8d	          0x4889d6	                            mov rsi, rdx	      1254	undo.c	FUNCTION_27	CALL_12
0x1e90	          0x4889c7	                            mov rdi, rax	      1254	undo.c	FUNCTION_27	CALL_12
0x1e93	      0xe823080000	           call sym.serialize_visualinfo	      1254	undo.c	FUNCTION_27	CALL_12
0x1e98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1255	undo.c	FUNCTION_27	CALL_13
0x1e9c	    0x488b80280200	           mov rax, qword [rax + 0x228] 	      1255	undo.c	FUNCTION_27	CALL_13
0x1ea3	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1255	undo.c	FUNCTION_27	CALL_13
0x1ea7	          0x4889d6	                            mov rsi, rdx	      1255	undo.c	FUNCTION_27	CALL_13
0x1eaa	          0x4889c7	                            mov rdi, rax	      1255	undo.c	FUNCTION_27	CALL_13
0x1ead	      0xe800000000	                          call 0x4001ef2	      1255	undo.c	FUNCTION_27	CALL_13
0x1eb2	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1256	undo.c	FUNCTION_27	CALL_14
0x1eb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1256	undo.c	FUNCTION_27	CALL_14
0x1eba	      0xba08000000	                              mov edx, 8	      1256	undo.c	FUNCTION_27	CALL_14
0x1ebf	          0x4889ce	                            mov rsi, rcx	      1256	undo.c	FUNCTION_27	CALL_14
0x1ec2	          0x4889c7	                            mov rdi, rax	      1256	undo.c	FUNCTION_27	CALL_14
0x1ec5	      0xe8bff1ffff	                     call sym.undo_write	      1256	undo.c	FUNCTION_27	CALL_14
0x1eca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1259	undo.c	FUNCTION_27	CALL_15
0x1ece	      0xba01000000	                              mov edx, 1	      1259	undo.c	FUNCTION_27	CALL_15
0x1ed3	      0xbe04000000	                              mov esi, 4	      1259	undo.c	FUNCTION_27	CALL_15
0x1ed8	          0x4889c7	                            mov rdi, rax	      1259	undo.c	FUNCTION_27	CALL_15
0x1edb	      0xe8c9f4ffff	               call sym.undo_write_bytes	      1259	undo.c	FUNCTION_27	CALL_15
0x1ee0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1260	undo.c	FUNCTION_27	CALL_16
0x1ee4	      0xba01000000	                              mov edx, 1	      1260	undo.c	FUNCTION_27	CALL_16
0x1ee9	      0xbe01000000	                              mov esi, 1	      1260	undo.c	FUNCTION_27	CALL_16
0x1eee	          0x4889c7	                            mov rdi, rax	      1260	undo.c	FUNCTION_27	CALL_16
0x1ef1	      0xe8b3f4ffff	               call sym.undo_write_bytes	      1260	undo.c	FUNCTION_27	CALL_16
0x1ef6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1261	undo.c	FUNCTION_27	CALL_17
0x1efa	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      1261	undo.c	FUNCTION_27	CALL_17
0x1f01	          0x4889c1	                            mov rcx, rax	      1261	undo.c	FUNCTION_27	CALL_17
0x1f04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1261	undo.c	FUNCTION_27	CALL_17
0x1f08	      0xba04000000	                              mov edx, 4	      1261	undo.c	FUNCTION_27	CALL_17
0x1f0d	          0x4889ce	                            mov rsi, rcx	      1261	undo.c	FUNCTION_27	CALL_17
0x1f10	          0x4889c7	                            mov rdi, rax	      1261	undo.c	FUNCTION_27	CALL_17
0x1f13	      0xe891f4ffff	               call sym.undo_write_bytes	      1261	undo.c	FUNCTION_27	CALL_17
0x1f18	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1263	undo.c	FUNCTION_27	CALL_18
0x1f1c	      0xba01000000	                              mov edx, 1	      1263	undo.c	FUNCTION_27	CALL_18
0x1f21	      0xbe00000000	                              mov esi, 0	      1263	undo.c	FUNCTION_27	CALL_18
0x1f26	          0x4889c7	                            mov rdi, rax	      1263	undo.c	FUNCTION_27	CALL_18
0x1f29	      0xe87bf4ffff	               call sym.undo_write_bytes	      1263	undo.c	FUNCTION_27	CALL_18
0x1f2e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1266	undo.c	FUNCTION_27	FOR_2
0x1f32	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1266	undo.c	FUNCTION_27	FOR_2
0x1f36	        0x488945e8	             mov qword [rbp - 0x18], rax	      1266	undo.c	FUNCTION_27	FOR_2
0x1f3a	            0xeb3f	                           jmp 0x4001fbb	      1266	undo.c	FUNCTION_27	FOR_2
0x1f3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x1f40	      0xba02000000	                              mov edx, 2	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x1f45	      0xbe18f50000	                         mov esi, 0xf518	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x1f4a	          0x4889c7	                            mov rdi, rax	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x1f4d	      0xe857f4ffff	               call sym.undo_write_bytes	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x1f52	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x1f56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x1f5a	          0x4889d6	                            mov rsi, rdx	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x1f5d	          0x4889c7	                            mov rdi, rax	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x1f60	      0xe838030000	                  call sym.serialize_uep	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x1f65	            0x85c0	                           test eax, eax	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x1f67	            0x7507	                           jne 0x4001fb0	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x1f69	      0xb800000000	                              mov eax, 0	      1270	undo.c	FUNCTION_27	FOR_2	IF_2
0x1f6e	            0xeb2d	                           jmp 0x4001fdd	      1270	undo.c	FUNCTION_27	FOR_2	IF_2
0x1f70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1266	undo.c	FUNCTION_27	FOR_2
0x1f74	          0x488b00	                    mov rax, qword [rax]	      1266	undo.c	FUNCTION_27	FOR_2
0x1f77	        0x488945e8	             mov qword [rbp - 0x18], rax	      1266	undo.c	FUNCTION_27	FOR_2
0x1f7b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1266	undo.c	FUNCTION_27	FOR_2
0x1f80	            0x75ba	                           jne 0x4001f7c	      1266	undo.c	FUNCTION_27	FOR_2
0x1f82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1272	undo.c	FUNCTION_27	CALL_21
0x1f86	      0xba02000000	                              mov edx, 2	      1272	undo.c	FUNCTION_27	CALL_21
0x1f8b	      0xbe81350000	                         mov esi, 0x3581	      1272	undo.c	FUNCTION_27	CALL_21
0x1f90	          0x4889c7	                            mov rdi, rax	      1272	undo.c	FUNCTION_27	CALL_21
0x1f93	      0xe811f4ffff	               call sym.undo_write_bytes	      1272	undo.c	FUNCTION_27	CALL_21
0x1f98	      0xb801000000	                              mov eax, 1	      1273	undo.c	FUNCTION_27
0x1f9d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1274	undo.c	FUNCTION_27
0x1fa1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1274	undo.c	FUNCTION_27
0x1faa	            0x7405	                            je 0x4001ff1	      1274	undo.c	FUNCTION_27
0x1fac	      0xe800000000	                          call 0x4001ff1	      1274	undo.c	FUNCTION_27
0x1fb1	              0xc9	                                   leave	      1274	undo.c	FUNCTION_27
0x1fb2	              0xc3	                                     ret	      1274	undo.c	FUNCTION_27
serialize_visualinfo	FOR,0:ELSE,0:functions,0:IF,0:CALL,4:DO,0:WHILE,0:SWITCH,0	38
0x26bb	              0x55	                                push rbp	      1483	undo.c	FUNCTION_33
0x26bc	          0x4889e5	                            mov rbp, rsp	      1483	undo.c	FUNCTION_33
0x26bf	        0x4883ec10	                           sub rsp, 0x10	      1483	undo.c	FUNCTION_33
0x26c3	        0x48897df8	                mov qword [rbp - 8], rdi	      1483	undo.c	FUNCTION_33
0x26c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1483	undo.c	FUNCTION_33
0x26cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1484	undo.c	FUNCTION_33	CALL_1
0x26cf	          0x488b08	                    mov rcx, qword [rax]	      1484	undo.c	FUNCTION_33	CALL_1
0x26d2	        0x488b5008	                mov rdx, qword [rax + 8]	      1484	undo.c	FUNCTION_33	CALL_1
0x26d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1484	undo.c	FUNCTION_33	CALL_1
0x26da	          0x4889ce	                            mov rsi, rcx	      1484	undo.c	FUNCTION_33	CALL_1
0x26dd	          0x4889c7	                            mov rdi, rax	      1484	undo.c	FUNCTION_33	CALL_1
0x26e0	      0xe8d1feffff	                  call sym.serialize_pos	      1484	undo.c	FUNCTION_33	CALL_1
0x26e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1485	undo.c	FUNCTION_33	CALL_2
0x26e9	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1485	undo.c	FUNCTION_33	CALL_2
0x26ed	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1485	undo.c	FUNCTION_33	CALL_2
0x26f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1485	undo.c	FUNCTION_33	CALL_2
0x26f5	          0x4889ce	                            mov rsi, rcx	      1485	undo.c	FUNCTION_33	CALL_2
0x26f8	          0x4889c7	                            mov rdi, rax	      1485	undo.c	FUNCTION_33	CALL_2
0x26fb	      0xe8b6feffff	                  call sym.serialize_pos	      1485	undo.c	FUNCTION_33	CALL_2
0x2700	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1486	undo.c	FUNCTION_33	CALL_3
0x2704	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1486	undo.c	FUNCTION_33	CALL_3
0x2707	          0x4863c8	                         movsxd rcx, eax	      1486	undo.c	FUNCTION_33	CALL_3
0x270a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1486	undo.c	FUNCTION_33	CALL_3
0x270e	      0xba04000000	                              mov edx, 4	      1486	undo.c	FUNCTION_33	CALL_3
0x2713	          0x4889ce	                            mov rsi, rcx	      1486	undo.c	FUNCTION_33	CALL_3
0x2716	          0x4889c7	                            mov rdi, rax	      1486	undo.c	FUNCTION_33	CALL_3
0x2719	      0xe88becffff	               call sym.undo_write_bytes	      1486	undo.c	FUNCTION_33	CALL_3
0x271e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1487	undo.c	FUNCTION_33	CALL_4
0x2722	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1487	undo.c	FUNCTION_33	CALL_4
0x2725	          0x4863c8	                         movsxd rcx, eax	      1487	undo.c	FUNCTION_33	CALL_4
0x2728	        0x488b45f8	                mov rax, qword [rbp - 8]	      1487	undo.c	FUNCTION_33	CALL_4
0x272c	      0xba04000000	                              mov edx, 4	      1487	undo.c	FUNCTION_33	CALL_4
0x2731	          0x4889ce	                            mov rsi, rcx	      1487	undo.c	FUNCTION_33	CALL_4
0x2734	          0x4889c7	                            mov rdi, rax	      1487	undo.c	FUNCTION_33	CALL_4
0x2737	      0xe86decffff	               call sym.undo_write_bytes	      1487	undo.c	FUNCTION_33	CALL_4
0x273c	              0x90	                                     nop	      1488	undo.c	FUNCTION_33
0x273d	              0xc9	                                   leave	      1488	undo.c	FUNCTION_33
0x273e	              0xc3	                                     ret	      1488	undo.c	FUNCTION_33
get_undolevel	FOR,0:ELSE,0:functions,0:IF,1:CALL,0:DO,0:WHILE,0:SWITCH,0	12
0x21d	              0x55	                                push rbp	       366	undo.c	FUNCTION_9
0x21e	          0x4889e5	                            mov rbp, rsp	       366	undo.c	FUNCTION_9
0x221	    0x488b05000000	            mov rax, qword [0x04000268] 	       367	undo.c	FUNCTION_9	IF_1
0x228	    0x488b80481600	          mov rax, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x22f	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       367	undo.c	FUNCTION_9	IF_1
0x235	            0x7509	                           jne 0x4000280	       367	undo.c	FUNCTION_9	IF_1
0x237	    0x488b05000000	            mov rax, qword [0x0400027e] 	       368	undo.c	FUNCTION_9	IF_1
0x23e	            0xeb0e	                           jmp 0x400028e	       368	undo.c	FUNCTION_9	IF_1
0x240	    0x488b05000000	            mov rax, qword [0x04000287] 	       369	undo.c	FUNCTION_9
0x247	    0x488b80481600	          mov rax, qword [rax + 0x1648] 	       369	undo.c	FUNCTION_9
0x24e	              0x5d	                                 pop rbp	       370	undo.c	FUNCTION_9
0x24f	              0xc3	                                     ret	       370	undo.c	FUNCTION_9
u_undo	FOR,0:ELSE,1:functions,0:IF,2:CALL,3:DO,0:WHILE,0:SWITCH,0	30
0x3ea6	              0x55	                                push rbp	      2149	undo.c	FUNCTION_37
0x3ea7	          0x4889e5	                            mov rbp, rsp	      2149	undo.c	FUNCTION_37
0x3eaa	        0x4883ec10	                           sub rsp, 0x10	      2149	undo.c	FUNCTION_37
0x3eae	          0x897dfc	                mov dword [rbp - 4], edi	      2149	undo.c	FUNCTION_37
0x3eb1	    0x488b05000000	            mov rax, qword [0x04003ef8] 	      2155	undo.c	FUNCTION_37	IF_1
0x3eb8	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      2155	undo.c	FUNCTION_37	IF_1
0x3ebe	            0x85c0	                           test eax, eax	      2155	undo.c	FUNCTION_37	IF_1
0x3ec0	            0x7511	                           jne 0x4003f13	      2155	undo.c	FUNCTION_37	IF_1
0x3ec2	      0xbf01000000	                              mov edi, 1	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x3ec7	      0xe800000000	                          call 0x4003f0c	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x3ecc	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2158	undo.c	FUNCTION_37	IF_1
0x3ed3	    0x488b05000000	            mov rax, qword [0x04003f1a] 	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x3eda	      0xbe75000000	                           mov esi, 0x75	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x3edf	          0x4889c7	                            mov rdi, rax	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x3ee2	      0xe800000000	                          call 0x4003f27	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x3ee7	          0x4885c0	                           test rax, rax	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x3eea	            0x750c	                           jne 0x4003f38	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x3eec	    0xc70500000000	               mov dword [0x04003f36], 1	      2162	undo.c	FUNCTION_37	IF_2
0x3ef6	            0xeb14	                           jmp 0x4003f4c	      2162	undo.c	FUNCTION_37	IF_2
0x3ef8	    0x8b0500000000	            mov eax, dword [0x04003f3e] 	      2164	undo.c	FUNCTION_37	ELSE_1
0x3efe	            0x85c0	                           test eax, eax	      2164	undo.c	FUNCTION_37	ELSE_1
0x3f00	           0xf94c0	                                 sete al	      2164	undo.c	FUNCTION_37	ELSE_1
0x3f03	           0xfb6c0	                           movzx eax, al	      2164	undo.c	FUNCTION_37	ELSE_1
0x3f06	    0x890500000000	            mov dword [0x04003f4c], eax 	      2164	undo.c	FUNCTION_37	ELSE_1
0x3f0c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2165	undo.c	FUNCTION_37	CALL_3
0x3f0f	            0x89c7	                            mov edi, eax	      2165	undo.c	FUNCTION_37	CALL_3
0x3f11	      0xe83e000000	                         call sym.u_doit	      2165	undo.c	FUNCTION_37	CALL_3
0x3f16	              0x90	                                     nop	      2166	undo.c	FUNCTION_37
0x3f17	              0xc9	                                   leave	      2166	undo.c	FUNCTION_37
0x3f18	              0xc3	                                     ret	      2166	undo.c	FUNCTION_37
undo_time	FOR,1:ELSE,18:functions,0:IF,47:CALL,14:DO,0:WHILE,6:SWITCH,0	604
0x416c	              0x55	                                push rbp	      2266	undo.c	FUNCTION_40
0x416d	          0x4889e5	                            mov rbp, rsp	      2266	undo.c	FUNCTION_40
0x4170	        0x4883c480	             add rsp, 0xffffffffffffff80	      2266	undo.c	FUNCTION_40
0x4174	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2266	undo.c	FUNCTION_40
0x4178	          0x897594	             mov dword [rbp - 0x6c], esi	      2266	undo.c	FUNCTION_40
0x417b	          0x895590	             mov dword [rbp - 0x70], edx	      2266	undo.c	FUNCTION_40
0x417e	          0x894d8c	             mov dword [rbp - 0x74], ecx	      2266	undo.c	FUNCTION_40
0x4181	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2270	undo.c	FUNCTION_40
0x4189	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2272	undo.c	FUNCTION_40
0x4191	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2277	undo.c	FUNCTION_40
0x4194	          0x8945b8	             mov dword [rbp - 0x48], eax	      2277	undo.c	FUNCTION_40
0x4197	          0x8b4590	             mov eax, dword [rbp - 0x70]	      2278	undo.c	FUNCTION_40
0x419a	          0x8945bc	             mov dword [rbp - 0x44], eax	      2278	undo.c	FUNCTION_40
0x419d	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2279	undo.c	FUNCTION_40
0x41a4	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      2280	undo.c	FUNCTION_40
0x41ab	    0x488b05000000	            mov rax, qword [0x040041f2] 	      2283	undo.c	FUNCTION_40	IF_1
0x41b2	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      2283	undo.c	FUNCTION_40	IF_1
0x41b8	            0x85c0	                           test eax, eax	      2283	undo.c	FUNCTION_40	IF_1
0x41ba	            0x750a	                           jne 0x4004206	      2283	undo.c	FUNCTION_40	IF_1
0x41bc	      0xbf01000000	                              mov edi, 1	      2284	undo.c	FUNCTION_40	CALL_1
0x41c1	      0xe800000000	                          call 0x4004206	      2284	undo.c	FUNCTION_40	CALL_1
0x41c6	    0x48c705000000	               mov qword [0x04004211], 0	      2286	undo.c	FUNCTION_40
0x41d1	    0x48c705000000	               mov qword [0x0400421c], 0	      2287	undo.c	FUNCTION_40
0x41dc	    0x488b05000000	            mov rax, qword [0x04004223] 	      2288	undo.c	FUNCTION_40	IF_2
0x41e3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2288	undo.c	FUNCTION_40	IF_2
0x41e6	          0x83e001	                              and eax, 1	      2288	undo.c	FUNCTION_40	IF_2
0x41e9	            0x85c0	                           test eax, eax	      2288	undo.c	FUNCTION_40	IF_2
0x41eb	            0x740b	                            je 0x4004238	      2288	undo.c	FUNCTION_40	IF_2
0x41ed	    0x48c705000000	mov qword [0x04004238], 0xffffffffffffffff 	      2289	undo.c	FUNCTION_40	IF_2
0x41f8	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      2293	undo.c	FUNCTION_40	IF_3
0x41fc	            0x7415	                            je 0x4004253	      2293	undo.c	FUNCTION_40	IF_3
0x41fe	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2295	undo.c	FUNCTION_40	IF_3
0x4202	        0x488945c8	             mov qword [rbp - 0x38], rax	      2295	undo.c	FUNCTION_40	IF_3
0x4206	    0x48c745d0ffff	mov qword [rbp - 0x30], 0xffffffffffffffff	      2296	undo.c	FUNCTION_40	IF_3
0x420e	      0xe9b4010000	                           jmp 0x4004407	      2296	undo.c	FUNCTION_40	IF_3
0x4213	        0x837db800	               cmp dword [rbp - 0x48], 0	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4217	            0x741e	                            je 0x4004277	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4219	    0x488b05000000	            mov rax, qword [0x04004260] 	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4220	    0x488b90501200	          mov rdx, qword [rax + 0x1250] 	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4227	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x422b	          0x4801d0	                            add rax, rdx	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x422e	        0x488945c8	             mov qword [rbp - 0x38], rax	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4232	      0xe911010000	                           jmp 0x4004388	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4237	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x423b	     0xf84ee000000	                            je 0x400436f	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x4241	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4246	     0xf8997000000	                           jns 0x4004323	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x424c	    0x488b05000000	            mov rax, qword [0x04004293] 	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4253	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x425a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x425e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4263	            0x740d	                            je 0x40042b2	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4265	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4269	          0x488b00	                    mov rax, qword [rax]	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x426c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4270	            0xeb12	                           jmp 0x40042c4	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4272	    0x488b05000000	            mov rax, qword [0x040042b9] 	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x4279	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x4280	        0x488945e8	             mov qword [rbp - 0x18], rax	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x4284	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4289	            0x742b	                            je 0x40042f6	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x428b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x428f	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4296	          0x4885c0	                           test rax, rax	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4299	            0x741b	                            je 0x40042f6	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x429b	    0x488b05000000	            mov rax, qword [0x040042e2] 	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x42a2	    0x488b90581200	          mov rdx, qword [rax + 0x1258] 	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x42a9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x42ad	          0x4801d0	                            add rax, rdx	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x42b0	        0x488945c8	             mov qword [rbp - 0x38], rax	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x42b4	            0xeb1d	                           jmp 0x4004313	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x42b6	    0x488b05000000	            mov rax, qword [0x040042fd] 	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x42bd	    0x488b90581200	          mov rdx, qword [rax + 0x1258] 	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x42c4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x42c8	          0x4801d0	                            add rax, rdx	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x42cb	        0x4883c001	                              add rax, 1	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x42cf	        0x488945c8	             mov qword [rbp - 0x38], rax	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x42d3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2321	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x42d8	            0x7f6e	                            jg 0x4004388	      2321	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x42da	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x42e1	            0xeb65	                           jmp 0x4004388	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x42e3	    0x488b05000000	            mov rax, qword [0x0400432a] 	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x42ea	    0x488b90581200	          mov rdx, qword [rax + 0x1258] 	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x42f1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x42f5	          0x4801d0	                            add rax, rdx	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x42f8	        0x488945c8	             mov qword [rbp - 0x38], rax	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x42fc	    0x488b05000000	            mov rax, qword [0x04004343] 	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4303	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x430a	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x430e	            0x7d38	                           jge 0x4004388	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4310	    0x488b05000000	            mov rax, qword [0x04004357] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4317	    0x488b80381200	          mov rax, qword [rax + 0x1238] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x431e	        0x4883c001	                              add rax, 1	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4322	        0x488945c8	             mov qword [rbp - 0x38], rax	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4326	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2335	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x432d	            0xeb19	                           jmp 0x4004388	      2335	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x432f	    0x488b05000000	            mov rax, qword [0x04004376] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4336	    0x488b90481200	          mov rdx, qword [rax + 0x1248] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x433d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4341	          0x4801d0	                            add rax, rdx	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4344	        0x488945c8	             mov qword [rbp - 0x38], rax	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4348	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x434d	            0x7919	                           jns 0x40043a8	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x434f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x4354	            0x7908	                           jns 0x400439e	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x4356	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2344	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x435e	    0x48c745d0ffff	mov qword [rbp - 0x30], 0xffffffffffffffff	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4366	            0xeb5f	                           jmp 0x4004407	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4368	        0x837db800	               cmp dword [rbp - 0x48], 0	      2349	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_13
0x436c	            0x740f	                            je 0x40043bd	      2349	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_13
0x436e	      0xe800000000	                          call 0x40043b3	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4373	        0x4883c001	                              add rax, 1	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4377	        0x488945d0	             mov qword [rbp - 0x30], rax	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x437b	            0xeb34	                           jmp 0x40043f1	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x437d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2351	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x4381	            0x7418	                            je 0x40043db	      2351	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x4383	    0x488b05000000	            mov rax, qword [0x040043ca] 	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x438a	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x4391	        0x4883c002	                              add rax, 2	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x4395	        0x488945d0	             mov qword [rbp - 0x30], rax	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x4399	            0xeb16	                           jmp 0x40043f1	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x439b	    0x488b05000000	            mov rax, qword [0x040043e2] 	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x43a2	    0x488b80381200	          mov rax, qword [rax + 0x1238] 	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x43a9	        0x4883c002	                              add rax, 2	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x43ad	        0x488945d0	             mov qword [rbp - 0x30], rax	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x43b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2355	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x43b5	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2355	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x43b9	            0x7c0c	                            jl 0x4004407	      2355	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x43bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x43bf	        0x4883e801	                              sub rax, 1	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x43c3	        0x488945c8	             mov qword [rbp - 0x38], rax	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x43c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2359	undo.c	FUNCTION_40
0x43cb	        0x488945f8	                mov qword [rbp - 8], rax	      2359	undo.c	FUNCTION_40
0x43cf	    0x488b05000000	            mov rax, qword [0x04004416] 	      2360	undo.c	FUNCTION_40
0x43d6	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      2360	undo.c	FUNCTION_40
0x43dd	        0x488945d8	             mov qword [rbp - 0x28], rax	      2360	undo.c	FUNCTION_40
0x43e1	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2363	undo.c	FUNCTION_40	IF_16
0x43e6	            0x750e	                           jne 0x4004436	      2363	undo.c	FUNCTION_40	IF_16
0x43e8	    0x8b0500000000	            mov eax, dword [0x0400442e] 	      2365	undo.c	FUNCTION_40	IF_16
0x43ee	          0x8945ac	             mov dword [rbp - 0x54], eax	      2365	undo.c	FUNCTION_40	IF_16
0x43f1	      0xe9fd030000	                           jmp 0x4004833	      2366	undo.c	FUNCTION_40	IF_16
0x43f6	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      2377	undo.c	FUNCTION_40	FOR_1
0x43fd	      0xe9e4030000	                           jmp 0x4004826	      2377	undo.c	FUNCTION_40	FOR_1
0x4402	    0x8b0500000000	            mov eax, dword [0x04004448] 	      2383	undo.c	FUNCTION_40	FOR_1
0x4408	          0x83c001	                              add eax, 1	      2383	undo.c	FUNCTION_40	FOR_1
0x440b	    0x890500000000	            mov dword [0x04004451], eax 	      2383	undo.c	FUNCTION_40	FOR_1
0x4411	    0x8b0500000000	            mov eax, dword [0x04004457] 	      2383	undo.c	FUNCTION_40	FOR_1
0x4417	          0x8945ac	             mov dword [rbp - 0x54], eax	      2383	undo.c	FUNCTION_40	FOR_1
0x441a	    0x8b0500000000	            mov eax, dword [0x04004460] 	      2384	undo.c	FUNCTION_40	FOR_1
0x4420	          0x83c001	                              add eax, 1	      2384	undo.c	FUNCTION_40	FOR_1
0x4423	    0x890500000000	            mov dword [0x04004469], eax 	      2384	undo.c	FUNCTION_40	FOR_1
0x4429	    0x8b0500000000	            mov eax, dword [0x0400446f] 	      2384	undo.c	FUNCTION_40	FOR_1
0x442f	          0x8945b0	             mov dword [rbp - 0x50], eax	      2384	undo.c	FUNCTION_40	FOR_1
0x4432	    0x488b05000000	            mov rax, qword [0x04004479] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4439	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4440	          0x4885c0	                           test rax, rax	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4443	            0x7517	                           jne 0x400449c	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4445	    0x488b05000000	            mov rax, qword [0x0400448c] 	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x444c	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x4453	        0x488945e8	             mov qword [rbp - 0x18], rax	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x4457	      0xe9e6020000	                           jmp 0x4004782	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x445c	    0x488b05000000	            mov rax, qword [0x040044a3] 	      2389	undo.c	FUNCTION_40	FOR_1	ELSE_10
0x4463	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2389	undo.c	FUNCTION_40	FOR_1	ELSE_10
0x446a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2389	undo.c	FUNCTION_40	FOR_1	ELSE_10
0x446e	      0xe9cf020000	                           jmp 0x4004782	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4473	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4477	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x447a	          0x895028	             mov dword [rax + 0x28], edx	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x447d	        0x837db800	               cmp dword [rbp - 0x48], 0	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4481	            0x7411	                            je 0x40044d4	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4483	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4487	    0x488b80280200	           mov rax, qword [rax + 0x228] 	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x448e	        0x488945e0	             mov qword [rbp - 0x20], rax	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4492	            0xeb23	                           jmp 0x40044f7	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4494	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x4498	            0x7411	                            je 0x40044eb	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x449a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x449e	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x44a5	        0x488945e0	             mov qword [rbp - 0x20], rax	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x44a9	            0xeb0c	                           jmp 0x40044f7	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x44ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x44af	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x44b3	        0x488945e0	             mov qword [rbp - 0x20], rax	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x44b7	        0x837db401	               cmp dword [rbp - 0x4c], 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x44bb	     0xf8552010000	                           jne 0x4004653	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x44c1	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x44c5	            0x740b	                            je 0x4004512	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x44c7	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x44cc	     0xf8441010000	                            je 0x4004653	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x44d2	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44d7	            0x791e	                           jns 0x4004537	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44dd	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44e1	    0x488b05000000	            mov rax, qword [0x04004528] 	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44e8	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44ef	          0x4839c2	                            cmp rdx, rax	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44f2	           0xf9ec0	                                setle al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44f5	            0xeb1c	                           jmp 0x4004553	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44fb	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x44ff	    0x488b05000000	            mov rax, qword [0x04004546] 	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4506	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x450d	          0x4839c2	                            cmp rdx, rax	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4510	           0xf9fc0	                                 setg al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4513	            0x84c0	                             test al, al	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4515	     0xf84f8000000	                            je 0x4004653	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x451b	        0x837db800	               cmp dword [rbp - 0x48], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x451f	            0x7439	                            je 0x400459a	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4521	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4525	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4529	            0x752f	                           jne 0x400459a	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x452b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4530	            0x7914	                           jns 0x4004586	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4532	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2411	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4536	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2411	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x453a	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x453e	           0xf9cc0	                                 setl al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4541	      0xe9b5000000	                           jmp 0x400463b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4546	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2412	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x454a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2412	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x454e	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4552	           0xf9fc0	                                 setg al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4555	      0xe9a1000000	                           jmp 0x400463b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x455a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x455e	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4562	     0xf8484000000	                            je 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4568	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x456c	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4570	            0x7e3e	                           jle 0x40045f0	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4572	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4576	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x457a	            0x7e1a	                           jle 0x40045d6	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x457c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4580	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4584	          0x4889c2	                            mov rdx, rax	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4587	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x458b	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x458f	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4592	            0x7e58	                           jle 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4594	            0xeb5d	                           jmp 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4596	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x459a	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x459e	          0x4889c2	                            mov rdx, rax	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45a5	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45a9	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45ac	            0x7e3e	                           jle 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45ae	            0xeb43	                           jmp 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45b4	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45b8	            0x7e1a	                           jle 0x4004614	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45be	        0x482b45e0	             sub rax, qword [rbp - 0x20]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45c2	          0x4889c2	                            mov rdx, rax	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45c9	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45cd	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45d0	            0x7e1a	                           jle 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45d2	            0xeb1f	                           jmp 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45d8	        0x482b45e0	             sub rax, qword [rbp - 0x20]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45dc	          0x4889c2	                            mov rdx, rax	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45e3	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45e7	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45ea	            0x7f07	                            jg 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45ec	      0xb801000000	                              mov eax, 1	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45f1	            0xeb05	                           jmp 0x4004638	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45f3	      0xb800000000	                              mov eax, 0	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45f8	          0x83e001	                              and eax, 1	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45fb	            0x84c0	                             test al, al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45fd	            0x7414	                            je 0x4004653	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x45ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2422	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4603	        0x488945d0	             mov qword [rbp - 0x30], rax	      2422	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4607	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x460b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x460f	        0x488945d8	             mov qword [rbp - 0x28], rax	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4613	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4617	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x461b	            0x7517	                           jne 0x4004674	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x461d	        0x837db800	               cmp dword [rbp - 0x48], 0	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4621	            0x7511	                           jne 0x4004674	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4623	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4627	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x462b	        0x488945c8	             mov qword [rbp - 0x38], rax	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x462f	      0xe919010000	                           jmp 0x400478d	      2432	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4634	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4638	        0x488b4008	                mov rax, qword [rax + 8]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x463c	          0x4885c0	                           test rax, rax	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x463f	            0x7431	                            je 0x40046b2	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4641	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4645	        0x488b4008	                mov rax, qword [rax + 8]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4649	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x464c	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x464f	            0x7421	                            je 0x40046b2	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4651	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4655	        0x488b4008	                mov rax, qword [rax + 8]	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4659	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x465c	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x465f	            0x7411	                            je 0x40046b2	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4661	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4665	        0x488b4008	                mov rax, qword [rax + 8]	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4669	        0x488945e8	             mov qword [rbp - 0x18], rax	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x466d	      0xe9d0000000	                           jmp 0x4004782	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4672	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4676	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x467a	          0x4885c0	                           test rax, rax	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x467d	            0x7431	                            je 0x40046f0	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x467f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4683	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4687	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x468a	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x468d	            0x7421	                            je 0x40046f0	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x468f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4693	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4697	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x469a	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x469d	            0x7411	                            je 0x40046f0	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x469f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x46a3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x46a7	        0x488945e8	             mov qword [rbp - 0x18], rax	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x46ab	      0xe992000000	                           jmp 0x4004782	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x46b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46b4	          0x488b00	                    mov rax, qword [rax]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46b7	          0x4885c0	                           test rax, rax	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46ba	            0x7456	                            je 0x4004752	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46c0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46c4	          0x4885c0	                           test rax, rax	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46c7	            0x7549	                           jne 0x4004752	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46cd	          0x488b00	                    mov rax, qword [rax]	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46d0	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46d3	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46d6	            0x743a	                            je 0x4004752	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46dc	          0x488b00	                    mov rax, qword [rax]	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46df	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46e2	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46e5	            0x742b	                            je 0x4004752	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x46e7	    0x488b05000000	            mov rax, qword [0x0400472e] 	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x46ee	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x46f5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x46f9	            0x750a	                           jne 0x4004745	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x46fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x46ff	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4702	          0x895028	             mov dword [rax + 0x28], edx	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4705	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4709	          0x488b00	                    mov rax, qword [rax]	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x470c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4710	            0xeb30	                           jmp 0x4004782	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4712	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4716	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4719	          0x895028	             mov dword [rax + 0x28], edx	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x471c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4720	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4724	          0x4885c0	                           test rax, rax	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4727	            0x740e	                            je 0x4004777	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4729	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x472d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4731	        0x488945e8	             mov qword [rbp - 0x18], rax	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4735	            0xeb0b	                           jmp 0x4004782	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4737	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x473b	          0x488b00	                    mov rax, qword [rax]	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x473e	        0x488945e8	             mov qword [rbp - 0x18], rax	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x4742	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4747	     0xf8526fdffff	                           jne 0x40044b3	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x474d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x4752	     0xf859a000000	                           jne 0x4004832	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x4758	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x475c	            0x7421	                            je 0x40047bf	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x475e	      0xbf00000000	                              mov edi, 0	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4763	      0xe800000000	                          call 0x40047a8	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4768	          0x4889c2	                            mov rdx, rax	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x476b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x476f	          0x4889c6	                            mov rsi, rax	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4772	          0x4889d7	                            mov rdi, rdx	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4775	      0xe800000000	                          call 0x40047ba	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x477a	      0xe990030000	                           jmp 0x4004b4f	      2475	undo.c	FUNCTION_40	FOR_1	IF_29
0x477f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x4783	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x4787	            0x7535	                           jne 0x40047fe	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x4789	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x478e	            0x7917	                           jns 0x40047e7	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x4790	      0xbf00000000	                              mov edi, 0	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x4795	      0xe800000000	                          call 0x40047da	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x479a	          0x4889c7	                            mov rdi, rax	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x479d	      0xe800000000	                          call 0x40047e2	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x47a2	      0xe968030000	                           jmp 0x4004b4f	      2484	undo.c	FUNCTION_40	FOR_1	IF_30
0x47a7	      0xbf00000000	                              mov edi, 0	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x47ac	      0xe800000000	                          call 0x40047f1	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x47b1	          0x4889c7	                            mov rdi, rax	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x47b4	      0xe800000000	                          call 0x40047f9	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x47b9	      0xe951030000	                           jmp 0x4004b4f	      2484	undo.c	FUNCTION_40	FOR_1	IF_30
0x47be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2487	undo.c	FUNCTION_40	FOR_1
0x47c2	        0x488945c8	             mov qword [rbp - 0x38], rax	      2487	undo.c	FUNCTION_40	FOR_1
0x47c6	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2488	undo.c	FUNCTION_40	FOR_1
0x47cd	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2489	undo.c	FUNCTION_40	FOR_1
0x47d4	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2490	undo.c	FUNCTION_40	FOR_1	IF_32
0x47d9	            0x7907	                           jns 0x4004822	      2490	undo.c	FUNCTION_40	FOR_1	IF_32
0x47db	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x47e2	        0x8345b401	               add dword [rbp - 0x4c], 1	      2377	undo.c	FUNCTION_40	FOR_1
0x47e6	        0x837db402	               cmp dword [rbp - 0x4c], 2	      2377	undo.c	FUNCTION_40	FOR_1
0x47ea	     0xf8e12fcffff	                           jle 0x4004442	      2377	undo.c	FUNCTION_40	FOR_1
0x47f0	            0xeb01	                           jmp 0x4004833	      2377	undo.c	FUNCTION_40	FOR_1
0x47f2	              0x90	                                     nop	      2470	undo.c	FUNCTION_40	FOR_1	IF_28
0x47f3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2496	undo.c	FUNCTION_40	IF_33
0x47f8	     0xf85ad000000	                           jne 0x40048eb	      2496	undo.c	FUNCTION_40	IF_33
0x47fe	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2496	undo.c	FUNCTION_40	IF_33
0x4803	     0xf85f7020000	                           jne 0x4004b40	      2496	undo.c	FUNCTION_40	IF_33
0x4809	      0xe99d000000	                           jmp 0x40048eb	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x480e	      0xbf00000000	                              mov edi, 0	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4813	      0xe800000000	                          call 0x4004858	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4818	    0x488b05000000	            mov rax, qword [0x0400485f] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x481f	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4826	        0x488945e8	             mov qword [rbp - 0x18], rax	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x482a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x482f	            0x7514	                           jne 0x4004885	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4831	    0x488b05000000	            mov rax, qword [0x04004878] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4838	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x483f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4843	            0xeb0b	                           jmp 0x4004890	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x4849	          0x488b00	                    mov rax, qword [rax]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x484c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x4850	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4855	            0x7462	                            je 0x40048f9	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4857	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x485c	            0x7e0c	                           jle 0x40048aa	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x485e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4862	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4865	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4868	            0x754f	                           jne 0x40048f9	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x486a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x486e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4872	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4876	            0x7506	                           jne 0x40048be	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4878	        0x837dc000	               cmp dword [rbp - 0x40], 0	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x487c	            0x743b	                            je 0x40048f9	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x487e	    0x488b05000000	            mov rax, qword [0x040048c5] 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4885	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4889	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4890	      0xbf01000000	                              mov edi, 1	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x4895	      0xe877020000	                     call sym.u_undoredo	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x489a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x489f	            0x7e0a	                           jle 0x40048eb	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x48a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x48a5	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x48a8	          0x895028	             mov dword [rax + 0x28], edx	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x48ab	    0x8b0500000000	            mov eax, dword [0x040048f1] 	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x48b1	            0x85c0	                           test eax, eax	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x48b3	     0xf8455ffffff	                            je 0x400484e	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x48b9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x48be	     0xf8e3c020000	                           jle 0x4004b40	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x48c4	      0xe920020000	                           jmp 0x4004b29	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x48c9	      0xbf00000000	                              mov edi, 0	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x48ce	      0xe800000000	                          call 0x4004913	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x48d3	    0x488b05000000	            mov rax, qword [0x0400491a] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x48da	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x48e1	        0x488945e8	             mov qword [rbp - 0x18], rax	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x48e5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x48ea	     0xf8409020000	                            je 0x4004b39	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x48f0	            0xeb0c	                           jmp 0x400493e	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x48f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2538	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x48f6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2538	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x48fa	        0x488945e8	             mov qword [rbp - 0x18], rax	      2538	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x48fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4902	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4906	          0x4885c0	                           test rax, rax	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4909	            0x7410	                            je 0x400495b	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x490b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x490f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4913	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4916	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4919	            0x74d7	                            je 0x4004932	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x491b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2541	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x491f	        0x488945f0	             mov qword [rbp - 0x10], rax	      2541	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4923	            0xeb0c	                           jmp 0x4004971	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4925	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2544	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4929	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2544	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x492d	        0x488945f0	             mov qword [rbp - 0x10], rax	      2544	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4931	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4935	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4939	          0x4885c0	                           test rax, rax	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x493c	            0x7410	                            je 0x400498e	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x493e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4942	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4946	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4949	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x494c	            0x74d7	                            je 0x4004965	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x494e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4952	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4956	     0xf84bd000000	                            je 0x4004a59	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x495c	            0xeb0c	                           jmp 0x40049aa	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x495e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x4962	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x4966	        0x488945e8	             mov qword [rbp - 0x18], rax	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x496a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x496e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x4972	          0x4885c0	                           test rax, rax	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x4975	            0x75e7	                           jne 0x400499e	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x4977	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x497b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x497f	          0x4885c0	                           test rax, rax	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4982	            0x7414	                            je 0x40049d8	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4984	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4988	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x498c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2553	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4990	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2553	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4994	        0x48895018	             mov qword [rax + 0x18], rdx	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4998	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x499c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49a0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2555	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49a4	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      2555	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49a8	        0x48895010	             mov qword [rax + 0x10], rdx	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2556	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49b0	    0x48c740180000	               mov qword [rax + 0x18], 0	      2556	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49bc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49c0	        0x48895010	             mov qword [rax + 0x10], rdx	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49c8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49cc	        0x48895018	             mov qword [rax + 0x18], rdx	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49d0	    0x488b05000000	            mov rax, qword [0x04004a17] 	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x49d7	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x49de	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x49e2	            0x7512	                           jne 0x4004a36	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x49e4	    0x488b05000000	            mov rax, qword [0x04004a2b] 	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x49eb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x49ef	    0x488990181200	          mov qword [rax + 0x1218], rdx 	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x49f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2562	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49fa	        0x488945e8	             mov qword [rbp - 0x18], rax	      2562	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x49fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a02	          0x488b00	                    mov rax, qword [rax]	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a05	          0x4885c0	                           test rax, rax	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a08	            0x740f	                            je 0x4004a59	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a0e	          0x488b00	                    mov rax, qword [rax]	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a11	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a15	        0x48895008	                mov qword [rax + 8], rdx	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4a19	    0x488b05000000	            mov rax, qword [0x04004a60] 	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4a20	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4a24	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4a2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4a2f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4a32	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4a35	     0xf85c1000000	                           jne 0x4004b3c	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4a3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a3f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a43	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a47	            0x7521	                           jne 0x4004aaa	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a49	        0x837dc000	               cmp dword [rbp - 0x40], 0	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a4d	            0x741b	                            je 0x4004aaa	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a4f	    0x488b05000000	            mov rax, qword [0x04004a96] 	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a56	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a5a	        0x4883ea01	                              sub rdx, 1	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a5e	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a65	      0xe996000000	                           jmp 0x4004b40	      2576	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4a6a	      0xbf00000000	                              mov edi, 0	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x4a6f	      0xe89d000000	                     call sym.u_undoredo	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x4a74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4a78	        0x488b4008	                mov rax, qword [rax + 8]	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4a7c	          0x4885c0	                           test rax, rax	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4a7f	            0x7512	                           jne 0x4004ad3	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4a81	    0x488b05000000	            mov rax, qword [0x04004ac8] 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4a88	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4a8c	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4a93	    0x488b05000000	            mov rax, qword [0x04004ada] 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4a9a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4a9e	        0x488b5208	                mov rdx, qword [rdx + 8]	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4aa2	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4aa9	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4ab0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4ab4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4ab8	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4abc	            0x7441	                            je 0x4004b3f	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4abe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4ac2	        0x488b4008	                mov rax, qword [rax + 8]	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4ac6	        0x488945e8	             mov qword [rbp - 0x18], rax	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4aca	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4acf	            0x740c	                            je 0x4004b1d	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4ad1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4ad5	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4ad8	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4adb	            0x740c	                            je 0x4004b29	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4add	      0xbf00000000	                              mov edi, 0	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x4ae2	      0xe800000000	                          call 0x4004b27	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x4ae7	            0xeb17	                           jmp 0x4004b40	      2596	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4ae9	    0x8b0500000000	            mov eax, dword [0x04004b2f] 	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4aef	            0x85c0	                           test eax, eax	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4af1	     0xf84d2fdffff	                            je 0x4004909	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4af7	            0xeb07	                           jmp 0x4004b40	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4af9	              0x90	                                     nop	      2533	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4afa	            0xeb04	                           jmp 0x4004b40	      2533	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4afc	              0x90	                                     nop	      2569	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4afd	            0xeb01	                           jmp 0x4004b40	      2569	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4aff	              0x90	                                     nop	      2589	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4b00	          0x8b558c	             mov edx, dword [rbp - 0x74]	      2601	undo.c	FUNCTION_40	CALL_14
0x4b03	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2601	undo.c	FUNCTION_40	CALL_14
0x4b06	            0x89d6	                            mov esi, edx	      2601	undo.c	FUNCTION_40	CALL_14
0x4b08	            0x89c7	                            mov edi, eax	      2601	undo.c	FUNCTION_40	CALL_14
0x4b0a	      0xe8370d0000	                     call sym.u_undo_end	      2601	undo.c	FUNCTION_40	CALL_14
0x4b0f	              0xc9	                                   leave	      2602	undo.c	FUNCTION_40
0x4b10	              0xc3	                                     ret	      2602	undo.c	FUNCTION_40
u_clearline	FOR,0:ELSE,0:functions,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0	21
0x6941	              0x55	                                push rbp	      3445	undo.c	FUNCTION_59
0x6942	          0x4889e5	                            mov rbp, rsp	      3445	undo.c	FUNCTION_59
0x6945	    0x488b05000000	            mov rax, qword [0x0400698c] 	      3446	undo.c	FUNCTION_59	IF_1
0x694c	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3446	undo.c	FUNCTION_59	IF_1
0x6953	          0x4885c0	                           test rax, rax	      3446	undo.c	FUNCTION_59	IF_1
0x6956	            0x744d	                            je 0x40069e5	      3446	undo.c	FUNCTION_59	IF_1
0x6958	    0x488b05000000	            mov rax, qword [0x0400699f] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x695f	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x6966	          0x4885c0	                           test rax, rax	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x6969	            0x7428	                            je 0x40069d3	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x696b	    0x488b05000000	            mov rax, qword [0x040069b2] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x6972	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x6979	          0x4889c7	                            mov rdi, rax	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x697c	      0xe800000000	                          call 0x40069c1	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x6981	    0x488b05000000	            mov rax, qword [0x040069c8] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x6988	    0x48c780601200	            mov qword [rax + 0x1260], 0 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x6993	    0x488b05000000	            mov rax, qword [0x040069da] 	      3449	undo.c	FUNCTION_59	IF_1
0x699a	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      3449	undo.c	FUNCTION_59	IF_1
0x69a5	              0x90	                                     nop	      3451	undo.c	FUNCTION_59
0x69a6	              0x5d	                                 pop rbp	      3451	undo.c	FUNCTION_59
0x69a7	              0xc3	                                     ret	      3451	undo.c	FUNCTION_59
u_blockfree	FOR,0:ELSE,0:functions,0:IF,0:CALL,2:DO,0:WHILE,1:SWITCH,0	23
0x6b4d	              0x55	                                push rbp	      3503	undo.c	FUNCTION_61
0x6b4e	          0x4889e5	                            mov rbp, rsp	      3503	undo.c	FUNCTION_61
0x6b51	        0x4883ec10	                           sub rsp, 0x10	      3503	undo.c	FUNCTION_61
0x6b55	        0x48897df8	                mov qword [rbp - 8], rdi	      3503	undo.c	FUNCTION_61
0x6b59	            0xeb1f	                           jmp 0x4006bba	      3504	undo.c	FUNCTION_61	WHILE_1
0x6b5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3505	undo.c	FUNCTION_61	CALL_1
0x6b5f	    0x488b88181200	          mov rcx, qword [rax + 0x1218] 	      3505	undo.c	FUNCTION_61	CALL_1
0x6b66	        0x488b45f8	                mov rax, qword [rbp - 8]	      3505	undo.c	FUNCTION_61	CALL_1
0x6b6a	      0xba00000000	                              mov edx, 0	      3505	undo.c	FUNCTION_61	CALL_1
0x6b6f	          0x4889ce	                            mov rsi, rcx	      3505	undo.c	FUNCTION_61	CALL_1
0x6b72	          0x4889c7	                            mov rdi, rax	      3505	undo.c	FUNCTION_61	CALL_1
0x6b75	      0xe86df9ffff	                   call sym.u_freeheader	      3505	undo.c	FUNCTION_61	CALL_1
0x6b7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3504	undo.c	FUNCTION_61	WHILE_1
0x6b7e	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x6b85	          0x4885c0	                           test rax, rax	      3504	undo.c	FUNCTION_61	WHILE_1
0x6b88	            0x75d1	                           jne 0x4006b9b	      3504	undo.c	FUNCTION_61	WHILE_1
0x6b8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3506	undo.c	FUNCTION_61	CALL_2
0x6b8e	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3506	undo.c	FUNCTION_61	CALL_2
0x6b95	          0x4889c7	                            mov rdi, rax	      3506	undo.c	FUNCTION_61	CALL_2
0x6b98	      0xe800000000	                          call 0x4006bdd	      3506	undo.c	FUNCTION_61	CALL_2
0x6b9d	              0x90	                                     nop	      3507	undo.c	FUNCTION_61
0x6b9e	              0xc9	                                   leave	      3507	undo.c	FUNCTION_61
0x6b9f	              0xc3	                                     ret	      3507	undo.c	FUNCTION_61
unserialize_uep	FOR,1:ELSE,1:functions,0:IF,6:CALL,11:DO,0:WHILE,0:SWITCH,0	119
0x23db	              0x55	                                push rbp	      1391	undo.c	FUNCTION_30
0x23dc	          0x4889e5	                            mov rbp, rsp	      1391	undo.c	FUNCTION_30
0x23df	        0x4883ec40	                           sub rsp, 0x40	      1391	undo.c	FUNCTION_30
0x23e3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1391	undo.c	FUNCTION_30
0x23e7	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1391	undo.c	FUNCTION_30
0x23eb	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1391	undo.c	FUNCTION_30
0x23ef	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1394	undo.c	FUNCTION_30
0x23f7	      0xbe00000000	                              mov esi, 0	      1398	undo.c	FUNCTION_30	CALL_1
0x23fc	      0xbf30000000	                           mov edi, 0x30	      1398	undo.c	FUNCTION_30	CALL_1
0x2401	      0xe800000000	                          call 0x4002446	      1398	undo.c	FUNCTION_30	CALL_1
0x2406	        0x488945f8	                mov qword [rbp - 8], rax	      1398	undo.c	FUNCTION_30	CALL_1
0x240a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1399	undo.c	FUNCTION_30	IF_1
0x240f	            0x750a	                           jne 0x400245b	      1399	undo.c	FUNCTION_30	IF_1
0x2411	      0xb800000000	                              mov eax, 0	      1400	undo.c	FUNCTION_30	IF_1
0x2416	      0xe999010000	                           jmp 0x40025f4	      1400	undo.c	FUNCTION_30	IF_1
0x241b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1401	undo.c	FUNCTION_30	CALL_2
0x241f	      0xba30000000	                           mov edx, 0x30	      1401	undo.c	FUNCTION_30	CALL_2
0x2424	      0xbe00000000	                              mov esi, 0	      1401	undo.c	FUNCTION_30	CALL_2
0x2429	          0x4889c7	                            mov rdi, rax	      1401	undo.c	FUNCTION_30	CALL_2
0x242c	      0xe800000000	                          call 0x4002471	      1401	undo.c	FUNCTION_30	CALL_2
0x2431	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1405	undo.c	FUNCTION_30	CALL_3
0x2435	          0x4889c7	                            mov rdi, rax	      1405	undo.c	FUNCTION_30	CALL_3
0x2438	      0xe83af0ffff	                   call sym.undo_read_4c	      1405	undo.c	FUNCTION_30	CALL_3
0x243d	          0x4863d0	                         movsxd rdx, eax	      1405	undo.c	FUNCTION_30	CALL_3
0x2440	        0x488b45f8	                mov rax, qword [rbp - 8]	      1405	undo.c	FUNCTION_30	CALL_3
0x2444	        0x48895008	                mov qword [rax + 8], rdx	      1405	undo.c	FUNCTION_30	CALL_3
0x2448	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1406	undo.c	FUNCTION_30	CALL_4
0x244c	          0x4889c7	                            mov rdi, rax	      1406	undo.c	FUNCTION_30	CALL_4
0x244f	      0xe823f0ffff	                   call sym.undo_read_4c	      1406	undo.c	FUNCTION_30	CALL_4
0x2454	          0x4863d0	                         movsxd rdx, eax	      1406	undo.c	FUNCTION_30	CALL_4
0x2457	        0x488b45f8	                mov rax, qword [rbp - 8]	      1406	undo.c	FUNCTION_30	CALL_4
0x245b	        0x48895010	             mov qword [rax + 0x10], rdx	      1406	undo.c	FUNCTION_30	CALL_4
0x245f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1407	undo.c	FUNCTION_30	CALL_5
0x2463	          0x4889c7	                            mov rdi, rax	      1407	undo.c	FUNCTION_30	CALL_5
0x2466	      0xe80cf0ffff	                   call sym.undo_read_4c	      1407	undo.c	FUNCTION_30	CALL_5
0x246b	          0x4863d0	                         movsxd rdx, eax	      1407	undo.c	FUNCTION_30	CALL_5
0x246e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1407	undo.c	FUNCTION_30	CALL_5
0x2472	        0x48895018	             mov qword [rax + 0x18], rdx	      1407	undo.c	FUNCTION_30	CALL_5
0x2476	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1408	undo.c	FUNCTION_30	CALL_6
0x247a	          0x4889c7	                            mov rdi, rax	      1408	undo.c	FUNCTION_30	CALL_6
0x247d	      0xe8f5efffff	                   call sym.undo_read_4c	      1408	undo.c	FUNCTION_30	CALL_6
0x2482	          0x4863d0	                         movsxd rdx, eax	      1408	undo.c	FUNCTION_30	CALL_6
0x2485	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	undo.c	FUNCTION_30	CALL_6
0x2489	        0x48895028	             mov qword [rax + 0x28], rdx	      1408	undo.c	FUNCTION_30	CALL_6
0x248d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1409	undo.c	FUNCTION_30	IF_2
0x2491	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1409	undo.c	FUNCTION_30	IF_2
0x2495	          0x4885c0	                           test rax, rax	      1409	undo.c	FUNCTION_30	IF_2
0x2498	            0x7e6f	                           jle 0x4002549	      1409	undo.c	FUNCTION_30	IF_2
0x249a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x249e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x24a2	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x24ac	          0x4839c2	                            cmp rdx, rax	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x24af	            0x7f1d	                            jg 0x400250e	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x24b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1412	undo.c	FUNCTION_30	IF_2	CALL_7
0x24b5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1412	undo.c	FUNCTION_30	IF_2	CALL_7
0x24b9	        0x48c1e003	                              shl rax, 3	      1412	undo.c	FUNCTION_30	IF_2	CALL_7
0x24bd	      0xbe00000000	                              mov esi, 0	      1412	undo.c	FUNCTION_30	IF_2	CALL_7
0x24c2	          0x4889c7	                            mov rdi, rax	      1412	undo.c	FUNCTION_30	IF_2	CALL_7
0x24c5	      0xe800000000	                          call 0x400250a	      1412	undo.c	FUNCTION_30	IF_2	CALL_7
0x24ca	        0x488945e8	             mov qword [rbp - 0x18], rax	      1412	undo.c	FUNCTION_30	IF_2	CALL_7
0x24ce	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1413	undo.c	FUNCTION_30	IF_2	IF_4
0x24d3	            0x7513	                           jne 0x4002528	      1413	undo.c	FUNCTION_30	IF_2	IF_4
0x24d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1415	undo.c	FUNCTION_30	IF_2	IF_4
0x24d9	    0xc70001000000	                      mov dword [rax], 1	      1415	undo.c	FUNCTION_30	IF_2	IF_4
0x24df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1416	undo.c	FUNCTION_30	IF_2	IF_4
0x24e3	      0xe9cc000000	                           jmp 0x40025f4	      1416	undo.c	FUNCTION_30	IF_2	IF_4
0x24e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	undo.c	FUNCTION_30	IF_2	CALL_8
0x24ec	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1418	undo.c	FUNCTION_30	IF_2	CALL_8
0x24f0	    0x488d14c50000	                        lea rdx, [rax*8]	      1418	undo.c	FUNCTION_30	IF_2	CALL_8
0x24f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1418	undo.c	FUNCTION_30	IF_2	CALL_8
0x24fc	      0xbe00000000	                              mov esi, 0	      1418	undo.c	FUNCTION_30	IF_2	CALL_8
0x2501	          0x4889c7	                            mov rdi, rax	      1418	undo.c	FUNCTION_30	IF_2	CALL_8
0x2504	      0xe800000000	                          call 0x4002549	      1418	undo.c	FUNCTION_30	IF_2	CALL_8
0x2509	        0x488b45f8	                mov rax, qword [rbp - 8]	      1420	undo.c	FUNCTION_30
0x250d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1420	undo.c	FUNCTION_30
0x2511	        0x48895020	             mov qword [rax + 0x20], rdx	      1420	undo.c	FUNCTION_30
0x2515	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1422	undo.c	FUNCTION_30	FOR_1
0x251c	            0xeb7b	                           jmp 0x40025d9	      1422	undo.c	FUNCTION_30	FOR_1
0x251e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1424	undo.c	FUNCTION_30	FOR_1	CALL_9
0x2522	          0x4889c7	                            mov rdi, rax	      1424	undo.c	FUNCTION_30	FOR_1	CALL_9
0x2525	      0xe84defffff	                   call sym.undo_read_4c	      1424	undo.c	FUNCTION_30	FOR_1	CALL_9
0x252a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1424	undo.c	FUNCTION_30	FOR_1	CALL_9
0x252d	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1425	undo.c	FUNCTION_30	FOR_1	IF_5
0x2531	            0x7817	                            js 0x400258a	      1425	undo.c	FUNCTION_30	FOR_1	IF_5
0x2533	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1426	undo.c	FUNCTION_30	FOR_1	CALL_10
0x2536	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1426	undo.c	FUNCTION_30	FOR_1	CALL_10
0x253a	            0x89d6	                            mov esi, edx	      1426	undo.c	FUNCTION_30	FOR_1	CALL_10
0x253c	          0x4889c7	                            mov rdi, rax	      1426	undo.c	FUNCTION_30	FOR_1	CALL_10
0x253f	      0xe817f3ffff	            call sym.read_string_decrypt	      1426	undo.c	FUNCTION_30	FOR_1	CALL_10
0x2544	        0x488945f0	             mov qword [rbp - 0x10], rax	      1426	undo.c	FUNCTION_30	FOR_1	CALL_10
0x2548	            0xeb19	                           jmp 0x40025a3	      1426	undo.c	FUNCTION_30	FOR_1	CALL_10
0x254a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1429	undo.c	FUNCTION_30	FOR_1	ELSE_1
0x2552	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_11
0x2556	          0x4889c6	                            mov rsi, rax	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_11
0x2559	      0xbf00000000	                              mov edi, 0	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_11
0x255e	      0xe899eaffff	               call sym.corruption_error	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_11
0x2563	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1432	undo.c	FUNCTION_30	FOR_1	IF_6
0x2568	            0x7510	                           jne 0x40025ba	      1432	undo.c	FUNCTION_30	FOR_1	IF_6
0x256a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1434	undo.c	FUNCTION_30	FOR_1	IF_6
0x256e	    0xc70001000000	                      mov dword [rax], 1	      1434	undo.c	FUNCTION_30	FOR_1	IF_6
0x2574	        0x488b45f8	                mov rax, qword [rbp - 8]	      1435	undo.c	FUNCTION_30	FOR_1	IF_6
0x2578	            0xeb3a	                           jmp 0x40025f4	      1435	undo.c	FUNCTION_30	FOR_1	IF_6
0x257a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1437	undo.c	FUNCTION_30	FOR_1
0x257d	            0x4898	                                    cdqe	      1437	undo.c	FUNCTION_30	FOR_1
0x257f	    0x488d14c50000	                        lea rdx, [rax*8]	      1437	undo.c	FUNCTION_30	FOR_1
0x2587	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1437	undo.c	FUNCTION_30	FOR_1
0x258b	          0x4801c2	                            add rdx, rax	      1437	undo.c	FUNCTION_30	FOR_1
0x258e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1437	undo.c	FUNCTION_30	FOR_1
0x2592	          0x488902	                    mov qword [rdx], rax	      1437	undo.c	FUNCTION_30	FOR_1
0x2595	        0x8345e001	               add dword [rbp - 0x20], 1	      1422	undo.c	FUNCTION_30	FOR_1
0x2599	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1422	undo.c	FUNCTION_30	FOR_1
0x259c	          0x4863d0	                         movsxd rdx, eax	      1422	undo.c	FUNCTION_30	FOR_1
0x259f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1422	undo.c	FUNCTION_30	FOR_1
0x25a3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1422	undo.c	FUNCTION_30	FOR_1
0x25a7	          0x4839c2	                            cmp rdx, rax	      1422	undo.c	FUNCTION_30	FOR_1
0x25aa	     0xf8c6effffff	                            jl 0x400255e	      1422	undo.c	FUNCTION_30	FOR_1
0x25b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1439	undo.c	FUNCTION_30
0x25b4	              0xc9	                                   leave	      1440	undo.c	FUNCTION_30
0x25b5	              0xc3	                                     ret	      1440	undo.c	FUNCTION_30
u_add_time	FOR,0:ELSE,2:functions,0:IF,2:CALL,8:DO,0:WHILE,0:SWITCH,0	60
0x5fd0	              0x55	                                push rbp	      3113	undo.c	FUNCTION_45
0x5fd1	          0x4889e5	                            mov rbp, rsp	      3113	undo.c	FUNCTION_45
0x5fd4	              0x53	                                push rbx	      3113	undo.c	FUNCTION_45
0x5fd5	        0x4883ec38	                           sub rsp, 0x38	      3113	undo.c	FUNCTION_45
0x5fd9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3113	undo.c	FUNCTION_45
0x5fdd	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3113	undo.c	FUNCTION_45
0x5fe1	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3113	undo.c	FUNCTION_45
0x5fe5	      0xe800000000	                          call 0x400602a	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x5fea	          0x4889c2	                            mov rdx, rax	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x5fed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x5ff1	          0x4829c2	                            sub rdx, rax	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x5ff4	          0x4889d0	                            mov rax, rdx	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x5ff7	        0x4883f863	                           cmp rax, 0x63	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x5ffb	            0x7e66	                           jle 0x40060a3	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x5ffd	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x6001	          0x4889c7	                            mov rdi, rax	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x6004	      0xe800000000	                          call 0x4006049	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x6009	        0x488945e8	             mov qword [rbp - 0x18], rax	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x600d	      0xe800000000	                          call 0x4006052	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x6012	          0x4889c2	                            mov rdx, rax	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x6015	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x6019	          0x4829c2	                            sub rdx, rax	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x601c	          0x4889d0	                            mov rax, rdx	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x601f	    0x483dbfa80000	                         cmp rax, 0xa8bf	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x6025	            0x7f1e	                            jg 0x4006085	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x6027	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x602b	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x602f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x6033	          0x4889d1	                            mov rcx, rdx	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x6036	      0xba00000000	                              mov edx, 0	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x603b	          0x4889c7	                            mov rdi, rax	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x603e	      0xe800000000	                          call 0x4006083	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x6043	            0xeb55	                           jmp 0x40060da	      3131	undo.c	FUNCTION_45
0x6045	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x6049	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x604d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x6051	          0x4889d1	                            mov rcx, rdx	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x6054	      0xba00000000	                              mov edx, 0	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x6059	          0x4889c7	                            mov rdi, rax	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x605c	      0xe800000000	                          call 0x40060a1	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x6061	            0xeb37	                           jmp 0x40060da	      3131	undo.c	FUNCTION_45
0x6063	      0xe800000000	                          call 0x40060a8	      3130	undo.c	FUNCTION_45	CALL_8
0x6068	          0x4889c2	                            mov rdx, rax	      3130	undo.c	FUNCTION_45	CALL_8
0x606b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x606f	          0x4889d3	                            mov rbx, rdx	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x6072	          0x4829c3	                            sub rbx, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x6075	      0xbf00000000	                              mov edi, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x607a	      0xe800000000	                          call 0x40060bf	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x607f	          0x4889c2	                            mov rdx, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x6082	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x6086	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x608a	          0x4889d9	                            mov rcx, rbx	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x608d	          0x4889c7	                            mov rdi, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x6090	      0xb800000000	                              mov eax, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x6095	      0xe800000000	                          call 0x40060da	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x609a	              0x90	                                     nop	      3131	undo.c	FUNCTION_45
0x609b	        0x4883c438	                           add rsp, 0x38	      3131	undo.c	FUNCTION_45
0x609f	              0x5b	                                 pop rbx	      3131	undo.c	FUNCTION_45
0x60a0	              0x5d	                                 pop rbp	      3131	undo.c	FUNCTION_45
0x60a1	              0xc3	                                     ret	      3131	undo.c	FUNCTION_45
u_read_undo	FOR,9:ELSE,2:functions,0:IF,46:CALL,86:DO,0:WHILE,2:SWITCH,1	786
0x2f5a	              0x55	                                push rbp	      1787	undo.c	FUNCTION_36
0x2f5b	          0x4889e5	                            mov rbp, rsp	      1787	undo.c	FUNCTION_36
0x2f5e	              0x53	                                push rbx	      1787	undo.c	FUNCTION_36
0x2f5f	    0x4881ec680200	                          sub rsp, 0x268	      1787	undo.c	FUNCTION_36
0x2f66	    0x4889bda8fdff	            mov qword [rbp - 0x258], rdi	      1787	undo.c	FUNCTION_36
0x2f6d	    0x4889b5a0fdff	            mov qword [rbp - 0x260], rsi	      1787	undo.c	FUNCTION_36
0x2f74	    0x48899598fdff	            mov qword [rbp - 0x268], rdx	      1787	undo.c	FUNCTION_36
0x2f7b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1787	undo.c	FUNCTION_36
0x2f84	        0x488945e8	             mov qword [rbp - 0x18], rax	      1787	undo.c	FUNCTION_36
0x2f88	            0x31c0	                            xor eax, eax	      1787	undo.c	FUNCTION_36
0x2f8a	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	      1791	undo.c	FUNCTION_36
0x2f95	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	      1795	undo.c	FUNCTION_36
0x2fa0	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	      1798	undo.c	FUNCTION_36
0x2fab	    0x66c785b2fdff	          mov word [rbp - 0x24e], 0xffff	      1799	undo.c	FUNCTION_36
0x2fb4	    0x66c785b4fdff	          mov word [rbp - 0x24c], 0xffff	      1799	undo.c	FUNCTION_36
0x2fbd	    0x66c785b6fdff	          mov word [rbp - 0x24a], 0xffff	      1799	undo.c	FUNCTION_36
0x2fc6	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      1800	undo.c	FUNCTION_36
0x2fd1	    0x48c785f0fdff	              mov qword [rbp - 0x210], 0	      1805	undo.c	FUNCTION_36
0x2fdc	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1817	undo.c	FUNCTION_36	CALL_1
0x2fe3	      0xba30000000	                           mov edx, 0x30	      1817	undo.c	FUNCTION_36	CALL_1
0x2fe8	      0xbe00000000	                              mov esi, 0	      1817	undo.c	FUNCTION_36	CALL_1
0x2fed	          0x4889c7	                            mov rdi, rax	      1817	undo.c	FUNCTION_36	CALL_1
0x2ff0	      0xe800000000	                          call 0x4003035	      1817	undo.c	FUNCTION_36	CALL_1
0x2ff5	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1818	undo.c	FUNCTION_36	IF_1
0x2ffd	     0xf85d0000000	                           jne 0x4003113	      1818	undo.c	FUNCTION_36	IF_1
0x3003	    0x488b05000000	            mov rax, qword [0x0400304a] 	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x300a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x3011	      0xbe01000000	                              mov esi, 1	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x3016	          0x4889c7	                            mov rdi, rax	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x3019	      0xe800000000	                          call 0x400305e	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x301e	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x3025	    0x4883bdd0fdff	              cmp qword [rbp - 0x230], 0	      1821	undo.c	FUNCTION_36	IF_1	IF_2
0x302d	     0xf844e0e0000	                            je 0x4003ec1	      1821	undo.c	FUNCTION_36	IF_1	IF_2
0x3033	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x303a	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x3041	          0x4889d6	                            mov rsi, rdx	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x3044	          0x4889c7	                            mov rdi, rax	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x3047	      0xe800000000	                          call 0x400308c	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x304c	            0x85c0	                           test eax, eax	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x304e	     0xf888d000000	                            js 0x4003121	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x3054	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x305b	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x3062	          0x4889d6	                            mov rsi, rdx	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x3065	          0x4889c7	                            mov rdi, rax	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x3068	      0xe800000000	                          call 0x40030ad	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x306d	            0x85c0	                           test eax, eax	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x306f	            0x7870	                            js 0x4003121	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x3071	    0x8b95acfeffff	            mov edx, dword [rbp - 0x154]	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x3077	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x307d	            0x39c2	                            cmp edx, eax	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x307f	            0x7460	                            je 0x4003121	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x3081	    0x8b9d3cffffff	             mov ebx, dword [rbp - 0xc4]	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x3087	      0xe800000000	                          call 0x40030cc	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x308c	            0x39c3	                            cmp ebx, eax	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x308e	            0x7451	                            je 0x4003121	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x3090	    0x488b05000000	            mov rax, qword [0x040030d7] 	      1832	undo.c	FUNCTION_36	IF_1	IF_3	IF_4
0x3097	          0x4885c0	                           test rax, rax	      1832	undo.c	FUNCTION_36	IF_1	IF_3	IF_4
0x309a	     0xf8ee40d0000	                           jle 0x4003ec4	      1832	undo.c	FUNCTION_36	IF_1	IF_3	IF_4
0x30a0	      0xe800000000	                          call 0x40030e5	      1834	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_6
0x30a5	      0xbf00000000	                              mov edi, 0	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30aa	      0xe800000000	                          call 0x40030ef	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30af	          0x4889c2	                            mov rdx, rax	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30b2	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30b9	          0x4889c6	                            mov rsi, rax	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30bc	          0x4889d7	                            mov rdi, rdx	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30bf	      0xb800000000	                              mov eax, 0	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30c4	      0xe800000000	                          call 0x4003109	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x30c9	      0xe800000000	                          call 0x400310e	      1837	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_9
0x30ce	      0xe9b10d0000	                           jmp 0x4003ec4	      1839	undo.c	FUNCTION_36	IF_1	IF_3
0x30d3	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      1844	undo.c	FUNCTION_36	ELSE_1
0x30da	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      1844	undo.c	FUNCTION_36	ELSE_1
0x30e1	    0x488b05000000	            mov rax, qword [0x04003128] 	      1846	undo.c	FUNCTION_36	ELSE_1	IF_5
0x30e8	          0x4885c0	                           test rax, rax	      1846	undo.c	FUNCTION_36	ELSE_1	IF_5
0x30eb	            0x7e2e	                           jle 0x400315b	      1846	undo.c	FUNCTION_36	ELSE_1	IF_5
0x30ed	      0xe800000000	                          call 0x4003132	      1848	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x30f2	      0xbf00000000	                              mov edi, 0	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x30f7	      0xe800000000	                          call 0x400313c	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x30fc	          0x4889c2	                            mov rdx, rax	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x30ff	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x3106	          0x4889c6	                            mov rsi, rax	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x3109	          0x4889d7	                            mov rdi, rdx	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x310c	      0xb800000000	                              mov eax, 0	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x3111	      0xe800000000	                          call 0x4003156	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x3116	      0xe800000000	                          call 0x400315b	      1850	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_13
0x311b	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1853	undo.c	FUNCTION_36	CALL_14
0x3122	      0xbe00000000	                              mov esi, 0	      1853	undo.c	FUNCTION_36	CALL_14
0x3127	          0x4889c7	                            mov rdi, rax	      1853	undo.c	FUNCTION_36	CALL_14
0x312a	      0xe800000000	                          call 0x400316f	      1853	undo.c	FUNCTION_36	CALL_14
0x312f	    0x48898500feff	            mov qword [rbp - 0x200], rax	      1853	undo.c	FUNCTION_36	CALL_14
0x3136	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      1854	undo.c	FUNCTION_36	IF_6
0x313e	            0x753e	                           jne 0x40031be	      1854	undo.c	FUNCTION_36	IF_6
0x3140	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x3148	            0x7510	                           jne 0x400319a	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x314a	    0x488b05000000	            mov rax, qword [0x04003191] 	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x3151	          0x4885c0	                           test rax, rax	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x3154	     0xf8e1f0c0000	                           jle 0x4003db9	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x315a	      0xbf00000000	                              mov edi, 0	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x315f	      0xe800000000	                          call 0x40031a4	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x3164	          0x4889c2	                            mov rdx, rax	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x3167	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x316e	          0x4889c6	                            mov rsi, rax	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x3171	          0x4889d7	                            mov rdi, rdx	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x3174	      0xe800000000	                          call 0x40031b9	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x3179	      0xe9fb0b0000	                           jmp 0x4003db9	      1858	undo.c	FUNCTION_36	IF_6
0x317e	    0x488b05000000	            mov rax, qword [0x040031c5] 	      1860	undo.c	FUNCTION_36
0x3185	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      1860	undo.c	FUNCTION_36
0x318c	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1861	undo.c	FUNCTION_36
0x3193	    0x48898568feff	            mov qword [rbp - 0x198], rax	      1861	undo.c	FUNCTION_36
0x319a	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31a1	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31a5	          0x4889d1	                            mov rcx, rdx	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31a8	      0xba01000000	                              mov edx, 1	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31ad	      0xbe09000000	                              mov esi, 9	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31b2	          0x4889c7	                            mov rdi, rax	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31b5	      0xe800000000	                          call 0x40031fa	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31ba	        0x4883f801	                              cmp rax, 1	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31be	            0x751a	                           jne 0x400321a	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x31c0	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x31c4	      0xba09000000	                              mov edx, 9	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x31c9	      0xbe00000000	                              mov esi, 0	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x31ce	          0x4889c7	                            mov rdi, rax	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x31d1	      0xe800000000	                          call 0x4003216	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x31d6	            0x85c0	                           test eax, eax	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x31d8	            0x7424	                            je 0x400323e	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x31da	      0xbf00000000	                              mov edi, 0	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x31df	      0xe800000000	                          call 0x4003224	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x31e4	          0x4889c2	                            mov rdx, rax	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x31e7	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x31ee	          0x4889c6	                            mov rsi, rax	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x31f1	          0x4889d7	                            mov rdi, rdx	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x31f4	      0xe800000000	                          call 0x4003239	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x31f9	      0xe9880b0000	                           jmp 0x4003dc6	      1870	undo.c	FUNCTION_36	IF_8
0x31fe	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1872	undo.c	FUNCTION_36	CALL_21
0x3205	          0x4889c7	                            mov rdi, rax	      1872	undo.c	FUNCTION_36	CALL_21
0x3208	      0xe800000000	                          call 0x400324d	      1872	undo.c	FUNCTION_36	CALL_21
0x320d	            0x4898	                                    cdqe	      1872	undo.c	FUNCTION_36	CALL_21
0x320f	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      1872	undo.c	FUNCTION_36	CALL_21
0x3216	    0x4881bd08feff	        cmp qword [rbp - 0x1f8], 0x8002 	      1873	undo.c	FUNCTION_36	IF_9
0x3221	     0xf85fc000000	                           jne 0x4003363	      1873	undo.c	FUNCTION_36	IF_9
0x3227	    0x488b05000000	            mov rax, qword [0x0400326e] 	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x322e	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x3235	           0xfb600	                   movzx eax, byte [rax]	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x3238	            0x84c0	                             test al, al	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x323a	            0x7524	                           jne 0x40032a0	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x323c	      0xbf00000000	                              mov edi, 0	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x3241	      0xe800000000	                          call 0x4003286	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x3246	          0x4889c2	                            mov rdx, rax	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x3249	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x3250	          0x4889c6	                            mov rsi, rax	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x3253	          0x4889d7	                            mov rdi, rdx	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x3256	      0xe800000000	                          call 0x400329b	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x325b	      0xe9260b0000	                           jmp 0x4003dc6	      1880	undo.c	FUNCTION_36	IF_9	IF_10
0x3260	    0x488b05000000	            mov rax, qword [0x040032a7] 	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x3267	    0x488b90101500	          mov rdx, qword [rax + 0x1510] 	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x326e	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x3275	          0x4889d6	                            mov rsi, rdx	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x3278	          0x4889c7	                            mov rdi, rax	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x327b	      0xe800000000	                          call 0x40032c0	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x3280	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x3287	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1883	undo.c	FUNCTION_36	IF_9	IF_11
0x328e	          0x4885c0	                           test rax, rax	      1883	undo.c	FUNCTION_36	IF_9	IF_11
0x3291	            0x7524	                           jne 0x40032f7	      1883	undo.c	FUNCTION_36	IF_9	IF_11
0x3293	      0xbf00000000	                              mov edi, 0	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x3298	      0xe800000000	                          call 0x40032dd	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x329d	          0x4889c2	                            mov rdx, rax	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x32a0	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x32a7	          0x4889c6	                            mov rsi, rax	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x32aa	          0x4889d7	                            mov rdi, rdx	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x32ad	      0xe800000000	                          call 0x40032f2	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x32b2	      0xe9cf0a0000	                           jmp 0x4003dc6	      1886	undo.c	FUNCTION_36	IF_9	IF_11
0x32b7	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x32be	            0x8b00	                    mov eax, dword [rax]	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x32c0	            0x89c7	                            mov edi, eax	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x32c2	      0xe800000000	                          call 0x4003307	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x32c7	            0x85c0	                           test eax, eax	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x32c9	     0xf8482000000	                            je 0x4003391	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x32cf	      0xbf00200000	                         mov edi, 0x2000	      1890	undo.c	FUNCTION_36	IF_9	IF_12	CALL_28
0x32d4	      0xe800000000	                          call 0x4003319	      1890	undo.c	FUNCTION_36	IF_9	IF_12	CALL_28
0x32d9	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1890	undo.c	FUNCTION_36	IF_9	IF_12	CALL_28
0x32e0	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1891	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x32e7	          0x4885c0	                           test rax, rax	      1891	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x32ea	            0x751f	                           jne 0x400334b	      1891	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x32ec	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1893	undo.c	FUNCTION_36	IF_9	IF_12	IF_13	CALL_29
0x32f3	          0x4889c7	                            mov rdi, rax	      1893	undo.c	FUNCTION_36	IF_9	IF_12	IF_13	CALL_29
0x32f6	      0xe800000000	                          call 0x400333b	      1893	undo.c	FUNCTION_36	IF_9	IF_12	IF_13	CALL_29
0x32fb	    0x48c78570feff	              mov qword [rbp - 0x190], 0	      1894	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x3306	      0xe97b0a0000	                           jmp 0x4003dc6	      1895	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x330b	    0x48c78588feff	              mov qword [rbp - 0x178], 0	      1897	undo.c	FUNCTION_36	IF_9	IF_12
0x3316	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      1898	undo.c	FUNCTION_36	IF_9	IF_12
0x3321	            0xeb2e	                           jmp 0x4003391	      1898	undo.c	FUNCTION_36	IF_9	IF_12
0x3323	    0x4883bd08feff	              cmp qword [rbp - 0x1f8], 2	      1905	undo.c	FUNCTION_36	ELSE_2	IF_14
0x332b	            0x7424	                            je 0x4003391	      1905	undo.c	FUNCTION_36	ELSE_2	IF_14
0x332d	      0xbf00000000	                              mov edi, 0	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x3332	      0xe800000000	                          call 0x4003377	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x3337	          0x4889c2	                            mov rdx, rax	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x333a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x3341	          0x4889c6	                            mov rsi, rax	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x3344	          0x4889d7	                            mov rdi, rdx	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x3347	      0xe800000000	                          call 0x400338c	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x334c	      0xe9350a0000	                           jmp 0x4003dc6	      1908	undo.c	FUNCTION_36	ELSE_2	IF_14
0x3351	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x3355	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x335c	      0xba20000000	                           mov edx, 0x20	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x3361	          0x4889ce	                            mov rsi, rcx	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x3364	          0x4889c7	                            mov rdi, rax	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x3367	      0xe83ee3ffff	                      call sym.undo_read	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x336c	            0x85c0	                           test eax, eax	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x336e	            0x7519	                           jne 0x40033c9	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x3370	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x3377	          0x4889c6	                            mov rsi, rax	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x337a	      0xbf00000000	                              mov edi, 0	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x337f	      0xe878dcffff	               call sym.corruption_error	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x3384	      0xe9fd090000	                           jmp 0x4003dc6	      1914	undo.c	FUNCTION_36	IF_15
0x3389	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1916	undo.c	FUNCTION_36	CALL_36
0x3390	          0x4889c7	                            mov rdi, rax	      1916	undo.c	FUNCTION_36	CALL_36
0x3393	      0xe8dfe0ffff	                   call sym.undo_read_4c	      1916	undo.c	FUNCTION_36	CALL_36
0x3398	            0x4898	                                    cdqe	      1916	undo.c	FUNCTION_36	CALL_36
0x339a	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      1916	undo.c	FUNCTION_36	CALL_36
0x33a1	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33a5	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33ac	      0xba20000000	                           mov edx, 0x20	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33b1	          0x4889ce	                            mov rsi, rcx	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33b4	          0x4889c7	                            mov rdi, rax	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33b7	      0xe800000000	                          call 0x40033fc	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33bc	            0x85c0	                           test eax, eax	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33be	            0x7513	                           jne 0x4003413	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x33c0	    0x488b05000000	            mov rax, qword [0x04003407] 	      1918	undo.c	FUNCTION_36	IF_16
0x33c7	          0x488b00	                    mov rax, qword [rax]	      1918	undo.c	FUNCTION_36	IF_16
0x33ca	    0x483b8510feff	            cmp rax, qword [rbp - 0x1f0]	      1918	undo.c	FUNCTION_36	IF_16
0x33d1	            0x7458	                            je 0x400346b	      1918	undo.c	FUNCTION_36	IF_16
0x33d3	    0x488b05000000	            mov rax, qword [0x0400341a] 	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x33da	          0x4885c0	                           test rax, rax	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x33dd	            0x7f0e	                            jg 0x400342d	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x33df	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x33e7	     0xf848f090000	                            je 0x4003dbc	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x33ed	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1922	undo.c	FUNCTION_36	IF_16	IF_17	IF_18
0x33f5	            0x7505	                           jne 0x400343c	      1922	undo.c	FUNCTION_36	IF_16	IF_17	IF_18
0x33f7	      0xe800000000	                          call 0x400343c	      1923	undo.c	FUNCTION_36	IF_16	IF_17	CALL_38
0x33fc	      0xbf00000000	                              mov edi, 0	      1925	undo.c	FUNCTION_36	IF_16	IF_17	CALL_40
0x3401	      0xe800000000	                          call 0x4003446	      1925	undo.c	FUNCTION_36	IF_16	IF_17	CALL_40
0x3406	      0xbe01000000	                              mov esi, 1	      1924	undo.c	FUNCTION_36	IF_16	IF_17	CALL_39
0x340b	          0x4889c7	                            mov rdi, rax	      1924	undo.c	FUNCTION_36	IF_16	IF_17	CALL_39
0x340e	      0xe800000000	                          call 0x4003453	      1924	undo.c	FUNCTION_36	IF_16	IF_17	CALL_39
0x3413	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1926	undo.c	FUNCTION_36	IF_16	IF_17	IF_19
0x341b	     0xf855b090000	                           jne 0x4003dbc	      1926	undo.c	FUNCTION_36	IF_16	IF_17	IF_19
0x3421	      0xe800000000	                          call 0x4003466	      1927	undo.c	FUNCTION_36	IF_16	IF_17	CALL_41
0x3426	      0xe951090000	                           jmp 0x4003dbc	      1929	undo.c	FUNCTION_36	IF_16
0x342b	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1933	undo.c	FUNCTION_36	CALL_42
0x3432	          0x4889c7	                            mov rdi, rax	      1933	undo.c	FUNCTION_36	CALL_42
0x3435	      0xe83de0ffff	                   call sym.undo_read_4c	      1933	undo.c	FUNCTION_36	CALL_42
0x343a	            0x4898	                                    cdqe	      1933	undo.c	FUNCTION_36	CALL_42
0x343c	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      1933	undo.c	FUNCTION_36	CALL_42
0x3443	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      1934	undo.c	FUNCTION_36	IF_20
0x344b	     0xf882e090000	                            js 0x4003dbf	      1934	undo.c	FUNCTION_36	IF_20
0x3451	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      1936	undo.c	FUNCTION_36	IF_21
0x3459	            0x7e21	                           jle 0x40034bc	      1936	undo.c	FUNCTION_36	IF_21
0x345b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      1937	undo.c	FUNCTION_36	CALL_43
0x3462	            0x89c2	                            mov edx, eax	      1937	undo.c	FUNCTION_36	CALL_43
0x3464	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1937	undo.c	FUNCTION_36	CALL_43
0x346b	            0x89d6	                            mov esi, edx	      1937	undo.c	FUNCTION_36	CALL_43
0x346d	          0x4889c7	                            mov rdi, rax	      1937	undo.c	FUNCTION_36	CALL_43
0x3470	      0xe8e6e3ffff	            call sym.read_string_decrypt	      1937	undo.c	FUNCTION_36	CALL_43
0x3475	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      1937	undo.c	FUNCTION_36	CALL_43
0x347c	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1938	undo.c	FUNCTION_36	CALL_44
0x3483	          0x4889c7	                            mov rdi, rax	      1938	undo.c	FUNCTION_36	CALL_44
0x3486	      0xe8ecdfffff	                   call sym.undo_read_4c	      1938	undo.c	FUNCTION_36	CALL_44
0x348b	            0x4898	                                    cdqe	      1938	undo.c	FUNCTION_36	CALL_44
0x348d	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      1938	undo.c	FUNCTION_36	CALL_44
0x3494	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1939	undo.c	FUNCTION_36	CALL_45
0x349b	          0x4889c7	                            mov rdi, rax	      1939	undo.c	FUNCTION_36	CALL_45
0x349e	      0xe8d4dfffff	                   call sym.undo_read_4c	      1939	undo.c	FUNCTION_36	CALL_45
0x34a3	    0x8985c4fdffff	            mov dword [rbp - 0x23c], eax	      1939	undo.c	FUNCTION_36	CALL_45
0x34a9	    0x4883bd20feff	              cmp qword [rbp - 0x1e0], 0	      1940	undo.c	FUNCTION_36	IF_22
0x34b1	            0x7809	                            js 0x40034fc	      1940	undo.c	FUNCTION_36	IF_22
0x34b3	    0x83bdc4fdffff	              cmp dword [rbp - 0x23c], 0	      1940	undo.c	FUNCTION_36	IF_22
0x34ba	            0x7919	                           jns 0x4003515	      1940	undo.c	FUNCTION_36	IF_22
0x34bc	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x34c3	          0x4889c6	                            mov rsi, rax	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x34c6	      0xbf00000000	                              mov edi, 0	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x34cb	      0xe82cdbffff	               call sym.corruption_error	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x34d0	      0xe9b1080000	                           jmp 0x4003dc6	      1943	undo.c	FUNCTION_36	IF_22
0x34d5	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1947	undo.c	FUNCTION_36	CALL_47
0x34dc	          0x4889c7	                            mov rdi, rax	      1947	undo.c	FUNCTION_36	CALL_47
0x34df	      0xe893dfffff	                   call sym.undo_read_4c	      1947	undo.c	FUNCTION_36	CALL_47
0x34e4	            0x4898	                                    cdqe	      1947	undo.c	FUNCTION_36	CALL_47
0x34e6	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      1947	undo.c	FUNCTION_36	CALL_47
0x34ed	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1948	undo.c	FUNCTION_36	CALL_48
0x34f4	          0x4889c7	                            mov rdi, rax	      1948	undo.c	FUNCTION_36	CALL_48
0x34f7	      0xe87bdfffff	                   call sym.undo_read_4c	      1948	undo.c	FUNCTION_36	CALL_48
0x34fc	            0x4898	                                    cdqe	      1948	undo.c	FUNCTION_36	CALL_48
0x34fe	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      1948	undo.c	FUNCTION_36	CALL_48
0x3505	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1949	undo.c	FUNCTION_36	CALL_49
0x350c	          0x4889c7	                            mov rdi, rax	      1949	undo.c	FUNCTION_36	CALL_49
0x350f	      0xe863dfffff	                   call sym.undo_read_4c	      1949	undo.c	FUNCTION_36	CALL_49
0x3514	            0x4898	                                    cdqe	      1949	undo.c	FUNCTION_36	CALL_49
0x3516	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      1949	undo.c	FUNCTION_36	CALL_49
0x351d	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1950	undo.c	FUNCTION_36	CALL_50
0x3524	          0x4889c7	                            mov rdi, rax	      1950	undo.c	FUNCTION_36	CALL_50
0x3527	      0xe84bdfffff	                   call sym.undo_read_4c	      1950	undo.c	FUNCTION_36	CALL_50
0x352c	            0x4898	                                    cdqe	      1950	undo.c	FUNCTION_36	CALL_50
0x352e	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      1950	undo.c	FUNCTION_36	CALL_50
0x3535	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1951	undo.c	FUNCTION_36	CALL_51
0x353c	          0x4889c7	                            mov rdi, rax	      1951	undo.c	FUNCTION_36	CALL_51
0x353f	      0xe833dfffff	                   call sym.undo_read_4c	      1951	undo.c	FUNCTION_36	CALL_51
0x3544	            0x4898	                                    cdqe	      1951	undo.c	FUNCTION_36	CALL_51
0x3546	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      1951	undo.c	FUNCTION_36	CALL_51
0x354d	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1952	undo.c	FUNCTION_36	CALL_52
0x3554	          0x4889c7	                            mov rdi, rax	      1952	undo.c	FUNCTION_36	CALL_52
0x3557	      0xe81bdfffff	                   call sym.undo_read_4c	      1952	undo.c	FUNCTION_36	CALL_52
0x355c	            0x4898	                                    cdqe	      1952	undo.c	FUNCTION_36	CALL_52
0x355e	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      1952	undo.c	FUNCTION_36	CALL_52
0x3565	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1953	undo.c	FUNCTION_36	CALL_53
0x356c	          0x4889c7	                            mov rdi, rax	      1953	undo.c	FUNCTION_36	CALL_53
0x356f	      0xe890e0ffff	                 call sym.undo_read_time	      1953	undo.c	FUNCTION_36	CALL_53
0x3574	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      1953	undo.c	FUNCTION_36	CALL_53
0x357b	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x3582	          0x4889c7	                            mov rdi, rax	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x3585	      0xe80be0ffff	                 call sym.undo_read_byte	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x358a	    0x8985c0fdffff	            mov dword [rbp - 0x240], eax	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x3590	    0x83bdc0fdffff	              cmp dword [rbp - 0x240], 0	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x3597	            0x7469	                            je 0x4003642	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x3599	    0x83bdc0fdffff	cmp dword [rbp - 0x240], 0xffffffffffffffff	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x35a0	            0x7460	                            je 0x4003642	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x35a2	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x35a9	          0x4889c7	                            mov rdi, rax	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x35ac	      0xe8e4dfffff	                 call sym.undo_read_byte	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x35b1	    0x8985c8fdffff	            mov dword [rbp - 0x238], eax	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x35b7	    0x8b85c8fdffff	            mov eax, dword [rbp - 0x238]	      1964	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x35bd	          0x83f801	                              cmp eax, 1	      1964	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x35c0	            0x751a	                           jne 0x400361c	      1964	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x35c2	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x35c9	          0x4889c7	                            mov rdi, rax	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x35cc	      0xe8a6deffff	                   call sym.undo_read_4c	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x35d1	            0x4898	                                    cdqe	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x35d3	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x35da	            0xeb21	                           jmp 0x400363d	      1968	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x35dc	            0xeb0f	                           jmp 0x400362d	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x35de	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1972	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_57
0x35e5	          0x4889c7	                            mov rdi, rax	      1972	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_57
0x35e8	      0xe8a8dfffff	                 call sym.undo_read_byte	      1972	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_57
0x35ed	    0x83adc0fdffff	              sub dword [rbp - 0x240], 1	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x35f4	    0x83bdc0fdffff	              cmp dword [rbp - 0x240], 0	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x35fb	            0x79e1	                           jns 0x400361e	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x35fd	      0xe979ffffff	                           jmp 0x40035bb	      1974	undo.c	FUNCTION_36	FOR_1
0x3602	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      1980	undo.c	FUNCTION_36	IF_24
0x360a	     0xf8eca000000	                           jle 0x400371a	      1980	undo.c	FUNCTION_36	IF_24
0x3610	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1982	undo.c	FUNCTION_36	IF_24	IF_25
0x361a	    0x483985f8fdff	           cmp qword [rbp - 0x208], rax 	      1982	undo.c	FUNCTION_36	IF_24	IF_25
0x3621	            0x7f1f	                            jg 0x4003682	      1982	undo.c	FUNCTION_36	IF_24	IF_25
0x3623	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      1983	undo.c	FUNCTION_36	IF_24	IF_25	CALL_58
0x362a	        0x48c1e003	                              shl rax, 3	      1983	undo.c	FUNCTION_36	IF_24	IF_25	CALL_58
0x362e	      0xbe00000000	                              mov esi, 0	      1983	undo.c	FUNCTION_36	IF_24	IF_25	CALL_58
0x3633	          0x4889c7	                            mov rdi, rax	      1983	undo.c	FUNCTION_36	IF_24	IF_25	CALL_58
0x3636	      0xe800000000	                          call 0x400367b	      1983	undo.c	FUNCTION_36	IF_24	IF_25	CALL_58
0x363b	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      1983	undo.c	FUNCTION_36	IF_24	IF_25	CALL_58
0x3642	    0x4883bdf0fdff	              cmp qword [rbp - 0x210], 0	      1985	undo.c	FUNCTION_36	IF_24	IF_26
0x364a	     0xf8432070000	                            je 0x4003dc2	      1985	undo.c	FUNCTION_36	IF_24	IF_26
0x3650	      0xe985000000	                           jmp 0x400371a	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_59
0x3655	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      1991	undo.c	FUNCTION_36	WHILE_2	IF_27
0x365c	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      1991	undo.c	FUNCTION_36	WHILE_2	IF_27
0x3663	            0x7c19	                            jl 0x40036be	      1991	undo.c	FUNCTION_36	WHILE_2	IF_27
0x3665	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_60
0x366c	          0x4889c6	                            mov rsi, rax	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_60
0x366f	      0xbf00000000	                              mov edi, 0	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_60
0x3674	      0xe883d9ffff	               call sym.corruption_error	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_60
0x3679	      0xe908070000	                           jmp 0x4003dc6	      1994	undo.c	FUNCTION_36	WHILE_2	IF_27
0x367e	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_61
0x3685	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_61
0x368c	          0x4889d6	                            mov rsi, rdx	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_61
0x368f	          0x4889c7	                            mov rdi, rax	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_61
0x3692	      0xe81ce9ffff	                call sym.unserialize_uhp	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_61
0x3697	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_61
0x369e	    0x4883bd58feff	              cmp qword [rbp - 0x1a8], 0	      1998	undo.c	FUNCTION_36	WHILE_2	IF_28
0x36a6	     0xf84d9060000	                            je 0x4003dc5	      1998	undo.c	FUNCTION_36	WHILE_2	IF_28
0x36ac	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2000	undo.c	FUNCTION_36	WHILE_2
0x36b3	        0x488d5001	                      lea rdx, [rax + 1]	      2000	undo.c	FUNCTION_36	WHILE_2
0x36b7	    0x488995e8fdff	            mov qword [rbp - 0x218], rdx	      2000	undo.c	FUNCTION_36	WHILE_2
0x36be	    0x488d14c50000	                        lea rdx, [rax*8]	      2000	undo.c	FUNCTION_36	WHILE_2
0x36c6	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2000	undo.c	FUNCTION_36	WHILE_2
0x36cd	          0x4801c2	                            add rdx, rax	      2000	undo.c	FUNCTION_36	WHILE_2
0x36d0	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2000	undo.c	FUNCTION_36	WHILE_2
0x36d7	          0x488902	                    mov qword [rdx], rax	      2000	undo.c	FUNCTION_36	WHILE_2
0x36da	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_59
0x36e1	          0x4889c7	                            mov rdi, rax	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_59
0x36e4	      0xe829deffff	                   call sym.undo_read_2c	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_59
0x36e9	    0x8985ccfdffff	            mov dword [rbp - 0x234], eax	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_59
0x36ef	    0x81bdccfdffff	        cmp dword [rbp - 0x234], 0x5fd0 	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_59
0x36f9	     0xf8456ffffff	                            je 0x4003695	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_59
0x36ff	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2003	undo.c	FUNCTION_36	IF_29
0x3706	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2003	undo.c	FUNCTION_36	IF_29
0x370d	            0x7419	                            je 0x4003768	      2003	undo.c	FUNCTION_36	IF_29
0x370f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2005	undo.c	FUNCTION_36	IF_29	CALL_62
0x3716	          0x4889c6	                            mov rsi, rax	      2005	undo.c	FUNCTION_36	IF_29	CALL_62
0x3719	      0xbf00000000	                              mov edi, 0	      2005	undo.c	FUNCTION_36	IF_29	CALL_62
0x371e	      0xe8d9d8ffff	               call sym.corruption_error	      2005	undo.c	FUNCTION_36	IF_29	CALL_62
0x3723	      0xe95e060000	                           jmp 0x4003dc6	      2006	undo.c	FUNCTION_36	IF_29
0x3728	    0x81bdccfdffff	        cmp dword [rbp - 0x234], 0xe7aa 	      2008	undo.c	FUNCTION_36	IF_30
0x3732	            0x7419	                            je 0x400378d	      2008	undo.c	FUNCTION_36	IF_30
0x3734	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2010	undo.c	FUNCTION_36	IF_30	CALL_63
0x373b	          0x4889c6	                            mov rsi, rax	      2010	undo.c	FUNCTION_36	IF_30	CALL_63
0x373e	      0xbf00000000	                              mov edi, 0	      2010	undo.c	FUNCTION_36	IF_30	CALL_63
0x3743	      0xe8b4d8ffff	               call sym.corruption_error	      2010	undo.c	FUNCTION_36	IF_30	CALL_63
0x3748	      0xe939060000	                           jmp 0x4003dc6	      2011	undo.c	FUNCTION_36	IF_30
0x374d	    0xc785b8fdffff	              mov dword [rbp - 0x248], 0	      2025	undo.c	FUNCTION_36	FOR_2
0x3757	      0xe934040000	                           jmp 0x4003bd0	      2025	undo.c	FUNCTION_36	FOR_2
0x375c	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2027	undo.c	FUNCTION_36	FOR_2
0x3762	            0x4898	                                    cdqe	      2027	undo.c	FUNCTION_36	FOR_2
0x3764	    0x488d14c50000	                        lea rdx, [rax*8]	      2027	undo.c	FUNCTION_36	FOR_2
0x376c	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2027	undo.c	FUNCTION_36	FOR_2
0x3773	          0x4801d0	                            add rax, rdx	      2027	undo.c	FUNCTION_36	FOR_2
0x3776	          0x488b00	                    mov rax, qword [rax]	      2027	undo.c	FUNCTION_36	FOR_2
0x3779	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      2027	undo.c	FUNCTION_36	FOR_2
0x3780	    0x4883bd58feff	              cmp qword [rbp - 0x1a8], 0	      2028	undo.c	FUNCTION_36	FOR_2	IF_31
0x3788	     0xf84fa030000	                            je 0x4003bc8	      2028	undo.c	FUNCTION_36	FOR_2	IF_31
0x378e	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x3798	      0xe997000000	                           jmp 0x4003874	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x379d	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37a3	            0x4898	                                    cdqe	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37a5	    0x488d14c50000	                        lea rdx, [rax*8]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37ad	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37b4	          0x4801d0	                            add rax, rdx	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37b7	          0x488b00	                    mov rax, qword [rax]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37ba	          0x4885c0	                           test rax, rax	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37bd	            0x746e	                            je 0x400386d	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37bf	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37c5	    0x3b85bcfdffff	            cmp eax, dword [rbp - 0x244]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37cb	            0x7460	                            je 0x400386d	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37cd	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37d3	            0x4898	                                    cdqe	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37d5	    0x488d14c50000	                        lea rdx, [rax*8]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37dd	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37e4	          0x4801d0	                            add rax, rdx	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37e7	          0x488b00	                    mov rax, qword [rax]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37ea	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37ee	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37f4	            0x4898	                                    cdqe	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37f6	    0x488d0cc50000	                        lea rcx, [rax*8]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x37fe	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x3805	          0x4801c8	                            add rax, rcx	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x3808	          0x488b00	                    mov rax, qword [rax]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x380b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x380f	          0x4839c2	                            cmp rdx, rax	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x3812	            0x7519	                           jne 0x400386d	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x3814	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_65
0x381b	          0x4889c6	                            mov rsi, rax	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_65
0x381e	      0xbf00000000	                              mov edi, 0	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_65
0x3823	      0xe8d4d7ffff	               call sym.corruption_error	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_65
0x3828	      0xe959050000	                           jmp 0x4003dc6	      2035	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x382d	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x3834	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x383a	            0x4898	                                    cdqe	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x383c	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x3843	     0xf8c54ffffff	                            jl 0x40037dd	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x3849	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x3853	      0xe982000000	                           jmp 0x400391a	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x3858	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x385e	            0x4898	                                    cdqe	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3860	    0x488d14c50000	                        lea rdx, [rax*8]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3868	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x386f	          0x4801d0	                            add rax, rdx	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3872	          0x488b00	                    mov rax, qword [rax]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3875	          0x4885c0	                           test rax, rax	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3878	            0x7459	                            je 0x4003913	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x387a	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3880	            0x4898	                                    cdqe	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3882	    0x488d14c50000	                        lea rdx, [rax*8]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x388a	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3891	          0x4801d0	                            add rax, rdx	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3894	          0x488b00	                    mov rax, qword [rax]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x3897	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x389b	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38a2	          0x488b00	                    mov rax, qword [rax]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38a5	          0x4839c2	                            cmp rdx, rax	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38a8	            0x7529	                           jne 0x4003913	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38aa	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38b0	            0x4898	                                    cdqe	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38b2	    0x488d14c50000	                        lea rdx, [rax*8]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38ba	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38c1	          0x4801d0	                            add rax, rdx	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38c4	          0x488b10	                    mov rdx, qword [rax]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38c7	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38ce	          0x488910	                    mov qword [rax], rdx	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38d1	            0xeb1c	                           jmp 0x400392f	      2043	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x38d3	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x38da	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x38e0	            0x4898	                                    cdqe	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x38e2	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x38e9	     0xf8c69ffffff	                            jl 0x4003898	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x38ef	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x38f9	      0xe984000000	                           jmp 0x40039c2	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x38fe	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3904	            0x4898	                                    cdqe	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3906	    0x488d14c50000	                        lea rdx, [rax*8]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x390e	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3915	          0x4801d0	                            add rax, rdx	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3918	          0x488b00	                    mov rax, qword [rax]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x391b	          0x4885c0	                           test rax, rax	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x391e	            0x745b	                            je 0x40039bb	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3920	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3926	            0x4898	                                    cdqe	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3928	    0x488d14c50000	                        lea rdx, [rax*8]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3930	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3937	          0x4801d0	                            add rax, rdx	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x393a	          0x488b00	                    mov rax, qword [rax]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x393d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3941	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3948	        0x488b4008	                mov rax, qword [rax + 8]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x394c	          0x4839c2	                            cmp rdx, rax	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x394f	            0x752a	                           jne 0x40039bb	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3951	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3957	            0x4898	                                    cdqe	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3959	    0x488d14c50000	                        lea rdx, [rax*8]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3961	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3968	          0x4801d0	                            add rax, rdx	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x396b	          0x488b10	                    mov rdx, qword [rax]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x396e	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3975	        0x48895008	                mov qword [rax + 8], rdx	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x3979	            0xeb1c	                           jmp 0x40039d7	      2051	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x397b	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x3982	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x3988	            0x4898	                                    cdqe	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x398a	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x3991	     0xf8c67ffffff	                            jl 0x400393e	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x3997	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x39a1	      0xe984000000	                           jmp 0x4003a6a	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x39a6	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39ac	            0x4898	                                    cdqe	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39ae	    0x488d14c50000	                        lea rdx, [rax*8]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39b6	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39bd	          0x4801d0	                            add rax, rdx	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39c0	          0x488b00	                    mov rax, qword [rax]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39c3	          0x4885c0	                           test rax, rax	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39c6	            0x745b	                            je 0x4003a63	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39c8	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39ce	            0x4898	                                    cdqe	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39d0	    0x488d14c50000	                        lea rdx, [rax*8]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39d8	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39df	          0x4801d0	                            add rax, rdx	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39e2	          0x488b00	                    mov rax, qword [rax]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39e5	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39e9	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39f0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39f4	          0x4839c2	                            cmp rdx, rax	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39f7	            0x752a	                           jne 0x4003a63	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39f9	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x39ff	            0x4898	                                    cdqe	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a01	    0x488d14c50000	                        lea rdx, [rax*8]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a09	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a10	          0x4801d0	                            add rax, rdx	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a13	          0x488b10	                    mov rdx, qword [rax]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a16	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a1d	        0x48895010	             mov qword [rax + 0x10], rdx	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a21	            0xeb1c	                           jmp 0x4003a7f	      2059	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x3a23	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x3a2a	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x3a30	            0x4898	                                    cdqe	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x3a32	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x3a39	     0xf8c67ffffff	                            jl 0x40039e6	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x3a3f	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x3a49	      0xe984000000	                           jmp 0x4003b12	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x3a4e	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a54	            0x4898	                                    cdqe	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a56	    0x488d14c50000	                        lea rdx, [rax*8]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a5e	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a65	          0x4801d0	                            add rax, rdx	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a68	          0x488b00	                    mov rax, qword [rax]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a6b	          0x4885c0	                           test rax, rax	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a6e	            0x745b	                            je 0x4003b0b	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a70	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a76	            0x4898	                                    cdqe	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a78	    0x488d14c50000	                        lea rdx, [rax*8]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a80	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a87	          0x4801d0	                            add rax, rdx	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a8a	          0x488b00	                    mov rax, qword [rax]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a8d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a91	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a98	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a9c	          0x4839c2	                            cmp rdx, rax	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3a9f	            0x752a	                           jne 0x4003b0b	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3aa1	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3aa7	            0x4898	                                    cdqe	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3aa9	    0x488d14c50000	                        lea rdx, [rax*8]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3ab1	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3ab8	          0x4801d0	                            add rax, rdx	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3abb	          0x488b10	                    mov rdx, qword [rax]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3abe	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3ac5	        0x48895018	             mov qword [rax + 0x18], rdx	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3ac9	            0xeb1c	                           jmp 0x4003b27	      2067	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x3acb	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x3ad2	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x3ad8	            0x4898	                                    cdqe	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x3ada	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x3ae1	     0xf8c67ffffff	                            jl 0x4003a8e	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x3ae7	    0x4883bd28feff	              cmp qword [rbp - 0x1d8], 0	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3aef	            0x7e2b	                           jle 0x4003b5c	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3af1	    0x6683bdb2fdff	               cmp word [rbp - 0x24e], 0	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3af9	            0x7921	                           jns 0x4003b5c	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3afb	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3b02	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3b06	    0x483b8528feff	            cmp rax, qword [rbp - 0x1d8]	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3b0d	            0x750d	                           jne 0x4003b5c	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x3b0f	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2071	undo.c	FUNCTION_36	FOR_2	IF_37
0x3b15	    0x668985b2fdff	              mov word [rbp - 0x24e], ax	      2071	undo.c	FUNCTION_36	FOR_2	IF_37
0x3b1c	    0x4883bd30feff	              cmp qword [rbp - 0x1d0], 0	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b24	            0x7e2b	                           jle 0x4003b91	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b26	    0x6683bdb4fdff	               cmp word [rbp - 0x24c], 0	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b2e	            0x7921	                           jns 0x4003b91	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b30	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b37	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b3b	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b42	            0x750d	                           jne 0x4003b91	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b44	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2076	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b4a	    0x668985b4fdff	              mov word [rbp - 0x24c], ax	      2076	undo.c	FUNCTION_36	FOR_2	IF_38
0x3b51	    0x4883bd38feff	              cmp qword [rbp - 0x1c8], 0	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b59	            0x7e2e	                           jle 0x4003bc9	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b5b	    0x6683bdb6fdff	               cmp word [rbp - 0x24a], 0	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b63	            0x7924	                           jns 0x4003bc9	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b65	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b6c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b70	    0x483b8538feff	            cmp rax, qword [rbp - 0x1c8]	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b77	            0x7510	                           jne 0x4003bc9	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b79	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2081	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b7f	    0x668985b6fdff	              mov word [rbp - 0x24a], ax	      2081	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b86	            0xeb01	                           jmp 0x4003bc9	      2081	undo.c	FUNCTION_36	FOR_2	IF_39
0x3b88	              0x90	                                     nop	      2029	undo.c	FUNCTION_36	FOR_2	IF_31
0x3b89	    0x8385b8fdffff	              add dword [rbp - 0x248], 1	      2025	undo.c	FUNCTION_36	FOR_2
0x3b90	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2025	undo.c	FUNCTION_36	FOR_2
0x3b96	            0x4898	                                    cdqe	      2025	undo.c	FUNCTION_36	FOR_2
0x3b98	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2025	undo.c	FUNCTION_36	FOR_2
0x3b9f	     0xf8cb7fbffff	                            jl 0x400379c	      2025	undo.c	FUNCTION_36	FOR_2
0x3ba5	    0x488b05000000	            mov rax, qword [0x04003bec] 	      2088	undo.c	FUNCTION_36	CALL_73
0x3bac	          0x4889c7	                            mov rdi, rax	      2088	undo.c	FUNCTION_36	CALL_73
0x3baf	      0xe800000000	                          call 0x4003bf4	      2088	undo.c	FUNCTION_36	CALL_73
0x3bb4	    0x488b15000000	            mov rdx, qword [0x04003bfb] 	      2089	undo.c	FUNCTION_36
0x3bbb	    0x6683bdb2fdff	               cmp word [rbp - 0x24e], 0	      2089	undo.c	FUNCTION_36
0x3bc3	            0x781f	                            js 0x4003c24	      2089	undo.c	FUNCTION_36
0x3bc5	    0x480fbf85b2fd	           movsx rax, word [rbp - 0x24e]	      2089	undo.c	FUNCTION_36
0x3bcd	    0x488d0cc50000	                        lea rcx, [rax*8]	      2089	undo.c	FUNCTION_36
0x3bd5	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2089	undo.c	FUNCTION_36
0x3bdc	          0x4801c8	                            add rax, rcx	      2089	undo.c	FUNCTION_36
0x3bdf	          0x488b00	                    mov rax, qword [rax]	      2089	undo.c	FUNCTION_36
0x3be2	            0xeb05	                           jmp 0x4003c29	      2089	undo.c	FUNCTION_36
0x3be4	      0xb800000000	                              mov eax, 0	      2089	undo.c	FUNCTION_36
0x3be9	    0x488982181200	          mov qword [rdx + 0x1218], rax 	      2089	undo.c	FUNCTION_36
0x3bf0	    0x488b15000000	            mov rdx, qword [0x04003c37] 	      2090	undo.c	FUNCTION_36
0x3bf7	    0x6683bdb4fdff	               cmp word [rbp - 0x24c], 0	      2090	undo.c	FUNCTION_36
0x3bff	            0x781f	                            js 0x4003c60	      2090	undo.c	FUNCTION_36
0x3c01	    0x480fbf85b4fd	           movsx rax, word [rbp - 0x24c]	      2090	undo.c	FUNCTION_36
0x3c09	    0x488d0cc50000	                        lea rcx, [rax*8]	      2090	undo.c	FUNCTION_36
0x3c11	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2090	undo.c	FUNCTION_36
0x3c18	          0x4801c8	                            add rax, rcx	      2090	undo.c	FUNCTION_36
0x3c1b	          0x488b00	                    mov rax, qword [rax]	      2090	undo.c	FUNCTION_36
0x3c1e	            0xeb05	                           jmp 0x4003c65	      2090	undo.c	FUNCTION_36
0x3c20	      0xb800000000	                              mov eax, 0	      2090	undo.c	FUNCTION_36
0x3c25	    0x488982201200	          mov qword [rdx + 0x1220], rax 	      2090	undo.c	FUNCTION_36
0x3c2c	    0x488b15000000	            mov rdx, qword [0x04003c73] 	      2091	undo.c	FUNCTION_36
0x3c33	    0x6683bdb6fdff	               cmp word [rbp - 0x24a], 0	      2091	undo.c	FUNCTION_36
0x3c3b	            0x781f	                            js 0x4003c9c	      2091	undo.c	FUNCTION_36
0x3c3d	    0x480fbf85b6fd	           movsx rax, word [rbp - 0x24a]	      2091	undo.c	FUNCTION_36
0x3c45	    0x488d0cc50000	                        lea rcx, [rax*8]	      2091	undo.c	FUNCTION_36
0x3c4d	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2091	undo.c	FUNCTION_36
0x3c54	          0x4801c8	                            add rax, rcx	      2091	undo.c	FUNCTION_36
0x3c57	          0x488b00	                    mov rax, qword [rax]	      2091	undo.c	FUNCTION_36
0x3c5a	            0xeb05	                           jmp 0x4003ca1	      2091	undo.c	FUNCTION_36
0x3c5c	      0xb800000000	                              mov eax, 0	      2091	undo.c	FUNCTION_36
0x3c61	    0x488982281200	          mov qword [rdx + 0x1228], rax 	      2091	undo.c	FUNCTION_36
0x3c68	    0x488b05000000	            mov rax, qword [0x04003caf] 	      2092	undo.c	FUNCTION_36
0x3c6f	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      2092	undo.c	FUNCTION_36
0x3c76	    0x488990601200	          mov qword [rax + 0x1260], rdx 	      2092	undo.c	FUNCTION_36
0x3c7d	    0x488b05000000	            mov rax, qword [0x04003cc4] 	      2093	undo.c	FUNCTION_36
0x3c84	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      2093	undo.c	FUNCTION_36
0x3c8b	    0x488990681200	          mov qword [rax + 0x1268], rdx 	      2093	undo.c	FUNCTION_36
0x3c92	    0x488b05000000	            mov rax, qword [0x04003cd9] 	      2094	undo.c	FUNCTION_36
0x3c99	    0x8b95c4fdffff	            mov edx, dword [rbp - 0x23c]	      2094	undo.c	FUNCTION_36
0x3c9f	    0x899070120000	          mov dword [rax + 0x1270], edx 	      2094	undo.c	FUNCTION_36
0x3ca5	    0x488b05000000	            mov rax, qword [0x04003cec] 	      2095	undo.c	FUNCTION_36
0x3cac	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2095	undo.c	FUNCTION_36
0x3cb3	    0x899030120000	          mov dword [rax + 0x1230], edx 	      2095	undo.c	FUNCTION_36
0x3cb9	    0x488b05000000	            mov rax, qword [0x04003d00] 	      2096	undo.c	FUNCTION_36
0x3cc0	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      2096	undo.c	FUNCTION_36
0x3cc7	    0x488990381200	          mov qword [rax + 0x1238], rdx 	      2096	undo.c	FUNCTION_36
0x3cce	    0x488b05000000	            mov rax, qword [0x04003d15] 	      2097	undo.c	FUNCTION_36
0x3cd5	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      2097	undo.c	FUNCTION_36
0x3cdc	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2097	undo.c	FUNCTION_36
0x3ce3	    0x488b05000000	            mov rax, qword [0x04003d2a] 	      2098	undo.c	FUNCTION_36
0x3cea	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      2098	undo.c	FUNCTION_36
0x3cf1	    0x488990501200	          mov qword [rax + 0x1250], rdx 	      2098	undo.c	FUNCTION_36
0x3cf8	    0x488b05000000	            mov rax, qword [0x04003d3f] 	      2099	undo.c	FUNCTION_36
0x3cff	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2099	undo.c	FUNCTION_36
0x3d06	    0x488990401200	          mov qword [rax + 0x1240], rdx 	      2099	undo.c	FUNCTION_36
0x3d0d	    0x488b05000000	            mov rax, qword [0x04003d54] 	      2100	undo.c	FUNCTION_36
0x3d14	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2100	undo.c	FUNCTION_36
0x3d1b	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2100	undo.c	FUNCTION_36
0x3d22	    0x488b05000000	            mov rax, qword [0x04003d69] 	      2102	undo.c	FUNCTION_36
0x3d29	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2102	undo.c	FUNCTION_36
0x3d33	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2103	undo.c	FUNCTION_36	CALL_74
0x3d3a	          0x4889c7	                            mov rdi, rax	      2103	undo.c	FUNCTION_36	CALL_74
0x3d3d	      0xe800000000	                          call 0x4003d82	      2103	undo.c	FUNCTION_36	CALL_74
0x3d42	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      2113	undo.c	FUNCTION_36	IF_41
0x3d4a	     0xf84cb000000	                            je 0x4003e5b	      2113	undo.c	FUNCTION_36	IF_41
0x3d50	      0xbf00000000	                              mov edi, 0	      2114	undo.c	FUNCTION_36	CALL_79
0x3d55	      0xe800000000	                          call 0x4003d9a	      2114	undo.c	FUNCTION_36	CALL_79
0x3d5a	          0x4889c2	                            mov rdx, rax	      2114	undo.c	FUNCTION_36	CALL_79
0x3d5d	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2114	undo.c	FUNCTION_36	CALL_79
0x3d64	          0x4889c6	                            mov rsi, rax	      2114	undo.c	FUNCTION_36	CALL_79
0x3d67	          0x4889d7	                            mov rdi, rdx	      2114	undo.c	FUNCTION_36	CALL_79
0x3d6a	      0xb800000000	                              mov eax, 0	      2114	undo.c	FUNCTION_36	CALL_79
0x3d6f	      0xe800000000	                          call 0x4003db4	      2114	undo.c	FUNCTION_36	CALL_79
0x3d74	      0xe9a2000000	                           jmp 0x4003e5b	      2115	undo.c	FUNCTION_36
0x3d79	              0x90	                                     nop	      1858	undo.c	FUNCTION_36	IF_6
0x3d7a	            0xeb0a	                           jmp 0x4003dc6	      1858	undo.c	FUNCTION_36	IF_6
0x3d7c	              0x90	                                     nop	      1929	undo.c	FUNCTION_36	IF_16
0x3d7d	            0xeb07	                           jmp 0x4003dc6	      1929	undo.c	FUNCTION_36	IF_16
0x3d7f	              0x90	                                     nop	      1935	undo.c	FUNCTION_36	IF_20
0x3d80	            0xeb04	                           jmp 0x4003dc6	      1935	undo.c	FUNCTION_36	IF_20
0x3d82	              0x90	                                     nop	      1986	undo.c	FUNCTION_36	IF_24	IF_26
0x3d83	            0xeb01	                           jmp 0x4003dc6	      1986	undo.c	FUNCTION_36	IF_24	IF_26
0x3d85	              0x90	                                     nop	      1999	undo.c	FUNCTION_36	WHILE_2	IF_28
0x3d86	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2118	undo.c	FUNCTION_36	CALL_80
0x3d8d	          0x4889c7	                            mov rdi, rax	      2118	undo.c	FUNCTION_36	CALL_80
0x3d90	      0xe800000000	                          call 0x4003dd5	      2118	undo.c	FUNCTION_36	CALL_80
0x3d95	    0x4883bdf0fdff	              cmp qword [rbp - 0x210], 0	      2119	undo.c	FUNCTION_36	IF_42
0x3d9d	            0x747d	                            je 0x4003e5c	      2119	undo.c	FUNCTION_36	IF_42
0x3d9f	    0xc785b8fdffff	              mov dword [rbp - 0x248], 0	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x3da9	            0xeb4e	                           jmp 0x4003e39	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x3dab	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3db1	            0x4898	                                    cdqe	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3db3	    0x488d14c50000	                        lea rdx, [rax*8]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dbb	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dc2	          0x4801d0	                            add rax, rdx	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dc5	          0x488b00	                    mov rax, qword [rax]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dc8	          0x4885c0	                           test rax, rax	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dcb	            0x7425	                            je 0x4003e32	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dcd	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dd3	            0x4898	                                    cdqe	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dd5	    0x488d14c50000	                        lea rdx, [rax*8]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3ddd	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3de4	          0x4801d0	                            add rax, rdx	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3de7	          0x488b00	                    mov rax, qword [rax]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3dea	          0x4889c7	                            mov rdi, rax	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3ded	      0xe83dd2ffff	                     call sym.u_free_uhp	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x3df2	    0x8385b8fdffff	              add dword [rbp - 0x248], 1	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x3df9	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x3dff	            0x4898	                                    cdqe	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x3e01	    0x483b85e8fdff	            cmp rax, qword [rbp - 0x218]	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x3e08	            0x7ca1	                            jl 0x4003deb	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x3e0a	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2124	undo.c	FUNCTION_36	IF_42	CALL_82
0x3e11	          0x4889c7	                            mov rdi, rax	      2124	undo.c	FUNCTION_36	IF_42	CALL_82
0x3e14	      0xe800000000	                          call 0x4003e59	      2124	undo.c	FUNCTION_36	IF_42	CALL_82
0x3e19	            0xeb01	                           jmp 0x4003e5c	      2124	undo.c	FUNCTION_36	IF_42	CALL_82
0x3e1b	              0x90	                                     nop	      2115	undo.c	FUNCTION_36
0x3e1c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2129	undo.c	FUNCTION_36	IF_44
0x3e23	          0x4885c0	                           test rax, rax	      2129	undo.c	FUNCTION_36	IF_44
0x3e26	            0x740f	                            je 0x4003e77	      2129	undo.c	FUNCTION_36	IF_44
0x3e28	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2130	undo.c	FUNCTION_36	CALL_83
0x3e2f	          0x4889c7	                            mov rdi, rax	      2130	undo.c	FUNCTION_36	CALL_83
0x3e32	      0xe800000000	                          call 0x4003e77	      2130	undo.c	FUNCTION_36	CALL_83
0x3e37	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2131	undo.c	FUNCTION_36	CALL_84
0x3e3e	          0x4889c7	                            mov rdi, rax	      2131	undo.c	FUNCTION_36	CALL_84
0x3e41	      0xe800000000	                          call 0x4003e86	      2131	undo.c	FUNCTION_36	CALL_84
0x3e46	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      2133	undo.c	FUNCTION_36	IF_45
0x3e4e	            0x740f	                            je 0x4003e9f	      2133	undo.c	FUNCTION_36	IF_45
0x3e50	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2134	undo.c	FUNCTION_36	CALL_85
0x3e57	          0x4889c7	                            mov rdi, rax	      2134	undo.c	FUNCTION_36	CALL_85
0x3e5a	      0xe800000000	                          call 0x4003e9f	      2134	undo.c	FUNCTION_36	CALL_85
0x3e5f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2135	undo.c	FUNCTION_36	IF_46
0x3e66	    0x483b85a8fdff	            cmp rax, qword [rbp - 0x258]	      2135	undo.c	FUNCTION_36	IF_46
0x3e6d	            0x7418	                            je 0x4003ec7	      2135	undo.c	FUNCTION_36	IF_46
0x3e6f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2136	undo.c	FUNCTION_36	CALL_86
0x3e76	          0x4889c7	                            mov rdi, rax	      2136	undo.c	FUNCTION_36	CALL_86
0x3e79	      0xe800000000	                          call 0x4003ebe	      2136	undo.c	FUNCTION_36	CALL_86
0x3e7e	              0x90	                                     nop	      2137	undo.c	FUNCTION_36
0x3e7f	            0xeb06	                           jmp 0x4003ec7	      2137	undo.c	FUNCTION_36
0x3e81	              0x90	                                     nop	      1822	undo.c	FUNCTION_36	IF_1	IF_2
0x3e82	            0xeb04	                           jmp 0x4003ec8	      1822	undo.c	FUNCTION_36	IF_1	IF_2
0x3e84	              0x90	                                     nop	      1839	undo.c	FUNCTION_36	IF_1	IF_3
0x3e85	            0xeb01	                           jmp 0x4003ec8	      1839	undo.c	FUNCTION_36	IF_1	IF_3
0x3e87	              0x90	                                     nop	      2137	undo.c	FUNCTION_36
0x3e88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2138	undo.c	FUNCTION_36
0x3e8c	    0x644833042528	                xor rax, qword fs:[0x28]	      2138	undo.c	FUNCTION_36
0x3e95	            0x7405	                            je 0x4003edc	      2138	undo.c	FUNCTION_36
0x3e97	      0xe800000000	                          call 0x4003edc	      2138	undo.c	FUNCTION_36
0x3e9c	    0x4881c4680200	                          add rsp, 0x268	      2138	undo.c	FUNCTION_36
0x3ea3	              0x5b	                                 pop rbx	      2138	undo.c	FUNCTION_36
0x3ea4	              0x5d	                                 pop rbp	      2138	undo.c	FUNCTION_36
0x3ea5	              0xc3	                                     ret	      2138	undo.c	FUNCTION_36
fwrite_crypt	FOR,0:ELSE,1:functions,0:IF,4:CALL,5:DO,0:WHILE,0:SWITCH,0	69
0x126d	              0x55	                                push rbp	       938	undo.c	FUNCTION_17
0x126e	          0x4889e5	                            mov rbp, rsp	       938	undo.c	FUNCTION_17
0x1271	    0x4881eca00000	                           sub rsp, 0xa0	       938	undo.c	FUNCTION_17
0x1278	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       938	undo.c	FUNCTION_17
0x127f	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       938	undo.c	FUNCTION_17
0x1286	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       938	undo.c	FUNCTION_17
0x128d	    0x64488b042528	                mov rax, qword fs:[0x28]	       938	undo.c	FUNCTION_17
0x1296	        0x488945f8	                mov qword [rbp - 8], rax	       938	undo.c	FUNCTION_17
0x129a	            0x31c0	                            xor eax, eax	       938	undo.c	FUNCTION_17
0x129c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       944	undo.c	FUNCTION_17	IF_1
0x12a3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       944	undo.c	FUNCTION_17	IF_1
0x12a7	          0x4885c0	                           test rax, rax	       944	undo.c	FUNCTION_17	IF_1
0x12aa	     0xf84c3000000	                            je 0x40013b3	       944	undo.c	FUNCTION_17	IF_1
0x12b0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       944	undo.c	FUNCTION_17	IF_1
0x12b7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       944	undo.c	FUNCTION_17	IF_1
0x12bb	          0x4885c0	                           test rax, rax	       944	undo.c	FUNCTION_17	IF_1
0x12be	     0xf85af000000	                           jne 0x40013b3	       944	undo.c	FUNCTION_17	IF_1
0x12c4	    0x4883bd68ffff	           cmp qword [rbp - 0x98], 0x63 	       947	undo.c	FUNCTION_17	IF_1	IF_2
0x12cc	            0x770a	                            ja 0x4001318	       947	undo.c	FUNCTION_17	IF_1	IF_2
0x12ce	        0x488d4590	                   lea rax, [rbp - 0x70]	       948	undo.c	FUNCTION_17	IF_1	IF_2
0x12d2	        0x48894580	             mov qword [rbp - 0x80], rax	       948	undo.c	FUNCTION_17	IF_1	IF_2
0x12d6	            0xeb29	                           jmp 0x4001341	       948	undo.c	FUNCTION_17	IF_1	IF_2
0x12d8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x12df	      0xbe00000000	                              mov esi, 0	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x12e4	          0x4889c7	                            mov rdi, rax	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x12e7	      0xe800000000	                          call 0x400132c	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x12ec	        0x48894580	             mov qword [rbp - 0x80], rax	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x12f0	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       952	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x12f5	            0x750a	                           jne 0x4001341	       952	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x12f7	      0xb800000000	                              mov eax, 0	       953	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x12fc	      0xe992000000	                           jmp 0x40013d3	       953	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x1301	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x1308	        0x488b4010	            mov rax, qword [rax + 0x10] 	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x130c	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x1310	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x1317	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x131e	          0x4889c7	                            mov rdi, rax	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x1321	      0xe800000000	                          call 0x4001366	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x1326	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x132d	        0x488b5008	                mov rdx, qword [rax + 8]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x1331	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x1338	        0x488b4580	             mov rax, qword [rbp - 0x80]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x133c	          0x4889d1	                            mov rcx, rdx	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x133f	      0xba01000000	                              mov edx, 1	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x1344	          0x4889c7	                            mov rdi, rax	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x1347	      0xe800000000	                          call 0x400138c	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x134c	        0x48894588	             mov qword [rbp - 0x78], rax	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x1350	        0x488d4590	                   lea rax, [rbp - 0x70]	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x1354	        0x48394580	            cmp qword [rbp - 0x80], rax 	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x1358	            0x740c	                            je 0x40013a6	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x135a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x135e	          0x4889c7	                            mov rdi, rax	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x1361	      0xe800000000	                          call 0x40013a6	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x1366	      0x48837d8801	               cmp qword [rbp - 0x78], 1	       959	undo.c	FUNCTION_17	IF_1
0x136b	           0xf94c0	                                 sete al	       959	undo.c	FUNCTION_17	IF_1
0x136e	           0xfb6c0	                           movzx eax, al	       959	undo.c	FUNCTION_17	IF_1
0x1371	            0xeb20	                           jmp 0x40013d3	       959	undo.c	FUNCTION_17	IF_1
0x1373	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       962	undo.c	FUNCTION_17	CALL_5
0x137a	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       962	undo.c	FUNCTION_17	CALL_5
0x1381	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       962	undo.c	FUNCTION_17	CALL_5
0x1388	          0x4889ce	                            mov rsi, rcx	       962	undo.c	FUNCTION_17	CALL_5
0x138b	          0x4889c7	                            mov rdi, rax	       962	undo.c	FUNCTION_17	CALL_5
0x138e	      0xe8f6fcffff	                     call sym.undo_write	       962	undo.c	FUNCTION_17	CALL_5
0x1393	        0x488b4df8	                mov rcx, qword [rbp - 8]	       963	undo.c	FUNCTION_17
0x1397	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       963	undo.c	FUNCTION_17
0x13a0	            0x7405	                            je 0x40013e7	       963	undo.c	FUNCTION_17
0x13a2	      0xe800000000	                          call 0x40013e7	       963	undo.c	FUNCTION_17
0x13a7	              0xc9	                                   leave	       963	undo.c	FUNCTION_17
0x13a8	              0xc3	                                     ret	       963	undo.c	FUNCTION_17
serialize_pos	FOR,0:ELSE,0:functions,0:IF,0:CALL,4:DO,0:WHILE,0:SWITCH,0	33
0x25b6	              0x55	                                push rbp	      1447	undo.c	FUNCTION_31
0x25b7	          0x4889e5	                            mov rbp, rsp	      1447	undo.c	FUNCTION_31
0x25ba	        0x4883ec20	                           sub rsp, 0x20	      1447	undo.c	FUNCTION_31
0x25be	        0x48897df8	                mov qword [rbp - 8], rdi	      1447	undo.c	FUNCTION_31
0x25c2	          0x4889f0	                            mov rax, rsi	      1447	undo.c	FUNCTION_31
0x25c5	          0x4889d1	                            mov rcx, rdx	      1447	undo.c	FUNCTION_31
0x25c8	          0x4889ca	                            mov rdx, rcx	      1447	undo.c	FUNCTION_31
0x25cb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1447	undo.c	FUNCTION_31
0x25cf	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1447	undo.c	FUNCTION_31
0x25d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1448	undo.c	FUNCTION_31	CALL_1
0x25d7	          0x4889c1	                            mov rcx, rax	      1448	undo.c	FUNCTION_31	CALL_1
0x25da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1448	undo.c	FUNCTION_31	CALL_1
0x25de	      0xba04000000	                              mov edx, 4	      1448	undo.c	FUNCTION_31	CALL_1
0x25e3	          0x4889ce	                            mov rsi, rcx	      1448	undo.c	FUNCTION_31	CALL_1
0x25e6	          0x4889c7	                            mov rdi, rax	      1448	undo.c	FUNCTION_31	CALL_1
0x25e9	      0xe8bbedffff	               call sym.undo_write_bytes	      1448	undo.c	FUNCTION_31	CALL_1
0x25ee	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1449	undo.c	FUNCTION_31	CALL_2
0x25f1	          0x4863c8	                         movsxd rcx, eax	      1449	undo.c	FUNCTION_31	CALL_2
0x25f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1449	undo.c	FUNCTION_31	CALL_2
0x25f8	      0xba04000000	                              mov edx, 4	      1449	undo.c	FUNCTION_31	CALL_2
0x25fd	          0x4889ce	                            mov rsi, rcx	      1449	undo.c	FUNCTION_31	CALL_2
0x2600	          0x4889c7	                            mov rdi, rax	      1449	undo.c	FUNCTION_31	CALL_2
0x2603	      0xe8a1edffff	               call sym.undo_write_bytes	      1449	undo.c	FUNCTION_31	CALL_2
0x2608	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1451	undo.c	FUNCTION_31	CALL_3
0x260b	          0x4863c8	                         movsxd rcx, eax	      1451	undo.c	FUNCTION_31	CALL_3
0x260e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1451	undo.c	FUNCTION_31	CALL_3
0x2612	      0xba04000000	                              mov edx, 4	      1451	undo.c	FUNCTION_31	CALL_3
0x2617	          0x4889ce	                            mov rsi, rcx	      1451	undo.c	FUNCTION_31	CALL_3
0x261a	          0x4889c7	                            mov rdi, rax	      1451	undo.c	FUNCTION_31	CALL_3
0x261d	      0xe887edffff	               call sym.undo_write_bytes	      1451	undo.c	FUNCTION_31	CALL_3
0x2622	              0x90	                                     nop	      1455	undo.c	FUNCTION_31
0x2623	              0xc9	                                   leave	      1455	undo.c	FUNCTION_31
0x2624	              0xc3	                                     ret	      1455	undo.c	FUNCTION_31
bufIsChangedNotTerm	FOR,0:ELSE,0:functions,0:IF,0:CALL,2:DO,0:WHILE,0:SWITCH,0	24
0x6bfa	              0x55	                                push rbp	      3541	undo.c	FUNCTION_64
0x6bfb	          0x4889e5	                            mov rbp, rsp	      3541	undo.c	FUNCTION_64
0x6bfe	        0x4883ec10	                           sub rsp, 0x10	      3541	undo.c	FUNCTION_64
0x6c02	        0x48897df8	                mov qword [rbp - 8], rdi	      3541	undo.c	FUNCTION_64
0x6c06	        0x488b45f8	                mov rax, qword [rbp - 8]	      3542	undo.c	FUNCTION_64	CALL_1
0x6c0a	          0x4889c7	                            mov rdi, rax	      3542	undo.c	FUNCTION_64	CALL_1
0x6c0d	      0xe800000000	                          call 0x4006c52	      3542	undo.c	FUNCTION_64	CALL_1
0x6c12	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x6c14	            0x752a	                           jne 0x4006c80	      3543	undo.c	FUNCTION_64	CALL_2
0x6c16	        0x488b45f8	                mov rax, qword [rbp - 8]	      3543	undo.c	FUNCTION_64	CALL_2
0x6c1a	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      3543	undo.c	FUNCTION_64	CALL_2
0x6c20	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x6c22	            0x7515	                           jne 0x4006c79	      3543	undo.c	FUNCTION_64	CALL_2
0x6c24	        0x488b45f8	                mov rax, qword [rbp - 8]	      3543	undo.c	FUNCTION_64	CALL_2
0x6c28	      0xbe01000000	                              mov esi, 1	      3543	undo.c	FUNCTION_64	CALL_2
0x6c2d	          0x4889c7	                            mov rdi, rax	      3543	undo.c	FUNCTION_64	CALL_2
0x6c30	      0xe800000000	                          call 0x4006c75	      3543	undo.c	FUNCTION_64	CALL_2
0x6c35	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x6c37	            0x7407	                            je 0x4006c80	      3543	undo.c	FUNCTION_64	CALL_2
0x6c39	      0xb801000000	                              mov eax, 1	      3543	undo.c	FUNCTION_64	CALL_2
0x6c3e	            0xeb05	                           jmp 0x4006c85	      3543	undo.c	FUNCTION_64	CALL_2
0x6c40	      0xb800000000	                              mov eax, 0	      3543	undo.c	FUNCTION_64	CALL_2
0x6c45	              0xc9	                                   leave	      3544	undo.c	FUNCTION_64
0x6c46	              0xc3	                                     ret	      3544	undo.c	FUNCTION_64
u_unchanged	FOR,0:ELSE,0:functions,0:IF,0:CALL,1:DO,0:WHILE,0:SWITCH,0	13
0x611f	              0x55	                                push rbp	      3161	undo.c	ELSE_1	FUNCTION_47
0x6120	          0x4889e5	                            mov rbp, rsp	      3161	undo.c	ELSE_1	FUNCTION_47
0x6123	        0x4883ec10	                           sub rsp, 0x10	      3161	undo.c	ELSE_1	FUNCTION_47
0x6127	        0x48897df8	                mov qword [rbp - 8], rdi	      3161	undo.c	ELSE_1	FUNCTION_47
0x612b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x612f	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x6136	          0x4889c7	                            mov rdi, rax	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x6139	      0xe8fd010000	                  call sym.u_unch_branch	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x613e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3163	undo.c	ELSE_1	FUNCTION_47
0x6142	    0xc78054170000	            mov dword [rax + 0x1754], 0 	      3163	undo.c	ELSE_1	FUNCTION_47
0x614c	              0x90	                                     nop	      3164	undo.c	ELSE_1	FUNCTION_47
0x614d	              0xc9	                                   leave	      3164	undo.c	ELSE_1	FUNCTION_47
0x614e	              0xc3	                                     ret	      3164	undo.c	ELSE_1	FUNCTION_47
u_getbot	FOR,0:ELSE,0:functions,0:IF,3:CALL,3:DO,0:WHILE,0:SWITCH,0	58
0x63f2	              0x55	                                push rbp	      3256	undo.c	FUNCTION_52
0x63f3	          0x4889e5	                            mov rbp, rsp	      3256	undo.c	FUNCTION_52
0x63f6	        0x4883ec10	                           sub rsp, 0x10	      3256	undo.c	FUNCTION_52
0x63fa	      0xe898ffffff	                call sym.u_get_headentry	      3260	undo.c	FUNCTION_52	CALL_1
0x63ff	        0x488945f0	             mov qword [rbp - 0x10], rax	      3260	undo.c	FUNCTION_52	CALL_1
0x6403	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3261	undo.c	FUNCTION_52	IF_1
0x6408	     0xf84d6000000	                            je 0x4006524	      3261	undo.c	FUNCTION_52	IF_1
0x640e	    0x488b05000000	            mov rax, qword [0x04006455] 	      3264	undo.c	FUNCTION_52
0x6415	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3264	undo.c	FUNCTION_52
0x641c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3264	undo.c	FUNCTION_52
0x6420	        0x488945f0	             mov qword [rbp - 0x10], rax	      3264	undo.c	FUNCTION_52
0x6424	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3265	undo.c	FUNCTION_52	IF_2
0x6429	     0xf84a2000000	                            je 0x4006511	      3265	undo.c	FUNCTION_52	IF_2
0x642f	    0x488b05000000	            mov rax, qword [0x04006476] 	      3272	undo.c	FUNCTION_52	IF_2
0x6436	          0x488b10	                    mov rdx, qword [rax]	      3272	undo.c	FUNCTION_52	IF_2
0x6439	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3272	undo.c	FUNCTION_52	IF_2
0x643d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3272	undo.c	FUNCTION_52	IF_2
0x6441	          0x4829c2	                            sub rdx, rax	      3272	undo.c	FUNCTION_52	IF_2
0x6444	          0x4889d0	                            mov rax, rdx	      3272	undo.c	FUNCTION_52	IF_2
0x6447	        0x488945f8	                mov qword [rbp - 8], rax	      3272	undo.c	FUNCTION_52	IF_2
0x644b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3273	undo.c	FUNCTION_52	IF_2
0x644f	        0x488b5008	                mov rdx, qword [rax + 8]	      3273	undo.c	FUNCTION_52	IF_2
0x6453	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3273	undo.c	FUNCTION_52	IF_2
0x6457	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3273	undo.c	FUNCTION_52	IF_2
0x645b	          0x4801d0	                            add rax, rdx	      3273	undo.c	FUNCTION_52	IF_2
0x645e	        0x488d5001	                      lea rdx, [rax + 1]	      3273	undo.c	FUNCTION_52	IF_2
0x6462	        0x488b45f8	                mov rax, qword [rbp - 8]	      3273	undo.c	FUNCTION_52	IF_2
0x6466	          0x4801c2	                            add rdx, rax	      3273	undo.c	FUNCTION_52	IF_2
0x6469	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3273	undo.c	FUNCTION_52	IF_2
0x646d	        0x48895010	             mov qword [rax + 0x10], rdx	      3273	undo.c	FUNCTION_52	IF_2
0x6471	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x6475	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x6479	          0x4885c0	                           test rax, rax	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x647c	            0x7e17	                           jle 0x40064d5	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x647e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x6482	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x6486	    0x488b05000000	            mov rax, qword [0x040064cd] 	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x648d	          0x488b00	                    mov rax, qword [rax]	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x6490	          0x4839c2	                            cmp rdx, rax	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x6493	            0x7e26	                           jle 0x40064fb	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x6495	      0xbf00000000	                              mov edi, 0	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x649a	      0xe800000000	                          call 0x40064df	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x649f	          0x4889c7	                            mov rdi, rax	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x64a2	      0xe800000000	                          call 0x40064e7	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x64a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x64ab	        0x488b4008	                mov rax, qword [rax + 8]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x64af	        0x488d5001	                      lea rdx, [rax + 1]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x64b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x64b7	        0x48895010	             mov qword [rax + 0x10], rdx	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x64bb	    0x488b05000000	            mov rax, qword [0x04006502] 	      3283	undo.c	FUNCTION_52	IF_2
0x64c2	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3283	undo.c	FUNCTION_52	IF_2
0x64c9	    0x48c740380000	               mov qword [rax + 0x38], 0	      3283	undo.c	FUNCTION_52	IF_2
0x64d1	    0x488b05000000	            mov rax, qword [0x04006518] 	      3286	undo.c	FUNCTION_52
0x64d8	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      3286	undo.c	FUNCTION_52
0x64e2	            0xeb01	                           jmp 0x4006525	      3286	undo.c	FUNCTION_52
0x64e4	              0x90	                                     nop	      3262	undo.c	FUNCTION_52	IF_1
0x64e5	              0xc9	                                   leave	      3287	undo.c	FUNCTION_52
0x64e6	              0xc3	                                     ret	      3287	undo.c	FUNCTION_52
u_eval_tree	FOR,0:ELSE,0:functions,0:IF,6:CALL,10:DO,0:WHILE,1:SWITCH,0	90
0x6c5c	              0x55	                                push rbp	      3559	undo.c	FUNCTION_66
0x6c5d	          0x4889e5	                            mov rbp, rsp	      3559	undo.c	FUNCTION_66
0x6c60	        0x4883ec30	                           sub rsp, 0x30	      3559	undo.c	FUNCTION_66
0x6c64	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3559	undo.c	FUNCTION_66
0x6c68	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3559	undo.c	FUNCTION_66
0x6c6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3560	undo.c	FUNCTION_66
0x6c70	        0x488945e8	             mov qword [rbp - 0x18], rax	      3560	undo.c	FUNCTION_66
0x6c74	      0xe94a010000	                           jmp 0x4006e03	      3563	undo.c	FUNCTION_66	WHILE_1
0x6c79	      0xe800000000	                          call 0x4006cbe	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x6c7e	        0x488945f0	             mov qword [rbp - 0x10], rax	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x6c82	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x6c87	     0xf8443010000	                            je 0x4006e10	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x6c8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x6c91	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x6c95	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x6c99	      0xb900000000	                              mov ecx, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x6c9e	      0xbe00000000	                              mov esi, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x6ca3	          0x4889c7	                            mov rdi, rax	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x6ca6	      0xe800000000	                          call 0x4006ceb	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x6cab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x6caf	    0x488b90280200	           mov rdx, qword [rax + 0x228] 	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x6cb6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x6cba	      0xb900000000	                              mov ecx, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x6cbf	      0xbe00000000	                              mov esi, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x6cc4	          0x4889c7	                            mov rdi, rax	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x6cc7	      0xe800000000	                          call 0x4006d0c	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x6ccc	    0x488b05000000	            mov rax, qword [0x04006d13] 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x6cd3	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x6cda	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x6cde	            0x751b	                           jne 0x4006d3b	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x6ce0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x6ce4	      0xb900000000	                              mov ecx, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x6ce9	      0xba01000000	                              mov edx, 1	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x6cee	      0xbe00000000	                              mov esi, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x6cf3	          0x4889c7	                            mov rdi, rax	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x6cf6	      0xe800000000	                          call 0x4006d3b	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x6cfb	    0x488b05000000	            mov rax, qword [0x04006d42] 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x6d02	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x6d09	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x6d0d	            0x751b	                           jne 0x4006d6a	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x6d0f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x6d13	      0xb900000000	                              mov ecx, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x6d18	      0xba01000000	                              mov edx, 1	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x6d1d	      0xbe00000000	                              mov esi, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x6d22	          0x4889c7	                            mov rdi, rax	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x6d25	      0xe800000000	                          call 0x4006d6a	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x6d2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x6d2e	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x6d35	          0x4885c0	                           test rax, rax	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x6d38	            0x7e21	                           jle 0x4006d9b	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x6d3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x6d3e	    0x488b90300200	           mov rdx, qword [rax + 0x230] 	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x6d45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x6d49	      0xb900000000	                              mov ecx, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x6d4e	      0xbe00000000	                              mov esi, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x6d53	          0x4889c7	                            mov rdi, rax	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x6d56	      0xe800000000	                          call 0x4006d9b	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x6d5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x6d5f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x6d63	          0x4885c0	                           test rax, rax	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x6d66	            0x743c	                            je 0x4006de4	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x6d68	      0xe800000000	                          call 0x4006dad	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x6d6d	        0x488945f8	                mov qword [rbp - 8], rax	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x6d71	      0x48837df800	                  cmp qword [rbp - 8], 0	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x6d76	            0x742c	                            je 0x4006de4	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x6d78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x6d7c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x6d80	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x6d84	          0x4889d6	                            mov rsi, rdx	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x6d87	          0x4889c7	                            mov rdi, rax	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x6d8a	      0xe800000000	                          call 0x4006dcf	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x6d8f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x6d93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x6d97	      0xbe00000000	                              mov esi, 0	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x6d9c	          0x4889c7	                            mov rdi, rax	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x6d9f	      0xe800000000	                          call 0x4006de4	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x6da4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x6da8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x6dac	          0x4889d6	                            mov rsi, rdx	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x6daf	          0x4889c7	                            mov rdi, rax	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x6db2	      0xe800000000	                          call 0x4006df7	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x6db7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3590	undo.c	FUNCTION_66	WHILE_1
0x6dbb	        0x488b4008	                mov rax, qword [rax + 8]	      3590	undo.c	FUNCTION_66	WHILE_1
0x6dbf	        0x488945e8	             mov qword [rbp - 0x18], rax	      3590	undo.c	FUNCTION_66	WHILE_1
0x6dc3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3563	undo.c	FUNCTION_66	WHILE_1
0x6dc8	     0xf85abfeffff	                           jne 0x4006cb9	      3563	undo.c	FUNCTION_66	WHILE_1
0x6dce	            0xeb01	                           jmp 0x4006e11	      3563	undo.c	FUNCTION_66	WHILE_1
0x6dd0	              0x90	                                     nop	      3567	undo.c	FUNCTION_66	WHILE_1	IF_1
0x6dd1	              0xc9	                                   leave	      3592	undo.c	FUNCTION_66
0x6dd2	              0xc3	                                     ret	      3592	undo.c	FUNCTION_66
bufIsChanged	FOR,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0	17
0x6bc2	              0x55	                                push rbp	      3528	undo.c	FUNCTION_63
0x6bc3	          0x4889e5	                            mov rbp, rsp	      3528	undo.c	FUNCTION_63
0x6bc6	        0x4883ec10	                           sub rsp, 0x10	      3528	undo.c	FUNCTION_63
0x6bca	        0x48897df8	                mov qword [rbp - 8], rdi	      3528	undo.c	FUNCTION_63
0x6bce	        0x488b45f8	                mov rax, qword [rbp - 8]	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x6bd2	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x6bd9	          0x4889c7	                            mov rdi, rax	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x6bdc	      0xe800000000	                          call 0x4006c21	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x6be1	            0x85c0	                           test eax, eax	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x6be3	            0x7407	                            je 0x4006c2c	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x6be5	      0xb801000000	                              mov eax, 1	      3531	undo.c	FUNCTION_63	IF_1
0x6bea	            0xeb0c	                           jmp 0x4006c38	      3531	undo.c	FUNCTION_63	IF_1
0x6bec	        0x488b45f8	                mov rax, qword [rbp - 8]	      3533	undo.c	FUNCTION_63	CALL_2
0x6bf0	          0x4889c7	                            mov rdi, rax	      3533	undo.c	FUNCTION_63	CALL_2
0x6bf3	      0xe800000000	                          call 0x4006c38	      3533	undo.c	FUNCTION_63	CALL_2
0x6bf8	              0xc9	                                   leave	      3534	undo.c	FUNCTION_63
0x6bf9	              0xc3	                                     ret	      3534	undo.c	FUNCTION_63
u_doit	FOR,0:ELSE,2:functions,0:IF,10:CALL,13:DO,0:WHILE,1:SWITCH,0	115
0x3f54	              0x55	                                push rbp	      2185	undo.c	FUNCTION_39
0x3f55	          0x4889e5	                            mov rbp, rsp	      2185	undo.c	FUNCTION_39
0x3f58	        0x4883ec20	                           sub rsp, 0x20	      2185	undo.c	FUNCTION_39
0x3f5c	          0x897dec	             mov dword [rbp - 0x14], edi	      2185	undo.c	FUNCTION_39
0x3f5f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2186	undo.c	FUNCTION_39
0x3f62	          0x8945fc	                mov dword [rbp - 4], eax	      2186	undo.c	FUNCTION_39
0x3f65	      0xe800000000	                          call 0x4003faa	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x3f6a	            0x85c0	                           test eax, eax	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x3f6c	     0xf84f7010000	                            je 0x40041a9	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x3f72	    0x48c705000000	               mov qword [0x04003fbd], 0	      2191	undo.c	FUNCTION_39
0x3f7d	    0x48c705000000	               mov qword [0x04003fc8], 0	      2192	undo.c	FUNCTION_39
0x3f88	    0x488b05000000	            mov rax, qword [0x04003fcf] 	      2193	undo.c	FUNCTION_39	IF_2
0x3f8f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2193	undo.c	FUNCTION_39	IF_2
0x3f92	          0x83e001	                              and eax, 1	      2193	undo.c	FUNCTION_39	IF_2
0x3f95	            0x85c0	                           test eax, eax	      2193	undo.c	FUNCTION_39	IF_2
0x3f97	     0xf84a1010000	                            je 0x400417e	      2193	undo.c	FUNCTION_39	IF_2
0x3f9d	    0x48c705000000	mov qword [0x04003fe8], 0xffffffffffffffff 	      2194	undo.c	FUNCTION_39	IF_2
0x3fa8	      0xe991010000	                           jmp 0x400417e	      2195	undo.c	FUNCTION_39	WHILE_1
0x3fad	      0xbf00000000	                              mov edi, 0	      2201	undo.c	FUNCTION_39	WHILE_1	CALL_2
0x3fb2	      0xe800000000	                          call 0x4003ff7	      2201	undo.c	FUNCTION_39	WHILE_1	CALL_2
0x3fb7	    0x8b0500000000	            mov eax, dword [0x04003ffd] 	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x3fbd	            0x85c0	                           test eax, eax	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x3fbf	     0xf84d4000000	                            je 0x40040d9	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x3fc5	    0x488b05000000	            mov rax, qword [0x0400400c] 	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3fcc	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3fd3	          0x4885c0	                           test rax, rax	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3fd6	            0x751e	                           jne 0x4004036	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3fd8	    0x488b05000000	            mov rax, qword [0x0400401f] 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3fdf	    0x488b15000000	            mov rdx, qword [0x04004026] 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3fe6	    0x488b92201200	          mov rdx, qword [rdx + 0x1220] 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3fed	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3ff4	            0xeb29	                           jmp 0x400405f	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x3ff6	      0xe822c2ffff	                  call sym.get_undolevel	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x3ffb	          0x4885c0	                           test rax, rax	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x3ffe	            0x7e1f	                           jle 0x400405f	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x4000	    0x488b05000000	            mov rax, qword [0x04004047] 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x4007	    0x488b15000000	            mov rdx, qword [0x0400404e] 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x400e	    0x488b92281200	          mov rdx, qword [rdx + 0x1228] 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x4015	          0x488b12	                    mov rdx, qword [rdx]	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x4018	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x401f	    0x488b05000000	            mov rax, qword [0x04004066] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4026	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x402c	            0x85c0	                           test eax, eax	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x402e	            0x7413	                            je 0x4004083	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4030	    0x488b05000000	            mov rax, qword [0x04004077] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4037	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x403e	          0x4885c0	                           test rax, rax	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4041	            0x7547	                           jne 0x40040ca	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4043	    0x488b05000000	            mov rax, qword [0x0400408a] 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x404a	    0x488b15000000	            mov rdx, qword [0x04004091] 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4051	    0x488b92181200	          mov rdx, qword [rdx + 0x1218] 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4058	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x405f	      0xe800000000	                          call 0x40040a4	      2215	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	CALL_4
0x4064	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x4067	          0x83e801	                              sub eax, 1	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x406a	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x406d	     0xf85de000000	                           jne 0x4004191	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x4073	      0xbf00000000	                              mov edi, 0	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x4078	      0xe800000000	                          call 0x40040bd	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x407d	          0x4889c7	                            mov rdi, rax	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x4080	      0xe800000000	                          call 0x40040c5	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x4085	      0xe9e0000000	                           jmp 0x40041aa	      2219	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x408a	      0xbf01000000	                              mov edi, 1	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x408f	      0xe87d0a0000	                     call sym.u_undoredo	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x4094	      0xe9a5000000	                           jmp 0x400417e	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x4099	    0x488b05000000	            mov rax, qword [0x040040e0] 	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40a0	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40a7	          0x4885c0	                           test rax, rax	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40aa	            0x740a	                            je 0x40040f6	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40ac	      0xe86cc1ffff	                  call sym.get_undolevel	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40b1	          0x4885c0	                           test rax, rax	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40b4	            0x7f2b	                            jg 0x4004121	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40b6	      0xe800000000	                          call 0x40040fb	      2230	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_9
0x40bb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x40be	          0x83e801	                              sub eax, 1	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x40c1	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x40c4	     0xf858a000000	                           jne 0x4004194	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x40ca	      0xbf00000000	                              mov edi, 0	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x40cf	      0xe800000000	                          call 0x4004114	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x40d4	          0x4889c7	                            mov rdi, rax	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x40d7	      0xe800000000	                          call 0x400411c	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x40dc	      0xe989000000	                           jmp 0x40041aa	      2234	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x40e1	      0xbf00000000	                              mov edi, 0	      2239	undo.c	FUNCTION_39	WHILE_1	ELSE_2	CALL_12
0x40e6	      0xe8260a0000	                     call sym.u_undoredo	      2239	undo.c	FUNCTION_39	WHILE_1	ELSE_2	CALL_12
0x40eb	    0x488b05000000	            mov rax, qword [0x04004132] 	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40f2	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40f9	        0x488b4008	                mov rax, qword [rax + 8]	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40fd	          0x4885c0	                           test rax, rax	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4100	            0x751c	                           jne 0x400415e	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4102	    0x488b05000000	            mov rax, qword [0x04004149] 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4109	    0x488b15000000	            mov rdx, qword [0x04004150] 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4110	    0x488b92281200	          mov rdx, qword [rdx + 0x1228] 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4117	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x411e	    0x488b05000000	            mov rax, qword [0x04004165] 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x4125	    0x488b15000000	            mov rdx, qword [0x0400416c] 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x412c	    0x488b92281200	          mov rdx, qword [rdx + 0x1228] 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x4133	        0x488b5208	                mov rdx, qword [rdx + 8]	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x4137	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x413e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2195	undo.c	FUNCTION_39	WHILE_1
0x4141	          0x8d50ff	                      lea edx, [rax - 1]	      2195	undo.c	FUNCTION_39	WHILE_1
0x4144	          0x8955fc	                mov dword [rbp - 4], edx	      2195	undo.c	FUNCTION_39	WHILE_1
0x4147	            0x85c0	                           test eax, eax	      2195	undo.c	FUNCTION_39	WHILE_1
0x4149	     0xf855efeffff	                           jne 0x4003fed	      2195	undo.c	FUNCTION_39	WHILE_1
0x414f	            0xeb04	                           jmp 0x4004195	      2195	undo.c	FUNCTION_39	WHILE_1
0x4151	              0x90	                                     nop	      2221	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4152	            0xeb01	                           jmp 0x4004195	      2221	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4154	              0x90	                                     nop	      2236	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8
0x4155	    0x8b0500000000	            mov eax, dword [0x0400419b] 	      2248	undo.c	FUNCTION_39	CALL_13
0x415b	      0xbe00000000	                              mov esi, 0	      2248	undo.c	FUNCTION_39	CALL_13
0x4160	            0x89c7	                            mov edi, eax	      2248	undo.c	FUNCTION_39	CALL_13
0x4162	      0xe8df160000	                     call sym.u_undo_end	      2248	undo.c	FUNCTION_39	CALL_13
0x4167	            0xeb01	                           jmp 0x40041aa	      2248	undo.c	FUNCTION_39	CALL_13
0x4169	              0x90	                                     nop	      2189	undo.c	FUNCTION_39	IF_1
0x416a	              0xc9	                                   leave	      2249	undo.c	FUNCTION_39
0x416b	              0xc3	                                     ret	      2249	undo.c	FUNCTION_39
u_savesub	FOR,0:ELSE,0:functions,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0	20
0xbf	              0x55	                                push rbp	       288	undo.c	FUNCTION_5
0xc0	          0x4889e5	                            mov rbp, rsp	       288	undo.c	FUNCTION_5
0xc3	        0x4883ec10	                           sub rsp, 0x10	       288	undo.c	FUNCTION_5
0xc7	        0x48897df8	                mov qword [rbp - 8], rdi	       288	undo.c	FUNCTION_5
0xcb	    0x8b0500000000	            mov eax, dword [0x04000111] 	       289	undo.c	FUNCTION_5	IF_1
0xd1	            0x85c0	                           test eax, eax	       289	undo.c	FUNCTION_5	IF_1
0xd3	            0x7407	                            je 0x400011c	       289	undo.c	FUNCTION_5	IF_1
0xd5	      0xb801000000	                              mov eax, 1	       290	undo.c	FUNCTION_5	IF_1
0xda	            0xeb25	                           jmp 0x4000141	       290	undo.c	FUNCTION_5	IF_1
0xdc	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	undo.c	FUNCTION_5	CALL_1
0xe0	        0x488d5001	                      lea rdx, [rax + 1]	       292	undo.c	FUNCTION_5	CALL_1
0xe4	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	undo.c	FUNCTION_5	CALL_1
0xe8	        0x488d7001	                      lea rsi, [rax + 1]	       292	undo.c	FUNCTION_5	CALL_1
0xec	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	undo.c	FUNCTION_5	CALL_1
0xf0	        0x4883e801	                              sub rax, 1	       292	undo.c	FUNCTION_5	CALL_1
0xf4	      0xb900000000	                              mov ecx, 0	       292	undo.c	FUNCTION_5	CALL_1
0xf9	          0x4889c7	                            mov rdi, rax	       292	undo.c	FUNCTION_5	CALL_1
0xfc	      0xe800000000	                          call 0x4000141	       292	undo.c	FUNCTION_5	CALL_1
0x101	              0xc9	                                   leave	       293	undo.c	FUNCTION_5
0x102	              0xc3	                                     ret	       293	undo.c	FUNCTION_5
corruption_error	FOR,0:ELSE,0:functions,0:IF,0:CALL,2:DO,0:WHILE,0:SWITCH,0	16
0xffc	              0x55	                                push rbp	       859	undo.c	FUNCTION_13
0xffd	          0x4889e5	                            mov rbp, rsp	       859	undo.c	FUNCTION_13
0x1000	        0x4883ec10	                           sub rsp, 0x10	       859	undo.c	FUNCTION_13
0x1004	        0x48897df8	                mov qword [rbp - 8], rdi	       859	undo.c	FUNCTION_13
0x1008	        0x488975f0	             mov qword [rbp - 0x10], rsi	       859	undo.c	FUNCTION_13
0x100c	      0xbf00000000	                              mov edi, 0	       860	undo.c	FUNCTION_13	CALL_2
0x1011	      0xe800000000	                          call 0x4001056	       860	undo.c	FUNCTION_13	CALL_2
0x1016	          0x4889c1	                            mov rcx, rax	       860	undo.c	FUNCTION_13	CALL_2
0x1019	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       860	undo.c	FUNCTION_13	CALL_2
0x101d	        0x488b45f8	                mov rax, qword [rbp - 8]	       860	undo.c	FUNCTION_13	CALL_2
0x1021	          0x4889c6	                            mov rsi, rax	       860	undo.c	FUNCTION_13	CALL_2
0x1024	          0x4889cf	                            mov rdi, rcx	       860	undo.c	FUNCTION_13	CALL_2
0x1027	      0xe800000000	                          call 0x400106c	       860	undo.c	FUNCTION_13	CALL_2
0x102c	              0x90	                                     nop	       861	undo.c	FUNCTION_13
0x102d	              0xc9	                                   leave	       861	undo.c	FUNCTION_13
0x102e	              0xc3	                                     ret	       861	undo.c	FUNCTION_13
undo_read	FOR,0:ELSE,1:functions,0:IF,6:CALL,5:DO,0:WHILE,1:SWITCH,0	112
0x16aa	              0x55	                                push rbp	      1066	undo.c	FUNCTION_24
0x16ab	          0x4889e5	                            mov rbp, rsp	      1066	undo.c	FUNCTION_24
0x16ae	        0x4883ec40	                           sub rsp, 0x40	      1066	undo.c	FUNCTION_24
0x16b2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1066	undo.c	FUNCTION_24
0x16b6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1066	undo.c	FUNCTION_24
0x16ba	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1066	undo.c	FUNCTION_24
0x16be	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      1067	undo.c	FUNCTION_24
0x16c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1070	undo.c	FUNCTION_24	IF_1
0x16c9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1070	undo.c	FUNCTION_24	IF_1
0x16cd	          0x4885c0	                           test rax, rax	      1070	undo.c	FUNCTION_24	IF_1
0x16d0	     0xf8438010000	                            je 0x400184e	      1070	undo.c	FUNCTION_24	IF_1
0x16d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1072	undo.c	FUNCTION_24	IF_1
0x16da	          0x8945ec	             mov dword [rbp - 0x14], eax	      1072	undo.c	FUNCTION_24	IF_1
0x16dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1073	undo.c	FUNCTION_24	IF_1
0x16e1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1073	undo.c	FUNCTION_24	IF_1
0x16e5	      0xe918010000	                           jmp 0x4001842	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x16ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x16ee	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x16f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x16f6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x16fa	          0x4839c2	                            cmp rdx, rax	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x16fd	            0x7277	                            jb 0x40017b6	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x16ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x1703	        0x488b5008	                mov rdx, qword [rax + 8]	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x1707	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x170b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x170f	          0x4889d1	                            mov rcx, rdx	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x1712	      0xba00200000	                         mov edx, 0x2000	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x1717	      0xbe01000000	                              mov esi, 1	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x171c	          0x4889c7	                            mov rdi, rax	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x171f	      0xe800000000	                          call 0x4001764	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x1724	        0x488945f8	                mov qword [rbp - 8], rax	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x1728	      0x48837df800	                  cmp qword [rbp - 8], 0	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x172d	            0x750c	                           jne 0x400177b	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x172f	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1084	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x1736	      0xe900010000	                           jmp 0x400187b	      1085	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x173b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x173f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x1743	        0x48895028	             mov qword [rax + 0x28], rdx	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x1747	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1088	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x174b	    0x48c740200000	               mov qword [rax + 0x20], 0	      1088	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x1753	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x1757	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x175b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x175f	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x1763	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x1767	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x176b	          0x4889ce	                            mov rsi, rcx	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x176e	          0x4889c7	                            mov rdi, rax	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x1771	      0xe800000000	                          call 0x40017b6	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x1776	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x1779	            0x4898	                                    cdqe	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x177b	        0x488945f8	                mov qword [rbp - 8], rax	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x177f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x1783	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x1787	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x178b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x178f	          0x4829c2	                            sub rdx, rax	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x1792	          0x4889d0	                            mov rax, rdx	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x1795	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x1799	            0x731a	                           jae 0x40017f5	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x179b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x179f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x17a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x17a7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x17ab	          0x4829c2	                            sub rdx, rax	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x17ae	          0x4889d0	                            mov rax, rdx	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x17b1	        0x488945f8	                mov qword [rbp - 8], rax	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x17b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17b9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17c1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17c5	        0x488d0c02	                    lea rcx, [rdx + rax]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17c9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17d1	          0x4889ce	                            mov rsi, rcx	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17d4	          0x4889c7	                            mov rdi, rax	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17d7	      0xe800000000	                          call 0x400181c	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x17dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17e0	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17e8	          0x4801c2	                            add rdx, rax	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17ef	        0x48895020	             mov qword [rax + 0x20], rdx	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1096	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17f7	          0x2945ec	             sub dword [rbp - 0x14], eax	      1096	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17fa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1097	undo.c	FUNCTION_24	IF_1	WHILE_1
0x17fe	        0x480145f0	            add qword [rbp - 0x10], rax 	      1097	undo.c	FUNCTION_24	IF_1	WHILE_1
0x1802	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x1806	     0xf8fdefeffff	                            jg 0x400172a	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x180c	            0xeb2d	                           jmp 0x400187b	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x180e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x1812	        0x488b5008	                mov rdx, qword [rax + 8]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x1816	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x181a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x181e	          0x4889d1	                            mov rcx, rdx	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x1821	      0xba01000000	                              mov edx, 1	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x1826	          0x4889c7	                            mov rdi, rax	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x1829	      0xe800000000	                          call 0x400186e	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x182e	        0x4883f801	                              cmp rax, 1	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x1832	            0x7407	                            je 0x400187b	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x1834	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1103	undo.c	FUNCTION_24	ELSE_1	IF_5
0x183b	        0x837de800	               cmp dword [rbp - 0x18], 0	      1105	undo.c	FUNCTION_24	IF_6
0x183f	            0x7515	                           jne 0x4001896	      1105	undo.c	FUNCTION_24	IF_6
0x1841	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1108	undo.c	FUNCTION_24	CALL_5
0x1845	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1108	undo.c	FUNCTION_24	CALL_5
0x1849	      0xbe00000000	                              mov esi, 0	      1108	undo.c	FUNCTION_24	CALL_5
0x184e	          0x4889c7	                            mov rdi, rax	      1108	undo.c	FUNCTION_24	CALL_5
0x1851	      0xe800000000	                          call 0x4001896	      1108	undo.c	FUNCTION_24	CALL_5
0x1856	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1109	undo.c	FUNCTION_24
0x1859	              0xc9	                                   leave	      1110	undo.c	FUNCTION_24
0x185a	              0xc3	                                     ret	      1110	undo.c	FUNCTION_24
u_undoline	FOR,0:ELSE,0:functions,0:IF,5:CALL,8:DO,0:WHILE,0:SWITCH,0	87
0x69a8	              0x55	                                push rbp	      3461	undo.c	FUNCTION_60
0x69a9	          0x4889e5	                            mov rbp, rsp	      3461	undo.c	FUNCTION_60
0x69ac	        0x4883ec10	                           sub rsp, 0x10	      3461	undo.c	FUNCTION_60
0x69b0	    0x8b0500000000	            mov eax, dword [0x040069f6] 	      3465	undo.c	FUNCTION_60	IF_1
0x69b6	            0x85c0	                           test eax, eax	      3465	undo.c	FUNCTION_60	IF_1
0x69b8	     0xf8589010000	                           jne 0x4006b87	      3465	undo.c	FUNCTION_60	IF_1
0x69be	    0x488b05000000	            mov rax, qword [0x04006a05] 	      3468	undo.c	FUNCTION_60	IF_2
0x69c5	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3468	undo.c	FUNCTION_60	IF_2
0x69cc	          0x4885c0	                           test rax, rax	      3468	undo.c	FUNCTION_60	IF_2
0x69cf	            0x741d	                            je 0x4006a2e	      3468	undo.c	FUNCTION_60	IF_2
0x69d1	    0x488b05000000	            mov rax, qword [0x04006a18] 	      3469	undo.c	FUNCTION_60	IF_2
0x69d8	    0x488b90681200	          mov rdx, qword [rax + 0x1268] 	      3469	undo.c	FUNCTION_60	IF_2
0x69df	    0x488b05000000	            mov rax, qword [0x04006a26] 	      3469	undo.c	FUNCTION_60	IF_2
0x69e6	          0x488b00	                    mov rax, qword [rax]	      3469	undo.c	FUNCTION_60	IF_2
0x69e9	          0x4839c2	                            cmp rdx, rax	      3469	undo.c	FUNCTION_60	IF_2
0x69ec	            0x7e0a	                           jle 0x4006a38	      3469	undo.c	FUNCTION_60	IF_2
0x69ee	      0xe800000000	                          call 0x4006a33	      3471	undo.c	FUNCTION_60	IF_2	CALL_1
0x69f3	      0xe953010000	                           jmp 0x4006b8b	      3472	undo.c	FUNCTION_60	IF_2
0x69f8	    0x488b05000000	            mov rax, qword [0x04006a3f] 	      3477	undo.c	FUNCTION_60	IF_3
0x69ff	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3477	undo.c	FUNCTION_60	IF_3
0x6a06	        0x488d7001	                      lea rsi, [rax + 1]	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a0a	    0x488b05000000	            mov rax, qword [0x04006a51] 	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a11	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a18	        0x4883e801	                              sub rax, 1	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a1c	      0xb900000000	                              mov ecx, 0	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a21	      0xba00000000	                              mov edx, 0	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a26	          0x4889c7	                            mov rdi, rax	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a29	      0xe800000000	                          call 0x4006a6e	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a2e	            0x85c0	                           test eax, eax	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a30	     0xf8414010000	                            je 0x4006b8a	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x6a36	    0x488b05000000	            mov rax, qword [0x04006a7d] 	      3479	undo.c	FUNCTION_60	CALL_3
0x6a3d	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3479	undo.c	FUNCTION_60	CALL_3
0x6a44	          0x4889c7	                            mov rdi, rax	      3479	undo.c	FUNCTION_60	CALL_3
0x6a47	      0xe854010000	                    call sym.u_save_line	      3479	undo.c	FUNCTION_60	CALL_3
0x6a4c	        0x488945f8	                mov qword [rbp - 8], rax	      3479	undo.c	FUNCTION_60	CALL_3
0x6a50	      0x48837df800	                  cmp qword [rbp - 8], 0	      3480	undo.c	FUNCTION_60	IF_4
0x6a55	            0x750f	                           jne 0x4006aa6	      3480	undo.c	FUNCTION_60	IF_4
0x6a57	      0xbf00000000	                              mov edi, 0	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x6a5c	      0xe800000000	                          call 0x4006aa1	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x6a61	      0xe9e5000000	                           jmp 0x4006b8b	      3483	undo.c	FUNCTION_60	IF_4
0x6a66	    0x488b05000000	            mov rax, qword [0x04006aad] 	      3485	undo.c	FUNCTION_60	CALL_5
0x6a6d	    0x488b88601200	          mov rcx, qword [rax + 0x1260] 	      3485	undo.c	FUNCTION_60	CALL_5
0x6a74	    0x488b05000000	            mov rax, qword [0x04006abb] 	      3485	undo.c	FUNCTION_60	CALL_5
0x6a7b	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3485	undo.c	FUNCTION_60	CALL_5
0x6a82	      0xba01000000	                              mov edx, 1	      3485	undo.c	FUNCTION_60	CALL_5
0x6a87	          0x4889ce	                            mov rsi, rcx	      3485	undo.c	FUNCTION_60	CALL_5
0x6a8a	          0x4889c7	                            mov rdi, rax	      3485	undo.c	FUNCTION_60	CALL_5
0x6a8d	      0xe800000000	                          call 0x4006ad2	      3485	undo.c	FUNCTION_60	CALL_5
0x6a92	    0x488b05000000	            mov rax, qword [0x04006ad9] 	      3486	undo.c	FUNCTION_60	CALL_6
0x6a99	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3486	undo.c	FUNCTION_60	CALL_6
0x6aa0	      0xbe00000000	                              mov esi, 0	      3486	undo.c	FUNCTION_60	CALL_6
0x6aa5	          0x4889c7	                            mov rdi, rax	      3486	undo.c	FUNCTION_60	CALL_6
0x6aa8	      0xe800000000	                          call 0x4006aed	      3486	undo.c	FUNCTION_60	CALL_6
0x6aad	    0x488b05000000	            mov rax, qword [0x04006af4] 	      3487	undo.c	FUNCTION_60	CALL_7
0x6ab4	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3487	undo.c	FUNCTION_60	CALL_7
0x6abb	          0x4889c7	                            mov rdi, rax	      3487	undo.c	FUNCTION_60	CALL_7
0x6abe	      0xe800000000	                          call 0x4006b03	      3487	undo.c	FUNCTION_60	CALL_7
0x6ac3	    0x488b05000000	            mov rax, qword [0x04006b0a] 	      3488	undo.c	FUNCTION_60
0x6aca	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3488	undo.c	FUNCTION_60
0x6ace	    0x488990601200	          mov qword [rax + 0x1260], rdx 	      3488	undo.c	FUNCTION_60
0x6ad5	    0x488b05000000	            mov rax, qword [0x04006b1c] 	      3490	undo.c	FUNCTION_60
0x6adc	    0x8b8070120000	          mov eax, dword [rax + 0x1270] 	      3490	undo.c	FUNCTION_60
0x6ae2	          0x8945f4	              mov dword [rbp - 0xc], eax	      3490	undo.c	FUNCTION_60
0x6ae5	    0x488b05000000	            mov rax, qword [0x04006b2c] 	      3491	undo.c	FUNCTION_60	IF_5
0x6aec	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3491	undo.c	FUNCTION_60	IF_5
0x6af0	    0x488b05000000	            mov rax, qword [0x04006b37] 	      3491	undo.c	FUNCTION_60	IF_5
0x6af7	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3491	undo.c	FUNCTION_60	IF_5
0x6afe	          0x4839c2	                            cmp rdx, rax	      3491	undo.c	FUNCTION_60	IF_5
0x6b01	            0x7517	                           jne 0x4006b5a	      3491	undo.c	FUNCTION_60	IF_5
0x6b03	    0x488b05000000	            mov rax, qword [0x04006b4a] 	      3492	undo.c	FUNCTION_60	IF_5
0x6b0a	    0x488b15000000	            mov rdx, qword [0x04006b51] 	      3492	undo.c	FUNCTION_60	IF_5
0x6b11	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3492	undo.c	FUNCTION_60	IF_5
0x6b14	    0x899070120000	          mov dword [rax + 0x1270], edx 	      3492	undo.c	FUNCTION_60	IF_5
0x6b1a	    0x488b05000000	            mov rax, qword [0x04006b61] 	      3493	undo.c	FUNCTION_60
0x6b21	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3493	undo.c	FUNCTION_60
0x6b24	          0x895040	             mov dword [rax + 0x40], edx	      3493	undo.c	FUNCTION_60
0x6b27	    0x488b05000000	            mov rax, qword [0x04006b6e] 	      3494	undo.c	FUNCTION_60
0x6b2e	    0x488b15000000	            mov rdx, qword [0x04006b75] 	      3494	undo.c	FUNCTION_60
0x6b35	    0x488b92681200	          mov rdx, qword [rdx + 0x1268] 	      3494	undo.c	FUNCTION_60
0x6b3c	        0x48895038	             mov qword [rax + 0x38], rdx	      3494	undo.c	FUNCTION_60
0x6b40	      0xe800000000	                          call 0x4006b85	      3495	undo.c	FUNCTION_60	CALL_8
0x6b45	            0xeb04	                           jmp 0x4006b8b	      3495	undo.c	FUNCTION_60	CALL_8
0x6b47	              0x90	                                     nop	      3466	undo.c	FUNCTION_60	IF_1
0x6b48	            0xeb01	                           jmp 0x4006b8b	      3466	undo.c	FUNCTION_60	IF_1
0x6b4a	              0x90	                                     nop	      3478	undo.c	FUNCTION_60	IF_3
0x6b4b	              0xc9	                                   leave	      3496	undo.c	FUNCTION_60
0x6b4c	              0xc3	                                     ret	      3496	undo.c	FUNCTION_60
u_redo	FOR,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0	17
0x3f19	              0x55	                                push rbp	      2174	undo.c	FUNCTION_38
0x3f1a	          0x4889e5	                            mov rbp, rsp	      2174	undo.c	FUNCTION_38
0x3f1d	        0x4883ec10	                           sub rsp, 0x10	      2174	undo.c	FUNCTION_38
0x3f21	          0x897dfc	                mov dword [rbp - 4], edi	      2174	undo.c	FUNCTION_38
0x3f24	    0x488b05000000	            mov rax, qword [0x04003f6b] 	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x3f2b	      0xbe75000000	                           mov esi, 0x75	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x3f30	          0x4889c7	                            mov rdi, rax	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x3f33	      0xe800000000	                          call 0x4003f78	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x3f38	          0x4885c0	                           test rax, rax	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x3f3b	            0x750a	                           jne 0x4003f87	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x3f3d	    0xc70500000000	               mov dword [0x04003f87], 0	      2176	undo.c	FUNCTION_38	IF_1
0x3f47	          0x8b45fc	                mov eax, dword [rbp - 4]	      2177	undo.c	FUNCTION_38	CALL_2
0x3f4a	            0x89c7	                            mov edi, eax	      2177	undo.c	FUNCTION_38	CALL_2
0x3f4c	      0xe803000000	                         call sym.u_doit	      2177	undo.c	FUNCTION_38	CALL_2
0x3f51	              0x90	                                     nop	      2178	undo.c	FUNCTION_38
0x3f52	              0xc9	                                   leave	      2178	undo.c	FUNCTION_38
0x3f53	              0xc3	                                     ret	      2178	undo.c	FUNCTION_38
u_get_undo_file_name	FOR,1:ELSE,1:functions,0:IF,9:CALL,19:DO,0:WHILE,1:SWITCH,0	167
0xcce	              0x55	                                push rbp	       776	undo.c	FUNCTION_12
0xccf	          0x4889e5	                            mov rbp, rsp	       776	undo.c	FUNCTION_12
0xcd2	    0x4881ecf01400	                         sub rsp, 0x14f0	       776	undo.c	FUNCTION_12
0xcd9	    0x4889bd18ebff	           mov qword [rbp - 0x14e8], rdi	       776	undo.c	FUNCTION_12
0xce0	    0x89b514ebffff	           mov dword [rbp - 0x14ec], esi	       776	undo.c	FUNCTION_12
0xce6	    0x64488b042528	                mov rax, qword fs:[0x28]	       776	undo.c	FUNCTION_12
0xcef	        0x488945f8	                mov qword [rbp - 8], rax	       776	undo.c	FUNCTION_12
0xcf3	            0x31c0	                            xor eax, eax	       776	undo.c	FUNCTION_12
0xcf5	    0x48c78530ebff	             mov qword [rbp - 0x14d0], 0	       779	undo.c	FUNCTION_12
0xd00	    0x48c78538ebff	             mov qword [rbp - 0x14c8], 0	       780	undo.c	FUNCTION_12
0xd0b	    0x488b8518ebff	           mov rax, qword [rbp - 0x14e8]	       784	undo.c	FUNCTION_12
0xd12	    0x48898548ebff	           mov qword [rbp - 0x14b8], rax	       784	undo.c	FUNCTION_12
0xd19	    0x4883bd48ebff	             cmp qword [rbp - 0x14b8], 0	       789	undo.c	FUNCTION_12	IF_1
0xd21	            0x750a	                           jne 0x4000d6d	       789	undo.c	FUNCTION_12	IF_1
0xd23	      0xb800000000	                              mov eax, 0	       790	undo.c	FUNCTION_12	IF_1
0xd28	      0xe9b9020000	                           jmp 0x4001026	       790	undo.c	FUNCTION_12	IF_1
0xd2d	    0x488d95f0efff	                 lea rdx, [rbp - 0x1010]	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0xd34	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0xd3b	          0x4889d6	                            mov rsi, rdx	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0xd3e	          0x4889c7	                            mov rdi, rax	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0xd41	      0xe800000000	                          call 0x4000d86	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0xd46	          0x83f801	                              cmp eax, 1	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0xd49	            0x750e	                           jne 0x4000d99	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0xd4b	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	       796	undo.c	FUNCTION_12	IF_2
0xd52	    0x48898548ebff	           mov qword [rbp - 0x14b8], rax	       796	undo.c	FUNCTION_12	IF_2
0xd59	    0x488b05000000	            mov rax, qword [0x04000da0] 	       801	undo.c	FUNCTION_12
0xd60	    0x48898528ebff	           mov qword [rbp - 0x14d8], rax	       801	undo.c	FUNCTION_12
0xd67	      0xe94f020000	                           jmp 0x4000ffb	       802	undo.c	FUNCTION_12	WHILE_1
0xd6c	    0x488db5e0ebff	                 lea rsi, [rbp - 0x1420]	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0xd73	    0x488d8528ebff	                 lea rax, [rbp - 0x14d8]	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0xd7a	      0xb900000000	                              mov ecx, 0	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0xd7f	      0xba01040000	                          mov edx, 0x401	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0xd84	          0x4889c7	                            mov rdi, rax	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0xd87	      0xe800000000	                          call 0x4000dcc	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0xd8c	    0x898524ebffff	           mov dword [rbp - 0x14dc], eax	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0xd92	    0x83bd24ebffff	            cmp dword [rbp - 0x14dc], 1 	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0xd99	     0xf85d7000000	                           jne 0x4000eb6	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0xd9f	     0xfb685e0ebff	          movzx eax, byte [rbp - 0x1420]	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0xda6	            0x3c2e	                            cmp al, 0x2e	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0xda8	     0xf85c8000000	                           jne 0x4000eb6	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0xdae	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdb5	          0x4889c7	                            mov rdi, rax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdb8	      0xe800000000	                          call 0x4000dfd	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdbd	          0x83c005	                              add eax, 5	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdc0	            0x89c2	                            mov edx, eax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdc2	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdc9	            0x89d6	                            mov esi, edx	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdcb	          0x4889c7	                            mov rdi, rax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdce	      0xe800000000	                          call 0x4000e13	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdd3	    0x48898538ebff	           mov qword [rbp - 0x14c8], rax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0xdda	    0x4883bd38ebff	             cmp qword [rbp - 0x14c8], 0	       810	undo.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xde2	     0xf84e7010000	                            je 0x400100f	       810	undo.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xde8	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdef	          0x4889c7	                            mov rdi, rax	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdf2	      0xe800000000	                          call 0x4000e37	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdf7	    0x48898540ebff	           mov qword [rbp - 0x14c0], rax	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdfe	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe05	          0x4889c7	                            mov rdi, rax	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe08	      0xe800000000	                          call 0x4000e4d	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe0d	        0x488d5001	                      lea rdx, [rax + 1]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe11	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe18	        0x488d4801	                      lea rcx, [rax + 1]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe1c	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe23	          0x4889c6	                            mov rsi, rax	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe26	          0x4889cf	                            mov rdi, rcx	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe29	      0xe800000000	                          call 0x4000e6e	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0xe2e	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       824	undo.c	FUNCTION_12	WHILE_1	IF_3
0xe35	          0xc6002e	                    mov byte [rax], 0x2e	       824	undo.c	FUNCTION_12	WHILE_1	IF_3
0xe38	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe3f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe46	          0x4889c2	                            mov rdx, rax	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe49	      0xb800000000	                              mov eax, 0	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe4e	          0x4889d7	                            mov rdi, rdx	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe51	            0xf2ae	              repne scasb al, byte [rdi]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe53	          0x4889c8	                            mov rax, rcx	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe56	          0x48f7d0	                                 not rax	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe59	        0x488d50ff	                      lea rdx, [rax - 1]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe5d	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe64	          0x4801d0	                            add rax, rdx	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe67	    0xc7002e756e7e	            mov dword [rax], 0x7e6e752e 	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe6d	        0xc6400400	                   mov byte [rax + 4], 0	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe71	      0xe9f1000000	                           jmp 0x4000fa7	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0xe76	    0x8b8524ebffff	           mov eax, dword [rbp - 0x14dc]	       830	undo.c	FUNCTION_12	WHILE_1	ELSE_1
0xe7c	            0x4898	                                    cdqe	       830	undo.c	FUNCTION_12	WHILE_1	ELSE_1
0xe7e	    0xc68405e0ebff	        mov byte [rbp + rax - 0x1420], 0	       830	undo.c	FUNCTION_12	WHILE_1	ELSE_1
0xe86	    0x488d85e0ebff	                 lea rax, [rbp - 0x1420]	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0xe8d	          0x4889c7	                            mov rdi, rax	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0xe90	      0xe800000000	                          call 0x4000ed5	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0xe95	            0x85c0	                           test eax, eax	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0xe97	     0xf84ca000000	                            je 0x4000fa7	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0xe9d	    0x4883bd30ebff	             cmp qword [rbp - 0x14d0], 0	       833	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6
0xea5	     0xf8597000000	                           jne 0x4000f82	       833	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6
0xeab	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0xeb2	          0x4889c7	                            mov rdi, rax	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0xeb5	      0xe800000000	                          call 0x4000efa	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0xeba	    0x48898530ebff	           mov qword [rbp - 0x14d0], rax	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0xec1	    0x4883bd30ebff	             cmp qword [rbp - 0x14d0], 0	       836	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0xec9	            0x750a	                           jne 0x4000f15	       836	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0xecb	      0xb800000000	                              mov eax, 0	       837	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0xed0	      0xe911010000	                           jmp 0x4001026	       837	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0xed5	    0x488b8530ebff	           mov rax, qword [rbp - 0x14d0]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xedc	    0x48898540ebff	           mov qword [rbp - 0x14c0], rax	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xee3	            0xeb4f	                           jmp 0x4000f74	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xee5	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0xeec	           0xfb600	                   movzx eax, byte [rax]	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0xeef	           0xfb6c0	                           movzx eax, al	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0xef2	            0x89c7	                            mov edi, eax	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0xef4	      0xe800000000	                          call 0x4000f39	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0xef9	            0x85c0	                           test eax, eax	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0xefb	            0x740a	                            je 0x4000f47	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0xefd	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       840	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8
0xf04	          0xc60025	                    mov byte [rax], 0x25	       840	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8
0xf07	    0x8b0500000000	            mov eax, dword [0x04000f4d] 	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf0d	            0x85c0	                           test eax, eax	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf0f	            0x7415	                            je 0x4000f66	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf11	    0x488b05000000	            mov rax, qword [0x04000f58] 	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf18	    0x488b9540ebff	           mov rdx, qword [rbp - 0x14c0]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf1f	          0x4889d7	                            mov rdi, rdx	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf22	            0xffd0	                                call rax	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf24	            0xeb05	                           jmp 0x4000f6b	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf26	      0xb801000000	                              mov eax, 1	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf2b	            0x4898	                                    cdqe	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf2d	    0x48018540ebff	          add qword [rbp - 0x14c0], rax 	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf34	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf3b	           0xfb600	                   movzx eax, byte [rax]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf3e	            0x84c0	                             test al, al	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf40	            0x75a3	                           jne 0x4000f25	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0xf42	    0x488b8d30ebff	           mov rcx, qword [rbp - 0x14d0]	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0xf49	    0x488d85e0ebff	                 lea rax, [rbp - 0x1420]	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0xf50	      0xba01000000	                              mov edx, 1	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0xf55	          0x4889ce	                            mov rsi, rcx	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0xf58	          0x4889c7	                            mov rdi, rax	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0xf5b	      0xe800000000	                          call 0x4000fa0	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0xf60	    0x48898538ebff	           mov qword [rbp - 0x14c8], rax	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0xf67	    0x4883bd38ebff	             cmp qword [rbp - 0x14c8], 0	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0xf6f	            0x7426	                            je 0x4000fd7	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0xf71	    0x83bd14ebffff	             cmp dword [rbp - 0x14ec], 0	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0xf78	            0x7456	                            je 0x4001010	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0xf7a	    0x488d9550ebff	                 lea rdx, [rbp - 0x14b0]	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0xf81	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0xf88	          0x4889d6	                            mov rsi, rdx	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0xf8b	          0x4889c7	                            mov rdi, rax	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0xf8e	      0xe800000000	                          call 0x4000fd3	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0xf93	            0x85c0	                           test eax, eax	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0xf95	            0x7939	                           jns 0x4001010	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0xf97	    0x4883bd38ebff	             cmp qword [rbp - 0x14c8], 0	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0xf9f	            0x741a	                            je 0x4000ffb	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0xfa1	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0xfa8	          0x4889c7	                            mov rdi, rax	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0xfab	      0xe800000000	                          call 0x4000ff0	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0xfb0	    0x48c78538ebff	             mov qword [rbp - 0x14c8], 0	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0xfbb	    0x488b8528ebff	           mov rax, qword [rbp - 0x14d8]	       802	undo.c	FUNCTION_12	WHILE_1
0xfc2	           0xfb600	                   movzx eax, byte [rax]	       802	undo.c	FUNCTION_12	WHILE_1
0xfc5	            0x84c0	                             test al, al	       802	undo.c	FUNCTION_12	WHILE_1
0xfc7	     0xf859ffdffff	                           jne 0x4000dac	       802	undo.c	FUNCTION_12	WHILE_1
0xfcd	            0xeb01	                           jmp 0x4001010	       802	undo.c	FUNCTION_12	WHILE_1
0xfcf	              0x90	                                     nop	       811	undo.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xfd0	    0x488b8530ebff	           mov rax, qword [rbp - 0x14d0]	       853	undo.c	FUNCTION_12	CALL_19
0xfd7	          0x4889c7	                            mov rdi, rax	       853	undo.c	FUNCTION_12	CALL_19
0xfda	      0xe800000000	                          call 0x400101f	       853	undo.c	FUNCTION_12	CALL_19
0xfdf	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       854	undo.c	FUNCTION_12
0xfe6	        0x488b75f8	                mov rsi, qword [rbp - 8]	       855	undo.c	FUNCTION_12
0xfea	    0x644833342528	                xor rsi, qword fs:[0x28]	       855	undo.c	FUNCTION_12
0xff3	            0x7405	                            je 0x400103a	       855	undo.c	FUNCTION_12
0xff5	      0xe800000000	                          call 0x400103a	       855	undo.c	FUNCTION_12
0xffa	              0xc9	                                   leave	       855	undo.c	FUNCTION_12
0xffb	              0xc3	                                     ret	       855	undo.c	FUNCTION_12
unserialize_pos	FOR,0:ELSE,0:functions,0:IF,3:CALL,4:DO,0:WHILE,0:SWITCH,0	44
0x2625	              0x55	                                push rbp	      1462	undo.c	FUNCTION_32
0x2626	          0x4889e5	                            mov rbp, rsp	      1462	undo.c	FUNCTION_32
0x2629	        0x4883ec10	                           sub rsp, 0x10	      1462	undo.c	FUNCTION_32
0x262d	        0x48897df8	                mov qword [rbp - 8], rdi	      1462	undo.c	FUNCTION_32
0x2631	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1462	undo.c	FUNCTION_32
0x2635	        0x488b45f8	                mov rax, qword [rbp - 8]	      1463	undo.c	FUNCTION_32	CALL_1
0x2639	          0x4889c7	                            mov rdi, rax	      1463	undo.c	FUNCTION_32	CALL_1
0x263c	      0xe836eeffff	                   call sym.undo_read_4c	      1463	undo.c	FUNCTION_32	CALL_1
0x2641	          0x4863d0	                         movsxd rdx, eax	      1463	undo.c	FUNCTION_32	CALL_1
0x2644	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1463	undo.c	FUNCTION_32	CALL_1
0x2648	          0x488910	                    mov qword [rax], rdx	      1463	undo.c	FUNCTION_32	CALL_1
0x264b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1464	undo.c	FUNCTION_32	IF_1
0x264f	          0x488b00	                    mov rax, qword [rax]	      1464	undo.c	FUNCTION_32	IF_1
0x2652	          0x4885c0	                           test rax, rax	      1464	undo.c	FUNCTION_32	IF_1
0x2655	            0x790b	                           jns 0x40026a2	      1464	undo.c	FUNCTION_32	IF_1
0x2657	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1465	undo.c	FUNCTION_32	IF_1
0x265b	    0x48c700000000	                      mov qword [rax], 0	      1465	undo.c	FUNCTION_32	IF_1
0x2662	        0x488b45f8	                mov rax, qword [rbp - 8]	      1466	undo.c	FUNCTION_32	CALL_2
0x2666	          0x4889c7	                            mov rdi, rax	      1466	undo.c	FUNCTION_32	CALL_2
0x2669	      0xe809eeffff	                   call sym.undo_read_4c	      1466	undo.c	FUNCTION_32	CALL_2
0x266e	            0x89c2	                            mov edx, eax	      1466	undo.c	FUNCTION_32	CALL_2
0x2670	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1466	undo.c	FUNCTION_32	CALL_2
0x2674	          0x895008	                mov dword [rax + 8], edx	      1466	undo.c	FUNCTION_32	CALL_2
0x2677	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1467	undo.c	FUNCTION_32	IF_2
0x267b	          0x8b4008	                mov eax, dword [rax + 8]	      1467	undo.c	FUNCTION_32	IF_2
0x267e	            0x85c0	                           test eax, eax	      1467	undo.c	FUNCTION_32	IF_2
0x2680	            0x790b	                           jns 0x40026cd	      1467	undo.c	FUNCTION_32	IF_2
0x2682	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1468	undo.c	FUNCTION_32	IF_2
0x2686	    0xc74008000000	                  mov dword [rax + 8], 0	      1468	undo.c	FUNCTION_32	IF_2
0x268d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1470	undo.c	FUNCTION_32	CALL_3
0x2691	          0x4889c7	                            mov rdi, rax	      1470	undo.c	FUNCTION_32	CALL_3
0x2694	      0xe8deedffff	                   call sym.undo_read_4c	      1470	undo.c	FUNCTION_32	CALL_3
0x2699	            0x89c2	                            mov edx, eax	      1470	undo.c	FUNCTION_32	CALL_3
0x269b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1470	undo.c	FUNCTION_32	CALL_3
0x269f	          0x89500c	              mov dword [rax + 0xc], edx	      1470	undo.c	FUNCTION_32	CALL_3
0x26a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1471	undo.c	FUNCTION_32	IF_3
0x26a6	          0x8b400c	              mov eax, dword [rax + 0xc]	      1471	undo.c	FUNCTION_32	IF_3
0x26a9	            0x85c0	                           test eax, eax	      1471	undo.c	FUNCTION_32	IF_3
0x26ab	            0x790b	                           jns 0x40026f8	      1471	undo.c	FUNCTION_32	IF_3
0x26ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1472	undo.c	FUNCTION_32	IF_3
0x26b1	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1472	undo.c	FUNCTION_32	IF_3
0x26b8	              0x90	                                     nop	      1476	undo.c	FUNCTION_32
0x26b9	              0xc9	                                   leave	      1476	undo.c	FUNCTION_32
0x26ba	              0xc3	                                     ret	      1476	undo.c	FUNCTION_32
undo_read_2c	FOR,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0	37
0x1512	              0x55	                                push rbp	      1011	undo.c	FUNCTION_21
0x1513	          0x4889e5	                            mov rbp, rsp	      1011	undo.c	FUNCTION_21
0x1516	        0x4883ec30	                           sub rsp, 0x30	      1011	undo.c	FUNCTION_21
0x151a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1011	undo.c	FUNCTION_21
0x151e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1011	undo.c	FUNCTION_21
0x1527	        0x488945f8	                mov qword [rbp - 8], rax	      1011	undo.c	FUNCTION_21
0x152b	            0x31c0	                            xor eax, eax	      1011	undo.c	FUNCTION_21
0x152d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1013	undo.c	FUNCTION_21	IF_1
0x1531	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1013	undo.c	FUNCTION_21	IF_1
0x1535	          0x4885c0	                           test rax, rax	      1013	undo.c	FUNCTION_21	IF_1
0x1538	            0x7435	                            je 0x40015af	      1013	undo.c	FUNCTION_21	IF_1
0x153a	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x153e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x1542	      0xba02000000	                              mov edx, 2	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x1547	          0x4889ce	                            mov rsi, rcx	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x154a	          0x4889c7	                            mov rdi, rax	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x154d	      0xe858010000	                      call sym.undo_read	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x1552	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      1019	undo.c	FUNCTION_21	IF_1
0x1556	           0xfb6c0	                           movzx eax, al	      1019	undo.c	FUNCTION_21	IF_1
0x1559	          0xc1e008	                              shl eax, 8	      1019	undo.c	FUNCTION_21	IF_1
0x155c	            0x89c2	                            mov edx, eax	      1019	undo.c	FUNCTION_21	IF_1
0x155e	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1019	undo.c	FUNCTION_21	IF_1
0x1562	           0xfb6c0	                           movzx eax, al	      1019	undo.c	FUNCTION_21	IF_1
0x1565	             0x1d0	                            add eax, edx	      1019	undo.c	FUNCTION_21	IF_1
0x1567	          0x8945ec	             mov dword [rbp - 0x14], eax	      1019	undo.c	FUNCTION_21	IF_1
0x156a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1020	undo.c	FUNCTION_21	IF_1
0x156d	            0xeb10	                           jmp 0x40015bf	      1020	undo.c	FUNCTION_21	IF_1
0x156f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1023	undo.c	FUNCTION_21	CALL_2
0x1573	        0x488b4008	                mov rax, qword [rax + 8]	      1023	undo.c	FUNCTION_21	CALL_2
0x1577	          0x4889c7	                            mov rdi, rax	      1023	undo.c	FUNCTION_21	CALL_2
0x157a	      0xe800000000	                          call 0x40015bf	      1023	undo.c	FUNCTION_21	CALL_2
0x157f	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1024	undo.c	FUNCTION_21
0x1583	    0x644833342528	                xor rsi, qword fs:[0x28]	      1024	undo.c	FUNCTION_21
0x158c	            0x7405	                            je 0x40015d3	      1024	undo.c	FUNCTION_21
0x158e	      0xe800000000	                          call 0x40015d3	      1024	undo.c	FUNCTION_21
0x1593	              0xc9	                                   leave	      1024	undo.c	FUNCTION_21
0x1594	              0xc3	                                     ret	      1024	undo.c	FUNCTION_21
u_save_line	FOR,0:ELSE,0:functions,0:IF,0:CALL,2:DO,0:WHILE,0:SWITCH,0	11
0x6ba0	              0x55	                                push rbp	      3515	undo.c	FUNCTION_62
0x6ba1	          0x4889e5	                            mov rbp, rsp	      3515	undo.c	FUNCTION_62
0x6ba4	        0x4883ec10	                           sub rsp, 0x10	      3515	undo.c	FUNCTION_62
0x6ba8	        0x48897df8	                mov qword [rbp - 8], rdi	      3515	undo.c	FUNCTION_62
0x6bac	        0x488b45f8	                mov rax, qword [rbp - 8]	      3516	undo.c	FUNCTION_62	CALL_2
0x6bb0	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x6bb3	      0xe800000000	                          call 0x4006bf8	      3516	undo.c	FUNCTION_62	CALL_2
0x6bb8	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x6bbb	      0xe800000000	                          call 0x4006c00	      3516	undo.c	FUNCTION_62	CALL_2
0x6bc0	              0xc9	                                   leave	      3517	undo.c	FUNCTION_62
0x6bc1	              0xc3	                                     ret	      3517	undo.c	FUNCTION_62
serialize_uep	FOR,1:ELSE,0:functions,0:IF,2:CALL,7:DO,0:WHILE,0:SWITCH,0	87
0x229d	              0x55	                                push rbp	      1370	undo.c	FUNCTION_29
0x229e	          0x4889e5	                            mov rbp, rsp	      1370	undo.c	FUNCTION_29
0x22a1	        0x4883ec20	                           sub rsp, 0x20	      1370	undo.c	FUNCTION_29
0x22a5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1370	undo.c	FUNCTION_29
0x22a9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1370	undo.c	FUNCTION_29
0x22ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1374	undo.c	FUNCTION_29	CALL_1
0x22b1	        0x488b4008	                mov rax, qword [rax + 8]	      1374	undo.c	FUNCTION_29	CALL_1
0x22b5	          0x4889c1	                            mov rcx, rax	      1374	undo.c	FUNCTION_29	CALL_1
0x22b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1374	undo.c	FUNCTION_29	CALL_1
0x22bc	      0xba04000000	                              mov edx, 4	      1374	undo.c	FUNCTION_29	CALL_1
0x22c1	          0x4889ce	                            mov rsi, rcx	      1374	undo.c	FUNCTION_29	CALL_1
0x22c4	          0x4889c7	                            mov rdi, rax	      1374	undo.c	FUNCTION_29	CALL_1
0x22c7	      0xe8ddf0ffff	               call sym.undo_write_bytes	      1374	undo.c	FUNCTION_29	CALL_1
0x22cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1375	undo.c	FUNCTION_29	CALL_2
0x22d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1375	undo.c	FUNCTION_29	CALL_2
0x22d4	          0x4889c1	                            mov rcx, rax	      1375	undo.c	FUNCTION_29	CALL_2
0x22d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1375	undo.c	FUNCTION_29	CALL_2
0x22db	      0xba04000000	                              mov edx, 4	      1375	undo.c	FUNCTION_29	CALL_2
0x22e0	          0x4889ce	                            mov rsi, rcx	      1375	undo.c	FUNCTION_29	CALL_2
0x22e3	          0x4889c7	                            mov rdi, rax	      1375	undo.c	FUNCTION_29	CALL_2
0x22e6	      0xe8bef0ffff	               call sym.undo_write_bytes	      1375	undo.c	FUNCTION_29	CALL_2
0x22eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1376	undo.c	FUNCTION_29	CALL_3
0x22ef	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1376	undo.c	FUNCTION_29	CALL_3
0x22f3	          0x4889c1	                            mov rcx, rax	      1376	undo.c	FUNCTION_29	CALL_3
0x22f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1376	undo.c	FUNCTION_29	CALL_3
0x22fa	      0xba04000000	                              mov edx, 4	      1376	undo.c	FUNCTION_29	CALL_3
0x22ff	          0x4889ce	                            mov rsi, rcx	      1376	undo.c	FUNCTION_29	CALL_3
0x2302	          0x4889c7	                            mov rdi, rax	      1376	undo.c	FUNCTION_29	CALL_3
0x2305	      0xe89ff0ffff	               call sym.undo_write_bytes	      1376	undo.c	FUNCTION_29	CALL_3
0x230a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1377	undo.c	FUNCTION_29	CALL_4
0x230e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1377	undo.c	FUNCTION_29	CALL_4
0x2312	          0x4889c1	                            mov rcx, rax	      1377	undo.c	FUNCTION_29	CALL_4
0x2315	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1377	undo.c	FUNCTION_29	CALL_4
0x2319	      0xba04000000	                              mov edx, 4	      1377	undo.c	FUNCTION_29	CALL_4
0x231e	          0x4889ce	                            mov rsi, rcx	      1377	undo.c	FUNCTION_29	CALL_4
0x2321	          0x4889c7	                            mov rdi, rax	      1377	undo.c	FUNCTION_29	CALL_4
0x2324	      0xe880f0ffff	               call sym.undo_write_bytes	      1377	undo.c	FUNCTION_29	CALL_4
0x2329	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1378	undo.c	FUNCTION_29	FOR_1
0x2330	      0xe988000000	                           jmp 0x40023fd	      1378	undo.c	FUNCTION_29	FOR_1
0x2335	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x2339	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x233d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x2340	          0x4863d2	                         movsxd rdx, edx	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x2343	        0x48c1e203	                              shl rdx, 3	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x2347	          0x4801d0	                            add rax, rdx	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x234a	          0x488b00	                    mov rax, qword [rax]	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x234d	          0x4889c7	                            mov rdi, rax	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x2350	      0xe800000000	                          call 0x4002395	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x2355	        0x488945f8	                mov qword [rbp - 8], rax	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x2359	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x235d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x2361	      0xba04000000	                              mov edx, 4	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x2366	          0x4889ce	                            mov rsi, rcx	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x2369	          0x4889c7	                            mov rdi, rax	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x236c	      0xe838f0ffff	               call sym.undo_write_bytes	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x2371	            0x85c0	                           test eax, eax	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x2373	            0x7507	                           jne 0x40023bc	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x2375	      0xb800000000	                              mov eax, 0	      1382	undo.c	FUNCTION_29	FOR_1	IF_1
0x237a	            0xeb5d	                           jmp 0x4002419	      1382	undo.c	FUNCTION_29	FOR_1	IF_1
0x237c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x2381	            0x7436	                            je 0x40023f9	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x2383	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x2387	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x238b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x238e	          0x4863d2	                         movsxd rdx, edx	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x2391	        0x48c1e203	                              shl rdx, 3	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x2395	          0x4801d0	                            add rax, rdx	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x2398	          0x488b08	                    mov rcx, qword [rax]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x239b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x239f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x23a3	          0x4889ce	                            mov rsi, rcx	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x23a6	          0x4889c7	                            mov rdi, rax	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x23a9	      0xe8bfeeffff	                   call sym.fwrite_crypt	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x23ae	            0x85c0	                           test eax, eax	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x23b0	            0x7507	                           jne 0x40023f9	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x23b2	      0xb800000000	                              mov eax, 0	      1384	undo.c	FUNCTION_29	FOR_1	IF_2
0x23b7	            0xeb20	                           jmp 0x4002419	      1384	undo.c	FUNCTION_29	FOR_1	IF_2
0x23b9	        0x8345f401	                add dword [rbp - 0xc], 1	      1378	undo.c	FUNCTION_29	FOR_1
0x23bd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1378	undo.c	FUNCTION_29	FOR_1
0x23c0	          0x4863d0	                         movsxd rdx, eax	      1378	undo.c	FUNCTION_29	FOR_1
0x23c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1378	undo.c	FUNCTION_29	FOR_1
0x23c7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1378	undo.c	FUNCTION_29	FOR_1
0x23cb	          0x4839c2	                            cmp rdx, rax	      1378	undo.c	FUNCTION_29	FOR_1
0x23ce	     0xf8c61ffffff	                            jl 0x4002375	      1378	undo.c	FUNCTION_29	FOR_1
0x23d4	      0xb801000000	                              mov eax, 1	      1386	undo.c	FUNCTION_29
0x23d9	              0xc9	                                   leave	      1387	undo.c	FUNCTION_29
0x23da	              0xc3	                                     ret	      1387	undo.c	FUNCTION_29
u_sync	FOR,0:ELSE,1:functions,0:IF,3:CALL,3:DO,0:WHILE,0:SWITCH,0	34
0x5b7c	              0x55	                                push rbp	      2985	undo.c	FUNCTION_43
0x5b7d	          0x4889e5	                            mov rbp, rsp	      2985	undo.c	FUNCTION_43
0x5b80	        0x4883ec10	                           sub rsp, 0x10	      2985	undo.c	FUNCTION_43
0x5b84	          0x897dfc	                mov dword [rbp - 4], edi	      2985	undo.c	FUNCTION_43
0x5b87	    0x488b05000000	            mov rax, qword [0x04005bce] 	      2987	undo.c	FUNCTION_43	IF_1
0x5b8e	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      2987	undo.c	FUNCTION_43	IF_1
0x5b94	            0x85c0	                           test eax, eax	      2987	undo.c	FUNCTION_43	IF_1
0x5b96	            0x755b	                           jne 0x4005c33	      2987	undo.c	FUNCTION_43	IF_1
0x5b98	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2987	undo.c	FUNCTION_43	IF_1
0x5b9c	            0x750a	                           jne 0x4005be8	      2987	undo.c	FUNCTION_43	IF_1
0x5b9e	    0x8b0500000000	            mov eax, dword [0x04005be4] 	      2987	undo.c	FUNCTION_43	IF_1
0x5ba4	            0x85c0	                           test eax, eax	      2987	undo.c	FUNCTION_43	IF_1
0x5ba6	            0x7f4b	                            jg 0x4005c33	      2987	undo.c	FUNCTION_43	IF_1
0x5ba8	    0x488b05000000	            mov rax, qword [0x04005bef] 	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x5baf	          0x4885c0	                           test rax, rax	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x5bb2	            0x7509	                           jne 0x4005bfd	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x5bb4	      0xe800000000	                          call 0x4005bf9	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x5bb9	            0x85c0	                           test eax, eax	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x5bbb	            0x7539	                           jne 0x4005c36	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x5bbd	      0xe85ba6ffff	                  call sym.get_undolevel	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x5bc2	          0x4885c0	                           test rax, rax	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x5bc5	            0x7913	                           jns 0x4005c1a	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x5bc7	    0x488b05000000	            mov rax, qword [0x04005c0e] 	      2994	undo.c	FUNCTION_43	IF_3
0x5bce	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2994	undo.c	FUNCTION_43	IF_3
0x5bd8	            0xeb1d	                           jmp 0x4005c37	      2994	undo.c	FUNCTION_43	IF_3
0x5bda	      0xe813080000	                       call sym.u_getbot	      2997	undo.c	FUNCTION_43	ELSE_1	CALL_3
0x5bdf	    0x488b05000000	            mov rax, qword [0x04005c26] 	      2998	undo.c	FUNCTION_43	ELSE_1
0x5be6	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      2998	undo.c	FUNCTION_43	ELSE_1
0x5bf1	            0xeb04	                           jmp 0x4005c37	      2998	undo.c	FUNCTION_43	ELSE_1
0x5bf3	              0x90	                                     nop	      2988	undo.c	FUNCTION_43	IF_1
0x5bf4	            0xeb01	                           jmp 0x4005c37	      2988	undo.c	FUNCTION_43	IF_1
0x5bf6	              0x90	                                     nop	      2991	undo.c	FUNCTION_43	IF_2
0x5bf7	              0xc9	                                   leave	      3000	undo.c	FUNCTION_43
0x5bf8	              0xc3	                                     ret	      3000	undo.c	FUNCTION_43
u_saveline	FOR,0:ELSE,1:functions,0:IF,4:CALL,3:DO,0:WHILE,0:SWITCH,0	48
0x686e	              0x55	                                push rbp	      3424	undo.c	FUNCTION_58
0x686f	          0x4889e5	                            mov rbp, rsp	      3424	undo.c	FUNCTION_58
0x6872	              0x53	                                push rbx	      3424	undo.c	FUNCTION_58
0x6873	        0x4883ec18	                           sub rsp, 0x18	      3424	undo.c	FUNCTION_58
0x6877	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3424	undo.c	FUNCTION_58
0x687b	    0x488b05000000	            mov rax, qword [0x040068c2] 	      3425	undo.c	FUNCTION_58	IF_1
0x6882	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3425	undo.c	FUNCTION_58	IF_1
0x6889	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3425	undo.c	FUNCTION_58	IF_1
0x688d	     0xf84a3000000	                            je 0x4006976	      3425	undo.c	FUNCTION_58	IF_1
0x6893	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3427	undo.c	FUNCTION_58	IF_2
0x6898	     0xf8e9b000000	                           jle 0x4006979	      3427	undo.c	FUNCTION_58	IF_2
0x689e	    0x488b05000000	            mov rax, qword [0x040068e5] 	      3427	undo.c	FUNCTION_58	IF_2
0x68a5	          0x488b00	                    mov rax, qword [rax]	      3427	undo.c	FUNCTION_58	IF_2
0x68a8	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3427	undo.c	FUNCTION_58	IF_2
0x68ac	     0xf8c87000000	                            jl 0x4006979	      3427	undo.c	FUNCTION_58	IF_2
0x68b2	      0xe800000000	                          call 0x40068f7	      3429	undo.c	FUNCTION_58	CALL_1
0x68b7	    0x488b05000000	            mov rax, qword [0x040068fe] 	      3430	undo.c	FUNCTION_58
0x68be	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3430	undo.c	FUNCTION_58
0x68c2	    0x488990681200	          mov qword [rax + 0x1268], rdx 	      3430	undo.c	FUNCTION_58
0x68c9	    0x488b05000000	            mov rax, qword [0x04006910] 	      3431	undo.c	FUNCTION_58	IF_3
0x68d0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3431	undo.c	FUNCTION_58	IF_3
0x68d4	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3431	undo.c	FUNCTION_58	IF_3
0x68d8	            0x7519	                           jne 0x4006933	      3431	undo.c	FUNCTION_58	IF_3
0x68da	    0x488b05000000	            mov rax, qword [0x04006921] 	      3432	undo.c	FUNCTION_58	IF_3
0x68e1	    0x488b15000000	            mov rdx, qword [0x04006928] 	      3432	undo.c	FUNCTION_58	IF_3
0x68e8	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3432	undo.c	FUNCTION_58	IF_3
0x68eb	    0x899070120000	          mov dword [rax + 0x1270], edx 	      3432	undo.c	FUNCTION_58	IF_3
0x68f1	            0xeb11	                           jmp 0x4006944	      3432	undo.c	FUNCTION_58	IF_3
0x68f3	    0x488b05000000	            mov rax, qword [0x0400693a] 	      3434	undo.c	FUNCTION_58	ELSE_1
0x68fa	    0xc78070120000	            mov dword [rax + 0x1270], 0 	      3434	undo.c	FUNCTION_58	ELSE_1
0x6904	    0x488b1d000000	            mov rbx, qword [0x0400694b] 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x690b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x690f	          0x4889c7	                            mov rdi, rax	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x6912	      0xe889020000	                    call sym.u_save_line	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x6917	    0x488983601200	          mov qword [rbx + 0x1260], rax 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x691e	    0x488b83601200	          mov rax, qword [rbx + 0x1260] 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x6925	          0x4885c0	                           test rax, rax	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x6928	            0x7510	                           jne 0x400697a	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x692a	      0xbf00000000	                              mov edi, 0	      3436	undo.c	FUNCTION_58	CALL_3
0x692f	      0xe800000000	                          call 0x4006974	      3436	undo.c	FUNCTION_58	CALL_3
0x6934	            0xeb04	                           jmp 0x400697a	      3436	undo.c	FUNCTION_58	CALL_3
0x6936	              0x90	                                     nop	      3426	undo.c	FUNCTION_58	IF_1
0x6937	            0xeb01	                           jmp 0x400697a	      3426	undo.c	FUNCTION_58	IF_1
0x6939	              0x90	                                     nop	      3428	undo.c	FUNCTION_58	IF_2
0x693a	        0x4883c418	                           add rsp, 0x18	      3437	undo.c	FUNCTION_58
0x693e	              0x5b	                                 pop rbx	      3437	undo.c	FUNCTION_58
0x693f	              0x5d	                                 pop rbp	      3437	undo.c	FUNCTION_58
0x6940	              0xc3	                                     ret	      3437	undo.c	FUNCTION_58
u_save_cursor	FOR,0:ELSE,0:functions,0:IF,0:CALL,1:DO,0:WHILE,0:SWITCH,0	13
0x0	              0x55	                                push rbp	       252	undo.c	FUNCTION_3
0x1	          0x4889e5	                            mov rbp, rsp	       252	undo.c	FUNCTION_3
0x4	    0x488b05000000	            mov rax, qword [0x0400004b] 	       254	undo.c	FUNCTION_3
0xb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       254	undo.c	FUNCTION_3
0xf	        0x488d5001	                      lea rdx, [rax + 1]	       254	undo.c	FUNCTION_3
0x13	    0x488b05000000	            mov rax, qword [0x0400005a] 	       253	undo.c	FUNCTION_3	CALL_1
0x1a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       253	undo.c	FUNCTION_3	CALL_1
0x1e	        0x4883e801	                              sub rax, 1	       253	undo.c	FUNCTION_3	CALL_1
0x22	          0x4889d6	                            mov rsi, rdx	       253	undo.c	FUNCTION_3	CALL_1
0x25	          0x4889c7	                            mov rdi, rax	       253	undo.c	FUNCTION_3	CALL_1
0x28	      0xe800000000	                          call 0x400006d	       253	undo.c	FUNCTION_3	CALL_1
0x2d	              0x5d	                                 pop rbp	       255	undo.c	FUNCTION_3
0x2e	              0xc3	                                     ret	       255	undo.c	FUNCTION_3
undo_write_bytes	FOR,1:ELSE,0:functions,0:IF,0:CALL,1:DO,0:WHILE,0:SWITCH,0	41
0x13a9	              0x55	                                push rbp	       972	undo.c	FUNCTION_18
0x13aa	          0x4889e5	                            mov rbp, rsp	       972	undo.c	FUNCTION_18
0x13ad	        0x4883ec40	                           sub rsp, 0x40	       972	undo.c	FUNCTION_18
0x13b1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       972	undo.c	FUNCTION_18
0x13b5	        0x488975d0	             mov qword [rbp - 0x30], rsi	       972	undo.c	FUNCTION_18
0x13b9	          0x8955cc	             mov dword [rbp - 0x34], edx	       972	undo.c	FUNCTION_18
0x13bc	    0x64488b042528	                mov rax, qword fs:[0x28]	       972	undo.c	FUNCTION_18
0x13c5	        0x488945f8	                mov qword [rbp - 8], rax	       972	undo.c	FUNCTION_18
0x13c9	            0x31c0	                            xor eax, eax	       972	undo.c	FUNCTION_18
0x13cb	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       975	undo.c	FUNCTION_18
0x13d2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       977	undo.c	FUNCTION_18	FOR_1
0x13d5	          0x83e801	                              sub eax, 1	       977	undo.c	FUNCTION_18	FOR_1
0x13d8	          0x8945e8	             mov dword [rbp - 0x18], eax	       977	undo.c	FUNCTION_18	FOR_1
0x13db	            0xeb25	                           jmp 0x4001442	       977	undo.c	FUNCTION_18	FOR_1
0x13dd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       978	undo.c	FUNCTION_18	FOR_1
0x13e0	          0x8d5001	                      lea edx, [rax + 1]	       978	undo.c	FUNCTION_18	FOR_1
0x13e3	          0x8955ec	             mov dword [rbp - 0x14], edx	       978	undo.c	FUNCTION_18	FOR_1
0x13e6	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       978	undo.c	FUNCTION_18	FOR_1
0x13e9	          0xc1e203	                              shl edx, 3	       978	undo.c	FUNCTION_18	FOR_1
0x13ec	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       978	undo.c	FUNCTION_18	FOR_1
0x13f0	            0x89d1	                            mov ecx, edx	       978	undo.c	FUNCTION_18	FOR_1
0x13f2	          0x48d3ee	                             shr rsi, cl	       978	undo.c	FUNCTION_18	FOR_1
0x13f5	          0x4889f2	                            mov rdx, rsi	       978	undo.c	FUNCTION_18	FOR_1
0x13f8	            0x4898	                                    cdqe	       978	undo.c	FUNCTION_18	FOR_1
0x13fa	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	       978	undo.c	FUNCTION_18	FOR_1
0x13fe	        0x836de801	               sub dword [rbp - 0x18], 1	       977	undo.c	FUNCTION_18	FOR_1
0x1402	        0x837de800	               cmp dword [rbp - 0x18], 0	       977	undo.c	FUNCTION_18	FOR_1
0x1406	            0x79d5	                           jns 0x400141d	       977	undo.c	FUNCTION_18	FOR_1
0x1408	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       979	undo.c	FUNCTION_18	CALL_1
0x140b	          0x4863d0	                         movsxd rdx, eax	       979	undo.c	FUNCTION_18	CALL_1
0x140e	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       979	undo.c	FUNCTION_18	CALL_1
0x1412	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       979	undo.c	FUNCTION_18	CALL_1
0x1416	          0x4889ce	                            mov rsi, rcx	       979	undo.c	FUNCTION_18	CALL_1
0x1419	          0x4889c7	                            mov rdi, rax	       979	undo.c	FUNCTION_18	CALL_1
0x141c	      0xe868fcffff	                     call sym.undo_write	       979	undo.c	FUNCTION_18	CALL_1
0x1421	        0x488b7df8	                mov rdi, qword [rbp - 8]	       980	undo.c	FUNCTION_18
0x1425	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       980	undo.c	FUNCTION_18
0x142e	            0x7405	                            je 0x4001475	       980	undo.c	FUNCTION_18
0x1430	      0xe800000000	                          call 0x4001475	       980	undo.c	FUNCTION_18
0x1435	              0xc9	                                   leave	       980	undo.c	FUNCTION_18
0x1436	              0xc3	                                     ret	       980	undo.c	FUNCTION_18
u_freeentry	FOR,0:ELSE,0:functions,0:IF,0:CALL,3:DO,0:WHILE,1:SWITCH,0	27
0x6793	              0x55	                                push rbp	      3396	undo.c	FUNCTION_56
0x6794	          0x4889e5	                            mov rbp, rsp	      3396	undo.c	FUNCTION_56
0x6797	        0x4883ec10	                           sub rsp, 0x10	      3396	undo.c	FUNCTION_56
0x679b	        0x48897df8	                mov qword [rbp - 8], rdi	      3396	undo.c	FUNCTION_56
0x679f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3396	undo.c	FUNCTION_56
0x67a3	            0xeb23	                           jmp 0x4006808	      3397	undo.c	FUNCTION_56	WHILE_1
0x67a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3398	undo.c	FUNCTION_56	CALL_1
0x67a9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x67ad	      0x48836df001	               sub qword [rbp - 0x10], 1	      3398	undo.c	FUNCTION_56	CALL_1
0x67b2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3398	undo.c	FUNCTION_56	CALL_1
0x67b6	        0x48c1e203	                              shl rdx, 3	      3398	undo.c	FUNCTION_56	CALL_1
0x67ba	          0x4801d0	                            add rax, rdx	      3398	undo.c	FUNCTION_56	CALL_1
0x67bd	          0x488b00	                    mov rax, qword [rax]	      3398	undo.c	FUNCTION_56	CALL_1
0x67c0	          0x4889c7	                            mov rdi, rax	      3398	undo.c	FUNCTION_56	CALL_1
0x67c3	      0xe800000000	                          call 0x4006808	      3398	undo.c	FUNCTION_56	CALL_1
0x67c8	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3397	undo.c	FUNCTION_56	WHILE_1
0x67cd	            0x7fd6	                            jg 0x40067e5	      3397	undo.c	FUNCTION_56	WHILE_1
0x67cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3399	undo.c	FUNCTION_56	CALL_2
0x67d3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x67d7	          0x4889c7	                            mov rdi, rax	      3399	undo.c	FUNCTION_56	CALL_2
0x67da	      0xe800000000	                          call 0x400681f	      3399	undo.c	FUNCTION_56	CALL_2
0x67df	        0x488b45f8	                mov rax, qword [rbp - 8]	      3403	undo.c	FUNCTION_56	CALL_3
0x67e3	          0x4889c7	                            mov rdi, rax	      3403	undo.c	FUNCTION_56	CALL_3
0x67e6	      0xe800000000	                          call 0x400682b	      3403	undo.c	FUNCTION_56	CALL_3
0x67eb	              0x90	                                     nop	      3404	undo.c	FUNCTION_56
0x67ec	              0xc9	                                   leave	      3404	undo.c	FUNCTION_56
0x67ed	              0xc3	                                     ret	      3404	undo.c	FUNCTION_56
u_undoredo	FOR,5:ELSE,12:functions,0:IF,33:CALL,32:DO,0:WHILE,1:SWITCH,0	640
0x4b11	              0x55	                                push rbp	      2615	undo.c	FUNCTION_41
0x4b12	          0x4889e5	                            mov rbp, rsp	      2615	undo.c	FUNCTION_41
0x4b15	              0x53	                                push rbx	      2615	undo.c	FUNCTION_41
0x4b16	    0x4881ec680200	                          sub rsp, 0x268	      2615	undo.c	FUNCTION_41
0x4b1d	    0x89bd9cfdffff	            mov dword [rbp - 0x264], edi	      2615	undo.c	FUNCTION_41
0x4b23	    0x64488b042528	                mov rax, qword fs:[0x28]	      2615	undo.c	FUNCTION_41
0x4b2c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2615	undo.c	FUNCTION_41
0x4b30	            0x31c0	                            xor eax, eax	      2615	undo.c	FUNCTION_41
0x4b32	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	      2616	undo.c	FUNCTION_41
0x4b3d	    0x48c785c8fdff	     mov qword [rbp - 0x238], 0x7fffffff	      2621	undo.c	FUNCTION_41
0x4b48	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	      2624	undo.c	FUNCTION_41
0x4b53	    0x488b05000000	            mov rax, qword [0x04004b9a] 	      2630	undo.c	FUNCTION_41
0x4b5a	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2630	undo.c	FUNCTION_41
0x4b61	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      2630	undo.c	FUNCTION_41
0x4b68	      0xe800000000	                          call 0x4004bad	      2634	undo.c	FUNCTION_41	CALL_1
0x4b6d	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2639	undo.c	FUNCTION_41
0x4b74	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2639	undo.c	FUNCTION_41
0x4b77	    0x8985a8fdffff	            mov dword [rbp - 0x258], eax	      2639	undo.c	FUNCTION_41
0x4b7d	    0x488b05000000	            mov rax, qword [0x04004bc4] 	      2640	undo.c	FUNCTION_41
0x4b84	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      2640	undo.c	FUNCTION_41
0x4b8a	            0x85c0	                           test eax, eax	      2640	undo.c	FUNCTION_41
0x4b8c	           0xf95c0	                                setne al	      2640	undo.c	FUNCTION_41
0x4b8f	           0xfb6d0	                           movzx edx, al	      2640	undo.c	FUNCTION_41
0x4b92	    0x488b05000000	            mov rax, qword [0x04004bd9] 	      2641	undo.c	FUNCTION_41
0x4b99	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2641	undo.c	FUNCTION_41
0x4b9c	          0x83e001	                              and eax, 1	      2641	undo.c	FUNCTION_41
0x4b9f	            0x85c0	                           test eax, eax	      2641	undo.c	FUNCTION_41
0x4ba1	            0x7407	                            je 0x4004bea	      2641	undo.c	FUNCTION_41
0x4ba3	      0xb802000000	                              mov eax, 2	      2641	undo.c	FUNCTION_41
0x4ba8	            0xeb05	                           jmp 0x4004bef	      2641	undo.c	FUNCTION_41
0x4baa	      0xb800000000	                              mov eax, 0	      2641	undo.c	FUNCTION_41
0x4baf	             0x1d0	                            add eax, edx	      2640	undo.c	FUNCTION_41
0x4bb1	    0x8985acfdffff	            mov dword [rbp - 0x254], eax	      2640	undo.c	FUNCTION_41
0x4bb7	      0xe800000000	                          call 0x4004bfc	      2642	undo.c	FUNCTION_41	CALL_3
0x4bbc	    0x488b05000000	            mov rax, qword [0x04004c03] 	      2647	undo.c	FUNCTION_41	CALL_4
0x4bc3	    0x488d88580100	                  lea rcx, [rax + 0x158]	      2647	undo.c	FUNCTION_41	CALL_4
0x4bca	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	      2647	undo.c	FUNCTION_41	CALL_4
0x4bd1	      0xbaa0010000	                          mov edx, 0x1a0	      2647	undo.c	FUNCTION_41	CALL_4
0x4bd6	          0x4889ce	                            mov rsi, rcx	      2647	undo.c	FUNCTION_41	CALL_4
0x4bd9	          0x4889c7	                            mov rdi, rax	      2647	undo.c	FUNCTION_41	CALL_4
0x4bdc	      0xe800000000	                          call 0x4004c21	      2647	undo.c	FUNCTION_41	CALL_4
0x4be1	    0x488b05000000	            mov rax, qword [0x04004c28] 	      2648	undo.c	FUNCTION_41
0x4be8	    0x488b90f80200	           mov rdx, qword [rax + 0x2f8] 	      2648	undo.c	FUNCTION_41
0x4bef	    0x48899510feff	            mov qword [rbp - 0x1f0], rdx	      2648	undo.c	FUNCTION_41
0x4bf6	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	      2648	undo.c	FUNCTION_41
0x4bfd	    0x48899518feff	            mov qword [rbp - 0x1e8], rdx	      2648	undo.c	FUNCTION_41
0x4c04	    0x488b90080300	           mov rdx, qword [rax + 0x308] 	      2648	undo.c	FUNCTION_41
0x4c0b	    0x48899520feff	            mov qword [rbp - 0x1e0], rdx	      2648	undo.c	FUNCTION_41
0x4c12	    0x488b90100300	           mov rdx, qword [rax + 0x310] 	      2648	undo.c	FUNCTION_41
0x4c19	    0x48899528feff	            mov qword [rbp - 0x1d8], rdx	      2648	undo.c	FUNCTION_41
0x4c20	    0x488b80180300	           mov rax, qword [rax + 0x318] 	      2648	undo.c	FUNCTION_41
0x4c27	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      2648	undo.c	FUNCTION_41
0x4c2e	    0x488b05000000	            mov rax, qword [0x04004c75] 	      2649	undo.c	FUNCTION_41
0x4c35	    0x488b15000000	            mov rdx, qword [0x04004c7c] 	      2649	undo.c	FUNCTION_41
0x4c3c	          0x488b12	                    mov rdx, qword [rdx]	      2649	undo.c	FUNCTION_41
0x4c3f	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2649	undo.c	FUNCTION_41
0x4c46	    0x488b05000000	            mov rax, qword [0x04004c8d] 	      2650	undo.c	FUNCTION_41
0x4c4d	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      2650	undo.c	FUNCTION_41
0x4c57	    0x488b05000000	            mov rax, qword [0x04004c9e] 	      2651	undo.c	FUNCTION_41
0x4c5e	    0x48c780001200	            mov qword [rax + 0x1200], 0 	      2651	undo.c	FUNCTION_41
0x4c69	    0x488b05000000	            mov rax, qword [0x04004cb0] 	      2652	undo.c	FUNCTION_41
0x4c70	    0xc78008120000	            mov dword [rax + 0x1208], 0 	      2652	undo.c	FUNCTION_41
0x4c7a	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2654	undo.c	FUNCTION_41	FOR_1
0x4c81	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2654	undo.c	FUNCTION_41	FOR_1
0x4c85	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2654	undo.c	FUNCTION_41	FOR_1
0x4c8c	      0xe952070000	                           jmp 0x4005423	      2654	undo.c	FUNCTION_41	FOR_1
0x4c91	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2656	undo.c	FUNCTION_41	FOR_1
0x4c98	        0x488b4008	                mov rax, qword [rax + 8]	      2656	undo.c	FUNCTION_41	FOR_1
0x4c9c	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      2656	undo.c	FUNCTION_41	FOR_1
0x4ca3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2657	undo.c	FUNCTION_41	FOR_1
0x4caa	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2657	undo.c	FUNCTION_41	FOR_1
0x4cae	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      2657	undo.c	FUNCTION_41	FOR_1
0x4cb5	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4cbd	            0x7515	                           jne 0x4004d14	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4cbf	    0x488b05000000	            mov rax, qword [0x04004d06] 	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4cc6	          0x488b00	                    mov rax, qword [rax]	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4cc9	        0x4883c001	                              add rax, 1	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4ccd	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4cd4	    0x488b05000000	            mov rax, qword [0x04004d1b] 	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4cdb	          0x488b00	                    mov rax, qword [rax]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4cde	    0x483b85f0fdff	            cmp rax, qword [rbp - 0x210]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4ce5	            0x7c27	                            jl 0x4004d4e	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4ce7	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4cee	    0x483b85b8fdff	            cmp rax, qword [rbp - 0x248]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4cf5	            0x7d17	                           jge 0x4004d4e	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4cf7	    0x488b05000000	            mov rax, qword [0x04004d3e] 	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4cfe	          0x488b00	                    mov rax, qword [rax]	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4d01	        0x4883c001	                              add rax, 1	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4d05	    0x483b85b8fdff	            cmp rax, qword [rbp - 0x248]	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4d0c	            0x7d21	                           jge 0x4004d6f	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4d0e	      0xe800000000	                          call 0x4004d53	      2663	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_5
0x4d13	      0xbf00000000	                              mov edi, 0	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4d18	      0xe800000000	                          call 0x4004d5d	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4d1d	          0x4889c7	                            mov rdi, rax	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4d20	      0xe800000000	                          call 0x4004d65	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4d25	      0xe800000000	                          call 0x4004d6a	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4d2a	      0xe9f90a0000	                           jmp 0x4005868	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4d2f	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2669	undo.c	FUNCTION_41	FOR_1
0x4d36	    0x482b85f0fdff	            sub rax, qword [rbp - 0x210]	      2669	undo.c	FUNCTION_41	FOR_1
0x4d3d	        0x4883e801	                              sub rax, 1	      2669	undo.c	FUNCTION_41	FOR_1
0x4d41	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      2669	undo.c	FUNCTION_41	FOR_1
0x4d48	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2670	undo.c	FUNCTION_41	FOR_1
0x4d4f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2670	undo.c	FUNCTION_41	FOR_1
0x4d53	    0x48898500feff	            mov qword [rbp - 0x200], rax	      2670	undo.c	FUNCTION_41	FOR_1
0x4d5a	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4d61	    0x483b85c8fdff	            cmp rax, qword [rbp - 0x238]	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4d68	     0xf8d8c010000	                           jge 0x4004f3a	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4d6e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4d75	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4d79	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4d80	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4d87	    0x483b85f0fdff	            cmp rax, qword [rbp - 0x210]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4d8e	            0x7c57	                            jl 0x4004e27	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4d90	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4d97	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4d9e	          0x4801d0	                            add rax, rdx	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4da1	        0x4883c001	                              add rax, 1	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4da5	    0x483b85c0fdff	            cmp rax, qword [rbp - 0x240]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dac	            0x7c39	                            jl 0x4004e27	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dae	    0x488b0d000000	            mov rcx, qword [0x04004df5] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4db5	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dbc	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dc0	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dc4	        0x48894138	             mov qword [rcx + 0x38], rax	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dc8	        0x48895140	             mov qword [rcx + 0x40], rdx	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dcc	    0x488b05000000	            mov rax, qword [0x04004e13] 	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dd3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4dd7	        0x4883e801	                              sub rax, 1	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4ddb	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4de2	      0xe913010000	                           jmp 0x4004f3a	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4de7	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4df2	            0xeb53	                           jmp 0x4004e87	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4df4	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4dfb	        0x488d5001	                      lea rdx, [rax + 1]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4dff	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e06	          0x4801d0	                            add rax, rdx	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e09	          0x4889c7	                            mov rdi, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e0c	      0xe800000000	                          call 0x4004e51	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e11	          0x4889c1	                            mov rcx, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e14	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e1b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e1f	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e26	        0x48c1e203	                              shl rdx, 3	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e2a	          0x4801d0	                            add rax, rdx	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e2d	          0x488b00	                    mov rax, qword [rax]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e30	          0x4889ce	                            mov rsi, rcx	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e33	          0x4889c7	                            mov rdi, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e36	      0xe800000000	                          call 0x4004e7b	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e3b	            0x85c0	                           test eax, eax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e3d	            0x752a	                           jne 0x4004ea9	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4e3f	    0x488385d0fdff	              add qword [rbp - 0x230], 1	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e47	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e4e	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e55	            0x7d13	                           jge 0x4004eaa	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e57	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e5e	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e65	            0x7c8d	                            jl 0x4004e34	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e67	            0xeb01	                           jmp 0x4004eaa	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4e69	              0x90	                                     nop	      2690	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5
0x4e6a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e71	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e78	            0x7542	                           jne 0x4004efc	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e7a	    0x4881bdc8fdff	    cmp qword [rbp - 0x238], 0x7fffffff 	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e85	            0x7535	                           jne 0x4004efc	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e87	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e8e	          0x488b00	                    mov rax, qword [rax]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e91	          0x4885c0	                           test rax, rax	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e94	            0x7526	                           jne 0x4004efc	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e96	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2693	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4e9d	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2693	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4ea4	    0x488b05000000	            mov rax, qword [0x04004eeb] 	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4eab	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4eb2	        0x4883c201	                              add rdx, 1	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4eb6	        0x48895038	             mov qword [rax + 0x38], rdx	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4eba	            0xeb3e	                           jmp 0x4004f3a	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4ebc	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4ec3	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4eca	            0x7d2e	                           jge 0x4004f3a	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4ecc	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4ed3	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4eda	          0x4801d0	                            add rax, rdx	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4edd	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4ee4	    0x488b05000000	            mov rax, qword [0x04004f2b] 	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4eeb	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4ef2	        0x4883c201	                              add rdx, 1	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4ef6	        0x48895038	             mov qword [rax + 0x38], rdx	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4efa	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 0	      2704	undo.c	FUNCTION_41	FOR_1
0x4f04	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4f0c	     0xf8e37010000	                           jle 0x4005089	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4f12	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f19	        0x48c1e003	                              shl rax, 3	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f1d	      0xbe00000000	                              mov esi, 0	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f22	          0x4889c7	                            mov rdi, rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f25	      0xe800000000	                          call 0x4004f6a	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f2a	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f31	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f39	            0x7560	                           jne 0x4004fdb	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4f3b	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_12
0x4f42	        0x48c1e003	                              shl rax, 3	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_12
0x4f46	          0x4889c7	                            mov rdi, rax	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_12
0x4f49	      0xe800000000	                          call 0x4004f8e	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_12
0x4f4e	            0xeb3c	                           jmp 0x4004fcc	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f50	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f57	          0x488b00	                    mov rax, qword [rax]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f5a	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f61	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_13
0x4f68	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_13
0x4f6c	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_13
0x4f73	          0x4889d6	                            mov rsi, rdx	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_13
0x4f76	          0x4889c7	                            mov rdi, rax	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_13
0x4f79	      0xe815180000	                    call sym.u_freeentry	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_13
0x4f7e	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      2721	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f85	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2721	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f8c	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f94	            0x75ba	                           jne 0x4004f90	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4f96	      0xe956040000	                           jmp 0x4005431	      2723	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4f9b	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4fa2	        0x4883e801	                              sub rax, 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4fa6	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4fad	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4fb4	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4fbb	            0xeb74	                           jmp 0x4005071	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4fbd	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fc4	    0x488d14c50000	                        lea rdx, [rax*8]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fcc	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fd3	        0x488d1c02	                    lea rbx, [rdx + rax]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fd7	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fde	          0x4889c7	                            mov rdi, rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fe1	      0xe8ba1b0000	                    call sym.u_save_line	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fe6	          0x488903	                    mov qword [rbx], rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fe9	          0x488b03	                    mov rax, qword [rbx]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fec	          0x4885c0	                           test rax, rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4fef	            0x750a	                           jne 0x400503b	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_14
0x4ff1	      0xbf00000000	                              mov edi, 0	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4ff6	      0xe800000000	                          call 0x400503b	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4ffb	    0x488b05000000	            mov rax, qword [0x04005042] 	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x5002	          0x488b00	                    mov rax, qword [rax]	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x5005	        0x4883f801	                              cmp rax, 1	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x5009	            0x750a	                           jne 0x4005055	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x500b	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x5015	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_16
0x501c	      0xbe00000000	                              mov esi, 0	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_16
0x5021	          0x4889c7	                            mov rdi, rax	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_16
0x5024	      0xe800000000	                          call 0x4005069	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_16
0x5029	    0x4883adc0fdff	              sub qword [rbp - 0x240], 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x5031	    0x4883add0fdff	              sub qword [rbp - 0x230], 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x5039	    0x4883bdd0fdff	              cmp qword [rbp - 0x230], 0	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x5041	     0xf8976ffffff	                           jns 0x4004ffd	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x5047	            0xeb0b	                           jmp 0x4005094	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x5049	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x5054	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x505c	     0xf84f1000000	                            je 0x4005193	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x5062	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x5069	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x5070	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x507b	      0xe9ac000000	                           jmp 0x400516c	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x5080	    0x83bda4fdffff	              cmp dword [rbp - 0x25c], 0	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x5087	            0x743a	                            je 0x4005103	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x5089	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x5091	            0x7530	                           jne 0x4005103	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x5093	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x509a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x509e	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50a5	        0x48c1e203	                              shl rdx, 3	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50a9	          0x4801d0	                            add rax, rdx	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50ac	          0x488b00	                    mov rax, qword [rax]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50af	      0xba01000000	                              mov edx, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50b4	          0x4889c6	                            mov rsi, rax	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50b7	      0xbf01000000	                              mov edi, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50bc	      0xe800000000	                          call 0x4005101	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50c1	            0xeb35	                           jmp 0x4005138	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x50c3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50ca	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50ce	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50d5	        0x48c1e203	                              shl rdx, 3	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50d9	          0x4801d0	                            add rax, rdx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50dc	          0x488b30	                    mov rsi, qword [rax]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50df	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50e6	      0xb900000000	                              mov ecx, 0	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50eb	      0xba00000000	                              mov edx, 0	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50f0	          0x4889c7	                            mov rdi, rax	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50f3	      0xe800000000	                          call 0x4005138	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x50f8	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x50ff	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x5103	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x510a	        0x48c1e203	                              shl rdx, 3	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x510e	          0x4801d0	                            add rax, rdx	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x5111	          0x488b00	                    mov rax, qword [rax]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x5114	          0x4889c7	                            mov rdi, rax	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x5117	      0xe800000000	                          call 0x400515c	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_19
0x511c	    0x488385d0fdff	              add qword [rbp - 0x230], 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x5124	    0x488385c0fdff	              add qword [rbp - 0x240], 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x512c	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x5133	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x513a	     0xf8c40ffffff	                            jl 0x40050c0	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x5140	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_20
0x5147	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_20
0x514b	          0x4889c7	                            mov rdi, rax	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_20
0x514e	      0xe800000000	                          call 0x4005193	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_20
0x5153	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x515a	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x5161	     0xf84da000000	                            je 0x4005281	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x5167	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x516e	    0x482b85f8fdff	            sub rax, qword [rbp - 0x208]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x5175	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x517c	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x5183	        0x488d3411	                    lea rsi, [rcx + rdx]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x5187	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x518e	        0x488d7a01	                      lea rdi, [rdx + 1]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x5192	          0x4889c1	                            mov rcx, rax	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x5195	      0xbaffffff7f	                     mov edx, 0x7fffffff	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x519a	      0xe800000000	                          call 0x40051df	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_21
0x519f	    0x488b05000000	            mov rax, qword [0x040051e6] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51a6	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51ad	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51b4	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51bb	          0x4801ca	                            add rdx, rcx	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51be	          0x4839d0	                            cmp rax, rdx	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51c1	            0x7e2d	                           jle 0x4005230	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51c3	    0x488b05000000	            mov rax, qword [0x0400520a] 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51ca	    0x488b15000000	            mov rdx, qword [0x04005211] 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51d1	    0x488b8ae01100	          mov rcx, qword [rdx + 0x11e0] 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51d8	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51df	    0x482b95f8fdff	            sub rdx, qword [rbp - 0x208]	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51e6	          0x4801ca	                            add rdx, rcx	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51e9	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x51f0	    0x488b05000000	            mov rax, qword [0x04005237] 	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x51f7	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x51fe	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5205	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x520c	          0x4801ca	                            add rdx, rcx	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x520f	          0x4839d0	                            cmp rax, rdx	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5212	            0x7e2d	                           jle 0x4005281	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5214	    0x488b05000000	            mov rax, qword [0x0400525b] 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x521b	    0x488b15000000	            mov rdx, qword [0x04005262] 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5222	    0x488b8a001200	          mov rcx, qword [rdx + 0x1200] 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5229	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5230	    0x482b95f8fdff	            sub rdx, qword [rbp - 0x208]	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5237	          0x4801ca	                            add rdx, rcx	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x523a	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x5241	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x5248	    0x482b85f8fdff	            sub rax, qword [rbp - 0x208]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x524f	          0x4889c2	                            mov rdx, rax	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x5252	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x5259	        0x488d7801	                      lea rdi, [rax + 1]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x525d	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x5264	          0x4889d1	                            mov rcx, rdx	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x5267	          0x4889c2	                            mov rdx, rax	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x526a	      0xbe00000000	                              mov esi, 0	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x526f	      0xe800000000	                          call 0x40052b4	      2770	undo.c	FUNCTION_41	FOR_1	CALL_22
0x5274	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x527b	        0x488d5001	                      lea rdx, [rax + 1]	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x527f	    0x488b05000000	            mov rax, qword [0x040052c6] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x5286	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x528d	          0x4839c2	                            cmp rdx, rax	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x5290	            0x7d19	                           jge 0x40052eb	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x5292	    0x488b05000000	            mov rax, qword [0x040052d9] 	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x5299	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x52a0	        0x4883c201	                              add rdx, 1	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x52a4	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x52ab	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52b3	            0x7539	                           jne 0x400532e	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52b5	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52bc	        0x488d5001	                      lea rdx, [rax + 1]	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52c0	    0x488b05000000	            mov rax, qword [0x04005307] 	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52c7	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52ce	          0x4839c2	                            cmp rdx, rax	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52d1	            0x7e1b	                           jle 0x400532e	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x52d3	    0x488b05000000	            mov rax, qword [0x0400531a] 	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x52da	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x52e1	        0x4883c201	                              add rdx, 1	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x52e5	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x52ec	            0xeb43	                           jmp 0x4005371	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x52ee	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x52f5	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x52fc	          0x4801c2	                            add rdx, rax	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x52ff	    0x488b05000000	            mov rax, qword [0x04005346] 	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x5306	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x530d	          0x4839c2	                            cmp rdx, rax	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x5310	            0x7e1f	                           jle 0x4005371	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x5312	    0x488b05000000	            mov rax, qword [0x04005359] 	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x5319	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x5320	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x5327	          0x4801ca	                            add rdx, rcx	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x532a	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x5331	    0x488b15000000	            mov rdx, qword [0x04005378] 	      2780	undo.c	FUNCTION_41	FOR_1
0x5338	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2780	undo.c	FUNCTION_41	FOR_1
0x533f	          0x4801d0	                            add rax, rdx	      2780	undo.c	FUNCTION_41	FOR_1
0x5342	    0x488905000000	            mov qword [0x04005389], rax 	      2780	undo.c	FUNCTION_41	FOR_1
0x5349	    0x488b15000000	            mov rdx, qword [0x04005390] 	      2781	undo.c	FUNCTION_41	FOR_1
0x5350	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2781	undo.c	FUNCTION_41	FOR_1
0x5357	          0x4801d0	                            add rax, rdx	      2781	undo.c	FUNCTION_41	FOR_1
0x535a	    0x488905000000	            mov qword [0x040053a1], rax 	      2781	undo.c	FUNCTION_41	FOR_1
0x5361	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2782	undo.c	FUNCTION_41	FOR_1
0x5368	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2782	undo.c	FUNCTION_41	FOR_1
0x536f	        0x48895028	             mov qword [rax + 0x28], rdx	      2782	undo.c	FUNCTION_41	FOR_1
0x5373	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2783	undo.c	FUNCTION_41	FOR_1
0x537a	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      2783	undo.c	FUNCTION_41	FOR_1
0x5381	        0x48895020	             mov qword [rax + 0x20], rdx	      2783	undo.c	FUNCTION_41	FOR_1
0x5385	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2784	undo.c	FUNCTION_41	FOR_1
0x538c	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2784	undo.c	FUNCTION_41	FOR_1
0x5393	          0x4801d0	                            add rax, rdx	      2784	undo.c	FUNCTION_41	FOR_1
0x5396	        0x488d5001	                      lea rdx, [rax + 1]	      2784	undo.c	FUNCTION_41	FOR_1
0x539a	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2784	undo.c	FUNCTION_41	FOR_1
0x53a1	        0x48895010	             mov qword [rax + 0x10], rdx	      2784	undo.c	FUNCTION_41	FOR_1
0x53a5	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2789	undo.c	FUNCTION_41	FOR_1
0x53ac	          0x488b00	                    mov rax, qword [rax]	      2789	undo.c	FUNCTION_41	FOR_1
0x53af	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      2789	undo.c	FUNCTION_41	FOR_1
0x53b6	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2790	undo.c	FUNCTION_41	FOR_1
0x53bd	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2790	undo.c	FUNCTION_41	FOR_1
0x53c4	          0x488910	                    mov qword [rax], rdx	      2790	undo.c	FUNCTION_41	FOR_1
0x53c7	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2791	undo.c	FUNCTION_41	FOR_1
0x53ce	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      2791	undo.c	FUNCTION_41	FOR_1
0x53d5	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      2654	undo.c	FUNCTION_41	FOR_1
0x53dc	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2654	undo.c	FUNCTION_41	FOR_1
0x53e3	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      2654	undo.c	FUNCTION_41	FOR_1
0x53eb	     0xf85a0f8ffff	                           jne 0x4004cd1	      2654	undo.c	FUNCTION_41	FOR_1
0x53f1	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2794	undo.c	FUNCTION_41
0x53f8	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2794	undo.c	FUNCTION_41
0x53ff	        0x48895030	             mov qword [rax + 0x30], rdx	      2794	undo.c	FUNCTION_41
0x5403	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2795	undo.c	FUNCTION_41
0x540a	    0x8b95acfdffff	            mov edx, dword [rbp - 0x254]	      2795	undo.c	FUNCTION_41
0x5410	          0x895058	             mov dword [rax + 0x58], edx	      2795	undo.c	FUNCTION_41
0x5413	    0x8b85a8fdffff	            mov eax, dword [rbp - 0x258]	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x5419	          0x83e002	                              and eax, 2	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x541c	            0x85c0	                           test eax, eax	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x541e	            0x7438	                            je 0x4005498	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x5420	    0x488b05000000	            mov rax, qword [0x04005467] 	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x5427	          0x488b00	                    mov rax, qword [rax]	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x542a	        0x4883f801	                              cmp rax, 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x542e	            0x7528	                           jne 0x4005498	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x5430	      0xbf01000000	                              mov edi, 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x5435	      0xe800000000	                          call 0x400547a	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x543a	           0xfb600	                   movzx eax, byte [rax]	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x543d	            0x84c0	                             test al, al	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x543f	            0x7517	                           jne 0x4005498	      2796	undo.c	FUNCTION_41	IF_20	CALL_23
0x5441	    0x488b05000000	            mov rax, qword [0x04005488] 	      2797	undo.c	FUNCTION_41	IF_20
0x5448	    0x488b15000000	            mov rdx, qword [0x0400548f] 	      2797	undo.c	FUNCTION_41	IF_20
0x544f	          0x8b5210	            mov edx, dword [rdx + 0x10] 	      2797	undo.c	FUNCTION_41	IF_20
0x5452	          0x83ca01	                               or edx, 1	      2797	undo.c	FUNCTION_41	IF_20
0x5455	          0x895010	             mov dword [rax + 0x10], edx	      2797	undo.c	FUNCTION_41	IF_20
0x5458	    0x8b85a8fdffff	            mov eax, dword [rbp - 0x258]	      2798	undo.c	FUNCTION_41	IF_21
0x545e	          0x83e001	                              and eax, 1	      2798	undo.c	FUNCTION_41	IF_21
0x5461	            0x85c0	                           test eax, eax	      2798	undo.c	FUNCTION_41	IF_21
0x5463	            0x7407	                            je 0x40054ac	      2798	undo.c	FUNCTION_41	IF_21
0x5465	      0xe800000000	                          call 0x40054aa	      2799	undo.c	FUNCTION_41	CALL_24
0x546a	            0xeb27	                           jmp 0x40054d3	      2799	undo.c	FUNCTION_41	CALL_24
0x546c	    0x488b05000000	            mov rax, qword [0x040054b3] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_25
0x5473	          0x4889c7	                            mov rdi, rax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_25
0x5476	      0xe800000000	                          call 0x40054bb	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_25
0x547b	            0x85c0	                           test eax, eax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_25
0x547d	            0x7514	                           jne 0x40054d3	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_25
0x547f	    0x488b05000000	            mov rax, qword [0x040054c6] 	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x5486	      0xbe00000000	                              mov esi, 0	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x548b	          0x4889c7	                            mov rdi, rax	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x548e	      0xe800000000	                          call 0x40054d3	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x5493	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      2810	undo.c	FUNCTION_41	FOR_5
0x549e	      0xe9ed000000	                           jmp 0x40055d0	      2810	undo.c	FUNCTION_41	FOR_5
0x54a3	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54aa	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54b1	        0x4883c206	                              add rdx, 6	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54b5	        0x48c1e204	                              shl rdx, 4	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54b9	          0x4801d0	                            add rax, rdx	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54bc	          0x488b00	                    mov rax, qword [rax]	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54bf	          0x4885c0	                           test rax, rax	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54c2	            0x7442	                            je 0x4005546	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x54c4	    0x488b05000000	            mov rax, qword [0x0400550b] 	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54cb	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54d2	        0x4883c215	                           add rdx, 0x15	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54d6	        0x48c1e204	                              shl rdx, 4	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54da	        0x488d0c10	                    lea rcx, [rax + rdx]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54de	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54e5	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54ec	        0x4883c206	                              add rdx, 6	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54f0	        0x48c1e204	                              shl rdx, 4	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54f4	          0x4801d0	                            add rax, rdx	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54f7	        0x488b5008	                mov rdx, qword [rax + 8]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54fb	          0x488b00	                    mov rax, qword [rax]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x54fe	        0x48894108	                mov qword [rcx + 8], rax	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x5502	        0x48895110	             mov qword [rcx + 0x10], rdx	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x5506	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x550d	        0x48c1e004	                              shl rax, 4	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x5511	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x5515	          0x4801d8	                            add rax, rbx	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x5518	    0x482db0010000	                          sub rax, 0x1b0	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x551e	          0x488b00	                    mov rax, qword [rax]	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x5521	          0x4885c0	                           test rax, rax	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x5524	            0x7442	                            je 0x40055a8	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x5526	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x552d	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5534	        0x4883c206	                              add rdx, 6	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5538	        0x48c1e204	                              shl rdx, 4	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x553c	        0x488d0c10	                    lea rcx, [rax + rdx]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5540	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5547	        0x48c1e004	                              shl rax, 4	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x554b	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x554f	          0x4801d8	                            add rax, rbx	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5552	    0x482db0010000	                          sub rax, 0x1b0	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5558	        0x488b5008	                mov rdx, qword [rax + 8]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x555c	          0x488b00	                    mov rax, qword [rax]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x555f	          0x488901	                    mov qword [rcx], rax	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5562	        0x48895108	                mov qword [rcx + 8], rdx	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5566	            0xeb20	                           jmp 0x40055c8	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x5568	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x556f	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x5576	        0x4883c206	                              add rdx, 6	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x557a	        0x48c1e204	                              shl rdx, 4	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x557e	          0x4801d0	                            add rax, rdx	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x5581	    0x48c700000000	                      mov qword [rax], 0	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x5588	    0x488385d0fdff	              add qword [rbp - 0x230], 1	      2810	undo.c	FUNCTION_41	FOR_5
0x5590	    0x4883bdd0fdff	          cmp qword [rbp - 0x230], 0x19 	      2810	undo.c	FUNCTION_41	FOR_5
0x5598	     0xf8e05ffffff	                           jle 0x40054e3	      2810	undo.c	FUNCTION_41	FOR_5
0x559e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55a5	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55ac	          0x4885c0	                           test rax, rax	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55af	     0xf84a1000000	                            je 0x4005696	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55b5	    0x488b05000000	            mov rax, qword [0x040055fc] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55bc	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55c3	    0x488b8a000200	           mov rcx, qword [rdx + 0x200] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55ca	    0x488988f80200	            mov qword [rax + 0x2f8], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55d1	    0x488b8a080200	           mov rcx, qword [rdx + 0x208] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55d8	    0x488988000300	            mov qword [rax + 0x300], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55df	    0x488b8a100200	           mov rcx, qword [rdx + 0x210] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55e6	    0x488988080300	            mov qword [rax + 0x308], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55ed	    0x488b8a180200	           mov rcx, qword [rdx + 0x218] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55f4	    0x488988100300	            mov qword [rax + 0x310], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x55fb	    0x488b92200200	           mov rdx, qword [rdx + 0x220] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5602	    0x488990180300	            mov qword [rax + 0x318], rdx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5609	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5610	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5617	    0x488990000200	            mov qword [rax + 0x200], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x561e	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5625	    0x488990080200	            mov qword [rax + 0x208], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x562c	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5633	    0x488990100200	            mov qword [rax + 0x210], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x563a	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5641	    0x488990180200	            mov qword [rax + 0x218], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5648	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x564f	    0x488990200200	            mov qword [rax + 0x220], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x5656	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2830	undo.c	FUNCTION_41	IF_26
0x565d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2830	undo.c	FUNCTION_41	IF_26
0x5661	        0x488d5001	                      lea rdx, [rax + 1]	      2830	undo.c	FUNCTION_41	IF_26
0x5665	    0x488b05000000	            mov rax, qword [0x040056ac] 	      2830	undo.c	FUNCTION_41	IF_26
0x566c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2830	undo.c	FUNCTION_41	IF_26
0x5670	          0x4839c2	                            cmp rdx, rax	      2830	undo.c	FUNCTION_41	IF_26
0x5673	            0x7524	                           jne 0x40056d9	      2830	undo.c	FUNCTION_41	IF_26
0x5675	    0x488b05000000	            mov rax, qword [0x040056bc] 	      2831	undo.c	FUNCTION_41	IF_26
0x567c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2831	undo.c	FUNCTION_41	IF_26
0x5680	        0x4883f801	                              cmp rax, 1	      2831	undo.c	FUNCTION_41	IF_26
0x5684	            0x7e13	                           jle 0x40056d9	      2831	undo.c	FUNCTION_41	IF_26
0x5686	    0x488b05000000	            mov rax, qword [0x040056cd] 	      2832	undo.c	FUNCTION_41	IF_26
0x568d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2832	undo.c	FUNCTION_41	IF_26
0x5691	        0x4883ea01	                              sub rdx, 1	      2832	undo.c	FUNCTION_41	IF_26
0x5695	        0x48895038	             mov qword [rax + 0x38], rdx	      2832	undo.c	FUNCTION_41	IF_26
0x5699	    0x488b05000000	            mov rax, qword [0x040056e0] 	      2833	undo.c	FUNCTION_41	IF_27
0x56a0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2833	undo.c	FUNCTION_41	IF_27
0x56a4	    0x488b05000000	            mov rax, qword [0x040056eb] 	      2833	undo.c	FUNCTION_41	IF_27
0x56ab	          0x488b00	                    mov rax, qword [rax]	      2833	undo.c	FUNCTION_41	IF_27
0x56ae	          0x4839c2	                            cmp rdx, rax	      2833	undo.c	FUNCTION_41	IF_27
0x56b1	            0x7f78	                            jg 0x400576b	      2833	undo.c	FUNCTION_41	IF_27
0x56b3	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x56ba	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x56be	    0x488b05000000	            mov rax, qword [0x04005705] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x56c5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x56c9	          0x4839c2	                            cmp rdx, rax	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x56cc	            0x7551	                           jne 0x400575f	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x56ce	    0x488b05000000	            mov rax, qword [0x04005715] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x56d5	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x56dc	          0x8b5248	            mov edx, dword [rdx + 0x48] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x56df	          0x895040	             mov dword [rax + 0x40], edx	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x56e2	      0xe800000000	                          call 0x4005727	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_27
0x56e7	            0x85c0	                           test eax, eax	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_27
0x56e9	            0x7424	                            je 0x400574f	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_27
0x56eb	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_27
0x56f2	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_27
0x56f6	          0x4885c0	                           test rax, rax	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_27
0x56f9	            0x7814	                            js 0x400574f	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_27
0x56fb	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_28
0x5702	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_28
0x5706	            0x89c7	                            mov edi, eax	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_28
0x5708	      0xe800000000	                          call 0x400574d	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_28
0x570d	            0xeb38	                           jmp 0x4005787	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_28
0x570f	    0x488b05000000	            mov rax, qword [0x04005756] 	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x5716	    0xc74044000000	               mov dword [rax + 0x44], 0	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x571d	            0xeb28	                           jmp 0x4005787	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x571f	      0xbf06000000	                              mov edi, 6	      2846	undo.c	FUNCTION_41	IF_27	CALL_29
0x5724	      0xe800000000	                          call 0x4005769	      2846	undo.c	FUNCTION_41	IF_27	CALL_29
0x5729	            0xeb1c	                           jmp 0x4005787	      2846	undo.c	FUNCTION_41	IF_27	CALL_29
0x572b	    0x488b05000000	            mov rax, qword [0x04005772] 	      2854	undo.c	FUNCTION_41	ELSE_10
0x5732	    0xc74040000000	               mov dword [rax + 0x40], 0	      2854	undo.c	FUNCTION_41	ELSE_10
0x5739	    0x488b05000000	            mov rax, qword [0x04005780] 	      2856	undo.c	FUNCTION_41	ELSE_10
0x5740	    0xc74044000000	               mov dword [rax + 0x44], 0	      2856	undo.c	FUNCTION_41	ELSE_10
0x5747	      0xe800000000	                          call 0x400578c	      2861	undo.c	FUNCTION_41	CALL_30
0x574c	    0x488b05000000	            mov rax, qword [0x04005793] 	      2864	undo.c	FUNCTION_41
0x5753	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2864	undo.c	FUNCTION_41
0x575a	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2864	undo.c	FUNCTION_41
0x575e	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2864	undo.c	FUNCTION_41
0x5765	    0x83bd9cfdffff	              cmp dword [rbp - 0x264], 0	      2865	undo.c	FUNCTION_41	IF_30
0x576c	            0x743f	                            je 0x40057ed	      2865	undo.c	FUNCTION_41	IF_30
0x576e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x5775	          0x488b00	                    mov rax, qword [rax]	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x5778	          0x4885c0	                           test rax, rax	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x577b	            0x741e	                            je 0x40057db	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x577d	    0x488b05000000	            mov rax, qword [0x040057c4] 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x5784	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x578b	          0x488b12	                    mov rdx, qword [rdx]	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x578e	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x5792	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x5799	            0xeb12	                           jmp 0x40057ed	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x579b	    0x488b05000000	            mov rax, qword [0x040057e2] 	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x57a2	    0x48c780481200	            mov qword [rax + 0x1248], 0 	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x57ad	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x57b4	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x57bb	          0x4885c0	                           test rax, rax	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x57be	            0x7447	                            je 0x4005847	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x57c0	    0x83bd9cfdffff	              cmp dword [rbp - 0x264], 0	      2878	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57c7	            0x7422	                            je 0x400582b	      2878	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57c9	    0x488b05000000	            mov rax, qword [0x04005810] 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57d0	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57d7	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57de	        0x4883ea01	                              sub rdx, 1	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57e2	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57e9	            0xeb1c	                           jmp 0x4005847	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x57eb	    0x488b05000000	            mov rax, qword [0x04005832] 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x57f2	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x57f9	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x5800	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x5807	    0x488b05000000	            mov rax, qword [0x0400584e] 	      2886	undo.c	FUNCTION_41
0x580e	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2886	undo.c	FUNCTION_41
0x5815	    0x488b92280200	           mov rdx, qword [rdx + 0x228] 	      2886	undo.c	FUNCTION_41
0x581c	    0x488990501200	          mov qword [rax + 0x1250], rdx 	      2886	undo.c	FUNCTION_41
0x5823	      0xe800000000	                          call 0x4005868	      2888	undo.c	FUNCTION_41	CALL_31
0x5828	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2892	undo.c	FUNCTION_41
0x582c	    0x644833042528	                xor rax, qword fs:[0x28]	      2892	undo.c	FUNCTION_41
0x5835	            0x7405	                            je 0x400587c	      2892	undo.c	FUNCTION_41
0x5837	      0xe800000000	                          call 0x400587c	      2892	undo.c	FUNCTION_41
0x583c	    0x4881c4680200	                          add rsp, 0x268	      2892	undo.c	FUNCTION_41
0x5843	              0x5b	                                 pop rbx	      2892	undo.c	FUNCTION_41
0x5844	              0x5d	                                 pop rbp	      2892	undo.c	FUNCTION_41
0x5845	              0xc3	                                     ret	      2892	undo.c	FUNCTION_41
unserialize_uhp	FOR,2:ELSE,1:functions,0:IF,6:CALL,25:DO,0:WHILE,2:SWITCH,1	194
0x1fb3	              0x55	                                push rbp	      1278	undo.c	FUNCTION_28
0x1fb4	          0x4889e5	                            mov rbp, rsp	      1278	undo.c	FUNCTION_28
0x1fb7	        0x4883ec50	                           sub rsp, 0x50	      1278	undo.c	FUNCTION_28
0x1fbb	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1278	undo.c	FUNCTION_28
0x1fbf	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1278	undo.c	FUNCTION_28
0x1fc3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1278	undo.c	FUNCTION_28
0x1fcc	        0x488945f8	                mov qword [rbp - 8], rax	      1278	undo.c	FUNCTION_28
0x1fd0	            0x31c0	                            xor eax, eax	      1278	undo.c	FUNCTION_28
0x1fd2	      0xbe00000000	                              mov esi, 0	      1285	undo.c	FUNCTION_28	CALL_1
0x1fd7	      0xbf38020000	                          mov edi, 0x238	      1285	undo.c	FUNCTION_28	CALL_1
0x1fdc	      0xe800000000	                          call 0x4002021	      1285	undo.c	FUNCTION_28	CALL_1
0x1fe1	        0x488945e8	             mov qword [rbp - 0x18], rax	      1285	undo.c	FUNCTION_28	CALL_1
0x1fe5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1286	undo.c	FUNCTION_28	IF_1
0x1fea	            0x750a	                           jne 0x4002036	      1286	undo.c	FUNCTION_28	IF_1
0x1fec	      0xb800000000	                              mov eax, 0	      1287	undo.c	FUNCTION_28	IF_1
0x1ff1	      0xe991020000	                           jmp 0x40022c7	      1287	undo.c	FUNCTION_28	IF_1
0x1ff6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1288	undo.c	FUNCTION_28	CALL_2
0x1ffa	      0xba38020000	                          mov edx, 0x238	      1288	undo.c	FUNCTION_28	CALL_2
0x1fff	      0xbe00000000	                              mov esi, 0	      1288	undo.c	FUNCTION_28	CALL_2
0x2004	          0x4889c7	                            mov rdi, rax	      1288	undo.c	FUNCTION_28	CALL_2
0x2007	      0xe800000000	                          call 0x400204c	      1288	undo.c	FUNCTION_28	CALL_2
0x200c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1292	undo.c	FUNCTION_28	CALL_3
0x2010	          0x4889c7	                            mov rdi, rax	      1292	undo.c	FUNCTION_28	CALL_3
0x2013	      0xe85ff4ffff	                   call sym.undo_read_4c	      1292	undo.c	FUNCTION_28	CALL_3
0x2018	          0x4863d0	                         movsxd rdx, eax	      1292	undo.c	FUNCTION_28	CALL_3
0x201b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1292	undo.c	FUNCTION_28	CALL_3
0x201f	          0x488910	                    mov qword [rax], rdx	      1292	undo.c	FUNCTION_28	CALL_3
0x2022	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1293	undo.c	FUNCTION_28	CALL_4
0x2026	          0x4889c7	                            mov rdi, rax	      1293	undo.c	FUNCTION_28	CALL_4
0x2029	      0xe849f4ffff	                   call sym.undo_read_4c	      1293	undo.c	FUNCTION_28	CALL_4
0x202e	          0x4863d0	                         movsxd rdx, eax	      1293	undo.c	FUNCTION_28	CALL_4
0x2031	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1293	undo.c	FUNCTION_28	CALL_4
0x2035	        0x48895008	                mov qword [rax + 8], rdx	      1293	undo.c	FUNCTION_28	CALL_4
0x2039	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1294	undo.c	FUNCTION_28	CALL_5
0x203d	          0x4889c7	                            mov rdi, rax	      1294	undo.c	FUNCTION_28	CALL_5
0x2040	      0xe832f4ffff	                   call sym.undo_read_4c	      1294	undo.c	FUNCTION_28	CALL_5
0x2045	          0x4863d0	                         movsxd rdx, eax	      1294	undo.c	FUNCTION_28	CALL_5
0x2048	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1294	undo.c	FUNCTION_28	CALL_5
0x204c	        0x48895010	             mov qword [rax + 0x10], rdx	      1294	undo.c	FUNCTION_28	CALL_5
0x2050	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1295	undo.c	FUNCTION_28	CALL_6
0x2054	          0x4889c7	                            mov rdi, rax	      1295	undo.c	FUNCTION_28	CALL_6
0x2057	      0xe81bf4ffff	                   call sym.undo_read_4c	      1295	undo.c	FUNCTION_28	CALL_6
0x205c	          0x4863d0	                         movsxd rdx, eax	      1295	undo.c	FUNCTION_28	CALL_6
0x205f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1295	undo.c	FUNCTION_28	CALL_6
0x2063	        0x48895018	             mov qword [rax + 0x18], rdx	      1295	undo.c	FUNCTION_28	CALL_6
0x2067	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1296	undo.c	FUNCTION_28	CALL_7
0x206b	          0x4889c7	                            mov rdi, rax	      1296	undo.c	FUNCTION_28	CALL_7
0x206e	      0xe804f4ffff	                   call sym.undo_read_4c	      1296	undo.c	FUNCTION_28	CALL_7
0x2073	          0x4863d0	                         movsxd rdx, eax	      1296	undo.c	FUNCTION_28	CALL_7
0x2076	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1296	undo.c	FUNCTION_28	CALL_7
0x207a	        0x48895020	             mov qword [rax + 0x20], rdx	      1296	undo.c	FUNCTION_28	CALL_7
0x207e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1297	undo.c	FUNCTION_28	IF_2
0x2082	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1297	undo.c	FUNCTION_28	IF_2
0x2086	          0x4885c0	                           test rax, rax	      1297	undo.c	FUNCTION_28	IF_2
0x2089	            0x7f27	                            jg 0x40020f2	      1297	undo.c	FUNCTION_28	IF_2
0x208b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1299	undo.c	FUNCTION_28	IF_2	CALL_8
0x208f	          0x4889c6	                            mov rsi, rax	      1299	undo.c	FUNCTION_28	IF_2	CALL_8
0x2092	      0xbf00000000	                              mov edi, 0	      1299	undo.c	FUNCTION_28	IF_2	CALL_8
0x2097	      0xe860efffff	               call sym.corruption_error	      1299	undo.c	FUNCTION_28	IF_2	CALL_8
0x209c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1300	undo.c	FUNCTION_28	IF_2	CALL_9
0x20a0	          0x4889c7	                            mov rdi, rax	      1300	undo.c	FUNCTION_28	IF_2	CALL_9
0x20a3	      0xe800000000	                          call 0x40020e8	      1300	undo.c	FUNCTION_28	IF_2	CALL_9
0x20a8	      0xb800000000	                              mov eax, 0	      1301	undo.c	FUNCTION_28	IF_2
0x20ad	      0xe9d5010000	                           jmp 0x40022c7	      1301	undo.c	FUNCTION_28	IF_2
0x20b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1303	undo.c	FUNCTION_28	CALL_10
0x20b6	        0x488d5040	                   lea rdx, [rax + 0x40]	      1303	undo.c	FUNCTION_28	CALL_10
0x20ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1303	undo.c	FUNCTION_28	CALL_10
0x20be	          0x4889d6	                            mov rsi, rdx	      1303	undo.c	FUNCTION_28	CALL_10
0x20c1	          0x4889c7	                            mov rdi, rax	      1303	undo.c	FUNCTION_28	CALL_10
0x20c4	      0xe85c050000	                call sym.unserialize_pos	      1303	undo.c	FUNCTION_28	CALL_10
0x20c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1305	undo.c	FUNCTION_28	CALL_11
0x20cd	          0x4889c7	                            mov rdi, rax	      1305	undo.c	FUNCTION_28	CALL_11
0x20d0	      0xe8a2f3ffff	                   call sym.undo_read_4c	      1305	undo.c	FUNCTION_28	CALL_11
0x20d5	          0x4863d0	                         movsxd rdx, eax	      1305	undo.c	FUNCTION_28	CALL_11
0x20d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1305	undo.c	FUNCTION_28	CALL_11
0x20dc	        0x48895050	             mov qword [rax + 0x50], rdx	      1305	undo.c	FUNCTION_28	CALL_11
0x20e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1309	undo.c	FUNCTION_28	CALL_13
0x20e4	          0x4889c7	                            mov rdi, rax	      1309	undo.c	FUNCTION_28	CALL_13
0x20e7	      0xe826f4ffff	                   call sym.undo_read_2c	      1309	undo.c	FUNCTION_28	CALL_13
0x20ec	            0x89c2	                            mov edx, eax	      1309	undo.c	FUNCTION_28	CALL_13
0x20ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1309	undo.c	FUNCTION_28	CALL_13
0x20f2	          0x895058	             mov dword [rax + 0x58], edx	      1309	undo.c	FUNCTION_28	CALL_13
0x20f5	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1310	undo.c	FUNCTION_28	FOR_1
0x20fc	            0xeb2a	                           jmp 0x4002168	      1310	undo.c	FUNCTION_28	FOR_1
0x20fe	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1311	undo.c	FUNCTION_28	CALL_14
0x2101	            0x4898	                                    cdqe	      1311	undo.c	FUNCTION_28	CALL_14
0x2103	        0x4883c006	                              add rax, 6	      1311	undo.c	FUNCTION_28	CALL_14
0x2107	        0x48c1e004	                              shl rax, 4	      1311	undo.c	FUNCTION_28	CALL_14
0x210b	          0x4889c2	                            mov rdx, rax	      1311	undo.c	FUNCTION_28	CALL_14
0x210e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	undo.c	FUNCTION_28	CALL_14
0x2112	          0x4801c2	                            add rdx, rax	      1311	undo.c	FUNCTION_28	CALL_14
0x2115	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1311	undo.c	FUNCTION_28	CALL_14
0x2119	          0x4889d6	                            mov rsi, rdx	      1311	undo.c	FUNCTION_28	CALL_14
0x211c	          0x4889c7	                            mov rdi, rax	      1311	undo.c	FUNCTION_28	CALL_14
0x211f	      0xe801050000	                call sym.unserialize_pos	      1311	undo.c	FUNCTION_28	CALL_14
0x2124	        0x8345d001	               add dword [rbp - 0x30], 1	      1310	undo.c	FUNCTION_28	FOR_1
0x2128	        0x837dd019	           cmp dword [rbp - 0x30], 0x19 	      1310	undo.c	FUNCTION_28	FOR_1
0x212c	            0x7ed0	                           jle 0x400213e	      1310	undo.c	FUNCTION_28	FOR_1
0x212e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1312	undo.c	FUNCTION_28	CALL_15
0x2132	    0x488d90000200	                  lea rdx, [rax + 0x200]	      1312	undo.c	FUNCTION_28	CALL_15
0x2139	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1312	undo.c	FUNCTION_28	CALL_15
0x213d	          0x4889d6	                            mov rsi, rdx	      1312	undo.c	FUNCTION_28	CALL_15
0x2140	          0x4889c7	                            mov rdi, rax	      1312	undo.c	FUNCTION_28	CALL_15
0x2143	      0xe8f7050000	         call sym.unserialize_visualinfo	      1312	undo.c	FUNCTION_28	CALL_15
0x2148	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1313	undo.c	FUNCTION_28	CALL_16
0x214c	          0x4889c7	                            mov rdi, rax	      1313	undo.c	FUNCTION_28	CALL_16
0x214f	      0xe8b0f4ffff	                 call sym.undo_read_time	      1313	undo.c	FUNCTION_28	CALL_16
0x2154	          0x4889c2	                            mov rdx, rax	      1313	undo.c	FUNCTION_28	CALL_16
0x2157	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1313	undo.c	FUNCTION_28	CALL_16
0x215b	    0x488990280200	            mov qword [rax + 0x228], rdx	      1313	undo.c	FUNCTION_28	CALL_16
0x2162	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1318	undo.c	FUNCTION_28	FOR_2	CALL_17
0x2166	          0x4889c7	                            mov rdi, rax	      1318	undo.c	FUNCTION_28	FOR_2	CALL_17
0x2169	      0xe827f4ffff	                 call sym.undo_read_byte	      1318	undo.c	FUNCTION_28	FOR_2	CALL_17
0x216e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1318	undo.c	FUNCTION_28	FOR_2	CALL_17
0x2171	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1321	undo.c	FUNCTION_28	FOR_2	IF_3
0x2175	            0x744d	                            je 0x4002204	      1321	undo.c	FUNCTION_28	FOR_2	IF_3
0x2177	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1323	undo.c	FUNCTION_28	FOR_2	CALL_18
0x217b	          0x4889c7	                            mov rdi, rax	      1323	undo.c	FUNCTION_28	FOR_2	CALL_18
0x217e	      0xe812f4ffff	                 call sym.undo_read_byte	      1323	undo.c	FUNCTION_28	FOR_2	CALL_18
0x2183	          0x8945d8	             mov dword [rbp - 0x28], eax	      1323	undo.c	FUNCTION_28	FOR_2	CALL_18
0x2186	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1324	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x2189	          0x83f801	                              cmp eax, 1	      1324	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x218c	            0x751c	                           jne 0x40021ea	      1324	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x218e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x2192	          0x4889c7	                            mov rdi, rax	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x2195	      0xe8ddf2ffff	                   call sym.undo_read_4c	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x219a	          0x4863d0	                         movsxd rdx, eax	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x219d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x21a1	    0x488990300200	            mov qword [rax + 0x230], rdx	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x21a8	            0xeb18	                           jmp 0x4002202	      1328	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x21aa	            0xeb0c	                           jmp 0x40021f8	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x21ac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1332	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_20
0x21b0	          0x4889c7	                            mov rdi, rax	      1332	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_20
0x21b3	      0xe8ddf3ffff	                 call sym.undo_read_byte	      1332	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_20
0x21b8	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x21bc	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x21c0	            0x79ea	                           jns 0x40021ec	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x21c2	            0xeb9e	                           jmp 0x40021a2	      1334	undo.c	FUNCTION_28	FOR_2
0x21c4	              0x90	                                     nop	      1322	undo.c	FUNCTION_28	FOR_2	IF_3
0x21c5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1337	undo.c	FUNCTION_28
0x21cd	            0xeb6b	                           jmp 0x400227a	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x21cf	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1340	undo.c	FUNCTION_28	WHILE_2
0x21d6	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_22
0x21da	        0x488d4dcc	                   lea rcx, [rbp - 0x34]	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_22
0x21de	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_22
0x21e2	          0x4889ce	                            mov rsi, rcx	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_22
0x21e5	          0x4889c7	                            mov rdi, rax	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_22
0x21e8	      0xe8ee010000	                call sym.unserialize_uep	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_22
0x21ed	        0x488945f0	             mov qword [rbp - 0x10], rax	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_22
0x21f1	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1342	undo.c	FUNCTION_28	WHILE_2	IF_4
0x21f6	            0x750e	                           jne 0x4002246	      1342	undo.c	FUNCTION_28	WHILE_2	IF_4
0x21f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x21fc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x2200	        0x48895030	             mov qword [rax + 0x30], rdx	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x2204	            0xeb0b	                           jmp 0x4002251	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x2206	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1345	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x220a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1345	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x220e	          0x488910	                    mov qword [rax], rdx	      1345	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x2211	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1346	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x2215	        0x488945e0	             mov qword [rbp - 0x20], rax	      1346	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x2219	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x221e	            0x7407	                            je 0x4002267	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x2220	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x2223	            0x85c0	                           test eax, eax	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x2225	            0x7413	                            je 0x400227a	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x2227	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1349	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5	CALL_23
0x222b	          0x4889c7	                            mov rdi, rax	      1349	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5	CALL_23
0x222e	      0xe8fcedffff	                     call sym.u_free_uhp	      1349	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5	CALL_23
0x2233	      0xb800000000	                              mov eax, 0	      1350	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x2238	            0xeb4d	                           jmp 0x40022c7	      1350	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x223a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x223e	          0x4889c7	                            mov rdi, rax	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x2241	      0xe8ccf2ffff	                   call sym.undo_read_2c	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x2246	          0x8945dc	             mov dword [rbp - 0x24], eax	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x2249	    0x817ddc18f500	         cmp dword [rbp - 0x24], 0xf518 	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x2250	     0xf8479ffffff	                            je 0x400220f	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x2256	    0x817ddc813500	         cmp dword [rbp - 0x24], 0x3581 	      1353	undo.c	FUNCTION_28	IF_6
0x225d	            0x7424	                            je 0x40022c3	      1353	undo.c	FUNCTION_28	IF_6
0x225f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1355	undo.c	FUNCTION_28	IF_6	CALL_24
0x2263	          0x4889c6	                            mov rsi, rax	      1355	undo.c	FUNCTION_28	IF_6	CALL_24
0x2266	      0xbf00000000	                              mov edi, 0	      1355	undo.c	FUNCTION_28	IF_6	CALL_24
0x226b	      0xe88cedffff	               call sym.corruption_error	      1355	undo.c	FUNCTION_28	IF_6	CALL_24
0x2270	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	undo.c	FUNCTION_28	IF_6	CALL_25
0x2274	          0x4889c7	                            mov rdi, rax	      1356	undo.c	FUNCTION_28	IF_6	CALL_25
0x2277	      0xe8b3edffff	                     call sym.u_free_uhp	      1356	undo.c	FUNCTION_28	IF_6	CALL_25
0x227c	      0xb800000000	                              mov eax, 0	      1357	undo.c	FUNCTION_28	IF_6
0x2281	            0xeb04	                           jmp 0x40022c7	      1357	undo.c	FUNCTION_28	IF_6
0x2283	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1360	undo.c	FUNCTION_28
0x2287	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1361	undo.c	FUNCTION_28
0x228b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1361	undo.c	FUNCTION_28
0x2294	            0x7405	                            je 0x40022db	      1361	undo.c	FUNCTION_28
0x2296	      0xe800000000	                          call 0x40022db	      1361	undo.c	FUNCTION_28
0x229b	              0xc9	                                   leave	      1361	undo.c	FUNCTION_28
0x229c	              0xc3	                                     ret	      1361	undo.c	FUNCTION_28
u_find_first_changed	FOR,1:ELSE,0:functions,0:IF,4:CALL,4:DO,0:WHILE,0:SWITCH,0	86
0x614f	              0x55	                                push rbp	      3172	undo.c	FUNCTION_48
0x6150	          0x4889e5	                            mov rbp, rsp	      3172	undo.c	FUNCTION_48
0x6153	              0x53	                                push rbx	      3172	undo.c	FUNCTION_48
0x6154	        0x4883ec28	                           sub rsp, 0x28	      3172	undo.c	FUNCTION_48
0x6158	    0x488b05000000	            mov rax, qword [0x0400619f] 	      3173	undo.c	FUNCTION_48
0x615f	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3173	undo.c	FUNCTION_48
0x6166	        0x488945e0	             mov qword [rbp - 0x20], rax	      3173	undo.c	FUNCTION_48
0x616a	    0x488b05000000	            mov rax, qword [0x040061b1] 	      3177	undo.c	FUNCTION_48	IF_1
0x6171	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3177	undo.c	FUNCTION_48	IF_1
0x6178	          0x4885c0	                           test rax, rax	      3177	undo.c	FUNCTION_48	IF_1
0x617b	     0xf8525010000	                           jne 0x40062e6	      3177	undo.c	FUNCTION_48	IF_1
0x6181	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3177	undo.c	FUNCTION_48	IF_1
0x6186	     0xf841a010000	                            je 0x40062e6	      3177	undo.c	FUNCTION_48	IF_1
0x618c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3181	undo.c	FUNCTION_48
0x6190	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3181	undo.c	FUNCTION_48
0x6194	        0x488945e8	             mov qword [rbp - 0x18], rax	      3181	undo.c	FUNCTION_48
0x6198	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3182	undo.c	FUNCTION_48	IF_2
0x619c	        0x488b4008	                mov rax, qword [rax + 8]	      3182	undo.c	FUNCTION_48	IF_2
0x61a0	          0x4885c0	                           test rax, rax	      3182	undo.c	FUNCTION_48	IF_2
0x61a3	     0xf8500010000	                           jne 0x40062e9	      3182	undo.c	FUNCTION_48	IF_2
0x61a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3182	undo.c	FUNCTION_48	IF_2
0x61ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3182	undo.c	FUNCTION_48	IF_2
0x61b1	          0x4885c0	                           test rax, rax	      3182	undo.c	FUNCTION_48	IF_2
0x61b4	     0xf85ef000000	                           jne 0x40062e9	      3182	undo.c	FUNCTION_48	IF_2
0x61ba	    0x48c745d80100	               mov qword [rbp - 0x28], 1	      3185	undo.c	FUNCTION_48	FOR_1
0x61c2	            0xeb79	                           jmp 0x400627d	      3185	undo.c	FUNCTION_48	FOR_1
0x61c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61c8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61cc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61d0	        0x48c1e203	                              shl rdx, 3	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61d4	        0x4883ea08	                              sub rdx, 8	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61d8	          0x4801d0	                            add rax, rdx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61db	          0x488b18	                    mov rbx, qword [rax]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61de	    0x488b05000000	            mov rax, qword [0x04006225] 	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61e5	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61e9	      0xba00000000	                              mov edx, 0	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61ee	          0x4889ce	                            mov rsi, rcx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61f1	          0x4889c7	                            mov rdi, rax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61f4	      0xe800000000	                          call 0x4006239	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61f9	          0x4889de	                            mov rsi, rbx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61fc	          0x4889c7	                            mov rdi, rax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x61ff	      0xe800000000	                          call 0x4006244	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x6204	            0x85c0	                           test eax, eax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x6206	            0x7430	                            je 0x4006278	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x6208	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x620c	    0x48c740400000	               mov qword [rax + 0x40], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x6214	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x6218	    0xc74048000000	               mov dword [rax + 0x48], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x621f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x6223	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x622a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3191	undo.c	FUNCTION_48	FOR_1	IF_3
0x622e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3191	undo.c	FUNCTION_48	FOR_1	IF_3
0x6232	        0x48895040	             mov qword [rax + 0x40], rdx	      3191	undo.c	FUNCTION_48	FOR_1	IF_3
0x6236	            0xeb72	                           jmp 0x40062ea	      3192	undo.c	FUNCTION_48	FOR_1	IF_3
0x6238	      0x488345d801	               add qword [rbp - 0x28], 1	      3186	undo.c	FUNCTION_48	FOR_1
0x623d	    0x488b05000000	            mov rax, qword [0x04006284] 	      3185	undo.c	FUNCTION_48	FOR_1
0x6244	          0x488b00	                    mov rax, qword [rax]	      3185	undo.c	FUNCTION_48	FOR_1
0x6247	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3185	undo.c	FUNCTION_48	FOR_1
0x624b	            0x7e12	                           jle 0x400629f	      3185	undo.c	FUNCTION_48	FOR_1
0x624d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3186	undo.c	FUNCTION_48	FOR_1
0x6251	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3186	undo.c	FUNCTION_48	FOR_1
0x6255	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3186	undo.c	FUNCTION_48	FOR_1
0x6259	     0xf8d65ffffff	                           jge 0x4006204	      3186	undo.c	FUNCTION_48	FOR_1
0x625f	    0x488b05000000	            mov rax, qword [0x040062a6] 	      3194	undo.c	FUNCTION_48	IF_4
0x6266	          0x488b10	                    mov rdx, qword [rax]	      3194	undo.c	FUNCTION_48	IF_4
0x6269	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3194	undo.c	FUNCTION_48	IF_4
0x626d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3194	undo.c	FUNCTION_48	IF_4
0x6271	          0x4839c2	                            cmp rdx, rax	      3194	undo.c	FUNCTION_48	IF_4
0x6274	            0x7434	                            je 0x40062ea	      3194	undo.c	FUNCTION_48	IF_4
0x6276	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x627a	    0x48c740400000	               mov qword [rax + 0x40], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x6282	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x6286	    0xc74048000000	               mov dword [rax + 0x48], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x628d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x6291	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x6298	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3198	undo.c	FUNCTION_48	IF_4
0x629c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3198	undo.c	FUNCTION_48	IF_4
0x62a0	        0x48895040	             mov qword [rax + 0x40], rdx	      3198	undo.c	FUNCTION_48	IF_4
0x62a4	            0xeb04	                           jmp 0x40062ea	      3198	undo.c	FUNCTION_48	IF_4
0x62a6	              0x90	                                     nop	      3178	undo.c	FUNCTION_48	IF_1
0x62a7	            0xeb01	                           jmp 0x40062ea	      3178	undo.c	FUNCTION_48	IF_1
0x62a9	              0x90	                                     nop	      3183	undo.c	FUNCTION_48	IF_2
0x62aa	        0x4883c428	                           add rsp, 0x28	      3200	undo.c	FUNCTION_48
0x62ae	              0x5b	                                 pop rbx	      3200	undo.c	FUNCTION_48
0x62af	              0x5d	                                 pop rbp	      3200	undo.c	FUNCTION_48
0x62b0	              0xc3	                                     ret	      3200	undo.c	FUNCTION_48
u_savecommon	FOR,2:ELSE,11:functions,0:IF,37:CALL,40:DO,0:WHILE,2:SWITCH,0	558
0x250	              0x55	                                push rbp	       387	undo.c	FUNCTION_10
0x251	          0x4889e5	                            mov rbp, rsp	       387	undo.c	FUNCTION_10
0x254	              0x53	                                push rbx	       387	undo.c	FUNCTION_10
0x255	        0x4883ec78	                           sub rsp, 0x78	       387	undo.c	FUNCTION_10
0x259	        0x48897d98	             mov qword [rbp - 0x68], rdi	       387	undo.c	FUNCTION_10
0x25d	        0x48897590	             mov qword [rbp - 0x70], rsi	       387	undo.c	FUNCTION_10
0x261	        0x48895588	             mov qword [rbp - 0x78], rdx	       387	undo.c	FUNCTION_10
0x265	          0x894d84	             mov dword [rbp - 0x7c], ecx	       387	undo.c	FUNCTION_10
0x268	    0x64488b042528	                mov rax, qword fs:[0x28]	       387	undo.c	FUNCTION_10
0x271	        0x488945e8	             mov qword [rbp - 0x18], rax	       387	undo.c	FUNCTION_10
0x275	            0x31c0	                            xor eax, eax	       387	undo.c	FUNCTION_10
0x277	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       396	undo.c	FUNCTION_10	IF_1
0x27b	     0xf85bb000000	                           jne 0x400037c	       396	undo.c	FUNCTION_10	IF_1
0x281	      0xe800000000	                          call 0x40002c6	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x286	            0x85c0	                           test eax, eax	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x288	            0x750a	                           jne 0x40002d4	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x28a	      0xb800000000	                              mov eax, 0	       401	undo.c	FUNCTION_10	IF_1	IF_2
0x28f	      0xe974090000	                           jmp 0x4000c48	       401	undo.c	FUNCTION_10	IF_1	IF_2
0x294	      0xe800000000	                          call 0x40002d9	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x299	            0x85c0	                           test eax, eax	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x29b	            0x7460	                            je 0x400033d	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x29d	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x2a1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x2a5	          0x4889d6	                            mov rsi, rdx	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x2a8	          0x4889c7	                            mov rdi, rax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x2ab	      0xe800000000	                          call 0x40002f0	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x2b0	            0x85c0	                           test eax, eax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x2b2	            0x741c	                            je 0x4000310	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x2b4	      0xbf00000000	                              mov edi, 0	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x2b9	      0xe800000000	                          call 0x40002fe	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x2be	          0x4889c7	                            mov rdi, rax	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x2c1	      0xe800000000	                          call 0x4000306	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x2c6	      0xb800000000	                              mov eax, 0	       413	undo.c	FUNCTION_10	IF_1	IF_3	IF_4
0x2cb	      0xe938090000	                           jmp 0x4000c48	       413	undo.c	FUNCTION_10	IF_1	IF_3	IF_4
0x2d0	    0x488b05000000	            mov rax, qword [0x04000317] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x2d7	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x2dd	            0x85c0	                           test eax, eax	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x2df	            0x741c	                            je 0x400033d	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x2e1	      0xbf00000000	                              mov edi, 0	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x2e6	      0xe800000000	                          call 0x400032b	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x2eb	          0x4889c7	                            mov rdi, rax	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x2ee	      0xe800000000	                          call 0x4000333	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x2f3	      0xb800000000	                              mov eax, 0	       418	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x2f8	      0xe90b090000	                           jmp 0x4000c48	       418	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x2fd	      0xe800000000	                          call 0x4000342	       424	undo.c	FUNCTION_10	IF_1	CALL_8
0x302	      0xbf00000000	                              mov edi, 0	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x307	      0xe800000000	                          call 0x400034c	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x30c	    0x488b05000000	            mov rax, qword [0x04000353] 	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x313	          0x488b00	                    mov rax, qword [rax]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x316	        0x4883c001	                              add rax, 1	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x31a	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x31e	            0x7d1c	                           jge 0x400037c	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x320	      0xbf00000000	                              mov edi, 0	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x325	      0xe800000000	                          call 0x400036a	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x32a	          0x4889c7	                            mov rdi, rax	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x32d	      0xe800000000	                          call 0x4000372	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x332	      0xb800000000	                              mov eax, 0	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x337	      0xe9cc080000	                           jmp 0x4000c48	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x33c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       447	undo.c	FUNCTION_10
0x340	        0x482b4598	             sub rax, qword [rbp - 0x68]	       447	undo.c	FUNCTION_10
0x344	        0x4883e801	                              sub rax, 1	       447	undo.c	FUNCTION_10
0x348	        0x488945e0	             mov qword [rbp - 0x20], rax	       447	undo.c	FUNCTION_10
0x34c	    0x488b05000000	            mov rax, qword [0x04000393] 	       452	undo.c	FUNCTION_10	IF_7
0x353	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	       452	undo.c	FUNCTION_10	IF_7
0x359	            0x85c0	                           test eax, eax	       452	undo.c	FUNCTION_10	IF_7
0x35b	     0xf845b040000	                            je 0x40007fc	       452	undo.c	FUNCTION_10	IF_7
0x361	    0x488b05000000	            mov rax, qword [0x040003a8] 	       456	undo.c	FUNCTION_10	IF_7
0x368	    0xc7809c090000	              mov dword [rax + 0x99c], 1	       456	undo.c	FUNCTION_10	IF_7
0x372	      0xe8a6feffff	                  call sym.get_undolevel	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x377	          0x4885c0	                           test rax, rax	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x37a	            0x781f	                            js 0x40003db	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x37c	      0xbe00000000	                              mov esi, 0	       465	undo.c	FUNCTION_10	IF_7	IF_8	CALL_14
0x381	      0xbf38020000	                          mov edi, 0x238	       465	undo.c	FUNCTION_10	IF_7	IF_8	CALL_14
0x386	      0xe800000000	                          call 0x40003cb	       465	undo.c	FUNCTION_10	IF_7	IF_8	CALL_14
0x38b	        0x488945c0	             mov qword [rbp - 0x40], rax	       465	undo.c	FUNCTION_10	IF_7	IF_8	CALL_14
0x38f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x394	            0x750d	                           jne 0x40003e3	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x396	      0xe927080000	                           jmp 0x4000c02	       467	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x39b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       473	undo.c	FUNCTION_10	IF_7	ELSE_1
0x3a3	    0x488b05000000	            mov rax, qword [0x040003ea] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x3aa	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x3b1	        0x488945a8	             mov qword [rbp - 0x58], rax	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x3b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3b9	          0x4885c0	                           test rax, rax	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3bc	     0xf84c0000000	                            je 0x40004c2	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3c2	    0x488b05000000	            mov rax, qword [0x04000409] 	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3c9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3cd	          0x488b12	                    mov rdx, qword [rdx]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3d0	    0x488990201200	          mov qword [rax + 0x1220], rdx 	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3d7	    0x488b05000000	            mov rax, qword [0x0400041e] 	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3de	    0x48c780281200	            mov qword [rax + 0x1228], 0 	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x3e9	      0xe994000000	                           jmp 0x40004c2	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x3ee	    0x488b05000000	            mov rax, qword [0x04000435] 	       492	undo.c	FUNCTION_10	IF_7	WHILE_1
0x3f5	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	       492	undo.c	FUNCTION_10	IF_7	WHILE_1
0x3fc	        0x488945d8	             mov qword [rbp - 0x28], rax	       492	undo.c	FUNCTION_10	IF_7	WHILE_1
0x400	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x404	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x408	            0x751c	                           jne 0x4000466	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x40a	    0x488b05000000	            mov rax, qword [0x04000451] 	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_16
0x411	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_16
0x415	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_16
0x419	          0x4889ce	                            mov rsi, rcx	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_16
0x41c	          0x4889c7	                            mov rdi, rax	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_16
0x41f	      0xe8ba610000	                   call sym.u_freebranch	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_16
0x424	            0xeb5c	                           jmp 0x40004c2	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_16
0x426	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x42a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x42e	          0x4885c0	                           test rax, rax	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x431	            0x7528	                           jne 0x400049b	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x433	    0x488b05000000	            mov rax, qword [0x0400047a] 	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x43a	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x43e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x442	          0x4889ce	                            mov rsi, rcx	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x445	          0x4889c7	                            mov rdi, rax	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x448	      0xe89a600000	                   call sym.u_freeheader	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x44d	            0xeb33	                           jmp 0x40004c2	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x44f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       504	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x453	        0x488b4010	            mov rax, qword [rax + 0x10] 	       504	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x457	        0x488945d8	             mov qword [rbp - 0x28], rax	       504	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x45b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x45f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x463	          0x4885c0	                           test rax, rax	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x466	            0x75e7	                           jne 0x400048f	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x468	    0x488b05000000	            mov rax, qword [0x040004af] 	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_18
0x46f	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_18
0x473	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_18
0x477	          0x4889ce	                            mov rsi, rcx	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_18
0x47a	          0x4889c7	                            mov rdi, rax	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_18
0x47d	      0xe85c610000	                   call sym.u_freebranch	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_18
0x482	    0x488b05000000	            mov rax, qword [0x040004c9] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x489	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x48f	          0x4863d8	                         movsxd rbx, eax	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x492	      0xe886fdffff	                  call sym.get_undolevel	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x497	          0x4839c3	                            cmp rbx, rax	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x49a	            0x7e17	                           jle 0x40004f3	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x49c	    0x488b05000000	            mov rax, qword [0x040004e3] 	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x4a3	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x4aa	          0x4885c0	                           test rax, rax	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x4ad	     0xf853bffffff	                           jne 0x400042e	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x4b3	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x4b8	            0x753f	                           jne 0x4000539	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x4ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x4be	          0x4885c0	                           test rax, rax	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x4c1	            0x741b	                            je 0x400051e	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x4c3	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_20
0x4c7	    0x488b05000000	            mov rax, qword [0x0400050e] 	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_20
0x4ce	      0xba00000000	                              mov edx, 0	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_20
0x4d3	          0x4889ce	                            mov rsi, rcx	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_20
0x4d6	          0x4889c7	                            mov rdi, rax	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_20
0x4d9	      0xe800610000	                   call sym.u_freebranch	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_20
0x4de	    0x488b05000000	            mov rax, qword [0x04000525] 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x4e5	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x4ef	      0xb801000000	                              mov eax, 1	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4f4	      0xe90f070000	                           jmp 0x4000c48	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4f9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       520	undo.c	FUNCTION_10	IF_7
0x4fd	    0x48c740080000	                  mov qword [rax + 8], 0	       520	undo.c	FUNCTION_10	IF_7
0x505	    0x488b05000000	            mov rax, qword [0x0400054c] 	       521	undo.c	FUNCTION_10	IF_7
0x50c	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	       521	undo.c	FUNCTION_10	IF_7
0x513	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       521	undo.c	FUNCTION_10	IF_7
0x517	          0x488910	                    mov qword [rax], rdx	       521	undo.c	FUNCTION_10	IF_7
0x51a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       522	undo.c	FUNCTION_10	IF_7
0x51e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       522	undo.c	FUNCTION_10	IF_7
0x522	        0x48895010	             mov qword [rax + 0x10], rdx	       522	undo.c	FUNCTION_10	IF_7
0x526	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x52a	          0x4885c0	                           test rax, rax	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x52d	            0x7464	                            je 0x40005d3	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x52f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x533	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x537	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x53b	        0x48895018	             mov qword [rax + 0x18], rdx	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x53f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x543	        0x488b4018	            mov rax, qword [rax + 0x18] 	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x547	          0x4885c0	                           test rax, rax	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x54a	            0x7410	                            je 0x400059c	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x54c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x550	        0x488b4018	            mov rax, qword [rax + 0x18] 	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x554	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x558	        0x48895010	             mov qword [rax + 0x10], rdx	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x55c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x560	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x564	        0x48895018	             mov qword [rax + 0x18], rdx	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x568	    0x488b05000000	            mov rax, qword [0x040005af] 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x56f	    0x488b90181200	          mov rdx, qword [rax + 0x1218] 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x576	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x57a	          0x4839c2	                            cmp rdx, rax	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x57d	            0x7520	                           jne 0x40005df	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x57f	    0x488b05000000	            mov rax, qword [0x040005c6] 	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x586	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x58a	    0x488990181200	          mov qword [rax + 0x1218], rdx 	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x591	            0xeb0c	                           jmp 0x40005df	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x593	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x597	    0x48c740180000	               mov qword [rax + 0x18], 0	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x59f	    0x488b05000000	            mov rax, qword [0x040005e6] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x5a6	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x5ad	          0x4885c0	                           test rax, rax	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x5b0	            0x7416	                            je 0x4000608	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x5b2	    0x488b05000000	            mov rax, qword [0x040005f9] 	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x5b9	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x5c0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x5c4	        0x48895008	                mov qword [rax + 8], rdx	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x5c8	    0x488b05000000	            mov rax, qword [0x0400060f] 	       537	undo.c	FUNCTION_10	IF_7
0x5cf	    0x488b90381200	          mov rdx, qword [rax + 0x1238] 	       537	undo.c	FUNCTION_10	IF_7
0x5d6	        0x4883c201	                              add rdx, 1	       537	undo.c	FUNCTION_10	IF_7
0x5da	    0x488990381200	          mov qword [rax + 0x1238], rdx 	       537	undo.c	FUNCTION_10	IF_7
0x5e1	    0x488b90381200	          mov rdx, qword [rax + 0x1238] 	       537	undo.c	FUNCTION_10	IF_7
0x5e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       537	undo.c	FUNCTION_10	IF_7
0x5ec	        0x48895020	             mov qword [rax + 0x20], rdx	       537	undo.c	FUNCTION_10	IF_7
0x5f0	    0x488b05000000	            mov rax, qword [0x04000637] 	       538	undo.c	FUNCTION_10	IF_7
0x5f7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       538	undo.c	FUNCTION_10	IF_7
0x5fb	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       538	undo.c	FUNCTION_10	IF_7
0x5ff	    0x488990481200	          mov qword [rax + 0x1248], rdx 	       538	undo.c	FUNCTION_10	IF_7
0x606	      0xe800000000	                          call 0x400064b	       539	undo.c	FUNCTION_10	IF_7	CALL_21
0x60b	          0x4889c2	                            mov rdx, rax	       539	undo.c	FUNCTION_10	IF_7	CALL_21
0x60e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       539	undo.c	FUNCTION_10	IF_7	CALL_21
0x612	    0x488990280200	            mov qword [rax + 0x228], rdx	       539	undo.c	FUNCTION_10	IF_7	CALL_21
0x619	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       540	undo.c	FUNCTION_10	IF_7
0x61d	    0x48c780300200	              mov qword [rax + 0x230], 0	       540	undo.c	FUNCTION_10	IF_7
0x628	    0x488b05000000	            mov rax, qword [0x0400066f] 	       541	undo.c	FUNCTION_10	IF_7
0x62f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       541	undo.c	FUNCTION_10	IF_7
0x633	    0x488b92280200	           mov rdx, qword [rdx + 0x228] 	       541	undo.c	FUNCTION_10	IF_7
0x63a	        0x4883c201	                              add rdx, 1	       541	undo.c	FUNCTION_10	IF_7
0x63e	    0x488990501200	          mov qword [rax + 0x1250], rdx 	       541	undo.c	FUNCTION_10	IF_7
0x645	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       543	undo.c	FUNCTION_10	IF_7
0x649	    0xc74028000000	               mov dword [rax + 0x28], 0	       543	undo.c	FUNCTION_10	IF_7
0x650	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       544	undo.c	FUNCTION_10	IF_7
0x654	    0x48c740300000	               mov qword [rax + 0x30], 0	       544	undo.c	FUNCTION_10	IF_7
0x65c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       545	undo.c	FUNCTION_10	IF_7
0x660	    0x48c740380000	               mov qword [rax + 0x38], 0	       545	undo.c	FUNCTION_10	IF_7
0x668	    0x488b05000000	            mov rax, qword [0x040006af] 	       546	undo.c	FUNCTION_10	IF_7
0x66f	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       546	undo.c	FUNCTION_10	IF_7
0x673	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       546	undo.c	FUNCTION_10	IF_7
0x677	        0x488b4038	            mov rax, qword [rax + 0x38] 	       546	undo.c	FUNCTION_10	IF_7
0x67b	        0x48894140	             mov qword [rcx + 0x40], rax	       546	undo.c	FUNCTION_10	IF_7
0x67f	        0x48895148	             mov qword [rcx + 0x48], rdx	       546	undo.c	FUNCTION_10	IF_7
0x683	      0xe800000000	                          call 0x40006c8	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_22
0x688	            0x85c0	                           test eax, eax	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_22
0x68a	            0x7420	                            je 0x40006ec	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_22
0x68c	    0x488b05000000	            mov rax, qword [0x040006d3] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_22
0x693	          0x8b4044	            mov eax, dword [rax + 0x44] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_22
0x696	            0x85c0	                           test eax, eax	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_22
0x698	            0x7e12	                           jle 0x40006ec	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_22
0x69a	      0xe800000000	                          call 0x40006df	       549	undo.c	FUNCTION_10	IF_7	CALL_23
0x69f	          0x4863d0	                         movsxd rdx, eax	       549	undo.c	FUNCTION_10	IF_7	CALL_23
0x6a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       549	undo.c	FUNCTION_10	IF_7	CALL_23
0x6a6	        0x48895050	             mov qword [rax + 0x50], rdx	       549	undo.c	FUNCTION_10	IF_7	CALL_23
0x6aa	            0xeb0c	                           jmp 0x40006f8	       549	undo.c	FUNCTION_10	IF_7	CALL_23
0x6ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x6b0	    0x48c74050ffff	mov qword [rax + 0x50], 0xffffffffffffffff	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x6b8	    0x488b05000000	            mov rax, qword [0x040006ff] 	       555	undo.c	FUNCTION_10	IF_7
0x6bf	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       555	undo.c	FUNCTION_10	IF_7
0x6c5	            0x85c0	                           test eax, eax	       555	undo.c	FUNCTION_10	IF_7
0x6c7	           0xf95c0	                                setne al	       555	undo.c	FUNCTION_10	IF_7
0x6ca	           0xfb6d0	                           movzx edx, al	       555	undo.c	FUNCTION_10	IF_7
0x6cd	    0x488b05000000	            mov rax, qword [0x04000714] 	       556	undo.c	FUNCTION_10	IF_7
0x6d4	          0x8b4010	            mov eax, dword [rax + 0x10] 	       556	undo.c	FUNCTION_10	IF_7
0x6d7	          0x83e001	                              and eax, 1	       556	undo.c	FUNCTION_10	IF_7
0x6da	            0x85c0	                           test eax, eax	       556	undo.c	FUNCTION_10	IF_7
0x6dc	            0x7407	                            je 0x4000725	       556	undo.c	FUNCTION_10	IF_7
0x6de	      0xb802000000	                              mov eax, 2	       556	undo.c	FUNCTION_10	IF_7
0x6e3	            0xeb05	                           jmp 0x400072a	       556	undo.c	FUNCTION_10	IF_7
0x6e5	      0xb800000000	                              mov eax, 0	       556	undo.c	FUNCTION_10	IF_7
0x6ea	             0x1c2	                            add edx, eax	       555	undo.c	FUNCTION_10	IF_7
0x6ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       555	undo.c	FUNCTION_10	IF_7
0x6f0	          0x895058	             mov dword [rax + 0x58], edx	       555	undo.c	FUNCTION_10	IF_7
0x6f3	    0x488b05000000	            mov rax, qword [0x0400073a] 	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x6fa	    0x488d88580100	                  lea rcx, [rax + 0x158]	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x701	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x705	        0x4883c060	                           add rax, 0x60	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x709	      0xbaa0010000	                          mov edx, 0x1a0	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x70e	          0x4889ce	                            mov rsi, rcx	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x711	          0x4889c7	                            mov rdi, rax	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x714	      0xe800000000	                          call 0x4000759	       559	undo.c	FUNCTION_10	IF_7	CALL_24
0x719	    0x488b15000000	            mov rdx, qword [0x04000760] 	       560	undo.c	FUNCTION_10	IF_7
0x720	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       560	undo.c	FUNCTION_10	IF_7
0x724	    0x488b8af80200	           mov rcx, qword [rdx + 0x2f8] 	       560	undo.c	FUNCTION_10	IF_7
0x72b	    0x488988000200	            mov qword [rax + 0x200], rcx	       560	undo.c	FUNCTION_10	IF_7
0x732	    0x488b8a000300	           mov rcx, qword [rdx + 0x300] 	       560	undo.c	FUNCTION_10	IF_7
0x739	    0x488988080200	            mov qword [rax + 0x208], rcx	       560	undo.c	FUNCTION_10	IF_7
0x740	    0x488b8a080300	           mov rcx, qword [rdx + 0x308] 	       560	undo.c	FUNCTION_10	IF_7
0x747	    0x488988100200	            mov qword [rax + 0x210], rcx	       560	undo.c	FUNCTION_10	IF_7
0x74e	    0x488b8a100300	           mov rcx, qword [rdx + 0x310] 	       560	undo.c	FUNCTION_10	IF_7
0x755	    0x488988180200	            mov qword [rax + 0x218], rcx	       560	undo.c	FUNCTION_10	IF_7
0x75c	    0x488b92180300	           mov rdx, qword [rdx + 0x318] 	       560	undo.c	FUNCTION_10	IF_7
0x763	    0x488990200200	            mov qword [rax + 0x220], rdx	       560	undo.c	FUNCTION_10	IF_7
0x76a	    0x488b05000000	            mov rax, qword [0x040007b1] 	       562	undo.c	FUNCTION_10	IF_7
0x771	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       562	undo.c	FUNCTION_10	IF_7
0x775	    0x488990201200	          mov qword [rax + 0x1220], rdx 	       562	undo.c	FUNCTION_10	IF_7
0x77c	    0x488b05000000	            mov rax, qword [0x040007c3] 	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x783	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x78a	          0x4885c0	                           test rax, rax	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x78d	            0x7512	                           jne 0x40007e1	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x78f	    0x488b05000000	            mov rax, qword [0x040007d6] 	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x796	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x79a	    0x488990181200	          mov qword [rax + 0x1218], rdx 	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x7a1	    0x488b05000000	            mov rax, qword [0x040007e8] 	       565	undo.c	FUNCTION_10	IF_7
0x7a8	    0x8b9030120000	          mov edx, dword [rax + 0x1230] 	       565	undo.c	FUNCTION_10	IF_7
0x7ae	          0x83c201	                              add edx, 1	       565	undo.c	FUNCTION_10	IF_7
0x7b1	    0x899030120000	          mov dword [rax + 0x1230], edx 	       565	undo.c	FUNCTION_10	IF_7
0x7b7	      0xe914020000	                           jmp 0x4000a10	       565	undo.c	FUNCTION_10	IF_7
0x7bc	      0xe85cfaffff	                  call sym.get_undolevel	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_25
0x7c1	          0x4885c0	                           test rax, rax	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_25
0x7c4	            0x790a	                           jns 0x4000810	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_25
0x7c6	      0xb801000000	                              mov eax, 1	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x7cb	      0xe938040000	                           jmp 0x4000c48	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x7d0	      0x48837de001	               cmp qword [rbp - 0x20], 1	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x7d5	     0xf85f0010000	                           jne 0x4000a0b	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x7db	      0xe8b75b0000	                call sym.u_get_headentry	       583	undo.c	FUNCTION_10	ELSE_6	IF_22	CALL_26
0x7e0	        0x488945c8	             mov qword [rbp - 0x38], rax	       583	undo.c	FUNCTION_10	ELSE_6	IF_22	CALL_26
0x7e4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       584	undo.c	FUNCTION_10	ELSE_6	IF_22
0x7ec	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x7f4	      0xe9c4010000	                           jmp 0x40009fd	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x7f9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x7fe	     0xf84c6010000	                            je 0x4000a0a	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x804	    0x488b05000000	            mov rax, qword [0x0400084b] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x80b	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x812	        0x488b4038	            mov rax, qword [rax + 0x38] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x816	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x81a	            0x7447	                            je 0x40008a3	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x81c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x820	        0x488b5008	                mov rdx, qword [rax + 8]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x824	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x828	        0x488b4028	            mov rax, qword [rax + 0x28] 	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x82c	          0x4801d0	                            add rax, rdx	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x82f	        0x488d5001	                      lea rdx, [rax + 1]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x833	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       594	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x837	        0x488b4010	            mov rax, qword [rax + 0x10] 	       594	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x83b	          0x4885c0	                           test rax, rax	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x83e	            0x7510	                           jne 0x4000890	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x840	    0x488b05000000	            mov rax, qword [0x04000887] 	       595	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x847	          0x488b00	                    mov rax, qword [rax]	       595	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x84a	        0x4883c001	                              add rax, 1	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x84e	            0xeb08	                           jmp 0x4000898	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x850	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x854	        0x488b4010	            mov rax, qword [rax + 0x10] 	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x858	          0x4839c2	                            cmp rdx, rax	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x85b	     0xf856a010000	                           jne 0x4000a0b	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x861	            0xeb1b	                           jmp 0x40008be	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x863	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x867	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x86b	    0x488b05000000	            mov rax, qword [0x040008b2] 	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x872	          0x488b00	                    mov rax, qword [rax]	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x875	          0x4839c2	                            cmp rdx, rax	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x878	     0xf854d010000	                           jne 0x4000a0b	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x87e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x882	        0x488b4028	            mov rax, qword [rax + 0x28] 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x886	        0x4883f801	                              cmp rax, 1	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x88a	            0x7e36	                           jle 0x4000902	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x88c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x890	        0x488b4008	                mov rax, qword [rax + 8]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x894	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x898	            0x7f28	                            jg 0x4000902	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x89a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x89e	        0x488d4802	                      lea rcx, [rax + 2]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8a6	        0x488b5008	                mov rdx, qword [rax + 8]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8ae	        0x488b4028	            mov rax, qword [rax + 0x28] 	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8b2	          0x4801d0	                            add rax, rdx	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8b5	        0x4883c001	                              add rax, 1	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8b9	          0x4839c1	                            cmp rcx, rax	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8bc	     0xf8e09010000	                           jle 0x4000a0b	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x8c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8c6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8ca	        0x4883f801	                              cmp rax, 1	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8ce	     0xf85d1000000	                           jne 0x40009e5	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8d8	        0x488b4008	                mov rax, qword [rax + 8]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8dc	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8e0	     0xf85bf000000	                           jne 0x40009e5	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x8e6	      0x48837db800	               cmp qword [rbp - 0x48], 0	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x8eb	            0x7e53	                           jle 0x4000980	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x8ed	      0xe8005b0000	                       call sym.u_getbot	       611	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26	CALL_27
0x8f2	    0x488b05000000	            mov rax, qword [0x04000939] 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x8f9	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x903	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x907	          0x488b10	                    mov rdx, qword [rax]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x90a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x90e	          0x488910	                    mov qword [rax], rdx	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x911	    0x488b05000000	            mov rax, qword [0x04000958] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x918	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x91f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x923	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x927	          0x488910	                    mov qword [rax], rdx	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x92a	    0x488b05000000	            mov rax, qword [0x04000971] 	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x931	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x938	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x93c	        0x48895030	             mov qword [rax + 0x30], rdx	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x940	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x945	            0x740e	                            je 0x4000995	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x947	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x94b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x94f	        0x48895010	             mov qword [rax + 0x10], rdx	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x953	            0xeb46	                           jmp 0x40009db	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x955	    0x488b05000000	            mov rax, qword [0x0400099c] 	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x95c	          0x488b00	                    mov rax, qword [rax]	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x95f	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x963	            0x7d0e	                           jge 0x40009b3	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x965	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x969	    0x48c740100000	               mov qword [rax + 0x10], 0	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x971	            0xeb28	                           jmp 0x40009db	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x973	    0x488b05000000	            mov rax, qword [0x040009ba] 	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x97a	          0x488b10	                    mov rdx, qword [rax]	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x97d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x981	        0x48895018	             mov qword [rax + 0x18], rdx	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x985	    0x488b05000000	            mov rax, qword [0x040009cc] 	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x98c	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x993	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x997	        0x48895038	             mov qword [rax + 0x38], rdx	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x99b	      0xb801000000	                              mov eax, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x9a0	      0xe963020000	                           jmp 0x4000c48	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x9a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       637	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9a9	        0x488945d0	             mov qword [rbp - 0x30], rax	       637	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9b1	          0x488b00	                    mov rax, qword [rax]	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9b4	        0x488945c8	             mov qword [rbp - 0x38], rax	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9b8	      0x488345b801	               add qword [rbp - 0x48], 1	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9bd	      0x48837db809	               cmp qword [rbp - 0x48], 9	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9c2	     0xf8e31feffff	                           jle 0x4000839	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9c8	            0xeb01	                           jmp 0x4000a0b	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x9ca	              0x90	                                     nop	       588	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x9cb	      0xe8225a0000	                       call sym.u_getbot	       643	undo.c	FUNCTION_10	ELSE_6	CALL_28
0x9d0	      0xbe00000000	                              mov esi, 0	       658	undo.c	FUNCTION_10	CALL_29
0x9d5	      0xbf30000000	                           mov edi, 0x30	       658	undo.c	FUNCTION_10	CALL_29
0x9da	      0xe800000000	                          call 0x4000a1f	       658	undo.c	FUNCTION_10	CALL_29
0x9df	        0x488945c8	             mov qword [rbp - 0x38], rax	       658	undo.c	FUNCTION_10	CALL_29
0x9e3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       659	undo.c	FUNCTION_10	IF_30
0x9e8	     0xf84d3010000	                            je 0x4000c01	       659	undo.c	FUNCTION_10	IF_30
0x9ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       661	undo.c	FUNCTION_10	CALL_30
0x9f2	      0xba30000000	                           mov edx, 0x30	       661	undo.c	FUNCTION_10	CALL_30
0x9f7	      0xbe00000000	                              mov esi, 0	       661	undo.c	FUNCTION_10	CALL_30
0x9fc	          0x4889c7	                            mov rdi, rax	       661	undo.c	FUNCTION_10	CALL_30
0x9ff	      0xe800000000	                          call 0x4000a44	       661	undo.c	FUNCTION_10	CALL_30
0xa04	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       666	undo.c	FUNCTION_10
0xa08	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       666	undo.c	FUNCTION_10
0xa0c	        0x48895028	             mov qword [rax + 0x28], rdx	       666	undo.c	FUNCTION_10
0xa10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       667	undo.c	FUNCTION_10
0xa14	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       667	undo.c	FUNCTION_10
0xa18	        0x48895008	                mov qword [rax + 8], rdx	       667	undo.c	FUNCTION_10
0xa1c	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       668	undo.c	FUNCTION_10	IF_31
0xa21	            0x740e	                            je 0x4000a71	       668	undo.c	FUNCTION_10	IF_31
0xa23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       669	undo.c	FUNCTION_10	IF_31
0xa27	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       669	undo.c	FUNCTION_10	IF_31
0xa2b	        0x48895010	             mov qword [rax + 0x10], rdx	       669	undo.c	FUNCTION_10	IF_31
0xa2f	            0xeb46	                           jmp 0x4000ab7	       669	undo.c	FUNCTION_10	IF_31
0xa31	    0x488b05000000	            mov rax, qword [0x04000a78] 	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0xa38	          0x488b00	                    mov rax, qword [rax]	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0xa3b	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0xa3f	            0x7d0e	                           jge 0x4000a8f	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0xa41	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0xa45	    0x48c740100000	               mov qword [rax + 0x10], 0	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0xa4d	            0xeb28	                           jmp 0x4000ab7	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0xa4f	    0x488b05000000	            mov rax, qword [0x04000a96] 	       678	undo.c	FUNCTION_10	ELSE_10
0xa56	          0x488b10	                    mov rdx, qword [rax]	       678	undo.c	FUNCTION_10	ELSE_10
0xa59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       678	undo.c	FUNCTION_10	ELSE_10
0xa5d	        0x48895018	             mov qword [rax + 0x18], rdx	       678	undo.c	FUNCTION_10	ELSE_10
0xa61	    0x488b05000000	            mov rax, qword [0x04000aa8] 	       679	undo.c	FUNCTION_10	ELSE_10
0xa68	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       679	undo.c	FUNCTION_10	ELSE_10
0xa6f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       679	undo.c	FUNCTION_10	ELSE_10
0xa73	        0x48895038	             mov qword [rax + 0x38], rdx	       679	undo.c	FUNCTION_10	ELSE_10
0xa77	      0x48837de000	               cmp qword [rbp - 0x20], 0	       682	undo.c	FUNCTION_10	IF_33
0xa7c	     0xf8ee2000000	                           jle 0x4000ba4	       682	undo.c	FUNCTION_10	IF_33
0xa82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xa86	        0x48c1e003	                              shl rax, 3	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xa8a	      0xbe00000000	                              mov esi, 0	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xa8f	          0x4889c7	                            mov rdi, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xa92	      0xe800000000	                          call 0x4000ad7	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xa97	          0x4889c2	                            mov rdx, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xa9a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xa9e	        0x48895020	             mov qword [rax + 0x20], rdx	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xaa2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xaa6	        0x488b4020	            mov rax, qword [rax + 0x20] 	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xaaa	          0x4885c0	                           test rax, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xaad	            0x7516	                           jne 0x4000b05	       684	undo.c	FUNCTION_10	IF_33	IF_34	CALL_31
0xaaf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_32
0xab3	      0xbe00000000	                              mov esi, 0	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_32
0xab8	          0x4889c7	                            mov rdi, rax	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_32
0xabb	      0xe8d35c0000	                    call sym.u_freeentry	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_32
0xac0	      0xe9fd000000	                           jmp 0x4000c02	       688	undo.c	FUNCTION_10	IF_33	IF_34
0xac5	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xacd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xad1	        0x4883c001	                              add rax, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xad5	        0x488945b0	             mov qword [rbp - 0x50], rax	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xad9	            0xeb79	                           jmp 0x4000b94	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xadb	      0xe800000000	                          call 0x4000b20	       692	undo.c	FUNCTION_10	IF_33	FOR_2	CALL_33
0xae0	    0x8b0500000000	            mov eax, dword [0x04000b26] 	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0xae6	            0x85c0	                           test eax, eax	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0xae8	            0x741d	                            je 0x4000b47	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0xaea	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_34
0xaee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_34
0xaf2	          0x4889d6	                            mov rsi, rdx	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_34
0xaf5	          0x4889c7	                            mov rdi, rax	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_34
0xaf8	      0xe8965c0000	                    call sym.u_freeentry	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_34
0xafd	      0xb800000000	                              mov eax, 0	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0xb02	      0xe901010000	                           jmp 0x4000c48	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0xb07	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb0b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb0f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb13	        0x48c1e203	                              shl rdx, 3	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb17	        0x488d1c10	                    lea rbx, [rax + rdx]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb1f	        0x488d5001	                      lea rdx, [rax + 1]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb23	        0x488955b0	             mov qword [rbp - 0x50], rdx	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb27	          0x4889c7	                            mov rdi, rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb2a	      0xe871600000	                    call sym.u_save_line	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb2f	          0x488903	                    mov qword [rbx], rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb32	          0x488b03	                    mov rax, qword [rbx]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb35	          0x4885c0	                           test rax, rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb38	            0x7515	                           jne 0x4000b8f	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_35
0xb3a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_36
0xb3e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_36
0xb42	          0x4889d6	                            mov rsi, rdx	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_36
0xb45	          0x4889c7	                            mov rdi, rax	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_36
0xb48	      0xe8465c0000	                    call sym.u_freeentry	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_36
0xb4d	            0xeb73	                           jmp 0x4000c02	       701	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36
0xb4f	      0x488345b801	               add qword [rbp - 0x48], 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xb54	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xb58	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xb5c	     0xf8c79ffffff	                            jl 0x4000b1b	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xb62	            0xeb0c	                           jmp 0x4000bb0	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0xb64	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       706	undo.c	FUNCTION_10	ELSE_11
0xb68	    0x48c740200000	               mov qword [rax + 0x20], 0	       706	undo.c	FUNCTION_10	ELSE_11
0xb70	    0x488b05000000	            mov rax, qword [0x04000bb7] 	       707	undo.c	FUNCTION_10
0xb77	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       707	undo.c	FUNCTION_10
0xb7e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       707	undo.c	FUNCTION_10
0xb82	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       707	undo.c	FUNCTION_10
0xb86	          0x488910	                    mov qword [rax], rdx	       707	undo.c	FUNCTION_10
0xb89	    0x488b05000000	            mov rax, qword [0x04000bd0] 	       708	undo.c	FUNCTION_10
0xb90	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       708	undo.c	FUNCTION_10
0xb97	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       708	undo.c	FUNCTION_10
0xb9b	        0x48895030	             mov qword [rax + 0x30], rdx	       708	undo.c	FUNCTION_10
0xb9f	    0x488b05000000	            mov rax, qword [0x04000be6] 	       709	undo.c	FUNCTION_10
0xba6	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       709	undo.c	FUNCTION_10
0xbb0	    0xc70500000000	               mov dword [0x04000bfa], 0	       710	undo.c	FUNCTION_10
0xbba	      0xb801000000	                              mov eax, 1	       715	undo.c	FUNCTION_10
0xbbf	            0xeb47	                           jmp 0x4000c48	       715	undo.c	FUNCTION_10
0xbc1	              0x90	                                     nop	       660	undo.c	FUNCTION_10	IF_30
0xbc2	    0xc70500000000	               mov dword [0x04000c0c], 0	       718	undo.c	FUNCTION_10
0xbcc	      0xbf00000000	                              mov edi, 0	       719	undo.c	FUNCTION_10	IF_37	CALL_39
0xbd1	      0xe800000000	                          call 0x4000c16	       719	undo.c	FUNCTION_10	IF_37	CALL_39
0xbd6	      0xbe01000000	                              mov esi, 1	       719	undo.c	FUNCTION_10	IF_37	CALL_39
0xbdb	          0x4889c7	                            mov rdi, rax	       719	undo.c	FUNCTION_10	IF_37	CALL_39
0xbde	      0xe800000000	                          call 0x4000c23	       719	undo.c	FUNCTION_10	IF_37	CALL_39
0xbe3	          0x83f879	                           cmp eax, 0x79	       719	undo.c	FUNCTION_10	IF_37	CALL_39
0xbe6	            0x7511	                           jne 0x4000c39	       719	undo.c	FUNCTION_10	IF_37	CALL_39
0xbe8	    0xc70500000000	               mov dword [0x04000c32], 1	       722	undo.c	FUNCTION_10	IF_37
0xbf2	      0xb801000000	                              mov eax, 1	       723	undo.c	FUNCTION_10	IF_37
0xbf7	            0xeb0f	                           jmp 0x4000c48	       723	undo.c	FUNCTION_10	IF_37
0xbf9	      0xbf00000000	                              mov edi, 0	       725	undo.c	FUNCTION_10	CALL_40
0xbfe	      0xe800000000	                          call 0x4000c43	       725	undo.c	FUNCTION_10	CALL_40
0xc03	      0xb800000000	                              mov eax, 0	       726	undo.c	FUNCTION_10
0xc08	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       727	undo.c	FUNCTION_10
0xc0c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       727	undo.c	FUNCTION_10
0xc15	            0x7405	                            je 0x4000c5c	       727	undo.c	FUNCTION_10
0xc17	      0xe800000000	                          call 0x4000c5c	       727	undo.c	FUNCTION_10
0xc1c	        0x4883c478	                           add rsp, 0x78	       727	undo.c	FUNCTION_10
0xc20	              0x5b	                                 pop rbx	       727	undo.c	FUNCTION_10
0xc21	              0x5d	                                 pop rbp	       727	undo.c	FUNCTION_10
0xc22	              0xc3	                                     ret	       727	undo.c	FUNCTION_10
u_get_headentry	FOR,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0	22
0x6397	              0x55	                                push rbp	      3241	undo.c	FUNCTION_51
0x6398	          0x4889e5	                            mov rbp, rsp	      3241	undo.c	FUNCTION_51
0x639b	    0x488b05000000	            mov rax, qword [0x040063e2] 	      3242	undo.c	FUNCTION_51	IF_1
0x63a2	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x63a9	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x63ac	            0x7417	                            je 0x4006405	      3242	undo.c	FUNCTION_51	IF_1
0x63ae	    0x488b05000000	            mov rax, qword [0x040063f5] 	      3242	undo.c	FUNCTION_51	IF_1
0x63b5	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x63bc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3242	undo.c	FUNCTION_51	IF_1
0x63c0	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x63c3	            0x7519	                           jne 0x400641e	      3242	undo.c	FUNCTION_51	IF_1
0x63c5	      0xbf00000000	                              mov edi, 0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x63ca	      0xe800000000	                          call 0x400640f	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x63cf	          0x4889c7	                            mov rdi, rax	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x63d2	      0xe800000000	                          call 0x4006417	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x63d7	      0xb800000000	                              mov eax, 0	      3245	undo.c	FUNCTION_51	IF_1
0x63dc	            0xeb12	                           jmp 0x4006430	      3245	undo.c	FUNCTION_51	IF_1
0x63de	    0x488b05000000	            mov rax, qword [0x04006425] 	      3247	undo.c	FUNCTION_51
0x63e5	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3247	undo.c	FUNCTION_51
0x63ec	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3247	undo.c	FUNCTION_51
0x63f0	              0x5d	                                 pop rbp	      3248	undo.c	FUNCTION_51
0x63f1	              0xc3	                                     ret	      3248	undo.c	FUNCTION_51
serialize_header	FOR,0:ELSE,1:functions,0:IF,8:CALL,31:DO,0:WHILE,0:SWITCH,0	262
0x1905	              0x55	                                push rbp	      1145	undo.c	FUNCTION_26
0x1906	          0x4889e5	                            mov rbp, rsp	      1145	undo.c	FUNCTION_26
0x1909	              0x53	                                push rbx	      1145	undo.c	FUNCTION_26
0x190a	        0x4883ec48	                           sub rsp, 0x48	      1145	undo.c	FUNCTION_26
0x190e	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1145	undo.c	FUNCTION_26
0x1912	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1145	undo.c	FUNCTION_26
0x1916	    0x64488b042528	                mov rax, qword fs:[0x28]	      1145	undo.c	FUNCTION_26
0x191f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1145	undo.c	FUNCTION_26
0x1923	            0x31c0	                            xor eax, eax	      1145	undo.c	FUNCTION_26
0x1925	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1147	undo.c	FUNCTION_26
0x1929	          0x488b00	                    mov rax, qword [rax]	      1147	undo.c	FUNCTION_26
0x192c	        0x488945d0	             mov qword [rbp - 0x30], rax	      1147	undo.c	FUNCTION_26
0x1930	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1148	undo.c	FUNCTION_26
0x1934	        0x488b4008	                mov rax, qword [rax + 8]	      1148	undo.c	FUNCTION_26
0x1938	        0x488945d8	             mov qword [rbp - 0x28], rax	      1148	undo.c	FUNCTION_26
0x193c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x1940	          0x4889c1	                            mov rcx, rax	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x1943	      0xba01000000	                              mov edx, 1	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x1948	      0xbe09000000	                              mov esi, 9	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x194d	      0xbf00000000	                              mov edi, 0	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x1952	      0xe800000000	                          call 0x4001997	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x1957	        0x4883f801	                              cmp rax, 1	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x195b	            0x740a	                            je 0x40019a7	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x195d	      0xb800000000	                              mov eax, 0	      1153	undo.c	FUNCTION_26	IF_1
0x1962	      0xe9a9030000	                           jmp 0x4001d50	      1153	undo.c	FUNCTION_26	IF_1
0x1967	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1158	undo.c	FUNCTION_26	IF_2
0x196b	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	      1158	undo.c	FUNCTION_26	IF_2
0x1972	           0xfb600	                   movzx eax, byte [rax]	      1158	undo.c	FUNCTION_26	IF_2
0x1975	            0x84c0	                             test al, al	      1158	undo.c	FUNCTION_26	IF_2
0x1977	     0xf842d010000	                            je 0x4001aea	      1158	undo.c	FUNCTION_26	IF_2
0x197d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x1981	      0xba02000000	                              mov edx, 2	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x1986	      0xbe02800000	                         mov esi, 0x8002	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x198b	          0x4889c7	                            mov rdi, rax	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x198e	      0xe816faffff	               call sym.undo_write_bytes	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x1993	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x1997	    0x488b98101500	          mov rbx, qword [rax + 0x1510] 	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x199e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19a2	          0x4889c7	                            mov rdi, rax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19a5	      0xe800000000	                          call 0x40019ea	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19aa	            0x89c7	                            mov edi, eax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19ac	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19b0	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19b4	          0x4889d1	                            mov rcx, rdx	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19b7	          0x4889c2	                            mov rdx, rax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19ba	          0x4889de	                            mov rsi, rbx	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19bd	      0xe800000000	                          call 0x4001a02	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19c2	          0x4889c2	                            mov rdx, rax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19c5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19c9	        0x48895010	             mov qword [rax + 0x10], rdx	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x19cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x19d1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x19d5	          0x4885c0	                           test rax, rax	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x19d8	            0x750a	                           jne 0x4001a24	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x19da	      0xb800000000	                              mov eax, 0	      1167	undo.c	FUNCTION_26	IF_2	IF_3
0x19df	      0xe92c030000	                           jmp 0x4001d50	      1167	undo.c	FUNCTION_26	IF_2	IF_3
0x19e4	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x19e7	          0x4863f0	                         movsxd rsi, eax	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x19ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x19ee	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x19f2	          0x4889d1	                            mov rcx, rdx	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x19f5	      0xba01000000	                              mov edx, 1	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x19fa	          0x4889c7	                            mov rdi, rax	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x19fd	      0xe800000000	                          call 0x4001a42	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x1a02	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x1a05	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1169	undo.c	FUNCTION_26	IF_2	CALL_6
0x1a09	          0x4889c7	                            mov rdi, rax	      1169	undo.c	FUNCTION_26	IF_2	CALL_6
0x1a0c	      0xe800000000	                          call 0x4001a51	      1169	undo.c	FUNCTION_26	IF_2	CALL_6
0x1a11	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      1170	undo.c	FUNCTION_26	IF_2	IF_4
0x1a15	            0x7426	                            je 0x4001a7d	      1170	undo.c	FUNCTION_26	IF_2	IF_4
0x1a17	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x1a1b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x1a1f	          0x4889c7	                            mov rdi, rax	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x1a22	      0xe800000000	                          call 0x4001a67	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x1a27	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1173	undo.c	FUNCTION_26	IF_2	IF_4
0x1a2b	    0x48c740100000	               mov qword [rax + 0x10], 0	      1173	undo.c	FUNCTION_26	IF_2	IF_4
0x1a33	      0xb800000000	                              mov eax, 0	      1174	undo.c	FUNCTION_26	IF_2	IF_4
0x1a38	      0xe9d3020000	                           jmp 0x4001d50	      1174	undo.c	FUNCTION_26	IF_2	IF_4
0x1a3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x1a41	          0x4889c7	                            mov rdi, rax	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x1a44	      0xe800000000	                          call 0x4001a89	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x1a49	            0x89c7	                            mov edi, eax	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x1a4b	      0xe800000000	                          call 0x4001a90	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x1a50	            0x85c0	                           test eax, eax	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x1a52	            0x746c	                            je 0x4001b00	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x1a54	      0xbf00200000	                         mov edi, 0x2000	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x1a59	      0xe800000000	                          call 0x4001a9e	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x1a5e	          0x4889c2	                            mov rdx, rax	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x1a61	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x1a65	        0x48895018	             mov qword [rax + 0x18], rdx	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x1a69	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a6d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a71	          0x4885c0	                           test rax, rax	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a74	            0x7526	                           jne 0x4001adc	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a76	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x1a7a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x1a7e	          0x4889c7	                            mov rdi, rax	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x1a81	      0xe800000000	                          call 0x4001ac6	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x1a86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1183	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a8a	    0x48c740100000	               mov qword [rax + 0x10], 0	      1183	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a92	      0xb800000000	                              mov eax, 0	      1184	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a97	      0xe974020000	                           jmp 0x4001d50	      1184	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x1a9c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1186	undo.c	FUNCTION_26	IF_2	IF_5
0x1aa0	    0x48c740200000	               mov qword [rax + 0x20], 0	      1186	undo.c	FUNCTION_26	IF_2	IF_5
0x1aa8	            0xeb16	                           jmp 0x4001b00	      1186	undo.c	FUNCTION_26	IF_2	IF_5
0x1aaa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1191	undo.c	FUNCTION_26	CALL_12
0x1aae	      0xba02000000	                              mov edx, 2	      1191	undo.c	FUNCTION_26	CALL_12
0x1ab3	      0xbe02000000	                              mov esi, 2	      1191	undo.c	FUNCTION_26	CALL_12
0x1ab8	          0x4889c7	                            mov rdi, rax	      1191	undo.c	FUNCTION_26	CALL_12
0x1abb	      0xe8e9f8ffff	               call sym.undo_write_bytes	      1191	undo.c	FUNCTION_26	CALL_12
0x1ac0	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1ac4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1ac8	      0xba20000000	                           mov edx, 0x20	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1acd	          0x4889ce	                            mov rsi, rcx	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1ad0	          0x4889c7	                            mov rdi, rax	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1ad3	      0xe8b1f5ffff	                     call sym.undo_write	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1ad8	            0x85c0	                           test eax, eax	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1ada	            0x750a	                           jne 0x4001b26	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x1adc	      0xb800000000	                              mov eax, 0	      1197	undo.c	FUNCTION_26	IF_7
0x1ae1	      0xe92a020000	                           jmp 0x4001d50	      1197	undo.c	FUNCTION_26	IF_7
0x1ae6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1200	undo.c	FUNCTION_26	CALL_14
0x1aea	          0x488b00	                    mov rax, qword [rax]	      1200	undo.c	FUNCTION_26	CALL_14
0x1aed	          0x4889c1	                            mov rcx, rax	      1200	undo.c	FUNCTION_26	CALL_14
0x1af0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1200	undo.c	FUNCTION_26	CALL_14
0x1af4	      0xba04000000	                              mov edx, 4	      1200	undo.c	FUNCTION_26	CALL_14
0x1af9	          0x4889ce	                            mov rsi, rcx	      1200	undo.c	FUNCTION_26	CALL_14
0x1afc	          0x4889c7	                            mov rdi, rax	      1200	undo.c	FUNCTION_26	CALL_14
0x1aff	      0xe8a5f8ffff	               call sym.undo_write_bytes	      1200	undo.c	FUNCTION_26	CALL_14
0x1b04	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1201	undo.c	FUNCTION_26	CALL_15
0x1b08	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      1201	undo.c	FUNCTION_26	CALL_15
0x1b0f	          0x4885c0	                           test rax, rax	      1201	undo.c	FUNCTION_26	CALL_15
0x1b12	            0x7415	                            je 0x4001b69	      1201	undo.c	FUNCTION_26	CALL_15
0x1b14	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1201	undo.c	FUNCTION_26	CALL_15
0x1b18	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      1201	undo.c	FUNCTION_26	CALL_15
0x1b1f	          0x4889c7	                            mov rdi, rax	      1201	undo.c	FUNCTION_26	CALL_15
0x1b22	      0xe800000000	                          call 0x4001b67	      1201	undo.c	FUNCTION_26	CALL_15
0x1b27	            0xeb05	                           jmp 0x4001b6e	      1201	undo.c	FUNCTION_26	CALL_15
0x1b29	      0xb800000000	                              mov eax, 0	      1201	undo.c	FUNCTION_26	CALL_15
0x1b2e	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1201	undo.c	FUNCTION_26	CALL_15
0x1b31	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1202	undo.c	FUNCTION_26	CALL_16
0x1b34	          0x4863c8	                         movsxd rcx, eax	      1202	undo.c	FUNCTION_26	CALL_16
0x1b37	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1202	undo.c	FUNCTION_26	CALL_16
0x1b3b	      0xba04000000	                              mov edx, 4	      1202	undo.c	FUNCTION_26	CALL_16
0x1b40	          0x4889ce	                            mov rsi, rcx	      1202	undo.c	FUNCTION_26	CALL_16
0x1b43	          0x4889c7	                            mov rdi, rax	      1202	undo.c	FUNCTION_26	CALL_16
0x1b46	      0xe85ef8ffff	               call sym.undo_write_bytes	      1202	undo.c	FUNCTION_26	CALL_16
0x1b4b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b4f	            0x7e2e	                           jle 0x4001bbf	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b51	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b54	          0x4863d0	                         movsxd rdx, eax	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b57	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b5b	    0x488b88601200	          mov rcx, qword [rax + 0x1260] 	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b62	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b66	          0x4889ce	                            mov rsi, rcx	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b69	          0x4889c7	                            mov rdi, rax	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b6c	      0xe8fcf6ffff	                   call sym.fwrite_crypt	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b71	            0x85c0	                           test eax, eax	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b73	            0x750a	                           jne 0x4001bbf	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x1b75	      0xb800000000	                              mov eax, 0	      1204	undo.c	FUNCTION_26	IF_8
0x1b7a	      0xe991010000	                           jmp 0x4001d50	      1204	undo.c	FUNCTION_26	IF_8
0x1b7f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1205	undo.c	FUNCTION_26	CALL_18
0x1b83	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      1205	undo.c	FUNCTION_26	CALL_18
0x1b8a	          0x4889c1	                            mov rcx, rax	      1205	undo.c	FUNCTION_26	CALL_18
0x1b8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1205	undo.c	FUNCTION_26	CALL_18
0x1b91	      0xba04000000	                              mov edx, 4	      1205	undo.c	FUNCTION_26	CALL_18
0x1b96	          0x4889ce	                            mov rsi, rcx	      1205	undo.c	FUNCTION_26	CALL_18
0x1b99	          0x4889c7	                            mov rdi, rax	      1205	undo.c	FUNCTION_26	CALL_18
0x1b9c	      0xe808f8ffff	               call sym.undo_write_bytes	      1205	undo.c	FUNCTION_26	CALL_18
0x1ba1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1206	undo.c	FUNCTION_26	CALL_19
0x1ba5	    0x8b8070120000	          mov eax, dword [rax + 0x1270] 	      1206	undo.c	FUNCTION_26	CALL_19
0x1bab	          0x4863c8	                         movsxd rcx, eax	      1206	undo.c	FUNCTION_26	CALL_19
0x1bae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1206	undo.c	FUNCTION_26	CALL_19
0x1bb2	      0xba04000000	                              mov edx, 4	      1206	undo.c	FUNCTION_26	CALL_19
0x1bb7	          0x4889ce	                            mov rsi, rcx	      1206	undo.c	FUNCTION_26	CALL_19
0x1bba	          0x4889c7	                            mov rdi, rax	      1206	undo.c	FUNCTION_26	CALL_19
0x1bbd	      0xe8e7f7ffff	               call sym.undo_write_bytes	      1206	undo.c	FUNCTION_26	CALL_19
0x1bc2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1209	undo.c	FUNCTION_26	CALL_20
0x1bc6	    0x488b90181200	          mov rdx, qword [rax + 0x1218] 	      1209	undo.c	FUNCTION_26	CALL_20
0x1bcd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1209	undo.c	FUNCTION_26	CALL_20
0x1bd1	          0x4889d6	                            mov rsi, rdx	      1209	undo.c	FUNCTION_26	CALL_20
0x1bd4	          0x4889c7	                            mov rdi, rax	      1209	undo.c	FUNCTION_26	CALL_20
0x1bd7	      0xe85bf8ffff	                 call sym.put_header_ptr	      1209	undo.c	FUNCTION_26	CALL_20
0x1bdc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1210	undo.c	FUNCTION_26	CALL_21
0x1be0	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	      1210	undo.c	FUNCTION_26	CALL_21
0x1be7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1210	undo.c	FUNCTION_26	CALL_21
0x1beb	          0x4889d6	                            mov rsi, rdx	      1210	undo.c	FUNCTION_26	CALL_21
0x1bee	          0x4889c7	                            mov rdi, rax	      1210	undo.c	FUNCTION_26	CALL_21
0x1bf1	      0xe841f8ffff	                 call sym.put_header_ptr	      1210	undo.c	FUNCTION_26	CALL_21
0x1bf6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1211	undo.c	FUNCTION_26	CALL_22
0x1bfa	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      1211	undo.c	FUNCTION_26	CALL_22
0x1c01	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1211	undo.c	FUNCTION_26	CALL_22
0x1c05	          0x4889d6	                            mov rsi, rdx	      1211	undo.c	FUNCTION_26	CALL_22
0x1c08	          0x4889c7	                            mov rdi, rax	      1211	undo.c	FUNCTION_26	CALL_22
0x1c0b	      0xe827f8ffff	                 call sym.put_header_ptr	      1211	undo.c	FUNCTION_26	CALL_22
0x1c10	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1213	undo.c	FUNCTION_26	CALL_23
0x1c14	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      1213	undo.c	FUNCTION_26	CALL_23
0x1c1a	          0x4863c8	                         movsxd rcx, eax	      1213	undo.c	FUNCTION_26	CALL_23
0x1c1d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1213	undo.c	FUNCTION_26	CALL_23
0x1c21	      0xba04000000	                              mov edx, 4	      1213	undo.c	FUNCTION_26	CALL_23
0x1c26	          0x4889ce	                            mov rsi, rcx	      1213	undo.c	FUNCTION_26	CALL_23
0x1c29	          0x4889c7	                            mov rdi, rax	      1213	undo.c	FUNCTION_26	CALL_23
0x1c2c	      0xe878f7ffff	               call sym.undo_write_bytes	      1213	undo.c	FUNCTION_26	CALL_23
0x1c31	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1214	undo.c	FUNCTION_26	CALL_24
0x1c35	    0x488b80381200	          mov rax, qword [rax + 0x1238] 	      1214	undo.c	FUNCTION_26	CALL_24
0x1c3c	          0x4889c1	                            mov rcx, rax	      1214	undo.c	FUNCTION_26	CALL_24
0x1c3f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1214	undo.c	FUNCTION_26	CALL_24
0x1c43	      0xba04000000	                              mov edx, 4	      1214	undo.c	FUNCTION_26	CALL_24
0x1c48	          0x4889ce	                            mov rsi, rcx	      1214	undo.c	FUNCTION_26	CALL_24
0x1c4b	          0x4889c7	                            mov rdi, rax	      1214	undo.c	FUNCTION_26	CALL_24
0x1c4e	      0xe856f7ffff	               call sym.undo_write_bytes	      1214	undo.c	FUNCTION_26	CALL_24
0x1c53	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	undo.c	FUNCTION_26	CALL_25
0x1c57	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      1215	undo.c	FUNCTION_26	CALL_25
0x1c5e	          0x4889c1	                            mov rcx, rax	      1215	undo.c	FUNCTION_26	CALL_25
0x1c61	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1215	undo.c	FUNCTION_26	CALL_25
0x1c65	      0xba04000000	                              mov edx, 4	      1215	undo.c	FUNCTION_26	CALL_25
0x1c6a	          0x4889ce	                            mov rsi, rcx	      1215	undo.c	FUNCTION_26	CALL_25
0x1c6d	          0x4889c7	                            mov rdi, rax	      1215	undo.c	FUNCTION_26	CALL_25
0x1c70	      0xe834f7ffff	               call sym.undo_write_bytes	      1215	undo.c	FUNCTION_26	CALL_25
0x1c75	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1216	undo.c	FUNCTION_26	CALL_26
0x1c79	    0x488b80501200	          mov rax, qword [rax + 0x1250] 	      1216	undo.c	FUNCTION_26	CALL_26
0x1c80	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1216	undo.c	FUNCTION_26	CALL_26
0x1c84	          0x4889d6	                            mov rsi, rdx	      1216	undo.c	FUNCTION_26	CALL_26
0x1c87	          0x4889c7	                            mov rdi, rax	      1216	undo.c	FUNCTION_26	CALL_26
0x1c8a	      0xe800000000	                          call 0x4001ccf	      1216	undo.c	FUNCTION_26	CALL_26
0x1c8f	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1217	undo.c	FUNCTION_26	CALL_27
0x1c93	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1217	undo.c	FUNCTION_26	CALL_27
0x1c97	      0xba08000000	                              mov edx, 8	      1217	undo.c	FUNCTION_26	CALL_27
0x1c9c	          0x4889ce	                            mov rsi, rcx	      1217	undo.c	FUNCTION_26	CALL_27
0x1c9f	          0x4889c7	                            mov rdi, rax	      1217	undo.c	FUNCTION_26	CALL_27
0x1ca2	      0xe8e2f3ffff	                     call sym.undo_write	      1217	undo.c	FUNCTION_26	CALL_27
0x1ca7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1220	undo.c	FUNCTION_26	CALL_28
0x1cab	      0xba01000000	                              mov edx, 1	      1220	undo.c	FUNCTION_26	CALL_28
0x1cb0	      0xbe04000000	                              mov esi, 4	      1220	undo.c	FUNCTION_26	CALL_28
0x1cb5	          0x4889c7	                            mov rdi, rax	      1220	undo.c	FUNCTION_26	CALL_28
0x1cb8	      0xe8ecf6ffff	               call sym.undo_write_bytes	      1220	undo.c	FUNCTION_26	CALL_28
0x1cbd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1221	undo.c	FUNCTION_26	CALL_29
0x1cc1	      0xba01000000	                              mov edx, 1	      1221	undo.c	FUNCTION_26	CALL_29
0x1cc6	      0xbe01000000	                              mov esi, 1	      1221	undo.c	FUNCTION_26	CALL_29
0x1ccb	          0x4889c7	                            mov rdi, rax	      1221	undo.c	FUNCTION_26	CALL_29
0x1cce	      0xe8d6f6ffff	               call sym.undo_write_bytes	      1221	undo.c	FUNCTION_26	CALL_29
0x1cd3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1222	undo.c	FUNCTION_26	CALL_30
0x1cd7	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      1222	undo.c	FUNCTION_26	CALL_30
0x1cde	          0x4889c1	                            mov rcx, rax	      1222	undo.c	FUNCTION_26	CALL_30
0x1ce1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1222	undo.c	FUNCTION_26	CALL_30
0x1ce5	      0xba04000000	                              mov edx, 4	      1222	undo.c	FUNCTION_26	CALL_30
0x1cea	          0x4889ce	                            mov rsi, rcx	      1222	undo.c	FUNCTION_26	CALL_30
0x1ced	          0x4889c7	                            mov rdi, rax	      1222	undo.c	FUNCTION_26	CALL_30
0x1cf0	      0xe8b4f6ffff	               call sym.undo_write_bytes	      1222	undo.c	FUNCTION_26	CALL_30
0x1cf5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1224	undo.c	FUNCTION_26	CALL_31
0x1cf9	      0xba01000000	                              mov edx, 1	      1224	undo.c	FUNCTION_26	CALL_31
0x1cfe	      0xbe00000000	                              mov esi, 0	      1224	undo.c	FUNCTION_26	CALL_31
0x1d03	          0x4889c7	                            mov rdi, rax	      1224	undo.c	FUNCTION_26	CALL_31
0x1d06	      0xe89ef6ffff	               call sym.undo_write_bytes	      1224	undo.c	FUNCTION_26	CALL_31
0x1d0b	      0xb801000000	                              mov eax, 1	      1226	undo.c	FUNCTION_26
0x1d10	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1227	undo.c	FUNCTION_26
0x1d14	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1227	undo.c	FUNCTION_26
0x1d1d	            0x7405	                            je 0x4001d64	      1227	undo.c	FUNCTION_26
0x1d1f	      0xe800000000	                          call 0x4001d64	      1227	undo.c	FUNCTION_26
0x1d24	        0x4883c448	                           add rsp, 0x48	      1227	undo.c	FUNCTION_26
0x1d28	              0x5b	                                 pop rbx	      1227	undo.c	FUNCTION_26
0x1d29	              0x5d	                                 pop rbp	      1227	undo.c	FUNCTION_26
0x1d2a	              0xc3	                                     ret	      1227	undo.c	FUNCTION_26
undo_read_byte	FOR,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0	30
0x1595	              0x55	                                push rbp	      1028	undo.c	FUNCTION_22
0x1596	          0x4889e5	                            mov rbp, rsp	      1028	undo.c	FUNCTION_22
0x1599	        0x4883ec20	                           sub rsp, 0x20	      1028	undo.c	FUNCTION_22
0x159d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1028	undo.c	FUNCTION_22
0x15a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1028	undo.c	FUNCTION_22
0x15aa	        0x488945f8	                mov qword [rbp - 8], rax	      1028	undo.c	FUNCTION_22
0x15ae	            0x31c0	                            xor eax, eax	      1028	undo.c	FUNCTION_22
0x15b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1030	undo.c	FUNCTION_22	IF_1
0x15b4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1030	undo.c	FUNCTION_22	IF_1
0x15b8	          0x4885c0	                           test rax, rax	      1030	undo.c	FUNCTION_22	IF_1
0x15bb	            0x7421	                            je 0x400161e	      1030	undo.c	FUNCTION_22	IF_1
0x15bd	        0x488d4df7	                      lea rcx, [rbp - 9]	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x15c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x15c5	      0xba01000000	                              mov edx, 1	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x15ca	          0x4889ce	                            mov rsi, rcx	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x15cd	          0x4889c7	                            mov rdi, rax	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x15d0	      0xe8d5000000	                      call sym.undo_read	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x15d5	         0xfb645f7	               movzx eax, byte [rbp - 9]	      1035	undo.c	FUNCTION_22	IF_1
0x15d9	           0xfb6c0	                           movzx eax, al	      1035	undo.c	FUNCTION_22	IF_1
0x15dc	            0xeb10	                           jmp 0x400162e	      1035	undo.c	FUNCTION_22	IF_1
0x15de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1038	undo.c	FUNCTION_22	CALL_2
0x15e2	        0x488b4008	                mov rax, qword [rax + 8]	      1038	undo.c	FUNCTION_22	CALL_2
0x15e6	          0x4889c7	                            mov rdi, rax	      1038	undo.c	FUNCTION_22	CALL_2
0x15e9	      0xe800000000	                          call 0x400162e	      1038	undo.c	FUNCTION_22	CALL_2
0x15ee	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1039	undo.c	FUNCTION_22
0x15f2	    0x644833142528	                xor rdx, qword fs:[0x28]	      1039	undo.c	FUNCTION_22
0x15fb	            0x7405	                            je 0x4001642	      1039	undo.c	FUNCTION_22
0x15fd	      0xe800000000	                          call 0x4001642	      1039	undo.c	FUNCTION_22
0x1602	              0xc9	                                   leave	      1039	undo.c	FUNCTION_22
0x1603	              0xc3	                                     ret	      1039	undo.c	FUNCTION_22
u_write_undo	FOR,0:ELSE,6:functions,0:IF,38:CALL,59:DO,0:WHILE,1:SWITCH,0	414
0x27a6	              0x55	                                push rbp	      1517	undo.c	FUNCTION_35
0x27a7	          0x4889e5	                            mov rbp, rsp	      1517	undo.c	FUNCTION_35
0x27aa	    0x4881ecd00100	                          sub rsp, 0x1d0	      1517	undo.c	FUNCTION_35
0x27b1	    0x4889bd48feff	            mov qword [rbp - 0x1b8], rdi	      1517	undo.c	FUNCTION_35
0x27b8	    0x89b544feffff	            mov dword [rbp - 0x1bc], esi	      1517	undo.c	FUNCTION_35
0x27be	    0x48899538feff	            mov qword [rbp - 0x1c8], rdx	      1517	undo.c	FUNCTION_35
0x27c5	    0x48898d30feff	            mov qword [rbp - 0x1d0], rcx	      1517	undo.c	FUNCTION_35
0x27cc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1517	undo.c	FUNCTION_35
0x27d5	        0x488945f8	                mov qword [rbp - 8], rax	      1517	undo.c	FUNCTION_35
0x27d9	            0x31c0	                            xor eax, eax	      1517	undo.c	FUNCTION_35
0x27db	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      1525	undo.c	FUNCTION_35
0x27e6	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 0	      1527	undo.c	FUNCTION_35
0x27f0	    0xc78560feffff	              mov dword [rbp - 0x1a0], 0	      1529	undo.c	FUNCTION_35
0x27fa	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1535	undo.c	FUNCTION_35	CALL_1
0x2801	      0xba30000000	                           mov edx, 0x30	      1535	undo.c	FUNCTION_35	CALL_1
0x2806	      0xbe00000000	                              mov esi, 0	      1535	undo.c	FUNCTION_35	CALL_1
0x280b	          0x4889c7	                            mov rdi, rax	      1535	undo.c	FUNCTION_35	CALL_1
0x280e	      0xe800000000	                          call 0x4002853	      1535	undo.c	FUNCTION_35	CALL_1
0x2813	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1537	undo.c	FUNCTION_35	IF_1
0x281b	            0x7562	                           jne 0x40028bf	      1537	undo.c	FUNCTION_35	IF_1
0x281d	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x2824	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x282b	      0xbe00000000	                              mov esi, 0	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x2830	          0x4889c7	                            mov rdi, rax	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x2833	      0xe800000000	                          call 0x4002878	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x2838	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x283f	    0x4883bd78feff	              cmp qword [rbp - 0x188], 0	      1540	undo.c	FUNCTION_35	IF_1	IF_2
0x2847	            0x7544	                           jne 0x40028cd	      1540	undo.c	FUNCTION_35	IF_1	IF_2
0x2849	    0x488b05000000	            mov rax, qword [0x04002890] 	      1542	undo.c	FUNCTION_35	IF_1	IF_2	IF_3
0x2850	          0x4885c0	                           test rax, rax	      1542	undo.c	FUNCTION_35	IF_1	IF_2	IF_3
0x2853	     0xf8eea060000	                           jle 0x4002f83	      1542	undo.c	FUNCTION_35	IF_1	IF_2	IF_3
0x2859	      0xe800000000	                          call 0x400289e	      1544	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_3
0x285e	      0xbf00000000	                              mov edi, 0	      1546	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_5
0x2863	      0xe800000000	                          call 0x40028a8	      1546	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_5
0x2868	          0x4889c7	                            mov rdi, rax	      1545	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_4
0x286b	      0xb800000000	                              mov eax, 0	      1545	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_4
0x2870	      0xe800000000	                          call 0x40028b5	      1545	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_4
0x2875	      0xe800000000	                          call 0x40028ba	      1547	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_6
0x287a	      0xe9c5060000	                           jmp 0x4002f84	      1547	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_6
0x287f	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1553	undo.c	FUNCTION_35	ELSE_1
0x2886	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1553	undo.c	FUNCTION_35	ELSE_1
0x288d	    0xc78558feffff	         mov dword [rbp - 0x1a8], 0x180 	      1560	undo.c	FUNCTION_35	ELSE_1
0x2897	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x289e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x28a5	          0x4885c0	                           test rax, rax	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x28a8	            0x743a	                            je 0x4002924	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x28aa	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28b1	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28b8	    0x488d95c0feff	                  lea rdx, [rbp - 0x140]	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28bf	          0x4889d6	                            mov rsi, rdx	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28c2	          0x4889c7	                            mov rdi, rax	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28c5	      0xe800000000	                          call 0x400290a	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28ca	            0x85c0	                           test eax, eax	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28cc	            0x7816	                            js 0x4002924	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x28ce	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	      1566	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5
0x28d4	    0x898558feffff	            mov dword [rbp - 0x1a8], eax	      1566	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5
0x28da	    0xc78560feffff	              mov dword [rbp - 0x1a0], 1	      1567	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5
0x28e4	    0x81a558feffff	          and dword [rbp - 0x1a8], 0x1b6	      1577	undo.c	FUNCTION_35
0x28ee	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x28f5	          0x4889c7	                            mov rdi, rax	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x28f8	      0xe800000000	                          call 0x400293d	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x28fd	          0x4885c0	                           test rax, rax	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x2900	     0xf886c010000	                            js 0x4002ab2	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x2906	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x290e	            0x740d	                            je 0x400295d	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x2910	    0x83bd44feffff	              cmp dword [rbp - 0x1bc], 0	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x2917	     0xf8546010000	                           jne 0x4002aa3	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x291d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x2924	      0xba00000000	                              mov edx, 0	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x2929	      0xbe00000000	                              mov esi, 0	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x292e	          0x4889c7	                            mov rdi, rax	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x2931	      0xb800000000	                              mov eax, 0	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x2936	      0xe800000000	                          call 0x400297b	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x293b	    0x898564feffff	            mov dword [rbp - 0x19c], eax	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x2941	    0x83bd64feffff	              cmp dword [rbp - 0x19c], 0	      1587	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x2948	            0x7965	                           jns 0x40029ef	      1587	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x294a	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x2952	            0x7510	                           jne 0x40029a4	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x2954	    0x488b05000000	            mov rax, qword [0x0400299b] 	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x295b	          0x4885c0	                           test rax, rax	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x295e	     0xf8e8d050000	                           jle 0x4002f31	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x2964	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1591	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_11
0x296c	            0x7505	                           jne 0x40029b3	      1591	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_11
0x296e	      0xe800000000	                          call 0x40029b3	      1592	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2973	      0xbf00000000	                              mov edi, 0	      1594	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_13
0x2978	      0xe800000000	                          call 0x40029bd	      1594	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_13
0x297d	          0x4889c2	                            mov rdx, rax	      1594	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_13
0x2980	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x2987	          0x4889c6	                            mov rsi, rax	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x298a	          0x4889d7	                            mov rdi, rdx	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x298d	      0xb800000000	                              mov eax, 0	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x2992	      0xe800000000	                          call 0x40029d7	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x2997	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1596	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_12
0x299f	     0xf854c050000	                           jne 0x4002f31	      1596	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_12
0x29a5	      0xe800000000	                          call 0x40029ea	      1597	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_14
0x29aa	      0xe942050000	                           jmp 0x4002f31	      1599	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x29af	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x29b3	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x29b9	      0xba09000000	                              mov edx, 9	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x29be	          0x4889ce	                            mov rsi, rcx	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x29c1	            0x89c7	                            mov edi, eax	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x29c3	      0xe800000000	                          call 0x4002a08	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x29c8	    0x898568feffff	            mov dword [rbp - 0x198], eax	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x29ce	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1607	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_16
0x29d4	            0x89c7	                            mov edi, eax	      1607	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_16
0x29d6	      0xe800000000	                          call 0x4002a1b	      1607	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_16
0x29db	    0x83bd68feffff	              cmp dword [rbp - 0x198], 8	      1608	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x29e2	            0x7e1a	                           jle 0x4002a3e	      1608	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x29e4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x29e8	      0xba09000000	                              mov edx, 9	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x29ed	      0xbe00000000	                              mov esi, 0	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x29f2	          0x4889c7	                            mov rdi, rax	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x29f5	      0xe800000000	                          call 0x4002a3a	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x29fa	            0x85c0	                           test eax, eax	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x29fc	            0x7465	                            je 0x4002aa3	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x29fe	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x2a06	            0x7510	                           jne 0x4002a58	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x2a08	    0x488b05000000	            mov rax, qword [0x04002a4f] 	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x2a0f	          0x4885c0	                           test rax, rax	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x2a12	     0xf8edc040000	                           jle 0x4002f34	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x2a18	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1613	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_15
0x2a20	            0x7505	                           jne 0x4002a67	      1613	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_15
0x2a22	      0xe800000000	                          call 0x4002a67	      1614	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_18
0x2a27	      0xbf00000000	                              mov edi, 0	      1616	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_20
0x2a2c	      0xe800000000	                          call 0x4002a71	      1616	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_20
0x2a31	          0x4889c2	                            mov rdx, rax	      1616	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_20
0x2a34	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x2a3b	          0x4889c6	                            mov rsi, rax	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x2a3e	          0x4889d7	                            mov rdi, rdx	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x2a41	      0xb800000000	                              mov eax, 0	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x2a46	      0xe800000000	                          call 0x4002a8b	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x2a4b	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1618	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_16
0x2a53	     0xf859b040000	                           jne 0x4002f34	      1618	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_16
0x2a59	      0xe800000000	                          call 0x4002a9e	      1619	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_21
0x2a5e	      0xe995040000	                           jmp 0x4002f38	      1619	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_21
0x2a63	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1625	undo.c	FUNCTION_35	IF_7	CALL_22
0x2a6a	          0x4889c7	                            mov rdi, rax	      1625	undo.c	FUNCTION_35	IF_7	CALL_22
0x2a6d	      0xe800000000	                          call 0x4002ab2	      1625	undo.c	FUNCTION_35	IF_7	CALL_22
0x2a72	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1630	undo.c	FUNCTION_35	IF_17
0x2a79	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      1630	undo.c	FUNCTION_35	IF_17
0x2a7f	            0x85c0	                           test eax, eax	      1630	undo.c	FUNCTION_35	IF_17
0x2a81	            0x753a	                           jne 0x4002afd	      1630	undo.c	FUNCTION_35	IF_17
0x2a83	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1630	undo.c	FUNCTION_35	IF_17
0x2a8a	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      1630	undo.c	FUNCTION_35	IF_17
0x2a91	          0x4885c0	                           test rax, rax	      1630	undo.c	FUNCTION_35	IF_17
0x2a94	            0x7527	                           jne 0x4002afd	      1630	undo.c	FUNCTION_35	IF_17
0x2a96	    0x488b05000000	            mov rax, qword [0x04002add] 	      1632	undo.c	FUNCTION_35	IF_17	IF_18
0x2a9d	          0x4885c0	                           test rax, rax	      1632	undo.c	FUNCTION_35	IF_17	IF_18
0x2aa0	     0xf8e51040000	                           jle 0x4002f37	      1632	undo.c	FUNCTION_35	IF_17	IF_18
0x2aa6	      0xbf00000000	                              mov edi, 0	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x2aab	      0xe800000000	                          call 0x4002af0	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x2ab0	          0x4889c7	                            mov rdi, rax	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x2ab3	      0xe800000000	                          call 0x4002af8	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x2ab8	      0xe93a040000	                           jmp 0x4002f37	      1634	undo.c	FUNCTION_35	IF_17
0x2abd	    0x8b9558feffff	            mov edx, dword [rbp - 0x1a8]	      1637	undo.c	FUNCTION_35	CALL_25
0x2ac3	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1637	undo.c	FUNCTION_35	CALL_25
0x2aca	      0xbec1000200	                        mov esi, 0x200c1	      1637	undo.c	FUNCTION_35	CALL_25
0x2acf	          0x4889c7	                            mov rdi, rax	      1637	undo.c	FUNCTION_35	CALL_25
0x2ad2	      0xb800000000	                              mov eax, 0	      1637	undo.c	FUNCTION_35	CALL_25
0x2ad7	      0xe800000000	                          call 0x4002b1c	      1637	undo.c	FUNCTION_35	CALL_25
0x2adc	    0x898564feffff	            mov dword [rbp - 0x19c], eax	      1637	undo.c	FUNCTION_35	CALL_25
0x2ae2	    0x83bd64feffff	              cmp dword [rbp - 0x19c], 0	      1639	undo.c	FUNCTION_35	IF_19
0x2ae9	            0x7924	                           jns 0x4002b4f	      1639	undo.c	FUNCTION_35	IF_19
0x2aeb	      0xbf00000000	                              mov edi, 0	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x2af0	      0xe800000000	                          call 0x4002b35	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x2af5	          0x4889c2	                            mov rdx, rax	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x2af8	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x2aff	          0x4889c6	                            mov rsi, rax	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x2b02	          0x4889d7	                            mov rdi, rdx	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x2b05	      0xe800000000	                          call 0x4002b4a	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x2b0a	      0xe9e9030000	                           jmp 0x4002f38	      1642	undo.c	FUNCTION_35	IF_19
0x2b0f	    0x8b8558feffff	            mov eax, dword [rbp - 0x1a8]	      1644	undo.c	FUNCTION_35	CALL_28
0x2b15	          0x4863d0	                         movsxd rdx, eax	      1644	undo.c	FUNCTION_35	CALL_28
0x2b18	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1644	undo.c	FUNCTION_35	CALL_28
0x2b1f	          0x4889d6	                            mov rsi, rdx	      1644	undo.c	FUNCTION_35	CALL_28
0x2b22	          0x4889c7	                            mov rdi, rax	      1644	undo.c	FUNCTION_35	CALL_28
0x2b25	      0xe800000000	                          call 0x4002b6a	      1644	undo.c	FUNCTION_35	CALL_28
0x2b2a	    0x488b05000000	            mov rax, qword [0x04002b71] 	      1645	undo.c	FUNCTION_35	IF_20
0x2b31	          0x4885c0	                           test rax, rax	      1645	undo.c	FUNCTION_35	IF_20
0x2b34	            0x7e2e	                           jle 0x4002ba4	      1645	undo.c	FUNCTION_35	IF_20
0x2b36	      0xe800000000	                          call 0x4002b7b	      1647	undo.c	FUNCTION_35	IF_20	CALL_29
0x2b3b	      0xbf00000000	                              mov edi, 0	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b40	      0xe800000000	                          call 0x4002b85	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b45	          0x4889c2	                            mov rdx, rax	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b48	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b4f	          0x4889c6	                            mov rsi, rax	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b52	          0x4889d7	                            mov rdi, rdx	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b55	      0xb800000000	                              mov eax, 0	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b5a	      0xe800000000	                          call 0x4002b9f	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x2b5f	      0xe800000000	                          call 0x4002ba4	      1649	undo.c	FUNCTION_35	IF_20	CALL_32
0x2b64	    0x83bd60feffff	              cmp dword [rbp - 0x1a0], 0	      1663	undo.c	FUNCTION_35	IF_21
0x2b6b	            0x7479	                            je 0x4002c26	      1663	undo.c	FUNCTION_35	IF_21
0x2b6d	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x2b74	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x2b7b	          0x4889d6	                            mov rsi, rdx	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x2b7e	          0x4889c7	                            mov rdi, rax	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x2b81	      0xe800000000	                          call 0x4002bc6	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x2b86	            0x85c0	                           test eax, eax	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x2b88	            0x785c	                            js 0x4002c26	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x2b8a	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      1665	undo.c	FUNCTION_35	IF_21
0x2b90	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      1665	undo.c	FUNCTION_35	IF_21
0x2b96	            0x39c2	                            cmp edx, eax	      1665	undo.c	FUNCTION_35	IF_21
0x2b98	            0x744c	                            je 0x4002c26	      1665	undo.c	FUNCTION_35	IF_21
0x2b9a	    0x8b95e0feffff	            mov edx, dword [rbp - 0x120]	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x2ba0	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x2ba6	      0xbeffffffff	                     mov esi, 0xffffffff	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x2bab	            0x89c7	                            mov edi, eax	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x2bad	      0xe800000000	                          call 0x4002bf2	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x2bb2	            0x85c0	                           test eax, eax	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x2bb4	            0x7430	                            je 0x4002c26	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x2bb6	    0x8b8558feffff	            mov eax, dword [rbp - 0x1a8]	      1670	undo.c	FUNCTION_35	CALL_36
0x2bbc	      0x25c7010000	                          and eax, 0x1c7	      1670	undo.c	FUNCTION_35	CALL_36
0x2bc1	            0x89c2	                            mov edx, eax	      1670	undo.c	FUNCTION_35	CALL_36
0x2bc3	    0x8b8558feffff	            mov eax, dword [rbp - 0x1a8]	      1670	undo.c	FUNCTION_35	CALL_36
0x2bc9	          0x83e007	                              and eax, 7	      1670	undo.c	FUNCTION_35	CALL_36
0x2bcc	          0xc1e003	                              shl eax, 3	      1670	undo.c	FUNCTION_35	CALL_36
0x2bcf	             0x9d0	                             or eax, edx	      1670	undo.c	FUNCTION_35	CALL_36
0x2bd1	          0x4863d0	                         movsxd rdx, eax	      1670	undo.c	FUNCTION_35	CALL_36
0x2bd4	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1670	undo.c	FUNCTION_35	CALL_36
0x2bdb	          0x4889d6	                            mov rsi, rdx	      1670	undo.c	FUNCTION_35	CALL_36
0x2bde	          0x4889c7	                            mov rdi, rax	      1670	undo.c	FUNCTION_35	CALL_36
0x2be1	      0xe800000000	                          call 0x4002c26	      1670	undo.c	FUNCTION_35	CALL_36
0x2be6	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1677	undo.c	FUNCTION_35	CALL_38
0x2bec	      0xbe00000000	                              mov esi, 0	      1677	undo.c	FUNCTION_35	CALL_38
0x2bf1	            0x89c7	                            mov edi, eax	      1677	undo.c	FUNCTION_35	CALL_38
0x2bf3	      0xe800000000	                          call 0x4002c38	      1677	undo.c	FUNCTION_35	CALL_38
0x2bf8	    0x48898580feff	            mov qword [rbp - 0x180], rax	      1677	undo.c	FUNCTION_35	CALL_38
0x2bff	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      1678	undo.c	FUNCTION_35	IF_23
0x2c07	            0x7540	                           jne 0x4002c89	      1678	undo.c	FUNCTION_35	IF_23
0x2c09	      0xbf00000000	                              mov edi, 0	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x2c0e	      0xe800000000	                          call 0x4002c53	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x2c13	          0x4889c2	                            mov rdx, rax	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x2c16	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x2c1d	          0x4889c6	                            mov rsi, rax	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x2c20	          0x4889d7	                            mov rdi, rdx	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x2c23	      0xe800000000	                          call 0x4002c68	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x2c28	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1681	undo.c	FUNCTION_35	IF_23	CALL_41
0x2c2e	            0x89c7	                            mov edi, eax	      1681	undo.c	FUNCTION_35	IF_23	CALL_41
0x2c30	      0xe800000000	                          call 0x4002c75	      1681	undo.c	FUNCTION_35	IF_23	CALL_41
0x2c35	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1682	undo.c	FUNCTION_35	IF_23	CALL_42
0x2c3c	          0x4889c7	                            mov rdi, rax	      1682	undo.c	FUNCTION_35	IF_23	CALL_42
0x2c3f	      0xe800000000	                          call 0x4002c84	      1682	undo.c	FUNCTION_35	IF_23	CALL_42
0x2c44	      0xe9af020000	                           jmp 0x4002f38	      1683	undo.c	FUNCTION_35	IF_23
0x2c49	      0xbf01000000	                              mov edi, 1	      1687	undo.c	FUNCTION_35	CALL_43
0x2c4e	      0xe800000000	                          call 0x4002c93	      1687	undo.c	FUNCTION_35	CALL_43
0x2c53	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1692	undo.c	FUNCTION_35
0x2c5a	    0x48898590feff	            mov qword [rbp - 0x170], rax	      1692	undo.c	FUNCTION_35
0x2c61	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      1693	undo.c	FUNCTION_35
0x2c68	    0x48898598feff	            mov qword [rbp - 0x168], rax	      1693	undo.c	FUNCTION_35
0x2c6f	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x2c76	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x2c7d	          0x4889d6	                            mov rsi, rdx	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x2c80	          0x4889c7	                            mov rdi, rax	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x2c83	      0xe87decffff	               call sym.serialize_header	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x2c88	            0x85c0	                           test eax, eax	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x2c8a	     0xf84cc010000	                            je 0x4002e9c	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x2c90	    0x8b0500000000	            mov eax, dword [0x04002cd6] 	      1700	undo.c	FUNCTION_35
0x2c96	          0x83c001	                              add eax, 1	      1700	undo.c	FUNCTION_35
0x2c99	    0x890500000000	            mov dword [0x04002cdf], eax 	      1700	undo.c	FUNCTION_35
0x2c9f	    0x8b0500000000	            mov eax, dword [0x04002ce5] 	      1700	undo.c	FUNCTION_35
0x2ca5	    0x89856cfeffff	            mov dword [rbp - 0x194], eax	      1700	undo.c	FUNCTION_35
0x2cab	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1701	undo.c	FUNCTION_35
0x2cb2	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      1701	undo.c	FUNCTION_35
0x2cb9	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1701	undo.c	FUNCTION_35
0x2cc0	      0xe936010000	                           jmp 0x4002e3b	      1702	undo.c	FUNCTION_35	WHILE_1
0x2cc5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x2ccc	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x2ccf	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x2cd5	            0x7431	                            je 0x4002d48	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x2cd7	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1707	undo.c	FUNCTION_35	WHILE_1	IF_25
0x2cde	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1707	undo.c	FUNCTION_35	WHILE_1	IF_25
0x2ce4	          0x895028	             mov dword [rax + 0x28], edx	      1707	undo.c	FUNCTION_35	WHILE_1	IF_25
0x2ce7	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x2cee	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x2cf5	          0x4889d6	                            mov rsi, rdx	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x2cf8	          0x4889c7	                            mov rdi, rax	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x2cfb	      0xe82bf0ffff	                  call sym.serialize_uhp	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x2d00	            0x85c0	                           test eax, eax	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x2d02	     0xf8457010000	                            je 0x4002e9f	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x2d08	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d0f	        0x488b4008	                mov rax, qword [rax + 8]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d13	          0x4885c0	                           test rax, rax	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d16	            0x742d	                            je 0x4002d85	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d18	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d1f	        0x488b4008	                mov rax, qword [rax + 8]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d23	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d26	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d2c	            0x7417	                            je 0x4002d85	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d2e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d35	        0x488b4008	                mov rax, qword [rax + 8]	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d39	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d40	      0xe9b6000000	                           jmp 0x4002e3b	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x2d45	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d4c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d50	          0x4885c0	                           test rax, rax	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d53	            0x742a	                            je 0x4002dbf	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d55	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d5c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d60	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d63	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d69	            0x7414	                            je 0x4002dbf	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d6b	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d72	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d76	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d7d	            0xeb7c	                           jmp 0x4002e3b	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x2d7f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d86	          0x488b00	                    mov rax, qword [rax]	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d89	          0x4885c0	                           test rax, rax	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d8c	            0x7438	                            je 0x4002e06	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d8e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d95	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d99	          0x4885c0	                           test rax, rax	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d9c	            0x7528	                           jne 0x4002e06	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2d9e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2da5	          0x488b00	                    mov rax, qword [rax]	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2da8	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2dab	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2db1	            0x7413	                            je 0x4002e06	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2db3	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2dba	          0x488b00	                    mov rax, qword [rax]	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2dbd	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2dc4	            0xeb35	                           jmp 0x4002e3b	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x2dc6	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2dcd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2dd1	          0x4885c0	                           test rax, rax	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2dd4	            0x7414	                            je 0x4002e2a	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2dd6	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2ddd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2de1	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2de8	            0xeb11	                           jmp 0x4002e3b	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x2dea	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1727	undo.c	FUNCTION_35	WHILE_1	ELSE_6
0x2df1	          0x488b00	                    mov rax, qword [rax]	      1727	undo.c	FUNCTION_35	WHILE_1	ELSE_6
0x2df4	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1727	undo.c	FUNCTION_35	WHILE_1	ELSE_6
0x2dfb	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1702	undo.c	FUNCTION_35	WHILE_1
0x2e03	     0xf85bcfeffff	                           jne 0x4002d05	      1702	undo.c	FUNCTION_35	WHILE_1
0x2e09	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x2e10	      0xba02000000	                              mov edx, 2	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x2e15	      0xbeaae70000	                         mov esi, 0xe7aa	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x2e1a	          0x4889c7	                            mov rdi, rax	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x2e1d	      0xe887e5ffff	               call sym.undo_write_bytes	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x2e22	          0x83f801	                              cmp eax, 1	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x2e25	            0x750a	                           jne 0x4002e71	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x2e27	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 1	      1731	undo.c	FUNCTION_35	IF_31
0x2e31	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e38	          0x4885c0	                           test rax, rax	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e3b	            0x7423	                            je 0x4002ea0	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e3d	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e44	          0x4889c7	                            mov rdi, rax	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e47	      0xe883e3ffff	                     call sym.undo_flush	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e4c	            0x85c0	                           test eax, eax	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e4e	            0x7510	                           jne 0x4002ea0	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x2e50	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 0	      1742	undo.c	FUNCTION_35	IF_33
0x2e5a	            0xeb04	                           jmp 0x4002ea0	      1742	undo.c	FUNCTION_35	IF_33
0x2e5c	              0x90	                                     nop	      1695	undo.c	FUNCTION_35	IF_24
0x2e5d	            0xeb01	                           jmp 0x4002ea0	      1695	undo.c	FUNCTION_35	IF_24
0x2e5f	              0x90	                                     nop	      1712	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26
0x2e60	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      1746	undo.c	FUNCTION_35	CALL_50
0x2e67	          0x4889c7	                            mov rdi, rax	      1746	undo.c	FUNCTION_35	CALL_50
0x2e6a	      0xe800000000	                          call 0x4002eaf	      1746	undo.c	FUNCTION_35	CALL_50
0x2e6f	    0x83bd5cfeffff	              cmp dword [rbp - 0x1a4], 0	      1747	undo.c	FUNCTION_35	IF_34
0x2e76	            0x751f	                           jne 0x4002ed7	      1747	undo.c	FUNCTION_35	IF_34
0x2e78	      0xbf00000000	                              mov edi, 0	      1748	undo.c	FUNCTION_35	CALL_52
0x2e7d	      0xe800000000	                          call 0x4002ec2	      1748	undo.c	FUNCTION_35	CALL_52
0x2e82	          0x4889c2	                            mov rdx, rax	      1748	undo.c	FUNCTION_35	CALL_52
0x2e85	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1748	undo.c	FUNCTION_35	CALL_52
0x2e8c	          0x4889c6	                            mov rsi, rax	      1748	undo.c	FUNCTION_35	CALL_52
0x2e8f	          0x4889d7	                            mov rdi, rdx	      1748	undo.c	FUNCTION_35	CALL_52
0x2e92	      0xe800000000	                          call 0x4002ed7	      1748	undo.c	FUNCTION_35	CALL_52
0x2e97	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1757	undo.c	FUNCTION_35	IF_36
0x2e9e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1757	undo.c	FUNCTION_35	IF_36
0x2ea5	          0x4885c0	                           test rax, rax	      1757	undo.c	FUNCTION_35	IF_36
0x2ea8	            0x744e	                            je 0x4002f38	      1757	undo.c	FUNCTION_35	IF_36
0x2eaa	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x2eb1	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x2eb8	          0x4889c7	                            mov rdi, rax	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x2ebb	      0xe800000000	                          call 0x4002f00	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x2ec0	    0x48898588feff	            mov qword [rbp - 0x178], rax	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x2ec7	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x2ece	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x2ed5	          0x4889d6	                            mov rsi, rdx	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x2ed8	          0x4889c7	                            mov rdi, rax	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x2edb	      0xe800000000	                          call 0x4002f20	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x2ee0	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x2ee7	          0x4889c7	                            mov rdi, rax	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x2eea	      0xe800000000	                          call 0x4002f2f	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x2eef	            0xeb07	                           jmp 0x4002f38	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x2ef1	              0x90	                                     nop	      1599	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x2ef2	            0xeb04	                           jmp 0x4002f38	      1599	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x2ef4	              0x90	                                     nop	      1621	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x2ef5	            0xeb01	                           jmp 0x4002f38	      1621	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x2ef7	              0x90	                                     nop	      1634	undo.c	FUNCTION_35	IF_17
0x2ef8	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1770	undo.c	FUNCTION_35	IF_37
0x2eff	          0x4885c0	                           test rax, rax	      1770	undo.c	FUNCTION_35	IF_37
0x2f02	            0x740f	                            je 0x4002f53	      1770	undo.c	FUNCTION_35	IF_37
0x2f04	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1771	undo.c	FUNCTION_35	CALL_57
0x2f0b	          0x4889c7	                            mov rdi, rax	      1771	undo.c	FUNCTION_35	CALL_57
0x2f0e	      0xe800000000	                          call 0x4002f53	      1771	undo.c	FUNCTION_35	CALL_57
0x2f13	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1772	undo.c	FUNCTION_35	CALL_58
0x2f1a	          0x4889c7	                            mov rdi, rax	      1772	undo.c	FUNCTION_35	CALL_58
0x2f1d	      0xe800000000	                          call 0x4002f62	      1772	undo.c	FUNCTION_35	CALL_58
0x2f22	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1774	undo.c	FUNCTION_35	IF_38
0x2f29	    0x483b8548feff	            cmp rax, qword [rbp - 0x1b8]	      1774	undo.c	FUNCTION_35	IF_38
0x2f30	            0x7412	                            je 0x4002f84	      1774	undo.c	FUNCTION_35	IF_38
0x2f32	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1775	undo.c	FUNCTION_35	CALL_59
0x2f39	          0x4889c7	                            mov rdi, rax	      1775	undo.c	FUNCTION_35	CALL_59
0x2f3c	      0xe800000000	                          call 0x4002f81	      1775	undo.c	FUNCTION_35	CALL_59
0x2f41	            0xeb01	                           jmp 0x4002f84	      1775	undo.c	FUNCTION_35	CALL_59
0x2f43	              0x90	                                     nop	      1549	undo.c	FUNCTION_35	IF_1	IF_2
0x2f44	        0x488b45f8	                mov rax, qword [rbp - 8]	      1776	undo.c	FUNCTION_35
0x2f48	    0x644833042528	                xor rax, qword fs:[0x28]	      1776	undo.c	FUNCTION_35
0x2f51	            0x7405	                            je 0x4002f98	      1776	undo.c	FUNCTION_35
0x2f53	      0xe800000000	                          call 0x4002f98	      1776	undo.c	FUNCTION_35
0x2f58	              0xc9	                                   leave	      1776	undo.c	FUNCTION_35
0x2f59	              0xc3	                                     ret	      1776	undo.c	FUNCTION_35
unserialize_visualinfo	FOR,0:ELSE,0:functions,0:IF,0:CALL,4:DO,0:WHILE,0:SWITCH,0	31
0x273f	              0x55	                                push rbp	      1495	undo.c	FUNCTION_34
0x2740	          0x4889e5	                            mov rbp, rsp	      1495	undo.c	FUNCTION_34
0x2743	        0x4883ec10	                           sub rsp, 0x10	      1495	undo.c	FUNCTION_34
0x2747	        0x48897df8	                mov qword [rbp - 8], rdi	      1495	undo.c	FUNCTION_34
0x274b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1495	undo.c	FUNCTION_34
0x274f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1496	undo.c	FUNCTION_34	CALL_1
0x2753	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	undo.c	FUNCTION_34	CALL_1
0x2757	          0x4889d6	                            mov rsi, rdx	      1496	undo.c	FUNCTION_34	CALL_1
0x275a	          0x4889c7	                            mov rdi, rax	      1496	undo.c	FUNCTION_34	CALL_1
0x275d	      0xe8c3feffff	                call sym.unserialize_pos	      1496	undo.c	FUNCTION_34	CALL_1
0x2762	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1497	undo.c	FUNCTION_34	CALL_2
0x2766	        0x488d5010	                   lea rdx, [rax + 0x10]	      1497	undo.c	FUNCTION_34	CALL_2
0x276a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1497	undo.c	FUNCTION_34	CALL_2
0x276e	          0x4889d6	                            mov rsi, rdx	      1497	undo.c	FUNCTION_34	CALL_2
0x2771	          0x4889c7	                            mov rdi, rax	      1497	undo.c	FUNCTION_34	CALL_2
0x2774	      0xe8acfeffff	                call sym.unserialize_pos	      1497	undo.c	FUNCTION_34	CALL_2
0x2779	        0x488b45f8	                mov rax, qword [rbp - 8]	      1498	undo.c	FUNCTION_34	CALL_3
0x277d	          0x4889c7	                            mov rdi, rax	      1498	undo.c	FUNCTION_34	CALL_3
0x2780	      0xe8f2ecffff	                   call sym.undo_read_4c	      1498	undo.c	FUNCTION_34	CALL_3
0x2785	            0x89c2	                            mov edx, eax	      1498	undo.c	FUNCTION_34	CALL_3
0x2787	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1498	undo.c	FUNCTION_34	CALL_3
0x278b	          0x895020	             mov dword [rax + 0x20], edx	      1498	undo.c	FUNCTION_34	CALL_3
0x278e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1499	undo.c	FUNCTION_34	CALL_4
0x2792	          0x4889c7	                            mov rdi, rax	      1499	undo.c	FUNCTION_34	CALL_4
0x2795	      0xe8ddecffff	                   call sym.undo_read_4c	      1499	undo.c	FUNCTION_34	CALL_4
0x279a	            0x89c2	                            mov edx, eax	      1499	undo.c	FUNCTION_34	CALL_4
0x279c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1499	undo.c	FUNCTION_34	CALL_4
0x27a0	          0x895024	             mov dword [rax + 0x24], edx	      1499	undo.c	FUNCTION_34	CALL_4
0x27a3	              0x90	                                     nop	      1500	undo.c	FUNCTION_34
0x27a4	              0xc9	                                   leave	      1500	undo.c	FUNCTION_34
0x27a5	              0xc3	                                     ret	      1500	undo.c	FUNCTION_34
undo_read_time	FOR,1:ELSE,0:functions,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0	44
0x1604	              0x55	                                push rbp	      1043	undo.c	FUNCTION_23
0x1605	          0x4889e5	                            mov rbp, rsp	      1043	undo.c	FUNCTION_23
0x1608	        0x4883ec30	                           sub rsp, 0x30	      1043	undo.c	FUNCTION_23
0x160c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1043	undo.c	FUNCTION_23
0x1610	    0x64488b042528	                mov rax, qword fs:[0x28]	      1043	undo.c	FUNCTION_23
0x1619	        0x488945f8	                mov qword [rbp - 8], rax	      1043	undo.c	FUNCTION_23
0x161d	            0x31c0	                            xor eax, eax	      1043	undo.c	FUNCTION_23
0x161f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1045	undo.c	FUNCTION_23	IF_1
0x1623	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1045	undo.c	FUNCTION_23	IF_1
0x1627	          0x4885c0	                           test rax, rax	      1045	undo.c	FUNCTION_23	IF_1
0x162a	            0x7458	                            je 0x40016c4	      1045	undo.c	FUNCTION_23	IF_1
0x162c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1048	undo.c	FUNCTION_23	IF_1
0x1634	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x1638	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x163c	      0xba08000000	                              mov edx, 8	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x1641	          0x4889ce	                            mov rsi, rcx	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x1644	          0x4889c7	                            mov rdi, rax	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x1647	      0xe85e000000	                      call sym.undo_read	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x164c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x1653	            0xeb23	                           jmp 0x40016b8	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x1655	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x1659	        0x48c1e008	                              shl rax, 8	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x165d	          0x4889c2	                            mov rdx, rax	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x1660	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x1663	            0x4898	                                    cdqe	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x1665	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x166a	           0xfb6c0	                           movzx eax, al	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x166d	          0x4801d0	                            add rax, rdx	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x1670	        0x488945e8	             mov qword [rbp - 0x18], rax	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x1674	        0x8345e401	               add dword [rbp - 0x1c], 1	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x1678	        0x837de407	               cmp dword [rbp - 0x1c], 7	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x167c	            0x7ed7	                           jle 0x4001695	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x167e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1054	undo.c	FUNCTION_23	IF_1
0x1682	            0xeb10	                           jmp 0x40016d4	      1054	undo.c	FUNCTION_23	IF_1
0x1684	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1057	undo.c	FUNCTION_23	CALL_2
0x1688	        0x488b4008	                mov rax, qword [rax + 8]	      1057	undo.c	FUNCTION_23	CALL_2
0x168c	          0x4889c7	                            mov rdi, rax	      1057	undo.c	FUNCTION_23	CALL_2
0x168f	      0xe800000000	                          call 0x40016d4	      1057	undo.c	FUNCTION_23	CALL_2
0x1694	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1058	undo.c	FUNCTION_23
0x1698	    0x644833342528	                xor rsi, qword fs:[0x28]	      1058	undo.c	FUNCTION_23
0x16a1	            0x7405	                            je 0x40016e8	      1058	undo.c	FUNCTION_23
0x16a3	      0xe800000000	                          call 0x40016e8	      1058	undo.c	FUNCTION_23
0x16a8	              0xc9	                                   leave	      1058	undo.c	FUNCTION_23
0x16a9	              0xc3	                                     ret	      1058	undo.c	FUNCTION_23
curbufIsChanged	FOR,0:ELSE,0:functions,0:IF,0:CALL,1:DO,0:WHILE,0:SWITCH,0	7
0x6c47	              0x55	                                push rbp	      3548	undo.c	FUNCTION_65
0x6c48	          0x4889e5	                            mov rbp, rsp	      3548	undo.c	FUNCTION_65
0x6c4b	    0x488b05000000	            mov rax, qword [0x04006c92] 	      3549	undo.c	FUNCTION_65	CALL_1
0x6c52	          0x4889c7	                            mov rdi, rax	      3549	undo.c	FUNCTION_65	CALL_1
0x6c55	      0xe800000000	                          call 0x4006c9a	      3549	undo.c	FUNCTION_65	CALL_1
0x6c5a	              0x5d	                                 pop rbp	      3550	undo.c	FUNCTION_65
0x6c5b	              0xc3	                                     ret	      3550	undo.c	FUNCTION_65
u_inssub	FOR,0:ELSE,0:functions,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0	19
0x103	              0x55	                                push rbp	       303	undo.c	FUNCTION_6
0x104	          0x4889e5	                            mov rbp, rsp	       303	undo.c	FUNCTION_6
0x107	        0x4883ec10	                           sub rsp, 0x10	       303	undo.c	FUNCTION_6
0x10b	        0x48897df8	                mov qword [rbp - 8], rdi	       303	undo.c	FUNCTION_6
0x10f	    0x8b0500000000	            mov eax, dword [0x04000155] 	       304	undo.c	FUNCTION_6	IF_1
0x115	            0x85c0	                           test eax, eax	       304	undo.c	FUNCTION_6	IF_1
0x117	            0x7407	                            je 0x4000160	       304	undo.c	FUNCTION_6	IF_1
0x119	      0xb801000000	                              mov eax, 1	       305	undo.c	FUNCTION_6	IF_1
0x11e	            0xeb21	                           jmp 0x4000181	       305	undo.c	FUNCTION_6	IF_1
0x120	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	undo.c	FUNCTION_6	CALL_1
0x124	        0x488d5001	                      lea rdx, [rax + 1]	       307	undo.c	FUNCTION_6	CALL_1
0x128	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	undo.c	FUNCTION_6	CALL_1
0x12c	        0x488d78ff	                      lea rdi, [rax - 1]	       307	undo.c	FUNCTION_6	CALL_1
0x130	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	undo.c	FUNCTION_6	CALL_1
0x134	      0xb900000000	                              mov ecx, 0	       307	undo.c	FUNCTION_6	CALL_1
0x139	          0x4889c6	                            mov rsi, rax	       307	undo.c	FUNCTION_6	CALL_1
0x13c	      0xe800000000	                          call 0x4000181	       307	undo.c	FUNCTION_6	CALL_1
0x141	              0xc9	                                   leave	       308	undo.c	FUNCTION_6
0x142	              0xc3	                                     ret	       308	undo.c	FUNCTION_6
u_compute_hash	FOR,1:ELSE,0:functions,0:IF,0:CALL,5:DO,0:WHILE,0:SWITCH,0	42
0xc23	              0x55	                                push rbp	       753	undo.c	FUNCTION_11
0xc24	          0x4889e5	                            mov rbp, rsp	       753	undo.c	FUNCTION_11
0xc27	    0x4881ec900000	                           sub rsp, 0x90	       753	undo.c	FUNCTION_11
0xc2e	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       753	undo.c	FUNCTION_11
0xc35	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	undo.c	FUNCTION_11
0xc3e	        0x488945f8	                mov qword [rbp - 8], rax	       753	undo.c	FUNCTION_11
0xc42	            0x31c0	                            xor eax, eax	       753	undo.c	FUNCTION_11
0xc44	        0x488d4590	                   lea rax, [rbp - 0x70]	       758	undo.c	FUNCTION_11	CALL_1
0xc48	          0x4889c7	                            mov rdi, rax	       758	undo.c	FUNCTION_11	CALL_1
0xc4b	      0xe800000000	                          call 0x4000c90	       758	undo.c	FUNCTION_11	CALL_1
0xc50	    0x48c745800100	               mov qword [rbp - 0x80], 1	       759	undo.c	FUNCTION_11	FOR_1
0xc58	            0xeb37	                           jmp 0x4000cd1	       759	undo.c	FUNCTION_11	FOR_1
0xc5a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0xc5e	          0x4889c7	                            mov rdi, rax	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0xc61	      0xe800000000	                          call 0x4000ca6	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0xc66	        0x48894588	             mov qword [rbp - 0x78], rax	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0xc6a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc6e	          0x4889c7	                            mov rdi, rax	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc71	      0xe800000000	                          call 0x4000cb6	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc76	          0x8d5001	                      lea edx, [rax + 1]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc79	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc7d	        0x488d4590	                   lea rax, [rbp - 0x70]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc81	          0x4889ce	                            mov rsi, rcx	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc84	          0x4889c7	                            mov rdi, rax	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc87	      0xe800000000	                          call 0x4000ccc	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0xc8c	      0x4883458001	               add qword [rbp - 0x80], 1	       759	undo.c	FUNCTION_11	FOR_1
0xc91	    0x488b05000000	            mov rax, qword [0x04000cd8] 	       759	undo.c	FUNCTION_11	FOR_1
0xc98	          0x488b00	                    mov rax, qword [rax]	       759	undo.c	FUNCTION_11	FOR_1
0xc9b	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       759	undo.c	FUNCTION_11	FOR_1
0xc9f	            0x7db9	                           jge 0x4000c9a	       759	undo.c	FUNCTION_11	FOR_1
0xca1	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       764	undo.c	FUNCTION_11	CALL_5
0xca8	        0x488d4590	                   lea rax, [rbp - 0x70]	       764	undo.c	FUNCTION_11	CALL_5
0xcac	          0x4889d6	                            mov rsi, rdx	       764	undo.c	FUNCTION_11	CALL_5
0xcaf	          0x4889c7	                            mov rdi, rax	       764	undo.c	FUNCTION_11	CALL_5
0xcb2	      0xe800000000	                          call 0x4000cf7	       764	undo.c	FUNCTION_11	CALL_5
0xcb7	              0x90	                                     nop	       765	undo.c	FUNCTION_11
0xcb8	        0x488b45f8	                mov rax, qword [rbp - 8]	       765	undo.c	FUNCTION_11
0xcbc	    0x644833042528	                xor rax, qword fs:[0x28]	       765	undo.c	FUNCTION_11
0xcc5	            0x7405	                            je 0x4000d0c	       765	undo.c	FUNCTION_11
0xcc7	      0xe800000000	                          call 0x4000d0c	       765	undo.c	FUNCTION_11
0xccc	              0xc9	                                   leave	       765	undo.c	FUNCTION_11
0xccd	              0xc3	                                     ret	       765	undo.c	FUNCTION_11
read_string_decrypt	FOR,0:ELSE,0:functions,0:IF,3:CALL,4:DO,0:WHILE,0:SWITCH,0	52
0x185b	              0x55	                                push rbp	      1121	undo.c	FUNCTION_25
0x185c	          0x4889e5	                            mov rbp, rsp	      1121	undo.c	FUNCTION_25
0x185f	        0x4883ec20	                           sub rsp, 0x20	      1121	undo.c	FUNCTION_25
0x1863	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1121	undo.c	FUNCTION_25
0x1867	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1121	undo.c	FUNCTION_25
0x186a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1122	undo.c	FUNCTION_25	CALL_1
0x186d	          0x83c001	                              add eax, 1	      1122	undo.c	FUNCTION_25	CALL_1
0x1870	            0x89c7	                            mov edi, eax	      1122	undo.c	FUNCTION_25	CALL_1
0x1872	      0xe800000000	                          call 0x40018b7	      1122	undo.c	FUNCTION_25	CALL_1
0x1877	        0x488945f8	                mov qword [rbp - 8], rax	      1122	undo.c	FUNCTION_25	CALL_1
0x187b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1124	undo.c	FUNCTION_25	IF_1
0x1880	            0x747d	                            je 0x400193f	      1124	undo.c	FUNCTION_25	IF_1
0x1882	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x1886	            0x7e30	                           jle 0x40018f8	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x1888	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x188b	          0x4863d0	                         movsxd rdx, eax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x188e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x1892	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x1896	          0x4889ce	                            mov rsi, rcx	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x1899	          0x4889c7	                            mov rdi, rax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x189c	      0xe809feffff	                      call sym.undo_read	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x18a1	            0x85c0	                           test eax, eax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x18a3	            0x7513	                           jne 0x40018f8	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x18a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x18a9	          0x4889c7	                            mov rdi, rax	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x18ac	      0xe800000000	                          call 0x40018f1	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x18b1	      0xb800000000	                              mov eax, 0	      1129	undo.c	FUNCTION_25	IF_1	IF_2
0x18b6	            0xeb4b	                           jmp 0x4001943	      1129	undo.c	FUNCTION_25	IF_1	IF_2
0x18b8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1131	undo.c	FUNCTION_25	IF_1
0x18bb	          0x4863d0	                         movsxd rdx, eax	      1131	undo.c	FUNCTION_25	IF_1
0x18be	        0x488b45f8	                mov rax, qword [rbp - 8]	      1131	undo.c	FUNCTION_25	IF_1
0x18c2	          0x4801d0	                            add rax, rdx	      1131	undo.c	FUNCTION_25	IF_1
0x18c5	          0xc60000	                       mov byte [rax], 0	      1131	undo.c	FUNCTION_25	IF_1
0x18c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18d0	          0x4885c0	                           test rax, rax	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18d3	            0x742a	                            je 0x400193f	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18d9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18dd	          0x4885c0	                           test rax, rax	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18e0	            0x751d	                           jne 0x400193f	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x18e2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18e5	          0x4863d0	                         movsxd rdx, eax	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18f0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18f4	          0x4889ce	                            mov rsi, rcx	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18f7	          0x4889c7	                            mov rdi, rax	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18fa	      0xe800000000	                          call 0x400193f	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x18ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1137	undo.c	FUNCTION_25
0x1903	              0xc9	                                   leave	      1138	undo.c	FUNCTION_25
0x1904	              0xc3	                                     ret	      1138	undo.c	FUNCTION_25
undo_allowed	FOR,0:ELSE,0:functions,0:IF,3:CALL,6:DO,0:WHILE,0:SWITCH,0	33
0x1a2	              0x55	                                push rbp	       333	undo.c	FUNCTION_8
0x1a3	          0x4889e5	                            mov rbp, rsp	       333	undo.c	FUNCTION_8
0x1a6	    0x488b05000000	            mov rax, qword [0x040001ed] 	       335	undo.c	FUNCTION_8	IF_1
0x1ad	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       335	undo.c	FUNCTION_8	IF_1
0x1b3	            0x85c0	                           test eax, eax	       335	undo.c	FUNCTION_8	IF_1
0x1b5	            0x7519	                           jne 0x4000210	       335	undo.c	FUNCTION_8	IF_1
0x1b7	      0xbf00000000	                              mov edi, 0	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x1bc	      0xe800000000	                          call 0x4000201	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x1c1	          0x4889c7	                            mov rdi, rax	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x1c4	      0xe800000000	                          call 0x4000209	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x1c9	      0xb800000000	                              mov eax, 0	       338	undo.c	FUNCTION_8	IF_1
0x1ce	            0xeb4b	                           jmp 0x400025b	       338	undo.c	FUNCTION_8	IF_1
0x1d0	    0x8b0500000000	            mov eax, dword [0x04000216] 	       343	undo.c	FUNCTION_8	IF_2
0x1d6	            0x85c0	                           test eax, eax	       343	undo.c	FUNCTION_8	IF_2
0x1d8	            0x7419	                            je 0x4000233	       343	undo.c	FUNCTION_8	IF_2
0x1da	      0xbf00000000	                              mov edi, 0	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x1df	      0xe800000000	                          call 0x4000224	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x1e4	          0x4889c7	                            mov rdi, rax	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x1e7	      0xe800000000	                          call 0x400022c	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x1ec	      0xb800000000	                              mov eax, 0	       346	undo.c	FUNCTION_8	IF_2
0x1f1	            0xeb28	                           jmp 0x400025b	       346	undo.c	FUNCTION_8	IF_2
0x1f3	    0x8b0500000000	            mov eax, dword [0x04000239] 	       352	undo.c	FUNCTION_8	IF_3
0x1f9	            0x85c0	                           test eax, eax	       352	undo.c	FUNCTION_8	IF_3
0x1fb	            0x7419	                            je 0x4000256	       352	undo.c	FUNCTION_8	IF_3
0x1fd	      0xbf00000000	                              mov edi, 0	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x202	      0xe800000000	                          call 0x4000247	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x207	          0x4889c7	                            mov rdi, rax	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x20a	      0xe800000000	                          call 0x400024f	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x20f	      0xb800000000	                              mov eax, 0	       355	undo.c	FUNCTION_8	IF_3
0x214	            0xeb05	                           jmp 0x400025b	       355	undo.c	FUNCTION_8	IF_3
0x216	      0xb801000000	                              mov eax, 1	       358	undo.c	FUNCTION_8
0x21b	              0x5d	                                 pop rbp	       359	undo.c	FUNCTION_8
0x21c	              0xc3	                                     ret	       359	undo.c	FUNCTION_8
u_clearall	FOR,0:ELSE,0:functions,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0	24
0x67ee	              0x55	                                push rbp	      3411	undo.c	FUNCTION_57
0x67ef	          0x4889e5	                            mov rbp, rsp	      3411	undo.c	FUNCTION_57
0x67f2	        0x48897df8	                mov qword [rbp - 8], rdi	      3411	undo.c	FUNCTION_57
0x67f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x67fa	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      3412	undo.c	FUNCTION_57
0x6805	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x6809	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      3412	undo.c	FUNCTION_57
0x6810	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x6814	    0x488990181200	          mov qword [rax + 0x1218], rdx 	      3412	undo.c	FUNCTION_57
0x681b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x681f	    0x488b90181200	          mov rdx, qword [rax + 0x1218] 	      3412	undo.c	FUNCTION_57
0x6826	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x682a	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      3412	undo.c	FUNCTION_57
0x6831	        0x488b45f8	                mov rax, qword [rbp - 8]	      3413	undo.c	FUNCTION_57
0x6835	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      3413	undo.c	FUNCTION_57
0x683f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3414	undo.c	FUNCTION_57
0x6843	    0xc78030120000	            mov dword [rax + 0x1230], 0 	      3414	undo.c	FUNCTION_57
0x684d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3415	undo.c	FUNCTION_57
0x6851	    0x48c780601200	            mov qword [rax + 0x1260], 0 	      3415	undo.c	FUNCTION_57
0x685c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3416	undo.c	FUNCTION_57
0x6860	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      3416	undo.c	FUNCTION_57
0x686b	              0x90	                                     nop	      3417	undo.c	FUNCTION_57
0x686c	              0x5d	                                 pop rbp	      3417	undo.c	FUNCTION_57
0x686d	              0xc3	                                     ret	      3417	undo.c	FUNCTION_57
u_save	FOR,0:ELSE,0:functions,0:IF,3:CALL,2:DO,0:WHILE,0:SWITCH,0	40
0x2f	              0x55	                                push rbp	       265	undo.c	FUNCTION_4
0x30	          0x4889e5	                            mov rbp, rsp	       265	undo.c	FUNCTION_4
0x33	        0x4883ec10	                           sub rsp, 0x10	       265	undo.c	FUNCTION_4
0x37	        0x48897df8	                mov qword [rbp - 8], rdi	       265	undo.c	FUNCTION_4
0x3b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       265	undo.c	FUNCTION_4
0x3f	    0x8b0500000000	            mov eax, dword [0x04000085] 	       266	undo.c	FUNCTION_4	IF_1
0x45	            0x85c0	                           test eax, eax	       266	undo.c	FUNCTION_4	IF_1
0x47	            0x7407	                            je 0x4000090	       266	undo.c	FUNCTION_4	IF_1
0x49	      0xb801000000	                              mov eax, 1	       267	undo.c	FUNCTION_4	IF_1
0x4e	            0xeb6d	                           jmp 0x40000fd	       267	undo.c	FUNCTION_4	IF_1
0x50	    0x488b05000000	            mov rax, qword [0x04000097] 	       269	undo.c	FUNCTION_4	IF_2
0x57	          0x488b00	                    mov rax, qword [rax]	       269	undo.c	FUNCTION_4	IF_2
0x5a	        0x483b45f8	                cmp rax, qword [rbp - 8]	       269	undo.c	FUNCTION_4	IF_2
0x5e	            0x7c1e	                            jl 0x40000be	       269	undo.c	FUNCTION_4	IF_2
0x60	        0x488b45f8	                mov rax, qword [rbp - 8]	       270	undo.c	FUNCTION_4	IF_2
0x64	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       270	undo.c	FUNCTION_4	IF_2
0x68	            0x7d14	                           jge 0x40000be	       270	undo.c	FUNCTION_4	IF_2
0x6a	    0x488b05000000	            mov rax, qword [0x040000b1] 	       271	undo.c	FUNCTION_4	IF_2
0x71	          0x488b00	                    mov rax, qword [rax]	       271	undo.c	FUNCTION_4	IF_2
0x74	        0x4883c001	                              add rax, 1	       271	undo.c	FUNCTION_4	IF_2
0x78	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       271	undo.c	FUNCTION_4	IF_2
0x7c	            0x7d07	                           jge 0x40000c5	       271	undo.c	FUNCTION_4	IF_2
0x7e	      0xb800000000	                              mov eax, 0	       272	undo.c	FUNCTION_4	IF_2
0x83	            0xeb38	                           jmp 0x40000fd	       272	undo.c	FUNCTION_4	IF_2
0x85	        0x488b45f8	                mov rax, qword [rbp - 8]	       274	undo.c	FUNCTION_4	IF_3
0x89	        0x4883c002	                              add rax, 2	       274	undo.c	FUNCTION_4	IF_3
0x8d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       274	undo.c	FUNCTION_4	IF_3
0x91	            0x7510	                           jne 0x40000e3	       274	undo.c	FUNCTION_4	IF_3
0x93	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	undo.c	FUNCTION_4	CALL_1
0x97	        0x4883c001	                              add rax, 1	       275	undo.c	FUNCTION_4	CALL_1
0x9b	          0x4889c7	                            mov rdi, rax	       275	undo.c	FUNCTION_4	CALL_1
0x9e	      0xe800000000	                          call 0x40000e3	       275	undo.c	FUNCTION_4	CALL_1
0xa3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       277	undo.c	FUNCTION_4	CALL_2
0xa7	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	undo.c	FUNCTION_4	CALL_2
0xab	      0xb900000000	                              mov ecx, 0	       277	undo.c	FUNCTION_4	CALL_2
0xb0	      0xba00000000	                              mov edx, 0	       277	undo.c	FUNCTION_4	CALL_2
0xb5	          0x4889c7	                            mov rdi, rax	       277	undo.c	FUNCTION_4	CALL_2
0xb8	      0xe800000000	                          call 0x40000fd	       277	undo.c	FUNCTION_4	CALL_2
0xbd	              0xc9	                                   leave	       278	undo.c	FUNCTION_4
0xbe	              0xc3	                                     ret	       278	undo.c	FUNCTION_4
ex_undojoin	FOR,0:ELSE,1:functions,0:IF,4:CALL,3:DO,0:WHILE,0:SWITCH,0	34
0x60a2	              0x55	                                push rbp	      3138	undo.c	FUNCTION_46
0x60a3	          0x4889e5	                            mov rbp, rsp	      3138	undo.c	FUNCTION_46
0x60a6	        0x4883ec10	                           sub rsp, 0x10	      3138	undo.c	FUNCTION_46
0x60aa	        0x48897df8	                mov qword [rbp - 8], rdi	      3138	undo.c	FUNCTION_46
0x60ae	    0x488b05000000	            mov rax, qword [0x040060f5] 	      3139	undo.c	FUNCTION_46	IF_1
0x60b5	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3139	undo.c	FUNCTION_46	IF_1
0x60bc	          0x4885c0	                           test rax, rax	      3139	undo.c	FUNCTION_46	IF_1
0x60bf	            0x7455	                            je 0x4006156	      3139	undo.c	FUNCTION_46	IF_1
0x60c1	    0x488b05000000	            mov rax, qword [0x04006108] 	      3141	undo.c	FUNCTION_46	IF_2
0x60c8	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3141	undo.c	FUNCTION_46	IF_2
0x60cf	          0x4885c0	                           test rax, rax	      3141	undo.c	FUNCTION_46	IF_2
0x60d2	            0x7414	                            je 0x4006128	      3141	undo.c	FUNCTION_46	IF_2
0x60d4	      0xbf00000000	                              mov edi, 0	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x60d9	      0xe800000000	                          call 0x400611e	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x60de	          0x4889c7	                            mov rdi, rax	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x60e1	      0xe800000000	                          call 0x4006126	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x60e6	            0xeb35	                           jmp 0x400615d	      3144	undo.c	FUNCTION_46	IF_2
0x60e8	    0x488b05000000	            mov rax, qword [0x0400612f] 	      3146	undo.c	FUNCTION_46	IF_3
0x60ef	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      3146	undo.c	FUNCTION_46	IF_3
0x60f5	            0x85c0	                           test eax, eax	      3146	undo.c	FUNCTION_46	IF_3
0x60f7	            0x7420	                            je 0x4006159	      3146	undo.c	FUNCTION_46	IF_3
0x60f9	      0xe81fa1ffff	                  call sym.get_undolevel	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x60fe	          0x4885c0	                           test rax, rax	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x6101	            0x7819	                            js 0x400615c	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x6103	    0x488b05000000	            mov rax, qword [0x0400614a] 	      3152	undo.c	FUNCTION_46	ELSE_1
0x610a	    0xc78034120000	            mov dword [rax + 0x1234], 0 	      3152	undo.c	FUNCTION_46	ELSE_1
0x6114	            0xeb07	                           jmp 0x400615d	      3152	undo.c	FUNCTION_46	ELSE_1
0x6116	              0x90	                                     nop	      3140	undo.c	FUNCTION_46	IF_1
0x6117	            0xeb04	                           jmp 0x400615d	      3140	undo.c	FUNCTION_46	IF_1
0x6119	              0x90	                                     nop	      3147	undo.c	FUNCTION_46	IF_3
0x611a	            0xeb01	                           jmp 0x400615d	      3147	undo.c	FUNCTION_46	IF_3
0x611c	              0x90	                                     nop	      3149	undo.c	FUNCTION_46	IF_4
0x611d	              0xc9	                                   leave	      3153	undo.c	FUNCTION_46	ELSE_1
0x611e	              0xc3	                                     ret	      3153	undo.c	FUNCTION_46	ELSE_1
u_unch_branch	FOR,1:ELSE,0:functions,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0	29
0x633b	              0x55	                                push rbp	      3224	undo.c	FUNCTION_50
0x633c	          0x4889e5	                            mov rbp, rsp	      3224	undo.c	FUNCTION_50
0x633f	        0x4883ec20	                           sub rsp, 0x20	      3224	undo.c	FUNCTION_50
0x6343	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3224	undo.c	FUNCTION_50
0x6347	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3227	undo.c	FUNCTION_50	FOR_1
0x634b	        0x488945f8	                mov qword [rbp - 8], rax	      3227	undo.c	FUNCTION_50	FOR_1
0x634f	            0xeb3c	                           jmp 0x40063cd	      3227	undo.c	FUNCTION_50	FOR_1
0x6351	        0x488b45f8	                mov rax, qword [rbp - 8]	      3229	undo.c	FUNCTION_50	FOR_1
0x6355	          0x8b4058	            mov eax, dword [rax + 0x58] 	      3229	undo.c	FUNCTION_50	FOR_1
0x6358	          0x83c801	                               or eax, 1	      3229	undo.c	FUNCTION_50	FOR_1
0x635b	            0x89c2	                            mov edx, eax	      3229	undo.c	FUNCTION_50	FOR_1
0x635d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3229	undo.c	FUNCTION_50	FOR_1
0x6361	          0x895058	             mov dword [rax + 0x58], edx	      3229	undo.c	FUNCTION_50	FOR_1
0x6364	        0x488b45f8	                mov rax, qword [rbp - 8]	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x6368	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x636c	          0x4885c0	                           test rax, rax	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x636f	            0x7410	                            je 0x40063c1	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x6371	        0x488b45f8	                mov rax, qword [rbp - 8]	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x6375	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x6379	          0x4889c7	                            mov rdi, rax	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x637c	      0xe8baffffff	                  call sym.u_unch_branch	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x6381	        0x488b45f8	                mov rax, qword [rbp - 8]	      3227	undo.c	FUNCTION_50	FOR_1
0x6385	        0x488b4008	                mov rax, qword [rax + 8]	      3227	undo.c	FUNCTION_50	FOR_1
0x6389	        0x488945f8	                mov qword [rbp - 8], rax	      3227	undo.c	FUNCTION_50	FOR_1
0x638d	      0x48837df800	                  cmp qword [rbp - 8], 0	      3227	undo.c	FUNCTION_50	FOR_1
0x6392	            0x75bd	                           jne 0x4006391	      3227	undo.c	FUNCTION_50	FOR_1
0x6394	              0x90	                                     nop	      3233	undo.c	FUNCTION_50
0x6395	              0xc9	                                   leave	      3233	undo.c	FUNCTION_50
0x6396	              0xc3	                                     ret	      3233	undo.c	FUNCTION_50
undo_write	FOR,0:ELSE,0:functions,0:IF,4:CALL,4:DO,0:WHILE,1:SWITCH,0	85
0x1089	              0x55	                                push rbp	       886	undo.c	FUNCTION_15
0x108a	          0x4889e5	                            mov rbp, rsp	       886	undo.c	FUNCTION_15
0x108d	        0x4883ec40	                           sub rsp, 0x40	       886	undo.c	FUNCTION_15
0x1091	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       886	undo.c	FUNCTION_15
0x1095	        0x488975d0	             mov qword [rbp - 0x30], rsi	       886	undo.c	FUNCTION_15
0x1099	        0x488955c8	             mov qword [rbp - 0x38], rdx	       886	undo.c	FUNCTION_15
0x109d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       888	undo.c	FUNCTION_15	IF_1
0x10a1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       888	undo.c	FUNCTION_15	IF_1
0x10a5	          0x4885c0	                           test rax, rax	       888	undo.c	FUNCTION_15	IF_1
0x10a8	     0xf84ed000000	                            je 0x40011db	       888	undo.c	FUNCTION_15	IF_1
0x10ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       890	undo.c	FUNCTION_15	IF_1
0x10b2	        0x488945e8	             mov qword [rbp - 0x18], rax	       890	undo.c	FUNCTION_15	IF_1
0x10b6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       891	undo.c	FUNCTION_15	IF_1
0x10ba	        0x488945f0	             mov qword [rbp - 0x10], rax	       891	undo.c	FUNCTION_15	IF_1
0x10be	            0xeb74	                           jmp 0x4001174	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x10c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x10c4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x10c8	      0xba00200000	                         mov edx, 0x2000	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x10cd	          0x4829c2	                            sub rdx, rax	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x10d0	          0x4889d0	                            mov rax, rdx	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x10d3	        0x488945f8	                mov qword [rbp - 8], rax	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x10d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10db	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10e3	        0x488b4020	            mov rax, qword [rax + 0x20] 	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10e7	        0x488d0c02	                    lea rcx, [rdx + rax]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10eb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10f3	          0x4889c6	                            mov rsi, rax	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10f6	          0x4889cf	                            mov rdi, rcx	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10f9	      0xe800000000	                          call 0x400113e	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x10fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       898	undo.c	FUNCTION_15	IF_1	WHILE_1
0x1102	        0x482945e8	             sub qword [rbp - 0x18], rax	       898	undo.c	FUNCTION_15	IF_1	WHILE_1
0x1106	        0x488b45f8	                mov rax, qword [rbp - 8]	       899	undo.c	FUNCTION_15	IF_1	WHILE_1
0x110a	        0x480145f0	            add qword [rbp - 0x10], rax 	       899	undo.c	FUNCTION_15	IF_1	WHILE_1
0x110e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       900	undo.c	FUNCTION_15	IF_1	WHILE_1
0x1112	    0x48c740200020	         mov qword [rax + 0x20], 0x2000 	       900	undo.c	FUNCTION_15	IF_1	WHILE_1
0x111a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x111e	          0x4889c7	                            mov rdi, rax	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x1121	      0xe8a9000000	                     call sym.undo_flush	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x1126	            0x85c0	                           test eax, eax	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x1128	            0x750a	                           jne 0x4001174	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x112a	      0xb800000000	                              mov eax, 0	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x112f	      0xe999000000	                           jmp 0x400120d	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x1134	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x1138	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x113c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x1140	          0x4801d0	                            add rax, rdx	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x1143	    0x483dff1f0000	                         cmp rax, 0x1fff	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x1149	     0xf8771ffffff	                            ja 0x4001100	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x114f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x1154	            0x743e	                            je 0x40011d4	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x1156	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x115a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x115e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x1162	        0x488b4020	            mov rax, qword [rax + 0x20] 	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x1166	        0x488d0c02	                    lea rcx, [rdx + rax]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x116a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x116e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x1172	          0x4889c6	                            mov rsi, rax	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x1175	          0x4889cf	                            mov rdi, rcx	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x1178	      0xe800000000	                          call 0x40011bd	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x117d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x1181	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x1185	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x1189	          0x4801c2	                            add rdx, rax	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x118c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x1190	        0x48895020	             mov qword [rax + 0x20], rdx	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x1194	      0xb801000000	                              mov eax, 1	       909	undo.c	FUNCTION_15	IF_1
0x1199	            0xeb32	                           jmp 0x400120d	       909	undo.c	FUNCTION_15	IF_1
0x119b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x119f	        0x488b5008	                mov rdx, qword [rax + 8]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11a3	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11ab	          0x4889d1	                            mov rcx, rdx	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11ae	      0xba01000000	                              mov edx, 1	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11b3	          0x4889c7	                            mov rdi, rax	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11b6	      0xe800000000	                          call 0x40011fb	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11bb	        0x4883f801	                              cmp rax, 1	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11bf	            0x7407	                            je 0x4001208	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x11c1	      0xb800000000	                              mov eax, 0	       913	undo.c	FUNCTION_15	IF_4
0x11c6	            0xeb05	                           jmp 0x400120d	       913	undo.c	FUNCTION_15	IF_4
0x11c8	      0xb801000000	                              mov eax, 1	       914	undo.c	FUNCTION_15
0x11cd	              0xc9	                                   leave	       915	undo.c	FUNCTION_15
0x11ce	              0xc3	                                     ret	       915	undo.c	FUNCTION_15
ex_undolist	FOR,1:ELSE,5:functions,0:IF,9:CALL,21:DO,0:WHILE,2:SWITCH,0	259
0x5bf9	              0x55	                                push rbp	      3007	undo.c	FUNCTION_44
0x5bfa	          0x4889e5	                            mov rbp, rsp	      3007	undo.c	FUNCTION_44
0x5bfd	            0x4155	                                push r13	      3007	undo.c	FUNCTION_44
0x5bff	            0x4154	                                push r12	      3007	undo.c	FUNCTION_44
0x5c01	              0x53	                                push rbx	      3007	undo.c	FUNCTION_44
0x5c02	        0x4883ec58	                           sub rsp, 0x58	      3007	undo.c	FUNCTION_44
0x5c06	        0x48897d98	             mov qword [rbp - 0x68], rdi	      3007	undo.c	FUNCTION_44
0x5c0a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3007	undo.c	FUNCTION_44
0x5c13	        0x488945d8	             mov qword [rbp - 0x28], rax	      3007	undo.c	FUNCTION_44
0x5c17	            0x31c0	                            xor eax, eax	      3007	undo.c	FUNCTION_44
0x5c19	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      3012	undo.c	FUNCTION_44
0x5c20	    0x8b0500000000	            mov eax, dword [0x04005c66] 	      3020	undo.c	FUNCTION_44
0x5c26	          0x83c001	                              add eax, 1	      3020	undo.c	FUNCTION_44
0x5c29	    0x890500000000	            mov dword [0x04005c6f], eax 	      3020	undo.c	FUNCTION_44
0x5c2f	    0x8b0500000000	            mov eax, dword [0x04005c75] 	      3020	undo.c	FUNCTION_44
0x5c35	          0x8945b0	             mov dword [rbp - 0x50], eax	      3020	undo.c	FUNCTION_44
0x5c38	    0x8b0500000000	            mov eax, dword [0x04005c7e] 	      3021	undo.c	FUNCTION_44
0x5c3e	          0x83c001	                              add eax, 1	      3021	undo.c	FUNCTION_44
0x5c41	    0x890500000000	            mov dword [0x04005c87], eax 	      3021	undo.c	FUNCTION_44
0x5c47	    0x8b0500000000	            mov eax, dword [0x04005c8d] 	      3021	undo.c	FUNCTION_44
0x5c4d	          0x8945b4	             mov dword [rbp - 0x4c], eax	      3021	undo.c	FUNCTION_44
0x5c50	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3022	undo.c	FUNCTION_44	CALL_1
0x5c54	      0xba14000000	                           mov edx, 0x14	      3022	undo.c	FUNCTION_44	CALL_1
0x5c59	      0xbe08000000	                              mov esi, 8	      3022	undo.c	FUNCTION_44	CALL_1
0x5c5e	          0x4889c7	                            mov rdi, rax	      3022	undo.c	FUNCTION_44	CALL_1
0x5c61	      0xe800000000	                          call 0x4005ca6	      3022	undo.c	FUNCTION_44	CALL_1
0x5c66	    0x488b05000000	            mov rax, qword [0x04005cad] 	      3024	undo.c	FUNCTION_44
0x5c6d	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3024	undo.c	FUNCTION_44
0x5c74	        0x488945b8	             mov qword [rbp - 0x48], rax	      3024	undo.c	FUNCTION_44
0x5c78	      0xe974020000	                           jmp 0x4005f31	      3025	undo.c	FUNCTION_44	WHILE_1
0x5c7d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c81	        0x488b4008	                mov rax, qword [rax + 8]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c85	          0x4885c0	                           test rax, rax	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c88	     0xf8560010000	                           jne 0x4005e2e	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c92	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c95	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c98	     0xf8450010000	                            je 0x4005e2e	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5c9e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5ca2	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5ca5	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5ca8	     0xf8440010000	                            je 0x4005e2e	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x5cae	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x5cb2	      0xbe01000000	                              mov esi, 1	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x5cb7	          0x4889c7	                            mov rdi, rax	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x5cba	      0xe800000000	                          call 0x4005cff	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x5cbf	            0x85c0	                           test eax, eax	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x5cc1	     0xf8437020000	                            je 0x4005f3e	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x5cc7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5ccb	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5ccf	    0x488b05000000	            mov rax, qword [0x04005d16] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5cd6	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5cd9	          0x4189c8	                            mov r8d, ecx	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5cdc	          0x4889d1	                            mov rcx, rdx	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5cdf	      0xba00000000	                              mov edx, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5ce4	      0xbe01040000	                          mov esi, 0x401	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5ce9	          0x4889c7	                            mov rdi, rax	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5cec	      0xb800000000	                              mov eax, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5cf1	      0xe800000000	                          call 0x4005d36	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x5cf6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5cfa	    0x488b98280200	           mov rbx, qword [rax + 0x228] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d01	    0x488b05000000	            mov rax, qword [0x04005d48] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d08	          0x4889c7	                            mov rdi, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d0b	      0xe800000000	                          call 0x4005d50	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d10	      0xba01040000	                          mov edx, 0x401	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d15	          0x4829c2	                            sub rdx, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d18	          0x4989d4	                            mov r12, rdx	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d1b	    0x4c8b2d000000	            mov r13, qword [0x04005d62] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d22	    0x488b05000000	            mov rax, qword [0x04005d69] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d29	          0x4889c7	                            mov rdi, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d2c	      0xe800000000	                          call 0x4005d71	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d31	          0x4c01e8	                            add rax, r13	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d34	          0x4889da	                            mov rdx, rbx	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d37	          0x4c89e6	                            mov rsi, r12	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d3a	          0x4889c7	                            mov rdi, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d3d	      0xe88e020000	                     call sym.u_add_time	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x5d42	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x5d46	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x5d4d	          0x4885c0	                           test rax, rax	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x5d50	            0x7e73	                           jle 0x4005e05	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x5d52	            0xeb30	                           jmp 0x4005dc4	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x5d54	    0x488b15000000	            mov rdx, qword [0x04005d9b] 	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d5b	          0x4889d0	                            mov rax, rdx	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d5e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d65	          0x4889c6	                            mov rsi, rax	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d68	      0xb800000000	                              mov eax, 0	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d6d	          0x4889f7	                            mov rdi, rsi	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d70	            0xf2ae	              repne scasb al, byte [rdi]	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d72	          0x4889c8	                            mov rax, rcx	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d75	          0x48f7d0	                                 not rax	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d78	        0x4883e801	                              sub rax, 1	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d7c	          0x4801d0	                            add rax, rdx	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d7f	      0x66c7002000	                    mov word [rax], 0x20	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x5d84	    0x488b05000000	            mov rax, qword [0x04005dcb] 	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x5d8b	          0x4889c7	                            mov rdi, rax	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x5d8e	      0xe800000000	                          call 0x4005dd3	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x5d93	        0x4883f820	                           cmp rax, 0x20	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x5d97	            0x76bb	                           jbe 0x4005d94	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x5d99	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5d9d	    0x488b90300200	           mov rdx, qword [rax + 0x230] 	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5da4	    0x488b05000000	            mov rax, qword [0x04005deb] 	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5dab	          0x4889d1	                            mov rcx, rdx	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5dae	      0xba00000000	                              mov edx, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5db3	      0xbe01040000	                          mov esi, 0x401	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5db8	          0x4889c7	                            mov rdi, rax	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5dbb	      0xb800000000	                              mov eax, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5dc0	      0xe800000000	                          call 0x4005e05	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x5dc5	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5dc9	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5dcc	          0x8d5001	                      lea edx, [rax + 1]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5dcf	          0x8955c0	             mov dword [rbp - 0x40], edx	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5dd2	            0x4898	                                    cdqe	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5dd4	        0x48c1e003	                              shl rax, 3	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5dd8	        0x488d1c01	                    lea rbx, [rcx + rax]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5ddc	    0x488b05000000	            mov rax, qword [0x04005e23] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5de3	          0x4889c7	                            mov rdi, rax	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5de6	      0xe800000000	                          call 0x4005e2b	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5deb	          0x488903	                    mov qword [rbx], rax	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x5dee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3046	undo.c	FUNCTION_44	WHILE_1
0x5df2	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      3046	undo.c	FUNCTION_44	WHILE_1
0x5df5	          0x895028	             mov dword [rax + 0x28], edx	      3046	undo.c	FUNCTION_44	WHILE_1
0x5df8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5dfc	        0x488b4008	                mov rax, qword [rax + 8]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e00	          0x4885c0	                           test rax, rax	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e03	            0x7435	                            je 0x4005e7a	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e05	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e09	        0x488b4008	                mov rax, qword [rax + 8]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e0d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e10	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e13	            0x7425	                            je 0x4005e7a	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e15	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e19	        0x488b4008	                mov rax, qword [rax + 8]	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e1d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e20	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e23	            0x7415	                            je 0x4005e7a	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e25	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3052	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e29	        0x488b4008	                mov rax, qword [rax + 8]	      3052	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e2d	        0x488945b8	             mov qword [rbp - 0x48], rax	      3052	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e31	        0x8345a801	               add dword [rbp - 0x58], 1	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e35	      0xe9b7000000	                           jmp 0x4005f31	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x5e3a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e3e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e42	          0x4885c0	                           test rax, rax	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e45	            0x742e	                            je 0x4005eb5	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e47	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e4b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e4f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e52	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e55	            0x741e	                            je 0x4005eb5	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e5b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e5f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e62	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e65	            0x740e	                            je 0x4005eb5	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e67	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e6b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e6f	        0x488945b8	             mov qword [rbp - 0x48], rax	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e73	            0xeb7c	                           jmp 0x4005f31	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x5e75	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e79	          0x488b00	                    mov rax, qword [rax]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e7c	          0x4885c0	                           test rax, rax	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e7f	            0x743c	                            je 0x4005efd	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e85	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e89	          0x4885c0	                           test rax, rax	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e8c	            0x752f	                           jne 0x4005efd	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e92	          0x488b00	                    mov rax, qword [rax]	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e95	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e98	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e9b	            0x7420	                            je 0x4005efd	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5e9d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5ea1	          0x488b00	                    mov rax, qword [rax]	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5ea4	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5ea7	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5eaa	            0x7411	                            je 0x4005efd	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5eac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3068	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5eb0	          0x488b00	                    mov rax, qword [rax]	      3068	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5eb3	        0x488945b8	             mov qword [rbp - 0x48], rax	      3068	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5eb7	        0x836da801	               sub dword [rbp - 0x58], 1	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5ebb	            0xeb34	                           jmp 0x4005f31	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x5ebd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x5ec1	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x5ec4	          0x895028	             mov dword [rax + 0x28], edx	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x5ec7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5ecb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5ecf	          0x4885c0	                           test rax, rax	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5ed2	            0x740e	                            je 0x4005f22	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5ed4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5ed8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5edc	        0x488945b8	             mov qword [rbp - 0x48], rax	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5ee0	            0xeb0f	                           jmp 0x4005f31	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x5ee2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3080	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x5ee6	          0x488b00	                    mov rax, qword [rax]	      3080	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x5ee9	        0x488945b8	             mov qword [rbp - 0x48], rax	      3080	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x5eed	        0x836da801	               sub dword [rbp - 0x58], 1	      3081	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x5ef1	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3025	undo.c	FUNCTION_44	WHILE_1
0x5ef6	     0xf8581fdffff	                           jne 0x4005cbd	      3025	undo.c	FUNCTION_44	WHILE_1
0x5efc	            0xeb01	                           jmp 0x4005f3f	      3025	undo.c	FUNCTION_44	WHILE_1
0x5efe	              0x90	                                     nop	      3031	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2
0x5eff	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3086	undo.c	FUNCTION_44	IF_8
0x5f02	            0x85c0	                           test eax, eax	      3086	undo.c	FUNCTION_44	IF_8
0x5f04	            0x7517	                           jne 0x4005f5d	      3086	undo.c	FUNCTION_44	IF_8
0x5f06	      0xbf00000000	                              mov edi, 0	      3087	undo.c	FUNCTION_44	CALL_12
0x5f0b	      0xe800000000	                          call 0x4005f50	      3087	undo.c	FUNCTION_44	CALL_12
0x5f10	          0x4889c7	                            mov rdi, rax	      3087	undo.c	FUNCTION_44	CALL_12
0x5f13	      0xe800000000	                          call 0x4005f58	      3087	undo.c	FUNCTION_44	CALL_12
0x5f18	      0xe993000000	                           jmp 0x4005ff0	      3106	undo.c	FUNCTION_44
0x5f1d	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x5f20	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x5f24	            0x89d6	                            mov esi, edx	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x5f26	          0x4889c7	                            mov rdi, rax	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x5f29	      0xe800000000	                          call 0x4005f6e	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x5f2e	      0xe800000000	                          call 0x4005f73	      3092	undo.c	FUNCTION_44	ELSE_5	CALL_14
0x5f33	    0x8b1d00000000	            mov ebx, dword [0x04005f79] 	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x5f39	      0xbf00000000	                              mov edi, 0	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x5f3e	      0xe800000000	                          call 0x4005f83	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x5f43	            0x89de	                            mov esi, ebx	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x5f45	          0x4889c7	                            mov rdi, rax	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x5f48	      0xe800000000	                          call 0x4005f8d	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x5f4d	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f54	            0xeb34	                           jmp 0x4005fca	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f56	      0xbf0a000000	                            mov edi, 0xa	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x5f5b	      0xe800000000	                          call 0x4005fa0	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x5f60	    0x8b0500000000	            mov eax, dword [0x04005fa6] 	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x5f66	            0x85c0	                           test eax, eax	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x5f68	            0x7534	                           jne 0x4005fde	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x5f6a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f6e	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f71	          0x4863d2	                         movsxd rdx, edx	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f74	        0x48c1e203	                              shl rdx, 3	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f78	          0x4801d0	                            add rax, rdx	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f7b	          0x488b00	                    mov rax, qword [rax]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f7e	          0x4889c7	                            mov rdi, rax	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f81	      0xe800000000	                          call 0x4005fc6	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x5f86	        0x8345ac01	               add dword [rbp - 0x54], 1	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f8a	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f8d	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f90	            0x7e0d	                           jle 0x4005fdf	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f92	    0x8b0500000000	            mov eax, dword [0x04005fd8] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f98	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f9a	            0x74ba	                            je 0x4005f96	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f9c	            0xeb01	                           jmp 0x4005fdf	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x5f9e	              0x90	                                     nop	      3099	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x5f9f	      0xe800000000	                          call 0x4005fe4	      3102	undo.c	FUNCTION_44	ELSE_5	CALL_20
0x5fa4	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x5fa8	          0x4889c7	                            mov rdi, rax	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x5fab	      0xe800000000	                          call 0x4005ff0	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x5fb0	              0x90	                                     nop	      3106	undo.c	FUNCTION_44
0x5fb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3106	undo.c	FUNCTION_44
0x5fb5	    0x644833042528	                xor rax, qword fs:[0x28]	      3106	undo.c	FUNCTION_44
0x5fbe	            0x7405	                            je 0x4006005	      3106	undo.c	FUNCTION_44
0x5fc0	      0xe800000000	                          call 0x4006005	      3106	undo.c	FUNCTION_44
0x5fc5	        0x4883c458	                           add rsp, 0x58	      3106	undo.c	FUNCTION_44
0x5fc9	              0x5b	                                 pop rbx	      3106	undo.c	FUNCTION_44
0x5fca	            0x415c	                                 pop r12	      3106	undo.c	FUNCTION_44
0x5fcc	            0x415d	                                 pop r13	      3106	undo.c	FUNCTION_44
0x5fce	              0x5d	                                 pop rbp	      3106	undo.c	FUNCTION_44
0x5fcf	              0xc3	                                     ret	      3106	undo.c	FUNCTION_44
u_freebranch	FOR,0:ELSE,0:functions,0:IF,3:CALL,3:DO,0:WHILE,2:SWITCH,0	59
0x65de	              0x55	                                push rbp	      3332	undo.c	FUNCTION_54
0x65df	          0x4889e5	                            mov rbp, rsp	      3332	undo.c	FUNCTION_54
0x65e2	        0x4883ec30	                           sub rsp, 0x30	      3332	undo.c	FUNCTION_54
0x65e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3332	undo.c	FUNCTION_54
0x65ea	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3332	undo.c	FUNCTION_54
0x65ee	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3332	undo.c	FUNCTION_54
0x65f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3337	undo.c	FUNCTION_54	IF_1
0x65f6	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3337	undo.c	FUNCTION_54	IF_1
0x65fd	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3337	undo.c	FUNCTION_54	IF_1
0x6601	            0x7535	                           jne 0x4006678	      3337	undo.c	FUNCTION_54	IF_1
0x6603	            0xeb1e	                           jmp 0x4006663	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x6605	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x6609	    0x488b88181200	          mov rcx, qword [rax + 0x1218] 	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x6610	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x6614	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x6618	          0x4889ce	                            mov rsi, rcx	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x661b	          0x4889c7	                            mov rdi, rax	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x661e	      0xe8c4feffff	                   call sym.u_freeheader	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x6623	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x6627	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x662e	          0x4885c0	                           test rax, rax	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x6631	            0x75d2	                           jne 0x4006645	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x6633	      0xe981000000	                           jmp 0x40066f9	      3341	undo.c	FUNCTION_54	IF_1
0x6638	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3344	undo.c	FUNCTION_54	IF_2
0x663c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3344	undo.c	FUNCTION_54	IF_2
0x6640	          0x4885c0	                           test rax, rax	      3344	undo.c	FUNCTION_54	IF_2
0x6643	            0x7410	                            je 0x4006695	      3344	undo.c	FUNCTION_54	IF_2
0x6645	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3345	undo.c	FUNCTION_54	IF_2
0x6649	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3345	undo.c	FUNCTION_54	IF_2
0x664d	    0x48c740100000	               mov qword [rax + 0x10], 0	      3345	undo.c	FUNCTION_54	IF_2
0x6655	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3347	undo.c	FUNCTION_54
0x6659	        0x488945f0	             mov qword [rbp - 0x10], rax	      3347	undo.c	FUNCTION_54
0x665d	            0xeb53	                           jmp 0x40066f2	      3348	undo.c	FUNCTION_54	WHILE_2
0x665f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3350	undo.c	FUNCTION_54	WHILE_2
0x6663	        0x488945f8	                mov qword [rbp - 8], rax	      3350	undo.c	FUNCTION_54	WHILE_2
0x6667	        0x488b45f8	                mov rax, qword [rbp - 8]	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x666b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x666f	          0x4885c0	                           test rax, rax	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x6672	            0x741b	                            je 0x40066cf	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x6674	        0x488b45f8	                mov rax, qword [rbp - 8]	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x6678	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x667c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x6680	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x6684	          0x4889ce	                            mov rsi, rcx	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x6687	          0x4889c7	                            mov rdi, rax	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x668a	      0xe84fffffff	                   call sym.u_freebranch	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x668f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3353	undo.c	FUNCTION_54	WHILE_2
0x6693	        0x488b4008	                mov rax, qword [rax + 8]	      3353	undo.c	FUNCTION_54	WHILE_2
0x6697	        0x488945f0	             mov qword [rbp - 0x10], rax	      3353	undo.c	FUNCTION_54	WHILE_2
0x669b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x669f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x66a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x66a7	          0x4889ce	                            mov rsi, rcx	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x66aa	          0x4889c7	                            mov rdi, rax	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x66ad	      0xe809000000	                  call sym.u_freeentries	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x66b2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3348	undo.c	FUNCTION_54	WHILE_2
0x66b7	            0x75a6	                           jne 0x400669f	      3348	undo.c	FUNCTION_54	WHILE_2
0x66b9	              0xc9	                                   leave	      3356	undo.c	FUNCTION_54
0x66ba	              0xc3	                                     ret	      3356	undo.c	FUNCTION_54
u_freeheader	FOR,1:ELSE,2:functions,0:IF,4:CALL,2:DO,0:WHILE,0:SWITCH,0	69
0x64e7	              0x55	                                push rbp	      3297	undo.c	FUNCTION_53
0x64e8	          0x4889e5	                            mov rbp, rsp	      3297	undo.c	FUNCTION_53
0x64eb	        0x4883ec30	                           sub rsp, 0x30	      3297	undo.c	FUNCTION_53
0x64ef	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3297	undo.c	FUNCTION_53
0x64f3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3297	undo.c	FUNCTION_53
0x64f7	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3297	undo.c	FUNCTION_53
0x64fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3302	undo.c	FUNCTION_53	IF_1
0x64ff	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3302	undo.c	FUNCTION_53	IF_1
0x6503	          0x4885c0	                           test rax, rax	      3302	undo.c	FUNCTION_53	IF_1
0x6506	            0x741b	                            je 0x4006563	      3302	undo.c	FUNCTION_53	IF_1
0x6508	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3303	undo.c	FUNCTION_53	CALL_1
0x650c	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3303	undo.c	FUNCTION_53	CALL_1
0x6510	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3303	undo.c	FUNCTION_53	CALL_1
0x6514	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3303	undo.c	FUNCTION_53	CALL_1
0x6518	          0x4889ce	                            mov rsi, rcx	      3303	undo.c	FUNCTION_53	CALL_1
0x651b	          0x4889c7	                            mov rdi, rax	      3303	undo.c	FUNCTION_53	CALL_1
0x651e	      0xe8bb000000	                   call sym.u_freebranch	      3303	undo.c	FUNCTION_53	CALL_1
0x6523	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3305	undo.c	FUNCTION_53	IF_2
0x6527	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3305	undo.c	FUNCTION_53	IF_2
0x652b	          0x4885c0	                           test rax, rax	      3305	undo.c	FUNCTION_53	IF_2
0x652e	            0x7410	                            je 0x4006580	      3305	undo.c	FUNCTION_53	IF_2
0x6530	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3306	undo.c	FUNCTION_53	IF_2
0x6534	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3306	undo.c	FUNCTION_53	IF_2
0x6538	    0x48c740100000	               mov qword [rax + 0x10], 0	      3306	undo.c	FUNCTION_53	IF_2
0x6540	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3309	undo.c	FUNCTION_53	IF_3
0x6544	          0x488b00	                    mov rax, qword [rax]	      3309	undo.c	FUNCTION_53	IF_3
0x6547	          0x4885c0	                           test rax, rax	      3309	undo.c	FUNCTION_53	IF_3
0x654a	            0x7515	                           jne 0x40065a1	      3309	undo.c	FUNCTION_53	IF_3
0x654c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3310	undo.c	FUNCTION_53	IF_3
0x6550	        0x488b5008	                mov rdx, qword [rax + 8]	      3310	undo.c	FUNCTION_53	IF_3
0x6554	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3310	undo.c	FUNCTION_53	IF_3
0x6558	    0x488990181200	          mov qword [rax + 0x1218], rdx 	      3310	undo.c	FUNCTION_53	IF_3
0x655f	            0xeb13	                           jmp 0x40065b4	      3310	undo.c	FUNCTION_53	IF_3
0x6561	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3312	undo.c	FUNCTION_53	ELSE_1
0x6565	          0x488b00	                    mov rax, qword [rax]	      3312	undo.c	FUNCTION_53	ELSE_1
0x6568	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3312	undo.c	FUNCTION_53	ELSE_1
0x656c	        0x488b5208	                mov rdx, qword [rdx + 8]	      3312	undo.c	FUNCTION_53	ELSE_1
0x6570	        0x48895008	                mov qword [rax + 8], rdx	      3312	undo.c	FUNCTION_53	ELSE_1
0x6574	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3314	undo.c	FUNCTION_53	IF_4
0x6578	        0x488b4008	                mov rax, qword [rax + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x657c	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x657f	            0x7514	                           jne 0x40065d5	      3314	undo.c	FUNCTION_53	IF_4
0x6581	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3315	undo.c	FUNCTION_53	IF_4
0x6585	          0x488b10	                    mov rdx, qword [rax]	      3315	undo.c	FUNCTION_53	IF_4
0x6588	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3315	undo.c	FUNCTION_53	IF_4
0x658c	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      3315	undo.c	FUNCTION_53	IF_4
0x6593	            0xeb2f	                           jmp 0x4006604	      3315	undo.c	FUNCTION_53	IF_4
0x6595	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x6599	        0x488b4008	                mov rax, qword [rax + 8]	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x659d	        0x488945f8	                mov qword [rbp - 8], rax	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65a1	            0xeb1a	                           jmp 0x40065fd	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65a7	          0x488b10	                    mov rdx, qword [rax]	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65ae	          0x488910	                    mov qword [rax], rdx	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65b9	        0x488945f8	                mov qword [rbp - 8], rax	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65bd	      0x48837df800	                  cmp qword [rbp - 8], 0	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65c2	            0x75df	                           jne 0x40065e3	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x65c4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3321	undo.c	FUNCTION_53	CALL_2
0x65c8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3321	undo.c	FUNCTION_53	CALL_2
0x65cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3321	undo.c	FUNCTION_53	CALL_2
0x65d0	          0x4889ce	                            mov rsi, rcx	      3321	undo.c	FUNCTION_53	CALL_2
0x65d3	          0x4889c7	                            mov rdi, rax	      3321	undo.c	FUNCTION_53	CALL_2
0x65d6	      0xe8e0000000	                  call sym.u_freeentries	      3321	undo.c	FUNCTION_53	CALL_2
0x65db	              0x90	                                     nop	      3322	undo.c	FUNCTION_53
0x65dc	              0xc9	                                   leave	      3322	undo.c	FUNCTION_53
0x65dd	              0xc3	                                     ret	      3322	undo.c	FUNCTION_53
u_free_uhp	FOR,0:ELSE,0:functions,0:IF,0:CALL,2:DO,0:WHILE,1:SWITCH,0	27
0x102f	              0x55	                                push rbp	       865	undo.c	FUNCTION_14
0x1030	          0x4889e5	                            mov rbp, rsp	       865	undo.c	FUNCTION_14
0x1033	        0x4883ec20	                           sub rsp, 0x20	       865	undo.c	FUNCTION_14
0x1037	        0x48897de8	             mov qword [rbp - 0x18], rdi	       865	undo.c	FUNCTION_14
0x103b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       869	undo.c	FUNCTION_14
0x103f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       869	undo.c	FUNCTION_14
0x1043	        0x488945f0	             mov qword [rbp - 0x10], rax	       869	undo.c	FUNCTION_14
0x1047	            0xeb2a	                           jmp 0x40010b3	       870	undo.c	FUNCTION_14	WHILE_1
0x1049	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       872	undo.c	FUNCTION_14	WHILE_1
0x104d	          0x488b00	                    mov rax, qword [rax]	       872	undo.c	FUNCTION_14	WHILE_1
0x1050	        0x488945f8	                mov qword [rbp - 8], rax	       872	undo.c	FUNCTION_14	WHILE_1
0x1054	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x1058	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x105c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x1060	          0x4889d6	                            mov rsi, rdx	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x1063	          0x4889c7	                            mov rdi, rax	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x1066	      0xe828570000	                    call sym.u_freeentry	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x106b	        0x488b45f8	                mov rax, qword [rbp - 8]	       874	undo.c	FUNCTION_14	WHILE_1
0x106f	        0x488945f0	             mov qword [rbp - 0x10], rax	       874	undo.c	FUNCTION_14	WHILE_1
0x1073	      0x48837df000	               cmp qword [rbp - 0x10], 0	       870	undo.c	FUNCTION_14	WHILE_1
0x1078	            0x75cf	                           jne 0x4001089	       870	undo.c	FUNCTION_14	WHILE_1
0x107a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	undo.c	FUNCTION_14	CALL_2
0x107e	          0x4889c7	                            mov rdi, rax	       876	undo.c	FUNCTION_14	CALL_2
0x1081	      0xe800000000	                          call 0x40010c6	       876	undo.c	FUNCTION_14	CALL_2
0x1086	              0x90	                                     nop	       877	undo.c	FUNCTION_14
0x1087	              0xc9	                                   leave	       877	undo.c	FUNCTION_14
0x1088	              0xc3	                                     ret	       877	undo.c	FUNCTION_14
u_update_save_nr	FOR,0:ELSE,1:functions,0:IF,2:CALL,0:DO,0:WHILE,0:SWITCH,0	33
0x62b1	              0x55	                                push rbp	      3208	undo.c	FUNCTION_49
0x62b2	          0x4889e5	                            mov rbp, rsp	      3208	undo.c	FUNCTION_49
0x62b5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3208	undo.c	FUNCTION_49
0x62b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3211	undo.c	FUNCTION_49
0x62bd	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      3211	undo.c	FUNCTION_49
0x62c4	        0x488d5001	                      lea rdx, [rax + 1]	      3211	undo.c	FUNCTION_49
0x62c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3211	undo.c	FUNCTION_49
0x62cc	    0x488990401200	          mov qword [rax + 0x1240], rdx 	      3211	undo.c	FUNCTION_49
0x62d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3212	undo.c	FUNCTION_49
0x62d7	    0x488b90401200	          mov rdx, qword [rax + 0x1240] 	      3212	undo.c	FUNCTION_49
0x62de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3212	undo.c	FUNCTION_49
0x62e2	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      3212	undo.c	FUNCTION_49
0x62e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3213	undo.c	FUNCTION_49
0x62ed	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3213	undo.c	FUNCTION_49
0x62f4	        0x488945f8	                mov qword [rbp - 8], rax	      3213	undo.c	FUNCTION_49
0x62f8	      0x48837df800	                  cmp qword [rbp - 8], 0	      3214	undo.c	FUNCTION_49	IF_1
0x62fd	            0x740d	                            je 0x400634c	      3214	undo.c	FUNCTION_49	IF_1
0x62ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      3215	undo.c	FUNCTION_49	IF_1
0x6303	          0x488b00	                    mov rax, qword [rax]	      3215	undo.c	FUNCTION_49	IF_1
0x6306	        0x488945f8	                mov qword [rbp - 8], rax	      3215	undo.c	FUNCTION_49	IF_1
0x630a	            0xeb0f	                           jmp 0x400635b	      3215	undo.c	FUNCTION_49	IF_1
0x630c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3217	undo.c	FUNCTION_49	ELSE_1
0x6310	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3217	undo.c	FUNCTION_49	ELSE_1
0x6317	        0x488945f8	                mov qword [rbp - 8], rax	      3217	undo.c	FUNCTION_49	ELSE_1
0x631b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3218	undo.c	FUNCTION_49	IF_2
0x6320	            0x7416	                            je 0x4006378	      3218	undo.c	FUNCTION_49	IF_2
0x6322	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3219	undo.c	FUNCTION_49	IF_2
0x6326	    0x488b90401200	          mov rdx, qword [rax + 0x1240] 	      3219	undo.c	FUNCTION_49	IF_2
0x632d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3219	undo.c	FUNCTION_49	IF_2
0x6331	    0x488990300200	            mov qword [rax + 0x230], rdx	      3219	undo.c	FUNCTION_49	IF_2
0x6338	              0x90	                                     nop	      3220	undo.c	FUNCTION_49
0x6339	              0x5d	                                 pop rbp	      3220	undo.c	FUNCTION_49
0x633a	              0xc3	                                     ret	      3220	undo.c	FUNCTION_49
u_freeentries	FOR,1:ELSE,0:functions,0:IF,3:CALL,2:DO,0:WHILE,0:SWITCH,0	54
0x66bb	              0x55	                                push rbp	      3367	undo.c	FUNCTION_55
0x66bc	          0x4889e5	                            mov rbp, rsp	      3367	undo.c	FUNCTION_55
0x66bf	        0x4883ec30	                           sub rsp, 0x30	      3367	undo.c	FUNCTION_55
0x66c3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3367	undo.c	FUNCTION_55
0x66c7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3367	undo.c	FUNCTION_55
0x66cb	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3367	undo.c	FUNCTION_55
0x66cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3371	undo.c	FUNCTION_55	IF_1
0x66d3	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3371	undo.c	FUNCTION_55	IF_1
0x66da	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3371	undo.c	FUNCTION_55	IF_1
0x66de	            0x750f	                           jne 0x400672f	      3371	undo.c	FUNCTION_55	IF_1
0x66e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3372	undo.c	FUNCTION_55	IF_1
0x66e4	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      3372	undo.c	FUNCTION_55	IF_1
0x66ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3373	undo.c	FUNCTION_55	IF_2
0x66f3	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3373	undo.c	FUNCTION_55	IF_2
0x66fa	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3373	undo.c	FUNCTION_55	IF_2
0x66fe	            0x750f	                           jne 0x400674f	      3373	undo.c	FUNCTION_55	IF_2
0x6700	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3374	undo.c	FUNCTION_55	IF_2
0x6704	    0x48c780201200	            mov qword [rax + 0x1220], 0 	      3374	undo.c	FUNCTION_55	IF_2
0x670f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3375	undo.c	FUNCTION_55	IF_3
0x6714	            0x7418	                            je 0x400676e	      3375	undo.c	FUNCTION_55	IF_3
0x6716	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3375	undo.c	FUNCTION_55	IF_3
0x671a	          0x488b00	                    mov rax, qword [rax]	      3375	undo.c	FUNCTION_55	IF_3
0x671d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3375	undo.c	FUNCTION_55	IF_3
0x6721	            0x750b	                           jne 0x400676e	      3375	undo.c	FUNCTION_55	IF_3
0x6723	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3376	undo.c	FUNCTION_55	IF_3
0x6727	    0x48c700000000	                      mov qword [rax], 0	      3376	undo.c	FUNCTION_55	IF_3
0x672e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3378	undo.c	FUNCTION_55	FOR_1
0x6732	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3378	undo.c	FUNCTION_55	FOR_1
0x6736	        0x488945f0	             mov qword [rbp - 0x10], rax	      3378	undo.c	FUNCTION_55	FOR_1
0x673a	            0xeb2a	                           jmp 0x40067a6	      3378	undo.c	FUNCTION_55	FOR_1
0x673c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3380	undo.c	FUNCTION_55	FOR_1
0x6740	          0x488b00	                    mov rax, qword [rax]	      3380	undo.c	FUNCTION_55	FOR_1
0x6743	        0x488945f8	                mov qword [rbp - 8], rax	      3380	undo.c	FUNCTION_55	FOR_1
0x6747	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x674b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x674f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x6753	          0x4889d6	                            mov rsi, rdx	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x6756	          0x4889c7	                            mov rdi, rax	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x6759	      0xe835000000	                    call sym.u_freeentry	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x675e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3378	undo.c	FUNCTION_55	FOR_1
0x6762	        0x488945f0	             mov qword [rbp - 0x10], rax	      3378	undo.c	FUNCTION_55	FOR_1
0x6766	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3378	undo.c	FUNCTION_55	FOR_1
0x676b	            0x75cf	                           jne 0x400677c	      3378	undo.c	FUNCTION_55	FOR_1
0x676d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3387	undo.c	FUNCTION_55	CALL_2
0x6771	          0x4889c7	                            mov rdi, rax	      3387	undo.c	FUNCTION_55	CALL_2
0x6774	      0xe800000000	                          call 0x40067b9	      3387	undo.c	FUNCTION_55	CALL_2
0x6779	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3388	undo.c	FUNCTION_55
0x677d	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      3388	undo.c	FUNCTION_55
0x6783	          0x8d50ff	                      lea edx, [rax - 1]	      3388	undo.c	FUNCTION_55
0x6786	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3388	undo.c	FUNCTION_55
0x678a	    0x899030120000	          mov dword [rax + 0x1230], edx 	      3388	undo.c	FUNCTION_55
0x6790	              0x90	                                     nop	      3389	undo.c	FUNCTION_55
0x6791	              0xc9	                                   leave	      3389	undo.c	FUNCTION_55
0x6792	              0xc3	                                     ret	      3389	undo.c	FUNCTION_55
u_undo_end	FOR,0:ELSE,9:functions,1:IF,12:CALL,14:DO,0:WHILE,0:SWITCH,0	177
0x5846	              0x55	                                push rbp	      2903	undo.c	FUNCTION_42
0x5847	          0x4889e5	                            mov rbp, rsp	      2903	undo.c	FUNCTION_42
0x584a	            0x4156	                                push r14	      2903	undo.c	FUNCTION_42
0x584c	            0x4155	                                push r13	      2903	undo.c	FUNCTION_42
0x584e	            0x4154	                                push r12	      2903	undo.c	FUNCTION_42
0x5850	              0x53	                                push rbx	      2903	undo.c	FUNCTION_42
0x5851	    0x4881ec900000	                           sub rsp, 0x90	      2903	undo.c	FUNCTION_42
0x5858	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      2903	undo.c	FUNCTION_42
0x585e	    0x89b558ffffff	             mov dword [rbp - 0xa8], esi	      2903	undo.c	FUNCTION_42
0x5864	    0x64488b042528	                mov rax, qword fs:[0x28]	      2903	undo.c	FUNCTION_42
0x586d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2903	undo.c	FUNCTION_42
0x5871	            0x31c0	                            xor eax, eax	      2903	undo.c	FUNCTION_42
0x5873	    0x8b0500000000	            mov eax, dword [0x040058b9] 	      2909	undo.c	FUNCTION_42	IF_1
0x5879	      0x2500020000	                          and eax, 0x200	      2909	undo.c	FUNCTION_42	IF_1
0x587e	            0x85c0	                           test eax, eax	      2909	undo.c	FUNCTION_42	IF_1
0x5880	            0x740f	                            je 0x40058d1	      2909	undo.c	FUNCTION_42	IF_1
0x5882	    0x8b0500000000	            mov eax, dword [0x040058c8] 	      2909	undo.c	FUNCTION_42	IF_1
0x5888	            0x85c0	                           test eax, eax	      2909	undo.c	FUNCTION_42	IF_1
0x588a	            0x7405	                            je 0x40058d1	      2909	undo.c	FUNCTION_42	IF_1
0x588c	      0xe800000000	                          call 0x40058d1	      2910	undo.c	FUNCTION_42	CALL_1
0x5891	    0x8b0500000000	            mov eax, dword [0x040058d7] 	      2913	undo.c	FUNCTION_42	IF_2
0x5897	            0x85c0	                           test eax, eax	      2913	undo.c	FUNCTION_42	IF_2
0x5899	     0xf85b8020000	                           jne 0x4005b97	      2913	undo.c	FUNCTION_42	IF_2
0x589f	      0xe800000000	                          call 0x40058e4	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x58a4	            0x85c0	                           test eax, eax	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x58a6	     0xf84ab020000	                            je 0x4005b97	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x58ac	    0x488b05000000	            mov rax, qword [0x040058f3] 	      2917	undo.c	FUNCTION_42	IF_3
0x58b3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2917	undo.c	FUNCTION_42	IF_3
0x58b6	          0x83e001	                              and eax, 1	      2917	undo.c	FUNCTION_42	IF_3
0x58b9	            0x85c0	                           test eax, eax	      2917	undo.c	FUNCTION_42	IF_3
0x58bb	            0x7412	                            je 0x400590f	      2917	undo.c	FUNCTION_42	IF_3
0x58bd	    0x488b05000000	            mov rax, qword [0x04005904] 	      2918	undo.c	FUNCTION_42	IF_3
0x58c4	        0x4883e801	                              sub rax, 1	      2918	undo.c	FUNCTION_42	IF_3
0x58c8	    0x488905000000	            mov qword [0x0400590f], rax 	      2918	undo.c	FUNCTION_42	IF_3
0x58cf	    0x488b15000000	            mov rdx, qword [0x04005916] 	      2920	undo.c	FUNCTION_42
0x58d6	    0x488b05000000	            mov rax, qword [0x0400591d] 	      2920	undo.c	FUNCTION_42
0x58dd	          0x4829c2	                            sub rdx, rax	      2920	undo.c	FUNCTION_42
0x58e0	          0x4889d0	                            mov rax, rdx	      2920	undo.c	FUNCTION_42
0x58e3	    0x488905000000	            mov qword [0x0400592a], rax 	      2920	undo.c	FUNCTION_42
0x58ea	    0x488b05000000	            mov rax, qword [0x04005931] 	      2921	undo.c	FUNCTION_42	IF_4
0x58f1	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2921	undo.c	FUNCTION_42	IF_4
0x58f5	            0x7510	                           jne 0x4005947	      2921	undo.c	FUNCTION_42	IF_4
0x58f7	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2922	undo.c	FUNCTION_42	CALL_3
0x5902	      0xe980000000	                           jmp 0x40059c7	      2922	undo.c	FUNCTION_42	CALL_3
0x5907	    0x488b05000000	            mov rax, qword [0x0400594e] 	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x590e	          0x4885c0	                           test rax, rax	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x5911	            0x790d	                           jns 0x4005960	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x5913	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2924	undo.c	FUNCTION_42	ELSE_1	IF_5
0x591e	            0xeb67	                           jmp 0x40059c7	      2924	undo.c	FUNCTION_42	ELSE_1	IF_5
0x5920	    0x488b05000000	            mov rax, qword [0x04005967] 	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x5927	        0x4883f801	                              cmp rax, 1	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x592b	            0x750d	                           jne 0x400597a	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x592d	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2926	undo.c	FUNCTION_42	ELSE_2	IF_6
0x5938	            0xeb4d	                           jmp 0x40059c7	      2926	undo.c	FUNCTION_42	ELSE_2	IF_6
0x593a	    0x488b05000000	            mov rax, qword [0x04005981] 	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x5941	        0x4883f801	                              cmp rax, 1	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x5945	            0x7e0d	                           jle 0x4005994	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x5947	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2928	undo.c	FUNCTION_42	ELSE_3	IF_7
0x5952	            0xeb33	                           jmp 0x40059c7	      2928	undo.c	FUNCTION_42	ELSE_3	IF_7
0x5954	    0x488b05000000	            mov rax, qword [0x0400599b] 	      2931	undo.c	FUNCTION_42	ELSE_4
0x595b	    0x488905000000	            mov qword [0x040059a2], rax 	      2931	undo.c	FUNCTION_42	ELSE_4
0x5962	    0x488b05000000	            mov rax, qword [0x040059a9] 	      2932	undo.c	FUNCTION_42	ELSE_4	IF_8
0x5969	        0x4883f801	                              cmp rax, 1	      2932	undo.c	FUNCTION_42	ELSE_4	IF_8
0x596d	            0x750d	                           jne 0x40059bc	      2932	undo.c	FUNCTION_42	ELSE_4	IF_8
0x596f	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2933	undo.c	FUNCTION_42	ELSE_4	CALL_7
0x597a	            0xeb0b	                           jmp 0x40059c7	      2933	undo.c	FUNCTION_42	ELSE_4	CALL_7
0x597c	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2935	undo.c	FUNCTION_42	ELSE_4	CALL_8
0x5987	    0x488b05000000	            mov rax, qword [0x040059ce] 	      2938	undo.c	FUNCTION_42	IF_9
0x598e	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2938	undo.c	FUNCTION_42	IF_9
0x5995	          0x4885c0	                           test rax, rax	      2938	undo.c	FUNCTION_42	IF_9
0x5998	            0x747d	                            je 0x4005a57	      2938	undo.c	FUNCTION_42	IF_9
0x599a	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x59a1	            0x743a	                            je 0x4005a1d	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x59a3	    0x488b05000000	            mov rax, qword [0x040059ea] 	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x59aa	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x59b1	          0x488b00	                    mov rax, qword [rax]	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x59b4	          0x4885c0	                           test rax, rax	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x59b7	            0x7424	                            je 0x4005a1d	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x59b9	    0x488b05000000	            mov rax, qword [0x04005a00] 	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x59c0	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x59c7	          0x488b00	                    mov rax, qword [rax]	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x59ca	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x59d1	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2944	undo.c	FUNCTION_42	IF_9	IF_10
0x59db	            0xeb4f	                           jmp 0x4005a6c	      2944	undo.c	FUNCTION_42	IF_9	IF_10
0x59dd	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2946	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x59e4	            0x7417	                            je 0x4005a3d	      2946	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x59e6	    0x488b05000000	            mov rax, qword [0x04005a2d] 	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x59ed	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x59f4	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x59fb	            0xeb2f	                           jmp 0x4005a6c	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x59fd	    0x488b05000000	            mov rax, qword [0x04005a44] 	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x5a04	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x5a0b	          0x488b00	                    mov rax, qword [rax]	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x5a0e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x5a15	            0xeb15	                           jmp 0x4005a6c	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x5a17	    0x488b05000000	            mov rax, qword [0x04005a5e] 	      2952	undo.c	FUNCTION_42	ELSE_8
0x5a1e	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2952	undo.c	FUNCTION_42	ELSE_8
0x5a25	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2952	undo.c	FUNCTION_42	ELSE_8
0x5a2c	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2954	undo.c	FUNCTION_42	IF_12
0x5a34	            0x7506	                           jne 0x4005a7c	      2954	undo.c	FUNCTION_42	IF_12
0x5a36	        0xc6458000	                mov byte [rbp - 0x80], 0	      2955	undo.c	FUNCTION_42	IF_12
0x5a3a	            0xeb1f	                           jmp 0x4005a9b	      2955	undo.c	FUNCTION_42	IF_12
0x5a3c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2957	undo.c	FUNCTION_42	CALL_9
0x5a43	    0x488b90280200	           mov rdx, qword [rax + 0x228] 	      2957	undo.c	FUNCTION_42	CALL_9
0x5a4a	        0x488d4580	                   lea rax, [rbp - 0x80]	      2957	undo.c	FUNCTION_42	CALL_9
0x5a4e	      0xbe50000000	                           mov esi, 0x50	      2957	undo.c	FUNCTION_42	CALL_9
0x5a53	          0x4889c7	                            mov rdi, rax	      2957	undo.c	FUNCTION_42	CALL_9
0x5a56	      0xe875050000	                     call sym.u_add_time	      2957	undo.c	FUNCTION_42	CALL_9
0x5a5b	    0x488b05000000	            mov rax, qword [0x04005aa2] 	      2963	undo.c	FUNCTION_42
0x5a62	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2963	undo.c	FUNCTION_42
0x5a69	            0xeb50	                           jmp 0x4005afb	      2963	undo.c	FUNCTION_42
0x5a6b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a72	        0x488b5008	                mov rdx, qword [rax + 8]	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a76	    0x488b05000000	            mov rax, qword [0x04005abd] 	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a7d	          0x4839c2	                            cmp rdx, rax	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a80	            0x7527	                           jne 0x4005ae9	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a82	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a89	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a90	          0x4885c0	                           test rax, rax	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a93	            0x7e14	                           jle 0x4005ae9	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x5a95	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x5a9c	      0xbe28000000	                           mov esi, 0x28	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x5aa1	          0x4889c7	                            mov rdi, rax	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x5aa4	      0xe800000000	                          call 0x4005ae9	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x5aa9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2963	undo.c	FUNCTION_42
0x5ab0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2963	undo.c	FUNCTION_42
0x5ab4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2963	undo.c	FUNCTION_42
0x5abb	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2963	undo.c	FUNCTION_42
0x5ac3	            0x75a6	                           jne 0x4005aab	      2963	undo.c	FUNCTION_42
0x5ac5	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2971	undo.c	FUNCTION_42	CALL_11
0x5acd	            0x740d	                            je 0x4005b1c	      2971	undo.c	FUNCTION_42	CALL_11
0x5acf	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2971	undo.c	FUNCTION_42	CALL_11
0x5ad6	        0x4c8b6020	            mov r12, qword [rax + 0x20] 	      2971	undo.c	FUNCTION_42	CALL_11
0x5ada	            0xeb06	                           jmp 0x4005b22	      2971	undo.c	FUNCTION_42	CALL_11
0x5adc	    0x41bc00000000	                             mov r12d, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x5ae2	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2971	undo.c	FUNCTION_42	CALL_11
0x5ae9	            0x740f	                            je 0x4005b3a	      2971	undo.c	FUNCTION_42	CALL_11
0x5aeb	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x5af0	      0xe800000000	                          call 0x4005b35	      2971	undo.c	FUNCTION_42	CALL_11
0x5af5	          0x4989c5	                            mov r13, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x5af8	            0xeb0d	                           jmp 0x4005b47	      2971	undo.c	FUNCTION_42	CALL_11
0x5afa	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x5aff	      0xe800000000	                          call 0x4005b44	      2971	undo.c	FUNCTION_42	CALL_11
0x5b04	          0x4989c5	                            mov r13, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x5b07	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2971	undo.c	FUNCTION_42	CALL_11
0x5b0e	          0x4889c7	                            mov rdi, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x5b11	      0xe800000000	                          call 0x4005b56	      2971	undo.c	FUNCTION_42	CALL_11
0x5b16	          0x4989c6	                            mov r14, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x5b19	    0x488b05000000	            mov rax, qword [0x04005b60] 	      2971	undo.c	FUNCTION_42	CALL_11
0x5b20	            0x4899	                                     cqo	      2971	undo.c	FUNCTION_42	CALL_11
0x5b22	          0x4831d0	                            xor rax, rdx	      2971	undo.c	FUNCTION_42	CALL_11
0x5b25	          0x4889c3	                            mov rbx, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x5b28	          0x4829d3	                            sub rbx, rdx	      2971	undo.c	FUNCTION_42	CALL_11
0x5b2b	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x5b30	      0xe800000000	                          call 0x4005b75	      2971	undo.c	FUNCTION_42	CALL_11
0x5b35	          0x4889c7	                            mov rdi, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x5b38	        0x488d4580	                   lea rax, [rbp - 0x80]	      2971	undo.c	FUNCTION_42	CALL_11
0x5b3c	          0x4989c1	                             mov r9, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x5b3f	          0x4d89e0	                             mov r8, r12	      2971	undo.c	FUNCTION_42	CALL_11
0x5b42	          0x4c89e9	                            mov rcx, r13	      2971	undo.c	FUNCTION_42	CALL_11
0x5b45	          0x4c89f2	                            mov rdx, r14	      2971	undo.c	FUNCTION_42	CALL_11
0x5b48	          0x4889de	                            mov rsi, rbx	      2971	undo.c	FUNCTION_42	CALL_11
0x5b4b	      0xb800000000	                              mov eax, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x5b50	      0xe800000000	                          call 0x4005b95	      2971	undo.c	FUNCTION_42	CALL_11
0x5b55	            0xeb01	                           jmp 0x4005b98	      2971	undo.c	FUNCTION_42	CALL_11
0x5b57	              0x90	                                     nop	      2915	undo.c	FUNCTION_42	IF_2
0x5b58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2977	undo.c	FUNCTION_42
0x5b5c	    0x644833042528	                xor rax, qword fs:[0x28]	      2977	undo.c	FUNCTION_42
0x5b65	            0x7405	                            je 0x4005bac	      2977	undo.c	FUNCTION_42
0x5b67	      0xe800000000	                          call 0x4005bac	      2977	undo.c	FUNCTION_42
0x5b6c	    0x4881c4900000	                           add rsp, 0x90	      2977	undo.c	FUNCTION_42
0x5b73	              0x5b	                                 pop rbx	      2977	undo.c	FUNCTION_42
0x5b74	            0x415c	                                 pop r12	      2977	undo.c	FUNCTION_42
0x5b76	            0x415d	                                 pop r13	      2977	undo.c	FUNCTION_42
0x5b78	            0x415e	                                 pop r14	      2977	undo.c	FUNCTION_42
0x5b7a	              0x5d	                                 pop rbp	      2977	undo.c	FUNCTION_42
0x5b7b	              0xc3	                                     ret	      2977	undo.c	FUNCTION_42
put_header_ptr	FOR,0:ELSE,0:functions,0:IF,0:CALL,1:DO,0:WHILE,0:SWITCH,0	20
0x1437	              0x55	                                push rbp	       988	undo.c	FUNCTION_19
0x1438	          0x4889e5	                            mov rbp, rsp	       988	undo.c	FUNCTION_19
0x143b	        0x4883ec10	                           sub rsp, 0x10	       988	undo.c	FUNCTION_19
0x143f	        0x48897df8	                mov qword [rbp - 8], rdi	       988	undo.c	FUNCTION_19
0x1443	        0x488975f0	             mov qword [rbp - 0x10], rsi	       988	undo.c	FUNCTION_19
0x1447	      0x48837df000	               cmp qword [rbp - 0x10], 0	       989	undo.c	FUNCTION_19	CALL_1
0x144c	            0x740d	                            je 0x400149b	       989	undo.c	FUNCTION_19	CALL_1
0x144e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       989	undo.c	FUNCTION_19	CALL_1
0x1452	        0x488b4020	            mov rax, qword [rax + 0x20] 	       989	undo.c	FUNCTION_19	CALL_1
0x1456	          0x4889c1	                            mov rcx, rax	       989	undo.c	FUNCTION_19	CALL_1
0x1459	            0xeb05	                           jmp 0x40014a0	       989	undo.c	FUNCTION_19	CALL_1
0x145b	      0xb900000000	                              mov ecx, 0	       989	undo.c	FUNCTION_19	CALL_1
0x1460	        0x488b45f8	                mov rax, qword [rbp - 8]	       989	undo.c	FUNCTION_19	CALL_1
0x1464	      0xba04000000	                              mov edx, 4	       989	undo.c	FUNCTION_19	CALL_1
0x1469	          0x4889ce	                            mov rsi, rcx	       989	undo.c	FUNCTION_19	CALL_1
0x146c	          0x4889c7	                            mov rdi, rax	       989	undo.c	FUNCTION_19	CALL_1
0x146f	      0xe835ffffff	               call sym.undo_write_bytes	       989	undo.c	FUNCTION_19	CALL_1
0x1474	              0x90	                                     nop	       990	undo.c	FUNCTION_19
0x1475	              0xc9	                                   leave	       990	undo.c	FUNCTION_19
0x1476	              0xc3	                                     ret	       990	undo.c	FUNCTION_19
