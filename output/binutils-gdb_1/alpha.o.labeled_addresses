alpha_find_call	CALL,22:IF,5:SWITCH,1:FOR,1:DO,0:WHILE,0:functions,0:ELSE,0	184
0x4000040	              0x55	                                push rbp	        94	alpha.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        94	alpha.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        94	alpha.c	FUNCTION_1
0x4000045	        0x4883ec48	                           sub rsp, 0x48	        94	alpha.c	FUNCTION_1
0x4000049	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        94	alpha.c	FUNCTION_1
0x400004d	        0x488975c0	             mov qword [rbp - 0x40], rsi	        94	alpha.c	FUNCTION_1
0x4000051	        0x488955b8	             mov qword [rbp - 0x48], rdx	        94	alpha.c	FUNCTION_1
0x4000055	    0x488b05000000	            mov rax, qword [0x0400005c] 	        99	alpha.c	FUNCTION_1	IF_1
0x400005c	          0x4885c0	                           test rax, rax	        99	alpha.c	FUNCTION_1	IF_1
0x400005f	            0x753b	                           jne 0x400009c	        99	alpha.c	FUNCTION_1	IF_1
0x4000061	      0xbf00000000	                              mov edi, 0	       101	alpha.c	FUNCTION_1	IF_1	CALL_1
0x4000066	      0xe800000000	                          call 0x400006b	       101	alpha.c	FUNCTION_1	IF_1	CALL_1
0x400006b	      0xbe00000000	                              mov esi, 0	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xbf00000000	                              mov edi, 0	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000075	      0xe800000000	                          call 0x400007a	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x400007a	    0x488905000000	            mov qword [0x04000081], rax 	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000081	    0xf20f10050000	         movsd xmm0, qword [0x04000089] 	       103	alpha.c	FUNCTION_1	IF_1
0x4000089	    0xf20f11050000	         movsd qword [0x04000091], xmm0 	       103	alpha.c	FUNCTION_1	IF_1
0x4000091	    0x48c705000000	               mov qword [0x0400009c], 0	       104	alpha.c	FUNCTION_1	IF_1
0x400009c	    0x8b0500000000	            mov eax, dword [0x040000a2] 	       107	alpha.c	FUNCTION_1	CALL_5
0x40000a2	      0x2500010000	                          and eax, 0x100	       107	alpha.c	FUNCTION_1	CALL_5
0x40000a7	            0x85c0	                           test eax, eax	       107	alpha.c	FUNCTION_1	CALL_5
0x40000a9	            0x7435	                            je 0x40000e0	       107	alpha.c	FUNCTION_1	CALL_5
0x40000ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       107	alpha.c	FUNCTION_1	CALL_5
0x40000af	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       107	alpha.c	FUNCTION_1	CALL_5
0x40000b3	      0xbe00000000	                              mov esi, 0	       107	alpha.c	FUNCTION_1	CALL_5
0x40000b8	      0xbf00000000	                              mov edi, 0	       107	alpha.c	FUNCTION_1	CALL_5
0x40000bd	      0xe800000000	                          call 0x40000c2	       107	alpha.c	FUNCTION_1	CALL_5
0x40000c2	          0x4889c7	                            mov rdi, rax	       107	alpha.c	FUNCTION_1	CALL_5
0x40000c5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       107	alpha.c	FUNCTION_1	CALL_5
0x40000c9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       107	alpha.c	FUNCTION_1	CALL_5
0x40000cd	          0x4889d1	                            mov rcx, rdx	       107	alpha.c	FUNCTION_1	CALL_5
0x40000d0	          0x4889c2	                            mov rdx, rax	       107	alpha.c	FUNCTION_1	CALL_5
0x40000d3	          0x4889de	                            mov rsi, rbx	       107	alpha.c	FUNCTION_1	CALL_5
0x40000d6	      0xb800000000	                              mov eax, 0	       107	alpha.c	FUNCTION_1	CALL_5
0x40000db	      0xe800000000	                          call 0x40000e0	       107	alpha.c	FUNCTION_1	CALL_5
0x40000e0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       110	alpha.c	FUNCTION_1	FOR_1
0x40000e4	        0x4883c003	                              add rax, 3	       110	alpha.c	FUNCTION_1	FOR_1
0x40000e8	        0x4883e0fc	             and rax, 0xfffffffffffffffc	       110	alpha.c	FUNCTION_1	FOR_1
0x40000ec	        0x488945d8	             mov qword [rbp - 0x28], rax	       110	alpha.c	FUNCTION_1	FOR_1
0x40000f0	      0xe91b020000	                           jmp 0x4000310	       110	alpha.c	FUNCTION_1	FOR_1
0x40000f5	    0x488b05000000	            mov rax, qword [0x040000fc] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x40000fc	        0x488b4008	                mov rax, qword [rax + 8]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000100	        0x488b4038	            mov rax, qword [rax + 0x38] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000104	    0x488b0d000000	            mov rcx, qword [0x0400010b] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x400010b	    0x488b15000000	            mov rdx, qword [0x04000112] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000112	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000116	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x400011a	          0x4829d6	                            sub rsi, rdx	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x400011d	          0x4889f2	                            mov rdx, rsi	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000120	          0x4801ca	                            add rdx, rcx	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000123	          0x4889d7	                            mov rdi, rdx	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000126	            0xffd0	                                call rax	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x4000128	          0x8945d4	             mov dword [rbp - 0x2c], eax	       112	alpha.c	FUNCTION_1	FOR_1	CALL_6
0x400012b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400012e	      0x25000000fc	                     and eax, 0xfc000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000133	      0x3d00000068	                     cmp eax, 0x68000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000138	            0x7410	                            je 0x400014a	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400013a	      0x3d000000d0	                     cmp eax, 0xd0000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400013f	     0xf8495000000	                            je 0x40001da	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000145	      0xe9c1010000	                           jmp 0x400030b	       173	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400014a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x400014d	      0x2500c00000	                         and eax, 0xc000	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000152	      0x3d00400000	                         cmp eax, 0x4000	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000157	            0x7413	                            je 0x400016c	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000159	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       126	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x400015c	      0x2500c00000	                         and eax, 0xc000	       126	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000161	      0x3d00c00000	                         cmp eax, 0xc000	       126	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000166	     0xf859b010000	                           jne 0x4000307	       126	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x400016c	    0x8b0500000000	            mov eax, dword [0x04000172] 	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x4000172	      0x2500010000	                          and eax, 0x100	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x4000177	            0x85c0	                           test eax, eax	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x4000179	            0x7444	                            je 0x40001bf	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x400017b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x400017e	      0x2500c00000	                         and eax, 0xc000	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x4000183	      0x3d00400000	                         cmp eax, 0x4000	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x4000188	            0x7507	                           jne 0x4000191	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x400018a	      0xbb00000000	                              mov ebx, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x400018f	            0xeb05	                           jmp 0x4000196	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x4000191	      0xbb00000000	                              mov ebx, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x4000196	      0xbe00000000	                              mov esi, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x400019b	      0xbf00000000	                              mov edi, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001a0	      0xe800000000	                          call 0x40001a5	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001a5	          0x4889c1	                            mov rcx, rax	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001ac	          0x4889da	                            mov rdx, rbx	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001af	          0x4889c6	                            mov rsi, rax	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001b2	          0x4889cf	                            mov rdi, rcx	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001b5	      0xb800000000	                              mov eax, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001ba	      0xe800000000	                          call 0x40001bf	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_7
0x40001bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_10
0x40001c3	      0xba00000000	                              mov edx, 0	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_10
0x40001c8	      0xbe00000000	                              mov esi, 0	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_10
0x40001cd	          0x4889c7	                            mov rdi, rax	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_10
0x40001d0	      0xe800000000	                          call 0x40001d5	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_10
0x40001d5	      0xe92d010000	                           jmp 0x4000307	       135	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40001da	    0x8b0500000000	            mov eax, dword [0x040001e0] 	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001e0	      0x2500010000	                          and eax, 0x100	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001e5	            0x85c0	                           test eax, eax	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001e7	            0x7426	                            je 0x400020f	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001e9	      0xbe00000000	                              mov esi, 0	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001ee	      0xbf00000000	                              mov edi, 0	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001f3	      0xe800000000	                          call 0x40001f8	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001f8	          0x4889c2	                            mov rdx, rax	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x40001ff	          0x4889c6	                            mov rsi, rax	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x4000202	          0x4889d7	                            mov rdi, rdx	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x4000205	      0xb800000000	                              mov eax, 0	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x400020a	      0xe800000000	                          call 0x400020f	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_11
0x400020f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000212	      0x25ffff1f00	                       and eax, 0x1fffff	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000217	    0x483500001000	                       xor rax, 0x100000	       147	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400021d	          0x4889c2	                            mov rdx, rax	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000220	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000224	          0x4801d0	                            add rax, rdx	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000227	    0x482dfcff0f00	                        sub rax, 0xffffc	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400022d	        0x488945e0	             mov qword [rbp - 0x20], rax	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000231	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_14
0x4000235	            0x89c7	                            mov edi, eax	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_14
0x4000237	      0xe800000000	                          call 0x400023c	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_14
0x400023c	            0x85c0	                           test eax, eax	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_14
0x400023e	     0xf84a8000000	                            je 0x40002ec	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_14
0x4000244	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_15
0x4000248	          0x4889c6	                            mov rsi, rax	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_15
0x400024b	      0xbf00000000	                              mov edi, 0	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_15
0x4000250	      0xe800000000	                          call 0x4000255	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_15
0x4000255	        0x488945e8	             mov qword [rbp - 0x18], rax	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_15
0x4000259	      0x48837de800	               cmp qword [rbp - 0x18], 0	       151	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4
0x400025e	     0xf8488000000	                            je 0x40002ec	       151	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4
0x4000264	    0x8b0500000000	            mov eax, dword [0x0400026a] 	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x400026a	      0x2500010000	                          and eax, 0x100	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x400026f	            0x85c0	                           test eax, eax	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000271	            0x7425	                            je 0x4000298	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000273	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000277	          0x488b08	                    mov rcx, qword [rax]	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x400027a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x400027e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000282	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000286	          0x4889c6	                            mov rsi, rax	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000289	      0xbf00000000	                              mov edi, 0	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x400028e	      0xb800000000	                              mov eax, 0	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000293	      0xe800000000	                          call 0x4000298	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_16
0x4000298	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400029c	          0x488b00	                    mov rax, qword [rax]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400029f	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002a3	            0x7414	                            je 0x40002b9	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002a9	          0x488b00	                    mov rax, qword [rax]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002ac	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002b0	        0x4883ea08	                              sub rdx, 8	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002b4	          0x4839d0	                            cmp rax, rdx	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002b7	            0x7533	                           jne 0x40002ec	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002b9	    0x8b0500000000	            mov eax, dword [0x040002bf] 	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_19
0x40002bf	      0x2500010000	                          and eax, 0x100	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_19
0x40002c4	            0x85c0	                           test eax, eax	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_19
0x40002c6	            0x740a	                            je 0x40002d2	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_19
0x40002c8	      0xbf0a000000	                            mov edi, 0xa	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_19
0x40002cd	      0xe800000000	                          call 0x40002d2	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_19
0x40002d2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_20
0x40002d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_20
0x40002da	      0xba00000000	                              mov edx, 0	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_20
0x40002df	          0x4889ce	                            mov rsi, rcx	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_20
0x40002e2	          0x4889c7	                            mov rdi, rax	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_20
0x40002e5	      0xe800000000	                          call 0x40002ea	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_20
0x40002ea	            0xeb1f	                           jmp 0x400030b	       162	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002ec	    0x8b0500000000	            mov eax, dword [0x040002f2] 	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_22
0x40002f2	      0x2500010000	                          and eax, 0x100	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_22
0x40002f7	            0x85c0	                           test eax, eax	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_22
0x40002f9	            0x740f	                            je 0x400030a	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_22
0x40002fb	      0xbf00000000	                              mov edi, 0	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_22
0x4000300	      0xe800000000	                          call 0x4000305	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_22
0x4000305	            0xeb03	                           jmp 0x400030a	       170	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000307	              0x90	                                     nop	       135	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000308	            0xeb01	                           jmp 0x400030b	       135	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400030a	              0x90	                                     nop	       170	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400030b	      0x488345d804	               add qword [rbp - 0x28], 4	       110	alpha.c	FUNCTION_1	FOR_1
0x4000310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       110	alpha.c	FUNCTION_1	FOR_1
0x4000314	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       110	alpha.c	FUNCTION_1	FOR_1
0x4000318	     0xf82d7fdffff	                            jb 0x40000f5	       110	alpha.c	FUNCTION_1	FOR_1
0x400031e	              0x90	                                     nop	       176	alpha.c	FUNCTION_1
0x400031f	        0x4883c448	                           add rsp, 0x48	       176	alpha.c	FUNCTION_1
0x4000323	              0x5b	                                 pop rbx	       176	alpha.c	FUNCTION_1
0x4000324	              0x5d	                                 pop rbp	       176	alpha.c	FUNCTION_1
0x4000325	              0xc3	                                     ret	       176	alpha.c	FUNCTION_1
