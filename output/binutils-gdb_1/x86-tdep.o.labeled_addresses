x86_in_indirect_branch_thunk	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,7:DO,0:FOR,0:CALL,5	72
0x4000040	            0x4155	                                push r13	        44	x86-tdep.c	FUNCTION_2
0x4000042	            0x4154	                                push r12	        44	x86-tdep.c	FUNCTION_2
0x4000044	          0x4989f5	                            mov r13, rsi	        44	x86-tdep.c	FUNCTION_2
0x4000047	              0x55	                                push rbp	        44	x86-tdep.c	FUNCTION_2
0x4000048	              0x53	                                push rbx	        44	x86-tdep.c	FUNCTION_2
0x4000049	          0x4189d4	                           mov r12d, edx	        44	x86-tdep.c	FUNCTION_2
0x400004c	            0x89cd	                            mov ebp, ecx	        44	x86-tdep.c	FUNCTION_2
0x400004e	        0x4883ec08	                              sub rsp, 8	        44	x86-tdep.c	FUNCTION_2
0x4000052	      0xe800000000	                          call 0x4000057	        45	x86-tdep.c	FUNCTION_2	CALL_1
0x4000057	          0x4885c0	                           test rax, rax	        46	x86-tdep.c	FUNCTION_2	IF_1
0x400005a	     0xf84b0000000	                            je 0x4000110	        46	x86-tdep.c	FUNCTION_2	IF_1
0x4000060	          0x488b10	                    mov rdx, qword [rax]	        49	x86-tdep.c	FUNCTION_2	CALL_2
0x4000063	          0x4885d2	                           test rdx, rdx	        50	x86-tdep.c	FUNCTION_2	IF_2
0x4000066	     0xf84a4000000	                            je 0x4000110	        50	x86-tdep.c	FUNCTION_2	IF_2
0x400006c	      0xb913000000	                           mov ecx, 0x13	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x4000071	          0x4889d6	                            mov rsi, rdx	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x4000074	      0xbf00000000	                              mov edi, 0	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x4000079	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x400007b	      0xb801000000	                              mov eax, 1	        55	x86-tdep.c	FUNCTION_2	IF_3
0x4000080	        0x400f97c6	                                seta sil	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x4000084	           0xf92c1	                                 setb cl	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x4000087	          0x4038ce	                             cmp sil, cl	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x400008a	            0x7471	                            je 0x40000fd	        54	x86-tdep.c	FUNCTION_2	IF_3	CALL_3
0x400008c	      0xb914000000	                           mov ecx, 0x14	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x4000091	          0x4889d6	                            mov rsi, rdx	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x4000094	      0xbf00000000	                              mov edi, 0	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x4000099	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x400009b	        0x400f97c6	                                seta sil	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x400009f	           0xf92c1	                                 setb cl	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x40000a2	            0x31c0	                            xor eax, eax	        47	x86-tdep.c	FUNCTION_2	IF_1
0x40000a4	          0x4038ce	                             cmp sil, cl	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x40000a7	            0x7554	                           jne 0x40000fd	        60	x86-tdep.c	FUNCTION_2	IF_4	CALL_4
0x40000a9	         0xfb64a14	           movzx ecx, byte [rdx + 0x14] 	        65	x86-tdep.c	FUNCTION_2	IF_5
0x40000ad	      0xb801000000	                              mov eax, 1	        55	x86-tdep.c	FUNCTION_2	IF_3
0x40000b2	            0x84c9	                             test cl, cl	        65	x86-tdep.c	FUNCTION_2	IF_5
0x40000b4	            0x7447	                            je 0x40000fd	        65	x86-tdep.c	FUNCTION_2	IF_5
0x40000b6	            0x31c0	                            xor eax, eax	        47	x86-tdep.c	FUNCTION_2	IF_1
0x40000b8	          0x80f95f	                            cmp cl, 0x5f	        69	x86-tdep.c	FUNCTION_2	IF_6
0x40000bb	            0x7540	                           jne 0x40000fd	        69	x86-tdep.c	FUNCTION_2	IF_6
0x40000bd	          0x4139ec	                           cmp r12d, ebp	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000c0	            0x7d3b	                           jge 0x40000fd	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000c2	          0x83ed01	                              sub ebp, 1	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000c5	          0x4963c4	                        movsxd rax, r12d	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000c8	          0x4429e5	                           sub ebp, r12d	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000cb	      0x498d5cc500	                  lea rbx, [r13 + rax*8]	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000d0	      0x488d442801	                lea rax, [rax + rbp + 1]	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000d5	        0x488d6a15	                   lea rbp, [rdx + 0x15]	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000d9	      0x4d8d64c500	                  lea r12, [r13 + rax*8]	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000de	            0xeb09	                           jmp 0x40000e9	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000e0	        0x4883c308	                              add rbx, 8	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000e4	          0x4c39e3	                            cmp rbx, r12	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000e7	            0x7427	                            je 0x4000110	        32	x86-tdep.c	FUNCTION_1	FOR_1
0x40000e9	          0x488b33	                    mov rsi, qword [rbx]	        33	x86-tdep.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000ec	          0x4889ef	                            mov rdi, rbp	        33	x86-tdep.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000ef	      0xe800000000	                          call 0x40000f4	        33	x86-tdep.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000f4	            0x85c0	                           test eax, eax	        33	x86-tdep.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000f6	            0x75e8	                           jne 0x40000e0	        33	x86-tdep.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000f8	      0xb801000000	                              mov eax, 1	        55	x86-tdep.c	FUNCTION_2	IF_3
0x40000fd	        0x4883c408	                              add rsp, 8	        76	x86-tdep.c	FUNCTION_2
0x4000101	              0x5b	                                 pop rbx	        76	x86-tdep.c	FUNCTION_2
0x4000102	              0x5d	                                 pop rbp	        76	x86-tdep.c	FUNCTION_2
0x4000103	            0x415c	                                 pop r12	        76	x86-tdep.c	FUNCTION_2
0x4000105	            0x415d	                                 pop r13	        76	x86-tdep.c	FUNCTION_2
0x4000107	              0xc3	                                     ret	        76	x86-tdep.c	FUNCTION_2
0x4000108	     0xf1f84000000	                   nop dword [rax + rax]	        76	x86-tdep.c	FUNCTION_2
0x4000110	        0x4883c408	                              add rsp, 8	        76	x86-tdep.c	FUNCTION_2
0x4000114	            0x31c0	                            xor eax, eax	        47	x86-tdep.c	FUNCTION_2	IF_1
0x4000116	              0x5b	                                 pop rbx	        76	x86-tdep.c	FUNCTION_2
0x4000117	              0x5d	                                 pop rbp	        76	x86-tdep.c	FUNCTION_2
0x4000118	            0x415c	                                 pop r12	        76	x86-tdep.c	FUNCTION_2
0x400011a	            0x415d	                                 pop r13	        76	x86-tdep.c	FUNCTION_2
0x400011c	              0xc3	                                     ret	        76	x86-tdep.c	FUNCTION_2
