xstrndup	FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,3:ELSE,0:functions,0:IF,0	28
0x4000040	              0x55	                                push rbp	        49	xstrndup.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        49	xstrndup.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        49	xstrndup.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        49	xstrndup.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        49	xstrndup.c	FUNCTION_1
0x4000050	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        51	xstrndup.c	FUNCTION_1	CALL_1
0x4000054	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	xstrndup.c	FUNCTION_1	CALL_1
0x4000058	          0x4889d6	                            mov rsi, rdx	        51	xstrndup.c	FUNCTION_1	CALL_1
0x400005b	          0x4889c7	                            mov rdi, rax	        51	xstrndup.c	FUNCTION_1	CALL_1
0x400005e	      0xe800000000	                          call 0x4000063	        51	xstrndup.c	FUNCTION_1	CALL_1
0x4000063	        0x488945f0	             mov qword [rbp - 0x10], rax	        51	xstrndup.c	FUNCTION_1	CALL_1
0x4000067	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        53	xstrndup.c	FUNCTION_1	CALL_2
0x400006b	        0x4883c001	                              add rax, 1	        53	xstrndup.c	FUNCTION_1	CALL_2
0x400006f	          0x4889c7	                            mov rdi, rax	        53	xstrndup.c	FUNCTION_1	CALL_2
0x4000072	      0xe800000000	                          call 0x4000077	        53	xstrndup.c	FUNCTION_1	CALL_2
0x4000077	        0x488945f8	                mov qword [rbp - 8], rax	        53	xstrndup.c	FUNCTION_1	CALL_2
0x400007b	        0x488b55f8	                mov rdx, qword [rbp - 8]	        55	xstrndup.c	FUNCTION_1
0x400007f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	xstrndup.c	FUNCTION_1
0x4000083	          0x4801d0	                            add rax, rdx	        55	xstrndup.c	FUNCTION_1
0x4000086	          0xc60000	                       mov byte [rax], 0	        55	xstrndup.c	FUNCTION_1
0x4000089	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        56	xstrndup.c	FUNCTION_1	CALL_3
0x400008d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        56	xstrndup.c	FUNCTION_1	CALL_3
0x4000091	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	xstrndup.c	FUNCTION_1	CALL_3
0x4000095	          0x4889ce	                            mov rsi, rcx	        56	xstrndup.c	FUNCTION_1	CALL_3
0x4000098	          0x4889c7	                            mov rdi, rax	        56	xstrndup.c	FUNCTION_1	CALL_3
0x400009b	      0xe800000000	                          call 0x40000a0	        56	xstrndup.c	FUNCTION_1	CALL_3
0x40000a0	              0xc9	                                   leave	        57	xstrndup.c	FUNCTION_1
0x40000a1	              0xc3	                                     ret	        57	xstrndup.c	FUNCTION_1
