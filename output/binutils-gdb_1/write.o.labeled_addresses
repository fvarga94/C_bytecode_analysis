create_note_reloc	IF,4:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,2:CALL,7	98
0x4003d01	              0x55	                                push rbp	      1900	write.c	FUNCTION_31
0x4003d02	          0x4889e5	                            mov rbp, rsp	      1900	write.c	FUNCTION_31
0x4003d05	        0x4883ec40	                           sub rsp, 0x40	      1900	write.c	FUNCTION_31
0x4003d09	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1900	write.c	FUNCTION_31
0x4003d0d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1900	write.c	FUNCTION_31
0x4003d11	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1900	write.c	FUNCTION_31
0x4003d15	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1900	write.c	FUNCTION_31
0x4003d18	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      1900	write.c	FUNCTION_31
0x4003d1c	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      1900	write.c	FUNCTION_31
0x4003d20	      0xbf48000000	                           mov edi, 0x48	      1903	write.c	FUNCTION_31	CALL_1
0x4003d25	      0xe800000000	                          call 0x4003d2a	      1903	write.c	FUNCTION_31	CALL_1
0x4003d2a	        0x488945f8	                mov qword [rbp - 8], rax	      1903	write.c	FUNCTION_31	CALL_1
0x4003d2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1906	write.c	FUNCTION_31
0x4003d32	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1906	write.c	FUNCTION_31
0x4003d36	        0x48895008	                mov qword [rax + 8], rdx	      1906	write.c	FUNCTION_31
0x4003d3a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1907	write.c	FUNCTION_31
0x4003d3e	        0x488b5008	                mov rdx, qword [rax + 8]	      1907	write.c	FUNCTION_31
0x4003d42	        0x488b45f8	                mov rax, qword [rbp - 8]	      1907	write.c	FUNCTION_31
0x4003d46	        0x48895010	             mov qword [rax + 0x10], rdx	      1907	write.c	FUNCTION_31
0x4003d4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1908	write.c	FUNCTION_31
0x4003d4e	        0x488d5010	                   lea rdx, [rax + 0x10]	      1908	write.c	FUNCTION_31
0x4003d52	        0x488b45f8	                mov rax, qword [rbp - 8]	      1908	write.c	FUNCTION_31
0x4003d56	        0x48895018	             mov qword [rax + 0x18], rdx	      1908	write.c	FUNCTION_31
0x4003d5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1909	write.c	FUNCTION_31
0x4003d5e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1909	write.c	FUNCTION_31
0x4003d62	        0x48895020	             mov qword [rax + 0x20], rdx	      1909	write.c	FUNCTION_31
0x4003d66	        0x488b45f8	                mov rax, qword [rbp - 8]	      1910	write.c	FUNCTION_31
0x4003d6a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1910	write.c	FUNCTION_31
0x4003d6e	        0x48895028	             mov qword [rax + 0x28], rdx	      1910	write.c	FUNCTION_31
0x4003d72	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1911	write.c	FUNCTION_31	CALL_2
0x4003d75	    0x488b05000000	            mov rax, qword [0x04003d7c] 	      1911	write.c	FUNCTION_31	CALL_2
0x4003d7c	            0x89d6	                            mov esi, edx	      1911	write.c	FUNCTION_31	CALL_2
0x4003d7e	          0x4889c7	                            mov rdi, rax	      1911	write.c	FUNCTION_31	CALL_2
0x4003d81	      0xe800000000	                          call 0x4003d86	      1911	write.c	FUNCTION_31	CALL_2
0x4003d86	          0x4889c2	                            mov rdx, rax	      1911	write.c	FUNCTION_31	CALL_2
0x4003d89	        0x488b45f8	                mov rax, qword [rbp - 8]	      1911	write.c	FUNCTION_31	CALL_2
0x4003d8d	        0x48895030	             mov qword [rax + 0x30], rdx	      1911	write.c	FUNCTION_31	CALL_2
0x4003d91	        0x488b45f8	                mov rax, qword [rbp - 8]	      1913	write.c	FUNCTION_31	IF_1
0x4003d95	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1913	write.c	FUNCTION_31	IF_1
0x4003d99	          0x4885c0	                           test rax, rax	      1913	write.c	FUNCTION_31	IF_1
0x4003d9c	            0x751c	                           jne 0x4003dba	      1913	write.c	FUNCTION_31	IF_1
0x4003d9e	      0xbf00000000	                              mov edi, 0	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x4003da3	      0xe800000000	                          call 0x4003da8	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x4003da8	          0x4889c7	                            mov rdi, rax	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x4003dab	      0xb800000000	                              mov eax, 0	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x4003db0	      0xe800000000	                          call 0x4003db5	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x4003db5	      0xe9bc000000	                           jmp 0x4003e76	      1916	write.c	FUNCTION_31	IF_1
0x4003dba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1919	write.c	FUNCTION_31	CALL_5
0x4003dbe	    0x48c740380000	               mov qword [rax + 0x38], 0	      1919	write.c	FUNCTION_31	CALL_5
0x4003dc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1920	write.c	FUNCTION_31
0x4003dca	    0xc74040000000	               mov dword [rax + 0x40], 0	      1920	write.c	FUNCTION_31
0x4003dd1	    0x488b15000000	            mov rdx, qword [0x04003dd8] 	      1922	write.c	FUNCTION_31
0x4003dd8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1922	write.c	FUNCTION_31
0x4003ddc	          0x488910	                    mov qword [rax], rdx	      1922	write.c	FUNCTION_31
0x4003ddf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1923	write.c	FUNCTION_31
0x4003de3	    0x488905000000	            mov qword [0x04003dea], rax 	      1923	write.c	FUNCTION_31
0x4003dea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1926	write.c	FUNCTION_31	IF_2
0x4003dee	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      1926	write.c	FUNCTION_31	IF_2
0x4003df2	          0x83e004	                              and eax, 4	      1926	write.c	FUNCTION_31	IF_2
0x4003df5	            0x84c0	                             test al, al	      1926	write.c	FUNCTION_31	IF_2
0x4003df7	            0x7420	                            je 0x4003e19	      1926	write.c	FUNCTION_31	IF_2
0x4003df9	    0x488b05000000	            mov rax, qword [0x04003e00] 	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e00	        0x488b4008	                mov rax, qword [rax + 8]	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e04	          0x488b00	                    mov rax, qword [rax]	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e07	      0xbe00000000	                              mov esi, 0	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e0c	          0x4889c7	                            mov rdi, rax	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e0f	      0xe800000000	                          call 0x4003e14	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e14	          0x4885c0	                           test rax, rax	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e17	            0x745d	                            je 0x4003e76	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4003e19	    0x8b0500000000	            mov eax, dword [0x04003e1f] 	      1931	write.c	FUNCTION_31	IF_2	IF_3
0x4003e1f	            0x85c0	                           test eax, eax	      1931	write.c	FUNCTION_31	IF_2	IF_3
0x4003e21	            0x7442	                            je 0x4003e65	      1931	write.c	FUNCTION_31	IF_2	IF_3
0x4003e23	    0x488b05000000	            mov rax, qword [0x04003e2a] 	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4003e2a	          0x4889c7	                            mov rdi, rax	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4003e2d	      0xe800000000	                          call 0x4003e32	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4003e32	          0x83f820	                           cmp eax, 0x20	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4003e35	            0x7717	                            ja 0x4003e4e	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4003e37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x4003e3b	        0x488d5003	                      lea rdx, [rax + 3]	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x4003e3f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x4003e43	          0x4801d0	                            add rax, rdx	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x4003e46	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x4003e4a	            0x8810	                      mov byte [rax], dl	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x4003e4c	            0xeb28	                           jmp 0x4003e76	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x4003e4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4003e52	        0x488d5007	                      lea rdx, [rax + 7]	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4003e56	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4003e5a	          0x4801d0	                            add rax, rdx	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4003e5d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4003e61	            0x8810	                      mov byte [rax], dl	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4003e63	            0xeb11	                           jmp 0x4003e76	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4003e65	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1939	write.c	FUNCTION_31	IF_2	ELSE_1	ELSE_2
0x4003e69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1939	write.c	FUNCTION_31	IF_2	ELSE_1	ELSE_2
0x4003e6d	          0x4801d0	                            add rax, rdx	      1939	write.c	FUNCTION_31	IF_2	ELSE_1	ELSE_2
0x4003e70	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1939	write.c	FUNCTION_31	IF_2	ELSE_1	ELSE_2
0x4003e74	            0x8810	                      mov byte [rax], dl	      1939	write.c	FUNCTION_31	IF_2	ELSE_1	ELSE_2
0x4003e76	              0xc9	                                   leave	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x4003e77	              0xc3	                                     ret	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
relax_seg	IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,2	33
0x4000c79	              0x55	                                push rbp	       550	write.c	FUNCTION_13
0x4000c7a	          0x4889e5	                            mov rbp, rsp	       550	write.c	FUNCTION_13
0x4000c7d	        0x4883ec30	                           sub rsp, 0x30	       550	write.c	FUNCTION_13
0x4000c81	        0x48897de8	             mov qword [rbp - 0x18], rdi	       550	write.c	FUNCTION_13
0x4000c85	        0x488975e0	             mov qword [rbp - 0x20], rsi	       550	write.c	FUNCTION_13
0x4000c89	        0x488955d8	             mov qword [rbp - 0x28], rdx	       550	write.c	FUNCTION_13
0x4000c8d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       551	write.c	FUNCTION_13	CALL_1
0x4000c91	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       551	write.c	FUNCTION_13	CALL_1
0x4000c98	        0x488945f0	             mov qword [rbp - 0x10], rax	       551	write.c	FUNCTION_13	CALL_1
0x4000c9c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       552	write.c	FUNCTION_13
0x4000ca0	        0x488945f8	                mov qword [rbp - 8], rax	       552	write.c	FUNCTION_13
0x4000ca4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       554	write.c	FUNCTION_13	IF_1
0x4000ca9	            0x743a	                            je 0x4000ce5	       554	write.c	FUNCTION_13	IF_1
0x4000cab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       554	write.c	FUNCTION_13	IF_1
0x4000caf	          0x488b00	                    mov rax, qword [rax]	       554	write.c	FUNCTION_13	IF_1
0x4000cb2	          0x4885c0	                           test rax, rax	       554	write.c	FUNCTION_13	IF_1
0x4000cb5	            0x742e	                            je 0x4000ce5	       554	write.c	FUNCTION_13	IF_1
0x4000cb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cbb	            0x8b10	                    mov edx, dword [rax]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cc1	          0x488b00	                    mov rax, qword [rax]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cc4	          0x488b00	                    mov rax, qword [rax]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cc7	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000ccb	          0x4889ce	                            mov rsi, rcx	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cce	          0x4889c7	                            mov rdi, rax	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cd1	      0xe800000000	                          call 0x4000cd6	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cd6	            0x85c0	                           test eax, eax	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cd8	            0x740b	                            je 0x4000ce5	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4000cda	        0x488b45f8	                mov rax, qword [rbp - 8]	       556	write.c	FUNCTION_13	IF_1
0x4000cde	    0xc74004010000	                  mov dword [rax + 4], 1	       556	write.c	FUNCTION_13	IF_1
0x4000ce5	              0x90	                                     nop	       557	write.c	FUNCTION_13
0x4000ce6	              0xc9	                                   leave	       557	write.c	FUNCTION_13
0x4000ce7	              0xc3	                                     ret	       557	write.c	FUNCTION_13
number_to_chars_bigendian	IF,1:SWITCH,0:WHILE,1:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	27
0x400591c	              0x55	                                push rbp	      3104	write.c	FUNCTION_37
0x400591d	          0x4889e5	                            mov rbp, rsp	      3104	write.c	FUNCTION_37
0x4005920	        0x4883ec20	                           sub rsp, 0x20	      3104	write.c	FUNCTION_37
0x4005924	        0x48897df8	                mov qword [rbp - 8], rdi	      3104	write.c	FUNCTION_37
0x4005928	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3104	write.c	FUNCTION_37
0x400592c	          0x8955ec	             mov dword [rbp - 0x14], edx	      3104	write.c	FUNCTION_37
0x400592f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3105	write.c	FUNCTION_37	IF_1
0x4005933	            0x7f2c	                            jg 0x4005961	      3105	write.c	FUNCTION_37	IF_1
0x4005935	      0xba00000000	                              mov edx, 0	      3106	write.c	FUNCTION_37	CALL_1
0x400593a	      0xbe220c0000	                          mov esi, 0xc22	      3106	write.c	FUNCTION_37	CALL_1
0x400593f	      0xbf00000000	                              mov edi, 0	      3106	write.c	FUNCTION_37	CALL_1
0x4005944	      0xe800000000	                          call 0x4005949	      3106	write.c	FUNCTION_37	CALL_1
0x4005949	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3109	write.c	FUNCTION_37	WHILE_1
0x400594c	          0x4863d0	                         movsxd rdx, eax	      3109	write.c	FUNCTION_37	WHILE_1
0x400594f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3109	write.c	FUNCTION_37	WHILE_1
0x4005953	          0x4801d0	                            add rax, rdx	      3109	write.c	FUNCTION_37	WHILE_1
0x4005956	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3109	write.c	FUNCTION_37	WHILE_1
0x400595a	            0x8810	                      mov byte [rax], dl	      3109	write.c	FUNCTION_37	WHILE_1
0x400595c	      0x48c16df008	               shr qword [rbp - 0x10], 8	      3110	write.c	FUNCTION_37	WHILE_1
0x4005961	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3107	write.c	FUNCTION_37	WHILE_1
0x4005964	          0x8d50ff	                      lea edx, [rax - 1]	      3107	write.c	FUNCTION_37	WHILE_1
0x4005967	          0x8955ec	             mov dword [rbp - 0x14], edx	      3107	write.c	FUNCTION_37	WHILE_1
0x400596a	            0x85c0	                           test eax, eax	      3107	write.c	FUNCTION_37	WHILE_1
0x400596c	            0x75db	                           jne 0x4005949	      3107	write.c	FUNCTION_37	WHILE_1
0x400596e	              0x90	                                     nop	      3112	write.c	FUNCTION_37
0x400596f	              0xc9	                                   leave	      3112	write.c	FUNCTION_37
0x4005970	              0xc3	                                     ret	      3112	write.c	FUNCTION_37
fix_new	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	27
0x40003e3	              0x55	                                push rbp	       238	write.c	ELSE_2	FUNCTION_2
0x40003e4	          0x4889e5	                            mov rbp, rsp	       238	write.c	ELSE_2	FUNCTION_2
0x40003e7	        0x4883ec30	                           sub rsp, 0x30	       238	write.c	ELSE_2	FUNCTION_2
0x40003eb	        0x48897df8	                mov qword [rbp - 8], rdi	       238	write.c	ELSE_2	FUNCTION_2
0x40003ef	          0x8975f4	              mov dword [rbp - 0xc], esi	       238	write.c	ELSE_2	FUNCTION_2
0x40003f2	          0x8955f0	             mov dword [rbp - 0x10], edx	       238	write.c	ELSE_2	FUNCTION_2
0x40003f5	        0x48894de8	             mov qword [rbp - 0x18], rcx	       238	write.c	ELSE_2	FUNCTION_2
0x40003f9	        0x4c8945e0	              mov qword [rbp - 0x20], r8	       238	write.c	ELSE_2	FUNCTION_2
0x40003fd	        0x44894ddc	             mov dword [rbp - 0x24], r9d	       238	write.c	ELSE_2	FUNCTION_2
0x4000401	        0x4c8b45e0	              mov r8, qword [rbp - 0x20]	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000405	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000409	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400040c	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400040f	        0x488b45f8	                mov rax, qword [rbp - 8]	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000413	        0x4883ec08	                              sub rsp, 8	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000417	            0x6a00	                                  push 0	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000419	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400041c	              0x57	                                push rdi	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400041d	          0x8b7ddc	             mov edi, dword [rbp - 0x24]	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000420	              0x57	                                push rdi	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000421	          0x4d89c1	                              mov r9, r8	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000424	    0x41b800000000	                              mov r8d, 0	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400042a	          0x4889c7	                            mov rdi, rax	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400042d	      0xe82efcffff	               call sym.fix_new_internal	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000432	        0x4883c420	                           add rsp, 0x20	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4000436	              0xc9	                                   leave	       241	write.c	ELSE_2	FUNCTION_2
0x4000437	              0xc3	                                     ret	       241	write.c	ELSE_2	FUNCTION_2
subsegs_finish_section	IF,5:SWITCH,0:WHILE,1:functions,0:FOR,1:DO,0:ELSE,1:CALL,8	86
0x4003a44	              0x55	                                push rbp	      1798	write.c	FUNCTION_28
0x4003a45	          0x4889e5	                            mov rbp, rsp	      1798	write.c	FUNCTION_28
0x4003a48	        0x4883ec30	                           sub rsp, 0x30	      1798	write.c	FUNCTION_28
0x4003a4c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1798	write.c	FUNCTION_28
0x4003a50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1800	write.c	FUNCTION_28	CALL_1
0x4003a54	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1800	write.c	FUNCTION_28	CALL_1
0x4003a5b	        0x488945f8	                mov qword [rbp - 8], rax	      1800	write.c	FUNCTION_28	CALL_1
0x4003a5f	      0x48837df800	                  cmp qword [rbp - 8], 0	      1801	write.c	FUNCTION_28	IF_1
0x4003a64	     0xf842e010000	                            je 0x4003b98	      1801	write.c	FUNCTION_28	IF_1
0x4003a6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1804	write.c	FUNCTION_28	FOR_1
0x4003a6e	          0x488b00	                    mov rax, qword [rax]	      1804	write.c	FUNCTION_28	FOR_1
0x4003a71	        0x488945f0	             mov qword [rbp - 0x10], rax	      1804	write.c	FUNCTION_28	FOR_1
0x4003a75	      0xe911010000	                           jmp 0x4003b8b	      1804	write.c	FUNCTION_28	FOR_1
0x4003a7a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4003a7e	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4003a81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4003a85	            0x89d6	                            mov esi, edx	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4003a87	          0x4889c7	                            mov rdi, rax	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4003a8a	      0xe800000000	                          call 0x4003a8f	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4003a8f	      0xe800000000	                          call 0x4003a94	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4003a94	            0x85c0	                           test eax, eax	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4003a96	            0x740a	                            je 0x4003aa2	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4003a98	    0xc70500000000	               mov dword [0x04003aa2], 1	      1816	write.c	FUNCTION_28	FOR_1	IF_2
0x4003aa2	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1818	write.c	FUNCTION_28	FOR_1
0x4003aa9	    0x488b05000000	            mov rax, qword [0x04003ab0] 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ab0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ab3	      0x2500008000	                       and eax, 0x800000	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ab8	            0x85c0	                           test eax, eax	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4003aba	            0x7449	                            je 0x4003b05	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4003abc	    0x488b05000000	            mov rax, qword [0x04003ac3] 	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ac3	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ac9	            0x85c0	                           test eax, eax	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4003acb	            0x7438	                            je 0x4003b05	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4003acd	    0x488b05000000	            mov rax, qword [0x04003ad4] 	      1822	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ad4	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1822	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ada	          0x8945e8	             mov dword [rbp - 0x18], eax	      1822	write.c	FUNCTION_28	FOR_1	IF_3
0x4003add	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1823	write.c	FUNCTION_28	FOR_1	IF_3
0x4003ae4	            0xeb07	                           jmp 0x4003aed	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4003ae6	        0x8345ec01	               add dword [rbp - 0x14], 1	      1827	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4003aea	          0xd16de8	               shr dword [rbp - 0x18], 1	      1828	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4003aed	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4003af0	          0x83e001	                              and eax, 1	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4003af3	            0x85c0	                           test eax, eax	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4003af5	            0x74ef	                            je 0x4003ae6	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4003af7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1831	write.c	FUNCTION_28	FOR_1	IF_3	IF_4
0x4003afa	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1831	write.c	FUNCTION_28	FOR_1	IF_3	IF_4
0x4003afd	            0x7e06	                           jle 0x4003b05	      1831	write.c	FUNCTION_28	FOR_1	IF_3	IF_4
0x4003aff	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1832	write.c	FUNCTION_28	FOR_1	IF_3	IF_4
0x4003b02	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1832	write.c	FUNCTION_28	FOR_1	IF_3	IF_4
0x4003b05	    0x488b05000000	            mov rax, qword [0x04003b0c] 	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4003b0c	          0x4889c7	                            mov rdi, rax	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4003b0f	      0xe800000000	                          call 0x4003b14	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4003b14	            0x85c0	                           test eax, eax	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4003b16	            0x7411	                            je 0x4003b29	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4003b18	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4003b1b	      0xbe00000000	                              mov esi, 0	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4003b20	            0x89c7	                            mov edi, eax	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4003b22	      0xe800000000	                          call 0x4003b27	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4003b27	            0xeb14	                           jmp 0x4003b3d	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4003b29	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4003b2c	      0xba00000000	                              mov edx, 0	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4003b31	      0xbe00000000	                              mov esi, 0	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4003b36	            0x89c7	                            mov edi, eax	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4003b38	      0xe800000000	                          call 0x4003b3d	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4003b3d	    0x488b05000000	            mov rax, qword [0x04003b44] 	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4003b44	          0x4889c7	                            mov rdi, rax	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4003b47	      0xe800000000	                          call 0x4003b4c	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4003b4c	    0x488b05000000	            mov rax, qword [0x04003b53] 	      1846	write.c	FUNCTION_28	FOR_1
0x4003b53	    0x48c740100000	               mov qword [rax + 0x10], 0	      1846	write.c	FUNCTION_28	FOR_1
0x4003b5b	    0x488b05000000	            mov rax, qword [0x04003b62] 	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b62	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b66	          0x4885c0	                           test rax, rax	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b69	            0x7414	                            je 0x4003b7f	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b6b	      0xba00000000	                              mov edx, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b70	      0xbe37070000	                          mov esi, 0x737	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b75	      0xbf00000000	                              mov edi, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b7a	      0xe800000000	                          call 0x4003b7f	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4003b7f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1806	write.c	FUNCTION_28	FOR_1
0x4003b83	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1806	write.c	FUNCTION_28	FOR_1
0x4003b87	        0x488945f0	             mov qword [rbp - 0x10], rax	      1806	write.c	FUNCTION_28	FOR_1
0x4003b8b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1804	write.c	FUNCTION_28	FOR_1
0x4003b90	     0xf85e4feffff	                           jne 0x4003a7a	      1804	write.c	FUNCTION_28	FOR_1
0x4003b96	            0xeb01	                           jmp 0x4003b99	      1804	write.c	FUNCTION_28	FOR_1
0x4003b98	              0x90	                                     nop	      1802	write.c	FUNCTION_28	IF_1
0x4003b99	              0xc9	                                   leave	      1849	write.c	FUNCTION_28
0x4003b9a	              0xc3	                                     ret	      1849	write.c	FUNCTION_28
relax_align	IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,0	22
0x4004bf1	              0x55	                                push rbp	      2598	write.c	FUNCTION_35
0x4004bf2	          0x4889e5	                            mov rbp, rsp	      2598	write.c	FUNCTION_35
0x4004bf5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2598	write.c	FUNCTION_35
0x4004bf9	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2598	write.c	FUNCTION_35
0x4004bfc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2602	write.c	FUNCTION_35
0x4004bff	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      2602	write.c	FUNCTION_35
0x4004c06	            0x89c1	                            mov ecx, eax	      2602	write.c	FUNCTION_35
0x4004c08	          0x48d3e2	                             shl rdx, cl	      2602	write.c	FUNCTION_35
0x4004c0b	          0x4889d0	                            mov rax, rdx	      2602	write.c	FUNCTION_35
0x4004c0e	          0x48f7d0	                                 not rax	      2602	write.c	FUNCTION_35
0x4004c11	        0x488945f0	             mov qword [rbp - 0x10], rax	      2602	write.c	FUNCTION_35
0x4004c15	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2603	write.c	FUNCTION_35
0x4004c19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2603	write.c	FUNCTION_35
0x4004c1d	          0x4801c2	                            add rdx, rax	      2603	write.c	FUNCTION_35
0x4004c20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2603	write.c	FUNCTION_35
0x4004c24	          0x48f7d0	                                 not rax	      2603	write.c	FUNCTION_35
0x4004c27	          0x4821d0	                            and rax, rdx	      2603	write.c	FUNCTION_35
0x4004c2a	        0x488945f8	                mov qword [rbp - 8], rax	      2603	write.c	FUNCTION_35
0x4004c2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2610	write.c	FUNCTION_35
0x4004c32	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      2610	write.c	FUNCTION_35
0x4004c36	              0x5d	                                 pop rbp	      2611	write.c	FUNCTION_35
0x4004c37	              0xc3	                                     ret	      2611	write.c	FUNCTION_35
merge_data_into_text	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,5	25
0x4003788	              0x55	                                push rbp	      1728	write.c	FUNCTION_26
0x4003789	          0x4889e5	                            mov rbp, rsp	      1728	write.c	FUNCTION_26
0x400378c	    0x488b05000000	            mov rax, qword [0x04003793] 	      1729	write.c	FUNCTION_26	CALL_1
0x4003793	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1729	write.c	FUNCTION_26	CALL_1
0x400379a	          0x488b00	                    mov rax, qword [rax]	      1729	write.c	FUNCTION_26	CALL_1
0x400379d	        0x488b4008	                mov rax, qword [rax + 8]	      1729	write.c	FUNCTION_26	CALL_1
0x40037a1	    0x488b15000000	            mov rdx, qword [0x040037a8] 	      1730	write.c	FUNCTION_26	CALL_2
0x40037a8	    0x488b92a80000	            mov rdx, qword [rdx + 0xa8] 	      1730	write.c	FUNCTION_26	CALL_2
0x40037af	          0x488b12	                    mov rdx, qword [rdx]	      1730	write.c	FUNCTION_26	CALL_2
0x40037b2	          0x488b12	                    mov rdx, qword [rdx]	      1730	write.c	FUNCTION_26	CALL_2
0x40037b5	        0x48895038	             mov qword [rax + 0x38], rdx	      1729	write.c	FUNCTION_26	CALL_1
0x40037b9	    0x488b05000000	            mov rax, qword [0x040037c0] 	      1731	write.c	FUNCTION_26	CALL_3
0x40037c0	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1731	write.c	FUNCTION_26	CALL_3
0x40037c7	          0x488b00	                    mov rax, qword [rax]	      1731	write.c	FUNCTION_26	CALL_3
0x40037ca	    0x488b15000000	            mov rdx, qword [0x040037d1] 	      1732	write.c	FUNCTION_26	CALL_4
0x40037d1	    0x488b92a80000	            mov rdx, qword [rdx + 0xa8] 	      1732	write.c	FUNCTION_26	CALL_4
0x40037d8	          0x488b12	                    mov rdx, qword [rdx]	      1732	write.c	FUNCTION_26	CALL_4
0x40037db	        0x488b5208	                mov rdx, qword [rdx + 8]	      1732	write.c	FUNCTION_26	CALL_4
0x40037df	        0x48895008	                mov qword [rax + 8], rdx	      1731	write.c	FUNCTION_26	CALL_3
0x40037e3	    0x488b05000000	            mov rax, qword [0x040037ea] 	      1733	write.c	FUNCTION_26	CALL_5
0x40037ea	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1733	write.c	FUNCTION_26	CALL_5
0x40037f1	    0x48c700000000	                      mov qword [rax], 0	      1733	write.c	FUNCTION_26	CALL_5
0x40037f8	              0x90	                                     nop	      1734	write.c	FUNCTION_26
0x40037f9	              0x5d	                                 pop rbp	      1734	write.c	FUNCTION_26
0x40037fa	              0xc3	                                     ret	      1734	write.c	FUNCTION_26
fixup_segment	IF,30:SWITCH,0:WHILE,0:functions,0:FOR,2:DO,0:ELSE,8:CALL,44	551
0x4001619	              0x55	                                push rbp	       918	write.c	FUNCTION_17
0x400161a	          0x4889e5	                            mov rbp, rsp	       918	write.c	FUNCTION_17
0x400161d	            0x4156	                                push r14	       918	write.c	FUNCTION_17
0x400161f	            0x4155	                                push r13	       918	write.c	FUNCTION_17
0x4001621	            0x4154	                                push r12	       918	write.c	FUNCTION_17
0x4001623	              0x53	                                push rbx	       918	write.c	FUNCTION_17
0x4001624	    0x4881ecc00000	                           sub rsp, 0xc0	       918	write.c	FUNCTION_17
0x400162b	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       918	write.c	FUNCTION_17
0x4001632	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       918	write.c	FUNCTION_17
0x4001639	    0x64488b042528	                mov rax, qword fs:[0x28]	       918	write.c	FUNCTION_17
0x4001642	        0x488945d8	             mov qword [rbp - 0x28], rax	       918	write.c	FUNCTION_17
0x4001646	            0x31c0	                            xor eax, eax	       918	write.c	FUNCTION_17
0x4001648	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       921	write.c	FUNCTION_17
0x4001653	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       923	write.c	FUNCTION_17	IF_1
0x400165b	            0x741d	                            je 0x400167a	       923	write.c	FUNCTION_17	IF_1
0x400165d	    0x488b05000000	            mov rax, qword [0x04001664] 	       923	write.c	FUNCTION_17	IF_1
0x4001664	          0x4885c0	                           test rax, rax	       923	write.c	FUNCTION_17	IF_1
0x4001667	            0x7511	                           jne 0x400167a	       923	write.c	FUNCTION_17	IF_1
0x4001669	      0xbf00000000	                              mov edi, 0	       924	write.c	FUNCTION_17	CALL_1
0x400166e	      0xe800000000	                          call 0x4001673	       924	write.c	FUNCTION_17	CALL_1
0x4001673	    0x488905000000	            mov qword [0x0400167a], rax 	       924	write.c	FUNCTION_17	CALL_1
0x400167a	    0x8b0500000000	            mov eax, dword [0x04001680] 	       930	write.c	FUNCTION_17	IF_2
0x4001680	            0x85c0	                           test eax, eax	       930	write.c	FUNCTION_17	IF_2
0x4001682	     0xf84b9090000	                            je 0x4002041	       930	write.c	FUNCTION_17	IF_2
0x4001688	            0xeb7b	                           jmp 0x4001705	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x400168a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001691	           0xfb600	                   movzx eax, byte [rax]	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001694	          0x83e020	                           and eax, 0x20	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001697	            0x84c0	                             test al, al	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001699	            0x7558	                           jne 0x40016f3	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400169b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40016a2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40016a6	          0x4885c0	                           test rax, rax	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40016a9	            0x7512	                           jne 0x40016bd	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40016ab	    0x488b15000000	            mov rdx, qword [0x040016b2] 	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40016b2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40016b9	        0x48895018	             mov qword [rax + 0x18], rdx	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40016bd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x40016c4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x40016c8	          0x4889c7	                            mov rdi, rax	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x40016cb	      0xe800000000	                          call 0x40016d0	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x40016d0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x40016d7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x40016db	          0x4885c0	                           test rax, rax	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x40016de	            0x7413	                            je 0x40016f3	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x40016e0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       945	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_3
0x40016e7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       945	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_3
0x40016eb	          0x4889c7	                            mov rdi, rax	       945	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_3
0x40016ee	      0xe800000000	                          call 0x40016f3	       945	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_3
0x40016f3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x40016fa	        0x488b4040	            mov rax, qword [rax + 0x40] 	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x40016fe	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001705	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x400170d	     0xf8577ffffff	                           jne 0x400168a	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001713	      0xe937090000	                           jmp 0x400204f	       947	write.c	FUNCTION_17	IF_2
0x4001718	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       957	write.c	FUNCTION_17	FOR_2
0x400171f	        0x488b4008	                mov rax, qword [rax + 8]	       957	write.c	FUNCTION_17	FOR_2
0x4001723	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       957	write.c	FUNCTION_17	FOR_2
0x400172a	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       958	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001732	            0x7514	                           jne 0x4001748	       958	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001734	      0xba00000000	                              mov edx, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001739	      0xbebe030000	                          mov esi, 0x3be	       958	write.c	FUNCTION_17	FOR_2	CALL_6
0x400173e	      0xbf00000000	                              mov edi, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001743	      0xe800000000	                          call 0x4001748	       958	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001748	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       960	write.c	FUNCTION_17	FOR_2	CALL_7
0x400174f	          0x4889c7	                            mov rdi, rax	       960	write.c	FUNCTION_17	FOR_2	CALL_7
0x4001752	      0xe800000000	                          call 0x4001757	       960	write.c	FUNCTION_17	FOR_2	CALL_7
0x4001757	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       962	write.c	FUNCTION_17	FOR_2
0x400175e	        0x488b4028	            mov rax, qword [rax + 0x28] 	       962	write.c	FUNCTION_17	FOR_2
0x4001762	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       962	write.c	FUNCTION_17	FOR_2
0x4001769	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001770	        0x488b4018	            mov rax, qword [rax + 0x18] 	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001774	          0x4885c0	                           test rax, rax	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001777	            0x741a	                            je 0x4001793	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001779	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       965	write.c	FUNCTION_17	FOR_2	CALL_8
0x4001780	        0x488b4018	            mov rax, qword [rax + 0x18] 	       965	write.c	FUNCTION_17	FOR_2	CALL_8
0x4001784	          0x4889c7	                            mov rdi, rax	       965	write.c	FUNCTION_17	FOR_2	CALL_8
0x4001787	      0xe800000000	                          call 0x400178c	       965	write.c	FUNCTION_17	FOR_2	CALL_8
0x400178c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       965	write.c	FUNCTION_17	FOR_2	CALL_8
0x4001793	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x400179a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x400179e	          0x4885c0	                           test rax, rax	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x40017a1	     0xf8405040000	                            je 0x4001bac	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x40017a7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       970	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x40017ae	        0x488b4020	            mov rax, qword [rax + 0x20] 	       970	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x40017b2	          0x4889c7	                            mov rdi, rax	       970	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x40017b5	      0xe800000000	                          call 0x40017ba	       970	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x40017ba	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_10
0x40017c1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_10
0x40017c5	          0x4889c7	                            mov rdi, rax	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_10
0x40017c8	      0xe800000000	                          call 0x40017cd	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_10
0x40017cd	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_10
0x40017d4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       972	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40017db	        0x488b4018	            mov rax, qword [rax + 0x18] 	       972	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40017df	          0x4885c0	                           test rax, rax	       972	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40017e2	     0xf8421010000	                            je 0x4001909	       972	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40017e8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40017ef	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40017f6	     0xf850d010000	                           jne 0x4001909	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40017fc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001803	        0x488b4018	            mov rax, qword [rax + 0x18] 	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001807	      0xbe00000000	                              mov esi, 0	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x400180c	          0x4889c7	                            mov rdi, rax	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x400180f	      0xe800000000	                          call 0x4001814	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001814	            0x85c0	                           test eax, eax	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001816	     0xf85ed000000	                           jne 0x4001909	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x400181c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001823	        0x488b4020	            mov rax, qword [rax + 0x20] 	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001827	      0xbe00000000	                              mov esi, 0	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x400182c	          0x4889c7	                            mov rdi, rax	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x400182f	      0xe800000000	                          call 0x4001834	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001834	            0x85c0	                           test eax, eax	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001836	     0xf85cd000000	                           jne 0x4001909	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x400183c	    0x4881bd40ffff	               cmp qword [rbp - 0xc0], 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001847	     0xf84bc000000	                            je 0x4001909	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x400184d	    0x4881bd40ffff	               cmp qword [rbp - 0xc0], 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001858	     0xf84ab000000	                            je 0x4001909	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x400185e	    0x488b05000000	            mov rax, qword [0x04001865] 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001865	    0x48398540ffff	            cmp qword [rbp - 0xc0], rax 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x400186c	     0xf8497000000	                            je 0x4001909	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001872	    0x488b05000000	            mov rax, qword [0x04001879] 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001879	    0x48398540ffff	            cmp qword [rbp - 0xc0], rax 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001880	     0xf8483000000	                            je 0x4001909	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001886	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x400188d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001891	          0x4889c7	                            mov rdi, rax	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001894	      0xe800000000	                          call 0x4001899	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001899	          0x4889c2	                            mov rdx, rax	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x400189c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40018a3	          0x4801d0	                            add rax, rdx	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40018a6	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40018ad	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018b4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018b8	          0x4889c7	                            mov rdi, rax	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018bb	      0xe800000000	                          call 0x40018c0	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018c0	          0x4889c2	                            mov rdx, rax	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018c3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018ca	          0x4829d0	                            sub rax, rdx	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018cd	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_14
0x40018d4	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40018db	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40018e2	        0x48895028	             mov qword [rax + 0x28], rdx	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40018e6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       981	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40018ed	    0x48c740180000	               mov qword [rax + 0x18], 0	       981	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40018f5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       982	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40018fc	    0x48c740200000	               mov qword [rax + 0x20], 0	       982	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001904	      0xe9a3020000	                           jmp 0x4001bac	       982	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001909	    0x4881bd50ffff	               cmp qword [rbp - 0xb0], 0	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001914	            0x7579	                           jne 0x400198f	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001916	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x400191d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001921	      0xbe00000000	                              mov esi, 0	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001926	          0x4889c7	                            mov rdi, rax	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001929	      0xe800000000	                          call 0x400192e	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x400192e	            0x85c0	                           test eax, eax	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001930	            0x755d	                           jne 0x400198f	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001932	    0x488b05000000	            mov rax, qword [0x04001939] 	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001939	    0x48398540ffff	            cmp qword [rbp - 0xc0], rax 	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001940	            0x744d	                            je 0x400198f	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001942	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x4001949	        0x488b4020	            mov rax, qword [rax + 0x20] 	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x400194d	          0x4889c7	                            mov rdi, rax	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x4001950	      0xe800000000	                          call 0x4001955	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x4001955	          0x4889c2	                            mov rdx, rax	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x4001958	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x400195f	          0x4829d0	                            sub rax, rdx	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x4001962	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_16
0x4001969	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001970	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001977	        0x48895028	             mov qword [rax + 0x28], rdx	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x400197b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       994	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001982	    0x48c740200000	               mov qword [rax + 0x20], 0	       994	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x400198a	      0xe91d020000	                           jmp 0x4001bac	       994	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x400198f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001996	    0x483b8520ffff	             cmp rax, qword [rbp - 0xe0]	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x400199d	     0xf85e3000000	                           jne 0x4001a86	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x40019a3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x40019aa	        0x488b4020	            mov rax, qword [rax + 0x20] 	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x40019ae	      0xbe00000000	                              mov esi, 0	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x40019b3	          0x4889c7	                            mov rdi, rax	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x40019b6	      0xe800000000	                          call 0x40019bb	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x40019bb	            0x85c0	                           test eax, eax	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x40019bd	     0xf85c3000000	                           jne 0x4001a86	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x40019c3	    0x488b05000000	            mov rax, qword [0x040019ca] 	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x40019ca	    0x48398540ffff	            cmp qword [rbp - 0xc0], rax 	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x40019d1	     0xf84af000000	                            je 0x4001a86	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x40019d7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019de	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019e2	          0x4889c7	                            mov rdi, rax	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019e5	      0xe800000000	                          call 0x40019ea	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019ea	          0x4889c2	                            mov rdx, rax	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019ed	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019f4	          0x4829d0	                            sub rax, rdx	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019f7	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_18
0x40019fe	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a05	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a09	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a10	          0x4801c2	                            add rdx, rax	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a13	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1002	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a1a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1002	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a1e	          0x488b00	                    mov rax, qword [rax]	      1002	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a21	          0x4801c2	                            add rdx, rax	      1002	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a24	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a2b	        0x48895028	             mov qword [rax + 0x28], rdx	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a2f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1015	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a36	           0xfb600	                   movzx eax, byte [rax]	      1015	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a39	          0x83e001	                              and eax, 1	      1015	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a3c	            0x84c0	                             test al, al	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a3e	            0x7523	                           jne 0x4001a63	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a40	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a47	          0x4889c7	                            mov rdi, rax	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a4a	      0xe800000000	                          call 0x4001a4f	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a4f	          0x4889c2	                            mov rdx, rax	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a52	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a59	          0x4801d0	                            add rax, rdx	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a5c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001a63	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1017	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a6a	    0x48c740200000	               mov qword [rax + 0x20], 0	      1017	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a72	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a79	           0xfb610	                   movzx edx, byte [rax]	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a7c	          0x83ca01	                               or edx, 1	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a7f	            0x8810	                      mov byte [rax], dl	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a81	      0xe926010000	                           jmp 0x4001bac	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a86	    0x488b05000000	            mov rax, qword [0x04001a8d] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a8d	    0x48398540ffff	            cmp qword [rbp - 0xc0], rax 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a94	            0x7426	                            je 0x4001abc	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a96	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a9d	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001aa0	          0x83f846	                           cmp eax, 0x46	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001aa3	     0xf8403010000	                            je 0x4001bac	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001aa9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001ab0	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001ab3	          0x83f845	                           cmp eax, 0x45	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001ab6	     0xf84f0000000	                            je 0x4001bac	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001abc	    0x488b05000000	            mov rax, qword [0x04001ac3] 	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001ac3	    0x48398540ffff	            cmp qword [rbp - 0xc0], rax 	      1022	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001aca	            0x7410	                            je 0x4001adc	      1022	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001acc	    0x488b05000000	            mov rax, qword [0x04001ad3] 	      1024	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001ad3	    0x48398550ffff	            cmp qword [rbp - 0xb0], rax 	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001ada	            0x7536	                           jne 0x4001b12	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001adc	      0xbf00000000	                              mov edi, 0	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_20
0x4001ae1	      0xe800000000	                          call 0x4001ae6	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_20
0x4001ae6	          0x4889c2	                            mov rdx, rax	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_20
0x4001ae9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001af0	          0x8b4868	            mov ecx, dword [rax + 0x68] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001af3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001afa	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001afe	            0x89ce	                            mov esi, ecx	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001b00	          0x4889c7	                            mov rdi, rax	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001b03	      0xb800000000	                              mov eax, 0	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001b08	      0xe800000000	                          call 0x4001b0d	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_19
0x4001b0d	      0xe999000000	                           jmp 0x4001bab	      1022	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001b12	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b19	          0x488b18	                    mov rbx, qword [rax]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b1c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b23	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b27	          0x4889c7	                            mov rdi, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b2a	      0xe800000000	                          call 0x4001b2f	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b2f	          0x4989c6	                            mov r14, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b32	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b39	          0x4c8b20	                    mov r12, qword [rax]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b3c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1030	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_23
0x4001b43	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1030	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_23
0x4001b47	          0x4885c0	                           test rax, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b4a	            0x7418	                            je 0x4001b64	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b4c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1030	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_23
0x4001b53	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1030	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_23
0x4001b57	          0x4889c7	                            mov rdi, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b5a	      0xe800000000	                          call 0x4001b5f	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b5f	          0x4989c5	                            mov r13, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b62	            0xeb06	                           jmp 0x4001b6a	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b64	    0x41bd00000000	                             mov r13d, 0	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b6a	      0xbf00000000	                              mov edi, 0	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_22
0x4001b6f	      0xe800000000	                          call 0x4001b74	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_22
0x4001b74	          0x4889c2	                            mov rdx, rax	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_22
0x4001b77	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b7e	          0x8b7068	            mov esi, dword [rax + 0x68] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b81	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b88	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b8c	        0x4883ec08	                              sub rsp, 8	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b90	              0x53	                                push rbx	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b91	          0x4d89f1	                             mov r9, r14	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b94	          0x4d89e0	                             mov r8, r12	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b97	          0x4c89e9	                            mov rcx, r13	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b9a	          0x4889c7	                            mov rdi, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001b9d	      0xb800000000	                              mov eax, 0	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001ba2	      0xe800000000	                          call 0x4001ba7	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001ba7	        0x4883c410	                           add rsp, 0x10	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001bab	              0x90	                                     nop	      1022	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001bac	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001bb3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001bb7	          0x4885c0	                           test rax, rax	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001bba	     0xf84c8010000	                            je 0x4001d88	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001bc0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001bc7	    0x483b8520ffff	             cmp rax, qword [rbp - 0xe0]	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001bce	     0xf8530010000	                           jne 0x4001d04	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001bd4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001bdb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001bdf	      0xbe00000000	                              mov esi, 0	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001be4	          0x4889c7	                            mov rdi, rax	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001be7	      0xe800000000	                          call 0x4001bec	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001bec	            0x85c0	                           test eax, eax	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001bee	     0xf8510010000	                           jne 0x4001d04	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001bf4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001bfb	           0xfb600	                   movzx eax, byte [rax]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001bfe	          0x83e001	                              and eax, 1	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c01	            0x84c0	                             test al, al	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c03	     0xf84fb000000	                            je 0x4001d04	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c09	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c10	          0x4889c7	                            mov rdi, rax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c13	      0xe800000000	                          call 0x4001c18	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c18	            0x85c0	                           test eax, eax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c1a	     0xf85e4000000	                           jne 0x4001d04	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c20	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c27	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c2a	      0x3d65010000	                          cmp eax, 0x165	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c2f	     0xf84cf000000	                            je 0x4001d04	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c35	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c3c	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c3f	      0x3d6b010000	                          cmp eax, 0x16b	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c44	     0xf84ba000000	                            je 0x4001d04	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c4a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c51	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c54	      0x3d9a010000	                          cmp eax, 0x19a	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c59	     0xf84a5000000	                            je 0x4001d04	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c5f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c66	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c69	      0x3d9b010000	                          cmp eax, 0x19b	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c6e	     0xf8490000000	                            je 0x4001d04	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001c74	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c7b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c7f	          0x4889c7	                            mov rdi, rax	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c82	      0xe800000000	                          call 0x4001c87	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c87	          0x4889c2	                            mov rdx, rax	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c8a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c91	          0x4801d0	                            add rax, rdx	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c94	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_29
0x4001c9b	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1051	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001ca2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1051	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001ca9	        0x48895028	             mov qword [rax + 0x28], rdx	      1051	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001cad	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cb4	           0xfb600	                   movzx eax, byte [rax]	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cb7	          0x83e001	                              and eax, 1	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cba	            0x84c0	                             test al, al	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cbc	            0x7423	                            je 0x4001ce1	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cbe	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cc5	          0x4889c7	                            mov rdi, rax	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cc8	      0xe800000000	                          call 0x4001ccd	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001ccd	          0x4889c2	                            mov rdx, rax	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cd0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cd7	          0x4829d0	                            sub rax, rdx	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001cda	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001ce1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1054	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001ce8	    0x48c740180000	               mov qword [rax + 0x18], 0	      1054	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001cf0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001cf7	           0xfb610	                   movzx edx, byte [rax]	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001cfa	          0x83e2fe	                     and edx, 0xfffffffe	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001cfd	            0x8810	                      mov byte [rax], dl	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001cff	      0xe984000000	                           jmp 0x4001d88	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d04	    0x4881bd40ffff	               cmp qword [rbp - 0xc0], 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d0f	            0x7577	                           jne 0x4001d88	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d11	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d18	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d1c	      0xbe00000000	                              mov esi, 0	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d21	          0x4889c7	                            mov rdi, rax	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d24	      0xe800000000	                          call 0x4001d29	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d29	            0x85c0	                           test eax, eax	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d2b	            0x755b	                           jne 0x4001d88	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d2d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d34	          0x4889c7	                            mov rdi, rax	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d37	      0xe800000000	                          call 0x4001d3c	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d3c	            0x85c0	                           test eax, eax	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d3e	            0x7548	                           jne 0x4001d88	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d40	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d47	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d4b	          0x4889c7	                            mov rdi, rax	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d4e	      0xe800000000	                          call 0x4001d53	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d53	          0x4889c2	                            mov rdx, rax	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d56	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d5d	          0x4801d0	                            add rax, rdx	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d60	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_31
0x4001d67	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d6e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d75	        0x48895028	             mov qword [rax + 0x28], rdx	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d79	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1063	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d80	    0x48c740180000	               mov qword [rax + 0x18], 0	      1063	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d88	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001d8f	           0xfb600	                   movzx eax, byte [rax]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001d92	          0x83e001	                              and eax, 1	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001d95	            0x84c0	                             test al, al	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001d97	            0x7456	                            je 0x4001def	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001d99	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001da0	          0x4889c7	                            mov rdi, rax	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001da3	      0xe800000000	                          call 0x4001da8	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001da8	          0x4889c2	                            mov rdx, rax	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001dab	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001db2	          0x4829d0	                            sub rax, rdx	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001db5	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001dbc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001dc3	           0xfb600	                   movzx eax, byte [rax]	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001dc6	          0x83e020	                           and eax, 0x20	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001dc9	            0x84c0	                             test al, al	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001dcb	            0x7522	                           jne 0x4001def	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001dcd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001dd4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001dd8	          0x4885c0	                           test rax, rax	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ddb	            0x7512	                           jne 0x4001def	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ddd	    0x488b15000000	            mov rdx, qword [0x04001de4] 	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001de4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001deb	        0x48895018	             mov qword [rax + 0x18], rdx	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001def	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001df6	           0xfb600	                   movzx eax, byte [rax]	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001df9	          0x83e020	                           and eax, 0x20	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001dfc	            0x84c0	                             test al, al	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001dfe	            0x7520	                           jne 0x4001e20	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001e00	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      1085	write.c	FUNCTION_17	FOR_2	CALL_33
0x4001e07	    0x488d8d38ffff	                   lea rcx, [rbp - 0xc8]	      1085	write.c	FUNCTION_17	FOR_2	CALL_33
0x4001e0e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1085	write.c	FUNCTION_17	FOR_2	CALL_33
0x4001e15	          0x4889ce	                            mov rsi, rcx	      1085	write.c	FUNCTION_17	FOR_2	CALL_33
0x4001e18	          0x4889c7	                            mov rdi, rax	      1085	write.c	FUNCTION_17	FOR_2	CALL_33
0x4001e1b	      0xe800000000	                          call 0x4001e20	      1085	write.c	FUNCTION_17	FOR_2	CALL_33
0x4001e20	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001e27	           0xfb600	                   movzx eax, byte [rax]	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001e2a	          0x83e020	                           and eax, 0x20	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001e2d	            0x84c0	                             test al, al	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001e2f	            0x7558	                           jne 0x4001e89	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001e31	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e38	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e3c	          0x4885c0	                           test rax, rax	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e3f	            0x7512	                           jne 0x4001e53	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e41	    0x488b15000000	            mov rdx, qword [0x04001e48] 	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e48	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e4f	        0x48895018	             mov qword [rax + 0x18], rdx	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e53	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_34
0x4001e5a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_34
0x4001e5e	          0x4889c7	                            mov rdi, rax	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_34
0x4001e61	      0xe800000000	                          call 0x4001e66	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_34
0x4001e66	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001e6d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001e71	          0x4885c0	                           test rax, rax	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001e74	            0x7413	                            je 0x4001e89	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001e76	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1093	write.c	FUNCTION_17	FOR_2	IF_23	CALL_35
0x4001e7d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1093	write.c	FUNCTION_17	FOR_2	IF_23	CALL_35
0x4001e81	          0x4889c7	                            mov rdi, rax	      1093	write.c	FUNCTION_17	FOR_2	IF_23	CALL_35
0x4001e84	      0xe800000000	                          call 0x4001e89	      1093	write.c	FUNCTION_17	FOR_2	IF_23	CALL_35
0x4001e89	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e90	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e94	          0x4885c0	                           test rax, rax	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e97	     0xf8592010000	                           jne 0x400202f	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e9d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ea4	           0xfb600	                   movzx eax, byte [rax]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ea7	          0x83e040	                           and eax, 0x40	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001eaa	            0x84c0	                             test al, al	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001eac	     0xf857d010000	                           jne 0x400202f	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001eb2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001eb9	         0xfb64002	               movzx eax, byte [rax + 2]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ebd	            0x84c0	                             test al, al	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ebf	     0xf846a010000	                            je 0x400202f	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ec5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ecc	         0xfb64002	               movzx eax, byte [rax + 2]	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ed0	            0x3c07	                               cmp al, 7	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ed2	     0xf8757010000	                            ja 0x400202f	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ed8	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1102	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ee3	    0x4883ad58ffff	               sub qword [rbp - 0xa8], 1	      1103	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001eeb	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ef2	         0xfb64002	               movzx eax, byte [rax + 2]	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ef6	           0xfb6c0	                           movzx eax, al	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ef9	    0x8d14c5000000	                        lea edx, [rax*8]	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f00	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f07	           0xfb600	                   movzx eax, byte [rax]	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f0a	          0x83e080	                     and eax, 0xffffff80	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f0d	            0x84c0	                             test al, al	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f0f	           0xf95c0	                                setne al	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f12	           0xfb6c0	                           movzx eax, al	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f15	            0x29c2	                            sub edx, eax	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f17	            0x89d0	                            mov eax, edx	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f19	            0x89c1	                            mov ecx, eax	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f1b	    0x48d3a558ffff	              shl qword [rbp - 0xa8], cl	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f22	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f29	    0x48238558ffff	             and rax, qword [rbp - 0xa8]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f30	          0x4885c0	                           test rax, rax	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f33	     0xf84f6000000	                            je 0x400202f	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f39	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f40	    0x48238558ffff	             and rax, qword [rbp - 0xa8]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f47	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f4e	     0xf84db000000	                            je 0x400202f	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f54	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f5b	          0x488b10	                    mov rdx, qword [rax]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f5e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f65	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f69	          0x4801c2	                            add rdx, rax	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f6c	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f73	          0x4889d6	                            mov rsi, rdx	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f76	          0x4889c7	                            mov rdi, rax	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f79	      0xe800000000	                          call 0x4001f7e	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f7e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f85	    0x483de8030000	                          cmp rax, 0x3e8	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f8b	            0x7618	                           jbe 0x4001fa5	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f8d	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f94	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f98	          0x4889d6	                            mov rsi, rdx	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f9b	          0x4889c7	                            mov rdi, rax	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f9e	      0xe800000000	                          call 0x4001fa3	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fa3	            0xeb20	                           jmp 0x4001fc5	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fa5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1112	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fac	          0x4889c2	                            mov rdx, rax	      1112	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001faf	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1112	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fb3	      0xbe00000000	                              mov esi, 0	      1112	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fb8	          0x4889c7	                            mov rdi, rax	      1112	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fbb	      0xb800000000	                              mov eax, 0	      1112	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fc0	      0xe800000000	                          call 0x4001fc5	      1112	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fc5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1119	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001fcc	         0xfb64002	               movzx eax, byte [rax + 2]	      1119	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001fd0	           0xfb6d8	                           movzx ebx, al	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4001fd3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1118	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001fda	         0xfb64002	               movzx eax, byte [rax + 2]	      1118	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001fde	           0xfb6c0	                           movzx eax, al	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_40
0x4001fe1	          0x4889c2	                            mov rdx, rax	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_40
0x4001fe4	      0xbe00000000	                              mov esi, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_40
0x4001fe9	      0xbf00000000	                              mov edi, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_40
0x4001fee	      0xe800000000	                          call 0x4001ff3	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_40
0x4001ff3	          0x4889c7	                            mov rdi, rax	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_40
0x4001ff6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4001ffd	          0x8b7068	            mov esi, dword [rax + 0x68] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4002000	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4002007	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x400200b	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4002012	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4002016	          0x4989c9	                             mov r9, rcx	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4002019	          0x4189d8	                            mov r8d, ebx	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x400201c	          0x4889d1	                            mov rcx, rdx	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x400201f	          0x4889fa	                            mov rdx, rdi	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4002022	          0x4889c7	                            mov rdi, rax	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x4002025	      0xb800000000	                              mov eax, 0	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x400202a	      0xe800000000	                          call 0x400202f	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_39
0x400202f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       950	write.c	FUNCTION_17	FOR_2
0x4002036	        0x488b4040	            mov rax, qword [rax + 0x40] 	       950	write.c	FUNCTION_17	FOR_2
0x400203a	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       950	write.c	FUNCTION_17	FOR_2
0x4002041	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       950	write.c	FUNCTION_17	FOR_2
0x4002049	     0xf85c9f6ffff	                           jne 0x4001718	       950	write.c	FUNCTION_17	FOR_2
0x400204f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1145	write.c	FUNCTION_17
0x4002053	    0x644833042528	                xor rax, qword fs:[0x28]	      1145	write.c	FUNCTION_17
0x400205c	            0x7405	                            je 0x4002063	      1145	write.c	FUNCTION_17
0x400205e	      0xe800000000	                          call 0x4002063	      1145	write.c	FUNCTION_17
0x4002063	        0x488d65e0	                   lea rsp, [rbp - 0x20]	      1145	write.c	FUNCTION_17
0x4002067	              0x5b	                                 pop rbx	      1145	write.c	FUNCTION_17
0x4002068	            0x415c	                                 pop r12	      1145	write.c	FUNCTION_17
0x400206a	            0x415d	                                 pop r13	      1145	write.c	FUNCTION_17
0x400206c	            0x415e	                                 pop r14	      1145	write.c	FUNCTION_17
0x400206e	              0x5d	                                 pop rbp	      1145	write.c	FUNCTION_17
0x400206f	              0xc3	                                     ret	      1145	write.c	FUNCTION_17
size_seg	IF,6:SWITCH,0:WHILE,1:functions,0:FOR,2:DO,0:ELSE,3:CALL,12	175
0x4000ce8	              0x55	                                push rbp	       561	write.c	FUNCTION_14
0x4000ce9	          0x4889e5	                            mov rbp, rsp	       561	write.c	FUNCTION_14
0x4000cec	        0x4883ec50	                           sub rsp, 0x50	       561	write.c	FUNCTION_14
0x4000cf0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       561	write.c	FUNCTION_14
0x4000cf4	        0x488975c0	             mov qword [rbp - 0x40], rsi	       561	write.c	FUNCTION_14
0x4000cf8	        0x488955b8	             mov qword [rbp - 0x48], rdx	       561	write.c	FUNCTION_14
0x4000cfc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       568	write.c	FUNCTION_14	CALL_1
0x4000d00	      0xbe00000000	                              mov esi, 0	       568	write.c	FUNCTION_14	CALL_1
0x4000d05	          0x4889c7	                            mov rdi, rax	       568	write.c	FUNCTION_14	CALL_1
0x4000d08	      0xe800000000	                          call 0x4000d0d	       568	write.c	FUNCTION_14	CALL_1
0x4000d0d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       570	write.c	FUNCTION_14	CALL_2
0x4000d11	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       570	write.c	FUNCTION_14	CALL_2
0x4000d18	        0x488945f0	             mov qword [rbp - 0x10], rax	       570	write.c	FUNCTION_14	CALL_2
0x4000d1c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       571	write.c	FUNCTION_14	IF_1
0x4000d21	     0xf8483000000	                            je 0x4000daa	       571	write.c	FUNCTION_14	IF_1
0x4000d27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       571	write.c	FUNCTION_14	IF_1
0x4000d2b	          0x488b00	                    mov rax, qword [rax]	       571	write.c	FUNCTION_14	IF_1
0x4000d2e	          0x4885c0	                           test rax, rax	       571	write.c	FUNCTION_14	IF_1
0x4000d31	            0x7477	                            je 0x4000daa	       571	write.c	FUNCTION_14	IF_1
0x4000d33	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d37	          0x488b00	                    mov rax, qword [rax]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d3a	          0x488b00	                    mov rax, qword [rax]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d3d	        0x488945d8	             mov qword [rbp - 0x28], rax	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d41	            0xeb1f	                           jmp 0x4000d62	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d43	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       574	write.c	FUNCTION_14	IF_1	CALL_3
0x4000d47	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       574	write.c	FUNCTION_14	IF_1	CALL_3
0x4000d4b	          0x4889d6	                            mov rsi, rdx	       574	write.c	FUNCTION_14	IF_1	CALL_3
0x4000d4e	          0x4889c7	                            mov rdi, rax	       574	write.c	FUNCTION_14	IF_1	CALL_3
0x4000d51	      0xe8fefbffff	               call sym.cvt_frag_to_fill	       574	write.c	FUNCTION_14	IF_1	CALL_3
0x4000d56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d5a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d5e	        0x488945d8	             mov qword [rbp - 0x28], rax	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d62	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d67	            0x75da	                           jne 0x4000d43	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000d69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d6d	          0x488b00	                    mov rax, qword [rax]	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d70	          0x488b00	                    mov rax, qword [rax]	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d73	        0x488945d8	             mov qword [rbp - 0x28], rax	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d77	            0xeb0c	                           jmp 0x4000d85	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       577	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d7d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       577	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d81	        0x488945d8	             mov qword [rbp - 0x28], rax	       577	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       576	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d89	        0x488b4038	            mov rax, qword [rax + 0x38] 	       576	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d8d	          0x4885c0	                           test rax, rax	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d90	            0x75e7	                           jne 0x4000d79	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000d92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       580	write.c	FUNCTION_14	IF_1
0x4000d96	          0x488b10	                    mov rdx, qword [rax]	       580	write.c	FUNCTION_14	IF_1
0x4000d99	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       580	write.c	FUNCTION_14	IF_1
0x4000d9d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       580	write.c	FUNCTION_14	IF_1
0x4000da1	          0x4801d0	                            add rax, rdx	       580	write.c	FUNCTION_14	IF_1
0x4000da4	        0x488945e0	             mov qword [rbp - 0x20], rax	       580	write.c	FUNCTION_14	IF_1
0x4000da8	            0xeb08	                           jmp 0x4000db2	       580	write.c	FUNCTION_14	IF_1
0x4000daa	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       583	write.c	FUNCTION_14	ELSE_1
0x4000db2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       585	write.c	FUNCTION_14
0x4000db6	          0x8b4020	            mov eax, dword [rax + 0x20] 	       585	write.c	FUNCTION_14
0x4000db9	          0x8945d0	             mov dword [rbp - 0x30], eax	       585	write.c	FUNCTION_14
0x4000dbc	      0x48837de000	               cmp qword [rbp - 0x20], 0	       586	write.c	FUNCTION_14	IF_2
0x4000dc1	            0x751d	                           jne 0x4000de0	       586	write.c	FUNCTION_14	IF_2
0x4000dc3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       586	write.c	FUNCTION_14	IF_2
0x4000dc7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       586	write.c	FUNCTION_14	IF_2
0x4000dcb	          0x4885c0	                           test rax, rax	       586	write.c	FUNCTION_14	IF_2
0x4000dce	            0x7410	                            je 0x4000de0	       586	write.c	FUNCTION_14	IF_2
0x4000dd0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       587	write.c	FUNCTION_14	IF_2
0x4000dd3	      0x2500010000	                          and eax, 0x100	       587	write.c	FUNCTION_14	IF_2
0x4000dd8	            0x85c0	                           test eax, eax	       586	write.c	FUNCTION_14	IF_2
0x4000dda	     0xf8590010000	                           jne 0x4000f70	       586	write.c	FUNCTION_14	IF_2
0x4000de0	      0x48837de000	               cmp qword [rbp - 0x20], 0	       590	write.c	FUNCTION_14	IF_3
0x4000de5	            0x7416	                            je 0x4000dfd	       590	write.c	FUNCTION_14	IF_3
0x4000de7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       590	write.c	FUNCTION_14	IF_3
0x4000deb	         0xfb64008	               movzx eax, byte [rax + 8]	       590	write.c	FUNCTION_14	IF_3
0x4000def	          0x83e002	                              and eax, 2	       590	write.c	FUNCTION_14	IF_3
0x4000df2	            0x84c0	                             test al, al	       590	write.c	FUNCTION_14	IF_3
0x4000df4	            0x7507	                           jne 0x4000dfd	       590	write.c	FUNCTION_14	IF_3
0x4000df6	    0x814dd0000100	            or dword [rbp - 0x30], 0x100	       591	write.c	FUNCTION_14	IF_3
0x4000dfd	        0x8365d0fb	      and dword [rbp - 0x30], 0xfffffffb	       593	write.c	FUNCTION_14
0x4000e01	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       594	write.c	FUNCTION_14	CALL_4
0x4000e04	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       594	write.c	FUNCTION_14	CALL_4
0x4000e08	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       594	write.c	FUNCTION_14	CALL_4
0x4000e0c	          0x4889ce	                            mov rsi, rcx	       594	write.c	FUNCTION_14	CALL_4
0x4000e0f	          0x4889c7	                            mov rdi, rax	       594	write.c	FUNCTION_14	CALL_4
0x4000e12	      0xe800000000	                          call 0x4000e17	       594	write.c	FUNCTION_14	CALL_4
0x4000e17	          0x8945d4	             mov dword [rbp - 0x2c], eax	       594	write.c	FUNCTION_14	CALL_4
0x4000e1a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       595	write.c	FUNCTION_14	CALL_5
0x4000e1e	            0x7514	                           jne 0x4000e34	       595	write.c	FUNCTION_14	CALL_5
0x4000e20	      0xba00000000	                              mov edx, 0	       595	write.c	FUNCTION_14	CALL_5
0x4000e25	      0xbe53020000	                          mov esi, 0x253	       595	write.c	FUNCTION_14	CALL_5
0x4000e2a	      0xbf00000000	                              mov edi, 0	       595	write.c	FUNCTION_14	CALL_5
0x4000e2f	      0xe800000000	                          call 0x4000e34	       595	write.c	FUNCTION_14	CALL_5
0x4000e34	    0x8b0500000000	            mov eax, dword [0x04000e3a] 	       599	write.c	FUNCTION_14	IF_4
0x4000e3a	            0x85c0	                           test eax, eax	       599	write.c	FUNCTION_14	IF_4
0x4000e3c	            0x740a	                            je 0x4000e48	       599	write.c	FUNCTION_14	IF_4
0x4000e3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       600	write.c	FUNCTION_14	IF_4
0x4000e42	        0x488945e8	             mov qword [rbp - 0x18], rax	       600	write.c	FUNCTION_14	IF_4
0x4000e46	            0xeb17	                           jmp 0x4000e5f	       600	write.c	FUNCTION_14	IF_4
0x4000e48	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       602	write.c	FUNCTION_14	CALL_6
0x4000e4c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       602	write.c	FUNCTION_14	CALL_6
0x4000e50	          0x4889d6	                            mov rsi, rdx	       602	write.c	FUNCTION_14	CALL_6
0x4000e53	          0x4889c7	                            mov rdi, rax	       602	write.c	FUNCTION_14	CALL_6
0x4000e56	      0xe800000000	                          call 0x4000e5b	       602	write.c	FUNCTION_14	CALL_6
0x4000e5b	        0x488945e8	             mov qword [rbp - 0x18], rax	       602	write.c	FUNCTION_14	CALL_6
0x4000e5f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       603	write.c	FUNCTION_14	CALL_7
0x4000e63	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       603	write.c	FUNCTION_14	CALL_7
0x4000e67	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       603	write.c	FUNCTION_14	CALL_7
0x4000e6b	          0x4889ce	                            mov rsi, rcx	       603	write.c	FUNCTION_14	CALL_7
0x4000e6e	          0x4889c7	                            mov rdi, rax	       603	write.c	FUNCTION_14	CALL_7
0x4000e71	      0xe800000000	                          call 0x4000e76	       603	write.c	FUNCTION_14	CALL_7
0x4000e76	          0x8945d4	             mov dword [rbp - 0x2c], eax	       603	write.c	FUNCTION_14	CALL_7
0x4000e79	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       604	write.c	FUNCTION_14	CALL_8
0x4000e7d	            0x7514	                           jne 0x4000e93	       604	write.c	FUNCTION_14	CALL_8
0x4000e7f	      0xba00000000	                              mov edx, 0	       604	write.c	FUNCTION_14	CALL_8
0x4000e84	      0xbe5c020000	                          mov esi, 0x25c	       604	write.c	FUNCTION_14	CALL_8
0x4000e89	      0xbf00000000	                              mov edi, 0	       604	write.c	FUNCTION_14	CALL_8
0x4000e8e	      0xe800000000	                          call 0x4000e93	       604	write.c	FUNCTION_14	CALL_8
0x4000e93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       608	write.c	FUNCTION_14	CALL_9
0x4000e97	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       608	write.c	FUNCTION_14	CALL_9
0x4000e9b	            0x7314	                           jae 0x4000eb1	       608	write.c	FUNCTION_14	CALL_9
0x4000e9d	      0xba00000000	                              mov edx, 0	       608	write.c	FUNCTION_14	CALL_9
0x4000ea2	      0xbe60020000	                          mov esi, 0x260	       608	write.c	FUNCTION_14	CALL_9
0x4000ea7	      0xbf00000000	                              mov edi, 0	       608	write.c	FUNCTION_14	CALL_9
0x4000eac	      0xe800000000	                          call 0x4000eb1	       608	write.c	FUNCTION_14	CALL_9
0x4000eb1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       609	write.c	FUNCTION_14	IF_5
0x4000eb5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       609	write.c	FUNCTION_14	IF_5
0x4000eb9	     0xf84b2000000	                            je 0x4000f71	       609	write.c	FUNCTION_14	IF_5
0x4000ebf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       611	write.c	FUNCTION_14	IF_5
0x4000ec3	          0x488b00	                    mov rax, qword [rax]	       611	write.c	FUNCTION_14	IF_5
0x4000ec6	        0x488b4008	                mov rax, qword [rax + 8]	       611	write.c	FUNCTION_14	IF_5
0x4000eca	        0x488945f8	                mov qword [rbp - 8], rax	       611	write.c	FUNCTION_14	IF_5
0x4000ece	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       612	write.c	FUNCTION_14	IF_5
0x4000ed2	          0x488b00	                    mov rax, qword [rax]	       612	write.c	FUNCTION_14	IF_5
0x4000ed5	          0x488b00	                    mov rax, qword [rax]	       612	write.c	FUNCTION_14	IF_5
0x4000ed8	        0x488945d8	             mov qword [rbp - 0x28], rax	       612	write.c	FUNCTION_14	IF_5
0x4000edc	            0xeb0c	                           jmp 0x4000eea	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ede	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       614	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ee2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       614	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ee6	        0x488945d8	             mov qword [rbp - 0x28], rax	       614	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000eea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000eee	        0x488b4038	            mov rax, qword [rax + 0x38] 	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ef2	        0x483b45f8	                cmp rax, qword [rbp - 8]	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ef6	            0x75e6	                           jne 0x4000ede	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ef8	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	write.c	FUNCTION_14	IF_5
0x4000efc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       615	write.c	FUNCTION_14	IF_5
0x4000f00	          0x488910	                    mov qword [rax], rdx	       615	write.c	FUNCTION_14	IF_5
0x4000f03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f07	        0x482b45e0	             sub rax, qword [rbp - 0x20]	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f0b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f0f	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f13	          0x4889d1	                            mov rcx, rdx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f16	      0xba00000000	                              mov edx, 0	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f1b	          0x48f7f1	                                 div rcx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f1e	          0x4889d0	                            mov rax, rdx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f21	          0x4885c0	                           test rax, rax	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f24	            0x7536	                           jne 0x4000f5c	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000f26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f2a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f2e	          0x4889c1	                            mov rcx, rax	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f35	        0x482b45e0	             sub rax, qword [rbp - 0x20]	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f39	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f3d	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f41	          0x4889d6	                            mov rsi, rdx	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f44	      0xba00000000	                              mov edx, 0	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f49	          0x48f7f6	                                 div rsi	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f4c	          0x4801c8	                            add rax, rcx	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f4f	          0x4889c2	                            mov rdx, rax	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f52	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f56	        0x48895020	             mov qword [rax + 0x20], rdx	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f5a	            0xeb15	                           jmp 0x4000f71	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000f5c	      0xba00000000	                              mov edx, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f61	      0xbe6f020000	                          mov esi, 0x26f	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f66	      0xbf00000000	                              mov edi, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f6b	      0xe800000000	                          call 0x4000f70	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f70	              0x90	                                     nop	       588	write.c	FUNCTION_14	IF_2
0x4000f71	              0xc9	                                   leave	       632	write.c	FUNCTION_14
0x4000f72	              0xc3	                                     ret	       632	write.c	FUNCTION_14
append	IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	25
0x4000670	              0x55	                                push rbp	       340	write.c	FUNCTION_6
0x4000671	          0x4889e5	                            mov rbp, rsp	       340	write.c	FUNCTION_6
0x4000674	        0x4883ec20	                           sub rsp, 0x20	       340	write.c	FUNCTION_6
0x4000678	        0x48897df8	                mov qword [rbp - 8], rdi	       340	write.c	FUNCTION_6
0x400067c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       340	write.c	FUNCTION_6
0x4000680	        0x488955e8	             mov qword [rbp - 0x18], rdx	       340	write.c	FUNCTION_6
0x4000684	      0x48837de800	               cmp qword [rbp - 0x18], 0	       342	write.c	FUNCTION_6	IF_1
0x4000689	            0x7431	                            je 0x40006bc	       342	write.c	FUNCTION_6	IF_1
0x400068b	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	write.c	FUNCTION_6	CALL_1
0x400068f	          0x488b00	                    mov rax, qword [rax]	       345	write.c	FUNCTION_6	CALL_1
0x4000692	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       345	write.c	FUNCTION_6	CALL_1
0x4000696	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       345	write.c	FUNCTION_6	CALL_1
0x400069a	          0x4889ce	                            mov rsi, rcx	       345	write.c	FUNCTION_6	CALL_1
0x400069d	          0x4889c7	                            mov rdi, rax	       345	write.c	FUNCTION_6	CALL_1
0x40006a0	      0xe800000000	                          call 0x40006a5	       345	write.c	FUNCTION_6	CALL_1
0x40006a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       346	write.c	FUNCTION_6
0x40006a9	          0x488b10	                    mov rdx, qword [rax]	       346	write.c	FUNCTION_6
0x40006ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       346	write.c	FUNCTION_6
0x40006b0	          0x4801c2	                            add rdx, rax	       346	write.c	FUNCTION_6
0x40006b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       346	write.c	FUNCTION_6
0x40006b7	          0x488910	                    mov qword [rax], rdx	       346	write.c	FUNCTION_6
0x40006ba	            0xeb01	                           jmp 0x40006bd	       346	write.c	FUNCTION_6
0x40006bc	              0x90	                                     nop	       343	write.c	FUNCTION_6	IF_1
0x40006bd	              0xc9	                                   leave	       347	write.c	FUNCTION_6
0x40006be	              0xc3	                                     ret	       347	write.c	FUNCTION_6
cvt_frag_to_fill	IF,5:SWITCH,1:WHILE,0:functions,0:FOR,1:DO,0:ELSE,1:CALL,18	211
0x4000954	              0x55	                                push rbp	       435	write.c	FUNCTION_12
0x4000955	          0x4889e5	                            mov rbp, rsp	       435	write.c	FUNCTION_12
0x4000958	              0x53	                                push rbx	       435	write.c	FUNCTION_12
0x4000959	        0x4883ec38	                           sub rsp, 0x38	       435	write.c	FUNCTION_12
0x400095d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       435	write.c	FUNCTION_12
0x4000961	        0x488975c0	             mov qword [rbp - 0x40], rsi	       435	write.c	FUNCTION_12
0x4000965	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       436	write.c	FUNCTION_12	SWITCH_1
0x4000969	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       436	write.c	FUNCTION_12	SWITCH_1
0x400096c	          0x83f80d	                            cmp eax, 0xd	       436	write.c	FUNCTION_12	SWITCH_1
0x400096f	     0xf87ce020000	                            ja 0x4000c43	       436	write.c	FUNCTION_12	SWITCH_1
0x4000975	            0x89c0	                            mov eax, eax	       436	write.c	FUNCTION_12	SWITCH_1
0x4000977	    0x488b04c50000	                  mov rax, qword [rax*8]	       436	write.c	FUNCTION_12	SWITCH_1
0x400097f	            0xffe0	                                 jmp rax	       436	write.c	FUNCTION_12	SWITCH_1
0x4000981	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000985	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000988	          0x83f803	                              cmp eax, 3	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x400098b	            0x7564	                           jne 0x40009f1	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x400098d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000991	        0x488b4038	            mov rax, qword [rax + 0x38] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000995	          0x488b10	                    mov rdx, qword [rax]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000998	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x400099c	          0x488b00	                    mov rax, qword [rax]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x400099f	          0x4829c2	                            sub rdx, rax	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009a6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009aa	          0x4829c2	                            sub rdx, rax	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009ad	          0x4889d0	                            mov rax, rdx	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009b0	        0x488945e0	             mov qword [rbp - 0x20], rax	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009b4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009b9	            0x7e36	                           jle 0x40009f1	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009bb	    0x48817de0ff0f	          cmp qword [rbp - 0x20], 0xfff 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009c3	            0x7f2c	                            jg 0x40009f1	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009c9	        0x488d507c	                   lea rdx, [rax + 0x7c]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009cd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009d1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009d5	        0x488d3402	                    lea rsi, [rdx + rax]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009d9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009e1	      0xb900000000	                              mov ecx, 0	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009e6	          0x4889c7	                            mov rdi, rax	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009e9	      0xe800000000	                          call 0x40009ee	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009ee	            0xeb01	                           jmp 0x40009f1	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x40009f0	              0x90	                                     nop	       439	write.c	FUNCTION_12	SWITCH_1
0x40009f1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x40009f5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x40009f9	          0x4885c0	                           test rax, rax	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x40009fc	            0x7514	                           jne 0x4000a12	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x40009fe	      0xba00000000	                              mov edx, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000a03	      0xbec1010000	                          mov esi, 0x1c1	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000a08	      0xbf00000000	                              mov edi, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000a0d	      0xe800000000	                          call 0x4000a12	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000a12	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000a16	        0x488b4038	            mov rax, qword [rax + 0x38] 	       450	write.c	FUNCTION_12	SWITCH_1
0x4000a1a	          0x488b10	                    mov rdx, qword [rax]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000a1d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       451	write.c	FUNCTION_12	SWITCH_1
0x4000a21	          0x488b00	                    mov rax, qword [rax]	       451	write.c	FUNCTION_12	SWITCH_1
0x4000a24	          0x4829c2	                            sub rdx, rax	       451	write.c	FUNCTION_12	SWITCH_1
0x4000a27	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a2b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a2f	          0x4829c2	                            sub rdx, rax	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a32	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a36	        0x488b4018	            mov rax, qword [rax + 0x18] 	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a3a	          0x4889c1	                            mov rcx, rax	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a3d	          0x4889d0	                            mov rax, rdx	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a40	      0xba00000000	                              mov edx, 0	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a45	          0x48f7f1	                                 div rcx	       452	write.c	FUNCTION_12	SWITCH_1
0x4000a48	          0x4889c2	                            mov rdx, rax	       450	write.c	FUNCTION_12	SWITCH_1
0x4000a4b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000a4f	        0x48895020	             mov qword [rax + 0x20], rdx	       450	write.c	FUNCTION_12	SWITCH_1
0x4000a53	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000a57	        0x488b4020	            mov rax, qword [rax + 0x20] 	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000a5b	          0x4885c0	                           test rax, rax	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000a5e	            0x7940	                           jns 0x4000aa0	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000a60	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       457	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000a64	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       457	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000a68	      0xbf00000000	                              mov edi, 0	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000a6d	      0xe800000000	                          call 0x4000a72	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000a72	          0x4889c2	                            mov rdx, rax	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000a75	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a79	          0x8b7048	            mov esi, dword [rax + 0x48] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a7c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a80	        0x488b4040	            mov rax, qword [rax + 0x40] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a84	          0x4889d9	                            mov rcx, rbx	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a87	          0x4889c7	                            mov rdi, rax	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a8a	      0xb800000000	                              mov eax, 0	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a8f	      0xe800000000	                          call 0x4000a94	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000a94	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000a98	    0x48c740200000	               mov qword [rax + 0x20], 0	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000aa0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       460	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000aa4	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       460	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000aa7	          0x83f809	                              cmp eax, 9	       460	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000aaa	            0x7510	                           jne 0x4000abc	       460	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000aac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000ab0	    0xc7405c0a0000	             mov dword [rax + 0x5c], 0xa	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000ab7	      0xe9b5010000	                           jmp 0x4000c71	       464	write.c	FUNCTION_12	SWITCH_1
0x4000abc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       463	write.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4000ac0	    0xc7405c010000	               mov dword [rax + 0x5c], 1	       463	write.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4000ac7	      0xe9a5010000	                           jmp 0x4000c71	       464	write.c	FUNCTION_12	SWITCH_1
0x4000acc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000ad0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000ad4	          0x4889c7	                            mov rdi, rax	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000ad7	      0xe800000000	                          call 0x4000adc	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000adc	        0x488945e8	             mov qword [rbp - 0x18], rax	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000ae0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000ae4	        0x488b4028	            mov rax, qword [rax + 0x28] 	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000ae8	          0x4889c7	                            mov rdi, rax	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000aeb	      0xe800000000	                          call 0x4000af0	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000af0	            0x85c0	                           test eax, eax	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000af2	            0x753f	                           jne 0x4000b33	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000af4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000af8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000afc	          0x4889c7	                            mov rdi, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000aff	      0xe800000000	                          call 0x4000b04	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b04	          0x4889c3	                            mov rbx, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b07	      0xbf00000000	                              mov edi, 0	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000b0c	      0xe800000000	                          call 0x4000b11	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000b11	          0x4889c2	                            mov rdx, rax	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000b14	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b18	          0x8b7048	            mov esi, dword [rax + 0x48] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b1b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b1f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b23	          0x4889d9	                            mov rcx, rbx	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b26	          0x4889c7	                            mov rdi, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b29	      0xb800000000	                              mov eax, 0	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b2e	      0xe800000000	                          call 0x4000b33	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b33	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       483	write.c	FUNCTION_12	SWITCH_1
0x4000b37	          0x8b4060	            mov eax, dword [rax + 0x60] 	       483	write.c	FUNCTION_12	SWITCH_1
0x4000b3a	            0x89c6	                            mov esi, eax	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b40	        0x488d507c	                   lea rdx, [rax + 0x7c]	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b44	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b48	        0x488b4010	            mov rax, qword [rax + 0x10] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b4c	        0x488d0c02	                    lea rcx, [rdx + rax]	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b54	            0x89f2	                            mov edx, esi	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b56	          0x4889c6	                            mov rsi, rax	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b59	          0x4889cf	                            mov rdi, rcx	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b5c	      0xe800000000	                          call 0x4000b61	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b61	          0x8945dc	             mov dword [rbp - 0x24], eax	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000b64	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       485	write.c	FUNCTION_12	SWITCH_1
0x4000b68	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       485	write.c	FUNCTION_12	SWITCH_1
0x4000b6c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       485	write.c	FUNCTION_12	SWITCH_1
0x4000b6f	            0x4898	                                    cdqe	       485	write.c	FUNCTION_12	SWITCH_1
0x4000b71	          0x4801c2	                            add rdx, rax	       485	write.c	FUNCTION_12	SWITCH_1
0x4000b74	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       485	write.c	FUNCTION_12	SWITCH_1
0x4000b78	        0x48895010	             mov qword [rax + 0x10], rdx	       485	write.c	FUNCTION_12	SWITCH_1
0x4000b7c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       486	write.c	FUNCTION_12	SWITCH_1
0x4000b80	    0xc7405c010000	               mov dword [rax + 0x5c], 1	       486	write.c	FUNCTION_12	SWITCH_1
0x4000b87	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       487	write.c	FUNCTION_12	SWITCH_1
0x4000b8b	    0x48c740180000	               mov qword [rax + 0x18], 0	       487	write.c	FUNCTION_12	SWITCH_1
0x4000b93	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       488	write.c	FUNCTION_12	SWITCH_1
0x4000b97	    0x48c740200000	               mov qword [rax + 0x20], 0	       488	write.c	FUNCTION_12	SWITCH_1
0x4000b9f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       489	write.c	FUNCTION_12	SWITCH_1
0x4000ba3	    0x48c740280000	               mov qword [rax + 0x28], 0	       489	write.c	FUNCTION_12	SWITCH_1
0x4000bab	      0xe9c1000000	                           jmp 0x4000c71	       491	write.c	FUNCTION_12	SWITCH_1
0x4000bb0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000bb4	          0x4889c7	                            mov rdi, rax	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000bb7	      0xe800000000	                          call 0x4000bbc	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000bbc	      0xe9b0000000	                           jmp 0x4000c71	       495	write.c	FUNCTION_12	SWITCH_1
0x4000bc1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000bc5	          0x4889c7	                            mov rdi, rax	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000bc8	      0xe800000000	                          call 0x4000bcd	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000bcd	      0xe99f000000	                           jmp 0x4000c71	       499	write.c	FUNCTION_12	SWITCH_1
0x4000bd2	    0x488b05000000	            mov rax, qword [0x04000bd9] 	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000bd9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000bdd	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000be1	          0x4889ce	                            mov rsi, rcx	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000be4	          0x4889c7	                            mov rdi, rax	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000be7	      0xe800000000	                          call 0x4000bec	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000bec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000bf0	        0x488b4038	            mov rax, qword [rax + 0x38] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000bf4	          0x4885c0	                           test rax, rax	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000bf7	            0x743c	                            je 0x4000c35	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000bf9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000bfd	        0x488b4038	            mov rax, qword [rax + 0x38] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c01	          0x488b10	                    mov rdx, qword [rax]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c04	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c08	          0x488b00	                    mov rax, qword [rax]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c0b	          0x4829c2	                            sub rdx, rax	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c0e	          0x4889d0	                            mov rax, rdx	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c11	          0x4889c2	                            mov rdx, rax	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c14	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c18	        0x488b4010	            mov rax, qword [rax + 0x10] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c1c	          0x4839c2	                            cmp rdx, rax	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c1f	            0x7414	                            je 0x4000c35	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c21	      0xba00000000	                              mov edx, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c26	      0xbefa010000	                          mov esi, 0x1fa	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c2b	      0xbf00000000	                              mov edi, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c30	      0xe800000000	                          call 0x4000c35	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000c35	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000c39	          0x4889c7	                            mov rdi, rax	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000c3c	      0xe800000000	                          call 0x4000c41	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000c41	            0xeb2e	                           jmp 0x4000c71	       512	write.c	FUNCTION_12	SWITCH_1
0x4000c43	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c47	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c4a	            0x89c3	                            mov ebx, eax	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c4c	      0xbf00000000	                              mov edi, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c51	      0xe800000000	                          call 0x4000c56	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c56	      0xb900000000	                              mov ecx, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c5b	      0xba16020000	                          mov edx, 0x216	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c60	          0x4889de	                            mov rsi, rbx	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c63	          0x4889c7	                            mov rdi, rax	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c66	      0xb800000000	                              mov eax, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c6b	      0xe800000000	                          call 0x4000c70	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c70	              0x90	                                     nop	       468	write.c	FUNCTION_12	SWITCH_1
0x4000c71	              0x90	                                     nop	       540	write.c	FUNCTION_12
0x4000c72	        0x4883c438	                           add rsp, 0x38	       540	write.c	FUNCTION_12
0x4000c76	              0x5b	                                 pop rbx	       540	write.c	FUNCTION_12
0x4000c77	              0x5d	                                 pop rbp	       540	write.c	FUNCTION_12
0x4000c78	              0xc3	                                     ret	       540	write.c	FUNCTION_12
maybe_generate_build_notes	IF,9:SWITCH,0:WHILE,0:functions,0:FOR,1:DO,0:ELSE,6:CALL,23	234
0x4003e78	              0x55	                                push rbp	      1945	write.c	ELSE_1	ELSE_2	FUNCTION_32
0x4003e79	          0x4889e5	                            mov rbp, rsp	      1945	write.c	ELSE_1	ELSE_2	FUNCTION_32
0x4003e7c	        0x4883ec40	                           sub rsp, 0x40	      1945	write.c	ELSE_1	ELSE_2	FUNCTION_32
0x4003e80	    0x8b0500000000	            mov eax, dword [0x04003e86] 	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x4003e86	            0x85c0	                           test eax, eax	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x4003e88	     0xf84c5030000	                            je 0x4004253	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x4003e8e	    0x488b05000000	            mov rax, qword [0x04003e95] 	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003e95	      0xbe00000000	                              mov esi, 0	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003e9a	          0x4889c7	                            mov rdi, rax	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003e9d	      0xe800000000	                          call 0x4003ea2	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003ea2	          0x4885c0	                           test rax, rax	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003ea5	     0xf85a8030000	                           jne 0x4004253	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003eab	      0xbe00000000	                              mov esi, 0	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4003eb0	      0xbf00000000	                              mov edi, 0	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4003eb5	      0xe800000000	                          call 0x4003eba	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4003eba	        0x488945f8	                mov qword [rbp - 8], rax	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4003ebe	        0x488b45f8	                mov rax, qword [rbp - 8]	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x4003ec2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x4003ec9	    0xc74004070000	                  mov dword [rax + 4], 7	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x4003ed0	    0x488b05000000	            mov rax, qword [0x04003ed7] 	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4003ed7	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4003edb	      0xba28010000	                          mov edx, 0x128	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4003ee0	          0x4889ce	                            mov rsi, rcx	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4003ee3	          0x4889c7	                            mov rdi, rax	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4003ee6	      0xe800000000	                          call 0x4003eeb	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4003eeb	    0x488b05000000	            mov rax, qword [0x04003ef2] 	      1965	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_5
0x4003ef2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1965	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_5
0x4003ef6	      0xba02000000	                              mov edx, 2	      1965	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_5
0x4003efb	          0x4889ce	                            mov rsi, rcx	      1965	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_5
0x4003efe	          0x4889c7	                            mov rdi, rax	      1965	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_5
0x4003f01	      0xe83ac1ffff	      call sym.bfd_set_section_alignment	      1965	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_5
0x4003f06	    0x488b05000000	            mov rax, qword [0x04003f0d] 	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4003f0d	          0x4889c7	                            mov rdi, rax	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4003f10	      0xe800000000	                          call 0x4003f15	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4003f15	          0x83f820	                           cmp eax, 0x20	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4003f18	            0x777c	                            ja 0x4003f96	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4003f1a	    0x48c745d01c00	           mov qword [rbp - 0x30], 0x1c 	      1971	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x4003f22	    0x48c745e00800	               mov qword [rbp - 0x20], 8	      1972	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x4003f2a	    0x48c745e81800	           mov qword [rbp - 0x18], 0x18 	      1973	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x4003f32	    0x488b05000000	            mov rax, qword [0x04003f39] 	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f39	        0x488b4008	                mov rax, qword [rax + 8]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f3d	          0x488b00	                    mov rax, qword [rax]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f40	      0xbe00000000	                              mov esi, 0	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f45	          0x4889c7	                            mov rdi, rax	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f48	      0xe800000000	                          call 0x4003f4d	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f4d	          0x4885c0	                           test rax, rax	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f50	            0x740c	                            je 0x4003f5e	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003f52	    0xc745c4670600	          mov dword [rbp - 0x3c], 0x667 	      1979	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3
0x4003f59	      0xe9bb000000	                           jmp 0x4004019	      1979	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3
0x4003f5e	    0x488b05000000	            mov rax, qword [0x04003f65] 	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f65	        0x488b4008	                mov rax, qword [rax + 8]	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f69	          0x488b00	                    mov rax, qword [rax]	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f6c	      0xbe00000000	                              mov esi, 0	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f71	          0x4889c7	                            mov rdi, rax	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f74	      0xe800000000	                          call 0x4003f79	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f79	          0x4885c0	                           test rax, rax	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f7c	            0x740c	                            je 0x4003f8a	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003f7e	    0xc745c43a0600	          mov dword [rbp - 0x3c], 0x63a 	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003f85	      0xe98f000000	                           jmp 0x4004019	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003f8a	    0xc745c4020000	               mov dword [rbp - 0x3c], 2	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4003f91	      0xe983000000	                           jmp 0x4004019	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4003f96	    0x48c745d02400	           mov qword [rbp - 0x30], 0x24 	      1987	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3
0x4003f9e	    0x48c745e01000	           mov qword [rbp - 0x20], 0x10 	      1988	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3
0x4003fa6	    0x48c745e81c00	           mov qword [rbp - 0x18], 0x1c 	      1989	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3
0x4003fae	    0x488b05000000	            mov rax, qword [0x04003fb5] 	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fb5	        0x488b4008	                mov rax, qword [rax + 8]	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fb9	          0x488b00	                    mov rax, qword [rax]	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fbc	      0xbe00000000	                              mov esi, 0	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fc1	          0x4889c7	                            mov rdi, rax	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fc4	      0xe800000000	                          call 0x4003fc9	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fc9	          0x4885c0	                           test rax, rax	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fcc	            0x741b	                            je 0x4003fe9	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003fce	    0x8b0500000000	            mov eax, dword [0x04003fd4] 	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fd4	            0x85c0	                           test eax, eax	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fd6	            0x7407	                            je 0x4003fdf	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fd8	      0xb8a8050000	                          mov eax, 0x5a8	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fdd	            0xeb05	                           jmp 0x4003fe4	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fdf	      0xb8a9050000	                          mov eax, 0x5a9	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fe4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fe7	            0xeb30	                           jmp 0x4004019	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003fe9	    0x488b05000000	            mov rax, qword [0x04003ff0] 	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ff0	        0x488b4008	                mov rax, qword [rax + 8]	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ff4	          0x488b00	                    mov rax, qword [rax]	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ff7	      0xbe00000000	                              mov esi, 0	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ffc	          0x4889c7	                            mov rdi, rax	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003fff	      0xe800000000	                          call 0x4004004	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4004004	          0x4885c0	                           test rax, rax	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4004007	            0x7409	                            je 0x4004012	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4004009	    0xc745c4500000	           mov dword [rbp - 0x3c], 0x50 	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4004010	            0xeb07	                           jmp 0x4004019	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4004012	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x4004019	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2004	write.c	FUNCTION_32	ELSE_1	ELSE_2
0x4004021	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2005	write.c	FUNCTION_32	ELSE_1	ELSE_2
0x4004029	    0x488b05000000	            mov rax, qword [0x04004030] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4004030	        0x488945f0	             mov qword [rbp - 0x10], rax	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4004034	      0xe997010000	                           jmp 0x40041d0	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4004039	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400403d	        0x488b4008	                mov rax, qword [rax + 8]	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004041	          0x4885c0	                           test rax, rax	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004044	     0xf847a010000	                            je 0x40041c4	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400404a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400404e	        0x488b4008	                mov rax, qword [rax + 8]	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004052	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004055	      0x2500010000	                          and eax, 0x100	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400405a	            0x85c0	                           test eax, eax	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400405c	     0xf8462010000	                            je 0x40041c4	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004062	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004066	        0x488b4008	                mov rax, qword [rax + 8]	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400406a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400406e	          0x4885c0	                           test rax, rax	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004071	     0xf844d010000	                            je 0x40041c4	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004077	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400407b	        0x488b4008	                mov rax, qword [rax + 8]	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400407f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004083	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004086	      0x2510000200	                        and eax, 0x20010	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400408b	          0x83f810	                           cmp eax, 0x10	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400408e	     0xf8530010000	                           jne 0x40041c4	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004094	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4004098	          0x4889c7	                            mov rdi, rax	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x400409b	      0xe800000000	                          call 0x40040a0	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40040a0	      0xba0d000000	                            mov edx, 0xd	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40040a5	      0xbe00000000	                              mov esi, 0	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40040aa	          0x4889c7	                            mov rdi, rax	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40040ad	      0xe800000000	                          call 0x40040b2	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40040b2	            0x85c0	                           test eax, eax	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40040b4	     0xf840a010000	                            je 0x40041c4	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40040ba	      0xe800000000	                          call 0x40040bf	      2017	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_13
0x40040bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x40040c3	          0x4889c7	                            mov rdi, rax	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x40040c6	      0xe800000000	                          call 0x40040cb	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x40040cb	        0x488945c8	             mov qword [rbp - 0x38], rax	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x40040cf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2019	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_15
0x40040d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2019	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_15
0x40040d7	      0xbe00000000	                              mov esi, 0	      2019	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_15
0x40040dc	          0x4889c7	                            mov rdi, rax	      2019	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_15
0x40040df	      0xe800000000	                          call 0x40040e4	      2019	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_15
0x40040e4	    0x8b0500000000	            mov eax, dword [0x040040ea] 	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x40040ea	            0x85c0	                           test eax, eax	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x40040ec	            0x7431	                            je 0x400411f	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x40040ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2023	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x40040f2	        0x4883c003	                              add rax, 3	      2023	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x40040f6	          0xc60008	                       mov byte [rax], 8	      2023	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x40040f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x40040fd	        0x4883c007	                              add rax, 7	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4004101	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4004105	            0x8810	                      mov byte [rax], dl	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4004107	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2025	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400410b	        0x4883c00a	                            add rax, 0xa	      2025	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400410f	          0xc60001	                       mov byte [rax], 1	      2025	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4004112	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4004116	        0x4883c00b	                            add rax, 0xb	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400411a	          0xc60000	                       mov byte [rax], 0	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400411d	            0xeb2b	                           jmp 0x400414a	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400411f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2030	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004123	          0xc60008	                       mov byte [rax], 8	      2030	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004126	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400412a	        0x4883c004	                              add rax, 4	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400412e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004132	            0x8810	                      mov byte [rax], dl	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004134	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2032	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004138	        0x4883c008	                              add rax, 8	      2032	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400413c	          0xc60000	                       mov byte [rax], 0	      2032	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400413f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004143	        0x4883c009	                              add rax, 9	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004147	          0xc60001	                       mov byte [rax], 1	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400414a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2038	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_16
0x400414e	        0x4883c00c	                            add rax, 0xc	      2038	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_16
0x4004152	      0xba08000000	                              mov edx, 8	      2038	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_16
0x4004157	      0xbe00000000	                              mov esi, 0	      2038	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_16
0x400415c	          0x4889c7	                            mov rdi, rax	      2038	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_16
0x400415f	      0xe800000000	                          call 0x4004164	      2038	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_16
0x4004164	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4004168	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400416b	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400416f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4004173	          0x4989c9	                             mov r9, rcx	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4004176	    0x41b800000000	                              mov r8d, 0	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400417c	            0x89d1	                            mov ecx, edx	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400417e	      0xba14000000	                           mov edx, 0x14	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4004183	          0x4889c7	                            mov rdi, rax	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4004186	      0xe876fbffff	              call sym.create_note_reloc	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400418b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2045	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400418f	        0x488b4008	                mov rax, qword [rax + 8]	      2045	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004193	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2045	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4004197	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x400419b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x400419f	        0x4c8b45c8	              mov r8, qword [rbp - 0x38]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041a3	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041a6	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041ae	          0x4d89c1	                              mov r9, r8	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041b1	          0x4989f8	                             mov r8, rdi	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041b4	          0x4889c7	                            mov rdi, rax	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041b7	      0xe845fbffff	              call sym.create_note_reloc	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x40041bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2048	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40041c0	        0x480145d8	            add qword [rbp - 0x28], rax 	      2048	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40041c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x40041c8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x40041cc	        0x488945f0	             mov qword [rbp - 0x10], rax	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x40041d0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x40041d5	     0xf855efeffff	                           jne 0x4004039	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x40041db	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x40041e0	            0x7423	                            je 0x4004205	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x40041e2	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40041e6	    0x488b05000000	            mov rax, qword [0x040041ed] 	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40041ed	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40041f1	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40041f5	          0x4989c8	                             mov r8, rcx	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40041f8	      0xb900000000	                              mov ecx, 0	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40041fd	          0x4889c7	                            mov rdi, rax	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4004200	      0xe800000000	                          call 0x4004205	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4004205	        0x488b45f8	                mov rax, qword [rbp - 8]	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x4004209	          0x4889c7	                            mov rdi, rax	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x400420c	      0xe833f8ffff	         call sym.subsegs_finish_section	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x4004211	        0x488b45f8	                mov rax, qword [rbp - 8]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4004215	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400421c	          0x488b00	                    mov rax, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400421f	          0x488b00	                    mov rax, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4004222	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4004226	      0xba00000000	                              mov edx, 0	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400422b	          0x4889ce	                            mov rsi, rcx	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400422e	          0x4889c7	                            mov rdi, rax	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4004231	      0xe800000000	                          call 0x4004236	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4004236	    0x488b05000000	            mov rax, qword [0x0400423d] 	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x400423d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4004241	      0xba00000000	                              mov edx, 0	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4004246	          0x4889ce	                            mov rsi, rcx	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4004249	          0x4889c7	                            mov rdi, rax	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x400424c	      0xe897caffff	                       call sym.size_seg	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4004251	            0xeb01	                           jmp 0x4004254	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4004253	              0x90	                                     nop	      1958	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x4004254	              0xc9	                                   leave	      2058	write.c	FUNCTION_32	ELSE_1	ELSE_2
0x4004255	              0xc3	                                     ret	      2058	write.c	FUNCTION_32	ELSE_1	ELSE_2
write_relocs	IF,12:SWITCH,0:WHILE,4:functions,0:FOR,5:DO,0:ELSE,1:CALL,16	267
0x4002377	              0x55	                                push rbp	      1221	write.c	FUNCTION_21
0x4002378	          0x4889e5	                            mov rbp, rsp	      1221	write.c	FUNCTION_21
0x400237b	    0x4881eca00000	                           sub rsp, 0xa0	      1221	write.c	FUNCTION_21
0x4002382	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1221	write.c	FUNCTION_21
0x4002389	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1221	write.c	FUNCTION_21
0x4002390	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      1221	write.c	FUNCTION_21
0x4002397	    0x64488b042528	                mov rax, qword fs:[0x28]	      1221	write.c	FUNCTION_21
0x40023a0	        0x488945f8	                mov qword [rbp - 8], rax	      1221	write.c	FUNCTION_21
0x40023a4	            0x31c0	                            xor eax, eax	      1221	write.c	FUNCTION_21
0x40023a6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1222	write.c	FUNCTION_21	CALL_1
0x40023ad	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1222	write.c	FUNCTION_21	CALL_1
0x40023b4	        0x488945c8	             mov qword [rbp - 0x38], rax	      1222	write.c	FUNCTION_21	CALL_1
0x40023b8	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1231	write.c	FUNCTION_21	IF_1
0x40023bd	     0xf84c1030000	                            je 0x4002784	      1231	write.c	FUNCTION_21	IF_1
0x40023c3	    0xc74588000000	               mov dword [rbp - 0x78], 0	      1234	write.c	FUNCTION_21
0x40023ca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1235	write.c	FUNCTION_21	FOR_1
0x40023ce	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1235	write.c	FUNCTION_21	FOR_1
0x40023d2	        0x488945b8	             mov qword [rbp - 0x48], rax	      1235	write.c	FUNCTION_21	FOR_1
0x40023d6	            0xeb1e	                           jmp 0x40023f6	      1235	write.c	FUNCTION_21	FOR_1
0x40023d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x40023dc	           0xfb600	                   movzx eax, byte [rax]	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x40023df	          0x83e020	                           and eax, 0x20	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x40023e2	            0x84c0	                             test al, al	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x40023e4	            0x7504	                           jne 0x40023ea	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x40023e6	        0x83458801	               add dword [rbp - 0x78], 1	      1237	write.c	FUNCTION_21	FOR_1	IF_2
0x40023ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1235	write.c	FUNCTION_21	FOR_1
0x40023ee	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1235	write.c	FUNCTION_21	FOR_1
0x40023f2	        0x488945b8	             mov qword [rbp - 0x48], rax	      1235	write.c	FUNCTION_21	FOR_1
0x40023f6	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1235	write.c	FUNCTION_21	FOR_1
0x40023fb	            0x75db	                           jne 0x40023d8	      1235	write.c	FUNCTION_21	FOR_1
0x40023fd	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1244	write.c	FUNCTION_21
0x4002405	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1245	write.c	FUNCTION_21
0x400240d	            0xeb40	                           jmp 0x400244f	      1246	write.c	FUNCTION_21	WHILE_1
0x400240f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002413	        0x488b4008	                mov rax, qword [rax + 8]	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002417	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x400241e	            0x7527	                           jne 0x4002447	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002420	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002424	          0x488b10	                    mov rdx, qword [rax]	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002427	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x400242b	          0x488910	                    mov qword [rax], rdx	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x400242e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002432	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002436	          0x488910	                    mov qword [rax], rdx	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002439	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1252	write.c	FUNCTION_21	WHILE_1	IF_3
0x400243d	        0x488945a0	             mov qword [rbp - 0x60], rax	      1252	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002441	        0x83458801	               add dword [rbp - 0x78], 1	      1253	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002445	            0xeb08	                           jmp 0x400244f	      1253	write.c	FUNCTION_21	WHILE_1	IF_3
0x4002447	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1256	write.c	FUNCTION_21	WHILE_1	ELSE_1
0x400244b	        0x488945a8	             mov qword [rbp - 0x58], rax	      1256	write.c	FUNCTION_21	WHILE_1	ELSE_1
0x400244f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1246	write.c	FUNCTION_21	WHILE_1
0x4002453	          0x488b00	                    mov rax, qword [rax]	      1246	write.c	FUNCTION_21	WHILE_1
0x4002456	        0x488945b0	             mov qword [rbp - 0x50], rax	      1246	write.c	FUNCTION_21	WHILE_1
0x400245a	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1246	write.c	FUNCTION_21	WHILE_1
0x400245f	            0x75ae	                           jne 0x400240f	      1246	write.c	FUNCTION_21	WHILE_1
0x4002461	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1259	write.c	FUNCTION_21	CALL_2
0x4002464	      0xbe08000000	                              mov esi, 8	      1259	write.c	FUNCTION_21	CALL_2
0x4002469	          0x4889c7	                            mov rdi, rax	      1259	write.c	FUNCTION_21	CALL_2
0x400246c	      0xe800000000	                          call 0x4002471	      1259	write.c	FUNCTION_21	CALL_2
0x4002471	        0x488945d0	             mov qword [rbp - 0x30], rax	      1259	write.c	FUNCTION_21	CALL_2
0x4002475	    0xc74588000000	               mov dword [rbp - 0x78], 0	      1261	write.c	FUNCTION_21
0x400247c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1262	write.c	FUNCTION_21
0x4002480	        0x488945b0	             mov qword [rbp - 0x50], rax	      1262	write.c	FUNCTION_21
0x4002484	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1263	write.c	FUNCTION_21
0x400248c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1264	write.c	FUNCTION_21	FOR_2
0x4002490	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1264	write.c	FUNCTION_21	FOR_2
0x4002494	        0x488945b8	             mov qword [rbp - 0x48], rax	      1264	write.c	FUNCTION_21	FOR_2
0x4002498	      0xe9e7010000	                           jmp 0x4002684	      1264	write.c	FUNCTION_21	FOR_2
0x400249d	        0x488d4598	                   lea rax, [rbp - 0x68]	      1272	write.c	FUNCTION_21	FOR_2
0x40024a1	        0x488945d8	             mov qword [rbp - 0x28], rax	      1272	write.c	FUNCTION_21	FOR_2
0x40024a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x40024a9	           0xfb600	                   movzx eax, byte [rax]	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x40024ac	          0x83e020	                           and eax, 0x20	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x40024af	            0x84c0	                             test al, al	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x40024b1	     0xf85c0010000	                           jne 0x4002677	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x40024b7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1278	write.c	FUNCTION_21	FOR_2
0x40024bb	         0xfb64002	               movzx eax, byte [rax + 2]	      1278	write.c	FUNCTION_21	FOR_2
0x40024bf	           0xfb6c0	                           movzx eax, al	      1278	write.c	FUNCTION_21	FOR_2
0x40024c2	          0x89458c	             mov dword [rbp - 0x74], eax	      1278	write.c	FUNCTION_21	FOR_2
0x40024c5	    0xc74590000000	               mov dword [rbp - 0x70], 0	      1279	write.c	FUNCTION_21	FOR_2
0x40024cc	        0x837d9000	               cmp dword [rbp - 0x70], 0	      1280	write.c	FUNCTION_21	FOR_2	IF_5
0x40024d0	            0x7e18	                           jle 0x40024ea	      1280	write.c	FUNCTION_21	FOR_2	IF_5
0x40024d2	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024d5	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024d8	            0x7e08	                           jle 0x40024e2	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024da	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024dd	          0x2b4590	             sub eax, dword [rbp - 0x70]	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024e0	            0xeb05	                           jmp 0x40024e7	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024e2	      0xb800000000	                              mov eax, 0	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024e7	          0x89458c	             mov dword [rbp - 0x74], eax	      1281	write.c	FUNCTION_21	FOR_2	IF_5
0x40024ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1282	write.c	FUNCTION_21	FOR_2
0x40024ee	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1282	write.c	FUNCTION_21	FOR_2
0x40024f2	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1282	write.c	FUNCTION_21	FOR_2
0x40024f5	            0x4898	                                    cdqe	      1282	write.c	FUNCTION_21	FOR_2
0x40024f7	          0x4801d0	                            add rax, rdx	      1282	write.c	FUNCTION_21	FOR_2
0x40024fa	        0x488945e0	             mov qword [rbp - 0x20], rax	      1282	write.c	FUNCTION_21	FOR_2
0x40024fe	        0x837d9000	               cmp dword [rbp - 0x70], 0	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4002502	            0x783d	                            js 0x4002541	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4002504	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4002508	        0x488b4008	                mov rax, qword [rax + 8]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x400250c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4002510	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4002514	            0x7d2b	                           jge 0x4002541	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4002516	      0xbf00000000	                              mov edi, 0	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x400251b	      0xe800000000	                          call 0x4002520	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4002520	          0x4889c2	                            mov rdx, rax	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4002523	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4002527	          0x8b4868	            mov ecx, dword [rax + 0x68] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x400252a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x400252e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4002532	            0x89ce	                            mov esi, ecx	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4002534	          0x4889c7	                            mov rdi, rax	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4002537	      0xb800000000	                              mov eax, 0	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x400253c	      0xe800000000	                          call 0x4002541	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4002541	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4002545	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x400254c	          0x4889d6	                            mov rsi, rdx	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x400254f	          0x4889c7	                            mov rdi, rax	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4002552	      0xe800000000	                          call 0x4002557	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4002557	          0x4889c2	                            mov rdx, rax	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x400255a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x400255e	          0x488910	                    mov qword [rax], rdx	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4002561	              0x90	                                     nop	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002562	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002566	          0x488b00	                    mov rax, qword [rax]	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002569	          0x4885c0	                           test rax, rax	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x400256c	     0xf8406010000	                            je 0x4002678	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002572	      0xe987000000	                           jmp 0x40025fe	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002577	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x400257b	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x400257f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4002583	          0x4889ce	                            mov rsi, rcx	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4002586	          0x4889c7	                            mov rdi, rax	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4002589	      0xe88ffcffff	             call sym.get_frag_for_reloc	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x400258e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4002592	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1298	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4002597	            0x745a	                            je 0x40025f3	      1298	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4002599	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1300	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x400259d	        0x488945c0	             mov qword [rbp - 0x40], rax	      1300	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025a1	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025a4	          0x8d5001	                      lea edx, [rax + 1]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025a7	          0x895588	             mov dword [rbp - 0x78], edx	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025aa	            0x89c0	                            mov eax, eax	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025ac	    0x488d14c50000	                        lea rdx, [rax*8]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025b8	          0x4801d0	                            add rax, rdx	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025bb	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025bf	        0x4883c218	                           add rdx, 0x18	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025c3	          0x488910	                    mov qword [rax], rdx	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40025c6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025ca	          0x8b7840	            mov edi, dword [rax + 0x40] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025d1	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025d5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025d9	        0x488d7018	                   lea rsi, [rax + 0x18]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025dd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025e1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025e8	          0x4189f8	                            mov r8d, edi	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025eb	          0x4889c7	                            mov rdi, rax	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025ee	      0xe8bafaffff	                  call sym.install_reloc	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40025f3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1304	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40025f7	          0x488b00	                    mov rax, qword [rax]	      1304	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40025fa	        0x488945b0	             mov qword [rbp - 0x50], rax	      1304	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40025fe	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002603	            0x741c	                            je 0x4002621	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002605	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002609	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400260d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002611	          0x488b00	                    mov rax, qword [rax]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002614	        0x488b4008	                mov rax, qword [rax + 8]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002618	          0x4839c2	                            cmp rdx, rax	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400261b	     0xf8256ffffff	                            jb 0x4002577	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4002621	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002624	          0x8d5001	                      lea edx, [rax + 1]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002627	          0x895588	             mov dword [rbp - 0x78], edx	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x400262a	            0x89c0	                            mov eax, eax	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x400262c	    0x488d14c50000	                        lea rdx, [rax*8]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002634	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002638	          0x4801c2	                            add rdx, rax	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x400263b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x400263f	          0x488b00	                    mov rax, qword [rax]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002642	          0x488902	                    mov qword [rdx], rax	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002645	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002649	          0x8b7868	            mov edi, dword [rax + 0x68] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x400264c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002650	        0x488b4860	            mov rcx, qword [rax + 0x60] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002654	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002658	        0x488b5008	                mov rdx, qword [rax + 8]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x400265c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002660	          0x488b30	                    mov rsi, qword [rax]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002663	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x400266a	          0x4189f8	                            mov r8d, edi	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x400266d	          0x4889c7	                            mov rdi, rax	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002670	      0xe838faffff	                  call sym.install_reloc	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4002675	            0xeb01	                           jmp 0x4002678	      1310	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4002677	              0x90	                                     nop	      1276	write.c	FUNCTION_21	FOR_2	IF_4
0x4002678	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1264	write.c	FUNCTION_21	FOR_2
0x400267c	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1264	write.c	FUNCTION_21	FOR_2
0x4002680	        0x488945b8	             mov qword [rbp - 0x48], rax	      1264	write.c	FUNCTION_21	FOR_2
0x4002684	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1264	write.c	FUNCTION_21	FOR_2
0x4002689	     0xf850efeffff	                           jne 0x400249d	      1264	write.c	FUNCTION_21	FOR_2
0x400268f	      0xe987000000	                           jmp 0x400271b	      1317	write.c	FUNCTION_21	WHILE_4
0x4002694	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4002698	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x400269c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x40026a0	          0x4889ce	                            mov rsi, rcx	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x40026a3	          0x4889c7	                            mov rdi, rax	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x40026a6	      0xe872fbffff	             call sym.get_frag_for_reloc	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x40026ab	        0x488945f0	             mov qword [rbp - 0x10], rax	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x40026af	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1320	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026b4	            0x745a	                            je 0x4002710	      1320	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1322	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026ba	        0x488945c0	             mov qword [rbp - 0x40], rax	      1322	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026be	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026c1	          0x8d5001	                      lea edx, [rax + 1]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026c4	          0x895588	             mov dword [rbp - 0x78], edx	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026c7	            0x89c0	                            mov eax, eax	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026c9	    0x488d14c50000	                        lea rdx, [rax*8]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026d1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026d5	          0x4801d0	                            add rax, rdx	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026d8	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026dc	        0x4883c218	                           add rdx, 0x18	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026e0	          0x488910	                    mov qword [rax], rdx	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x40026e3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x40026e7	          0x8b7840	            mov edi, dword [rax + 0x40] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x40026ea	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x40026ee	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x40026f2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x40026f6	        0x488d7018	                   lea rsi, [rax + 0x18]	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x40026fa	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x40026fe	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4002705	          0x4189f8	                            mov r8d, edi	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4002708	          0x4889c7	                            mov rdi, rax	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x400270b	      0xe89df9ffff	                  call sym.install_reloc	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4002710	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1326	write.c	FUNCTION_21	WHILE_4
0x4002714	          0x488b00	                    mov rax, qword [rax]	      1326	write.c	FUNCTION_21	WHILE_4
0x4002717	        0x488945b0	             mov qword [rbp - 0x50], rax	      1326	write.c	FUNCTION_21	WHILE_4
0x400271b	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1317	write.c	FUNCTION_21	WHILE_4
0x4002720	     0xf856effffff	                           jne 0x4002694	      1317	write.c	FUNCTION_21	WHILE_4
0x4002726	        0x837d8800	               cmp dword [rbp - 0x78], 0	      1347	write.c	FUNCTION_21	IF_12
0x400272a	            0x7459	                            je 0x4002785	      1347	write.c	FUNCTION_21	IF_12
0x400272c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1349	write.c	FUNCTION_21	IF_12
0x4002733	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1349	write.c	FUNCTION_21	IF_12
0x4002736	          0x894594	             mov dword [rbp - 0x6c], eax	      1349	write.c	FUNCTION_21	IF_12
0x4002739	        0x834d9404	                or dword [rbp - 0x6c], 4	      1350	write.c	FUNCTION_21	IF_12
0x400273d	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4002740	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4002747	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x400274e	          0x4889ce	                            mov rsi, rcx	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4002751	          0x4889c7	                            mov rdi, rax	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4002754	      0xe800000000	                          call 0x4002759	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4002759	    0x488b05000000	            mov rax, qword [0x04002760] 	      1352	write.c	FUNCTION_21	IF_12
0x4002760	        0x488b4008	                mov rax, qword [rax + 8]	      1352	write.c	FUNCTION_21	IF_12
0x4002764	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      1352	write.c	FUNCTION_21	IF_12
0x400276b	    0x488b3d000000	            mov rdi, qword [0x04002772] 	      1352	write.c	FUNCTION_21	IF_12
0x4002772	          0x8b4d88	             mov ecx, dword [rbp - 0x78]	      1352	write.c	FUNCTION_21	IF_12
0x4002775	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1352	write.c	FUNCTION_21	IF_12
0x4002779	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      1352	write.c	FUNCTION_21	IF_12
0x4002780	            0xffd0	                                call rax	      1352	write.c	FUNCTION_21	IF_12
0x4002782	            0xeb01	                           jmp 0x4002785	      1352	write.c	FUNCTION_21	IF_12
0x4002784	              0x90	                                     nop	      1232	write.c	FUNCTION_21	IF_1
0x4002785	        0x488b45f8	                mov rax, qword [rbp - 8]	      1374	write.c	FUNCTION_21
0x4002789	    0x644833042528	                xor rax, qword fs:[0x28]	      1374	write.c	FUNCTION_21
0x4002792	            0x7405	                            je 0x4002799	      1374	write.c	FUNCTION_21
0x4002794	      0xe800000000	                          call 0x4002799	      1374	write.c	FUNCTION_21
0x4002799	              0xc9	                                   leave	      1374	write.c	FUNCTION_21
0x400279a	              0xc3	                                     ret	      1374	write.c	FUNCTION_21
install_reloc	IF,1:SWITCH,1:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,9	104
0x40020ad	              0x55	                                push rbp	      1160	write.c	FUNCTION_19
0x40020ae	          0x4889e5	                            mov rbp, rsp	      1160	write.c	FUNCTION_19
0x40020b1	        0x4883ec50	                           sub rsp, 0x50	      1160	write.c	FUNCTION_19
0x40020b5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1160	write.c	FUNCTION_19
0x40020b9	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1160	write.c	FUNCTION_19
0x40020bd	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1160	write.c	FUNCTION_19
0x40020c1	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1160	write.c	FUNCTION_19
0x40020c5	        0x448945bc	             mov dword [rbp - 0x44], r8d	      1160	write.c	FUNCTION_19
0x40020c9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1160	write.c	FUNCTION_19
0x40020d2	        0x488945f8	                mov qword [rbp - 8], rax	      1160	write.c	FUNCTION_19
0x40020d6	            0x31c0	                            xor eax, eax	      1160	write.c	FUNCTION_19
0x40020d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1165	write.c	FUNCTION_19	IF_1
0x40020dc	          0x488b00	                    mov rax, qword [rax]	      1165	write.c	FUNCTION_19	IF_1
0x40020df	          0x4885c0	                           test rax, rax	      1165	write.c	FUNCTION_19	IF_1
0x40020e2	            0x7466	                            je 0x400214a	      1165	write.c	FUNCTION_19	IF_1
0x40020e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1166	write.c	FUNCTION_19	IF_1
0x40020e8	          0x488b00	                    mov rax, qword [rax]	      1166	write.c	FUNCTION_19	IF_1
0x40020eb	          0x488b00	                    mov rax, qword [rax]	      1166	write.c	FUNCTION_19	IF_1
0x40020ee	        0x488945f0	             mov qword [rbp - 0x10], rax	      1166	write.c	FUNCTION_19	IF_1
0x40020f2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1166	write.c	FUNCTION_19	IF_1
0x40020f7	            0x7451	                            je 0x400214a	      1166	write.c	FUNCTION_19	IF_1
0x40020f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1167	write.c	FUNCTION_19	IF_1
0x40020fd	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1167	write.c	FUNCTION_19	IF_1
0x4002100	          0x83e020	                           and eax, 0x20	      1167	write.c	FUNCTION_19	IF_1
0x4002103	            0x85c0	                           test eax, eax	      1167	write.c	FUNCTION_19	IF_1
0x4002105	            0x7543	                           jne 0x400214a	      1167	write.c	FUNCTION_19	IF_1
0x4002107	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1168	write.c	FUNCTION_19	IF_1
0x400210b	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1168	write.c	FUNCTION_19	IF_1
0x400210e	      0x2500010000	                          and eax, 0x100	      1168	write.c	FUNCTION_19	IF_1
0x4002113	            0x85c0	                           test eax, eax	      1168	write.c	FUNCTION_19	IF_1
0x4002115	            0x7410	                            je 0x4002127	      1168	write.c	FUNCTION_19	IF_1
0x4002117	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1170	write.c	FUNCTION_19	IF_1
0x400211b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1170	write.c	FUNCTION_19	IF_1
0x400211f	    0x483d00000000	                              cmp rax, 0	      1169	write.c	FUNCTION_19	IF_1
0x4002125	            0x7423	                            je 0x400214a	      1169	write.c	FUNCTION_19	IF_1
0x4002127	      0xbf00000000	                              mov edi, 0	      1171	write.c	FUNCTION_19	CALL_2
0x400212c	      0xe800000000	                          call 0x4002131	      1171	write.c	FUNCTION_19	CALL_2
0x4002131	          0x4889c2	                            mov rdx, rax	      1171	write.c	FUNCTION_19	CALL_2
0x4002134	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1171	write.c	FUNCTION_19	CALL_2
0x4002137	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1171	write.c	FUNCTION_19	CALL_2
0x400213b	            0x89ce	                            mov esi, ecx	      1171	write.c	FUNCTION_19	CALL_2
0x400213d	          0x4889c7	                            mov rdi, rax	      1171	write.c	FUNCTION_19	CALL_2
0x4002140	      0xb800000000	                              mov eax, 0	      1171	write.c	FUNCTION_19	CALL_2
0x4002145	      0xe800000000	                          call 0x400214a	      1171	write.c	FUNCTION_19	CALL_2
0x400214a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1173	write.c	FUNCTION_19	CALL_3
0x400214e	          0x488b10	                    mov rdx, qword [rax]	      1173	write.c	FUNCTION_19	CALL_3
0x4002151	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1174	write.c	FUNCTION_19
0x4002155	        0x488d787c	                   lea rdi, [rax + 0x7c]	      1174	write.c	FUNCTION_19
0x4002159	    0x488b05000000	            mov rax, qword [0x04002160] 	      1173	write.c	FUNCTION_19	CALL_3
0x4002160	        0x4c8d45e8	                    lea r8, [rbp - 0x18]	      1173	write.c	FUNCTION_19	CALL_3
0x4002164	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1173	write.c	FUNCTION_19	CALL_3
0x4002168	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1173	write.c	FUNCTION_19	CALL_3
0x400216c	          0x4d89c1	                              mov r9, r8	      1173	write.c	FUNCTION_19	CALL_3
0x400216f	          0x4989c8	                             mov r8, rcx	      1173	write.c	FUNCTION_19	CALL_3
0x4002172	          0x4889d1	                            mov rcx, rdx	      1173	write.c	FUNCTION_19	CALL_3
0x4002175	          0x4889fa	                            mov rdx, rdi	      1173	write.c	FUNCTION_19	CALL_3
0x4002178	          0x4889c7	                            mov rdi, rax	      1173	write.c	FUNCTION_19	CALL_3
0x400217b	      0xe800000000	                          call 0x4002180	      1173	write.c	FUNCTION_19	CALL_3
0x4002180	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1173	write.c	FUNCTION_19	CALL_3
0x4002183	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1176	write.c	FUNCTION_19	SWITCH_1
0x4002186	          0x83f803	                              cmp eax, 3	      1176	write.c	FUNCTION_19	SWITCH_1
0x4002189	            0x740c	                            je 0x4002197	      1176	write.c	FUNCTION_19	SWITCH_1
0x400218b	          0x83f804	                              cmp eax, 4	      1176	write.c	FUNCTION_19	SWITCH_1
0x400218e	            0x742c	                            je 0x40021bc	      1176	write.c	FUNCTION_19	SWITCH_1
0x4002190	          0x83f802	                              cmp eax, 2	      1176	write.c	FUNCTION_19	SWITCH_1
0x4002193	            0x7470	                            je 0x4002205	      1176	write.c	FUNCTION_19	SWITCH_1
0x4002195	            0xeb4a	                           jmp 0x40021e1	      1176	write.c	FUNCTION_19	SWITCH_1
0x4002197	      0xbf00000000	                              mov edi, 0	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x400219c	      0xe800000000	                          call 0x40021a1	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021a1	          0x4889c2	                            mov rdx, rax	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021a4	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021a7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021ab	            0x89ce	                            mov esi, ecx	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021ad	          0x4889c7	                            mov rdi, rax	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021b0	      0xb800000000	                              mov eax, 0	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021b5	      0xe800000000	                          call 0x40021ba	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x40021ba	            0xeb4a	                           jmp 0x4002206	      1182	write.c	FUNCTION_19	SWITCH_1
0x40021bc	      0xbf00000000	                              mov edi, 0	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021c1	      0xe800000000	                          call 0x40021c6	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021c6	          0x4889c2	                            mov rdx, rax	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021c9	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021d0	            0x89ce	                            mov esi, ecx	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021d2	          0x4889c7	                            mov rdi, rax	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021d5	      0xb800000000	                              mov eax, 0	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021da	      0xe800000000	                          call 0x40021df	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x40021df	            0xeb25	                           jmp 0x4002206	      1185	write.c	FUNCTION_19	SWITCH_1
0x40021e1	      0xbf00000000	                              mov edi, 0	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40021e6	      0xe800000000	                          call 0x40021eb	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40021eb	          0x4889c7	                            mov rdi, rax	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40021ee	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40021f1	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40021f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40021f8	          0x4889c6	                            mov rsi, rax	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40021fb	      0xb800000000	                              mov eax, 0	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4002200	      0xe800000000	                          call 0x4002205	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4002205	              0x90	                                     nop	      1179	write.c	FUNCTION_19	SWITCH_1
0x4002206	              0x90	                                     nop	      1190	write.c	FUNCTION_19
0x4002207	        0x488b45f8	                mov rax, qword [rbp - 8]	      1190	write.c	FUNCTION_19
0x400220b	    0x644833042528	                xor rax, qword fs:[0x28]	      1190	write.c	FUNCTION_19
0x4002214	            0x7405	                            je 0x400221b	      1190	write.c	FUNCTION_19
0x4002216	      0xe800000000	                          call 0x400221b	      1190	write.c	FUNCTION_19
0x400221b	              0xc9	                                   leave	      1190	write.c	FUNCTION_19
0x400221c	              0xc3	                                     ret	      1190	write.c	FUNCTION_19
chain_frchains_together	IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,2	27
0x40008f6	              0x55	                                push rbp	       418	write.c	FUNCTION_11
0x40008f7	          0x4889e5	                            mov rbp, rsp	       418	write.c	FUNCTION_11
0x40008fa	              0x53	                                push rbx	       418	write.c	FUNCTION_11
0x40008fb	        0x4883ec38	                           sub rsp, 0x38	       418	write.c	FUNCTION_11
0x40008ff	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       418	write.c	FUNCTION_11
0x4000903	        0x488975d0	             mov qword [rbp - 0x30], rsi	       418	write.c	FUNCTION_11
0x4000907	        0x488955c8	             mov qword [rbp - 0x38], rdx	       418	write.c	FUNCTION_11
0x400090b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       423	write.c	FUNCTION_11	CALL_1
0x400090f	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       423	write.c	FUNCTION_11	CALL_1
0x4000916	        0x488945e8	             mov qword [rbp - 0x18], rax	       423	write.c	FUNCTION_11	CALL_1
0x400091a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       424	write.c	FUNCTION_11	IF_1
0x400091f	            0x7421	                            je 0x4000942	       424	write.c	FUNCTION_11	IF_1
0x4000921	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       425	write.c	FUNCTION_11	IF_1
0x4000925	          0x488b18	                    mov rbx, qword [rax]	       425	write.c	FUNCTION_11	IF_1
0x4000928	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       426	write.c	FUNCTION_11	CALL_2
0x400092c	          0x488b10	                    mov rdx, qword [rax]	       426	write.c	FUNCTION_11	CALL_2
0x400092f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       426	write.c	FUNCTION_11	CALL_2
0x4000933	          0x4889d6	                            mov rsi, rdx	       426	write.c	FUNCTION_11	CALL_2
0x4000936	          0x4889c7	                            mov rdi, rax	       426	write.c	FUNCTION_11	CALL_2
0x4000939	      0xe81ffeffff	      call sym.chain_frchains_together_1	       426	write.c	FUNCTION_11	CALL_2
0x400093e	        0x48894308	                mov qword [rbx + 8], rax	       426	write.c	FUNCTION_11	CALL_2
0x4000942	    0xc70500000000	               mov dword [0x0400094c], 1	       430	write.c	FUNCTION_11
0x400094c	              0x90	                                     nop	       431	write.c	FUNCTION_11
0x400094d	        0x4883c438	                           add rsp, 0x38	       431	write.c	FUNCTION_11
0x4000951	              0x5b	                                 pop rbx	       431	write.c	FUNCTION_11
0x4000952	              0x5d	                                 pop rbp	       431	write.c	FUNCTION_11
0x4000953	              0xc3	                                     ret	       431	write.c	FUNCTION_11
write_object_file	IF,28:SWITCH,0:WHILE,1:functions,0:FOR,8:DO,0:ELSE,2:CALL,91	450
0x4004256	              0x55	                                push rbp	      2065	write.c	FUNCTION_33
0x4004257	          0x4889e5	                            mov rbp, rsp	      2065	write.c	FUNCTION_33
0x400425a	              0x53	                                push rbx	      2065	write.c	FUNCTION_33
0x400425b	    0x4881ec880000	                           sub rsp, 0x88	      2065	write.c	FUNCTION_33
0x4004262	    0x64488b042528	                mov rax, qword fs:[0x28]	      2065	write.c	FUNCTION_33
0x400426b	        0x488945e8	             mov qword [rbp - 0x18], rax	      2065	write.c	FUNCTION_33
0x400426f	            0x31c0	                            xor eax, eax	      2065	write.c	FUNCTION_33
0x4004271	      0xe825f9ffff	                 call sym.subsegs_finish	      2071	write.c	FUNCTION_33	CALL_1
0x4004276	    0x488b05000000	            mov rax, qword [0x0400427d] 	      2088	write.c	FUNCTION_33
0x400427d	        0x48894598	             mov qword [rbp - 0x68], rax	      2088	write.c	FUNCTION_33
0x4004281	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2088	write.c	FUNCTION_33
0x4004285	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2088	write.c	FUNCTION_33
0x4004289	        0x488945a0	             mov qword [rbp - 0x60], rax	      2088	write.c	FUNCTION_33
0x400428d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2088	write.c	FUNCTION_33
0x4004291	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2088	write.c	FUNCTION_33
0x4004295	        0x488945a8	             mov qword [rbp - 0x58], rax	      2088	write.c	FUNCTION_33
0x4004299	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2088	write.c	FUNCTION_33
0x400429e	            0x740e	                            je 0x40042ae	      2088	write.c	FUNCTION_33
0x40042a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2088	write.c	FUNCTION_33
0x40042a4	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2088	write.c	FUNCTION_33
0x40042a8	        0x48895010	             mov qword [rax + 0x10], rdx	      2088	write.c	FUNCTION_33
0x40042ac	            0xeb12	                           jmp 0x40042c0	      2088	write.c	FUNCTION_33
0x40042ae	    0x488b05000000	            mov rax, qword [0x040042b5] 	      2088	write.c	FUNCTION_33
0x40042b5	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2088	write.c	FUNCTION_33
0x40042b9	    0x488990900000	             mov qword [rax + 0x90], rdx	      2088	write.c	FUNCTION_33
0x40042c0	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2088	write.c	FUNCTION_33
0x40042c5	            0x740e	                            je 0x40042d5	      2088	write.c	FUNCTION_33
0x40042c7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2088	write.c	FUNCTION_33
0x40042cb	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2088	write.c	FUNCTION_33
0x40042cf	        0x48895018	             mov qword [rax + 0x18], rdx	      2088	write.c	FUNCTION_33
0x40042d3	            0xeb12	                           jmp 0x40042e7	      2088	write.c	FUNCTION_33
0x40042d5	    0x488b05000000	            mov rax, qword [0x040042dc] 	      2088	write.c	FUNCTION_33
0x40042dc	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2088	write.c	FUNCTION_33
0x40042e0	    0x488990980000	             mov qword [rax + 0x98], rdx	      2088	write.c	FUNCTION_33
0x40042e7	    0x488b05000000	            mov rax, qword [0x040042ee] 	      2089	write.c	FUNCTION_33
0x40042ee	        0x488945b0	             mov qword [rbp - 0x50], rax	      2089	write.c	FUNCTION_33
0x40042f2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2089	write.c	FUNCTION_33
0x40042f6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2089	write.c	FUNCTION_33
0x40042fa	        0x488945b8	             mov qword [rbp - 0x48], rax	      2089	write.c	FUNCTION_33
0x40042fe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2089	write.c	FUNCTION_33
0x4004302	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2089	write.c	FUNCTION_33
0x4004306	        0x488945c0	             mov qword [rbp - 0x40], rax	      2089	write.c	FUNCTION_33
0x400430a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2089	write.c	FUNCTION_33
0x400430f	            0x740e	                            je 0x400431f	      2089	write.c	FUNCTION_33
0x4004311	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2089	write.c	FUNCTION_33
0x4004315	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2089	write.c	FUNCTION_33
0x4004319	        0x48895010	             mov qword [rax + 0x10], rdx	      2089	write.c	FUNCTION_33
0x400431d	            0xeb12	                           jmp 0x4004331	      2089	write.c	FUNCTION_33
0x400431f	    0x488b05000000	            mov rax, qword [0x04004326] 	      2089	write.c	FUNCTION_33
0x4004326	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2089	write.c	FUNCTION_33
0x400432a	    0x488990900000	             mov qword [rax + 0x90], rdx	      2089	write.c	FUNCTION_33
0x4004331	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2089	write.c	FUNCTION_33
0x4004336	            0x740e	                            je 0x4004346	      2089	write.c	FUNCTION_33
0x4004338	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2089	write.c	FUNCTION_33
0x400433c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2089	write.c	FUNCTION_33
0x4004340	        0x48895018	             mov qword [rax + 0x18], rdx	      2089	write.c	FUNCTION_33
0x4004344	            0xeb12	                           jmp 0x4004358	      2089	write.c	FUNCTION_33
0x4004346	    0x488b05000000	            mov rax, qword [0x0400434d] 	      2089	write.c	FUNCTION_33
0x400434d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2089	write.c	FUNCTION_33
0x4004351	    0x488990980000	             mov qword [rax + 0x98], rdx	      2089	write.c	FUNCTION_33
0x4004358	    0x488b05000000	            mov rax, qword [0x0400435f] 	      2090	write.c	FUNCTION_33
0x400435f	    0x488b15000000	            mov rdx, qword [0x04004366] 	      2090	write.c	FUNCTION_33
0x4004366	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      2090	write.c	FUNCTION_33
0x400436c	          0x83ea02	                              sub edx, 2	      2090	write.c	FUNCTION_33
0x400436f	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      2090	write.c	FUNCTION_33
0x4004375	    0xc74580000000	               mov dword [rbp - 0x80], 0	      2091	write.c	FUNCTION_33
0x400437c	    0x488b05000000	            mov rax, qword [0x04004383] 	      2092	write.c	FUNCTION_33	CALL_2
0x4004383	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2092	write.c	FUNCTION_33	CALL_2
0x4004387	      0xbe00000000	                              mov esi, 0	      2092	write.c	FUNCTION_33	CALL_2
0x400438c	          0x4889c7	                            mov rdi, rax	      2092	write.c	FUNCTION_33	CALL_2
0x400438f	      0xe800000000	                          call 0x4004394	      2092	write.c	FUNCTION_33	CALL_2
0x4004394	    0x488b05000000	            mov rax, qword [0x0400439b] 	      2095	write.c	FUNCTION_33	CALL_3
0x400439b	      0xba00000000	                              mov edx, 0	      2095	write.c	FUNCTION_33	CALL_3
0x40043a0	      0xbe00000000	                              mov esi, 0	      2095	write.c	FUNCTION_33	CALL_3
0x40043a5	          0x4889c7	                            mov rdi, rax	      2095	write.c	FUNCTION_33	CALL_3
0x40043a8	      0xe800000000	                          call 0x40043ad	      2095	write.c	FUNCTION_33	CALL_3
0x40043ad	     0xfb605000000	           movzx eax, byte [0x040043b4] 	      2100	write.c	FUNCTION_33	IF_1
0x40043b4	            0x84c0	                             test al, al	      2100	write.c	FUNCTION_33	IF_1
0x40043b6	            0x7405	                            je 0x40043bd	      2100	write.c	FUNCTION_33	IF_1
0x40043b8	      0xe8cbf3ffff	           call sym.merge_data_into_text	      2102	write.c	FUNCTION_33	IF_1	CALL_4
0x40043bd	    0xc74580000000	               mov dword [rbp - 0x80], 0	      2105	write.c	FUNCTION_33
0x40043c4	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      2128	write.c	FUNCTION_33	WHILE_1
0x40043cb	    0x488b05000000	            mov rax, qword [0x040043d2] 	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40043d2	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40043d6	      0xbe00000000	                              mov esi, 0	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40043db	          0x4889c7	                            mov rdi, rax	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40043de	      0xe800000000	                          call 0x40043e3	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40043e3	          0x8b4580	             mov eax, dword [rbp - 0x80]	      2130	write.c	FUNCTION_33	WHILE_1
0x40043e6	          0x83c001	                              add eax, 1	      2130	write.c	FUNCTION_33	WHILE_1
0x40043e9	          0x894580	             mov dword [rbp - 0x80], eax	      2130	write.c	FUNCTION_33	WHILE_1
0x40043ec	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x40043ef	            0x85c0	                           test eax, eax	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x40043f1	            0x7402	                            je 0x40043f5	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x40043f3	            0xebcf	                           jmp 0x40043c4	      2133	write.c	FUNCTION_33	WHILE_1
0x40043f5	              0x90	                                     nop	      2132	write.c	FUNCTION_33	WHILE_1	IF_3
0x40043f6	    0xc70500000000	               mov dword [0x04004400], 1	      2142	write.c	FUNCTION_33
0x4004400	    0x488b05000000	            mov rax, qword [0x04004407] 	      2144	write.c	FUNCTION_33	CALL_6
0x4004407	      0xba00000000	                              mov edx, 0	      2144	write.c	FUNCTION_33	CALL_6
0x400440c	      0xbe00000000	                              mov esi, 0	      2144	write.c	FUNCTION_33	CALL_6
0x4004411	          0x4889c7	                            mov rdi, rax	      2144	write.c	FUNCTION_33	CALL_6
0x4004414	      0xe800000000	                          call 0x4004419	      2144	write.c	FUNCTION_33	CALL_6
0x4004419	    0xc70500000000	               mov dword [0x04004423], 1	      2147	write.c	FUNCTION_33
0x4004423	      0xe800000000	                          call 0x4004428	      2149	write.c	FUNCTION_33	CALL_7
0x4004428	      0xe8acf7ffff	       call sym.create_obj_attrs_section	      2157	write.c	FUNCTION_33	CALL_8
0x400442d	    0x488b05000000	            mov rax, qword [0x04004434] 	      2261	write.c	FUNCTION_33	IF_9
0x4004434	          0x4885c0	                           test rax, rax	      2261	write.c	FUNCTION_33	IF_9
0x4004437	            0x7430	                            je 0x4004469	      2261	write.c	FUNCTION_33	IF_9
0x4004439	    0x488b05000000	            mov rax, qword [0x04004440] 	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004440	        0x48894588	             mov qword [rbp - 0x78], rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004444	            0xeb1c	                           jmp 0x4004462	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004446	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x400444a	          0x4889c7	                            mov rdi, rax	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x400444d	      0xe800000000	                          call 0x4004452	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x4004452	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004456	          0x4889c7	                            mov rdi, rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004459	      0xe800000000	                          call 0x400445e	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x400445e	        0x48894588	             mov qword [rbp - 0x78], rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004462	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004467	            0x75dd	                           jne 0x4004446	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4004469	      0xe800000000	                          call 0x400446e	      2268	write.c	FUNCTION_33	CALL_21
0x400446e	      0xe800cbffff	     call sym.resolve_reloc_expr_symbols	      2269	write.c	FUNCTION_33	CALL_22
0x4004473	      0xe800faffff	     call sym.maybe_generate_build_notes	      2273	write.c	FUNCTION_33	CALL_23
0x4004478	      0xe800000000	                          call 0x400447d	      2282	write.c	FUNCTION_33	CALL_26
0x400447d	    0x488b05000000	            mov rax, qword [0x04004484] 	      2285	write.c	FUNCTION_33	CALL_27
0x4004484	      0xba00000000	                              mov edx, 0	      2285	write.c	FUNCTION_33	CALL_27
0x4004489	      0xbe00000000	                              mov esi, 0	      2285	write.c	FUNCTION_33	CALL_27
0x400448e	          0x4889c7	                            mov rdi, rax	      2285	write.c	FUNCTION_33	CALL_27
0x4004491	      0xe800000000	                          call 0x4004496	      2285	write.c	FUNCTION_33	CALL_27
0x4004496	    0x488b05000000	            mov rax, qword [0x0400449d] 	      2294	write.c	FUNCTION_33	CALL_30
0x400449d	      0xba00000000	                              mov edx, 0	      2294	write.c	FUNCTION_33	CALL_30
0x40044a2	      0xbe00000000	                              mov esi, 0	      2294	write.c	FUNCTION_33	CALL_30
0x40044a7	          0x4889c7	                            mov rdi, rax	      2294	write.c	FUNCTION_33	CALL_30
0x40044aa	      0xe800000000	                          call 0x40044af	      2294	write.c	FUNCTION_33	CALL_30
0x40044af	    0x488b05000000	            mov rax, qword [0x040044b6] 	      2297	write.c	FUNCTION_33	IF_11
0x40044b6	          0x4885c0	                           test rax, rax	      2297	write.c	FUNCTION_33	IF_11
0x40044b9	     0xf8492030000	                            je 0x4004851	      2297	write.c	FUNCTION_33	IF_11
0x40044bf	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      2300	write.c	FUNCTION_33	IF_11
0x40044c9	    0x488b05000000	            mov rax, qword [0x040044d0] 	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x40044d0	        0x48894590	             mov qword [rbp - 0x70], rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x40044d4	      0xe96d030000	                           jmp 0x4004846	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x40044d9	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2304	write.c	FUNCTION_33	IF_11	FOR_8
0x40044e3	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x40044ea	            0x742e	                            je 0x400451a	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x40044ec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x40044f0	          0x4889c7	                            mov rdi, rax	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x40044f3	      0xe800000000	                          call 0x40044f8	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x40044f8	          0x4889c3	                            mov rbx, rax	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x40044fb	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x40044ff	          0x4889c7	                            mov rdi, rax	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4004502	      0xe800000000	                          call 0x4004507	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4004507	        0x48894310	             mov qword [rbx + 0x10], rax	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400450b	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      2312	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x4004515	      0xe91c030000	                           jmp 0x4004836	      2313	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x400451a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x400451e	          0x4889c7	                            mov rdi, rax	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x4004521	      0xe800000000	                          call 0x4004526	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x4004526	            0x85c0	                           test eax, eax	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x4004528	            0x7454	                            je 0x400457e	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x400452a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x400452e	          0x4889c7	                            mov rdi, rax	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4004531	      0xe800000000	                          call 0x4004536	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4004536	            0x85c0	                           test eax, eax	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4004538	            0x7429	                            je 0x4004563	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x400453a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x400453e	          0x4889c7	                            mov rdi, rax	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4004541	      0xe800000000	                          call 0x4004546	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4004546	          0x4889c3	                            mov rbx, rax	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4004549	      0xbf00000000	                              mov edi, 0	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x400454e	      0xe800000000	                          call 0x4004553	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4004553	          0x4889de	                            mov rsi, rbx	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4004556	          0x4889c7	                            mov rdi, rax	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4004559	      0xb800000000	                              mov eax, 0	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x400455e	      0xe800000000	                          call 0x4004563	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4004563	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x4004567	      0xba00000000	                              mov edx, 0	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x400456c	      0xbe00000000	                              mov esi, 0	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x4004571	          0x4889c7	                            mov rdi, rax	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x4004574	      0xe800000000	                          call 0x4004579	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x4004579	      0xe9b8020000	                           jmp 0x4004836	      2322	write.c	FUNCTION_33	IF_11	FOR_8	IF_13
0x400457e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x4004582	          0x4889c7	                            mov rdi, rax	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x4004585	      0xe800000000	                          call 0x400458a	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x400458a	        0x488945c8	             mov qword [rbp - 0x38], rax	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x400458e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x4004593	            0x7453	                            je 0x40045e8	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x4004595	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x4004599	          0x4889c7	                            mov rdi, rax	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x400459c	      0xe800000000	                          call 0x40045a1	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x40045a1	          0x4889c7	                            mov rdi, rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40045a4	      0xe800000000	                          call 0x40045a9	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40045a9	        0x488945d0	             mov qword [rbp - 0x30], rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40045ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045b1	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045b5	            0x7431	                            je 0x40045e8	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045b7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045bb	          0x4889c7	                            mov rdi, rax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045be	      0xe800000000	                          call 0x40045c3	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045c3	            0x85c0	                           test eax, eax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045c5	            0x7521	                           jne 0x40045e8	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40045c7	      0xbf00000000	                              mov edi, 0	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045cc	      0xe800000000	                          call 0x40045d1	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045d1	          0x4889c2	                            mov rdx, rax	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045d8	          0x4889c6	                            mov rsi, rax	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045db	          0x4889d7	                            mov rdi, rdx	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045de	      0xb800000000	                              mov eax, 0	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045e3	      0xe800000000	                          call 0x40045e8	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40045e8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x40045ec	          0x4889c7	                            mov rdi, rax	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x40045ef	      0xe800000000	                          call 0x40045f4	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x40045f4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x40045f8	          0x4889c7	                            mov rdi, rax	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x40045fb	      0xe800000000	                          call 0x4004600	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4004600	            0x85c0	                           test eax, eax	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4004602	            0x7514	                           jne 0x4004618	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4004604	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4004608	          0x4889c7	                            mov rdi, rax	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x400460b	      0xe800000000	                          call 0x4004610	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4004610	            0x85c0	                           test eax, eax	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4004612	     0xf8400010000	                            je 0x4004718	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4004618	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x400461c	          0x4889c7	                            mov rdi, rax	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x400461f	      0xe800000000	                          call 0x4004624	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4004624	        0x488945d8	             mov qword [rbp - 0x28], rax	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4004628	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x400462c	          0x4889c7	                            mov rdi, rax	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x400462f	      0xe800000000	                          call 0x4004634	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4004634	            0x85c0	                           test eax, eax	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4004636	            0x746b	                            je 0x40046a3	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4004638	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400463c	      0xbe00000000	                              mov esi, 0	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4004641	          0x4889c7	                            mov rdi, rax	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4004644	      0xe800000000	                          call 0x4004649	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4004649	            0x85c0	                           test eax, eax	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400464b	            0x7456	                            je 0x40046a3	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400464d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4004651	          0x4889c7	                            mov rdi, rax	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4004654	      0xe800000000	                          call 0x4004659	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4004659	            0x85c0	                           test eax, eax	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x400465b	            0x7546	                           jne 0x40046a3	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x400465d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4004661	          0x4889c7	                            mov rdi, rax	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4004664	      0xe800000000	                          call 0x4004669	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4004669	        0x488945e0	             mov qword [rbp - 0x20], rax	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x400466d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004671	          0x488b00	                    mov rax, qword [rax]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004674	          0x4889c7	                            mov rdi, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004677	      0xe800000000	                          call 0x400467c	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400467c	          0x4889c3	                            mov rbx, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400467f	      0xbf00000000	                              mov edi, 0	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004684	      0xe800000000	                          call 0x4004689	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004689	          0x4889c1	                            mov rcx, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400468c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004690	          0x4889da	                            mov rdx, rbx	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004693	          0x4889c6	                            mov rsi, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004696	          0x4889cf	                            mov rdi, rcx	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4004699	      0xb800000000	                              mov eax, 0	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400469e	      0xe800000000	                          call 0x40046a3	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x40046a3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40046a7	          0x4889c7	                            mov rdi, rax	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40046aa	      0xe800000000	                          call 0x40046af	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40046af	          0x4889c2	                            mov rdx, rax	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40046b2	    0x488b05000000	            mov rax, qword [0x040046b9] 	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40046b9	          0x4839c2	                            cmp rdx, rax	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40046bc	            0x753f	                           jne 0x40046fd	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40046be	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046c2	          0x4889c7	                            mov rdi, rax	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046c5	      0xe800000000	                          call 0x40046ca	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046ca	          0x4889c2	                            mov rdx, rax	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046cd	    0x488b05000000	            mov rax, qword [0x040046d4] 	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046d4	          0x488b00	                    mov rax, qword [rax]	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046d7	          0x4839c2	                            cmp rdx, rax	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046da	            0x7421	                            je 0x40046fd	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40046dc	      0xbf00000000	                              mov edi, 0	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046e1	      0xe800000000	                          call 0x40046e6	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046e6	          0x4889c2	                            mov rdx, rax	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046ed	          0x4889c6	                            mov rsi, rax	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046f0	          0x4889d7	                            mov rdi, rdx	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046f3	      0xb800000000	                              mov eax, 0	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046f8	      0xe800000000	                          call 0x40046fd	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40046fd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x4004701	      0xba00000000	                              mov edx, 0	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x4004706	      0xbe00000000	                              mov esi, 0	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x400470b	          0x4889c7	                            mov rdi, rax	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x400470e	      0xe800000000	                          call 0x4004713	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x4004713	      0xe91e010000	                           jmp 0x4004836	      2365	write.c	FUNCTION_33	IF_11	FOR_8	IF_17
0x4004718	    0x488d9578ffff	                   lea rdx, [rbp - 0x88]	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x400471f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4004723	          0x4889d6	                            mov rsi, rdx	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4004726	          0x4889c7	                            mov rdi, rax	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4004729	      0xe800000000	                          call 0x400472e	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x400472e	    0x488b05000000	            mov rax, qword [0x04004735] 	      2382	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x4004735	        0x48394590	            cmp qword [rbp - 0x70], rax 	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x4004739	            0x745a	                            je 0x4004795	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x400473b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x400473f	          0x4889c7	                            mov rdi, rax	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4004742	      0xe800000000	                          call 0x4004747	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4004747	            0x85c0	                           test eax, eax	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4004749	            0x7565	                           jne 0x40047b0	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x400474b	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004751	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004753	            0x7530	                           jne 0x4004785	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004755	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004759	          0x4889c7	                            mov rdi, rax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x400475c	      0xe800000000	                          call 0x4004761	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004761	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004763	            0x7520	                           jne 0x4004785	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004765	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4004769	          0x4889c7	                            mov rdi, rax	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x400476c	      0xe800000000	                          call 0x4004771	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4004771	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004773	            0x743b	                            je 0x40047b0	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4004775	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4004779	          0x4889c7	                            mov rdi, rax	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x400477c	      0xe800000000	                          call 0x4004781	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4004781	            0x85c0	                           test eax, eax	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4004783	            0x752b	                           jne 0x40047b0	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4004785	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4004789	          0x4889c7	                            mov rdi, rax	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x400478c	      0xe800000000	                          call 0x4004791	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4004791	            0x85c0	                           test eax, eax	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4004793	            0x751b	                           jne 0x40047b0	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4004795	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x4004799	      0xba00000000	                              mov edx, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x400479e	      0xbe00000000	                              mov esi, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40047a3	          0x4889c7	                            mov rdi, rax	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40047a6	      0xe800000000	                          call 0x40047ab	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40047ab	      0xe986000000	                           jmp 0x4004836	      2397	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x40047b0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40047b4	          0x4889c7	                            mov rdi, rax	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40047b7	      0xe800000000	                          call 0x40047bc	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40047bc	            0x85c0	                           test eax, eax	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40047be	            0x7535	                           jne 0x40047f5	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40047c0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047c4	          0x4889c7	                            mov rdi, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047c7	      0xe800000000	                          call 0x40047cc	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047cc	          0x4889c3	                            mov rbx, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047cf	      0xbf00000000	                              mov edi, 0	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047d4	      0xe800000000	                          call 0x40047d9	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047d9	          0x4889de	                            mov rsi, rbx	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047dc	          0x4889c7	                            mov rdi, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047df	      0xb800000000	                              mov eax, 0	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047e4	      0xe800000000	                          call 0x40047e9	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40047e9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x40047ed	          0x4889c7	                            mov rdi, rax	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x40047f0	      0xe800000000	                          call 0x40047f5	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x40047f5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40047f9	          0x4889c7	                            mov rdi, rax	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40047fc	      0xe800000000	                          call 0x4004801	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4004801	          0x4889c3	                            mov rbx, rax	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4004804	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4004808	          0x4889c7	                            mov rdi, rax	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x400480b	      0xe800000000	                          call 0x4004810	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4004810	        0x48894310	             mov qword [rbx + 0x10], rax	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4004814	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x4004818	          0x4889c7	                            mov rdi, rax	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x400481b	      0xe800000000	                          call 0x4004820	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x4004820	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x4004823	      0x2500100000	                         and eax, 0x1000	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x4004828	            0x85c0	                           test eax, eax	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x400482a	            0x740a	                            je 0x4004836	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x400482c	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4004836	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x400483a	          0x4889c7	                            mov rdi, rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x400483d	      0xe800000000	                          call 0x4004842	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4004842	        0x48894590	             mov qword [rbp - 0x70], rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4004846	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x400484b	     0xf8588fcffff	                           jne 0x40044d9	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4004851	      0xe800000000	                          call 0x4004856	      2428	write.c	FUNCTION_33	CALL_81
0x4004856	      0xe800000000	                          call 0x400485b	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x400485b	            0x85c0	                           test eax, eax	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x400485d	     0xf851e010000	                           jne 0x4004981	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x4004863	      0xe893efffff	                     call sym.set_symtab	      2437	write.c	FUNCTION_33	CALL_83
0x4004868	      0xe800000000	                          call 0x400486d	      2447	write.c	FUNCTION_33	CALL_85
0x400486d	    0x488b05000000	            mov rax, qword [0x04004874] 	      2453	write.c	FUNCTION_33	CALL_87
0x4004874	      0xba00000000	                              mov edx, 0	      2453	write.c	FUNCTION_33	CALL_87
0x4004879	      0xbe00000000	                              mov esi, 0	      2453	write.c	FUNCTION_33	CALL_87
0x400487e	          0x4889c7	                            mov rdi, rax	      2453	write.c	FUNCTION_33	CALL_87
0x4004881	      0xe800000000	                          call 0x4004886	      2453	write.c	FUNCTION_33	CALL_87
0x4004886	      0xe800000000	                          call 0x400488b	      2459	write.c	FUNCTION_33	CALL_89
0x400488b	    0x8b0500000000	            mov eax, dword [0x04004891] 	      2463	write.c	FUNCTION_33	IF_26
0x4004891	            0x85c0	                           test eax, eax	      2463	write.c	FUNCTION_33	IF_26
0x4004893	            0x7435	                            je 0x40048ca	      2463	write.c	FUNCTION_33	IF_26
0x4004895	    0x488b15000000	            mov rdx, qword [0x0400489c] 	      2464	write.c	FUNCTION_33	IF_26
0x400489c	    0x488b05000000	            mov rax, qword [0x040048a3] 	      2464	write.c	FUNCTION_33	IF_26
0x40048a3	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2464	write.c	FUNCTION_33	IF_26
0x40048a6	          0xc1e805	                              shr eax, 5	      2464	write.c	FUNCTION_33	IF_26
0x40048a9	      0x25ffff0f00	                        and eax, 0xfffff	      2464	write.c	FUNCTION_33	IF_26
0x40048ae	       0xd00000c00	                         or eax, 0xc0000	      2464	write.c	FUNCTION_33	IF_26
0x40048b3	      0x25ffff0f00	                        and eax, 0xfffff	      2464	write.c	FUNCTION_33	IF_26
0x40048b8	          0xc1e005	                              shl eax, 5	      2464	write.c	FUNCTION_33	IF_26
0x40048bb	            0x89c1	                            mov ecx, eax	      2464	write.c	FUNCTION_33	IF_26
0x40048bd	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      2464	write.c	FUNCTION_33	IF_26
0x40048c0	      0x251f0000fe	                     and eax, 0xfe00001f	      2464	write.c	FUNCTION_33	IF_26
0x40048c5	             0x9c8	                             or eax, ecx	      2464	write.c	FUNCTION_33	IF_26
0x40048c7	          0x894244	             mov dword [rdx + 0x44], eax	      2464	write.c	FUNCTION_33	IF_26
0x40048ca	    0x8b0500000000	            mov eax, dword [0x040048d0] 	      2471	write.c	FUNCTION_33	IF_27
0x40048d0	            0x85c0	                           test eax, eax	      2471	write.c	FUNCTION_33	IF_27
0x40048d2	     0xf848e000000	                            je 0x4004966	      2471	write.c	FUNCTION_33	IF_27
0x40048d8	    0x8b0500000000	            mov eax, dword [0x040048de] 	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x40048de	          0x83f805	                              cmp eax, 5	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x40048e1	            0x7537	                           jne 0x400491a	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x40048e3	    0x488b15000000	            mov rdx, qword [0x040048ea] 	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x40048ea	    0x488b05000000	            mov rax, qword [0x040048f1] 	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x40048f1	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x40048f4	          0xc1e805	                              shr eax, 5	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x40048f7	      0x25ffff0f00	                        and eax, 0xfffff	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x40048fc	       0xd00400200	                         or eax, 0x24000	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4004901	      0x25ffff0f00	                        and eax, 0xfffff	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4004906	          0xc1e005	                              shl eax, 5	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4004909	            0x89c1	                            mov ecx, eax	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x400490b	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x400490e	      0x251f0000fe	                     and eax, 0xfe00001f	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4004913	             0x9c8	                             or eax, ecx	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4004915	          0x894244	             mov dword [rdx + 0x44], eax	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4004918	            0xeb33	                           jmp 0x400494d	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x400491a	    0x488b15000000	            mov rdx, qword [0x04004921] 	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4004921	    0x488b05000000	            mov rax, qword [0x04004928] 	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4004928	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x400492b	          0xc1e805	                              shr eax, 5	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x400492e	      0x25ffff0f00	                        and eax, 0xfffff	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4004933	          0x80cc40	                             or ah, 0x40	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4004936	      0x25ffff0f00	                        and eax, 0xfffff	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x400493b	          0xc1e005	                              shl eax, 5	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x400493e	            0x89c1	                            mov ecx, eax	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4004940	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4004943	      0x251f0000fe	                     and eax, 0xfe00001f	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4004948	             0x9c8	                             or eax, ecx	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x400494a	          0x894244	             mov dword [rdx + 0x44], eax	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x400494d	    0x488b05000000	            mov rax, qword [0x04004954] 	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4004954	      0xba00000000	                              mov edx, 0	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4004959	      0xbe00000000	                              mov esi, 0	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x400495e	          0x4889c7	                            mov rdi, rax	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4004961	      0xe800000000	                          call 0x4004966	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4004966	    0x488b05000000	            mov rax, qword [0x0400496d] 	      2480	write.c	FUNCTION_33	CALL_91
0x400496d	      0xba00000000	                              mov edx, 0	      2480	write.c	FUNCTION_33	CALL_91
0x4004972	      0xbe00000000	                              mov esi, 0	      2480	write.c	FUNCTION_33	CALL_91
0x4004977	          0x4889c7	                            mov rdi, rax	      2480	write.c	FUNCTION_33	CALL_91
0x400497a	      0xe800000000	                          call 0x400497f	      2480	write.c	FUNCTION_33	CALL_91
0x400497f	            0xeb01	                           jmp 0x4004982	      2480	write.c	FUNCTION_33	CALL_91
0x4004981	              0x90	                                     nop	      2433	write.c	FUNCTION_33	IF_25
0x4004982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2481	write.c	FUNCTION_33
0x4004986	    0x644833042528	                xor rax, qword fs:[0x28]	      2481	write.c	FUNCTION_33
0x400498f	            0x7405	                            je 0x4004996	      2481	write.c	FUNCTION_33
0x4004991	      0xe800000000	                          call 0x4004996	      2481	write.c	FUNCTION_33
0x4004996	    0x4881c4880000	                           add rsp, 0x88	      2481	write.c	FUNCTION_33
0x400499d	              0x5b	                                 pop rbx	      2481	write.c	FUNCTION_33
0x400499e	              0x5d	                                 pop rbp	      2481	write.c	FUNCTION_33
0x400499f	              0xc3	                                     ret	      2481	write.c	FUNCTION_33
fix_new_internal	IF,4:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,2:CALL,8	241
0x4000060	              0x55	                                push rbp	       154	write.c	FUNCTION_1
0x4000061	          0x4889e5	                            mov rbp, rsp	       154	write.c	FUNCTION_1
0x4000064	        0x4883c480	             add rsp, 0xffffffffffffff80	       154	write.c	FUNCTION_1
0x4000068	        0x48897da8	             mov qword [rbp - 0x58], rdi	       154	write.c	FUNCTION_1
0x400006c	          0x8975a4	             mov dword [rbp - 0x5c], esi	       154	write.c	FUNCTION_1
0x400006f	          0x8955a0	             mov dword [rbp - 0x60], edx	       154	write.c	FUNCTION_1
0x4000072	        0x48894d98	             mov qword [rbp - 0x68], rcx	       154	write.c	FUNCTION_1
0x4000076	        0x4c894590	              mov qword [rbp - 0x70], r8	       154	write.c	FUNCTION_1
0x400007a	        0x4c894d88	              mov qword [rbp - 0x78], r9	       154	write.c	FUNCTION_1
0x400007e	    0x8b0500000000	            mov eax, dword [0x04000084] 	       157	write.c	FUNCTION_1
0x4000084	          0x83c001	                              add eax, 1	       157	write.c	FUNCTION_1
0x4000087	    0x890500000000	            mov dword [0x0400008d], eax 	       157	write.c	FUNCTION_1
0x400008d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       159	write.c	FUNCTION_1	CALL_1
0x4000095	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       159	write.c	FUNCTION_1	CALL_1
0x4000099	        0x488945c0	             mov qword [rbp - 0x40], rax	       159	write.c	FUNCTION_1	CALL_1
0x400009d	    0x48c745c87000	           mov qword [rbp - 0x38], 0x70 	       159	write.c	FUNCTION_1	CALL_1
0x40000a5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       159	write.c	FUNCTION_1	CALL_1
0x40000a9	        0x488945d0	             mov qword [rbp - 0x30], rax	       159	write.c	FUNCTION_1	CALL_1
0x40000ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       159	write.c	FUNCTION_1	CALL_1
0x40000b1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       159	write.c	FUNCTION_1	CALL_1
0x40000b5	          0x4889c2	                            mov rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x40000b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       159	write.c	FUNCTION_1	CALL_1
0x40000bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       159	write.c	FUNCTION_1	CALL_1
0x40000c0	          0x4829c2	                            sub rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x40000c3	          0x4889d0	                            mov rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000c6	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       159	write.c	FUNCTION_1	CALL_1
0x40000ca	            0x7313	                           jae 0x40000df	       159	write.c	FUNCTION_1	CALL_1
0x40000cc	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       159	write.c	FUNCTION_1	CALL_1
0x40000d0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       159	write.c	FUNCTION_1	CALL_1
0x40000d4	          0x4889d6	                            mov rsi, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000d7	          0x4889c7	                            mov rdi, rax	       159	write.c	FUNCTION_1	CALL_1
0x40000da	      0xe800000000	                          call 0x40000df	       159	write.c	FUNCTION_1	CALL_1
0x40000df	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       159	write.c	FUNCTION_1	CALL_1
0x40000e3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       159	write.c	FUNCTION_1	CALL_1
0x40000e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       159	write.c	FUNCTION_1	CALL_1
0x40000eb	          0x4801c2	                            add rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x40000ee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       159	write.c	FUNCTION_1	CALL_1
0x40000f2	        0x48895018	             mov qword [rax + 0x18], rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       159	write.c	FUNCTION_1	CALL_1
0x40000fa	        0x488945d8	             mov qword [rbp - 0x28], rax	       159	write.c	FUNCTION_1	CALL_1
0x40000fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000102	        0x488b4010	            mov rax, qword [rax + 0x10] 	       159	write.c	FUNCTION_1	CALL_1
0x4000106	        0x488945e0	             mov qword [rbp - 0x20], rax	       159	write.c	FUNCTION_1	CALL_1
0x400010a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x400010e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       159	write.c	FUNCTION_1	CALL_1
0x4000112	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       159	write.c	FUNCTION_1	CALL_1
0x4000116	            0x750e	                           jne 0x4000126	       159	write.c	FUNCTION_1	CALL_1
0x4000118	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x400011c	         0xfb65050	           movzx edx, byte [rax + 0x50] 	       159	write.c	FUNCTION_1	CALL_1
0x4000120	          0x83ca02	                               or edx, 2	       159	write.c	FUNCTION_1	CALL_1
0x4000123	          0x885050	               mov byte [rax + 0x50], dl	       159	write.c	FUNCTION_1	CALL_1
0x4000126	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x400012a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       159	write.c	FUNCTION_1	CALL_1
0x400012e	          0x4889c2	                            mov rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x4000131	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000135	        0x488b4030	            mov rax, qword [rax + 0x30] 	       159	write.c	FUNCTION_1	CALL_1
0x4000139	          0x4801c2	                            add rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x400013c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000140	        0x488b4030	            mov rax, qword [rax + 0x30] 	       159	write.c	FUNCTION_1	CALL_1
0x4000144	          0x48f7d0	                                 not rax	       159	write.c	FUNCTION_1	CALL_1
0x4000147	          0x4821d0	                            and rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x400014a	          0x4889c2	                            mov rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x400014d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000151	        0x48895018	             mov qword [rax + 0x18], rdx	       159	write.c	FUNCTION_1	CALL_1
0x4000155	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000159	        0x488b4018	            mov rax, qword [rax + 0x18] 	       159	write.c	FUNCTION_1	CALL_1
0x400015d	          0x4889c2	                            mov rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x4000160	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000164	        0x488b4008	                mov rax, qword [rax + 8]	       159	write.c	FUNCTION_1	CALL_1
0x4000168	          0x4829c2	                            sub rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x400016b	          0x4889d0	                            mov rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x400016e	          0x4889c2	                            mov rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x4000171	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000175	        0x488b4020	            mov rax, qword [rax + 0x20] 	       159	write.c	FUNCTION_1	CALL_1
0x4000179	          0x4889c1	                            mov rcx, rax	       159	write.c	FUNCTION_1	CALL_1
0x400017c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000180	        0x488b4008	                mov rax, qword [rax + 8]	       159	write.c	FUNCTION_1	CALL_1
0x4000184	          0x4829c1	                            sub rcx, rax	       159	write.c	FUNCTION_1	CALL_1
0x4000187	          0x4889c8	                            mov rax, rcx	       159	write.c	FUNCTION_1	CALL_1
0x400018a	          0x4839c2	                            cmp rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x400018d	            0x7610	                           jbe 0x400019f	       159	write.c	FUNCTION_1	CALL_1
0x400018f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x4000193	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       159	write.c	FUNCTION_1	CALL_1
0x4000197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x400019b	        0x48895018	             mov qword [rax + 0x18], rdx	       159	write.c	FUNCTION_1	CALL_1
0x400019f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x40001a3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       159	write.c	FUNCTION_1	CALL_1
0x40001a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	write.c	FUNCTION_1	CALL_1
0x40001ab	        0x48895010	             mov qword [rax + 0x10], rdx	       159	write.c	FUNCTION_1	CALL_1
0x40001af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       159	write.c	FUNCTION_1	CALL_1
0x40001b3	        0x488945e8	             mov qword [rbp - 0x18], rax	       159	write.c	FUNCTION_1	CALL_1
0x40001b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       161	write.c	FUNCTION_1
0x40001bb	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       161	write.c	FUNCTION_1
0x40001bf	        0x48895008	                mov qword [rax + 8], rdx	       161	write.c	FUNCTION_1
0x40001c3	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       162	write.c	FUNCTION_1
0x40001c6	          0x4863d0	                         movsxd rdx, eax	       162	write.c	FUNCTION_1
0x40001c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	write.c	FUNCTION_1
0x40001cd	        0x48895010	             mov qword [rax + 0x10], rdx	       162	write.c	FUNCTION_1
0x40001d1	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       163	write.c	FUNCTION_1
0x40001d4	            0x89c2	                            mov edx, eax	       163	write.c	FUNCTION_1
0x40001d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	write.c	FUNCTION_1
0x40001da	          0x885002	                  mov byte [rax + 2], dl	       163	write.c	FUNCTION_1
0x40001dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	write.c	FUNCTION_1	IF_1
0x40001e1	         0xfb64002	               movzx eax, byte [rax + 2]	       165	write.c	FUNCTION_1	IF_1
0x40001e5	           0xfb6c0	                           movzx eax, al	       165	write.c	FUNCTION_1	IF_1
0x40001e8	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       165	write.c	FUNCTION_1	IF_1
0x40001eb	            0x7433	                            je 0x4000220	       165	write.c	FUNCTION_1	IF_1
0x40001ed	      0xbf00000000	                              mov edi, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40001f2	      0xe800000000	                          call 0x40001f7	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40001f7	          0x4889c2	                            mov rdx, rax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40001fa	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40001fd	            0x89c6	                            mov esi, eax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40001ff	          0x4889d7	                            mov rdi, rdx	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000202	      0xb800000000	                              mov eax, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000207	      0xe800000000	                          call 0x400020c	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x400020c	      0xba00000000	                              mov edx, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x4000211	      0xbea8000000	                           mov esi, 0xa8	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x4000216	      0xbf00000000	                              mov edi, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x400021b	      0xe800000000	                          call 0x4000220	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x4000220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	write.c	FUNCTION_1
0x4000224	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       170	write.c	FUNCTION_1
0x4000228	        0x48895018	             mov qword [rax + 0x18], rdx	       170	write.c	FUNCTION_1
0x400022c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       171	write.c	FUNCTION_1
0x4000230	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       171	write.c	FUNCTION_1
0x4000234	        0x48895020	             mov qword [rax + 0x20], rdx	       171	write.c	FUNCTION_1
0x4000238	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       172	write.c	FUNCTION_1
0x400023c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       172	write.c	FUNCTION_1
0x4000240	        0x48895028	             mov qword [rax + 0x28], rdx	       172	write.c	FUNCTION_1
0x4000244	    0x488b15000000	            mov rdx, qword [0x0400024b] 	       173	write.c	FUNCTION_1
0x400024b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       173	write.c	FUNCTION_1
0x400024f	        0x48895030	             mov qword [rax + 0x30], rdx	       173	write.c	FUNCTION_1
0x4000253	    0x488b15000000	            mov rdx, qword [0x0400025a] 	       174	write.c	FUNCTION_1
0x400025a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	write.c	FUNCTION_1
0x400025e	        0x48895038	             mov qword [rax + 0x38], rdx	       174	write.c	FUNCTION_1
0x4000262	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       175	write.c	FUNCTION_1
0x4000265	          0x83e001	                              and eax, 1	       175	write.c	FUNCTION_1
0x4000268	            0x89c2	                            mov edx, eax	       175	write.c	FUNCTION_1
0x400026a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       175	write.c	FUNCTION_1
0x400026e	            0x89d1	                            mov ecx, edx	       175	write.c	FUNCTION_1
0x4000270	          0x83e101	                              and ecx, 1	       175	write.c	FUNCTION_1
0x4000273	           0xfb610	                   movzx edx, byte [rax]	       175	write.c	FUNCTION_1
0x4000276	          0x83e2fe	                     and edx, 0xfffffffe	       175	write.c	FUNCTION_1
0x4000279	             0x9ca	                             or edx, ecx	       175	write.c	FUNCTION_1
0x400027b	            0x8810	                      mov byte [rax], dl	       175	write.c	FUNCTION_1
0x400027d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       176	write.c	FUNCTION_1
0x4000281	          0x8b5518	            mov edx, dword [rbp + 0x18] 	       176	write.c	FUNCTION_1
0x4000284	          0x895050	             mov dword [rax + 0x50], edx	       176	write.c	FUNCTION_1
0x4000287	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	write.c	FUNCTION_1
0x400028b	           0xfb610	                   movzx edx, byte [rax]	       177	write.c	FUNCTION_1
0x400028e	          0x83e2f9	                     and edx, 0xfffffff9	       177	write.c	FUNCTION_1
0x4000291	            0x8810	                      mov byte [rax], dl	       177	write.c	FUNCTION_1
0x4000293	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       178	write.c	FUNCTION_1
0x4000297	        0xc6400100	                   mov byte [rax + 1], 0	       178	write.c	FUNCTION_1
0x400029b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	write.c	FUNCTION_1
0x400029f	    0x48c740480000	               mov qword [rax + 0x48], 0	       179	write.c	FUNCTION_1
0x40002a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	write.c	FUNCTION_1
0x40002ab	    0x48c740580000	               mov qword [rax + 0x58], 0	       180	write.c	FUNCTION_1
0x40002b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       181	write.c	FUNCTION_1
0x40002b7	           0xfb610	                   movzx edx, byte [rax]	       181	write.c	FUNCTION_1
0x40002ba	          0x83e2f7	                     and edx, 0xfffffff7	       181	write.c	FUNCTION_1
0x40002bd	            0x8810	                      mov byte [rax], dl	       181	write.c	FUNCTION_1
0x40002bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       182	write.c	FUNCTION_1
0x40002c3	           0xfb610	                   movzx edx, byte [rax]	       182	write.c	FUNCTION_1
0x40002c6	          0x83e2ef	                     and edx, 0xffffffef	       182	write.c	FUNCTION_1
0x40002c9	            0x8810	                      mov byte [rax], dl	       182	write.c	FUNCTION_1
0x40002cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	write.c	FUNCTION_1
0x40002cf	           0xfb610	                   movzx edx, byte [rax]	       183	write.c	FUNCTION_1
0x40002d2	          0x83e2df	                     and edx, 0xffffffdf	       183	write.c	FUNCTION_1
0x40002d5	            0x8810	                      mov byte [rax], dl	       183	write.c	FUNCTION_1
0x40002d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       184	write.c	FUNCTION_1
0x40002db	           0xfb610	                   movzx edx, byte [rax]	       184	write.c	FUNCTION_1
0x40002de	          0x83e2bf	                     and edx, 0xffffffbf	       184	write.c	FUNCTION_1
0x40002e1	            0x8810	                      mov byte [rax], dl	       184	write.c	FUNCTION_1
0x40002e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	write.c	FUNCTION_1
0x40002e7	           0xfb610	                   movzx edx, byte [rax]	       185	write.c	FUNCTION_1
0x40002ea	          0x83e27f	                           and edx, 0x7f	       185	write.c	FUNCTION_1
0x40002ed	            0x8810	                      mov byte [rax], dl	       185	write.c	FUNCTION_1
0x40002ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       196	write.c	FUNCTION_1	CALL_6
0x40002f3	        0x4883c068	                           add rax, 0x68	       196	write.c	FUNCTION_1	CALL_6
0x40002f7	          0x4889c7	                            mov rdi, rax	       196	write.c	FUNCTION_1	CALL_6
0x40002fa	      0xe800000000	                          call 0x40002ff	       196	write.c	FUNCTION_1	CALL_6
0x40002ff	          0x4889c2	                            mov rdx, rax	       196	write.c	FUNCTION_1	CALL_6
0x4000302	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       196	write.c	FUNCTION_1	CALL_6
0x4000306	        0x48895060	             mov qword [rax + 0x60], rdx	       196	write.c	FUNCTION_1	CALL_6
0x400030a	    0x8b0500000000	            mov eax, dword [0x04000310] 	       201	write.c	FUNCTION_1	CALL_7
0x4000310	            0x85c0	                           test eax, eax	       202	write.c	FUNCTION_1
0x4000312	            0x7414	                            je 0x4000328	       202	write.c	FUNCTION_1
0x4000314	    0x488b05000000	            mov rax, qword [0x0400031b] 	       201	write.c	FUNCTION_1	CALL_7
0x400031b	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       201	write.c	FUNCTION_1	CALL_7
0x4000322	        0x4883c010	                           add rax, 0x10	       202	write.c	FUNCTION_1
0x4000326	            0xeb0b	                           jmp 0x4000333	       202	write.c	FUNCTION_1
0x4000328	    0x488b05000000	            mov rax, qword [0x0400032f] 	       202	write.c	FUNCTION_1
0x400032f	        0x4883c020	                           add rax, 0x20	       202	write.c	FUNCTION_1
0x4000333	        0x488945f0	             mov qword [rbp - 0x10], rax	       200	write.c	FUNCTION_1
0x4000337	    0x8b0500000000	            mov eax, dword [0x0400033d] 	       204	write.c	FUNCTION_1	CALL_8
0x400033d	            0x85c0	                           test eax, eax	       205	write.c	FUNCTION_1
0x400033f	            0x7414	                            je 0x4000355	       205	write.c	FUNCTION_1
0x4000341	    0x488b05000000	            mov rax, qword [0x04000348] 	       204	write.c	FUNCTION_1	CALL_8
0x4000348	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       204	write.c	FUNCTION_1	CALL_8
0x400034f	        0x4883c018	                           add rax, 0x18	       205	write.c	FUNCTION_1
0x4000353	            0xeb0b	                           jmp 0x4000360	       205	write.c	FUNCTION_1
0x4000355	    0x488b05000000	            mov rax, qword [0x0400035c] 	       205	write.c	FUNCTION_1
0x400035c	        0x4883c028	                           add rax, 0x28	       205	write.c	FUNCTION_1
0x4000360	        0x488945f8	                mov qword [rbp - 8], rax	       203	write.c	FUNCTION_1
0x4000364	        0x837d2000	               cmp dword [rbp + 0x20], 0	       207	write.c	FUNCTION_1	IF_2
0x4000368	            0x7434	                            je 0x400039e	       207	write.c	FUNCTION_1	IF_2
0x400036a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       209	write.c	FUNCTION_1	IF_2
0x400036e	          0x488b10	                    mov rdx, qword [rax]	       209	write.c	FUNCTION_1	IF_2
0x4000371	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       209	write.c	FUNCTION_1	IF_2
0x4000375	        0x48895040	             mov qword [rax + 0x40], rdx	       209	write.c	FUNCTION_1	IF_2
0x4000379	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       210	write.c	FUNCTION_1	IF_2
0x400037d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       210	write.c	FUNCTION_1	IF_2
0x4000381	          0x488910	                    mov qword [rax], rdx	       210	write.c	FUNCTION_1	IF_2
0x4000384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	write.c	FUNCTION_1	IF_2	IF_3
0x4000388	        0x488b4040	            mov rax, qword [rax + 0x40] 	       211	write.c	FUNCTION_1	IF_2	IF_3
0x400038c	          0x4885c0	                           test rax, rax	       211	write.c	FUNCTION_1	IF_2	IF_3
0x400038f	            0x754c	                           jne 0x40003dd	       211	write.c	FUNCTION_1	IF_2	IF_3
0x4000391	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	write.c	FUNCTION_1	IF_2	IF_3
0x4000395	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       212	write.c	FUNCTION_1	IF_2	IF_3
0x4000399	          0x488910	                    mov qword [rax], rdx	       212	write.c	FUNCTION_1	IF_2	IF_3
0x400039c	            0xeb3f	                           jmp 0x40003dd	       212	write.c	FUNCTION_1	IF_2	IF_3
0x400039e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	write.c	FUNCTION_1	ELSE_1
0x40003a2	    0x48c740400000	               mov qword [rax + 0x40], 0	       216	write.c	FUNCTION_1	ELSE_1
0x40003aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003ae	          0x488b00	                    mov rax, qword [rax]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003b1	          0x4885c0	                           test rax, rax	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003b4	            0x7411	                            je 0x40003c7	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003ba	          0x488b00	                    mov rax, qword [rax]	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003bd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003c1	        0x48895040	             mov qword [rax + 0x40], rdx	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003c5	            0xeb0b	                           jmp 0x40003d2	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x40003c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x40003cb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x40003cf	          0x488910	                    mov qword [rax], rdx	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x40003d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x40003d6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       221	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x40003da	          0x488910	                    mov qword [rax], rdx	       221	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x40003dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       225	write.c	FUNCTION_1	ELSE_2
0x40003e1	              0xc9	                                   leave	       226	write.c	FUNCTION_1	ELSE_2
0x40003e2	              0xc3	                                     ret	       226	write.c	FUNCTION_1	ELSE_2
record_alignment	IF,2:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	21
0x40006bf	              0x55	                                push rbp	       360	write.c	FUNCTION_7
0x40006c0	          0x4889e5	                            mov rbp, rsp	       360	write.c	FUNCTION_7
0x40006c3	        0x4883ec10	                           sub rsp, 0x10	       360	write.c	FUNCTION_7
0x40006c7	        0x48897df8	                mov qword [rbp - 8], rdi	       360	write.c	FUNCTION_7
0x40006cb	          0x8975f4	              mov dword [rbp - 0xc], esi	       360	write.c	FUNCTION_7
0x40006ce	    0x48817df80000	                  cmp qword [rbp - 8], 0	       361	write.c	FUNCTION_7	IF_1
0x40006d6	            0x7427	                            je 0x40006ff	       361	write.c	FUNCTION_7	IF_1
0x40006d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	write.c	FUNCTION_7	IF_2
0x40006dc	          0x8b4070	            mov eax, dword [rax + 0x70] 	       364	write.c	FUNCTION_7	IF_2
0x40006df	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       364	write.c	FUNCTION_7	IF_2
0x40006e2	            0x731c	                           jae 0x4000700	       364	write.c	FUNCTION_7	IF_2
0x40006e4	    0x488b05000000	            mov rax, qword [0x040006eb] 	       365	write.c	FUNCTION_7	CALL_1
0x40006eb	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       365	write.c	FUNCTION_7	CALL_1
0x40006ee	        0x488b4df8	                mov rcx, qword [rbp - 8]	       365	write.c	FUNCTION_7	CALL_1
0x40006f2	          0x4889ce	                            mov rsi, rcx	       365	write.c	FUNCTION_7	CALL_1
0x40006f5	          0x4889c7	                            mov rdi, rax	       365	write.c	FUNCTION_7	CALL_1
0x40006f8	      0xe843f9ffff	      call sym.bfd_set_section_alignment	       365	write.c	FUNCTION_7	CALL_1
0x40006fd	            0xeb01	                           jmp 0x4000700	       365	write.c	FUNCTION_7	CALL_1
0x40006ff	              0x90	                                     nop	       362	write.c	FUNCTION_7	IF_1
0x4000700	              0xc9	                                   leave	       366	write.c	FUNCTION_7
0x4000701	              0xc3	                                     ret	       366	write.c	FUNCTION_7
fix_at_start	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	27
0x40005b0	              0x55	                                push rbp	       318	write.c	FUNCTION_4
0x40005b1	          0x4889e5	                            mov rbp, rsp	       318	write.c	FUNCTION_4
0x40005b4	        0x4883ec30	                           sub rsp, 0x30	       318	write.c	FUNCTION_4
0x40005b8	        0x48897df8	                mov qword [rbp - 8], rdi	       318	write.c	FUNCTION_4
0x40005bc	          0x8975f4	              mov dword [rbp - 0xc], esi	       318	write.c	FUNCTION_4
0x40005bf	        0x488955e8	             mov qword [rbp - 0x18], rdx	       318	write.c	FUNCTION_4
0x40005c3	        0x48894de0	             mov qword [rbp - 0x20], rcx	       318	write.c	FUNCTION_4
0x40005c7	        0x448945f0	             mov dword [rbp - 0x10], r8d	       318	write.c	FUNCTION_4
0x40005cb	        0x44894ddc	             mov dword [rbp - 0x24], r9d	       318	write.c	FUNCTION_4
0x40005cf	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       319	write.c	FUNCTION_4	CALL_1
0x40005d3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       319	write.c	FUNCTION_4	CALL_1
0x40005d7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       319	write.c	FUNCTION_4	CALL_1
0x40005da	        0x488b45f8	                mov rax, qword [rbp - 8]	       319	write.c	FUNCTION_4	CALL_1
0x40005de	        0x4883ec08	                              sub rsp, 8	       319	write.c	FUNCTION_4	CALL_1
0x40005e2	            0x6a01	                                  push 1	       319	write.c	FUNCTION_4	CALL_1
0x40005e4	          0x8b75dc	             mov esi, dword [rbp - 0x24]	       319	write.c	FUNCTION_4	CALL_1
0x40005e7	              0x56	                                push rsi	       319	write.c	FUNCTION_4	CALL_1
0x40005e8	          0x8b75f0	             mov esi, dword [rbp - 0x10]	       319	write.c	FUNCTION_4	CALL_1
0x40005eb	              0x56	                                push rsi	       319	write.c	FUNCTION_4	CALL_1
0x40005ec	          0x4989f9	                             mov r9, rdi	       319	write.c	FUNCTION_4	CALL_1
0x40005ef	    0x41b800000000	                              mov r8d, 0	       319	write.c	FUNCTION_4	CALL_1
0x40005f5	      0xbe00000000	                              mov esi, 0	       319	write.c	FUNCTION_4	CALL_1
0x40005fa	          0x4889c7	                            mov rdi, rax	       319	write.c	FUNCTION_4	CALL_1
0x40005fd	      0xe85efaffff	               call sym.fix_new_internal	       319	write.c	FUNCTION_4	CALL_1
0x4000602	        0x4883c420	                           add rsp, 0x20	       319	write.c	FUNCTION_4	CALL_1
0x4000606	              0xc9	                                   leave	       321	write.c	FUNCTION_4
0x4000607	              0xc3	                                     ret	       321	write.c	FUNCTION_4
subsegs_finish	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,1:DO,0:ELSE,0:CALL,1	18
0x4003b9b	              0x55	                                push rbp	      1853	write.c	FUNCTION_29
0x4003b9c	          0x4889e5	                            mov rbp, rsp	      1853	write.c	FUNCTION_29
0x4003b9f	        0x4883ec10	                           sub rsp, 0x10	      1853	write.c	FUNCTION_29
0x4003ba3	    0x488b05000000	            mov rax, qword [0x04003baa] 	      1856	write.c	FUNCTION_29	FOR_1
0x4003baa	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1856	write.c	FUNCTION_29	FOR_1
0x4003bb1	        0x488945f8	                mov qword [rbp - 8], rax	      1856	write.c	FUNCTION_29	FOR_1
0x4003bb5	            0xeb18	                           jmp 0x4003bcf	      1856	write.c	FUNCTION_29	FOR_1
0x4003bb7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1857	write.c	FUNCTION_29	CALL_1
0x4003bbb	          0x4889c7	                            mov rdi, rax	      1857	write.c	FUNCTION_29	CALL_1
0x4003bbe	      0xe881feffff	         call sym.subsegs_finish_section	      1857	write.c	FUNCTION_29	CALL_1
0x4003bc3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1856	write.c	FUNCTION_29	FOR_1
0x4003bc7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1856	write.c	FUNCTION_29	FOR_1
0x4003bcb	        0x488945f8	                mov qword [rbp - 8], rax	      1856	write.c	FUNCTION_29	FOR_1
0x4003bcf	      0x48837df800	                  cmp qword [rbp - 8], 0	      1856	write.c	FUNCTION_29	FOR_1
0x4003bd4	            0x75e1	                           jne 0x4003bb7	      1856	write.c	FUNCTION_29	FOR_1
0x4003bd6	              0x90	                                     nop	      1858	write.c	FUNCTION_29
0x4003bd7	              0xc9	                                   leave	      1858	write.c	FUNCTION_29
0x4003bd8	              0xc3	                                     ret	      1858	write.c	FUNCTION_29
set_symtab	IF,2:SWITCH,0:WHILE,0:functions,0:FOR,2:DO,0:ELSE,1:CALL,7	148
0x40037fb	              0x55	                                push rbp	      1738	write.c	FUNCTION_27
0x40037fc	          0x4889e5	                            mov rbp, rsp	      1738	write.c	FUNCTION_27
0x40037ff	              0x53	                                push rbx	      1738	write.c	FUNCTION_27
0x4003800	        0x4883ec38	                           sub rsp, 0x38	      1738	write.c	FUNCTION_27
0x4003804	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1747	write.c	FUNCTION_27
0x400380b	    0x488b05000000	            mov rax, qword [0x04003812] 	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003812	        0x488945e0	             mov qword [rbp - 0x20], rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003816	            0xeb14	                           jmp 0x400382c	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003818	        0x8345cc01	               add dword [rbp - 0x34], 1	      1749	write.c	FUNCTION_27	FOR_1
0x400381c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003820	          0x4889c7	                            mov rdi, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003823	      0xe800000000	                          call 0x4003828	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003828	        0x488945e0	             mov qword [rbp - 0x20], rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x400382c	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003831	            0x75e5	                           jne 0x4003818	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003833	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1751	write.c	FUNCTION_27	IF_1
0x4003837	     0xf84b7010000	                            je 0x40039f4	      1751	write.c	FUNCTION_27	IF_1
0x400383d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1754	write.c	FUNCTION_27	IF_1
0x4003840	            0x4898	                                    cdqe	      1754	write.c	FUNCTION_27	IF_1
0x4003842	        0x48c1e003	                              shl rax, 3	      1754	write.c	FUNCTION_27	IF_1
0x4003846	        0x488945e8	             mov qword [rbp - 0x18], rax	      1754	write.c	FUNCTION_27	IF_1
0x400384a	    0x488b05000000	            mov rax, qword [0x04003851] 	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003851	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003855	          0x4889d6	                            mov rsi, rdx	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003858	          0x4889c7	                            mov rdi, rax	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x400385b	      0xe800000000	                          call 0x4003860	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003860	        0x488945d8	             mov qword [rbp - 0x28], rax	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003864	    0x488b05000000	            mov rax, qword [0x0400386b] 	      1757	write.c	FUNCTION_27	IF_1
0x400386b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1757	write.c	FUNCTION_27	IF_1
0x400386f	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003876	      0xe96b010000	                           jmp 0x40039e6	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x400387b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x400387e	            0x4898	                                    cdqe	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003880	    0x488d14c50000	                        lea rdx, [rax*8]	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003888	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x400388c	        0x488d1c02	                    lea rbx, [rdx + rax]	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003890	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003894	          0x4889c7	                            mov rdi, rax	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003897	      0xe800000000	                          call 0x400389c	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x400389c	          0x488903	                    mov qword [rbx], rax	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x400389f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038a2	            0x4898	                                    cdqe	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038a4	    0x488d14c50000	                        lea rdx, [rax*8]	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038b0	          0x4801d0	                            add rax, rdx	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038b3	          0x488b00	                    mov rax, qword [rax]	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038b6	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038b9	      0x3d00010000	                          cmp eax, 0x100	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038be	     0xf85ca000000	                           jne 0x400398e	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038c4	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038c7	            0x4898	                                    cdqe	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038c9	    0x488d14c50000	                        lea rdx, [rax*8]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038d5	          0x4801d0	                            add rax, rdx	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038d8	          0x488b00	                    mov rax, qword [rax]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038db	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038df	    0x483d00000000	                              cmp rax, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038e5	            0x7469	                            je 0x4003950	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038e7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038ea	            0x4898	                                    cdqe	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038ec	    0x488d14c50000	                        lea rdx, [rax*8]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038f8	          0x4801d0	                            add rax, rdx	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038fb	          0x488b00	                    mov rax, qword [rax]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038fe	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003902	    0x483d00000000	                              cmp rax, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003908	            0x7446	                            je 0x4003950	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400390a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400390d	            0x4898	                                    cdqe	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400390f	    0x488d14c50000	                        lea rdx, [rax*8]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003917	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400391b	          0x4801d0	                            add rax, rdx	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400391e	          0x488b00	                    mov rax, qword [rax]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003921	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003925	    0x483d00000000	                              cmp rax, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400392b	            0x7423	                            je 0x4003950	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400392d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003930	            0x4898	                                    cdqe	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003932	    0x488d14c50000	                        lea rdx, [rax*8]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400393a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400393e	          0x4801d0	                            add rax, rdx	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003941	          0x488b00	                    mov rax, qword [rax]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003944	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003948	    0x483d00000000	                              cmp rax, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400394e	            0x753e	                           jne 0x400398e	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003950	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003953	            0x4898	                                    cdqe	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003955	    0x488d14c50000	                        lea rdx, [rax*8]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400395d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003961	          0x4801d0	                            add rax, rdx	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003964	          0x488b00	                    mov rax, qword [rax]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003967	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400396b	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003972	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003975	            0x4898	                                    cdqe	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003977	    0x488d0cc50000	                        lea rcx, [rax*8]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400397f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003983	          0x4801c8	                            add rax, rcx	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003986	          0x488b00	                    mov rax, qword [rax]	      1763	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003989	          0x4839c2	                            cmp rdx, rax	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400398c	            0x7438	                            je 0x40039c6	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400398e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003991	            0x4898	                                    cdqe	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003993	    0x488d14c50000	                        lea rdx, [rax*8]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400399b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400399f	          0x4801d0	                            add rax, rdx	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039a2	          0x488b00	                    mov rax, qword [rax]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039a5	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039a8	          0x4863d2	                         movsxd rdx, edx	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039ab	    0x488d0cd50000	                        lea rcx, [rdx*8]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039b3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039b7	          0x4801ca	                            add rdx, rcx	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039ba	          0x488b12	                    mov rdx, qword [rdx]	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039bd	          0x8b5218	            mov edx, dword [rdx + 0x18] 	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039c0	          0x83ca20	                            or edx, 0x20	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039c3	          0x895018	             mov dword [rax + 0x18], edx	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40039c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x40039ca	          0x4889c7	                            mov rdi, rax	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x40039cd	      0xe800000000	                          call 0x40039d2	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x40039d2	        0x8345d001	               add dword [rbp - 0x30], 1	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039da	          0x4889c7	                            mov rdi, rax	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039dd	      0xe800000000	                          call 0x40039e2	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039e2	        0x488945e0	             mov qword [rbp - 0x20], rax	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039e6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039e9	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039ec	     0xf8c89feffff	                            jl 0x400387b	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039f2	            0xeb08	                           jmp 0x40039fc	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40039f4	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1769	write.c	FUNCTION_27	ELSE_1
0x40039fc	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1770	write.c	FUNCTION_27	CALL_6
0x40039ff	    0x488b05000000	            mov rax, qword [0x04003a06] 	      1770	write.c	FUNCTION_27	CALL_6
0x4003a06	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1770	write.c	FUNCTION_27	CALL_6
0x4003a0a	          0x4889ce	                            mov rsi, rcx	      1770	write.c	FUNCTION_27	CALL_6
0x4003a0d	          0x4889c7	                            mov rdi, rax	      1770	write.c	FUNCTION_27	CALL_6
0x4003a10	      0xe800000000	                          call 0x4003a15	      1770	write.c	FUNCTION_27	CALL_6
0x4003a15	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1770	write.c	FUNCTION_27	CALL_6
0x4003a18	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1771	write.c	FUNCTION_27	CALL_7
0x4003a1c	            0x7514	                           jne 0x4003a32	      1771	write.c	FUNCTION_27	CALL_7
0x4003a1e	      0xba00000000	                              mov edx, 0	      1771	write.c	FUNCTION_27	CALL_7
0x4003a23	      0xbeeb060000	                          mov esi, 0x6eb	      1771	write.c	FUNCTION_27	CALL_7
0x4003a28	      0xbf00000000	                              mov edi, 0	      1771	write.c	FUNCTION_27	CALL_7
0x4003a2d	      0xe800000000	                          call 0x4003a32	      1771	write.c	FUNCTION_27	CALL_7
0x4003a32	    0xc70500000000	               mov dword [0x04003a3c], 1	      1772	write.c	FUNCTION_27
0x4003a3c	              0x90	                                     nop	      1773	write.c	FUNCTION_27
0x4003a3d	        0x4883c438	                           add rsp, 0x38	      1773	write.c	FUNCTION_27
0x4003a41	              0x5b	                                 pop rbx	      1773	write.c	FUNCTION_27
0x4003a42	              0x5d	                                 pop rbp	      1773	write.c	FUNCTION_27
0x4003a43	              0xc3	                                     ret	      1773	write.c	FUNCTION_27
get_recorded_alignment	IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,0	11
0x4000702	              0x55	                                push rbp	       370	write.c	FUNCTION_8
0x4000703	          0x4889e5	                            mov rbp, rsp	       370	write.c	FUNCTION_8
0x4000706	        0x48897df8	                mov qword [rbp - 8], rdi	       370	write.c	FUNCTION_8
0x400070a	    0x48817df80000	                  cmp qword [rbp - 8], 0	       371	write.c	FUNCTION_8	IF_1
0x4000712	            0x7507	                           jne 0x400071b	       371	write.c	FUNCTION_8	IF_1
0x4000714	      0xb800000000	                              mov eax, 0	       372	write.c	FUNCTION_8	IF_1
0x4000719	            0xeb07	                           jmp 0x4000722	       372	write.c	FUNCTION_8	IF_1
0x400071b	        0x488b45f8	                mov rax, qword [rbp - 8]	       374	write.c	FUNCTION_8
0x400071f	          0x8b4070	            mov eax, dword [rax + 0x70] 	       374	write.c	FUNCTION_8
0x4000722	              0x5d	                                 pop rbp	       375	write.c	FUNCTION_8
0x4000723	              0xc3	                                     ret	       375	write.c	FUNCTION_8
write_print_statistics	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	13
0x40059c5	              0x55	                                push rbp	      3128	write.c	FUNCTION_39
0x40059c6	          0x4889e5	                            mov rbp, rsp	      3128	write.c	FUNCTION_39
0x40059c9	        0x4883ec10	                           sub rsp, 0x10	      3128	write.c	FUNCTION_39
0x40059cd	        0x48897df8	                mov qword [rbp - 8], rdi	      3128	write.c	FUNCTION_39
0x40059d1	    0x8b1500000000	            mov edx, dword [0x040059d7] 	      3129	write.c	FUNCTION_39	CALL_1
0x40059d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3129	write.c	FUNCTION_39	CALL_1
0x40059db	      0xbe00000000	                              mov esi, 0	      3129	write.c	FUNCTION_39	CALL_1
0x40059e0	          0x4889c7	                            mov rdi, rax	      3129	write.c	FUNCTION_39	CALL_1
0x40059e3	      0xb800000000	                              mov eax, 0	      3129	write.c	FUNCTION_39	CALL_1
0x40059e8	      0xe800000000	                          call 0x40059ed	      3129	write.c	FUNCTION_39	CALL_1
0x40059ed	              0x90	                                     nop	      3130	write.c	FUNCTION_39
0x40059ee	              0xc9	                                   leave	      3130	write.c	FUNCTION_39
0x40059ef	              0xc3	                                     ret	      3130	write.c	FUNCTION_39
adjust_reloc_syms	IF,15:SWITCH,0:WHILE,1:functions,0:FOR,1:DO,0:ELSE,1:CALL,25	205
0x4001331	              0x55	                                push rbp	       783	write.c	FUNCTION_16
0x4001332	          0x4889e5	                            mov rbp, rsp	       783	write.c	FUNCTION_16
0x4001335	        0x4883ec50	                           sub rsp, 0x50	       783	write.c	FUNCTION_16
0x4001339	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       783	write.c	FUNCTION_16
0x400133d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       783	write.c	FUNCTION_16
0x4001341	        0x488955b8	             mov qword [rbp - 0x48], rdx	       783	write.c	FUNCTION_16
0x4001345	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       784	write.c	FUNCTION_16	CALL_1
0x4001349	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       784	write.c	FUNCTION_16	CALL_1
0x4001350	        0x488945e8	             mov qword [rbp - 0x18], rax	       784	write.c	FUNCTION_16	CALL_1
0x4001354	      0x48837de800	               cmp qword [rbp - 0x18], 0	       787	write.c	FUNCTION_16	IF_1
0x4001359	     0xf84b7020000	                            je 0x4001616	       787	write.c	FUNCTION_16	IF_1
0x400135f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       792	write.c	FUNCTION_16	FOR_1
0x4001363	        0x488b4010	            mov rax, qword [rax + 0x10] 	       792	write.c	FUNCTION_16	FOR_1
0x4001367	        0x488945d8	             mov qword [rbp - 0x28], rax	       792	write.c	FUNCTION_16	FOR_1
0x400136b	      0xe999020000	                           jmp 0x4001609	       792	write.c	FUNCTION_16	FOR_1
0x4001370	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x4001374	           0xfb600	                   movzx eax, byte [rax]	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x4001377	          0x83e020	                           and eax, 0x20	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x400137a	            0x84c0	                             test al, al	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x400137c	     0xf857b020000	                           jne 0x40015fd	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x4001382	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x4001386	        0x488b4018	            mov rax, qword [rax + 0x18] 	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x400138a	          0x4885c0	                           test rax, rax	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x400138d	     0xf846a020000	                            je 0x40015fd	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x4001393	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       806	write.c	FUNCTION_16	ELSE_1	IF_3
0x4001397	        0x488b4018	            mov rax, qword [rax + 0x18] 	       806	write.c	FUNCTION_16	ELSE_1	IF_3
0x400139b	        0x488945e0	             mov qword [rbp - 0x20], rax	       806	write.c	FUNCTION_16	ELSE_1	IF_3
0x400139f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40013a3	          0x4889c7	                            mov rdi, rax	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40013a6	      0xe800000000	                          call 0x40013ab	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40013ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40013af	        0x488b4020	            mov rax, qword [rax + 0x20] 	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40013b3	          0x4885c0	                           test rax, rax	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40013b6	            0x7466	                            je 0x400141e	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40013b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_5
0x40013bc	        0x488b4020	            mov rax, qword [rax + 0x20] 	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_5
0x40013c0	          0x4889c7	                            mov rdi, rax	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_5
0x40013c3	      0xe800000000	                          call 0x40013c8	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_5
0x40013c8	            0xeb54	                           jmp 0x400141e	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x40013ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40013ce	          0x4889c7	                            mov rdi, rax	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40013d1	      0xe800000000	                          call 0x40013d6	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40013d6	          0x488b00	                    mov rax, qword [rax]	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40013d9	        0x488945f0	             mov qword [rbp - 0x10], rax	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40013dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x40013e1	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x40013e5	            0x7459	                            je 0x4001440	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x40013e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x40013eb	          0x4889c7	                            mov rdi, rax	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x40013ee	      0xe800000000	                          call 0x40013f3	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x40013f3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x40013f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x40013fb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x40013ff	          0x4801c2	                            add rdx, rax	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x4001402	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x4001406	        0x48895028	             mov qword [rax + 0x28], rdx	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_9
0x400140a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x400140e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001412	        0x48895018	             mov qword [rax + 0x18], rdx	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001416	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       827	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x400141a	        0x488945e0	             mov qword [rbp - 0x20], rax	       827	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x400141e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4001422	          0x4889c7	                            mov rdi, rax	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4001425	      0xe800000000	                          call 0x400142a	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x400142a	            0x85c0	                           test eax, eax	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x400142c	            0x759c	                           jne 0x40013ca	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x400142e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4001432	          0x4889c7	                            mov rdi, rax	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4001435	      0xe800000000	                          call 0x400143a	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x400143a	            0x85c0	                           test eax, eax	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x400143c	            0x758c	                           jne 0x40013ca	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x400143e	            0xeb01	                           jmp 0x4001441	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4001440	              0x90	                                     nop	       824	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x4001441	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4001445	          0x4889c7	                            mov rdi, rax	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4001448	      0xe800000000	                          call 0x400144d	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x400144d	            0x85c0	                           test eax, eax	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x400144f	            0x743e	                            je 0x400148f	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4001451	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4001455	          0x4889c7	                            mov rdi, rax	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4001458	      0xe800000000	                          call 0x400145d	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x400145d	          0x4889c2	                            mov rdx, rax	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4001460	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4001464	        0x488b4028	            mov rax, qword [rax + 0x28] 	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4001468	          0x4801c2	                            add rdx, rax	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x400146b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x400146f	        0x48895028	             mov qword [rax + 0x28], rdx	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4001473	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_12
0x4001477	          0x4889c7	                            mov rdi, rax	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_12
0x400147a	      0xe800000000	                          call 0x400147f	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_12
0x400147f	          0x488b10	                    mov rdx, qword [rax]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_12
0x4001482	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_12
0x4001486	        0x48895018	             mov qword [rax + 0x18], rdx	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_12
0x400148a	      0xe96e010000	                           jmp 0x40015fd	       834	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6
0x400148f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_13
0x4001493	        0x488b4018	            mov rax, qword [rax + 0x18] 	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_13
0x4001497	      0xbe01000000	                              mov esi, 1	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_13
0x400149c	          0x4889c7	                            mov rdi, rax	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_13
0x400149f	      0xe800000000	                          call 0x40014a4	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_13
0x40014a4	            0x85c0	                           test eax, eax	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_13
0x40014a6	     0xf853e010000	                           jne 0x40015ea	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_13
0x40014ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_14
0x40014b0	          0x4889c7	                            mov rdi, rax	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_14
0x40014b3	      0xe800000000	                          call 0x40014b8	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_14
0x40014b8	            0x85c0	                           test eax, eax	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_14
0x40014ba	     0xf842d010000	                            je 0x40015ed	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_14
0x40014c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_15
0x40014c4	          0x4889c7	                            mov rdi, rax	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_15
0x40014c7	      0xe800000000	                          call 0x40014cc	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_15
0x40014cc	            0x85c0	                           test eax, eax	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_15
0x40014ce	     0xf851c010000	                           jne 0x40015f0	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_15
0x40014d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x40014d8	          0x4889c7	                            mov rdi, rax	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x40014db	      0xe800000000	                          call 0x40014e0	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x40014e0	        0x488945f8	                mov qword [rbp - 8], rax	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x40014e4	      0x48837df800	                  cmp qword [rbp - 8], 0	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x40014e9	            0x7514	                           jne 0x40014ff	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x40014eb	      0xba00000000	                              mov edx, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_17
0x40014f0	      0xbe59030000	                          mov esi, 0x359	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_17
0x40014f5	      0xbf00000000	                              mov edi, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_17
0x40014fa	      0xe800000000	                          call 0x40014ff	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_17
0x40014ff	    0x48817df80000	                  cmp qword [rbp - 8], 0	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4001507	     0xf84e6000000	                            je 0x40015f3	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x400150d	    0x488b05000000	            mov rax, qword [0x04001514] 	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4001514	        0x483945f8	                cmp qword [rbp - 8], rax	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4001518	     0xf84d5000000	                            je 0x40015f3	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x400151e	        0x488b45f8	                mov rax, qword [rbp - 8]	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x4001522	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x4001526	            0x7445	                            je 0x400156d	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x4001528	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x400152c	          0x4889c7	                            mov rdi, rax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x400152f	      0xe800000000	                          call 0x4001534	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x4001534	            0x85c0	                           test eax, eax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x4001536	            0x7535	                           jne 0x400156d	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_18
0x4001538	        0x488b45f8	                mov rax, qword [rbp - 8]	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x400153c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x400153f	      0x2500000200	                        and eax, 0x20000	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4001544	            0x85c0	                           test eax, eax	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4001546	     0xf85aa000000	                           jne 0x40015f6	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x400154c	        0x488b45f8	                mov rax, qword [rbp - 8]	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_20
0x4001550	          0x488b00	                    mov rax, qword [rax]	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_20
0x4001553	      0xba0d000000	                            mov edx, 0xd	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_20
0x4001558	      0xbe00000000	                              mov esi, 0	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_20
0x400155d	          0x4889c7	                            mov rdi, rax	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_20
0x4001560	      0xe800000000	                          call 0x4001565	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_20
0x4001565	            0x85c0	                           test eax, eax	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4001567	     0xf8489000000	                            je 0x40015f6	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x400156d	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001571	          0x8b4020	            mov eax, dword [rax + 0x20] 	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001574	      0x2500008000	                       and eax, 0x800000	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001579	            0x85c0	                           test eax, eax	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x400157b	            0x741a	                            je 0x4001597	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x400157d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001581	        0x488b4028	            mov rax, qword [rax + 0x28] 	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001585	          0x4885c0	                           test rax, rax	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001588	            0x756f	                           jne 0x40015f9	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x400158a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x400158e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001592	          0x4885c0	                           test rax, rax	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001595	            0x7562	                           jne 0x40015f9	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4001597	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x400159b	          0x8b4020	            mov eax, dword [rax + 0x20] 	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x400159e	      0x2500040000	                          and eax, 0x400	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x40015a3	            0x85c0	                           test eax, eax	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x40015a5	            0x7555	                           jne 0x40015fc	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x40015a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015ab	          0x4889c7	                            mov rdi, rax	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015ae	      0xe800000000	                          call 0x40015b3	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015b3	          0x4889c2	                            mov rdx, rax	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015ba	        0x488b4028	            mov rax, qword [rax + 0x28] 	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015be	          0x4801c2	                            add rdx, rax	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015c5	        0x48895028	             mov qword [rax + 0x28], rdx	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_21
0x40015c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015cd	          0x4889c7	                            mov rdi, rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015d0	      0xe800000000	                          call 0x40015d5	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015d5	          0x4889c7	                            mov rdi, rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015d8	      0xe800000000	                          call 0x40015dd	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015dd	          0x4889c2	                            mov rdx, rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015e4	        0x48895018	             mov qword [rax + 0x18], rdx	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015e8	            0xeb13	                           jmp 0x40015fd	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_23
0x40015ea	              0x90	                                     nop	       840	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7
0x40015eb	            0xeb10	                           jmp 0x40015fd	       840	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7
0x40015ed	              0x90	                                     nop	       847	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8
0x40015ee	            0xeb0d	                           jmp 0x40015fd	       847	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8
0x40015f0	              0x90	                                     nop	       853	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9
0x40015f1	            0xeb0a	                           jmp 0x40015fd	       853	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9
0x40015f3	              0x90	                                     nop	       864	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x40015f4	            0xeb07	                           jmp 0x40015fd	       864	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x40015f6	              0x90	                                     nop	       880	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x40015f7	            0xeb04	                           jmp 0x40015fd	       880	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x40015f9	              0x90	                                     nop	       887	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x40015fa	            0xeb01	                           jmp 0x40015fd	       887	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x40015fc	              0x90	                                     nop	       891	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x40015fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       792	write.c	FUNCTION_16	FOR_1
0x4001601	        0x488b4040	            mov rax, qword [rax + 0x40] 	       792	write.c	FUNCTION_16	FOR_1
0x4001605	        0x488945d8	             mov qword [rbp - 0x28], rax	       792	write.c	FUNCTION_16	FOR_1
0x4001609	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       792	write.c	FUNCTION_16	FOR_1
0x400160e	     0xf855cfdffff	                           jne 0x4001370	       792	write.c	FUNCTION_16	FOR_1
0x4001614	            0xeb01	                           jmp 0x4001617	       792	write.c	FUNCTION_16	FOR_1
0x4001616	              0x90	                                     nop	       788	write.c	FUNCTION_16	IF_1
0x4001617	              0xc9	                                   leave	       905	write.c	FUNCTION_16
0x4001618	              0xc3	                                     ret	       905	write.c	FUNCTION_16
get_frag_for_reloc	IF,3:SWITCH,0:WHILE,0:functions,0:FOR,3:DO,0:ELSE,0:CALL,2	99
0x400221d	              0x55	                                push rbp	      1196	write.c	FUNCTION_20
0x400221e	          0x4889e5	                            mov rbp, rsp	      1196	write.c	FUNCTION_20
0x4002221	        0x4883ec30	                           sub rsp, 0x30	      1196	write.c	FUNCTION_20
0x4002225	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1196	write.c	FUNCTION_20
0x4002229	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1196	write.c	FUNCTION_20
0x400222d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1196	write.c	FUNCTION_20
0x4002231	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1199	write.c	FUNCTION_20	FOR_1
0x4002235	        0x488945f8	                mov qword [rbp - 8], rax	      1199	write.c	FUNCTION_20	FOR_1
0x4002239	            0xeb48	                           jmp 0x4002283	      1199	write.c	FUNCTION_20	FOR_1
0x400223b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x400223f	          0x488b10	                    mov rdx, qword [rax]	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4002242	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4002246	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x400224a	          0x4839c2	                            cmp rdx, rax	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x400224d	            0x7728	                            ja 0x4002277	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x400224f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x4002253	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x4002257	        0x488b45f8	                mov rax, qword [rbp - 8]	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400225b	          0x488b08	                    mov rcx, qword [rax]	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400225e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x4002262	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x4002266	          0x4801c8	                            add rax, rcx	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x4002269	          0x4839c2	                            cmp rdx, rax	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400226c	            0x7309	                           jae 0x4002277	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400226e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1202	write.c	FUNCTION_20	FOR_1	IF_1
0x4002272	      0xe9fe000000	                           jmp 0x4002375	      1202	write.c	FUNCTION_20	FOR_1	IF_1
0x4002277	        0x488b45f8	                mov rax, qword [rbp - 8]	      1199	write.c	FUNCTION_20	FOR_1
0x400227b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1199	write.c	FUNCTION_20	FOR_1
0x400227f	        0x488945f8	                mov qword [rbp - 8], rax	      1199	write.c	FUNCTION_20	FOR_1
0x4002283	      0x48837df800	                  cmp qword [rbp - 8], 0	      1199	write.c	FUNCTION_20	FOR_1
0x4002288	            0x75b1	                           jne 0x400223b	      1199	write.c	FUNCTION_20	FOR_1
0x400228a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1204	write.c	FUNCTION_20	FOR_2
0x400228e	          0x488b00	                    mov rax, qword [rax]	      1204	write.c	FUNCTION_20	FOR_2
0x4002291	          0x488b00	                    mov rax, qword [rax]	      1204	write.c	FUNCTION_20	FOR_2
0x4002294	        0x488945f8	                mov qword [rbp - 8], rax	      1204	write.c	FUNCTION_20	FOR_2
0x4002298	            0xeb48	                           jmp 0x40022e2	      1204	write.c	FUNCTION_20	FOR_2
0x400229a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x400229e	          0x488b10	                    mov rdx, qword [rax]	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40022a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40022a5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40022a9	          0x4839c2	                            cmp rdx, rax	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40022ac	            0x7728	                            ja 0x40022d6	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40022ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022b2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022ba	          0x488b08	                    mov rcx, qword [rax]	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022c5	          0x4801c8	                            add rax, rcx	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022c8	          0x4839c2	                            cmp rdx, rax	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022cb	            0x7309	                           jae 0x40022d6	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40022cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1207	write.c	FUNCTION_20	FOR_2	IF_2
0x40022d1	      0xe99f000000	                           jmp 0x4002375	      1207	write.c	FUNCTION_20	FOR_2	IF_2
0x40022d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1204	write.c	FUNCTION_20	FOR_2
0x40022da	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1204	write.c	FUNCTION_20	FOR_2
0x40022de	        0x488945f8	                mov qword [rbp - 8], rax	      1204	write.c	FUNCTION_20	FOR_2
0x40022e2	      0x48837df800	                  cmp qword [rbp - 8], 0	      1204	write.c	FUNCTION_20	FOR_2
0x40022e7	            0x75b1	                           jne 0x400229a	      1204	write.c	FUNCTION_20	FOR_2
0x40022e9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1209	write.c	FUNCTION_20	FOR_3
0x40022ed	          0x488b00	                    mov rax, qword [rax]	      1209	write.c	FUNCTION_20	FOR_3
0x40022f0	          0x488b00	                    mov rax, qword [rax]	      1209	write.c	FUNCTION_20	FOR_3
0x40022f3	        0x488945f8	                mov qword [rbp - 8], rax	      1209	write.c	FUNCTION_20	FOR_3
0x40022f7	            0xeb45	                           jmp 0x400233e	      1209	write.c	FUNCTION_20	FOR_3
0x40022f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x40022fd	          0x488b10	                    mov rdx, qword [rax]	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4002300	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4002304	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4002308	          0x4839c2	                            cmp rdx, rax	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x400230b	            0x7725	                            ja 0x4002332	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x400230d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4002311	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4002315	        0x488b45f8	                mov rax, qword [rbp - 8]	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4002319	          0x488b08	                    mov rcx, qword [rax]	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400231c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4002320	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4002324	          0x4801c8	                            add rax, rcx	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4002327	          0x4839c2	                            cmp rdx, rax	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400232a	            0x7706	                            ja 0x4002332	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400232c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1212	write.c	FUNCTION_20	FOR_3	IF_3
0x4002330	            0xeb43	                           jmp 0x4002375	      1212	write.c	FUNCTION_20	FOR_3	IF_3
0x4002332	        0x488b45f8	                mov rax, qword [rbp - 8]	      1209	write.c	FUNCTION_20	FOR_3
0x4002336	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1209	write.c	FUNCTION_20	FOR_3
0x400233a	        0x488945f8	                mov qword [rbp - 8], rax	      1209	write.c	FUNCTION_20	FOR_3
0x400233e	      0x48837df800	                  cmp qword [rbp - 8], 0	      1209	write.c	FUNCTION_20	FOR_3
0x4002343	            0x75b4	                           jne 0x40022f9	      1209	write.c	FUNCTION_20	FOR_3
0x4002345	      0xbf00000000	                              mov edi, 0	      1215	write.c	FUNCTION_20	CALL_2
0x400234a	      0xe800000000	                          call 0x400234f	      1215	write.c	FUNCTION_20	CALL_2
0x400234f	          0x4889c2	                            mov rdx, rax	      1215	write.c	FUNCTION_20	CALL_2
0x4002352	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1214	write.c	FUNCTION_20	CALL_1
0x4002356	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      1214	write.c	FUNCTION_20	CALL_1
0x4002359	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1214	write.c	FUNCTION_20	CALL_1
0x400235d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1214	write.c	FUNCTION_20	CALL_1
0x4002361	            0x89ce	                            mov esi, ecx	      1214	write.c	FUNCTION_20	CALL_1
0x4002363	          0x4889c7	                            mov rdi, rax	      1214	write.c	FUNCTION_20	CALL_1
0x4002366	      0xb800000000	                              mov eax, 0	      1214	write.c	FUNCTION_20	CALL_1
0x400236b	      0xe800000000	                          call 0x4002370	      1214	write.c	FUNCTION_20	CALL_1
0x4002370	      0xb800000000	                              mov eax, 0	      1216	write.c	FUNCTION_20
0x4002375	              0xc9	                                   leave	      1217	write.c	FUNCTION_20
0x4002376	              0xc3	                                     ret	      1217	write.c	FUNCTION_20
bfd_set_section_alignment	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,0	11
0x4000040	              0x55	                                push rbp	      1695	bfd.h	FUNCTION_43
0x4000041	          0x4889e5	                            mov rbp, rsp	      1695	bfd.h	FUNCTION_43
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	      1695	bfd.h	FUNCTION_43
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1695	bfd.h	FUNCTION_43
0x400004c	          0x8955ec	             mov dword [rbp - 0x14], edx	      1695	bfd.h	FUNCTION_43
0x400004f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	bfd.h	FUNCTION_43
0x4000053	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1696	bfd.h	FUNCTION_43
0x4000056	          0x895070	             mov dword [rax + 0x70], edx	      1696	bfd.h	FUNCTION_43
0x4000059	      0xb801000000	                              mov eax, 1	      1697	bfd.h	FUNCTION_43
0x400005e	              0x5d	                                 pop rbp	      1698	bfd.h	FUNCTION_43
0x400005f	              0xc3	                                     ret	      1698	bfd.h	FUNCTION_43
relax_frag	IF,8:SWITCH,0:WHILE,0:functions,0:FOR,2:DO,0:ELSE,4:CALL,8	168
0x40049a0	              0x55	                                push rbp	      2488	write.c	FUNCTION_34
0x40049a1	          0x4889e5	                            mov rbp, rsp	      2488	write.c	FUNCTION_34
0x40049a4	        0x4883ec70	                           sub rsp, 0x70	      2488	write.c	FUNCTION_34
0x40049a8	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2488	write.c	FUNCTION_34
0x40049ac	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2488	write.c	FUNCTION_34
0x40049b0	        0x48895598	             mov qword [rbp - 0x68], rdx	      2488	write.c	FUNCTION_34
0x40049b4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2500	write.c	FUNCTION_34
0x40049b8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2500	write.c	FUNCTION_34
0x40049bc	        0x488945c0	             mov qword [rbp - 0x40], rax	      2500	write.c	FUNCTION_34
0x40049c0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2501	write.c	FUNCTION_34
0x40049c4	          0x488b00	                    mov rax, qword [rax]	      2501	write.c	FUNCTION_34
0x40049c7	        0x488945c8	             mov qword [rbp - 0x38], rax	      2501	write.c	FUNCTION_34
0x40049cb	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2502	write.c	FUNCTION_34
0x40049d3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2503	write.c	FUNCTION_34
0x40049d7	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2503	write.c	FUNCTION_34
0x40049da	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2503	write.c	FUNCTION_34
0x40049dd	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2504	write.c	FUNCTION_34
0x40049e0	          0x4889d0	                            mov rax, rdx	      2504	write.c	FUNCTION_34
0x40049e3	          0x4801c0	                            add rax, rax	      2504	write.c	FUNCTION_34
0x40049e6	          0x4801d0	                            add rax, rdx	      2504	write.c	FUNCTION_34
0x40049e9	        0x48c1e003	                              shl rax, 3	      2504	write.c	FUNCTION_34
0x40049ed	          0x4889c2	                            mov rdx, rax	      2504	write.c	FUNCTION_34
0x40049f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2504	write.c	FUNCTION_34
0x40049f4	          0x4801d0	                            add rax, rdx	      2504	write.c	FUNCTION_34
0x40049f7	        0x488945b8	             mov qword [rbp - 0x48], rax	      2504	write.c	FUNCTION_34
0x40049fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2504	write.c	FUNCTION_34
0x40049ff	        0x488945d8	             mov qword [rbp - 0x28], rax	      2504	write.c	FUNCTION_34
0x4004a03	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2505	write.c	FUNCTION_34
0x4004a07	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2505	write.c	FUNCTION_34
0x4004a0b	        0x488945e0	             mov qword [rbp - 0x20], rax	      2505	write.c	FUNCTION_34
0x4004a0f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2507	write.c	FUNCTION_34	IF_1
0x4004a14	     0xf84cd000000	                            je 0x4004ae7	      2507	write.c	FUNCTION_34	IF_1
0x4004a1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x4004a1e	          0x4889c7	                            mov rdi, rax	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x4004a21	      0xe800000000	                          call 0x4004a26	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x4004a26	        0x488945e8	             mov qword [rbp - 0x18], rax	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x4004a2a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a2e	          0x4889c7	                            mov rdi, rax	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a31	      0xe800000000	                          call 0x4004a36	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a36	    0x483d00000000	                              cmp rax, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a3c	            0x751e	                           jne 0x4004a5c	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a3e	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a46	            0x7414	                            je 0x4004a5c	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a48	      0xba00000000	                              mov edx, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a4d	      0xbed5090000	                          mov esi, 0x9d5	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a52	      0xbf00000000	                              mov edi, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a57	      0xe800000000	                          call 0x4004a5c	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4004a5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x4004a60	          0x4889c7	                            mov rdi, rax	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x4004a63	      0xe800000000	                          call 0x4004a68	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x4004a68	        0x480145c0	            add qword [rbp - 0x40], rax 	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x4004a6c	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x4004a71	            0x7474	                            je 0x4004ae7	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x4004a73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a77	         0xfb6405a	           movzx eax, byte [rax + 0x5a] 	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a7b	          0x83e001	                              and eax, 1	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a7e	            0x89c2	                            mov edx, eax	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a80	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a84	         0xfb6405a	           movzx eax, byte [rax + 0x5a] 	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a88	          0x83e001	                              and eax, 1	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a8b	            0x38c2	                              cmp dl, al	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a8d	            0x7458	                            je 0x4004ae7	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4004a8f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x4004a93	          0x4889c7	                            mov rdi, rax	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x4004a96	      0xe800000000	                          call 0x4004a9b	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x4004a9b	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x4004a9f	            0x7546	                           jne 0x4004ae7	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x4004aa1	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004aa6	            0x7815	                            js 0x4004abd	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004aa8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004aac	         0xfb75058	           movzx edx, word [rax + 0x58] 	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004ab0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004ab4	         0xfb74058	           movzx eax, word [rax + 0x58] 	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004ab8	          0x6639c2	                              cmp dx, ax	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004abb	            0x750a	                           jne 0x4004ac7	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004abd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004ac1	        0x480145c0	            add qword [rbp - 0x40], rax 	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004ac5	            0xeb20	                           jmp 0x4004ae7	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4004ac7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004acb	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004acf	            0x7316	                           jae 0x4004ae7	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004ad1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004ad5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004ad9	          0x488b10	                    mov rdx, qword [rax]	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004adc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004ae0	          0x4801d0	                            add rax, rdx	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004ae3	        0x488945c0	             mov qword [rbp - 0x40], rax	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4004ae7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2545	write.c	FUNCTION_34
0x4004aeb	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2545	write.c	FUNCTION_34
0x4004aef	          0x4889c2	                            mov rdx, rax	      2545	write.c	FUNCTION_34
0x4004af2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2545	write.c	FUNCTION_34
0x4004af6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2545	write.c	FUNCTION_34
0x4004afa	          0x4829c2	                            sub rdx, rax	      2545	write.c	FUNCTION_34
0x4004afd	          0x4889d0	                            mov rax, rdx	      2545	write.c	FUNCTION_34
0x4004b00	        0x488945f0	             mov qword [rbp - 0x10], rax	      2545	write.c	FUNCTION_34
0x4004b04	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2556	write.c	FUNCTION_34	IF_5
0x4004b09	            0x7959	                           jns 0x4004b64	      2556	write.c	FUNCTION_34	IF_5
0x4004b0b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4004b0f	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4004b12	          0x8945b0	             mov dword [rbp - 0x50], eax	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4004b15	            0xeb45	                           jmp 0x4004b5c	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4004b17	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4004b1b	        0x488b4008	                mov rax, qword [rax + 8]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4004b1f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4004b23	            0x7f09	                            jg 0x4004b2e	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4004b25	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2561	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4004b2c	            0xeb2e	                           jmp 0x4004b5c	      2561	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4004b2e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2565	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b31	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2565	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b34	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b37	          0x4889d0	                            mov rax, rdx	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b3a	          0x4801c0	                            add rax, rax	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b3d	          0x4801d0	                            add rax, rdx	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b40	        0x48c1e003	                              shl rax, 3	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b44	          0x4889c2	                            mov rdx, rax	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b47	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b4b	          0x4801d0	                            add rax, rdx	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b4e	        0x488945b8	             mov qword [rbp - 0x48], rax	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b52	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b56	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b59	          0x8945b0	             mov dword [rbp - 0x50], eax	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x4004b5c	        0x837db000	               cmp dword [rbp - 0x50], 0	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4004b60	            0x75b5	                           jne 0x4004b17	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4004b62	            0xeb56	                           jmp 0x4004bba	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4004b64	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4004b68	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4004b6b	          0x8945b0	             mov dword [rbp - 0x50], eax	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4004b6e	            0xeb44	                           jmp 0x4004bb4	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4004b70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x4004b74	          0x488b00	                    mov rax, qword [rax]	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x4004b77	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x4004b7b	            0x7c09	                            jl 0x4004b86	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x4004b7d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2575	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x4004b84	            0xeb2e	                           jmp 0x4004bb4	      2575	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x4004b86	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2579	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b89	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2579	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b8c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b8f	          0x4889d0	                            mov rax, rdx	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b92	          0x4801c0	                            add rax, rax	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b95	          0x4801d0	                            add rax, rdx	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b98	        0x48c1e003	                              shl rax, 3	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b9c	          0x4889c2	                            mov rdx, rax	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004b9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004ba3	          0x4801d0	                            add rax, rdx	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004ba6	        0x488945b8	             mov qword [rbp - 0x48], rax	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004baa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004bae	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004bb1	          0x8945b0	             mov dword [rbp - 0x50], eax	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4004bb4	        0x837db000	               cmp dword [rbp - 0x50], 0	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4004bb8	            0x75b6	                           jne 0x4004b70	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4004bba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2585	write.c	FUNCTION_34
0x4004bbe	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      2585	write.c	FUNCTION_34
0x4004bc2	           0xfb6d0	                           movzx edx, al	      2585	write.c	FUNCTION_34
0x4004bc5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2585	write.c	FUNCTION_34
0x4004bc9	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      2585	write.c	FUNCTION_34
0x4004bcd	           0xfb6c0	                           movzx eax, al	      2585	write.c	FUNCTION_34
0x4004bd0	            0x29c2	                            sub edx, eax	      2585	write.c	FUNCTION_34
0x4004bd2	            0x89d0	                            mov eax, edx	      2585	write.c	FUNCTION_34
0x4004bd4	            0x4898	                                    cdqe	      2585	write.c	FUNCTION_34
0x4004bd6	        0x488945f8	                mov qword [rbp - 8], rax	      2585	write.c	FUNCTION_34
0x4004bda	      0x48837df800	                  cmp qword [rbp - 8], 0	      2586	write.c	FUNCTION_34	IF_8
0x4004bdf	            0x740a	                            je 0x4004beb	      2586	write.c	FUNCTION_34	IF_8
0x4004be1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2587	write.c	FUNCTION_34	IF_8
0x4004be5	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2587	write.c	FUNCTION_34	IF_8
0x4004be8	          0x895060	             mov dword [rax + 0x60], edx	      2587	write.c	FUNCTION_34	IF_8
0x4004beb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2588	write.c	FUNCTION_34
0x4004bef	              0xc9	                                   leave	      2589	write.c	FUNCTION_34
0x4004bf0	              0xc3	                                     ret	      2589	write.c	FUNCTION_34
chain_frchains_together_1	IF,2:SWITCH,0:WHILE,0:functions,0:FOR,1:DO,0:ELSE,0:CALL,5	79
0x400075d	              0x55	                                push rbp	       390	write.c	FUNCTION_10
0x400075e	          0x4889e5	                            mov rbp, rsp	       390	write.c	FUNCTION_10
0x4000761	    0x4881ec200100	                          sub rsp, 0x120	       390	write.c	FUNCTION_10
0x4000768	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	       390	write.c	FUNCTION_10
0x400076f	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	       390	write.c	FUNCTION_10
0x4000776	    0x64488b042528	                mov rax, qword fs:[0x28]	       390	write.c	FUNCTION_10
0x400077f	        0x488945f8	                mov qword [rbp - 8], rax	       390	write.c	FUNCTION_10
0x4000783	            0x31c0	                            xor eax, eax	       390	write.c	FUNCTION_10
0x4000785	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       391	write.c	FUNCTION_10
0x400078c	    0x488985f0feff	            mov qword [rbp - 0x110], rax	       391	write.c	FUNCTION_10
0x4000793	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       392	write.c	FUNCTION_10
0x400079a	    0x488985f8feff	            mov qword [rbp - 0x108], rax	       392	write.c	FUNCTION_10
0x40007a1	      0xe9e4000000	                           jmp 0x400088a	       394	write.c	FUNCTION_10	FOR_1
0x40007a6	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       396	write.c	FUNCTION_10	FOR_1
0x40007ad	          0x488b10	                    mov rdx, qword [rax]	       396	write.c	FUNCTION_10	FOR_1
0x40007b0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       396	write.c	FUNCTION_10	FOR_1
0x40007b7	        0x48895038	             mov qword [rax + 0x38], rdx	       396	write.c	FUNCTION_10	FOR_1
0x40007bb	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       397	write.c	FUNCTION_10	FOR_1
0x40007c2	        0x488b4008	                mov rax, qword [rax + 8]	       397	write.c	FUNCTION_10	FOR_1
0x40007c6	    0x488985f0feff	            mov qword [rbp - 0x110], rax	       397	write.c	FUNCTION_10	FOR_1
0x40007cd	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007d4	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007d7	            0x85c0	                           test eax, eax	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007d9	            0x7514	                           jne 0x40007ef	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007db	      0xba00000000	                              mov edx, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007e0	      0xbe8e010000	                          mov esi, 0x18e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007e5	      0xbf00000000	                              mov edi, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007ea	      0xe800000000	                          call 0x40007ef	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40007ef	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40007f6	        0x488b4020	            mov rax, qword [rax + 0x20] 	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40007fa	          0x4885c0	                           test rax, rax	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40007fd	            0x7479	                            je 0x4000878	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40007ff	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4000806	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x400080d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4000811	          0x4885c0	                           test rax, rax	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4000814	            0x751d	                           jne 0x4000833	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4000816	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x400081d	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4000824	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x400082b	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x400082f	        0x48895010	             mov qword [rax + 0x10], rdx	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4000833	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x400083a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x400083e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x4000845	        0x48895040	             mov qword [rax + 0x40], rdx	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x4000849	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x4000850	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x4000857	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x400085e	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x4000862	        0x48895018	             mov qword [rax + 0x18], rdx	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x4000866	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       405	write.c	FUNCTION_10	FOR_1	IF_1
0x400086d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       405	write.c	FUNCTION_10	FOR_1	IF_1
0x4000871	    0x488985f8feff	            mov qword [rbp - 0x108], rax	       405	write.c	FUNCTION_10	FOR_1	IF_1
0x4000878	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       394	write.c	FUNCTION_10	FOR_1
0x400087f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       394	write.c	FUNCTION_10	FOR_1
0x4000883	    0x488985e0feff	            mov qword [rbp - 0x120], rax	       394	write.c	FUNCTION_10	FOR_1
0x400088a	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	       394	write.c	FUNCTION_10	FOR_1
0x4000892	     0xf850effffff	                           jne 0x40007a6	       394	write.c	FUNCTION_10	FOR_1
0x4000898	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       408	write.c	FUNCTION_10	CALL_5
0x400089f	    0x483985f0feff	           cmp qword [rbp - 0x110], rax 	       408	write.c	FUNCTION_10	CALL_5
0x40008a6	            0x740e	                            je 0x40008b6	       408	write.c	FUNCTION_10	CALL_5
0x40008a8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       408	write.c	FUNCTION_10	CALL_5
0x40008af	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       408	write.c	FUNCTION_10	CALL_5
0x40008b2	            0x85c0	                           test eax, eax	       408	write.c	FUNCTION_10	CALL_5
0x40008b4	            0x7514	                           jne 0x40008ca	       408	write.c	FUNCTION_10	CALL_5
0x40008b6	      0xba00000000	                              mov edx, 0	       408	write.c	FUNCTION_10	CALL_5
0x40008bb	      0xbe99010000	                          mov esi, 0x199	       408	write.c	FUNCTION_10	CALL_5
0x40008c0	      0xbf00000000	                              mov edi, 0	       408	write.c	FUNCTION_10	CALL_5
0x40008c5	      0xe800000000	                          call 0x40008ca	       408	write.c	FUNCTION_10	CALL_5
0x40008ca	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       410	write.c	FUNCTION_10
0x40008d1	    0x48c740380000	               mov qword [rax + 0x38], 0	       410	write.c	FUNCTION_10
0x40008d9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       411	write.c	FUNCTION_10
0x40008e0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       412	write.c	FUNCTION_10
0x40008e4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       412	write.c	FUNCTION_10
0x40008ed	            0x7405	                            je 0x40008f4	       412	write.c	FUNCTION_10
0x40008ef	      0xe800000000	                          call 0x40008f4	       412	write.c	FUNCTION_10
0x40008f4	              0xc9	                                   leave	       412	write.c	FUNCTION_10
0x40008f5	              0xc3	                                     ret	       412	write.c	FUNCTION_10
compress_debug	IF,17:SWITCH,0:WHILE,1:functions,0:FOR,2:DO,0:ELSE,1:CALL,29	408
0x40029f1	              0x55	                                push rbp	      1424	write.c	FUNCTION_23
0x40029f2	          0x4889e5	                            mov rbp, rsp	      1424	write.c	FUNCTION_23
0x40029f5	              0x53	                                push rbx	      1424	write.c	FUNCTION_23
0x40029f6	    0x4881ec080100	                          sub rsp, 0x108	      1424	write.c	FUNCTION_23
0x40029fd	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      1424	write.c	FUNCTION_23
0x4002a04	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      1424	write.c	FUNCTION_23
0x4002a0b	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      1424	write.c	FUNCTION_23
0x4002a12	    0x64488b042528	                mov rax, qword fs:[0x28]	      1424	write.c	FUNCTION_23
0x4002a1b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1424	write.c	FUNCTION_23
0x4002a1f	            0x31c0	                            xor eax, eax	      1424	write.c	FUNCTION_23
0x4002a21	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1425	write.c	FUNCTION_23	CALL_1
0x4002a28	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1425	write.c	FUNCTION_23	CALL_1
0x4002a2f	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1425	write.c	FUNCTION_23	CALL_1
0x4002a36	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1429	write.c	FUNCTION_23
0x4002a3d	          0x488b00	                    mov rax, qword [rax]	      1429	write.c	FUNCTION_23
0x4002a40	        0x4883c030	                           add rax, 0x30	      1429	write.c	FUNCTION_23
0x4002a44	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1429	write.c	FUNCTION_23
0x4002a4b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1430	write.c	FUNCTION_23
0x4002a52	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1430	write.c	FUNCTION_23
0x4002a56	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1430	write.c	FUNCTION_23
0x4002a5d	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1437	write.c	FUNCTION_23
0x4002a64	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1437	write.c	FUNCTION_23
0x4002a67	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      1437	write.c	FUNCTION_23
0x4002a6d	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      1440	write.c	FUNCTION_23	IF_1
0x4002a75	     0xf8494060000	                            je 0x400310f	      1440	write.c	FUNCTION_23	IF_1
0x4002a7b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1441	write.c	FUNCTION_23	IF_1
0x4002a82	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1441	write.c	FUNCTION_23	IF_1
0x4002a86	        0x4883f81f	                           cmp rax, 0x1f	      1441	write.c	FUNCTION_23	IF_1
0x4002a8a	     0xf867f060000	                           jbe 0x400310f	      1441	write.c	FUNCTION_23	IF_1
0x4002a90	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1442	write.c	FUNCTION_23	IF_1
0x4002a96	      0x2501010000	                          and eax, 0x101	      1442	write.c	FUNCTION_23	IF_1
0x4002a9b	          0x83f801	                              cmp eax, 1	      1442	write.c	FUNCTION_23	IF_1
0x4002a9e	     0xf846b060000	                            je 0x400310f	      1442	write.c	FUNCTION_23	IF_1
0x4002aa4	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1445	write.c	FUNCTION_23
0x4002aab	          0x488b00	                    mov rax, qword [rax]	      1445	write.c	FUNCTION_23
0x4002aae	        0x48894580	             mov qword [rbp - 0x80], rax	      1445	write.c	FUNCTION_23
0x4002ab2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4002ab6	      0xba07000000	                              mov edx, 7	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4002abb	      0xbe00000000	                              mov esi, 0	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4002ac0	          0x4889c7	                            mov rdi, rax	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4002ac3	      0xe800000000	                          call 0x4002ac8	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4002ac8	            0x85c0	                           test eax, eax	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4002aca	     0xf8542060000	                           jne 0x4003112	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4002ad0	      0xe800000000	                          call 0x4002ad5	      1449	write.c	FUNCTION_23	CALL_3
0x4002ad5	        0x48894588	             mov qword [rbp - 0x78], rax	      1449	write.c	FUNCTION_23	CALL_3
0x4002ad9	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1450	write.c	FUNCTION_23	IF_3
0x4002ade	     0xf8431060000	                            je 0x4003115	      1450	write.c	FUNCTION_23	IF_3
0x4002ae4	    0x8b0500000000	            mov eax, dword [0x04002aea] 	      1453	write.c	FUNCTION_23	IF_4
0x4002aea	          0x83f805	                              cmp eax, 5	      1453	write.c	FUNCTION_23	IF_4
0x4002aed	            0x7528	                           jne 0x4002b17	      1453	write.c	FUNCTION_23	IF_4
0x4002aef	    0x488b05000000	            mov rax, qword [0x04002af6] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4002af6	      0xbe00000000	                              mov esi, 0	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4002afb	          0x4889c7	                            mov rdi, rax	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4002afe	      0xe800000000	                          call 0x4002b03	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4002b03	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4002b09	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      1457	write.c	FUNCTION_23	IF_4
0x4002b0f	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      1457	write.c	FUNCTION_23	IF_4
0x4002b15	            0xeb14	                           jmp 0x4002b2b	      1457	write.c	FUNCTION_23	IF_4
0x4002b17	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      1461	write.c	FUNCTION_23	ELSE_1
0x4002b21	    0xc78524ffffff	            mov dword [rbp - 0xdc], 0xc 	      1462	write.c	FUNCTION_23	ELSE_1
0x4002b2b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1466	write.c	FUNCTION_23	CALL_5
0x4002b32	          0x4889c7	                            mov rdi, rax	      1466	write.c	FUNCTION_23	CALL_5
0x4002b35	      0xe800000000	                          call 0x4002b3a	      1466	write.c	FUNCTION_23	CALL_5
0x4002b3a	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1466	write.c	FUNCTION_23	CALL_5
0x4002b41	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b48	        0x48894590	             mov qword [rbp - 0x70], rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b4c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b50	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b54	          0x4889c2	                            mov rdx, rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b57	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b5b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b5f	          0x4829c2	                            sub rdx, rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b62	          0x4889d0	                            mov rax, rdx	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b65	          0x4889c2	                            mov rdx, rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b68	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b6e	          0x4839c2	                            cmp rdx, rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b71	            0x7316	                           jae 0x4002b89	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4002b73	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1468	write.c	FUNCTION_23	CALL_7
0x4002b7a	          0x4889c7	                            mov rdi, rax	      1468	write.c	FUNCTION_23	CALL_7
0x4002b7d	      0xe800000000	                          call 0x4002b82	      1468	write.c	FUNCTION_23	CALL_7
0x4002b82	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1468	write.c	FUNCTION_23	CALL_7
0x4002b89	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002b90	        0x48894598	             mov qword [rbp - 0x68], rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002b94	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002b98	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002b9c	          0x4889c2	                            mov rdx, rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002b9f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002ba3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002ba7	          0x4829c2	                            sub rdx, rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002baa	          0x4889d0	                            mov rax, rdx	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002bad	          0x4889c2	                            mov rdx, rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002bb0	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002bb6	          0x4839c2	                            cmp rdx, rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002bb9	            0x732e	                           jae 0x4002be9	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4002bbb	    0x8b9d24ffffff	             mov ebx, dword [rbp - 0xdc]	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bc1	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bc7	          0x4889c2	                            mov rdx, rax	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bca	      0xbe00000000	                              mov esi, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bcf	      0xbf00000000	                              mov edi, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bd4	      0xe800000000	                          call 0x4002bd9	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bd9	          0x4889de	                            mov rsi, rbx	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bdc	          0x4889c7	                            mov rdi, rax	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002bdf	      0xb800000000	                              mov eax, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002be4	      0xe800000000	                          call 0x4002be9	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4002be9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1474	write.c	FUNCTION_23
0x4002bf0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1474	write.c	FUNCTION_23
0x4002bf7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1475	write.c	FUNCTION_23	CALL_11
0x4002bfe	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1475	write.c	FUNCTION_23	CALL_11
0x4002c02	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1475	write.c	FUNCTION_23	CALL_11
0x4002c08	          0x4801c2	                            add rdx, rax	      1475	write.c	FUNCTION_23	CALL_11
0x4002c0b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1475	write.c	FUNCTION_23	CALL_11
0x4002c12	        0x48895018	             mov qword [rax + 0x18], rdx	      1475	write.c	FUNCTION_23	CALL_11
0x4002c16	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1476	write.c	FUNCTION_23
0x4002c1d	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1476	write.c	FUNCTION_23
0x4002c24	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1477	write.c	FUNCTION_23
0x4002c2b	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      1477	write.c	FUNCTION_23
0x4002c31	        0x48895010	             mov qword [rax + 0x10], rdx	      1477	write.c	FUNCTION_23
0x4002c35	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1478	write.c	FUNCTION_23
0x4002c3c	        0x4883c07c	                           add rax, 0x7c	      1478	write.c	FUNCTION_23
0x4002c40	        0x488945a0	             mov qword [rbp - 0x60], rax	      1478	write.c	FUNCTION_23
0x4002c44	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1479	write.c	FUNCTION_23
0x4002c4a	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1479	write.c	FUNCTION_23
0x4002c51	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1483	write.c	FUNCTION_23	FOR_1
0x4002c58	          0x488b00	                    mov rax, qword [rax]	      1483	write.c	FUNCTION_23	FOR_1
0x4002c5b	          0x488b00	                    mov rax, qword [rax]	      1483	write.c	FUNCTION_23	FOR_1
0x4002c5e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1483	write.c	FUNCTION_23	FOR_1
0x4002c65	      0xe975010000	                           jmp 0x4002ddf	      1483	write.c	FUNCTION_23	FOR_1
0x4002c6a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c71	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c74	          0x83f801	                              cmp eax, 1	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c77	            0x7414	                            je 0x4002c8d	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c79	      0xba00000000	                              mov edx, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c7e	      0xbed4050000	                          mov esi, 0x5d4	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c83	      0xbf00000000	                              mov edi, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c88	      0xe800000000	                          call 0x4002c8d	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4002c8d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4002c94	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4002c98	          0x4885c0	                           test rax, rax	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4002c9b	            0x745c	                            je 0x4002cf9	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4002c9d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002ca4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002ca8	            0x89c7	                            mov edi, eax	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002caa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cb1	        0x488d707c	                   lea rsi, [rax + 0x7c]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cb5	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cbc	    0x488d9538ffff	                   lea rdx, [rbp - 0xc8]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cc3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cc7	          0x4989c8	                             mov r8, rcx	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cca	          0x4889d1	                            mov rcx, rdx	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002ccd	            0x89fa	                            mov edx, edi	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002ccf	          0x4889c7	                            mov rdi, rax	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cd2	      0xe8c4faffff	                  call sym.compress_frag	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cd7	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4002cdd	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x4002ce4	     0xf882e040000	                            js 0x4003118	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x4002cea	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x4002cf0	            0x4898	                                    cdqe	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x4002cf2	    0x48018558ffff	            add qword [rbp - 0xa8], rax 	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x4002cf9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1501	write.c	FUNCTION_23	FOR_1
0x4002d00	        0x488d507c	                   lea rdx, [rax + 0x7c]	      1501	write.c	FUNCTION_23	FOR_1
0x4002d04	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1501	write.c	FUNCTION_23	FOR_1
0x4002d0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1501	write.c	FUNCTION_23	FOR_1
0x4002d0f	          0x4801d0	                            add rax, rdx	      1501	write.c	FUNCTION_23	FOR_1
0x4002d12	        0x488945a8	             mov qword [rbp - 0x58], rax	      1501	write.c	FUNCTION_23	FOR_1
0x4002d16	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1502	write.c	FUNCTION_23	FOR_1
0x4002d1d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1502	write.c	FUNCTION_23	FOR_1
0x4002d21	        0x488945b0	             mov qword [rbp - 0x50], rax	      1502	write.c	FUNCTION_23	FOR_1
0x4002d25	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1503	write.c	FUNCTION_23	FOR_1
0x4002d2c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1503	write.c	FUNCTION_23	FOR_1
0x4002d30	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1503	write.c	FUNCTION_23	FOR_1
0x4002d37	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4002d3f	            0x7914	                           jns 0x4002d55	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4002d41	      0xba00000000	                              mov edx, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4002d46	      0xbee0050000	                          mov esi, 0x5e0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4002d4b	      0xbf00000000	                              mov edi, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4002d50	      0xe800000000	                          call 0x4002d55	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4002d55	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x4002d5a	            0x7471	                            je 0x4002dcd	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x4002d5c	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x4002d64	            0x7467	                            je 0x4002dcd	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x4002d66	            0xeb4e	                           jmp 0x4002db6	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002d68	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d6c	            0x89c7	                            mov edi, eax	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d6e	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d75	    0x488d9538ffff	                   lea rdx, [rbp - 0xc8]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d7c	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d80	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d84	          0x4989c8	                             mov r8, rcx	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d87	          0x4889d1	                            mov rcx, rdx	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d8a	            0x89fa	                            mov edx, edi	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d8c	          0x4889c7	                            mov rdi, rax	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d8f	      0xe807faffff	                  call sym.compress_frag	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d94	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4002d9a	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x4002da1	     0xf8874030000	                            js 0x400311b	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x4002da7	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002dad	            0x4898	                                    cdqe	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002daf	    0x48018558ffff	            add qword [rbp - 0xa8], rax 	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002db6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002dbd	        0x488d50ff	                      lea rdx, [rax - 1]	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002dc1	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002dc8	          0x4885c0	                           test rax, rax	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002dcb	            0x759b	                           jne 0x4002d68	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4002dcd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1485	write.c	FUNCTION_23	FOR_1
0x4002dd4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1485	write.c	FUNCTION_23	FOR_1
0x4002dd8	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1485	write.c	FUNCTION_23	FOR_1
0x4002ddf	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1483	write.c	FUNCTION_23	FOR_1
0x4002de7	     0xf857dfeffff	                           jne 0x4002c6a	      1483	write.c	FUNCTION_23	FOR_1
0x4002ded	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002df4	        0x488945b8	             mov qword [rbp - 0x48], rax	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002df8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002dfc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002e00	          0x4889c2	                            mov rdx, rax	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002e03	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002e07	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002e0b	          0x4829c2	                            sub rdx, rax	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002e0e	          0x4889d0	                            mov rax, rdx	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002e11	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4002e17	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x4002e1d	            0x85c0	                           test eax, eax	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x4002e1f	     0xf8f1e010000	                            jg 0x4002f43	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x4002e25	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e2c	        0x488945c0	             mov qword [rbp - 0x40], rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e30	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e34	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e38	        0x488945c8	             mov qword [rbp - 0x38], rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e40	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e44	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e48	            0x750e	                           jne 0x4002e58	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e4a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e4e	         0xfb65050	           movzx edx, byte [rax + 0x50] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e52	          0x83ca02	                               or edx, 2	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e55	          0x885050	               mov byte [rax + 0x50], dl	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e58	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e5c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e60	          0x4889c2	                            mov rdx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e63	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e67	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e6b	          0x4801c2	                            add rdx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e6e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e72	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e76	          0x48f7d0	                                 not rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e79	          0x4821d0	                            and rax, rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e7c	          0x4889c2	                            mov rdx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e7f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e83	        0x48895018	             mov qword [rax + 0x18], rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e87	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e8b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e8f	          0x4889c2	                            mov rdx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e92	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e96	        0x488b4008	                mov rax, qword [rax + 8]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e9a	          0x4829c2	                            sub rdx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002e9d	          0x4889d0	                            mov rax, rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ea0	          0x4889c2	                            mov rdx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ea3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ea7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002eab	          0x4889c1	                            mov rcx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002eae	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002eb2	        0x488b4008	                mov rax, qword [rax + 8]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002eb6	          0x4829c1	                            sub rcx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002eb9	          0x4889c8	                            mov rax, rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ebc	          0x4839c2	                            cmp rdx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ebf	            0x7610	                           jbe 0x4002ed1	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ec1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ec5	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ec9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ecd	        0x48895018	             mov qword [rax + 0x18], rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ed1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ed5	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ed9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002edd	        0x48895010	             mov qword [rax + 0x10], rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4002ee1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4002ee8	          0x4889c7	                            mov rdi, rax	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4002eeb	      0xe800000000	                          call 0x4002ef0	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4002ef0	        0x488945d0	             mov qword [rbp - 0x30], rax	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4002ef4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1534	write.c	FUNCTION_23	FOR_2	IF_11
0x4002ef8	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1534	write.c	FUNCTION_23	FOR_2	IF_11
0x4002eff	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x4002f06	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x4002f0a	        0x48895038	             mov qword [rax + 0x38], rdx	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x4002f0e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1536	write.c	FUNCTION_23	FOR_2	IF_11
0x4002f12	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1536	write.c	FUNCTION_23	FOR_2	IF_11
0x4002f19	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f20	        0x488945d8	             mov qword [rbp - 0x28], rax	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f28	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f2c	          0x4889c2	                            mov rdx, rax	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f33	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f37	          0x4829c2	                            sub rdx, rax	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f3a	          0x4889d0	                            mov rax, rdx	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f3d	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4002f43	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x4002f49	            0x85c0	                           test eax, eax	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x4002f4b	            0x7f17	                            jg 0x4002f64	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x4002f4d	      0xbf00000000	                              mov edi, 0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4002f52	      0xe800000000	                          call 0x4002f57	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4002f57	          0x4889c7	                            mov rdi, rax	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4002f5a	      0xb800000000	                              mov eax, 0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4002f5f	      0xe800000000	                          call 0x4002f64	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4002f64	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1541	write.c	FUNCTION_23	FOR_2	CALL_22
0x4002f6b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1541	write.c	FUNCTION_23	FOR_2	CALL_22
0x4002f6f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1541	write.c	FUNCTION_23	FOR_2	CALL_22
0x4002f76	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4002f7d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4002f81	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4002f87	            0x4898	                                    cdqe	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4002f89	          0x4801c2	                            add rdx, rax	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4002f8c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4002f93	        0x48895018	             mov qword [rax + 0x18], rdx	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4002f97	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4002f9e	    0x488d951cffff	                   lea rdx, [rbp - 0xe4]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4002fa5	    0x488db540ffff	                   lea rsi, [rbp - 0xc0]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4002fac	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4002fb0	          0x4889c7	                            mov rdi, rax	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4002fb3	      0xe800000000	                          call 0x4002fb8	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4002fb8	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4002fbe	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x4002fc5	     0xf8853010000	                            js 0x400311e	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x4002fcb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1547	write.c	FUNCTION_23	FOR_2
0x4002fd2	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1547	write.c	FUNCTION_23	FOR_2
0x4002fd9	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1547	write.c	FUNCTION_23	FOR_2
0x4002fdd	    0x8b9520ffffff	             mov edx, dword [rbp - 0xe0]	      1547	write.c	FUNCTION_23	FOR_2
0x4002fe3	          0x4863d2	                         movsxd rdx, edx	      1547	write.c	FUNCTION_23	FOR_2
0x4002fe6	          0x4801ca	                            add rdx, rcx	      1547	write.c	FUNCTION_23	FOR_2
0x4002fe9	        0x48895010	             mov qword [rax + 0x10], rdx	      1547	write.c	FUNCTION_23	FOR_2
0x4002fed	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      1548	write.c	FUNCTION_23	FOR_2
0x4002ff3	            0x4898	                                    cdqe	      1548	write.c	FUNCTION_23	FOR_2
0x4002ff5	    0x48018558ffff	            add qword [rbp - 0xa8], rax 	      1548	write.c	FUNCTION_23	FOR_2
0x4002ffc	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x4003002	            0x85c0	                           test eax, eax	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x4003004	            0x7e23	                           jle 0x4003029	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x4003006	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x400300d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x4003011	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x4003017	            0xf7d8	                                 neg eax	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x4003019	            0x4898	                                    cdqe	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x400301b	          0x4801c2	                            add rdx, rax	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x400301e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x4003025	        0x48895018	             mov qword [rax + 0x18], rdx	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x4003029	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x4003030	     0xf85b7fdffff	                           jne 0x4002ded	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x4003036	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1560	write.c	FUNCTION_23	IF_16
0x400303d	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      1560	write.c	FUNCTION_23	IF_16
0x4003044	     0xf83d7000000	                           jae 0x4003121	      1560	write.c	FUNCTION_23	IF_16
0x400304a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1564	write.c	FUNCTION_23
0x4003051	          0x488b00	                    mov rax, qword [rax]	      1564	write.c	FUNCTION_23
0x4003054	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      1564	write.c	FUNCTION_23
0x400305b	          0x488910	                    mov qword [rax], rdx	      1564	write.c	FUNCTION_23
0x400305e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1565	write.c	FUNCTION_23
0x4003065	          0x488b00	                    mov rax, qword [rax]	      1565	write.c	FUNCTION_23
0x4003068	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1565	write.c	FUNCTION_23
0x400306f	        0x48895008	                mov qword [rax + 8], rdx	      1565	write.c	FUNCTION_23
0x4003073	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      1568	write.c	FUNCTION_23	CALL_26
0x400307a	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1568	write.c	FUNCTION_23	CALL_26
0x400307e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1568	write.c	FUNCTION_23	CALL_26
0x4003085	          0x4889ce	                            mov rsi, rcx	      1568	write.c	FUNCTION_23	CALL_26
0x4003088	          0x4889c7	                            mov rdi, rax	      1568	write.c	FUNCTION_23	CALL_26
0x400308b	      0xe800000000	                          call 0x4003090	      1568	write.c	FUNCTION_23	CALL_26
0x4003090	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1569	write.c	FUNCTION_23	CALL_27
0x4003097	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	      1569	write.c	FUNCTION_23	CALL_27
0x400309e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1569	write.c	FUNCTION_23	CALL_27
0x40030a5	          0x4889ce	                            mov rsi, rcx	      1569	write.c	FUNCTION_23	CALL_27
0x40030a8	          0x4889c7	                            mov rdi, rax	      1569	write.c	FUNCTION_23	CALL_27
0x40030ab	      0xe800000000	                          call 0x40030b0	      1569	write.c	FUNCTION_23	CALL_27
0x40030b0	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1569	write.c	FUNCTION_23	CALL_27
0x40030b6	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1570	write.c	FUNCTION_23	CALL_28
0x40030bd	            0x7514	                           jne 0x40030d3	      1570	write.c	FUNCTION_23	CALL_28
0x40030bf	      0xba00000000	                              mov edx, 0	      1570	write.c	FUNCTION_23	CALL_28
0x40030c4	      0xbe22060000	                          mov esi, 0x622	      1570	write.c	FUNCTION_23	CALL_28
0x40030c9	      0xbf00000000	                              mov edi, 0	      1570	write.c	FUNCTION_23	CALL_28
0x40030ce	      0xe800000000	                          call 0x40030d3	      1570	write.c	FUNCTION_23	CALL_28
0x40030d3	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1571	write.c	FUNCTION_23	IF_17
0x40030da	            0x7546	                           jne 0x4003122	      1571	write.c	FUNCTION_23	IF_17
0x40030dc	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030e0	        0x4883c001	                              add rax, 1	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030e4	      0xba00000000	                              mov edx, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030e9	          0x4889c6	                            mov rsi, rax	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030ec	      0xbf00000000	                              mov edi, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030f1	      0xb800000000	                              mov eax, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030f6	      0xe800000000	                          call 0x40030fb	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030fb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40030ff	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1574	write.c	FUNCTION_23	IF_17
0x4003106	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1574	write.c	FUNCTION_23	IF_17
0x400310a	          0x488910	                    mov qword [rax], rdx	      1574	write.c	FUNCTION_23	IF_17
0x400310d	            0xeb13	                           jmp 0x4003122	      1574	write.c	FUNCTION_23	IF_17
0x400310f	              0x90	                                     nop	      1443	write.c	FUNCTION_23	IF_1
0x4003110	            0xeb10	                           jmp 0x4003122	      1443	write.c	FUNCTION_23	IF_1
0x4003112	              0x90	                                     nop	      1447	write.c	FUNCTION_23	IF_2
0x4003113	            0xeb0d	                           jmp 0x4003122	      1447	write.c	FUNCTION_23	IF_2
0x4003115	              0x90	                                     nop	      1451	write.c	FUNCTION_23	IF_3
0x4003116	            0xeb0a	                           jmp 0x4003122	      1451	write.c	FUNCTION_23	IF_3
0x4003118	              0x90	                                     nop	      1498	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x4003119	            0xeb07	                           jmp 0x4003122	      1498	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x400311b	              0x90	                                     nop	      1512	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x400311c	            0xeb04	                           jmp 0x4003122	      1512	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x400311e	              0x90	                                     nop	      1545	write.c	FUNCTION_23	FOR_2	IF_13
0x400311f	            0xeb01	                           jmp 0x4003122	      1545	write.c	FUNCTION_23	FOR_2	IF_13
0x4003121	              0x90	                                     nop	      1561	write.c	FUNCTION_23	IF_16
0x4003122	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1576	write.c	FUNCTION_23
0x4003126	    0x644833042528	                xor rax, qword fs:[0x28]	      1576	write.c	FUNCTION_23
0x400312f	            0x7405	                            je 0x4003136	      1576	write.c	FUNCTION_23
0x4003131	      0xe800000000	                          call 0x4003136	      1576	write.c	FUNCTION_23
0x4003136	    0x4881c4080100	                          add rsp, 0x108	      1576	write.c	FUNCTION_23
0x400313d	              0x5b	                                 pop rbx	      1576	write.c	FUNCTION_23
0x400313e	              0x5d	                                 pop rbp	      1576	write.c	FUNCTION_23
0x400313f	              0xc3	                                     ret	      1576	write.c	FUNCTION_23
number_to_chars_littleendian	IF,1:SWITCH,0:WHILE,1:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	26
0x4005971	              0x55	                                push rbp	      3116	write.c	FUNCTION_38
0x4005972	          0x4889e5	                            mov rbp, rsp	      3116	write.c	FUNCTION_38
0x4005975	        0x4883ec20	                           sub rsp, 0x20	      3116	write.c	FUNCTION_38
0x4005979	        0x48897df8	                mov qword [rbp - 8], rdi	      3116	write.c	FUNCTION_38
0x400597d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3116	write.c	FUNCTION_38
0x4005981	          0x8955ec	             mov dword [rbp - 0x14], edx	      3116	write.c	FUNCTION_38
0x4005984	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3117	write.c	FUNCTION_38	IF_1
0x4005988	            0x7f2b	                            jg 0x40059b5	      3117	write.c	FUNCTION_38	IF_1
0x400598a	      0xba00000000	                              mov edx, 0	      3118	write.c	FUNCTION_38	CALL_1
0x400598f	      0xbe2e0c0000	                          mov esi, 0xc2e	      3118	write.c	FUNCTION_38	CALL_1
0x4005994	      0xbf00000000	                              mov edi, 0	      3118	write.c	FUNCTION_38	CALL_1
0x4005999	      0xe800000000	                          call 0x400599e	      3118	write.c	FUNCTION_38	CALL_1
0x400599e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3121	write.c	FUNCTION_38	WHILE_1
0x40059a2	        0x488d5001	                      lea rdx, [rax + 1]	      3121	write.c	FUNCTION_38	WHILE_1
0x40059a6	        0x488955f8	                mov qword [rbp - 8], rdx	      3121	write.c	FUNCTION_38	WHILE_1
0x40059aa	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3121	write.c	FUNCTION_38	WHILE_1
0x40059ae	            0x8810	                      mov byte [rax], dl	      3121	write.c	FUNCTION_38	WHILE_1
0x40059b0	      0x48c16df008	               shr qword [rbp - 0x10], 8	      3122	write.c	FUNCTION_38	WHILE_1
0x40059b5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3119	write.c	FUNCTION_38	WHILE_1
0x40059b8	          0x8d50ff	                      lea edx, [rax - 1]	      3119	write.c	FUNCTION_38	WHILE_1
0x40059bb	          0x8955ec	             mov dword [rbp - 0x14], edx	      3119	write.c	FUNCTION_38	WHILE_1
0x40059be	            0x85c0	                           test eax, eax	      3119	write.c	FUNCTION_38	WHILE_1
0x40059c0	            0x75dc	                           jne 0x400599e	      3119	write.c	FUNCTION_38	WHILE_1
0x40059c2	              0x90	                                     nop	      3124	write.c	FUNCTION_38
0x40059c3	              0xc9	                                   leave	      3124	write.c	FUNCTION_38
0x40059c4	              0xc3	                                     ret	      3124	write.c	FUNCTION_38
renumber_sections	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,0	20
0x4000724	              0x55	                                push rbp	       381	write.c	FUNCTION_9
0x4000725	          0x4889e5	                            mov rbp, rsp	       381	write.c	FUNCTION_9
0x4000728	        0x48897de8	             mov qword [rbp - 0x18], rdi	       381	write.c	FUNCTION_9
0x400072c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       381	write.c	FUNCTION_9
0x4000730	        0x488955d8	             mov qword [rbp - 0x28], rdx	       381	write.c	FUNCTION_9
0x4000734	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       382	write.c	FUNCTION_9
0x4000738	        0x488945f8	                mov qword [rbp - 8], rax	       382	write.c	FUNCTION_9
0x400073c	        0x488b45f8	                mov rax, qword [rbp - 8]	       384	write.c	FUNCTION_9
0x4000740	            0x8b00	                    mov eax, dword [rax]	       384	write.c	FUNCTION_9
0x4000742	            0x89c2	                            mov edx, eax	       384	write.c	FUNCTION_9
0x4000744	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       384	write.c	FUNCTION_9
0x4000748	          0x89500c	              mov dword [rax + 0xc], edx	       384	write.c	FUNCTION_9
0x400074b	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	write.c	FUNCTION_9
0x400074f	            0x8b00	                    mov eax, dword [rax]	       385	write.c	FUNCTION_9
0x4000751	          0x8d5001	                      lea edx, [rax + 1]	       385	write.c	FUNCTION_9
0x4000754	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	write.c	FUNCTION_9
0x4000758	            0x8910	                    mov dword [rax], edx	       385	write.c	FUNCTION_9
0x400075a	              0x90	                                     nop	       386	write.c	FUNCTION_9
0x400075b	              0x5d	                                 pop rbp	       386	write.c	FUNCTION_9
0x400075c	              0xc3	                                     ret	       386	write.c	FUNCTION_9
create_obj_attrs_section	IF,2:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,13	68
0x4003bd9	              0x55	                                push rbp	      1863	write.c	FUNCTION_30
0x4003bda	          0x4889e5	                            mov rbp, rsp	      1863	write.c	FUNCTION_30
0x4003bdd	        0x4883ec20	                           sub rsp, 0x20	      1863	write.c	FUNCTION_30
0x4003be1	    0x488b05000000	            mov rax, qword [0x04003be8] 	      1869	write.c	FUNCTION_30	CALL_1
0x4003be8	          0x4889c7	                            mov rdi, rax	      1869	write.c	FUNCTION_30	CALL_1
0x4003beb	      0xe800000000	                          call 0x4003bf0	      1869	write.c	FUNCTION_30	CALL_1
0x4003bf0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1869	write.c	FUNCTION_30	CALL_1
0x4003bf4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1870	write.c	FUNCTION_30	IF_1
0x4003bf9	     0xf84ff000000	                            je 0x4003cfe	      1870	write.c	FUNCTION_30	IF_1
0x4003bff	    0x488b05000000	            mov rax, qword [0x04003c06] 	      1873	write.c	FUNCTION_30	CALL_2
0x4003c06	        0x488b4008	                mov rax, qword [rax + 8]	      1873	write.c	FUNCTION_30	CALL_2
0x4003c0a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1873	write.c	FUNCTION_30	CALL_2
0x4003c11	    0x488b80280300	           mov rax, qword [rax + 0x328] 	      1873	write.c	FUNCTION_30	CALL_2
0x4003c18	        0x488945e0	             mov qword [rbp - 0x20], rax	      1873	write.c	FUNCTION_30	CALL_2
0x4003c1c	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1874	write.c	FUNCTION_30	IF_2
0x4003c21	            0x7508	                           jne 0x4003c2b	      1874	write.c	FUNCTION_30	IF_2
0x4003c23	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1875	write.c	FUNCTION_30	IF_2
0x4003c2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1876	write.c	FUNCTION_30	CALL_3
0x4003c2f	      0xbe00000000	                              mov esi, 0	      1876	write.c	FUNCTION_30	CALL_3
0x4003c34	          0x4889c7	                            mov rdi, rax	      1876	write.c	FUNCTION_30	CALL_3
0x4003c37	      0xe800000000	                          call 0x4003c3c	      1876	write.c	FUNCTION_30	CALL_3
0x4003c3c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1876	write.c	FUNCTION_30	CALL_3
0x4003c40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1877	write.c	FUNCTION_30	CALL_4
0x4003c44	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1877	write.c	FUNCTION_30	CALL_4
0x4003c4b	    0x488b15000000	            mov rdx, qword [0x04003c52] 	      1878	write.c	FUNCTION_30	CALL_5
0x4003c52	        0x488b5208	                mov rdx, qword [rdx + 8]	      1878	write.c	FUNCTION_30	CALL_5
0x4003c56	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1878	write.c	FUNCTION_30	CALL_5
0x4003c5d	    0x8b9238030000	           mov edx, dword [rdx + 0x338] 	      1878	write.c	FUNCTION_30	CALL_5
0x4003c63	          0x895004	                mov dword [rax + 4], edx	      1878	write.c	FUNCTION_30	CALL_5
0x4003c66	    0x488b05000000	            mov rax, qword [0x04003c6d] 	      1879	write.c	FUNCTION_30	CALL_6
0x4003c6d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1879	write.c	FUNCTION_30	CALL_6
0x4003c71	      0xba28000000	                           mov edx, 0x28	      1879	write.c	FUNCTION_30	CALL_6
0x4003c76	          0x4889ce	                            mov rsi, rcx	      1879	write.c	FUNCTION_30	CALL_6
0x4003c79	          0x4889c7	                            mov rdi, rax	      1879	write.c	FUNCTION_30	CALL_6
0x4003c7c	      0xe800000000	                          call 0x4003c81	      1879	write.c	FUNCTION_30	CALL_6
0x4003c81	      0xe800000000	                          call 0x4003c86	      1880	write.c	FUNCTION_30	CALL_7
0x4003c86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	write.c	FUNCTION_30	CALL_8
0x4003c8a	          0x4889c7	                            mov rdi, rax	      1881	write.c	FUNCTION_30	CALL_8
0x4003c8d	      0xe800000000	                          call 0x4003c92	      1881	write.c	FUNCTION_30	CALL_8
0x4003c92	        0x488945f8	                mov qword [rbp - 8], rax	      1881	write.c	FUNCTION_30	CALL_8
0x4003c96	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1882	write.c	FUNCTION_30	CALL_9
0x4003c9a	    0x488b05000000	            mov rax, qword [0x04003ca1] 	      1882	write.c	FUNCTION_30	CALL_9
0x4003ca1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1882	write.c	FUNCTION_30	CALL_9
0x4003ca5	          0x4889ce	                            mov rsi, rcx	      1882	write.c	FUNCTION_30	CALL_9
0x4003ca8	          0x4889c7	                            mov rdi, rax	      1882	write.c	FUNCTION_30	CALL_9
0x4003cab	      0xe800000000	                          call 0x4003cb0	      1882	write.c	FUNCTION_30	CALL_9
0x4003cb0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1884	write.c	FUNCTION_30	CALL_10
0x4003cb4	          0x4889c7	                            mov rdi, rax	      1884	write.c	FUNCTION_30	CALL_10
0x4003cb7	      0xe888fdffff	         call sym.subsegs_finish_section	      1884	write.c	FUNCTION_30	CALL_10
0x4003cbc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1885	write.c	FUNCTION_30	CALL_12
0x4003cc0	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1885	write.c	FUNCTION_30	CALL_12
0x4003cc7	          0x488b00	                    mov rax, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x4003cca	          0x488b00	                    mov rax, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x4003ccd	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1885	write.c	FUNCTION_30	CALL_12
0x4003cd1	      0xba00000000	                              mov edx, 0	      1885	write.c	FUNCTION_30	CALL_12
0x4003cd6	          0x4889ce	                            mov rsi, rcx	      1885	write.c	FUNCTION_30	CALL_12
0x4003cd9	          0x4889c7	                            mov rdi, rax	      1885	write.c	FUNCTION_30	CALL_12
0x4003cdc	      0xe800000000	                          call 0x4003ce1	      1885	write.c	FUNCTION_30	CALL_12
0x4003ce1	    0x488b05000000	            mov rax, qword [0x04003ce8] 	      1886	write.c	FUNCTION_30	CALL_13
0x4003ce8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1886	write.c	FUNCTION_30	CALL_13
0x4003cec	      0xba00000000	                              mov edx, 0	      1886	write.c	FUNCTION_30	CALL_13
0x4003cf1	          0x4889ce	                            mov rsi, rcx	      1886	write.c	FUNCTION_30	CALL_13
0x4003cf4	          0x4889c7	                            mov rdi, rax	      1886	write.c	FUNCTION_30	CALL_13
0x4003cf7	      0xe8eccfffff	                       call sym.size_seg	      1886	write.c	FUNCTION_30	CALL_13
0x4003cfc	            0xeb01	                           jmp 0x4003cff	      1886	write.c	FUNCTION_30	CALL_13
0x4003cfe	              0x90	                                     nop	      1871	write.c	FUNCTION_30	IF_1
0x4003cff	              0xc9	                                   leave	      1887	write.c	FUNCTION_30
0x4003d00	              0xc3	                                     ret	      1887	write.c	FUNCTION_30
generic_force_reloc	IF,2:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,1	32
0x4000608	              0x55	                                push rbp	       326	write.c	FUNCTION_5
0x4000609	          0x4889e5	                            mov rbp, rsp	       326	write.c	FUNCTION_5
0x400060c	        0x4883ec10	                           sub rsp, 0x10	       326	write.c	FUNCTION_5
0x4000610	        0x48897df8	                mov qword [rbp - 8], rdi	       326	write.c	FUNCTION_5
0x4000614	        0x488b45f8	                mov rax, qword [rbp - 8]	       327	write.c	FUNCTION_5	IF_1
0x4000618	          0x8b4050	            mov eax, dword [rax + 0x50] 	       327	write.c	FUNCTION_5	IF_1
0x400061b	      0x3da3050000	                          cmp eax, 0x5a3	       327	write.c	FUNCTION_5	IF_1
0x4000620	            0x740e	                            je 0x4000630	       327	write.c	FUNCTION_5	IF_1
0x4000622	        0x488b45f8	                mov rax, qword [rbp - 8]	       328	write.c	FUNCTION_5	IF_1
0x4000626	          0x8b4050	            mov eax, dword [rax + 0x50] 	       328	write.c	FUNCTION_5	IF_1
0x4000629	      0x3da4050000	                          cmp eax, 0x5a4	       328	write.c	FUNCTION_5	IF_1
0x400062e	            0x7507	                           jne 0x4000637	       328	write.c	FUNCTION_5	IF_1
0x4000630	      0xb801000000	                              mov eax, 1	       329	write.c	FUNCTION_5	IF_1
0x4000635	            0xeb37	                           jmp 0x400066e	       329	write.c	FUNCTION_5	IF_1
0x4000637	        0x488b45f8	                mov rax, qword [rbp - 8]	       331	write.c	FUNCTION_5	IF_2
0x400063b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       331	write.c	FUNCTION_5	IF_2
0x400063f	          0x4885c0	                           test rax, rax	       331	write.c	FUNCTION_5	IF_2
0x4000642	            0x7507	                           jne 0x400064b	       331	write.c	FUNCTION_5	IF_2
0x4000644	      0xb800000000	                              mov eax, 0	       332	write.c	FUNCTION_5	IF_2
0x4000649	            0xeb23	                           jmp 0x400066e	       332	write.c	FUNCTION_5	IF_2
0x400064b	        0x488b45f8	                mov rax, qword [rbp - 8]	       334	write.c	FUNCTION_5	CALL_1
0x400064f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       334	write.c	FUNCTION_5	CALL_1
0x4000653	          0x4885c0	                           test rax, rax	       334	write.c	FUNCTION_5	CALL_1
0x4000656	           0xf94c0	                                 sete al	       334	write.c	FUNCTION_5	CALL_1
0x4000659	           0xfb6d0	                           movzx edx, al	       334	write.c	FUNCTION_5	CALL_1
0x400065c	        0x488b45f8	                mov rax, qword [rbp - 8]	       334	write.c	FUNCTION_5	CALL_1
0x4000660	        0x488b4018	            mov rax, qword [rax + 0x18] 	       334	write.c	FUNCTION_5	CALL_1
0x4000664	            0x89d6	                            mov esi, edx	       334	write.c	FUNCTION_5	CALL_1
0x4000666	          0x4889c7	                            mov rdi, rax	       334	write.c	FUNCTION_5	CALL_1
0x4000669	      0xe800000000	                          call 0x400066e	       334	write.c	FUNCTION_5	CALL_1
0x400066e	              0xc9	                                   leave	       335	write.c	FUNCTION_5
0x400066f	              0xc3	                                     ret	       335	write.c	FUNCTION_5
print_fixup	IF,7:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,20	173
0x40059f0	              0x55	                                push rbp	      3137	write.c	FUNCTION_40
0x40059f1	          0x4889e5	                            mov rbp, rsp	      3137	write.c	FUNCTION_40
0x40059f4	              0x53	                                push rbx	      3137	write.c	FUNCTION_40
0x40059f5	        0x4883ec18	                           sub rsp, 0x18	      3137	write.c	FUNCTION_40
0x40059f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3137	write.c	FUNCTION_40
0x40059fd	    0xc70500000000	               mov dword [0x04005a07], 1	      3138	write.c	FUNCTION_40
0x4005a07	    0x488b05000000	            mov rax, qword [0x04005a0e] 	      3139	write.c	FUNCTION_40	CALL_1
0x4005a0e	          0x4889c1	                            mov rcx, rax	      3139	write.c	FUNCTION_40	CALL_1
0x4005a11	      0xba04000000	                              mov edx, 4	      3139	write.c	FUNCTION_40	CALL_1
0x4005a16	      0xbe01000000	                              mov esi, 1	      3139	write.c	FUNCTION_40	CALL_1
0x4005a1b	      0xbf00000000	                              mov edi, 0	      3139	write.c	FUNCTION_40	CALL_1
0x4005a20	      0xe800000000	                          call 0x4005a25	      3139	write.c	FUNCTION_40	CALL_1
0x4005a25	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3140	write.c	FUNCTION_40
0x4005a29	    0x488b05000000	            mov rax, qword [0x04005a30] 	      3140	write.c	FUNCTION_40
0x4005a30	      0xbe00000000	                              mov esi, 0	      3140	write.c	FUNCTION_40
0x4005a35	          0x4889c7	                            mov rdi, rax	      3140	write.c	FUNCTION_40
0x4005a38	      0xb800000000	                              mov eax, 0	      3140	write.c	FUNCTION_40
0x4005a3d	      0xe800000000	                          call 0x4005a42	      3140	write.c	FUNCTION_40
0x4005a42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3141	write.c	FUNCTION_40	CALL_2
0x4005a46	          0x8b4868	            mov ecx, dword [rax + 0x68] 	      3141	write.c	FUNCTION_40	CALL_2
0x4005a49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3141	write.c	FUNCTION_40	CALL_2
0x4005a4d	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      3141	write.c	FUNCTION_40	CALL_2
0x4005a51	    0x488b05000000	            mov rax, qword [0x04005a58] 	      3141	write.c	FUNCTION_40	CALL_2
0x4005a58	      0xbe00000000	                              mov esi, 0	      3141	write.c	FUNCTION_40	CALL_2
0x4005a5d	          0x4889c7	                            mov rdi, rax	      3141	write.c	FUNCTION_40	CALL_2
0x4005a60	      0xb800000000	                              mov eax, 0	      3141	write.c	FUNCTION_40	CALL_2
0x4005a65	      0xe800000000	                          call 0x4005a6a	      3141	write.c	FUNCTION_40	CALL_2
0x4005a6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3142	write.c	FUNCTION_40	IF_1
0x4005a6e	           0xfb600	                   movzx eax, byte [rax]	      3142	write.c	FUNCTION_40	IF_1
0x4005a71	          0x83e001	                              and eax, 1	      3142	write.c	FUNCTION_40	IF_1
0x4005a74	            0x84c0	                             test al, al	      3142	write.c	FUNCTION_40	IF_1
0x4005a76	            0x741e	                            je 0x4005a96	      3142	write.c	FUNCTION_40	IF_1
0x4005a78	    0x488b05000000	            mov rax, qword [0x04005a7f] 	      3143	write.c	FUNCTION_40	CALL_3
0x4005a7f	          0x4889c1	                            mov rcx, rax	      3143	write.c	FUNCTION_40	CALL_3
0x4005a82	      0xba06000000	                              mov edx, 6	      3143	write.c	FUNCTION_40	CALL_3
0x4005a87	      0xbe01000000	                              mov esi, 1	      3143	write.c	FUNCTION_40	CALL_3
0x4005a8c	      0xbf00000000	                              mov edi, 0	      3143	write.c	FUNCTION_40	CALL_3
0x4005a91	      0xe800000000	                          call 0x4005a96	      3143	write.c	FUNCTION_40	CALL_3
0x4005a96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3144	write.c	FUNCTION_40	IF_2
0x4005a9a	         0xfb64001	               movzx eax, byte [rax + 1]	      3144	write.c	FUNCTION_40	IF_2
0x4005a9e	            0x84c0	                             test al, al	      3144	write.c	FUNCTION_40	IF_2
0x4005aa0	            0x7424	                            je 0x4005ac6	      3144	write.c	FUNCTION_40	IF_2
0x4005aa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3145	write.c	FUNCTION_40	CALL_4
0x4005aa6	         0xfb64001	               movzx eax, byte [rax + 1]	      3145	write.c	FUNCTION_40	CALL_4
0x4005aaa	           0xfbed0	                           movsx edx, al	      3145	write.c	FUNCTION_40	CALL_4
0x4005aad	    0x488b05000000	            mov rax, qword [0x04005ab4] 	      3145	write.c	FUNCTION_40	CALL_4
0x4005ab4	      0xbe00000000	                              mov esi, 0	      3145	write.c	FUNCTION_40	CALL_4
0x4005ab9	          0x4889c7	                            mov rdi, rax	      3145	write.c	FUNCTION_40	CALL_4
0x4005abc	      0xb800000000	                              mov eax, 0	      3145	write.c	FUNCTION_40	CALL_4
0x4005ac1	      0xe800000000	                          call 0x4005ac6	      3145	write.c	FUNCTION_40	CALL_4
0x4005ac6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3146	write.c	FUNCTION_40	IF_3
0x4005aca	           0xfb600	                   movzx eax, byte [rax]	      3146	write.c	FUNCTION_40	IF_3
0x4005acd	          0x83e006	                              and eax, 6	      3146	write.c	FUNCTION_40	IF_3
0x4005ad0	            0x84c0	                             test al, al	      3146	write.c	FUNCTION_40	IF_3
0x4005ad2	            0x741e	                            je 0x4005af2	      3146	write.c	FUNCTION_40	IF_3
0x4005ad4	    0x488b05000000	            mov rax, qword [0x04005adb] 	      3151	write.c	FUNCTION_40	IF_3	CALL_6
0x4005adb	          0x4889c1	                            mov rcx, rax	      3151	write.c	FUNCTION_40	IF_3	CALL_6
0x4005ade	      0xba08000000	                              mov edx, 8	      3151	write.c	FUNCTION_40	IF_3	CALL_6
0x4005ae3	      0xbe01000000	                              mov esi, 1	      3151	write.c	FUNCTION_40	IF_3	CALL_6
0x4005ae8	      0xbf00000000	                              mov edi, 0	      3151	write.c	FUNCTION_40	IF_3	CALL_6
0x4005aed	      0xe800000000	                          call 0x4005af2	      3151	write.c	FUNCTION_40	IF_3	CALL_6
0x4005af2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3154	write.c	FUNCTION_40	IF_4
0x4005af6	           0xfb600	                   movzx eax, byte [rax]	      3154	write.c	FUNCTION_40	IF_4
0x4005af9	          0x83e008	                              and eax, 8	      3154	write.c	FUNCTION_40	IF_4
0x4005afc	            0x84c0	                             test al, al	      3154	write.c	FUNCTION_40	IF_4
0x4005afe	            0x741e	                            je 0x4005b1e	      3154	write.c	FUNCTION_40	IF_4
0x4005b00	    0x488b05000000	            mov rax, qword [0x04005b07] 	      3155	write.c	FUNCTION_40	CALL_7
0x4005b07	          0x4889c1	                            mov rcx, rax	      3155	write.c	FUNCTION_40	CALL_7
0x4005b0a	      0xba06000000	                              mov edx, 6	      3155	write.c	FUNCTION_40	CALL_7
0x4005b0f	      0xbe01000000	                              mov esi, 1	      3155	write.c	FUNCTION_40	CALL_7
0x4005b14	      0xbf00000000	                              mov edi, 0	      3155	write.c	FUNCTION_40	CALL_7
0x4005b19	      0xe800000000	                          call 0x4005b1e	      3155	write.c	FUNCTION_40	CALL_7
0x4005b1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3156	write.c	FUNCTION_40	IF_5
0x4005b22	           0xfb600	                   movzx eax, byte [rax]	      3156	write.c	FUNCTION_40	IF_5
0x4005b25	          0x83e020	                           and eax, 0x20	      3156	write.c	FUNCTION_40	IF_5
0x4005b28	            0x84c0	                             test al, al	      3156	write.c	FUNCTION_40	IF_5
0x4005b2a	            0x741e	                            je 0x4005b4a	      3156	write.c	FUNCTION_40	IF_5
0x4005b2c	    0x488b05000000	            mov rax, qword [0x04005b33] 	      3157	write.c	FUNCTION_40	CALL_8
0x4005b33	          0x4889c1	                            mov rcx, rax	      3157	write.c	FUNCTION_40	CALL_8
0x4005b36	      0xba05000000	                              mov edx, 5	      3157	write.c	FUNCTION_40	CALL_8
0x4005b3b	      0xbe01000000	                              mov esi, 1	      3157	write.c	FUNCTION_40	CALL_8
0x4005b40	      0xbf00000000	                              mov edi, 0	      3157	write.c	FUNCTION_40	CALL_8
0x4005b45	      0xe800000000	                          call 0x4005b4a	      3157	write.c	FUNCTION_40	CALL_8
0x4005b4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3158	write.c	FUNCTION_40	CALL_9
0x4005b4e	         0xfb64002	               movzx eax, byte [rax + 2]	      3158	write.c	FUNCTION_40	CALL_9
0x4005b52	           0xfb6d0	                           movzx edx, al	      3158	write.c	FUNCTION_40	CALL_9
0x4005b55	    0x488b05000000	            mov rax, qword [0x04005b5c] 	      3158	write.c	FUNCTION_40	CALL_9
0x4005b5c	      0xbe00000000	                              mov esi, 0	      3158	write.c	FUNCTION_40	CALL_9
0x4005b61	          0x4889c7	                            mov rdi, rax	      3158	write.c	FUNCTION_40	CALL_9
0x4005b64	      0xb800000000	                              mov eax, 0	      3158	write.c	FUNCTION_40	CALL_9
0x4005b69	      0xe800000000	                          call 0x4005b6e	      3158	write.c	FUNCTION_40	CALL_9
0x4005b6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3159	write.c	FUNCTION_40
0x4005b72	        0x488b4008	                mov rax, qword [rax + 8]	      3159	write.c	FUNCTION_40
0x4005b76	          0x4889c2	                            mov rdx, rax	      3159	write.c	FUNCTION_40
0x4005b79	    0x488b05000000	            mov rax, qword [0x04005b80] 	      3159	write.c	FUNCTION_40
0x4005b80	      0xbe00000000	                              mov esi, 0	      3159	write.c	FUNCTION_40
0x4005b85	          0x4889c7	                            mov rdi, rax	      3159	write.c	FUNCTION_40
0x4005b88	      0xb800000000	                              mov eax, 0	      3159	write.c	FUNCTION_40
0x4005b8d	      0xe800000000	                          call 0x4005b92	      3159	write.c	FUNCTION_40
0x4005b92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3163	write.c	FUNCTION_40
0x4005b96	        0x488b7058	            mov rsi, qword [rax + 0x58] 	      3163	write.c	FUNCTION_40
0x4005b9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3162	write.c	FUNCTION_40
0x4005b9e	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      3162	write.c	FUNCTION_40
0x4005ba2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3160	write.c	FUNCTION_40	CALL_10
0x4005ba6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3160	write.c	FUNCTION_40	CALL_10
0x4005baa	    0x488b05000000	            mov rax, qword [0x04005bb1] 	      3160	write.c	FUNCTION_40	CALL_10
0x4005bb1	          0x4989f0	                             mov r8, rsi	      3160	write.c	FUNCTION_40	CALL_10
0x4005bb4	      0xbe00000000	                              mov esi, 0	      3160	write.c	FUNCTION_40	CALL_10
0x4005bb9	          0x4889c7	                            mov rdi, rax	      3160	write.c	FUNCTION_40	CALL_10
0x4005bbc	      0xb800000000	                              mov eax, 0	      3160	write.c	FUNCTION_40	CALL_10
0x4005bc1	      0xe800000000	                          call 0x4005bc6	      3160	write.c	FUNCTION_40	CALL_10
0x4005bc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3165	write.c	FUNCTION_40
0x4005bca	          0x8b5850	            mov ebx, dword [rax + 0x50] 	      3165	write.c	FUNCTION_40
0x4005bcd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3164	write.c	FUNCTION_40	CALL_12
0x4005bd1	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3164	write.c	FUNCTION_40	CALL_12
0x4005bd4	            0x89c7	                            mov edi, eax	      3164	write.c	FUNCTION_40	CALL_12
0x4005bd6	      0xe800000000	                          call 0x4005bdb	      3164	write.c	FUNCTION_40	CALL_12
0x4005bdb	          0x4889c2	                            mov rdx, rax	      3164	write.c	FUNCTION_40	CALL_12
0x4005bde	    0x488b05000000	            mov rax, qword [0x04005be5] 	      3164	write.c	FUNCTION_40	CALL_12
0x4005be5	            0x89d9	                            mov ecx, ebx	      3164	write.c	FUNCTION_40	CALL_12
0x4005be7	      0xbe00000000	                              mov esi, 0	      3164	write.c	FUNCTION_40	CALL_12
0x4005bec	          0x4889c7	                            mov rdi, rax	      3164	write.c	FUNCTION_40	CALL_12
0x4005bef	      0xb800000000	                              mov eax, 0	      3164	write.c	FUNCTION_40	CALL_12
0x4005bf4	      0xe800000000	                          call 0x4005bf9	      3164	write.c	FUNCTION_40	CALL_12
0x4005bf9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3166	write.c	FUNCTION_40	IF_6
0x4005bfd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3166	write.c	FUNCTION_40	IF_6
0x4005c01	          0x4885c0	                           test rax, rax	      3166	write.c	FUNCTION_40	IF_6
0x4005c04	            0x744c	                            je 0x4005c52	      3166	write.c	FUNCTION_40	IF_6
0x4005c06	    0x488b05000000	            mov rax, qword [0x04005c0d] 	      3168	write.c	FUNCTION_40	IF_6	CALL_13
0x4005c0d	          0x4889c1	                            mov rcx, rax	      3168	write.c	FUNCTION_40	IF_6	CALL_13
0x4005c10	      0xba06000000	                              mov edx, 6	      3168	write.c	FUNCTION_40	IF_6	CALL_13
0x4005c15	      0xbe01000000	                              mov esi, 1	      3168	write.c	FUNCTION_40	IF_6	CALL_13
0x4005c1a	      0xbf00000000	                              mov edi, 0	      3168	write.c	FUNCTION_40	IF_6	CALL_13
0x4005c1f	      0xe800000000	                          call 0x4005c24	      3168	write.c	FUNCTION_40	IF_6	CALL_13
0x4005c24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3169	write.c	FUNCTION_40	IF_6	CALL_14
0x4005c28	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3169	write.c	FUNCTION_40	IF_6	CALL_14
0x4005c2c	    0x488b05000000	            mov rax, qword [0x04005c33] 	      3169	write.c	FUNCTION_40	IF_6	CALL_14
0x4005c33	          0x4889d6	                            mov rsi, rdx	      3169	write.c	FUNCTION_40	IF_6	CALL_14
0x4005c36	          0x4889c7	                            mov rdi, rax	      3169	write.c	FUNCTION_40	IF_6	CALL_14
0x4005c39	      0xe800000000	                          call 0x4005c3e	      3169	write.c	FUNCTION_40	IF_6	CALL_14
0x4005c3e	    0x488b05000000	            mov rax, qword [0x04005c45] 	      3170	write.c	FUNCTION_40	IF_6	CALL_15
0x4005c45	          0x4889c6	                            mov rsi, rax	      3170	write.c	FUNCTION_40	IF_6	CALL_15
0x4005c48	      0xbf3e000000	                           mov edi, 0x3e	      3170	write.c	FUNCTION_40	IF_6	CALL_15
0x4005c4d	      0xe800000000	                          call 0x4005c52	      3170	write.c	FUNCTION_40	IF_6	CALL_15
0x4005c52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3172	write.c	FUNCTION_40	IF_7
0x4005c56	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3172	write.c	FUNCTION_40	IF_7
0x4005c5a	          0x4885c0	                           test rax, rax	      3172	write.c	FUNCTION_40	IF_7
0x4005c5d	            0x744c	                            je 0x4005cab	      3172	write.c	FUNCTION_40	IF_7
0x4005c5f	    0x488b05000000	            mov rax, qword [0x04005c66] 	      3174	write.c	FUNCTION_40	IF_7	CALL_16
0x4005c66	          0x4889c1	                            mov rcx, rax	      3174	write.c	FUNCTION_40	IF_7	CALL_16
0x4005c69	      0xba06000000	                              mov edx, 6	      3174	write.c	FUNCTION_40	IF_7	CALL_16
0x4005c6e	      0xbe01000000	                              mov esi, 1	      3174	write.c	FUNCTION_40	IF_7	CALL_16
0x4005c73	      0xbf00000000	                              mov edi, 0	      3174	write.c	FUNCTION_40	IF_7	CALL_16
0x4005c78	      0xe800000000	                          call 0x4005c7d	      3174	write.c	FUNCTION_40	IF_7	CALL_16
0x4005c7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3175	write.c	FUNCTION_40	IF_7	CALL_17
0x4005c81	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3175	write.c	FUNCTION_40	IF_7	CALL_17
0x4005c85	    0x488b05000000	            mov rax, qword [0x04005c8c] 	      3175	write.c	FUNCTION_40	IF_7	CALL_17
0x4005c8c	          0x4889d6	                            mov rsi, rdx	      3175	write.c	FUNCTION_40	IF_7	CALL_17
0x4005c8f	          0x4889c7	                            mov rdi, rax	      3175	write.c	FUNCTION_40	IF_7	CALL_17
0x4005c92	      0xe800000000	                          call 0x4005c97	      3175	write.c	FUNCTION_40	IF_7	CALL_17
0x4005c97	    0x488b05000000	            mov rax, qword [0x04005c9e] 	      3176	write.c	FUNCTION_40	IF_7	CALL_18
0x4005c9e	          0x4889c6	                            mov rsi, rax	      3176	write.c	FUNCTION_40	IF_7	CALL_18
0x4005ca1	      0xbf3e000000	                           mov edi, 0x3e	      3176	write.c	FUNCTION_40	IF_7	CALL_18
0x4005ca6	      0xe800000000	                          call 0x4005cab	      3176	write.c	FUNCTION_40	IF_7	CALL_18
0x4005cab	    0x488b05000000	            mov rax, qword [0x04005cb2] 	      3178	write.c	FUNCTION_40	CALL_19
0x4005cb2	          0x4889c6	                            mov rsi, rax	      3178	write.c	FUNCTION_40	CALL_19
0x4005cb5	      0xbf0a000000	                            mov edi, 0xa	      3178	write.c	FUNCTION_40	CALL_19
0x4005cba	      0xe800000000	                          call 0x4005cbf	      3178	write.c	FUNCTION_40	CALL_19
0x4005cbf	              0x90	                                     nop	      3182	write.c	FUNCTION_40
0x4005cc0	        0x4883c418	                           add rsp, 0x18	      3182	write.c	FUNCTION_40
0x4005cc4	              0x5b	                                 pop rbx	      3182	write.c	FUNCTION_40
0x4005cc5	              0x5d	                                 pop rbp	      3182	write.c	FUNCTION_40
0x4005cc6	              0xc3	                                     ret	      3182	write.c	FUNCTION_40
compress_frag	IF,4:SWITCH,0:WHILE,1:functions,0:FOR,0:DO,0:ELSE,0:CALL,10	164
0x400279b	              0x55	                                push rbp	      1379	write.c	FUNCTION_22
0x400279c	          0x4889e5	                            mov rbp, rsp	      1379	write.c	FUNCTION_22
0x400279f	        0x4883c480	             add rsp, 0xffffffffffffff80	      1379	write.c	FUNCTION_22
0x40027a3	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1379	write.c	FUNCTION_22
0x40027a7	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1379	write.c	FUNCTION_22
0x40027ab	          0x89559c	             mov dword [rbp - 0x64], edx	      1379	write.c	FUNCTION_22
0x40027ae	        0x48894d90	             mov qword [rbp - 0x70], rcx	      1379	write.c	FUNCTION_22
0x40027b2	        0x4c894588	              mov qword [rbp - 0x78], r8	      1379	write.c	FUNCTION_22
0x40027b6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	write.c	FUNCTION_22
0x40027bf	        0x488945f8	                mov qword [rbp - 8], rax	      1379	write.c	FUNCTION_22
0x40027c3	            0x31c0	                            xor eax, eax	      1379	write.c	FUNCTION_22
0x40027c5	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      1381	write.c	FUNCTION_22
0x40027cc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1382	write.c	FUNCTION_22
0x40027d0	          0x488b00	                    mov rax, qword [rax]	      1382	write.c	FUNCTION_22
0x40027d3	        0x488945d0	             mov qword [rbp - 0x30], rax	      1382	write.c	FUNCTION_22
0x40027d7	      0xe9f1010000	                           jmp 0x40029cd	      1388	write.c	FUNCTION_22	WHILE_1
0x40027dc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027e0	        0x488945d8	             mov qword [rbp - 0x28], rax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027e8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027ec	          0x4889c2	                            mov rdx, rax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027f3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027f7	          0x4829c2	                            sub rdx, rax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027fa	          0x4889d0	                            mov rax, rdx	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40027fd	          0x8945bc	             mov dword [rbp - 0x44], eax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4002800	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x4002803	            0x85c0	                           test eax, eax	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x4002805	     0xf8f12010000	                            jg 0x400291d	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x400280b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400280f	        0x488945e0	             mov qword [rbp - 0x20], rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002813	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002817	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400281b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400281f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002823	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002827	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400282b	            0x750e	                           jne 0x400283b	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400282d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002831	         0xfb65050	           movzx edx, byte [rax + 0x50] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002835	          0x83ca02	                               or edx, 2	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002838	          0x885050	               mov byte [rax + 0x50], dl	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400283b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400283f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002843	          0x4889c2	                            mov rdx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002846	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400284a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400284e	          0x4801c2	                            add rdx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002851	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002855	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002859	          0x48f7d0	                                 not rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400285c	          0x4821d0	                            and rax, rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400285f	          0x4889c2	                            mov rdx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002862	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002866	        0x48895018	             mov qword [rax + 0x18], rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400286a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400286e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002872	          0x4889c2	                            mov rdx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002875	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002879	        0x488b4008	                mov rax, qword [rax + 8]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400287d	          0x4829c2	                            sub rdx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002880	          0x4889d0	                            mov rax, rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002883	          0x4889c2	                            mov rdx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002886	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400288a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400288e	          0x4889c1	                            mov rcx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002891	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002895	        0x488b4008	                mov rax, qword [rax + 8]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4002899	          0x4829c1	                            sub rcx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400289c	          0x4889c8	                            mov rax, rcx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400289f	          0x4839c2	                            cmp rdx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028a2	            0x7610	                           jbe 0x40028b4	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028a8	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028b0	        0x48895018	             mov qword [rax + 0x18], rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028b8	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028c0	        0x48895010	             mov qword [rax + 0x10], rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40028c4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x40028c8	          0x4889c7	                            mov rdi, rax	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x40028cb	      0xe800000000	                          call 0x40028d0	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x40028d0	        0x488945d0	             mov qword [rbp - 0x30], rax	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x40028d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1397	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028d8	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1397	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028df	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028e3	          0x488b00	                    mov rax, qword [rax]	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028e6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028ea	        0x48895038	             mov qword [rax + 0x38], rdx	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028ee	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1399	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028f2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1399	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028f6	          0x488910	                    mov qword [rax], rdx	      1399	write.c	FUNCTION_22	WHILE_1	IF_1
0x40028f9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40028fd	        0x488945f0	             mov qword [rbp - 0x10], rax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4002901	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4002905	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4002909	          0x4889c2	                            mov rdx, rax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x400290c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4002910	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4002914	          0x4829c2	                            sub rdx, rax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4002917	          0x4889d0	                            mov rax, rdx	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x400291a	          0x8945bc	             mov dword [rbp - 0x44], eax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x400291d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x4002920	            0x85c0	                           test eax, eax	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x4002922	            0x7f17	                            jg 0x400293b	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x4002924	      0xbf00000000	                              mov edi, 0	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x4002929	      0xe800000000	                          call 0x400292e	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x400292e	          0x4889c7	                            mov rdi, rax	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x4002931	      0xb800000000	                              mov eax, 0	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x4002936	      0xe800000000	                          call 0x400293b	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x400293b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1404	write.c	FUNCTION_22	WHILE_1	CALL_7
0x400293f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1404	write.c	FUNCTION_22	WHILE_1	CALL_7
0x4002943	        0x488945c8	             mov qword [rbp - 0x38], rax	      1404	write.c	FUNCTION_22	WHILE_1	CALL_7
0x4002947	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x400294b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x400294f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x4002952	            0x4898	                                    cdqe	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x4002954	          0x4801c2	                            add rdx, rax	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x4002957	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x400295b	        0x48895018	             mov qword [rax + 0x18], rdx	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x400295f	        0x488d7dbc	                   lea rdi, [rbp - 0x44]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4002963	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4002967	        0x488d559c	                   lea rdx, [rbp - 0x64]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x400296b	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x400296f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4002973	          0x4989f8	                             mov r8, rdi	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4002976	          0x4889c7	                            mov rdi, rax	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4002979	      0xe800000000	                          call 0x400297e	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x400297e	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4002981	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x4002985	            0x7907	                           jns 0x400298e	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x4002987	      0xb8ffffffff	                     mov eax, 0xffffffff	      1409	write.c	FUNCTION_22	WHILE_1	IF_3
0x400298c	            0xeb4d	                           jmp 0x40029db	      1409	write.c	FUNCTION_22	WHILE_1	IF_3
0x400298e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1411	write.c	FUNCTION_22	WHILE_1
0x4002992	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1411	write.c	FUNCTION_22	WHILE_1
0x4002996	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1411	write.c	FUNCTION_22	WHILE_1
0x4002999	            0x4898	                                    cdqe	      1411	write.c	FUNCTION_22	WHILE_1
0x400299b	          0x4801c2	                            add rdx, rax	      1411	write.c	FUNCTION_22	WHILE_1
0x400299e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1411	write.c	FUNCTION_22	WHILE_1
0x40029a2	        0x48895010	             mov qword [rax + 0x10], rdx	      1411	write.c	FUNCTION_22	WHILE_1
0x40029a6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1412	write.c	FUNCTION_22	WHILE_1
0x40029a9	           0x145c0	             add dword [rbp - 0x40], eax	      1412	write.c	FUNCTION_22	WHILE_1
0x40029ac	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x40029af	            0x85c0	                           test eax, eax	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x40029b1	            0x7e1a	                           jle 0x40029cd	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x40029b3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029b7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029bb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029be	            0xf7d8	                                 neg eax	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029c0	            0x4898	                                    cdqe	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029c2	          0x4801c2	                            add rdx, rax	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029c5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029c9	        0x48895018	             mov qword [rax + 0x18], rdx	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40029cd	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1388	write.c	FUNCTION_22	WHILE_1
0x40029d0	            0x85c0	                           test eax, eax	      1388	write.c	FUNCTION_22	WHILE_1
0x40029d2	     0xf8f04feffff	                            jg 0x40027dc	      1388	write.c	FUNCTION_22	WHILE_1
0x40029d8	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1419	write.c	FUNCTION_22
0x40029db	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1420	write.c	FUNCTION_22
0x40029df	    0x644833342528	                xor rsi, qword fs:[0x28]	      1420	write.c	FUNCTION_22
0x40029e8	            0x7405	                            je 0x40029ef	      1420	write.c	FUNCTION_22
0x40029ea	      0xe800000000	                          call 0x40029ef	      1420	write.c	FUNCTION_22
0x40029ef	              0xc9	                                   leave	      1420	write.c	FUNCTION_22
0x40029f0	              0xc3	                                     ret	      1420	write.c	FUNCTION_22
fix_segment	IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,2	18
0x4002070	              0x55	                                push rbp	      1151	write.c	FUNCTION_18
0x4002071	          0x4889e5	                            mov rbp, rsp	      1151	write.c	FUNCTION_18
0x4002074	        0x4883ec30	                           sub rsp, 0x30	      1151	write.c	FUNCTION_18
0x4002078	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1151	write.c	FUNCTION_18
0x400207c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1151	write.c	FUNCTION_18
0x4002080	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1151	write.c	FUNCTION_18
0x4002084	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1152	write.c	FUNCTION_18	CALL_1
0x4002088	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1152	write.c	FUNCTION_18	CALL_1
0x400208f	        0x488945f8	                mov qword [rbp - 8], rax	      1152	write.c	FUNCTION_18	CALL_1
0x4002093	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	write.c	FUNCTION_18	CALL_2
0x4002097	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1154	write.c	FUNCTION_18	CALL_2
0x400209b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1154	write.c	FUNCTION_18	CALL_2
0x400209f	          0x4889d6	                            mov rsi, rdx	      1154	write.c	FUNCTION_18	CALL_2
0x40020a2	          0x4889c7	                            mov rdi, rax	      1154	write.c	FUNCTION_18	CALL_2
0x40020a5	      0xe86ff5ffff	                  call sym.fixup_segment	      1154	write.c	FUNCTION_18	CALL_2
0x40020aa	              0x90	                                     nop	      1155	write.c	FUNCTION_18
0x40020ab	              0xc9	                                   leave	      1155	write.c	FUNCTION_18
0x40020ac	              0xc3	                                     ret	      1155	write.c	FUNCTION_18
fix_new_exp	IF,0:SWITCH,1:WHILE,0:functions,0:FOR,0:DO,0:ELSE,0:CALL,6	98
0x4000438	              0x55	                                push rbp	       254	write.c	FUNCTION_3
0x4000439	          0x4889e5	                            mov rbp, rsp	       254	write.c	FUNCTION_3
0x400043c	        0x4883ec40	                           sub rsp, 0x40	       254	write.c	FUNCTION_3
0x4000440	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       254	write.c	FUNCTION_3
0x4000444	          0x8975d4	             mov dword [rbp - 0x2c], esi	       254	write.c	FUNCTION_3
0x4000447	          0x8955d0	             mov dword [rbp - 0x30], edx	       254	write.c	FUNCTION_3
0x400044a	        0x48894dc8	             mov qword [rbp - 0x38], rcx	       254	write.c	FUNCTION_3
0x400044e	        0x448945c4	             mov dword [rbp - 0x3c], r8d	       254	write.c	FUNCTION_3
0x4000452	        0x44894dc0	             mov dword [rbp - 0x40], r9d	       254	write.c	FUNCTION_3
0x4000456	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       255	write.c	FUNCTION_3
0x400045e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       256	write.c	FUNCTION_3
0x4000466	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       257	write.c	FUNCTION_3
0x400046e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       259	write.c	FUNCTION_3	SWITCH_1
0x4000472	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       259	write.c	FUNCTION_3	SWITCH_1
0x4000476	           0xfb6c0	                           movzx eax, al	       259	write.c	FUNCTION_3	SWITCH_1
0x4000479	          0x83f814	                           cmp eax, 0x14	       259	write.c	FUNCTION_3	SWITCH_1
0x400047c	     0xf87e9000000	                            ja 0x400056b	       259	write.c	FUNCTION_3	SWITCH_1
0x4000482	            0x89c0	                            mov eax, eax	       259	write.c	FUNCTION_3	SWITCH_1
0x4000484	    0x488b04c50000	                  mov rax, qword [rax*8]	       259	write.c	FUNCTION_3	SWITCH_1
0x400048c	            0xffe0	                                 jmp rax	       259	write.c	FUNCTION_3	SWITCH_1
0x400048e	      0xbf00000000	                              mov edi, 0	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000493	      0xe800000000	                          call 0x4000498	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000498	          0x4889c7	                            mov rdi, rax	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x400049b	      0xb800000000	                              mov eax, 0	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40004a0	      0xe800000000	                          call 0x40004a5	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40004a5	      0xe9d4000000	                           jmp 0x400057e	       266	write.c	FUNCTION_3	SWITCH_1
0x40004aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x40004ae	          0x4889c7	                            mov rdi, rax	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x40004b1	      0xe800000000	                          call 0x40004b6	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x40004b6	        0x488945f8	                mov qword [rbp - 8], rax	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x40004ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       274	write.c	FUNCTION_3	SWITCH_1
0x40004be	        0xc6401803	                mov byte [rax + 0x18], 3	       274	write.c	FUNCTION_3	SWITCH_1
0x40004c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       275	write.c	FUNCTION_3	SWITCH_1
0x40004c6	    0x48c740080000	                  mov qword [rax + 8], 0	       275	write.c	FUNCTION_3	SWITCH_1
0x40004ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	write.c	FUNCTION_3	SWITCH_1
0x40004d2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       276	write.c	FUNCTION_3	SWITCH_1
0x40004d6	          0x488910	                    mov qword [rax], rdx	       276	write.c	FUNCTION_3	SWITCH_1
0x40004d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       277	write.c	FUNCTION_3	SWITCH_1
0x40004dd	    0x48c740100000	               mov qword [rax + 0x10], 0	       277	write.c	FUNCTION_3	SWITCH_1
0x40004e5	        0x448b45c0	             mov r8d, dword [rbp - 0x40]	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x40004e9	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x40004ec	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x40004f0	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x40004f3	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x40004f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x40004fa	          0x4589c1	                            mov r9d, r8d	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x40004fd	          0x4189f8	                            mov r8d, edi	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000500	          0x4889c7	                            mov rdi, rax	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000503	      0xe800000000	                          call 0x4000508	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000508	      0xe9a1000000	                           jmp 0x40005ae	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x400050d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       283	write.c	FUNCTION_3	SWITCH_1
0x4000511	          0x488b00	                    mov rax, qword [rax]	       283	write.c	FUNCTION_3	SWITCH_1
0x4000514	        0x488945e0	             mov qword [rbp - 0x20], rax	       283	write.c	FUNCTION_3	SWITCH_1
0x4000518	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       284	write.c	FUNCTION_3	SWITCH_1
0x400051c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       284	write.c	FUNCTION_3	SWITCH_1
0x4000520	        0x488945f0	             mov qword [rbp - 0x10], rax	       284	write.c	FUNCTION_3	SWITCH_1
0x4000524	    0xc745c03e0000	           mov dword [rbp - 0x40], 0x3e 	       285	write.c	FUNCTION_3	SWITCH_1
0x400052b	            0xeb51	                           jmp 0x400057e	       286	write.c	FUNCTION_3	SWITCH_1
0x400052d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       289	write.c	FUNCTION_3	SWITCH_1
0x4000531	          0x488b00	                    mov rax, qword [rax]	       289	write.c	FUNCTION_3	SWITCH_1
0x4000534	        0x488945e8	             mov qword [rbp - 0x18], rax	       289	write.c	FUNCTION_3	SWITCH_1
0x4000538	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       290	write.c	FUNCTION_3	SWITCH_1
0x400053c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       290	write.c	FUNCTION_3	SWITCH_1
0x4000540	        0x488945f0	             mov qword [rbp - 0x10], rax	       290	write.c	FUNCTION_3	SWITCH_1
0x4000544	            0xeb38	                           jmp 0x400057e	       291	write.c	FUNCTION_3	SWITCH_1
0x4000546	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       294	write.c	FUNCTION_3	SWITCH_1
0x400054a	        0x488b4008	                mov rax, qword [rax + 8]	       294	write.c	FUNCTION_3	SWITCH_1
0x400054e	        0x488945e8	             mov qword [rbp - 0x18], rax	       294	write.c	FUNCTION_3	SWITCH_1
0x4000552	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       297	write.c	FUNCTION_3	SWITCH_1
0x4000556	          0x488b00	                    mov rax, qword [rax]	       297	write.c	FUNCTION_3	SWITCH_1
0x4000559	        0x488945e0	             mov qword [rbp - 0x20], rax	       297	write.c	FUNCTION_3	SWITCH_1
0x400055d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       300	write.c	FUNCTION_3	SWITCH_1
0x4000561	        0x488b4010	            mov rax, qword [rax + 0x10] 	       300	write.c	FUNCTION_3	SWITCH_1
0x4000565	        0x488945f0	             mov qword [rbp - 0x10], rax	       300	write.c	FUNCTION_3	SWITCH_1
0x4000569	            0xeb13	                           jmp 0x400057e	       301	write.c	FUNCTION_3	SWITCH_1
0x400056b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x400056f	          0x4889c7	                            mov rdi, rax	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4000572	      0xe800000000	                          call 0x4000577	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4000577	        0x488945e0	             mov qword [rbp - 0x20], rax	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x400057b	            0xeb01	                           jmp 0x400057e	       305	write.c	FUNCTION_3	SWITCH_1
0x400057d	              0x90	                                     nop	       262	write.c	FUNCTION_3	SWITCH_1
0x400057e	        0x4c8b4df0	              mov r9, qword [rbp - 0x10]	       308	write.c	FUNCTION_3	CALL_6
0x4000582	        0x4c8b45e8	              mov r8, qword [rbp - 0x18]	       308	write.c	FUNCTION_3	CALL_6
0x4000586	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       308	write.c	FUNCTION_3	CALL_6
0x400058a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       308	write.c	FUNCTION_3	CALL_6
0x400058d	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       308	write.c	FUNCTION_3	CALL_6
0x4000590	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	write.c	FUNCTION_3	CALL_6
0x4000594	        0x4883ec08	                              sub rsp, 8	       308	write.c	FUNCTION_3	CALL_6
0x4000598	            0x6a00	                                  push 0	       308	write.c	FUNCTION_3	CALL_6
0x400059a	          0x8b7dc0	             mov edi, dword [rbp - 0x40]	       308	write.c	FUNCTION_3	CALL_6
0x400059d	              0x57	                                push rdi	       308	write.c	FUNCTION_3	CALL_6
0x400059e	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	       308	write.c	FUNCTION_3	CALL_6
0x40005a1	              0x57	                                push rdi	       308	write.c	FUNCTION_3	CALL_6
0x40005a2	          0x4889c7	                            mov rdi, rax	       308	write.c	FUNCTION_3	CALL_6
0x40005a5	      0xe8b6faffff	               call sym.fix_new_internal	       308	write.c	FUNCTION_3	CALL_6
0x40005aa	        0x4883c420	                           add rsp, 0x20	       308	write.c	FUNCTION_3	CALL_6
0x40005ae	              0xc9	                                   leave	       310	write.c	FUNCTION_3
0x40005af	              0xc3	                                     ret	       310	write.c	FUNCTION_3
write_contents	IF,11:SWITCH,0:WHILE,1:functions,0:FOR,3:DO,0:ELSE,2:CALL,29	325
0x4003140	              0x55	                                push rbp	      1596	write.c	FUNCTION_25
0x4003141	          0x4889e5	                            mov rbp, rsp	      1596	write.c	FUNCTION_25
0x4003144	            0x4156	                                push r14	      1596	write.c	FUNCTION_25
0x4003146	            0x4155	                                push r13	      1596	write.c	FUNCTION_25
0x4003148	            0x4154	                                push r12	      1596	write.c	FUNCTION_25
0x400314a	              0x53	                                push rbx	      1596	write.c	FUNCTION_25
0x400314b	    0x4881ec800100	                          sub rsp, 0x180	      1596	write.c	FUNCTION_25
0x4003152	    0x4889bd78feff	            mov qword [rbp - 0x188], rdi	      1596	write.c	FUNCTION_25
0x4003159	    0x4889b570feff	            mov qword [rbp - 0x190], rsi	      1596	write.c	FUNCTION_25
0x4003160	    0x48899568feff	            mov qword [rbp - 0x198], rdx	      1596	write.c	FUNCTION_25
0x4003167	    0x64488b042528	                mov rax, qword fs:[0x28]	      1596	write.c	FUNCTION_25
0x4003170	        0x488945d8	             mov qword [rbp - 0x28], rax	      1596	write.c	FUNCTION_25
0x4003174	            0x31c0	                            xor eax, eax	      1596	write.c	FUNCTION_25
0x4003176	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1597	write.c	FUNCTION_25	CALL_1
0x400317d	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1597	write.c	FUNCTION_25	CALL_1
0x4003184	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      1597	write.c	FUNCTION_25	CALL_1
0x400318b	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      1598	write.c	FUNCTION_25
0x4003196	    0x4883bdb0feff	              cmp qword [rbp - 0x150], 0	      1602	write.c	FUNCTION_25	IF_1
0x400319e	     0xf84bf050000	                            je 0x4003763	      1602	write.c	FUNCTION_25	IF_1
0x40031a4	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1603	write.c	FUNCTION_25	IF_1
0x40031ab	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1603	write.c	FUNCTION_25	IF_1
0x40031ae	      0x2500010000	                          and eax, 0x100	      1603	write.c	FUNCTION_25	IF_1
0x40031b3	            0x85c0	                           test eax, eax	      1603	write.c	FUNCTION_25	IF_1
0x40031b5	     0xf84a8050000	                            je 0x4003763	      1603	write.c	FUNCTION_25	IF_1
0x40031bb	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1606	write.c	FUNCTION_25	FOR_1
0x40031c2	          0x488b00	                    mov rax, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x40031c5	          0x488b00	                    mov rax, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x40031c8	    0x48898598feff	            mov qword [rbp - 0x168], rax	      1606	write.c	FUNCTION_25	FOR_1
0x40031cf	      0xe97f050000	                           jmp 0x4003753	      1606	write.c	FUNCTION_25	FOR_1
0x40031d4	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031db	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031de	          0x83f801	                              cmp eax, 1	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031e1	            0x7423	                            je 0x4003206	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031e3	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031ea	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031ed	          0x83f80a	                            cmp eax, 0xa	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031f0	            0x7414	                            je 0x4003206	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031f2	      0xba00000000	                              mov edx, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031f7	      0xbe4f060000	                          mov esi, 0x64f	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40031fc	      0xbf00000000	                              mov edi, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4003201	      0xe800000000	                          call 0x4003206	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4003206	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x400320d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4003211	          0x4885c0	                           test rax, rax	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4003214	     0xf84c4000000	                            je 0x40032de	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x400321a	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1620	write.c	FUNCTION_25	FOR_1	IF_2
0x4003221	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1620	write.c	FUNCTION_25	FOR_1	IF_2
0x4003225	          0x4889c1	                            mov rcx, rax	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4003228	    0x488b9590feff	            mov rdx, qword [rbp - 0x170]	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x400322f	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1619	write.c	FUNCTION_25	FOR_1	IF_2
0x4003236	        0x488d787c	                   lea rdi, [rax + 0x7c]	      1619	write.c	FUNCTION_25	FOR_1	IF_2
0x400323a	    0x488b05000000	            mov rax, qword [0x04003241] 	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4003241	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4003248	          0x4989c8	                             mov r8, rcx	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x400324b	          0x4889d1	                            mov rcx, rdx	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x400324e	          0x4889fa	                            mov rdx, rdi	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4003251	          0x4889c7	                            mov rdi, rax	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4003254	      0xe800000000	                          call 0x4003259	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4003259	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x400325f	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 0	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4003266	            0x7564	                           jne 0x40032cc	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4003268	      0xe800000000	                          call 0x400326d	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400326d	            0x89c7	                            mov edi, eax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400326f	      0xe800000000	                          call 0x4003274	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4003274	          0x4989c6	                            mov r14, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4003277	    0x488b05000000	            mov rax, qword [0x0400327e] 	      1628	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400327e	          0x4c8b28	                    mov r13, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4003281	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4003288	          0x4c8b20	                    mov r12, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400328b	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1627	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4003292	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1627	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4003296	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1626	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400329d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1626	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40032a1	          0x4889c2	                            mov rdx, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032a4	      0xbe00000000	                              mov esi, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032a9	      0xbf00000000	                              mov edi, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032ae	      0xe800000000	                          call 0x40032b3	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032b3	          0x4d89f0	                             mov r8, r14	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032b6	          0x4c89e9	                            mov rcx, r13	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032b9	          0x4c89e2	                            mov rdx, r12	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032bc	          0x4889de	                            mov rsi, rbx	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032bf	          0x4889c7	                            mov rdi, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032c2	      0xb800000000	                              mov eax, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032c7	      0xe800000000	                          call 0x40032cc	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x40032cc	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40032d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40032d7	    0x48018590feff	           add qword [rbp - 0x170], rax 	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40032de	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1633	write.c	FUNCTION_25	FOR_1
0x40032e5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1633	write.c	FUNCTION_25	FOR_1
0x40032e9	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1633	write.c	FUNCTION_25	FOR_1
0x40032f0	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1634	write.c	FUNCTION_25	FOR_1
0x40032f7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1634	write.c	FUNCTION_25	FOR_1
0x40032fb	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      1634	write.c	FUNCTION_25	FOR_1
0x4003302	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1635	write.c	FUNCTION_25	FOR_1
0x4003309	        0x488d507c	                   lea rdx, [rax + 0x7c]	      1635	write.c	FUNCTION_25	FOR_1
0x400330d	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1635	write.c	FUNCTION_25	FOR_1
0x4003314	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1635	write.c	FUNCTION_25	FOR_1
0x4003318	          0x4801d0	                            add rax, rdx	      1635	write.c	FUNCTION_25	FOR_1
0x400331b	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1635	write.c	FUNCTION_25	FOR_1
0x4003322	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x4003329	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x400332c	          0x83f80a	                            cmp eax, 0xa	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x400332f	     0xf8531010000	                           jne 0x4003466	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x4003335	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400333d	            0x780a	                            js 0x4003349	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400333f	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 1	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4003347	            0x7414	                            je 0x400335d	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4003349	      0xba00000000	                              mov edx, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400334e	      0xbe67060000	                          mov esi, 0x667	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4003353	      0xbf00000000	                              mov edi, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4003358	      0xe800000000	                          call 0x400335d	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400335d	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x4003365	     0xf8ed5030000	                           jle 0x4003740	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x400336b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x4003372	          0x4889c7	                            mov rdi, rax	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x4003375	      0xe800000000	                          call 0x400337a	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x400337a	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x4003381	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4003388	           0xfb600	                   movzx eax, byte [rax]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x400338b	           0xfbec8	                           movsx ecx, al	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x400338e	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4003395	    0x488bb5c8feff	            mov rsi, qword [rbp - 0x138]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x400339c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40033a3	          0x4889c7	                            mov rdi, rax	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40033a6	      0xe800000000	                          call 0x40033ab	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40033ab	    0x488bbda0feff	            mov rdi, qword [rbp - 0x160]	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033b2	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033b9	    0x488b05000000	            mov rax, qword [0x040033c0] 	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033c0	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033c7	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033ce	          0x4989f8	                             mov r8, rdi	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033d1	          0x4889c7	                            mov rdi, rax	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033d4	      0xe800000000	                          call 0x40033d9	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033d9	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40033df	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 0	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x40033e6	            0x755c	                           jne 0x4003444	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x40033e8	      0xe800000000	                          call 0x40033ed	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40033ed	            0x89c7	                            mov edi, eax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40033ef	      0xe800000000	                          call 0x40033f4	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40033f4	          0x4989c5	                            mov r13, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40033f7	    0x488b05000000	            mov rax, qword [0x040033fe] 	      1653	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x40033fe	          0x4c8b20	                    mov r12, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003401	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003408	          0x488b18	                    mov rbx, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400340b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003412	          0x4889c2	                            mov rdx, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003415	      0xbe00000000	                              mov esi, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400341a	      0xbf00000000	                              mov edi, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400341f	      0xe800000000	                          call 0x4003424	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003424	          0x4889c7	                            mov rdi, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003427	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400342e	          0x4d89e8	                             mov r8, r13	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003431	          0x4c89e1	                            mov rcx, r12	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003434	          0x4889da	                            mov rdx, rbx	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003437	          0x4889c6	                            mov rsi, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400343a	      0xb800000000	                              mov eax, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400343f	      0xe800000000	                          call 0x4003444	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4003444	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1655	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x400344b	    0x48018590feff	           add qword [rbp - 0x170], rax 	      1655	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x4003452	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4003459	          0x4889c7	                            mov rdi, rax	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x400345c	      0xe800000000	                          call 0x4003461	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4003461	      0xe9da020000	                           jmp 0x4003740	      1658	write.c	FUNCTION_25	FOR_1	IF_4
0x4003466	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x400346e	            0x7914	                           jns 0x4003484	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4003470	      0xba00000000	                              mov edx, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4003475	      0xbe7d060000	                          mov esi, 0x67d	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x400347a	      0xbf00000000	                              mov edi, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x400347f	      0xe800000000	                          call 0x4003484	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4003484	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x400348c	     0xf84af020000	                            je 0x4003741	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4003492	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x400349a	     0xf84a1020000	                            je 0x4003741	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x40034a0	    0x4881bdb8feff	         cmp qword [rbp - 0x148], 0x100 	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x40034ab	     0xf86cc000000	                           jbe 0x400357d	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x40034b1	      0xe9a7000000	                           jmp 0x400355d	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x40034b6	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034bd	    0x488b05000000	            mov rax, qword [0x040034c4] 	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034c4	    0x488bbdb8feff	            mov rdi, qword [rbp - 0x148]	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034cb	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034d2	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034d9	          0x4989f8	                             mov r8, rdi	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034dc	          0x4889c7	                            mov rdi, rax	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034df	      0xe800000000	                          call 0x40034e4	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034e4	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40034ea	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 0	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x40034f1	            0x755c	                           jne 0x400354f	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x40034f3	      0xe800000000	                          call 0x40034f8	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40034f8	            0x89c7	                            mov edi, eax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40034fa	      0xe800000000	                          call 0x40034ff	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40034ff	          0x4989c6	                            mov r14, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003502	    0x488b05000000	            mov rax, qword [0x04003509] 	      1681	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x4003509	          0x4c8b28	                    mov r13, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400350c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003513	          0x4c8b20	                    mov r12, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003516	    0x488b9db8feff	            mov rbx, qword [rbp - 0x148]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400351d	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003524	          0x4889c2	                            mov rdx, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003527	      0xbe00000000	                              mov esi, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400352c	      0xbf00000000	                              mov edi, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003531	      0xe800000000	                          call 0x4003536	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003536	          0x4d89f0	                             mov r8, r14	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003539	          0x4c89e9	                            mov rcx, r13	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400353c	          0x4c89e2	                            mov rdx, r12	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400353f	          0x4889de	                            mov rsi, rbx	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003542	          0x4889c7	                            mov rdi, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4003545	      0xb800000000	                              mov eax, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400354a	      0xe800000000	                          call 0x400354f	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400354f	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1683	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4003556	    0x48018590feff	           add qword [rbp - 0x170], rax 	      1683	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x400355d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4003564	        0x488d50ff	                      lea rdx, [rax - 1]	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4003568	    0x488995a0feff	            mov qword [rbp - 0x160], rdx	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x400356f	          0x4885c0	                           test rax, rax	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4003572	     0xf853effffff	                           jne 0x40034b6	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4003578	      0xe9c4010000	                           jmp 0x4003741	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x400357d	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 1	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4003585	            0x7536	                           jne 0x40035bd	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4003587	    0xc78584feffff	         mov dword [rbp - 0x17c], 0x100 	      1694	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4003591	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x4003597	          0x4863d0	                         movsxd rdx, eax	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x400359a	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035a1	           0xfb600	                   movzx eax, byte [rax]	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035a4	           0xfbec8	                           movsx ecx, al	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035a7	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035ae	            0x89ce	                            mov esi, ecx	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035b0	          0x4889c7	                            mov rdi, rax	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035b3	      0xe800000000	                          call 0x40035b8	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035b8	      0xe973010000	                           jmp 0x4003730	      1695	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10	CALL_23
0x40035bd	      0xb800010000	                          mov eax, 0x100	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x40035c2	      0xba00000000	                              mov edx, 0	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x40035c7	    0x48f7b5b8feff	                 div qword [rbp - 0x148]	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x40035ce	    0x898584feffff	            mov dword [rbp - 0x17c], eax	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x40035d4	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40035da	    0x898588feffff	            mov dword [rbp - 0x178], eax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40035e0	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40035e7	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40035ee	            0xeb35	                           jmp 0x4003625	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40035f0	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	      1702	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	CALL_24
0x40035f7	    0x488b8dc0feff	            mov rcx, qword [rbp - 0x140]	      1702	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	CALL_24
0x40035fe	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1702	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	CALL_24
0x4003605	          0x4889ce	                            mov rsi, rcx	      1702	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	CALL_24
0x4003608	          0x4889c7	                            mov rdi, rax	      1702	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	CALL_24
0x400360b	      0xe800000000	                          call 0x4003610	      1702	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	CALL_24
0x4003610	    0x83ad88feffff	              sub dword [rbp - 0x178], 1	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x4003617	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400361e	    0x480185a8feff	           add qword [rbp - 0x158], rax 	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x4003625	    0x83bd88feffff	              cmp dword [rbp - 0x178], 0	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400362c	            0x75c2	                           jne 0x40035f0	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400362e	      0xe9fd000000	                           jmp 0x4003730	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003633	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003639	          0x4863d0	                         movsxd rdx, eax	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400363c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003643	          0x4839c2	                            cmp rdx, rax	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003646	        0x480f4ec2	                         cmovle rax, rdx	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400364a	    0x898584feffff	            mov dword [rbp - 0x17c], eax	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003650	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1709	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003656	            0x4898	                                    cdqe	      1709	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003658	    0x480faf85b8fe	           imul rax, qword [rbp - 0x148]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4003660	          0x4889c7	                            mov rdi, rax	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4003663	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x400366a	    0x488b05000000	            mov rax, qword [0x04003671] 	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4003671	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4003678	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x400367f	          0x4989f8	                             mov r8, rdi	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4003682	          0x4889c7	                            mov rdi, rax	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4003685	      0xe800000000	                          call 0x400368a	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x400368a	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4003690	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 0	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x4003697	            0x7571	                           jne 0x400370a	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x4003699	      0xe800000000	                          call 0x400369e	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400369e	            0x89c7	                            mov edi, eax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036a0	      0xe800000000	                          call 0x40036a5	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036a5	          0x4989c6	                            mov r14, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036a8	    0x488b05000000	            mov rax, qword [0x040036af] 	      1717	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40036af	          0x4c8b20	                    mov r12, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036b2	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036b9	          0x488b18	                    mov rbx, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036bc	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1716	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40036c2	            0x4898	                                    cdqe	      1716	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40036c4	    0x480faf85b8fe	           imul rax, qword [rbp - 0x148]	      1716	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40036cc	          0x4989c5	                            mov r13, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036cf	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036d5	            0x4898	                                    cdqe	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036d7	    0x480faf85b8fe	           imul rax, qword [rbp - 0x148]	      1715	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40036df	          0x4889c2	                            mov rdx, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036e2	      0xbe00000000	                              mov esi, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036e7	      0xbf00000000	                              mov edi, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036ec	      0xe800000000	                          call 0x40036f1	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036f1	          0x4d89f0	                             mov r8, r14	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036f4	          0x4c89e1	                            mov rcx, r12	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036f7	          0x4889da	                            mov rdx, rbx	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036fa	          0x4c89ee	                            mov rsi, r13	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40036fd	          0x4889c7	                            mov rdi, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4003700	      0xb800000000	                              mov eax, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4003705	      0xe800000000	                          call 0x400370a	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400370a	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1719	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003710	            0x4898	                                    cdqe	      1719	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003712	    0x480faf85b8fe	           imul rax, qword [rbp - 0x148]	      1719	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400371a	    0x48018590feff	           add qword [rbp - 0x170], rax 	      1719	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003721	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003727	            0x4898	                                    cdqe	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003729	    0x482985a0feff	            sub qword [rbp - 0x160], rax	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003730	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003738	     0xf8ff5feffff	                            jg 0x4003633	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400373e	            0xeb01	                           jmp 0x4003741	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4003740	              0x90	                                     nop	      1658	write.c	FUNCTION_25	FOR_1	IF_4
0x4003741	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1608	write.c	FUNCTION_25	FOR_1
0x4003748	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1608	write.c	FUNCTION_25	FOR_1
0x400374c	    0x48898598feff	            mov qword [rbp - 0x168], rax	      1608	write.c	FUNCTION_25	FOR_1
0x4003753	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	      1606	write.c	FUNCTION_25	FOR_1
0x400375b	     0xf8573faffff	                           jne 0x40031d4	      1606	write.c	FUNCTION_25	FOR_1
0x4003761	            0xeb01	                           jmp 0x4003764	      1606	write.c	FUNCTION_25	FOR_1
0x4003763	              0x90	                                     nop	      1604	write.c	FUNCTION_25	IF_1
0x4003764	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1724	write.c	FUNCTION_25
0x4003768	    0x644833042528	                xor rax, qword fs:[0x28]	      1724	write.c	FUNCTION_25
0x4003771	            0x7405	                            je 0x4003778	      1724	write.c	FUNCTION_25
0x4003773	      0xe800000000	                          call 0x4003778	      1724	write.c	FUNCTION_25
0x4003778	    0x4881c4800100	                          add rsp, 0x180	      1724	write.c	FUNCTION_25
0x400377f	              0x5b	                                 pop rbx	      1724	write.c	FUNCTION_25
0x4003780	            0x415c	                                 pop r12	      1724	write.c	FUNCTION_25
0x4003782	            0x415d	                                 pop r13	      1724	write.c	FUNCTION_25
0x4003784	            0x415e	                                 pop r14	      1724	write.c	FUNCTION_25
0x4003786	              0x5d	                                 pop rbp	      1724	write.c	FUNCTION_25
0x4003787	              0xc3	                                     ret	      1724	write.c	FUNCTION_25
resolve_reloc_expr_symbols	IF,12:SWITCH,0:WHILE,0:functions,0:FOR,1:DO,0:ELSE,4:CALL,22	246
0x4000f73	              0x55	                                push rbp	       674	write.c	FUNCTION_15
0x4000f74	          0x4889e5	                            mov rbp, rsp	       674	write.c	FUNCTION_15
0x4000f77	        0x4883ec50	                           sub rsp, 0x50	       674	write.c	FUNCTION_15
0x4000f7b	    0x48c745e80100	               mov qword [rbp - 0x18], 1	       675	write.c	FUNCTION_15
0x4000f83	    0x488b05000000	            mov rax, qword [0x04000f8a] 	       679	write.c	FUNCTION_15	CALL_1
0x4000f8a	          0x4889c7	                            mov rdi, rax	       679	write.c	FUNCTION_15	CALL_1
0x4000f8d	      0xe800000000	                          call 0x4000f92	       679	write.c	FUNCTION_15	CALL_1
0x4000f92	          0x83e801	                              sub eax, 1	       679	write.c	FUNCTION_15	CALL_1
0x4000f95	            0x89c1	                            mov ecx, eax	       679	write.c	FUNCTION_15	CALL_1
0x4000f97	        0x48d365e8	              shl qword [rbp - 0x18], cl	       679	write.c	FUNCTION_15	CALL_1
0x4000f9b	        0x48d165e8	               shl qword [rbp - 0x18], 1	       680	write.c	FUNCTION_15
0x4000f9f	      0x48836de801	               sub qword [rbp - 0x18], 1	       681	write.c	FUNCTION_15
0x4000fa4	    0x488b05000000	            mov rax, qword [0x04000fab] 	       683	write.c	FUNCTION_15	FOR_1
0x4000fab	        0x488945b8	             mov qword [rbp - 0x48], rax	       683	write.c	FUNCTION_15	FOR_1
0x4000faf	      0xe96f030000	                           jmp 0x4001323	       683	write.c	FUNCTION_15	FOR_1
0x4000fb4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       685	write.c	FUNCTION_15	FOR_1
0x4000fb8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       685	write.c	FUNCTION_15	FOR_1
0x4000fbc	        0x488945f0	             mov qword [rbp - 0x10], rax	       685	write.c	FUNCTION_15	FOR_1
0x4000fc0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x4000fc4	        0x488b4008	                mov rax, qword [rax + 8]	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x4000fc8	          0x4889c7	                            mov rdi, rax	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x4000fcb	      0xe800000000	                          call 0x4000fd0	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x4000fd0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x4000fd4	        0x488b4008	                mov rax, qword [rax + 8]	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x4000fd8	          0x4889c7	                            mov rdi, rax	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x4000fdb	      0xe800000000	                          call 0x4000fe0	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x4000fe0	        0x488945c0	             mov qword [rbp - 0x40], rax	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x4000fe4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       694	write.c	FUNCTION_15	FOR_1
0x4000fec	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       695	write.c	FUNCTION_15	FOR_1
0x4000ff4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x4000ff8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x4000ffc	            0x3c02	                               cmp al, 2	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x4000ffe	            0x750e	                           jne 0x400100e	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x4001000	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       697	write.c	FUNCTION_15	FOR_1	IF_1
0x4001004	        0x488b4008	                mov rax, qword [rax + 8]	       697	write.c	FUNCTION_15	FOR_1	IF_1
0x4001008	        0x488945c8	             mov qword [rbp - 0x38], rax	       697	write.c	FUNCTION_15	FOR_1	IF_1
0x400100c	            0xeb36	                           jmp 0x4001044	       697	write.c	FUNCTION_15	FOR_1	IF_1
0x400100e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4001012	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4001016	            0x3c03	                               cmp al, 3	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4001018	            0x752a	                           jne 0x4001044	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x400101a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       700	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x400101e	          0x488b00	                    mov rax, qword [rax]	       700	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4001021	        0x488945c8	             mov qword [rbp - 0x38], rax	       700	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4001025	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       701	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4001029	        0x488b4010	            mov rax, qword [rax + 0x10] 	       701	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x400102d	        0x488945d0	             mov qword [rbp - 0x30], rax	       701	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4001031	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x4001035	          0x488b00	                    mov rax, qword [rax]	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x4001038	          0x4889c7	                            mov rdi, rax	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x400103b	      0xe800000000	                          call 0x4001040	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x4001040	        0x488945c0	             mov qword [rbp - 0x40], rax	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x4001044	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4001049	            0x7451	                            je 0x400109c	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x400104b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x400104f	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x4001053	            0x3c02	                               cmp al, 2	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x4001055	            0x7545	                           jne 0x400109c	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x4001057	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x400105b	          0x4889c7	                            mov rdi, rax	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x400105e	      0xe800000000	                          call 0x4001063	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4001063	        0x488945e0	             mov qword [rbp - 0x20], rax	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4001067	      0x48837de000	               cmp qword [rbp - 0x20], 0	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x400106c	            0x742e	                            je 0x400109c	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x400106e	    0x48817de00000	               cmp qword [rbp - 0x20], 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4001076	            0x7424	                            je 0x400109c	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4001078	    0x48817de00000	               cmp qword [rbp - 0x20], 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4001080	            0x741a	                            je 0x400109c	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4001082	    0x488b05000000	            mov rax, qword [0x04001089] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4001089	        0x483945e0	            cmp qword [rbp - 0x20], rax 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400108d	            0x740d	                            je 0x400109c	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400108f	    0x488b05000000	            mov rax, qword [0x04001096] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4001096	        0x483945e0	            cmp qword [rbp - 0x20], rax 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400109a	            0x7535	                           jne 0x40010d1	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400109c	      0xbf00000000	                              mov edi, 0	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010a1	      0xe800000000	                          call 0x40010a6	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010a6	          0x4889c2	                            mov rdx, rax	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010a9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010ad	          0x8b4840	            mov ecx, dword [rax + 0x40] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010b4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010b8	            0x89ce	                            mov esi, ecx	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010ba	          0x4889c7	                            mov rdi, rax	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010bd	      0xb800000000	                              mov eax, 0	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010c2	      0xe800000000	                          call 0x40010c7	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40010c7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       710	write.c	FUNCTION_15	FOR_1	IF_3
0x40010cf	            0xeb10	                           jmp 0x40010e1	       710	write.c	FUNCTION_15	FOR_1	IF_3
0x40010d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40010d5	          0x4889c7	                            mov rdi, rax	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40010d8	      0xe800000000	                          call 0x40010dd	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40010dd	        0x480145d0	            add qword [rbp - 0x30], rax 	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40010e1	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       715	write.c	FUNCTION_15	FOR_1
0x40010e9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       716	write.c	FUNCTION_15	FOR_1
0x40010ed	        0x488b4020	            mov rax, qword [rax + 0x20] 	       716	write.c	FUNCTION_15	FOR_1
0x40010f1	        0x488945d8	             mov qword [rbp - 0x28], rax	       716	write.c	FUNCTION_15	FOR_1
0x40010f5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x40010f9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x40010fd	          0x4885c0	                           test rax, rax	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x4001100	     0xf848c010000	                            je 0x4001292	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x4001106	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       719	write.c	FUNCTION_15	FOR_1	IF_4	CALL_10
0x400110a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       719	write.c	FUNCTION_15	FOR_1	IF_4	CALL_10
0x400110e	          0x4889c7	                            mov rdi, rax	       719	write.c	FUNCTION_15	FOR_1	IF_4	CALL_10
0x4001111	      0xe800000000	                          call 0x4001116	       719	write.c	FUNCTION_15	FOR_1	IF_4	CALL_10
0x4001116	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x400111a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x400111e	          0x4889c7	                            mov rdi, rax	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4001121	      0xe800000000	                          call 0x4001126	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4001126	        0x488945c0	             mov qword [rbp - 0x40], rax	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x400112a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x400112e	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4001132	            0x3c02	                               cmp al, 2	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4001134	            0x750e	                           jne 0x4001144	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4001136	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x400113a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x400113e	        0x488945c8	             mov qword [rbp - 0x38], rax	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4001142	            0xeb36	                           jmp 0x400117a	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4001144	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4001148	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x400114c	            0x3c03	                               cmp al, 3	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x400114e	            0x752a	                           jne 0x400117a	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4001150	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       725	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4001154	          0x488b00	                    mov rax, qword [rax]	       725	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4001157	        0x488945c8	             mov qword [rbp - 0x38], rax	       725	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x400115b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       726	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x400115f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       726	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4001163	        0x480145d8	            add qword [rbp - 0x28], rax 	       726	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4001167	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x400116b	          0x488b00	                    mov rax, qword [rax]	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x400116e	          0x4889c7	                            mov rdi, rax	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x4001171	      0xe800000000	                          call 0x4001176	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x4001176	        0x488945c0	             mov qword [rbp - 0x40], rax	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x400117a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x400117e	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4001182	            0x3c02	                               cmp al, 2	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4001184	            0x7438	                            je 0x40011be	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4001186	      0xbf00000000	                              mov edi, 0	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400118b	      0xe800000000	                          call 0x4001190	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4001190	          0x4889c2	                            mov rdx, rax	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4001193	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4001197	          0x8b4840	            mov ecx, dword [rax + 0x40] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400119a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400119e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x40011a2	            0x89ce	                            mov esi, ecx	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x40011a4	          0x4889c7	                            mov rdi, rax	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x40011a7	      0xb800000000	                              mov eax, 0	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x40011ac	      0xe800000000	                          call 0x40011b1	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x40011b1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       732	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40011b9	      0xe9d4000000	                           jmp 0x4001292	       732	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40011be	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40011c3	     0xf84c9000000	                            je 0x4001292	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40011c9	      0x48837de000	               cmp qword [rbp - 0x20], 0	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40011ce	     0xf84be000000	                            je 0x4001292	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40011d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011d8	          0x4889c7	                            mov rdi, rax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011db	      0xe800000000	                          call 0x40011e0	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011e0	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011e2	     0xf849e000000	                            je 0x4001286	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011ec	          0x4889c7	                            mov rdi, rax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011ef	      0xe800000000	                          call 0x40011f4	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011f4	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011f6	     0xf858a000000	                           jne 0x4001286	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40011fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001200	         0xfb64025	           movzx eax, byte [rax + 0x25] 	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001204	          0x83e004	                              and eax, 4	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001207	            0x84c0	                             test al, al	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001209	            0x7524	                           jne 0x400122f	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x400120b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x400120f	          0x8b4030	            mov eax, dword [rax + 0x30] 	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001212	            0x85c0	                           test eax, eax	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001214	            0x7470	                            je 0x4001286	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001216	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x400121a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x400121d	            0x85c0	                           test eax, eax	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x400121f	            0x740e	                            je 0x400122f	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001221	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001225	        0x488b4038	            mov rax, qword [rax + 0x38] 	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4001229	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x400122d	            0x7557	                           jne 0x4001286	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x400122f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4001233	          0x4889c7	                            mov rdi, rax	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4001236	      0xe800000000	                          call 0x400123b	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x400123b	        0x488945f8	                mov qword [rbp - 8], rax	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x400123f	        0x488b45f8	                mov rax, qword [rbp - 8]	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4001243	          0x8b4020	            mov eax, dword [rax + 0x20] 	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4001246	      0x2500008000	                       and eax, 0x800000	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x400124b	            0x85c0	                           test eax, eax	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x400124d	            0x7407	                            je 0x4001256	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x400124f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4001254	            0x7530	                           jne 0x4001286	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4001256	        0x488b45f8	                mov rax, qword [rbp - 8]	       751	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x400125a	          0x8b4020	            mov eax, dword [rax + 0x20] 	       751	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x400125d	      0x2500040000	                          and eax, 0x400	       751	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4001262	            0x85c0	                           test eax, eax	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4001264	            0x7520	                           jne 0x4001286	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4001266	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x400126a	          0x4889c7	                            mov rdi, rax	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x400126d	      0xe800000000	                          call 0x4001272	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4001272	        0x480145d8	            add qword [rbp - 0x28], rax 	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4001276	        0x488b45f8	                mov rax, qword [rbp - 8]	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x400127a	          0x4889c7	                            mov rdi, rax	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x400127d	      0xe800000000	                          call 0x4001282	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4001282	        0x488945c8	             mov qword [rbp - 0x38], rax	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4001286	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x400128a	          0x4889c7	                            mov rdi, rax	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x400128d	      0xe800000000	                          call 0x4001292	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x4001292	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x4001297	            0x7528	                           jne 0x40012c1	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x4001299	    0x488b05000000	            mov rax, qword [0x040012a0] 	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x40012a0	          0x4885c0	                           test rax, rax	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x40012a3	            0x7511	                           jne 0x40012b6	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x40012a5	      0xbf00000000	                              mov edi, 0	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x40012aa	      0xe800000000	                          call 0x40012af	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x40012af	    0x488905000000	            mov qword [0x040012b6], rax 	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x40012b6	    0x488b05000000	            mov rax, qword [0x040012bd] 	       764	write.c	FUNCTION_15	FOR_1	IF_11
0x40012bd	        0x488945c8	             mov qword [rbp - 0x38], rax	       764	write.c	FUNCTION_15	FOR_1	IF_11
0x40012c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       767	write.c	FUNCTION_15	FOR_1
0x40012c5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       767	write.c	FUNCTION_15	FOR_1
0x40012c9	        0x48895008	                mov qword [rax + 8], rdx	       767	write.c	FUNCTION_15	FOR_1
0x40012cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x40012d1	          0x4889c7	                            mov rdi, rax	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x40012d4	      0xe800000000	                          call 0x40012d9	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x40012d9	          0x4889c2	                            mov rdx, rax	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x40012dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x40012e0	        0x48895010	             mov qword [rax + 0x10], rdx	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x40012e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       769	write.c	FUNCTION_15	FOR_1
0x40012e8	        0x488d5010	                   lea rdx, [rax + 0x10]	       769	write.c	FUNCTION_15	FOR_1
0x40012ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       769	write.c	FUNCTION_15	FOR_1
0x40012f0	        0x48895018	             mov qword [rax + 0x18], rdx	       769	write.c	FUNCTION_15	FOR_1
0x40012f4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       770	write.c	FUNCTION_15	FOR_1
0x40012f8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       770	write.c	FUNCTION_15	FOR_1
0x40012fc	        0x48895020	             mov qword [rax + 0x20], rdx	       770	write.c	FUNCTION_15	FOR_1
0x4001300	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       771	write.c	FUNCTION_15	FOR_1
0x4001304	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       771	write.c	FUNCTION_15	FOR_1
0x4001308	        0x48895028	             mov qword [rax + 0x28], rdx	       771	write.c	FUNCTION_15	FOR_1
0x400130c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       772	write.c	FUNCTION_15	FOR_1
0x4001310	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       772	write.c	FUNCTION_15	FOR_1
0x4001314	        0x48895030	             mov qword [rax + 0x30], rdx	       772	write.c	FUNCTION_15	FOR_1
0x4001318	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       683	write.c	FUNCTION_15	FOR_1
0x400131c	          0x488b00	                    mov rax, qword [rax]	       683	write.c	FUNCTION_15	FOR_1
0x400131f	        0x488945b8	             mov qword [rbp - 0x48], rax	       683	write.c	FUNCTION_15	FOR_1
0x4001323	      0x48837db800	               cmp qword [rbp - 0x48], 0	       683	write.c	FUNCTION_15	FOR_1
0x4001328	     0xf8586fcffff	                           jne 0x4000fb4	       683	write.c	FUNCTION_15	FOR_1
0x400132e	              0x90	                                     nop	       774	write.c	FUNCTION_15
0x400132f	              0xc9	                                   leave	       774	write.c	FUNCTION_15
0x4001330	              0xc3	                                     ret	       774	write.c	FUNCTION_15
relax_segment	IF,27:SWITCH,2:WHILE,0:functions,0:FOR,5:DO,1:ELSE,5:CALL,54	713
0x4004c38	              0x55	                                push rbp	      2625	write.c	FUNCTION_36
0x4004c39	          0x4889e5	                            mov rbp, rsp	      2625	write.c	FUNCTION_36
0x4004c3c	              0x53	                                push rbx	      2625	write.c	FUNCTION_36
0x4004c3d	    0x4881ece80000	                           sub rsp, 0xe8	      2625	write.c	FUNCTION_36
0x4004c44	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      2625	write.c	FUNCTION_36
0x4004c4b	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	      2625	write.c	FUNCTION_36
0x4004c52	    0x89951cffffff	             mov dword [rbp - 0xe4], edx	      2625	write.c	FUNCTION_36
0x4004c58	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2633	write.c	FUNCTION_36	CALL_1
0x4004c5f	      0xbe00000000	                              mov esi, 0	      2633	write.c	FUNCTION_36	CALL_1
0x4004c64	          0x4889c7	                            mov rdi, rax	      2633	write.c	FUNCTION_36	CALL_1
0x4004c67	      0xe800000000	                          call 0x4004c6c	      2633	write.c	FUNCTION_36	CALL_1
0x4004c6c	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      2637	write.c	FUNCTION_36
0x4004c77	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      2638	write.c	FUNCTION_36
0x4004c81	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2639	write.c	FUNCTION_36	FOR_1
0x4004c8c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2639	write.c	FUNCTION_36	FOR_1
0x4004c93	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2639	write.c	FUNCTION_36	FOR_1
0x4004c9a	      0xe99a020000	                           jmp 0x4004f39	      2639	write.c	FUNCTION_36	FOR_1
0x4004c9f	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2643	write.c	FUNCTION_36	FOR_1
0x4004ca5	            0x89c2	                            mov edx, eax	      2643	write.c	FUNCTION_36	FOR_1
0x4004ca7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2643	write.c	FUNCTION_36	FOR_1
0x4004cae	        0x66895058	               mov word [rax + 0x58], dx	      2643	write.c	FUNCTION_36	FOR_1
0x4004cb2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2644	write.c	FUNCTION_36	FOR_1
0x4004cb9	         0xfb6505a	           movzx edx, byte [rax + 0x5a] 	      2644	write.c	FUNCTION_36	FOR_1
0x4004cbd	          0x83e2fe	                     and edx, 0xfffffffe	      2644	write.c	FUNCTION_36	FOR_1
0x4004cc0	          0x88505a	               mov byte [rax + 0x5a], dl	      2644	write.c	FUNCTION_36	FOR_1
0x4004cc3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2645	write.c	FUNCTION_36	FOR_1
0x4004cca	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2645	write.c	FUNCTION_36	FOR_1
0x4004cd1	          0x488910	                    mov qword [rax], rdx	      2645	write.c	FUNCTION_36	FOR_1
0x4004cd4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2646	write.c	FUNCTION_36	FOR_1
0x4004cdb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2646	write.c	FUNCTION_36	FOR_1
0x4004cdf	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      2646	write.c	FUNCTION_36	FOR_1
0x4004ce6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004ced	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004cf0	          0x83f80d	                            cmp eax, 0xd	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004cf3	     0xf87f5010000	                            ja 0x4004eee	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004cf9	            0x89c0	                            mov eax, eax	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004cfb	    0x488b04c50000	                  mov rax, qword [rax*8]	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d03	            0xffe0	                                 jmp rax	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d05	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d0c	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d10	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d17	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d1b	        0x480fafc2	                           imul rax, rdx	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d1f	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d26	      0xe9f4010000	                           jmp 0x4004f1f	      2652	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004d2b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d32	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d36	            0x89c2	                            mov edx, eax	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d38	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d3f	            0x89d6	                            mov esi, edx	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d41	          0x4889c7	                            mov rdi, rax	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d44	      0xe8a8feffff	                    call sym.relax_align	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d49	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2658	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_2
0x4004d50	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d57	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d5a	            0x85c0	                           test eax, eax	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d5c	            0x7420	                            je 0x4004d7e	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d5e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d65	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d68	            0x89c0	                            mov eax, eax	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d6a	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d71	            0x730b	                           jae 0x4004d7e	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d73	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      2661	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4004d7e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004d85	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004d89	          0x4889c1	                            mov rcx, rax	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004d8c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004d93	      0xba00000000	                              mov edx, 0	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004d98	          0x48f7f1	                                 div rcx	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004d9b	          0x4889d0	                            mov rax, rdx	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004d9e	          0x4885c0	                           test rax, rax	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004da1	     0xf8480000000	                            je 0x4004e27	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004da7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2671	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004dae	        0x488b5818	            mov rbx, qword [rax + 0x18] 	      2671	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004db2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4004db9	          0x4889c2	                            mov rdx, rax	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4004dbc	      0xbe00000000	                              mov esi, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4004dc1	      0xbf00000000	                              mov edi, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4004dc6	      0xe800000000	                          call 0x4004dcb	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4004dcb	          0x4889c7	                            mov rdi, rax	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4004dce	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004dd5	          0x8b7048	            mov esi, dword [rax + 0x48] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004dd8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004ddf	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004de3	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004dea	          0x4989d8	                             mov r8, rbx	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004ded	          0x4889d1	                            mov rcx, rdx	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004df0	          0x4889fa	                            mov rdx, rdi	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004df3	          0x4889c7	                            mov rdi, rax	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004df6	      0xb800000000	                              mov eax, 0	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004dfb	      0xe800000000	                          call 0x4004e00	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4004e00	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e07	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e0b	          0x4889c1	                            mov rcx, rax	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e0e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e15	      0xba00000000	                              mov edx, 0	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e1a	          0x48f7f1	                                 div rcx	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e1d	          0x4889d0	                            mov rax, rdx	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e20	    0x48298558ffff	             sub qword [rbp - 0xa8], rax	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4004e27	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e2e	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e35	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      2676	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e3c	      0xe9de000000	                           jmp 0x4004f1f	      2678	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e41	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      2682	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e48	      0xe9d2000000	                           jmp 0x4004f1f	      2683	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e4d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4004e54	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4004e58	          0x4885c0	                           test rax, rax	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4004e5b	            0x7413	                            je 0x4004e70	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4004e5d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2694	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_5
0x4004e64	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2694	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_5
0x4004e68	          0x4889c7	                            mov rdi, rax	      2694	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_5
0x4004e6b	      0xe800000000	                          call 0x4004e70	      2694	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_5
0x4004e70	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4004e77	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4004e7e	          0x4889d6	                            mov rsi, rdx	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4004e81	          0x4889c7	                            mov rdi, rax	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4004e84	      0xe800000000	                          call 0x4004e89	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4004e89	            0x4898	                                    cdqe	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4004e8b	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4004e92	      0xe988000000	                           jmp 0x4004f1f	      2697	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e97	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004e9e	    0x48c740200100	               mov qword [rax + 0x20], 1	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004ea6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004ead	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004eb1	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004eb8	            0xeb65	                           jmp 0x4004f1f	      2709	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004eba	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4004ec1	          0x4889c7	                            mov rdi, rax	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4004ec4	      0xe800000000	                          call 0x4004ec9	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4004ec9	            0x4898	                                    cdqe	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4004ecb	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4004ed2	            0xeb4b	                           jmp 0x4004f1f	      2713	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004ed4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4004edb	          0x4889c7	                            mov rdi, rax	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4004ede	      0xe800000000	                          call 0x4004ee3	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4004ee3	            0x4898	                                    cdqe	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4004ee5	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4004eec	            0xeb31	                           jmp 0x4004f1f	      2717	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004eee	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004ef5	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004ef8	            0x89c3	                            mov ebx, eax	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004efa	      0xbf00000000	                              mov edi, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004eff	      0xe800000000	                          call 0x4004f04	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004f04	      0xb900000000	                              mov ecx, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004f09	      0xbaa00a0000	                          mov edx, 0xaa0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004f0e	          0x4889de	                            mov rsi, rbx	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004f11	          0x4889c7	                            mov rdi, rax	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004f14	      0xb800000000	                              mov eax, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004f19	      0xe800000000	                          call 0x4004f1e	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4004f1e	              0x90	                                     nop	      2687	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4004f1f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2641	write.c	FUNCTION_36	FOR_1
0x4004f26	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4004f2a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2641	write.c	FUNCTION_36	FOR_1
0x4004f31	    0x48838540ffff	               add qword [rbp - 0xc0], 1	      2641	write.c	FUNCTION_36	FOR_1
0x4004f39	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2639	write.c	FUNCTION_36	FOR_1
0x4004f41	     0xf8558fdffff	                           jne 0x4004c9f	      2639	write.c	FUNCTION_36	FOR_1
0x4004f47	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      2759	write.c	FUNCTION_36
0x4004f51	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2770	write.c	FUNCTION_36
0x4004f58	    0x480faf8540ff	            imul rax, qword [rbp - 0xc0]	      2770	write.c	FUNCTION_36
0x4004f60	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2770	write.c	FUNCTION_36
0x4004f67	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2772	write.c	FUNCTION_36	IF_4
0x4004f6e	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      2772	write.c	FUNCTION_36	IF_4
0x4004f75	            0x730e	                           jae 0x4004f85	      2772	write.c	FUNCTION_36	IF_4
0x4004f77	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2773	write.c	FUNCTION_36	IF_4
0x4004f7e	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2773	write.c	FUNCTION_36	IF_4
0x4004f85	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      2775	write.c	FUNCTION_36
0x4004f8f	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2778	write.c	FUNCTION_36	DO_1
0x4004f9a	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      2779	write.c	FUNCTION_36	DO_1
0x4004fa4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fab	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fb2	      0xe95f080000	                           jmp 0x4005816	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fb7	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2783	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fc2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fc9	         0xfb6405a	           movzx eax, byte [rax + 0x5a] 	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fcd	          0x83e001	                              and eax, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fd0	          0x83f001	                              xor eax, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fd3	            0x89c2	                            mov edx, eax	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fd5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fdc	            0x89d1	                            mov ecx, edx	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fde	          0x83e101	                              and ecx, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fe1	         0xfb6505a	           movzx edx, byte [rax + 0x5a] 	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fe5	          0x83e2fe	                     and edx, 0xfffffffe	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fe8	             0x9ca	                             or edx, ecx	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fea	          0x88505a	               mov byte [rax + 0x5a], dl	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4004fed	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2789	write.c	FUNCTION_36	DO_1	FOR_2
0x4004ff4	          0x488b00	                    mov rax, qword [rax]	      2789	write.c	FUNCTION_36	DO_1	FOR_2
0x4004ff7	        0x48894590	             mov qword [rbp - 0x70], rax	      2789	write.c	FUNCTION_36	DO_1	FOR_2
0x4004ffb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4005002	          0x488b10	                    mov rdx, qword [rax]	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4005005	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x400500c	          0x4801c2	                            add rdx, rax	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x400500f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4005016	          0x488910	                    mov qword [rax], rdx	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4005019	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4005020	          0x488b00	                    mov rax, qword [rax]	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4005023	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x400502a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2791	write.c	FUNCTION_36	DO_1	FOR_2
0x4005031	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2791	write.c	FUNCTION_36	DO_1	FOR_2
0x4005035	        0x48894598	             mov qword [rbp - 0x68], rax	      2791	write.c	FUNCTION_36	DO_1	FOR_2
0x4005039	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2792	write.c	FUNCTION_36	DO_1	FOR_2
0x4005040	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2792	write.c	FUNCTION_36	DO_1	FOR_2
0x4005044	        0x488945a0	             mov qword [rbp - 0x60], rax	      2792	write.c	FUNCTION_36	DO_1	FOR_2
0x4005048	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400504f	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005052	          0x83f80d	                            cmp eax, 0xd	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005055	     0xf87ff060000	                            ja 0x400575a	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400505b	            0x89c0	                            mov eax, eax	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400505d	    0x488b04c50000	                  mov rax, qword [rax*8]	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005065	            0xffe0	                                 jmp rax	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005067	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2797	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005072	      0xe91a070000	                           jmp 0x4005791	      2798	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005077	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x400507b	            0x89c2	                            mov edx, eax	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x400507d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4005084	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4005088	          0x4889c1	                            mov rcx, rax	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x400508b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x400508f	          0x4801c8	                            add rax, rcx	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4005092	            0x89d6	                            mov esi, edx	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4005094	          0x4889c7	                            mov rdi, rax	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4005097	      0xe855fbffff	                    call sym.relax_align	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x400509c	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x40050a3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050a7	            0x89c2	                            mov edx, eax	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050a9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050b0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050b4	          0x4889c1	                            mov rcx, rax	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050b7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050be	          0x4801c8	                            add rax, rcx	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050c1	            0x89d6	                            mov esi, edx	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050c3	          0x4889c7	                            mov rdi, rax	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050c6	      0xe826fbffff	                    call sym.relax_align	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050cb	        0x48894580	             mov qword [rbp - 0x80], rax	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x40050cf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x40050d6	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x40050d9	            0x85c0	                           test eax, eax	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x40050db	            0x743a	                            je 0x4005117	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x40050dd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x40050e4	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x40050e7	            0x89c0	                            mov eax, eax	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x40050e9	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x40050f0	            0x730b	                           jae 0x40050fd	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x40050f2	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      2882	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x40050fd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4005104	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4005107	            0x89c0	                            mov eax, eax	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4005109	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x400510d	            0x7308	                           jae 0x4005117	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x400510f	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4005117	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2887	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400511b	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	      2887	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005122	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2887	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005129	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005131	     0xf8953060000	                           jns 0x400578a	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005137	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400513d	          0x83e010	                           and eax, 0x10	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005140	            0x85c0	                           test eax, eax	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005142	     0xf8442060000	                            je 0x400578a	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005148	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400514e	          0x83e00f	                            and eax, 0xf	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005151	          0x83f801	                              cmp eax, 1	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005154	     0xf8e30060000	                           jle 0x400578a	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400515a	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2897	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_23
0x4005161	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2897	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_23
0x4005168	        0x488945a8	             mov qword [rbp - 0x58], rax	      2897	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_23
0x400516c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005170	          0x488b00	                    mov rax, qword [rax]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005173	        0x4883c030	                           add rax, 0x30	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005177	        0x488945b0	             mov qword [rbp - 0x50], rax	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400517b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x400517f	          0x4889c7	                            mov rdi, rax	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4005182	      0xe800000000	                          call 0x4005187	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4005187	        0x488945b8	             mov qword [rbp - 0x48], rax	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x400518b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x400518f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4005193	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x400519a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x400519e	          0x4801c2	                            add rdx, rax	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x40051a1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x40051a5	        0x48895018	             mov qword [rax + 0x18], rdx	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x40051a9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051ad	        0x488945c0	             mov qword [rbp - 0x40], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051b9	        0x488945c8	             mov qword [rbp - 0x38], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051c1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051c5	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051c9	            0x750e	                           jne 0x40051d9	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051cb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051cf	         0xfb65050	           movzx edx, byte [rax + 0x50] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051d3	          0x83ca02	                               or edx, 2	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051d6	          0x885050	               mov byte [rax + 0x50], dl	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051dd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051e1	          0x4889c2	                            mov rdx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051e4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051e8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051ec	          0x4801c2	                            add rdx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051f3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051f7	          0x48f7d0	                                 not rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051fa	          0x4821d0	                            and rax, rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40051fd	          0x4889c2	                            mov rdx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005200	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005204	        0x48895018	             mov qword [rax + 0x18], rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005208	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400520c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005210	          0x4889c2	                            mov rdx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005213	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005217	        0x488b4008	                mov rax, qword [rax + 8]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400521b	          0x4829c2	                            sub rdx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400521e	          0x4889d0	                            mov rax, rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005221	          0x4889c2	                            mov rdx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005224	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005228	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400522c	          0x4889c1	                            mov rcx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400522f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005233	        0x488b4008	                mov rax, qword [rax + 8]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005237	          0x4829c1	                            sub rcx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400523a	          0x4889c8	                            mov rax, rcx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400523d	          0x4839c2	                            cmp rdx, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005240	            0x7610	                           jbe 0x4005252	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005242	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005246	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400524a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400524e	        0x48895018	             mov qword [rax + 0x18], rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005252	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005256	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400525a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400525e	        0x48895010	             mov qword [rax + 0x10], rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4005262	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2904	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_27
0x4005269	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2904	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_27
0x400526d	      0xba7c000000	                           mov edx, 0x7c	      2904	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_27
0x4005272	          0x4889ce	                            mov rsi, rcx	      2904	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_27
0x4005275	          0x4889c7	                            mov rdi, rax	      2904	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_27
0x4005278	      0xe800000000	                          call 0x400527d	      2904	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_27
0x400527d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2907	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005284	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2907	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005288	          0x4889c6	                            mov rsi, rax	      2905	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_28
0x400528b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2906	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005292	        0x488d507c	                   lea rdx, [rax + 0x7c]	      2906	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005296	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2906	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400529d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2906	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052a1	        0x488d0c02	                    lea rcx, [rdx + rax]	      2906	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2905	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_28
0x40052a9	        0x4883c07c	                           add rax, 0x7c	      2905	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_28
0x40052ad	          0x4889f2	                            mov rdx, rsi	      2905	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_28
0x40052b0	          0x4889ce	                            mov rsi, rcx	      2905	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_28
0x40052b3	          0x4889c7	                            mov rdi, rax	      2905	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_28
0x40052b6	      0xe800000000	                          call 0x40052bb	      2905	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_28
0x40052bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2908	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052bf	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2908	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052c6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052d1	          0x4889c2	                            mov rdx, rax	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052d4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052db	          0x4801c2	                            add rdx, rax	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052de	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052e2	          0x4801c2	                            add rdx, rax	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052e5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052e9	          0x488910	                    mov qword [rax], rdx	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2910	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052f0	    0x48c740100000	               mov qword [rax + 0x10], 0	      2910	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052f8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40052ff	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005303	      0xba01000000	                              mov edx, 1	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005308	            0x89c1	                            mov ecx, eax	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400530a	          0x48d3e2	                             shl rdx, cl	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400530d	          0x4889d1	                            mov rcx, rdx	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005310	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005317	        0x488b5818	            mov rbx, qword [rax + 0x18] 	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400531b	          0x4889c8	                            mov rax, rcx	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400531e	            0x4899	                                     cqo	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005320	          0x48f7fb	                                idiv rbx	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005323	          0x4889c2	                            mov rdx, rax	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005326	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400532a	        0x48895020	             mov qword [rax + 0x20], rdx	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400532e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005332	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005336	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400533a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400533e	        0x480fafd0	                           imul rdx, rax	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005342	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005349	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400534d	      0xbe01000000	                              mov esi, 1	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005352	            0x89c1	                            mov ecx, eax	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005354	          0x48d3e6	                             shl rsi, cl	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005357	          0x4889f0	                            mov rax, rsi	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400535a	          0x4839c2	                            cmp rdx, rax	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400535d	            0x7429	                            je 0x4005388	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400535f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005366	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400536a	      0xba01000000	                              mov edx, 1	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400536f	            0x89c1	                            mov ecx, eax	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005371	          0x48d3e2	                             shl rdx, cl	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005374	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005378	        0x48895020	             mov qword [rax + 0x20], rdx	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400537c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2917	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005380	    0x48c740180100	               mov qword [rax + 0x18], 1	      2917	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4005388	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400538c	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005390	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005394	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4005398	        0x480fafc2	                           imul rax, rdx	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400539c	    0x48018570ffff	            add qword [rbp - 0x90], rax 	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053a7	          0x488b00	                    mov rax, qword [rax]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053aa	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053b1	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053b8	          0x4801ca	                            add rdx, rcx	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053bb	          0x4829d0	                            sub rax, rdx	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053be	          0x4889c2	                            mov rdx, rax	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053c5	          0x488910	                    mov qword [rax], rdx	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053cc	         0xfb6405a	           movzx eax, byte [rax + 0x5a] 	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053d0	          0x83e001	                              and eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053d3	          0x83f001	                              xor eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053d6	            0x89c2	                            mov edx, eax	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053dc	            0x89d1	                            mov ecx, edx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053de	          0x83e101	                              and ecx, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053e1	         0xfb6505a	           movzx edx, byte [rax + 0x5a] 	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053e5	          0x83e2fe	                     and edx, 0xfffffffe	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053e8	             0x9ca	                             or edx, ecx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053ea	          0x88505a	               mov byte [rax + 0x5a], dl	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053ed	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053f4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053f8	        0x48895038	             mov qword [rax + 0x38], rdx	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40053fc	      0xe989030000	                           jmp 0x400578a	      2931	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005401	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2935	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005405	        0x48894588	             mov qword [rbp - 0x78], rax	      2935	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005409	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x400540e	            0x7439	                            je 0x4005449	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x4005410	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4005414	          0x4889c7	                            mov rdi, rax	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4005417	      0xe800000000	                          call 0x400541c	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400541c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4005420	          0x4885c0	                           test rax, rax	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4005423	            0x7414	                            je 0x4005439	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4005425	      0xba00000000	                              mov edx, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400542a	      0xbe800b0000	                          mov esi, 0xb80	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400542f	      0xbf00000000	                              mov edi, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4005434	      0xe800000000	                          call 0x4005439	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4005439	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x400543d	          0x4889c7	                            mov rdi, rax	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4005440	      0xe800000000	                          call 0x4005445	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4005445	        0x48014588	            add qword [rbp - 0x78], rax 	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4005449	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4005450	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4005454	          0x4885c0	                           test rax, rax	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4005457	            0x7514	                           jne 0x400546d	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4005459	      0xba00000000	                              mov edx, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x400545e	      0xbe840b0000	                          mov esi, 0xb84	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4005463	      0xbf00000000	                              mov edi, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4005468	      0xe800000000	                          call 0x400546d	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x400546d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005474	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005478	          0x488b10	                    mov rdx, qword [rax]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400547b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005482	          0x4801d0	                            add rax, rdx	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005485	        0x488945d0	             mov qword [rbp - 0x30], rax	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005489	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2950	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400548d	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      2950	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005491	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2950	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005498	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x400549f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40054a3	          0x4889c2	                            mov rdx, rax	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40054a6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40054ad	          0x4801d0	                            add rax, rdx	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40054b0	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40054b4	     0xf86d3020000	                           jbe 0x400578d	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40054ba	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2957	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40054c5	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x40054cc	            0x7f0f	                            jg 0x40054dd	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x40054ce	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	      2973	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x40054d8	      0xe9b4020000	                           jmp 0x4005791	      2974	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x40054dd	      0xbf00000000	                              mov edi, 0	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x40054e2	      0xe800000000	                          call 0x40054e7	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x40054e7	          0x4889c2	                            mov rdx, rax	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x40054ea	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40054f1	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40054f4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40054fb	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40054ff	            0x89ce	                            mov esi, ecx	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4005501	          0x4889c7	                            mov rdi, rax	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4005504	      0xb800000000	                              mov eax, 0	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4005509	      0xe800000000	                          call 0x400550e	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x400550e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2982	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4005515	    0xc7405c020000	               mov dword [rax + 0x5c], 2	      2982	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x400551c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2983	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4005523	    0xc74060000000	               mov dword [rax + 0x60], 0	      2983	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x400552a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2984	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4005531	    0x48c740200000	               mov qword [rax + 0x20], 0	      2984	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4005539	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x400553d	    0x482b8550ffff	             sub rax, qword [rbp - 0xb0]	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4005544	          0x4889c2	                            mov rdx, rax	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4005547	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x400554e	        0x48895010	             mov qword [rax + 0x10], rdx	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4005552	      0xe936020000	                           jmp 0x400578d	      2988	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005557	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2992	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005562	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x4005567	     0xf8423020000	                            je 0x4005790	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x400556d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4005571	          0x4889c7	                            mov rdi, rax	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4005574	      0xe800000000	                          call 0x4005579	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4005579	        0x488945d8	             mov qword [rbp - 0x28], rax	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x400557d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4005581	          0x4889c7	                            mov rdi, rax	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4005584	      0xe800000000	                          call 0x4005589	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4005589	    0x483d00000000	                              cmp rax, 0	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x400558f	            0x7520	                           jne 0x40055b1	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4005591	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4005595	          0x4889c7	                            mov rdi, rax	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4005598	      0xe800000000	                          call 0x400559d	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x400559d	            0x85c0	                           test eax, eax	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x400559f	            0x7510	                           jne 0x40055b1	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x40055a1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40055a5	          0x4889c7	                            mov rdi, rax	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40055a8	      0xe800000000	                          call 0x40055ad	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40055ad	            0x85c0	                           test eax, eax	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40055af	            0x7545	                           jne 0x40055f6	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40055b1	      0xbf00000000	                              mov edi, 0	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x40055b6	      0xe800000000	                          call 0x40055bb	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x40055bb	          0x4889c2	                            mov rdx, rax	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x40055be	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055c5	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055c8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055cf	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055d3	            0x89ce	                            mov esi, ecx	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055d5	          0x4889c7	                            mov rdi, rax	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055d8	      0xb800000000	                              mov eax, 0	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055dd	      0xe800000000	                          call 0x40055e2	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x40055e2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x40055e9	    0x48c740280000	               mov qword [rax + 0x28], 0	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x40055f1	      0xe99a010000	                           jmp 0x4005790	      3025	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40055f6	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x40055fb	            0x795d	                           jns 0x400565a	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x40055fd	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4005604	            0x7f0f	                            jg 0x4005615	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4005606	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	      3013	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4005610	      0xe97c010000	                           jmp 0x4005791	      3014	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4005615	      0xbf00000000	                              mov edi, 0	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x400561a	      0xe800000000	                          call 0x400561f	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x400561f	          0x4889c2	                            mov rdx, rax	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4005622	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4005629	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x400562c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4005633	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4005637	            0x89ce	                            mov esi, ecx	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4005639	          0x4889c7	                            mov rdi, rax	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x400563c	      0xb800000000	                              mov eax, 0	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4005641	      0xe800000000	                          call 0x4005646	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4005646	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x400564d	    0x48c740280000	               mov qword [rax + 0x28], 0	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4005655	      0xe936010000	                           jmp 0x4005790	      3025	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400565a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005661	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005665	          0x4889c2	                            mov rdx, rax	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005668	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x400566c	          0x4801c2	                            add rdx, rax	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x400566f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005673	          0x4801c2	                            add rdx, rax	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005676	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x400567d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005681	          0x488b00	                    mov rax, qword [rax]	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005684	          0x4829c2	                            sub rdx, rax	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005687	          0x4889d0	                            mov rax, rdx	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x400568a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4005691	      0xe9fa000000	                           jmp 0x4005790	      3025	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005696	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400569d	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x40056a4	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x40056ab	          0x4889ce	                            mov rsi, rcx	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x40056ae	          0x4889c7	                            mov rdi, rax	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x40056b1	      0xe800000000	                          call 0x40056b6	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x40056b6	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x40056bd	      0xe9cf000000	                           jmp 0x4005791	      3037	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40056c2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40056c9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40056cd	          0x4889c7	                            mov rdi, rax	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40056d0	      0xe800000000	                          call 0x40056d5	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40056d5	        0x488945e0	             mov qword [rbp - 0x20], rax	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40056d9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056e0	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056e3	            0x89c2	                            mov edx, eax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056e9	            0x89d6	                            mov esi, edx	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056eb	          0x4889c7	                            mov rdi, rax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056ee	      0xe800000000	                          call 0x40056f3	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056f3	            0x89c0	                            mov eax, eax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056f5	        0x488945e8	             mov qword [rbp - 0x18], rax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40056f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005700	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005704	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005708	          0x4829c2	                            sub rdx, rax	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400570b	          0x4889d0	                            mov rax, rdx	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400570e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005715	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3047	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400571c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3047	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005720	        0x48895020	             mov qword [rax + 0x20], rdx	      3047	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005724	            0xeb6b	                           jmp 0x4005791	      3049	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005726	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x400572d	          0x4889c7	                            mov rdi, rax	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4005730	      0xe800000000	                          call 0x4005735	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4005735	            0x4898	                                    cdqe	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4005737	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x400573e	            0xeb51	                           jmp 0x4005791	      3053	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005740	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4005747	          0x4889c7	                            mov rdi, rax	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x400574a	      0xe800000000	                          call 0x400574f	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x400574f	            0x4898	                                    cdqe	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4005751	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4005758	            0xeb37	                           jmp 0x4005791	      3057	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400575a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4005761	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4005764	            0x89c3	                            mov ebx, eax	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4005766	      0xbf00000000	                              mov edi, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x400576b	      0xe800000000	                          call 0x4005770	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4005770	      0xb900000000	                              mov ecx, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4005775	      0xbaf40b0000	                          mov edx, 0xbf4	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x400577a	          0x4889de	                            mov rsi, rbx	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x400577d	          0x4889c7	                            mov rdi, rax	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4005780	      0xb800000000	                              mov eax, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4005785	      0xe800000000	                          call 0x400578a	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x400578a	              0x90	                                     nop	      2931	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400578b	            0xeb04	                           jmp 0x4005791	      2931	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400578d	              0x90	                                     nop	      2988	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400578e	            0xeb01	                           jmp 0x4005791	      2988	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005790	              0x90	                                     nop	      3025	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4005791	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4005799	            0x7469	                            je 0x4005804	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x400579b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40057a2	    0x48018568ffff	            add qword [rbp - 0x98], rax 	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40057a9	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40057b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x40057ba	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x40057bd	          0x83f80b	                            cmp eax, 0xb	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x40057c0	            0x7509	                           jne 0x40057cb	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x40057c2	    0x83853cffffff	            add dword [rbp - 0xc4], 0x10	      3068	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x40057c9	            0xeb39	                           jmp 0x4005804	      3068	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x40057cb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057d2	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057d5	          0x83f802	                              cmp eax, 2	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057d8	            0x7520	                           jne 0x40057fa	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057da	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      3070	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057e0	          0x83e010	                           and eax, 0x10	      3070	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057e3	            0x85c0	                           test eax, eax	      3070	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057e5	            0x7413	                            je 0x40057fa	      3070	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057e7	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057ef	            0x7509	                           jne 0x40057fa	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057f1	    0x83853cffffff	            add dword [rbp - 0xc4], 0x10	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057f8	            0xeb0a	                           jmp 0x4005804	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x40057fa	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      3074	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_4
0x4005804	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x400580b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x400580f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4005816	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x400581e	     0xf8593f7ffff	                           jne 0x4004fb7	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4005824	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x400582c	            0x7523	                           jne 0x4005851	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x400582e	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4005834	          0x83e010	                           and eax, 0x10	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4005837	            0x85c0	                           test eax, eax	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4005839	            0x7516	                           jne 0x4005851	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x400583b	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4005841	          0x83e0f0	                     and eax, 0xfffffff0	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4005844	            0x85c0	                           test eax, eax	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4005846	            0x7409	                            je 0x4005851	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4005848	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x400584f	            0xeb0a	                           jmp 0x400585b	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x4005851	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      3083	write.c	FUNCTION_36	DO_1	ELSE_5
0x400585b	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      3086	write.c	FUNCTION_36
0x4005862	            0x7416	                            je 0x400587a	      3086	write.c	FUNCTION_36
0x4005864	    0x4883ad60ffff	               sub qword [rbp - 0xa0], 1	      3086	write.c	FUNCTION_36
0x400586c	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      3086	write.c	FUNCTION_36
0x4005874	     0xf8515f7ffff	                           jne 0x4004f8f	      3086	write.c	FUNCTION_36
0x400587a	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      3088	write.c	FUNCTION_36	IF_26
0x4005881	            0x7424	                            je 0x40058a7	      3088	write.c	FUNCTION_36	IF_26
0x4005883	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400588a	          0x488b18	                    mov rbx, qword [rax]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400588d	      0xbf00000000	                              mov edi, 0	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4005892	      0xe800000000	                          call 0x4005897	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4005897	          0x4889de	                            mov rsi, rbx	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400589a	          0x4889c7	                            mov rdi, rax	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400589d	      0xb800000000	                              mov eax, 0	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x40058a2	      0xe800000000	                          call 0x40058a7	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x40058a7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3093	write.c	FUNCTION_36	FOR_5
0x40058ae	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3093	write.c	FUNCTION_36	FOR_5
0x40058b5	            0xeb4b	                           jmp 0x4005902	      3093	write.c	FUNCTION_36	FOR_5
0x40058b7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x40058be	        0x488b5008	                mov rdx, qword [rax + 8]	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x40058c2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x40058c9	          0x488b00	                    mov rax, qword [rax]	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x40058cc	          0x4839c2	                            cmp rdx, rax	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x40058cf	            0x741f	                            je 0x40058f0	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x40058d1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3096	write.c	FUNCTION_36	FOR_5	IF_27
0x40058d8	          0x488b10	                    mov rdx, qword [rax]	      3096	write.c	FUNCTION_36	FOR_5	IF_27
0x40058db	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3096	write.c	FUNCTION_36	FOR_5	IF_27
0x40058e2	        0x48895008	                mov qword [rax + 8], rdx	      3096	write.c	FUNCTION_36	FOR_5	IF_27
0x40058e6	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	      3097	write.c	FUNCTION_36	FOR_5	IF_27
0x40058f0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3093	write.c	FUNCTION_36	FOR_5
0x40058f7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3093	write.c	FUNCTION_36	FOR_5
0x40058fb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3093	write.c	FUNCTION_36	FOR_5
0x4005902	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3093	write.c	FUNCTION_36	FOR_5
0x400590a	            0x75ab	                           jne 0x40058b7	      3093	write.c	FUNCTION_36	FOR_5
0x400590c	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      3099	write.c	FUNCTION_36
0x4005912	    0x4881c4e80000	                           add rsp, 0xe8	      3100	write.c	FUNCTION_36
0x4005919	              0x5b	                                 pop rbx	      3100	write.c	FUNCTION_36
0x400591a	              0x5d	                                 pop rbp	      3100	write.c	FUNCTION_36
0x400591b	              0xc3	                                     ret	      3100	write.c	FUNCTION_36
