copy_elf_program_header	ELSE,1:DO,0:CALL,10:WHILE,0:FOR,4:IF,17:SWITCH,0:functions,0	727
0x4012130	              0x55	                                push rbp	      7196	elf.c	FUNCTION_81
0x4012131	          0x4889e5	                            mov rbp, rsp	      7196	elf.c	FUNCTION_81
0x4012134	    0x4881ec900000	                           sub rsp, 0x90	      7196	elf.c	FUNCTION_81
0x401213b	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      7196	elf.c	FUNCTION_81
0x4012142	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      7196	elf.c	FUNCTION_81
0x4012149	    0x64488b042528	                mov rax, qword fs:[0x28]	      7196	elf.c	FUNCTION_81
0x4012152	        0x488945f8	                mov qword [rbp - 8], rax	      7196	elf.c	FUNCTION_81
0x4012156	            0x31c0	                            xor eax, eax	      7196	elf.c	FUNCTION_81
0x4012158	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      7204	elf.c	FUNCTION_81
0x401215f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7207	elf.c	FUNCTION_81	CALL_1
0x4012166	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7207	elf.c	FUNCTION_81	CALL_1
0x401216d	        0x488945e0	             mov qword [rbp - 0x20], rax	      7207	elf.c	FUNCTION_81	CALL_1
0x4012171	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      7209	elf.c	FUNCTION_81
0x4012179	        0x488d45a0	                   lea rax, [rbp - 0x60]	      7210	elf.c	FUNCTION_81
0x401217d	        0x488945a8	             mov qword [rbp - 0x58], rax	      7210	elf.c	FUNCTION_81
0x4012181	    0xc74590000000	               mov dword [rbp - 0x70], 0	      7214	elf.c	FUNCTION_81
0x4012188	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7215	elf.c	FUNCTION_81	CALL_2
0x401218f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7215	elf.c	FUNCTION_81	CALL_2
0x4012196	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7215	elf.c	FUNCTION_81	CALL_2
0x4012199	          0x89459c	             mov dword [rbp - 0x64], eax	      7215	elf.c	FUNCTION_81	CALL_2
0x401219c	    0xc74588000000	               mov dword [rbp - 0x78], 0	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121a3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121aa	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121b1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121b5	        0x488945b0	             mov qword [rbp - 0x50], rax	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121b9	            0xeb1f	                           jmp 0x40121da	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121bb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x40121bf	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x40121c3	          0x4885c0	                           test rax, rax	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x40121c6	            0x7409	                            je 0x40121d1	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x40121c8	    0xc74590010000	               mov dword [rbp - 0x70], 1	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x40121cf	            0xeb11	                           jmp 0x40121e2	      7222	elf.c	FUNCTION_81	FOR_1	IF_1
0x40121d1	        0x83458801	               add dword [rbp - 0x78], 1	      7218	elf.c	FUNCTION_81	FOR_1
0x40121d5	      0x488345b040	           add qword [rbp - 0x50], 0x40 	      7218	elf.c	FUNCTION_81	FOR_1
0x40121da	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121dd	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121e0	            0x72d9	                            jb 0x40121bb	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x40121e2	    0xc74588000000	               mov dword [rbp - 0x78], 0	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x40121e9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x40121f0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x40121f7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x40121fb	        0x488945b0	             mov qword [rbp - 0x50], rax	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x40121ff	      0xe9d5090000	                           jmp 0x4012bd9	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x4012204	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      7233	elf.c	FUNCTION_81	FOR_2
0x401220c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x4012213	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x401221a	        0x488945b8	             mov qword [rbp - 0x48], rax	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x401221e	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x4012225	      0xe9e5020000	                           jmp 0x401250f	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x401222a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7241	elf.c	FUNCTION_81	FOR_2	FOR_3	CALL_5
0x401222e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7241	elf.c	FUNCTION_81	FOR_2	FOR_3	CALL_5
0x4012235	        0x488945e8	             mov qword [rbp - 0x18], rax	      7241	elf.c	FUNCTION_81	FOR_2	FOR_3	CALL_5
0x4012239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401223d	        0x488b4008	                mov rax, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012241	      0x2500040000	                          and eax, 0x400	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012246	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012249	            0x7429	                            je 0x4012274	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401224b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401224f	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012252	        0x4883f807	                              cmp rax, 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012256	            0x7454	                            je 0x40122ac	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012258	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401225c	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401225f	    0x483d52e57464	                     cmp rax, 0x6474e552	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012265	            0x7445	                            je 0x40122ac	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012267	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401226b	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401226e	        0x4883f801	                              cmp rax, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012272	            0x7438	                            je 0x40122ac	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012274	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012278	        0x488b4008	                mov rax, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401227c	      0x2500040000	                          and eax, 0x400	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012281	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012284	     0xf8579020000	                           jne 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401228a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401228e	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012291	        0x4883f807	                              cmp rax, 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012295	     0xf8468020000	                            je 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401229b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401229f	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122a2	        0x4883f806	                              cmp rax, 6	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122a6	     0xf8457020000	                            je 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122b0	        0x488b4008	                mov rax, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122b4	          0x83e002	                              and eax, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122b7	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122ba	            0x755b	                           jne 0x4012317	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122bc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122c0	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122c3	        0x4883f801	                              cmp rax, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122c7	     0xf8436020000	                            je 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122d1	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122d4	        0x4883f802	                              cmp rax, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122d8	     0xf8425020000	                            je 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122de	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122e2	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122e5	    0x483d50e57464	                     cmp rax, 0x6474e550	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122eb	     0xf8412020000	                            je 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122f1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122f5	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122f8	    0x483d52e57464	                     cmp rax, 0x6474e552	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40122fe	     0xf84ff010000	                            je 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012304	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012308	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401230b	    0x483d51e57464	                     cmp rax, 0x6474e551	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012311	     0xf84ec010000	                            je 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012317	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401231b	          0x8b4004	                mov eax, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401231e	          0x83f808	                              cmp eax, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012321	     0xf8480000000	                            je 0x40123a7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012327	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401232b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401232f	          0x4889c2	                            mov rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012332	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012336	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401233a	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401233d	     0xf82c0010000	                            jb 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012343	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012347	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401234b	          0x4889c2	                            mov rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401234e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012352	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012356	          0x4829c2	                            sub rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012359	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401235d	        0x488b4008	                mov rax, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012361	      0x2500040000	                          and eax, 0x400	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012366	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012369	            0x7419	                            je 0x4012384	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401236b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401236f	          0x8b4004	                mov eax, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012372	          0x83f808	                              cmp eax, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012375	            0x750d	                           jne 0x4012384	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012377	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401237b	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401237e	        0x4883f807	                              cmp rax, 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012382	            0x750a	                           jne 0x401238e	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012388	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401238c	            0xeb05	                           jmp 0x4012393	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401238e	      0xb800000000	                              mov eax, 0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012393	          0x4801c2	                            add rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012396	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401239a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401239e	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123a1	     0xf875c010000	                            ja 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123ab	        0x488b4008	                mov rax, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123af	          0x83e002	                              and eax, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123b2	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123b5	            0x747a	                            je 0x4012431	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123bb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123bf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123c3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123c7	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123ca	     0xf8233010000	                            jb 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123d4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123d8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123dc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123e0	          0x4829c2	                            sub rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123e7	        0x488b4008	                mov rax, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123eb	      0x2500040000	                          and eax, 0x400	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123f0	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123f3	            0x7419	                            je 0x401240e	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123f9	          0x8b4004	                mov eax, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123fc	          0x83f808	                              cmp eax, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40123ff	            0x750d	                           jne 0x401240e	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012401	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012405	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012408	        0x4883f807	                              cmp rax, 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401240c	            0x750a	                           jne 0x4012418	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401240e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012412	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012416	            0xeb05	                           jmp 0x401241d	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012418	      0xb800000000	                              mov eax, 0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401241d	          0x4801c2	                            add rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012420	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012424	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012428	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401242b	     0xf87d2000000	                            ja 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012431	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012435	          0x488b00	                    mov rax, qword [rax]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012438	        0x4883f802	                              cmp rax, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401243c	     0xf85ae000000	                           jne 0x40124f0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012442	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012446	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401244a	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401244d	     0xf859d000000	                           jne 0x40124f0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012453	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012457	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401245b	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401245e	     0xf848c000000	                            je 0x40124f0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012464	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012468	          0x8b4004	                mov eax, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401246b	          0x83f808	                              cmp eax, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401246e	            0x743b	                            je 0x40124ab	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012470	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012474	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012478	          0x4889c2	                            mov rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401247b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401247f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012483	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012486	            0x767b	                           jbe 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012488	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401248c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012490	          0x4889c2	                            mov rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012493	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x4012497	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401249b	          0x4829c2	                            sub rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x401249e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124a2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124a6	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124a9	            0x7358	                           jae 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124af	        0x488b4008	                mov rax, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124b3	          0x83e002	                              and eax, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124b6	          0x4885c0	                           test rax, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124b9	            0x7435	                            je 0x40124f0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124bf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124c3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124c7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124cb	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124ce	            0x7633	                           jbe 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124d4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124d8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124dc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124e0	          0x4829c2	                            sub rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124e3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124e7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124eb	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124ee	            0x7313	                           jae 0x4012503	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x40124f0	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x40124f5	            0x7508	                           jne 0x40124ff	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x40124f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7245	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x40124fb	        0x488945c8	             mov qword [rbp - 0x38], rax	      7245	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x40124ff	        0x83459401	               add dword [rbp - 0x6c], 1	      7246	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2
0x4012503	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7239	elf.c	FUNCTION_81	FOR_2	FOR_3
0x4012507	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7239	elf.c	FUNCTION_81	FOR_2	FOR_3
0x401250b	        0x488945b8	             mov qword [rbp - 0x48], rax	      7239	elf.c	FUNCTION_81	FOR_2	FOR_3
0x401250f	      0x48837db800	               cmp qword [rbp - 0x48], 0	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x4012514	     0xf8510fdffff	                           jne 0x401222a	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x401251a	    0x48c745c05000	           mov qword [rbp - 0x40], 0x50 	      7252	elf.c	FUNCTION_81	FOR_2
0x4012522	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x4012526	            0x741a	                            je 0x4012542	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x4012528	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x401252b	    0x488d14c50000	                        lea rdx, [rax*8]	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x4012533	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x4012537	          0x4801d0	                            add rax, rdx	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x401253a	        0x4883e808	                              sub rax, 8	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x401253e	        0x488945c0	             mov qword [rbp - 0x40], rax	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x4012542	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x4012546	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x401254d	          0x4889d6	                            mov rsi, rdx	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x4012550	          0x4889c7	                            mov rdi, rax	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x4012553	      0xe800000000	                          call 0x4012558	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x4012558	        0x488945f0	             mov qword [rbp - 0x10], rax	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x401255c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x4012561	            0x750a	                           jne 0x401256d	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x4012563	      0xb800000000	                              mov eax, 0	      7257	elf.c	FUNCTION_81	FOR_2	IF_5
0x4012568	      0xe999060000	                           jmp 0x4012c06	      7257	elf.c	FUNCTION_81	FOR_2	IF_5
0x401256d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7261	elf.c	FUNCTION_81	FOR_2
0x4012571	    0x48c700000000	                      mov qword [rax], 0	      7261	elf.c	FUNCTION_81	FOR_2
0x4012578	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7262	elf.c	FUNCTION_81	FOR_2
0x401257c	          0x488b10	                    mov rdx, qword [rax]	      7262	elf.c	FUNCTION_81	FOR_2
0x401257f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7262	elf.c	FUNCTION_81	FOR_2
0x4012583	        0x48895008	                mov qword [rax + 8], rdx	      7262	elf.c	FUNCTION_81	FOR_2
0x4012587	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7263	elf.c	FUNCTION_81	FOR_2
0x401258b	        0x488b5008	                mov rdx, qword [rax + 8]	      7263	elf.c	FUNCTION_81	FOR_2
0x401258f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7263	elf.c	FUNCTION_81	FOR_2
0x4012593	        0x48895010	             mov qword [rax + 0x10], rdx	      7263	elf.c	FUNCTION_81	FOR_2
0x4012597	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7264	elf.c	FUNCTION_81	FOR_2
0x401259b	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7264	elf.c	FUNCTION_81	FOR_2
0x401259f	          0x83ca01	                               or edx, 1	      7264	elf.c	FUNCTION_81	FOR_2
0x40125a2	          0x885040	               mov byte [rax + 0x40], dl	      7264	elf.c	FUNCTION_81	FOR_2
0x40125a5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7265	elf.c	FUNCTION_81	FOR_2
0x40125a9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7265	elf.c	FUNCTION_81	FOR_2
0x40125ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7265	elf.c	FUNCTION_81	FOR_2
0x40125b1	        0x48895018	             mov qword [rax + 0x18], rdx	      7265	elf.c	FUNCTION_81	FOR_2
0x40125b5	          0x8b4590	             mov eax, dword [rbp - 0x70]	      7266	elf.c	FUNCTION_81	FOR_2
0x40125b8	          0x83e001	                              and eax, 1	      7266	elf.c	FUNCTION_81	FOR_2
0x40125bb	            0x89c2	                            mov edx, eax	      7266	elf.c	FUNCTION_81	FOR_2
0x40125bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7266	elf.c	FUNCTION_81	FOR_2
0x40125c1	          0x83e201	                              and edx, 1	      7266	elf.c	FUNCTION_81	FOR_2
0x40125c4	          0x8d0c12	                    lea ecx, [rdx + rdx]	      7266	elf.c	FUNCTION_81	FOR_2
0x40125c7	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7266	elf.c	FUNCTION_81	FOR_2
0x40125cb	          0x83e2fd	                     and edx, 0xfffffffd	      7266	elf.c	FUNCTION_81	FOR_2
0x40125ce	             0x9ca	                             or edx, ecx	      7266	elf.c	FUNCTION_81	FOR_2
0x40125d0	          0x885040	               mov byte [rax + 0x40], dl	      7266	elf.c	FUNCTION_81	FOR_2
0x40125d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7267	elf.c	FUNCTION_81	FOR_2
0x40125d7	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7267	elf.c	FUNCTION_81	FOR_2
0x40125db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7267	elf.c	FUNCTION_81	FOR_2
0x40125df	        0x48895028	             mov qword [rax + 0x28], rdx	      7267	elf.c	FUNCTION_81	FOR_2
0x40125e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7268	elf.c	FUNCTION_81	FOR_2
0x40125e7	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7268	elf.c	FUNCTION_81	FOR_2
0x40125eb	          0x83ca04	                               or edx, 4	      7268	elf.c	FUNCTION_81	FOR_2
0x40125ee	          0x885040	               mov byte [rax + 0x40], dl	      7268	elf.c	FUNCTION_81	FOR_2
0x40125f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7269	elf.c	FUNCTION_81	FOR_2
0x40125f5	    0x48c740200000	               mov qword [rax + 0x20], 0	      7269	elf.c	FUNCTION_81	FOR_2
0x40125fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012601	        0x488b4008	                mov rax, qword [rax + 8]	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012605	    0x483d52e57464	                     cmp rax, 0x6474e552	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x401260b	            0x7410	                            je 0x401261d	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x401260d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7272	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012611	        0x488b4008	                mov rax, qword [rax + 8]	      7272	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012615	    0x483d51e57464	                     cmp rax, 0x6474e551	      7272	elf.c	FUNCTION_81	FOR_2	IF_6
0x401261b	            0x751e	                           jne 0x401263b	      7272	elf.c	FUNCTION_81	FOR_2	IF_6
0x401261d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012621	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012625	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012629	        0x48895030	             mov qword [rax + 0x30], rdx	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x401262d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012631	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012635	          0x83ca08	                               or edx, 8	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x4012638	          0x885040	               mov byte [rax + 0x40], dl	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x401263b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7286	elf.c	FUNCTION_81	FOR_2
0x401263f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7286	elf.c	FUNCTION_81	FOR_2
0x4012643	          0x4885c0	                           test rax, rax	      7287	elf.c	FUNCTION_81	FOR_2
0x4012646	            0x751d	                           jne 0x4012665	      7287	elf.c	FUNCTION_81	FOR_2
0x4012648	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7287	elf.c	FUNCTION_81	FOR_2
0x401264c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7287	elf.c	FUNCTION_81	FOR_2
0x4012650	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7287	elf.c	FUNCTION_81	FOR_2
0x4012654	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      7287	elf.c	FUNCTION_81	FOR_2
0x4012657	            0x89c0	                            mov eax, eax	      7287	elf.c	FUNCTION_81	FOR_2
0x4012659	          0x4839c2	                            cmp rdx, rax	      7287	elf.c	FUNCTION_81	FOR_2
0x401265c	            0x7207	                            jb 0x4012665	      7287	elf.c	FUNCTION_81	FOR_2
0x401265e	      0xb801000000	                              mov eax, 1	      7287	elf.c	FUNCTION_81	FOR_2
0x4012663	            0xeb05	                           jmp 0x401266a	      7287	elf.c	FUNCTION_81	FOR_2
0x4012665	      0xb800000000	                              mov eax, 0	      7287	elf.c	FUNCTION_81	FOR_2
0x401266a	          0x83e001	                              and eax, 1	      7286	elf.c	FUNCTION_81	FOR_2
0x401266d	            0x89c2	                            mov edx, eax	      7286	elf.c	FUNCTION_81	FOR_2
0x401266f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7286	elf.c	FUNCTION_81	FOR_2
0x4012673	          0x83e201	                              and edx, 1	      7286	elf.c	FUNCTION_81	FOR_2
0x4012676	            0x89d1	                            mov ecx, edx	      7286	elf.c	FUNCTION_81	FOR_2
0x4012678	          0xc1e104	                              shl ecx, 4	      7286	elf.c	FUNCTION_81	FOR_2
0x401267b	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7286	elf.c	FUNCTION_81	FOR_2
0x401267f	          0x83e2ef	                     and edx, 0xffffffef	      7286	elf.c	FUNCTION_81	FOR_2
0x4012682	             0x9ca	                             or edx, ecx	      7286	elf.c	FUNCTION_81	FOR_2
0x4012684	          0x885040	               mov byte [rax + 0x40], dl	      7286	elf.c	FUNCTION_81	FOR_2
0x4012687	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7289	elf.c	FUNCTION_81	FOR_2
0x401268b	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7289	elf.c	FUNCTION_81	FOR_2
0x401268f	          0x83e2df	                     and edx, 0xffffffdf	      7289	elf.c	FUNCTION_81	FOR_2
0x4012692	          0x885040	               mov byte [rax + 0x40], dl	      7289	elf.c	FUNCTION_81	FOR_2
0x4012695	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012699	            0x7411	                            je 0x40126ac	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x401269b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x401269f	          0x488b00	                    mov rax, qword [rax]	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126a2	        0x4883f801	                              cmp rax, 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126a6	     0xf8498000000	                            je 0x4012744	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126ac	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126b0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126b8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126bc	          0x4839c2	                            cmp rdx, rax	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126bf	            0x773e	                            ja 0x40126ff	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126c1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126c5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126c9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126cd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126d1	        0x488d3402	                    lea rsi, [rdx + rax]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7295	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126d9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      7295	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7296	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126e1	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      7296	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7296	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126e8	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7296	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126eb	           0xfafc1	                           imul eax, ecx	      7296	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126ee	            0x89c0	                            mov eax, eax	      7296	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126f0	          0x4801d0	                            add rax, rdx	      7296	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126f3	          0x4839c6	                            cmp rsi, rax	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126f6	            0x7207	                            jb 0x40126ff	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126f8	      0xb801000000	                              mov eax, 1	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126fd	            0xeb05	                           jmp 0x4012704	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x40126ff	      0xb800000000	                              mov eax, 0	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012704	          0x83e001	                              and eax, 1	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012707	            0x89c2	                            mov edx, eax	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012709	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x401270d	          0x83e201	                              and edx, 1	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012710	            0x89d1	                            mov ecx, edx	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012712	          0xc1e105	                              shl ecx, 5	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012715	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012719	          0x83e2df	                     and edx, 0xffffffdf	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x401271c	             0x9ca	                             or edx, ecx	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x401271e	          0x885040	               mov byte [rax + 0x40], dl	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x4012721	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x4012725	          0x488b00	                    mov rax, qword [rax]	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x4012728	        0x4883f801	                              cmp rax, 1	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x401272c	            0x7516	                           jne 0x4012744	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x401272e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x4012732	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x4012736	          0x83e020	                           and eax, 0x20	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x4012739	            0x84c0	                             test al, al	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x401273b	            0x7407	                            je 0x4012744	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x401273d	    0xc7458c010000	               mov dword [rbp - 0x74], 1	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x4012744	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      7302	elf.c	FUNCTION_81	FOR_2
0x401274c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x4012750	     0xf84d3030000	                            je 0x4012b29	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x4012756	    0xc74598000000	               mov dword [rbp - 0x68], 0	      7305	elf.c	FUNCTION_81	FOR_2	IF_9
0x401275d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012761	        0x488945b8	             mov qword [rbp - 0x48], rax	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012765	      0xe9b1030000	                           jmp 0x4012b1b	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x401276a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7311	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	CALL_8
0x401276e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7311	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	CALL_8
0x4012775	        0x488945e8	             mov qword [rbp - 0x18], rax	      7311	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	CALL_8
0x4012779	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401277d	        0x488b4008	                mov rax, qword [rax + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012781	      0x2500040000	                          and eax, 0x400	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012786	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012789	            0x7429	                            je 0x40127b4	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401278b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401278f	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012792	        0x4883f807	                              cmp rax, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012796	            0x7454	                            je 0x40127ec	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012798	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401279c	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401279f	    0x483d52e57464	                     cmp rax, 0x6474e552	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127a5	            0x7445	                            je 0x40127ec	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127a7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127ab	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127ae	        0x4883f801	                              cmp rax, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127b2	            0x7438	                            je 0x40127ec	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127b8	        0x488b4008	                mov rax, qword [rax + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127bc	      0x2500040000	                          and eax, 0x400	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127c1	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127c4	     0xf8545030000	                           jne 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127ca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127ce	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127d1	        0x4883f807	                              cmp rax, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127d5	     0xf8434030000	                            je 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127df	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127e2	        0x4883f806	                              cmp rax, 6	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127e6	     0xf8423030000	                            je 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127f0	        0x488b4008	                mov rax, qword [rax + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127f4	          0x83e002	                              and eax, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127f7	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127fa	            0x755b	                           jne 0x4012857	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40127fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012800	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012803	        0x4883f801	                              cmp rax, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012807	     0xf8402030000	                            je 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401280d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012811	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012814	        0x4883f802	                              cmp rax, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012818	     0xf84f1020000	                            je 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401281e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012822	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012825	    0x483d50e57464	                     cmp rax, 0x6474e550	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401282b	     0xf84de020000	                            je 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012831	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012835	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012838	    0x483d52e57464	                     cmp rax, 0x6474e552	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401283e	     0xf84cb020000	                            je 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012844	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012848	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401284b	    0x483d51e57464	                     cmp rax, 0x6474e551	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012851	     0xf84b8020000	                            je 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012857	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401285b	          0x8b4004	                mov eax, dword [rax + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401285e	          0x83f808	                              cmp eax, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012861	     0xf8480000000	                            je 0x40128e7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012867	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401286b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401286f	          0x4889c2	                            mov rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012872	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012876	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401287a	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401287d	     0xf828c020000	                            jb 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012883	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012887	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401288b	          0x4889c2	                            mov rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401288e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012892	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012896	          0x4829c2	                            sub rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012899	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401289d	        0x488b4008	                mov rax, qword [rax + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128a1	      0x2500040000	                          and eax, 0x400	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128a6	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128a9	            0x7419	                            je 0x40128c4	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128af	          0x8b4004	                mov eax, dword [rax + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128b2	          0x83f808	                              cmp eax, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128b5	            0x750d	                           jne 0x40128c4	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128b7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128bb	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128be	        0x4883f807	                              cmp rax, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128c2	            0x750a	                           jne 0x40128ce	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128c8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128cc	            0xeb05	                           jmp 0x40128d3	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128ce	      0xb800000000	                              mov eax, 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128d3	          0x4801c2	                            add rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128da	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128de	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128e1	     0xf8728020000	                            ja 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128eb	        0x488b4008	                mov rax, qword [rax + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128ef	          0x83e002	                              and eax, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128f2	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128f5	            0x747a	                            je 0x4012971	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128fb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40128ff	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012903	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012907	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401290a	     0xf82ff010000	                            jb 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012910	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012914	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012918	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401291c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012920	          0x4829c2	                            sub rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012923	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012927	        0x488b4008	                mov rax, qword [rax + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401292b	      0x2500040000	                          and eax, 0x400	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012930	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012933	            0x7419	                            je 0x401294e	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012935	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012939	          0x8b4004	                mov eax, dword [rax + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401293c	          0x83f808	                              cmp eax, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401293f	            0x750d	                           jne 0x401294e	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012941	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012945	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012948	        0x4883f807	                              cmp rax, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401294c	            0x750a	                           jne 0x4012958	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401294e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012952	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012956	            0xeb05	                           jmp 0x401295d	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012958	      0xb800000000	                              mov eax, 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401295d	          0x4801c2	                            add rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012960	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012964	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012968	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401296b	     0xf879e010000	                            ja 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012971	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012975	          0x488b00	                    mov rax, qword [rax]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012978	        0x4883f802	                              cmp rax, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401297c	     0xf85be000000	                           jne 0x4012a40	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012986	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401298a	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401298d	     0xf85ad000000	                           jne 0x4012a40	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012993	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012997	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401299b	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x401299e	     0xf849c000000	                            je 0x4012a40	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129a8	          0x8b4004	                mov eax, dword [rax + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129ab	          0x83f808	                              cmp eax, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129ae	            0x7443	                            je 0x40129f3	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129b4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129b8	          0x4889c2	                            mov rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129bb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129c3	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129c6	     0xf8643010000	                           jbe 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129d0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129d4	          0x4889c2	                            mov rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129d7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129db	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129df	          0x4829c2	                            sub rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129e2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129e6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129ea	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129ed	     0xf831c010000	                           jae 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129f7	        0x488b4008	                mov rax, qword [rax + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129fb	          0x83e002	                              and eax, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x40129fe	          0x4885c0	                           test rax, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a01	            0x743d	                            je 0x4012a40	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a07	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a0b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a0f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a13	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a16	     0xf86f3000000	                           jbe 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a20	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a24	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a28	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a2c	          0x4829c2	                            sub rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a2f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a33	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a37	          0x4839c2	                            cmp rdx, rax	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a3a	     0xf83cf000000	                           jae 0x4012b0f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x4012a40	          0x8b4598	             mov eax, dword [rbp - 0x68]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a43	          0x8d5001	                      lea edx, [rax + 1]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a46	          0x895598	             mov dword [rbp - 0x68], edx	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a49	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a4d	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a51	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a55	            0x89c0	                            mov eax, eax	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a57	        0x4883c008	                              add rax, 8	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a5b	      0x48894cc208	        mov qword [rdx + rax*8 + 8], rcx	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x4012a60	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x4012a64	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x4012a67	          0x83e001	                              and eax, 1	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x4012a6a	            0x85c0	                           test eax, eax	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x4012a6c	     0xf8495000000	                            je 0x4012b07	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x4012a72	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a77	            0x7415	                            je 0x4012a8e	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a79	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a7d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a81	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a85	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a89	          0x4839c2	                            cmp rdx, rax	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a8c	            0x7308	                           jae 0x4012a96	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7321	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a92	        0x488945d0	             mov qword [rbp - 0x30], rax	      7321	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x4012a96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012a9a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012a9d	          0x83e002	                              and eax, 2	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012aa0	            0x85c0	                           test eax, eax	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012aa2	            0x741f	                            je 0x4012ac3	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012aa4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012aa8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012aac	          0x4889c2	                            mov rdx, rax	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012aaf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012ab3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012ab7	          0x4829c2	                            sub rdx, rax	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012aba	          0x4889d0	                            mov rax, rdx	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012abd	        0x488945d8	             mov qword [rbp - 0x28], rax	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012ac1	            0xeb1a	                           jmp 0x4012add	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x4012ac3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x4012ac7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x4012acb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x4012acf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x4012ad3	          0x4829c2	                            sub rdx, rax	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x4012ad6	          0x4889d0	                            mov rax, rdx	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x4012ad9	        0x488945d8	             mov qword [rbp - 0x28], rax	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x4012add	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012ae1	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012ae5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012ae9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012aed	          0x4829c2	                            sub rdx, rax	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012af0	          0x4889d0	                            mov rax, rdx	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012af3	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012af7	            0x740e	                            je 0x4012b07	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012af9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7333	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012afd	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7333	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012b01	          0x83e2fd	                     and edx, 0xfffffffd	      7333	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012b04	          0x885040	               mov byte [rax + 0x40], dl	      7333	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x4012b07	          0x8b4598	             mov eax, dword [rbp - 0x68]	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x4012b0a	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x4012b0d	            0x7419	                            je 0x4012b28	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x4012b0f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7309	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012b13	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7309	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012b17	        0x488945b8	             mov qword [rbp - 0x48], rax	      7309	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012b1b	      0x48837db800	               cmp qword [rbp - 0x48], 0	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012b20	     0xf8544fcffff	                           jne 0x401276a	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012b26	            0xeb01	                           jmp 0x4012b29	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x4012b28	              0x90	                                     nop	      7336	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x4012b29	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b2d	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b31	          0x83e010	                           and eax, 0x10	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b34	            0x84c0	                             test al, al	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b36	            0x7422	                            je 0x4012b5a	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b38	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b3d	            0x741b	                            je 0x4012b5a	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b3f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b43	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b47	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b4b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b4f	          0x4829c2	                            sub rdx, rax	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b56	        0x48895038	             mov qword [rax + 0x38], rdx	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x4012b5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b5e	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b62	          0x83e020	                           and eax, 0x20	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b65	            0x84c0	                             test al, al	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b67	            0x754a	                           jne 0x4012bb3	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7346	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b6d	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7346	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b71	          0x83e010	                           and eax, 0x10	      7346	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b74	            0x84c0	                             test al, al	      7346	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b76	            0x753b	                           jne 0x4012bb3	      7346	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7347	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b7c	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7347	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b80	          0x83e002	                              and eax, 2	      7347	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b83	            0x84c0	                             test al, al	      7347	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b85	            0x742c	                            je 0x4012bb3	      7347	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b87	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b8c	            0x740a	                            je 0x4012b98	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b8e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b92	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b96	            0xeb05	                           jmp 0x4012b9d	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b98	      0xb800000000	                              mov eax, 0	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012b9d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      7350	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012ba1	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      7350	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012ba5	          0x4829d0	                            sub rax, rdx	      7350	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012ba8	          0x4889c2	                            mov rdx, rax	      7350	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012bab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012baf	        0x48895020	             mov qword [rax + 0x20], rdx	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x4012bb3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7352	elf.c	FUNCTION_81	FOR_2
0x4012bb7	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      7352	elf.c	FUNCTION_81	FOR_2
0x4012bba	          0x895044	             mov dword [rax + 0x44], edx	      7352	elf.c	FUNCTION_81	FOR_2
0x4012bbd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7353	elf.c	FUNCTION_81	FOR_2
0x4012bc1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7353	elf.c	FUNCTION_81	FOR_2
0x4012bc5	          0x488910	                    mov qword [rax], rdx	      7353	elf.c	FUNCTION_81	FOR_2
0x4012bc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7354	elf.c	FUNCTION_81	FOR_2
0x4012bcc	        0x488945a8	             mov qword [rbp - 0x58], rax	      7354	elf.c	FUNCTION_81	FOR_2
0x4012bd0	        0x83458801	               add dword [rbp - 0x78], 1	      7227	elf.c	FUNCTION_81	FOR_2
0x4012bd4	      0x488345b040	           add qword [rbp - 0x50], 0x40 	      7227	elf.c	FUNCTION_81	FOR_2
0x4012bd9	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x4012bdc	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x4012bdf	     0xf821ff6ffff	                            jb 0x4012204	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x4012be5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7357	elf.c	FUNCTION_81	CALL_10
0x4012bec	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7357	elf.c	FUNCTION_81	CALL_10
0x4012bf3	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7357	elf.c	FUNCTION_81	CALL_10
0x4012bfa	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      7357	elf.c	FUNCTION_81	CALL_10
0x4012bfe	          0x488910	                    mov qword [rax], rdx	      7357	elf.c	FUNCTION_81	CALL_10
0x4012c01	      0xb801000000	                              mov eax, 1	      7358	elf.c	FUNCTION_81
0x4012c06	        0x488b7df8	                mov rdi, qword [rbp - 8]	      7359	elf.c	FUNCTION_81
0x4012c0a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      7359	elf.c	FUNCTION_81
0x4012c13	            0x7405	                            je 0x4012c1a	      7359	elf.c	FUNCTION_81
0x4012c15	      0xe800000000	                          call 0x4012c1a	      7359	elf.c	FUNCTION_81
0x4012c1a	              0xc9	                                   leave	      7359	elf.c	FUNCTION_81
0x4012c1b	              0xc3	                                     ret	      7359	elf.c	FUNCTION_81
make_mapping	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,1:IF,2:SWITCH,0:functions,0	71
0x400ad46	              0x55	                                push rbp	      4470	elf.c	FUNCTION_62
0x400ad47	          0x4889e5	                            mov rbp, rsp	      4470	elf.c	FUNCTION_62
0x400ad4a	        0x4883ec40	                           sub rsp, 0x40	      4470	elf.c	FUNCTION_62
0x400ad4e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4470	elf.c	FUNCTION_62
0x400ad52	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4470	elf.c	FUNCTION_62
0x400ad56	          0x8955cc	             mov dword [rbp - 0x34], edx	      4470	elf.c	FUNCTION_62
0x400ad59	          0x894dc8	             mov dword [rbp - 0x38], ecx	      4470	elf.c	FUNCTION_62
0x400ad5c	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      4470	elf.c	FUNCTION_62
0x400ad60	    0x48c745f05000	           mov qword [rbp - 0x10], 0x50 	      4476	elf.c	FUNCTION_62
0x400ad68	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      4477	elf.c	FUNCTION_62
0x400ad6b	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      4477	elf.c	FUNCTION_62
0x400ad6e	          0x83e801	                              sub eax, 1	      4477	elf.c	FUNCTION_62
0x400ad71	            0x89c0	                            mov eax, eax	      4477	elf.c	FUNCTION_62
0x400ad73	        0x48c1e003	                              shl rax, 3	      4477	elf.c	FUNCTION_62
0x400ad77	        0x480145f0	            add qword [rbp - 0x10], rax 	      4477	elf.c	FUNCTION_62
0x400ad7b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4478	elf.c	FUNCTION_62	CALL_1
0x400ad7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4478	elf.c	FUNCTION_62	CALL_1
0x400ad83	          0x4889d6	                            mov rsi, rdx	      4478	elf.c	FUNCTION_62	CALL_1
0x400ad86	          0x4889c7	                            mov rdi, rax	      4478	elf.c	FUNCTION_62	CALL_1
0x400ad89	      0xe800000000	                          call 0x400ad8e	      4478	elf.c	FUNCTION_62	CALL_1
0x400ad8e	        0x488945f8	                mov qword [rbp - 8], rax	      4478	elf.c	FUNCTION_62	CALL_1
0x400ad92	      0x48837df800	                  cmp qword [rbp - 8], 0	      4479	elf.c	FUNCTION_62	IF_1
0x400ad97	            0x750a	                           jne 0x400ada3	      4479	elf.c	FUNCTION_62	IF_1
0x400ad99	      0xb800000000	                              mov eax, 0	      4480	elf.c	FUNCTION_62	IF_1
0x400ad9e	      0xe99f000000	                           jmp 0x400ae42	      4480	elf.c	FUNCTION_62	IF_1
0x400ada3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4481	elf.c	FUNCTION_62
0x400ada7	    0x48c700000000	                      mov qword [rax], 0	      4481	elf.c	FUNCTION_62
0x400adae	        0x488b45f8	                mov rax, qword [rbp - 8]	      4482	elf.c	FUNCTION_62
0x400adb2	    0x48c740080100	                  mov qword [rax + 8], 1	      4482	elf.c	FUNCTION_62
0x400adba	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4483	elf.c	FUNCTION_62	FOR_1
0x400adbd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4483	elf.c	FUNCTION_62	FOR_1
0x400adc0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4483	elf.c	FUNCTION_62	FOR_1
0x400adc3	    0x488d14c50000	                        lea rdx, [rax*8]	      4483	elf.c	FUNCTION_62	FOR_1
0x400adcb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4483	elf.c	FUNCTION_62	FOR_1
0x400adcf	          0x4801d0	                            add rax, rdx	      4483	elf.c	FUNCTION_62	FOR_1
0x400add2	        0x488945e8	             mov qword [rbp - 0x18], rax	      4483	elf.c	FUNCTION_62	FOR_1
0x400add6	            0xeb27	                           jmp 0x400adff	      4483	elf.c	FUNCTION_62	FOR_1
0x400add8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4484	elf.c	FUNCTION_62	FOR_1
0x400addb	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      4484	elf.c	FUNCTION_62	FOR_1
0x400adde	            0x89c1	                            mov ecx, eax	      4484	elf.c	FUNCTION_62	FOR_1
0x400ade0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4484	elf.c	FUNCTION_62	FOR_1
0x400ade4	          0x488b10	                    mov rdx, qword [rax]	      4484	elf.c	FUNCTION_62	FOR_1
0x400ade7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4484	elf.c	FUNCTION_62	FOR_1
0x400adeb	            0x89c9	                            mov ecx, ecx	      4484	elf.c	FUNCTION_62	FOR_1
0x400aded	        0x4883c108	                              add rcx, 8	      4484	elf.c	FUNCTION_62	FOR_1
0x400adf1	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      4484	elf.c	FUNCTION_62	FOR_1
0x400adf6	        0x8345e401	               add dword [rbp - 0x1c], 1	      4483	elf.c	FUNCTION_62	FOR_1
0x400adfa	      0x488345e808	               add qword [rbp - 0x18], 8	      4483	elf.c	FUNCTION_62	FOR_1
0x400adff	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4483	elf.c	FUNCTION_62	FOR_1
0x400ae02	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      4483	elf.c	FUNCTION_62	FOR_1
0x400ae05	            0x72d1	                            jb 0x400add8	      4483	elf.c	FUNCTION_62	FOR_1
0x400ae07	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      4485	elf.c	FUNCTION_62
0x400ae0a	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      4485	elf.c	FUNCTION_62
0x400ae0d	            0x89c2	                            mov edx, eax	      4485	elf.c	FUNCTION_62
0x400ae0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4485	elf.c	FUNCTION_62
0x400ae13	          0x895044	             mov dword [rax + 0x44], edx	      4485	elf.c	FUNCTION_62
0x400ae16	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      4487	elf.c	FUNCTION_62	IF_2
0x400ae1a	            0x7522	                           jne 0x400ae3e	      4487	elf.c	FUNCTION_62	IF_2
0x400ae1c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      4487	elf.c	FUNCTION_62	IF_2
0x400ae20	            0x741c	                            je 0x400ae3e	      4487	elf.c	FUNCTION_62	IF_2
0x400ae22	        0x488b45f8	                mov rax, qword [rbp - 8]	      4490	elf.c	FUNCTION_62	IF_2
0x400ae26	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      4490	elf.c	FUNCTION_62	IF_2
0x400ae2a	          0x83ca10	                            or edx, 0x10	      4490	elf.c	FUNCTION_62	IF_2
0x400ae2d	          0x885040	               mov byte [rax + 0x40], dl	      4490	elf.c	FUNCTION_62	IF_2
0x400ae30	        0x488b45f8	                mov rax, qword [rbp - 8]	      4491	elf.c	FUNCTION_62	IF_2
0x400ae34	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      4491	elf.c	FUNCTION_62	IF_2
0x400ae38	          0x83ca20	                            or edx, 0x20	      4491	elf.c	FUNCTION_62	IF_2
0x400ae3b	          0x885040	               mov byte [rax + 0x40], dl	      4491	elf.c	FUNCTION_62	IF_2
0x400ae3e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4494	elf.c	FUNCTION_62
0x400ae42	              0xc9	                                   leave	      4495	elf.c	FUNCTION_62
0x400ae43	              0xc3	                                     ret	      4495	elf.c	FUNCTION_62
swap_linux_prpsinfo64_ugid16_out	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	120
0x4000581	              0x55	                                push rbp	       218	elf-linux-core.h	FUNCTION_207
0x4000582	          0x4889e5	                            mov rbp, rsp	       218	elf-linux-core.h	FUNCTION_207
0x4000585	        0x4883ec20	                           sub rsp, 0x20	       218	elf-linux-core.h	FUNCTION_207
0x4000589	        0x48897df8	                mov qword [rbp - 8], rdi	       218	elf-linux-core.h	FUNCTION_207
0x400058d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       218	elf-linux-core.h	FUNCTION_207
0x4000591	        0x488955e8	             mov qword [rbp - 0x18], rdx	       218	elf-linux-core.h	FUNCTION_207
0x4000595	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       219	elf-linux-core.h	FUNCTION_207
0x4000599	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       219	elf-linux-core.h	FUNCTION_207
0x400059d	           0xfb612	                   movzx edx, byte [rdx]	       219	elf-linux-core.h	FUNCTION_207
0x40005a0	            0x8810	                      mov byte [rax], dl	       219	elf-linux-core.h	FUNCTION_207
0x40005a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       220	elf-linux-core.h	FUNCTION_207
0x40005a6	        0x488d5001	                      lea rdx, [rax + 1]	       220	elf-linux-core.h	FUNCTION_207
0x40005aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       220	elf-linux-core.h	FUNCTION_207
0x40005ae	         0xfb64001	               movzx eax, byte [rax + 1]	       220	elf-linux-core.h	FUNCTION_207
0x40005b2	            0x8802	                      mov byte [rdx], al	       220	elf-linux-core.h	FUNCTION_207
0x40005b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       221	elf-linux-core.h	FUNCTION_207
0x40005b8	        0x488d5002	                      lea rdx, [rax + 2]	       221	elf-linux-core.h	FUNCTION_207
0x40005bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       221	elf-linux-core.h	FUNCTION_207
0x40005c0	         0xfb64002	               movzx eax, byte [rax + 2]	       221	elf-linux-core.h	FUNCTION_207
0x40005c4	            0x8802	                      mov byte [rdx], al	       221	elf-linux-core.h	FUNCTION_207
0x40005c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	elf-linux-core.h	FUNCTION_207
0x40005ca	        0x488d5003	                      lea rdx, [rax + 3]	       222	elf-linux-core.h	FUNCTION_207
0x40005ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       222	elf-linux-core.h	FUNCTION_207
0x40005d2	         0xfb64003	               movzx eax, byte [rax + 3]	       222	elf-linux-core.h	FUNCTION_207
0x40005d6	            0x8802	                      mov byte [rdx], al	       222	elf-linux-core.h	FUNCTION_207
0x40005d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	elf-linux-core.h	FUNCTION_207
0x40005dc	        0x488b4008	                mov rax, qword [rax + 8]	       223	elf-linux-core.h	FUNCTION_207
0x40005e0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       223	elf-linux-core.h	FUNCTION_207
0x40005e4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       223	elf-linux-core.h	FUNCTION_207
0x40005e8	        0x488d4a08	                      lea rcx, [rdx + 8]	       223	elf-linux-core.h	FUNCTION_207
0x40005ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       223	elf-linux-core.h	FUNCTION_207
0x40005f0	        0x488b5208	                mov rdx, qword [rdx + 8]	       223	elf-linux-core.h	FUNCTION_207
0x40005f4	          0x4889ce	                            mov rsi, rcx	       223	elf-linux-core.h	FUNCTION_207
0x40005f7	          0x4889d7	                            mov rdi, rdx	       223	elf-linux-core.h	FUNCTION_207
0x40005fa	            0xffd0	                                call rax	       223	elf-linux-core.h	FUNCTION_207
0x40005fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	elf-linux-core.h	FUNCTION_207
0x4000600	        0x488b4008	                mov rax, qword [rax + 8]	       224	elf-linux-core.h	FUNCTION_207
0x4000604	        0x488b4060	            mov rax, qword [rax + 0x60] 	       224	elf-linux-core.h	FUNCTION_207
0x4000608	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       224	elf-linux-core.h	FUNCTION_207
0x400060c	        0x488d4a10	                   lea rcx, [rdx + 0x10]	       224	elf-linux-core.h	FUNCTION_207
0x4000610	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       224	elf-linux-core.h	FUNCTION_207
0x4000614	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       224	elf-linux-core.h	FUNCTION_207
0x4000617	            0x89d2	                            mov edx, edx	       224	elf-linux-core.h	FUNCTION_207
0x4000619	          0x4889ce	                            mov rsi, rcx	       224	elf-linux-core.h	FUNCTION_207
0x400061c	          0x4889d7	                            mov rdi, rdx	       224	elf-linux-core.h	FUNCTION_207
0x400061f	            0xffd0	                                call rax	       224	elf-linux-core.h	FUNCTION_207
0x4000621	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	elf-linux-core.h	FUNCTION_207
0x4000625	        0x488b4008	                mov rax, qword [rax + 8]	       225	elf-linux-core.h	FUNCTION_207
0x4000629	        0x488b4060	            mov rax, qword [rax + 0x60] 	       225	elf-linux-core.h	FUNCTION_207
0x400062d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       225	elf-linux-core.h	FUNCTION_207
0x4000631	        0x488d4a12	                   lea rcx, [rdx + 0x12]	       225	elf-linux-core.h	FUNCTION_207
0x4000635	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       225	elf-linux-core.h	FUNCTION_207
0x4000639	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       225	elf-linux-core.h	FUNCTION_207
0x400063c	            0x89d2	                            mov edx, edx	       225	elf-linux-core.h	FUNCTION_207
0x400063e	          0x4889ce	                            mov rsi, rcx	       225	elf-linux-core.h	FUNCTION_207
0x4000641	          0x4889d7	                            mov rdi, rdx	       225	elf-linux-core.h	FUNCTION_207
0x4000644	            0xffd0	                                call rax	       225	elf-linux-core.h	FUNCTION_207
0x4000646	        0x488b45f8	                mov rax, qword [rbp - 8]	       226	elf-linux-core.h	FUNCTION_207
0x400064a	        0x488b4008	                mov rax, qword [rax + 8]	       226	elf-linux-core.h	FUNCTION_207
0x400064e	        0x488b4048	            mov rax, qword [rax + 0x48] 	       226	elf-linux-core.h	FUNCTION_207
0x4000652	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       226	elf-linux-core.h	FUNCTION_207
0x4000656	        0x488d4a14	                   lea rcx, [rdx + 0x14]	       226	elf-linux-core.h	FUNCTION_207
0x400065a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       226	elf-linux-core.h	FUNCTION_207
0x400065e	          0x8b5218	            mov edx, dword [rdx + 0x18] 	       226	elf-linux-core.h	FUNCTION_207
0x4000661	          0x4863d2	                         movsxd rdx, edx	       226	elf-linux-core.h	FUNCTION_207
0x4000664	          0x4889ce	                            mov rsi, rcx	       226	elf-linux-core.h	FUNCTION_207
0x4000667	          0x4889d7	                            mov rdi, rdx	       226	elf-linux-core.h	FUNCTION_207
0x400066a	            0xffd0	                                call rax	       226	elf-linux-core.h	FUNCTION_207
0x400066c	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	elf-linux-core.h	FUNCTION_207
0x4000670	        0x488b4008	                mov rax, qword [rax + 8]	       227	elf-linux-core.h	FUNCTION_207
0x4000674	        0x488b4048	            mov rax, qword [rax + 0x48] 	       227	elf-linux-core.h	FUNCTION_207
0x4000678	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       227	elf-linux-core.h	FUNCTION_207
0x400067c	        0x488d4a18	                   lea rcx, [rdx + 0x18]	       227	elf-linux-core.h	FUNCTION_207
0x4000680	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       227	elf-linux-core.h	FUNCTION_207
0x4000684	          0x8b521c	            mov edx, dword [rdx + 0x1c] 	       227	elf-linux-core.h	FUNCTION_207
0x4000687	          0x4863d2	                         movsxd rdx, edx	       227	elf-linux-core.h	FUNCTION_207
0x400068a	          0x4889ce	                            mov rsi, rcx	       227	elf-linux-core.h	FUNCTION_207
0x400068d	          0x4889d7	                            mov rdi, rdx	       227	elf-linux-core.h	FUNCTION_207
0x4000690	            0xffd0	                                call rax	       227	elf-linux-core.h	FUNCTION_207
0x4000692	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	elf-linux-core.h	FUNCTION_207
0x4000696	        0x488b4008	                mov rax, qword [rax + 8]	       228	elf-linux-core.h	FUNCTION_207
0x400069a	        0x488b4048	            mov rax, qword [rax + 0x48] 	       228	elf-linux-core.h	FUNCTION_207
0x400069e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       228	elf-linux-core.h	FUNCTION_207
0x40006a2	        0x488d4a1c	                   lea rcx, [rdx + 0x1c]	       228	elf-linux-core.h	FUNCTION_207
0x40006a6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       228	elf-linux-core.h	FUNCTION_207
0x40006aa	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       228	elf-linux-core.h	FUNCTION_207
0x40006ad	          0x4863d2	                         movsxd rdx, edx	       228	elf-linux-core.h	FUNCTION_207
0x40006b0	          0x4889ce	                            mov rsi, rcx	       228	elf-linux-core.h	FUNCTION_207
0x40006b3	          0x4889d7	                            mov rdi, rdx	       228	elf-linux-core.h	FUNCTION_207
0x40006b6	            0xffd0	                                call rax	       228	elf-linux-core.h	FUNCTION_207
0x40006b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	elf-linux-core.h	FUNCTION_207
0x40006bc	        0x488b4008	                mov rax, qword [rax + 8]	       229	elf-linux-core.h	FUNCTION_207
0x40006c0	        0x488b4048	            mov rax, qword [rax + 0x48] 	       229	elf-linux-core.h	FUNCTION_207
0x40006c4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       229	elf-linux-core.h	FUNCTION_207
0x40006c8	        0x488d4a20	                   lea rcx, [rdx + 0x20]	       229	elf-linux-core.h	FUNCTION_207
0x40006cc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       229	elf-linux-core.h	FUNCTION_207
0x40006d0	          0x8b5224	            mov edx, dword [rdx + 0x24] 	       229	elf-linux-core.h	FUNCTION_207
0x40006d3	          0x4863d2	                         movsxd rdx, edx	       229	elf-linux-core.h	FUNCTION_207
0x40006d6	          0x4889ce	                            mov rsi, rcx	       229	elf-linux-core.h	FUNCTION_207
0x40006d9	          0x4889d7	                            mov rdi, rdx	       229	elf-linux-core.h	FUNCTION_207
0x40006dc	            0xffd0	                                call rax	       229	elf-linux-core.h	FUNCTION_207
0x40006de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006e2	        0x488d4828	                   lea rcx, [rax + 0x28]	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006ea	        0x4883c024	                           add rax, 0x24	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006ee	      0xba10000000	                           mov edx, 0x10	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006f3	          0x4889ce	                            mov rsi, rcx	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006f6	          0x4889c7	                            mov rdi, rax	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006f9	      0xe800000000	                          call 0x40006fe	       230	elf-linux-core.h	FUNCTION_207	CALL_1
0x40006fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x4000702	        0x488d4839	                   lea rcx, [rax + 0x39]	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x4000706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x400070a	        0x4883c034	                           add rax, 0x34	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x400070e	      0xba50000000	                           mov edx, 0x50	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x4000713	          0x4889ce	                            mov rsi, rcx	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x4000716	          0x4889c7	                            mov rdi, rax	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x4000719	      0xe800000000	                          call 0x400071e	       231	elf-linux-core.h	FUNCTION_207	CALL_2
0x400071e	              0x90	                                     nop	       232	elf-linux-core.h	FUNCTION_207
0x400071f	              0xc9	                                   leave	       232	elf-linux-core.h	FUNCTION_207
0x4000720	              0xc3	                                     ret	       232	elf-linux-core.h	FUNCTION_207
elfcore_write_aarch_hw_break	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a211	              0x55	                                push rbp	     11009	elf.c	FUNCTION_188
0x401a212	          0x4889e5	                            mov rbp, rsp	     11009	elf.c	FUNCTION_188
0x401a215	        0x4883ec40	                           sub rsp, 0x40	     11009	elf.c	FUNCTION_188
0x401a219	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11009	elf.c	FUNCTION_188
0x401a21d	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11009	elf.c	FUNCTION_188
0x401a221	        0x488955d8	             mov qword [rbp - 0x28], rdx	     11009	elf.c	FUNCTION_188
0x401a225	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     11009	elf.c	FUNCTION_188
0x401a229	        0x448945cc	             mov dword [rbp - 0x34], r8d	     11009	elf.c	FUNCTION_188
0x401a22d	    0x48c745f80000	                  mov qword [rbp - 8], 0	     11010	elf.c	FUNCTION_188
0x401a235	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     11011	elf.c	FUNCTION_188	CALL_1
0x401a239	        0x488b4df8	                mov rcx, qword [rbp - 8]	     11011	elf.c	FUNCTION_188	CALL_1
0x401a23d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     11011	elf.c	FUNCTION_188	CALL_1
0x401a241	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     11011	elf.c	FUNCTION_188	CALL_1
0x401a245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11011	elf.c	FUNCTION_188	CALL_1
0x401a249	        0x4883ec08	                              sub rsp, 8	     11011	elf.c	FUNCTION_188	CALL_1
0x401a24d	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     11011	elf.c	FUNCTION_188	CALL_1
0x401a250	              0x57	                                push rdi	     11011	elf.c	FUNCTION_188	CALL_1
0x401a251	          0x4d89c1	                              mov r9, r8	     11011	elf.c	FUNCTION_188	CALL_1
0x401a254	    0x41b802040000	                          mov r8d, 0x402	     11011	elf.c	FUNCTION_188	CALL_1
0x401a25a	          0x4889c7	                            mov rdi, rax	     11011	elf.c	FUNCTION_188	CALL_1
0x401a25d	      0xe800000000	                          call 0x401a262	     11011	elf.c	FUNCTION_188	CALL_1
0x401a262	        0x4883c410	                           add rsp, 0x10	     11011	elf.c	FUNCTION_188	CALL_1
0x401a266	              0xc9	                                   leave	     11013	elf.c	FUNCTION_188
0x401a267	              0xc3	                                     ret	     11013	elf.c	FUNCTION_188
elfcore_write_arm_vfp	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a163	              0x55	                                push rbp	     10985	elf.c	FUNCTION_186
0x401a164	          0x4889e5	                            mov rbp, rsp	     10985	elf.c	FUNCTION_186
0x401a167	        0x4883ec40	                           sub rsp, 0x40	     10985	elf.c	FUNCTION_186
0x401a16b	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10985	elf.c	FUNCTION_186
0x401a16f	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10985	elf.c	FUNCTION_186
0x401a173	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10985	elf.c	FUNCTION_186
0x401a177	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10985	elf.c	FUNCTION_186
0x401a17b	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10985	elf.c	FUNCTION_186
0x401a17f	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10986	elf.c	FUNCTION_186
0x401a187	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10987	elf.c	FUNCTION_186	CALL_1
0x401a18b	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10987	elf.c	FUNCTION_186	CALL_1
0x401a18f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10987	elf.c	FUNCTION_186	CALL_1
0x401a193	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10987	elf.c	FUNCTION_186	CALL_1
0x401a197	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10987	elf.c	FUNCTION_186	CALL_1
0x401a19b	        0x4883ec08	                              sub rsp, 8	     10987	elf.c	FUNCTION_186	CALL_1
0x401a19f	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10987	elf.c	FUNCTION_186	CALL_1
0x401a1a2	              0x57	                                push rdi	     10987	elf.c	FUNCTION_186	CALL_1
0x401a1a3	          0x4d89c1	                              mov r9, r8	     10987	elf.c	FUNCTION_186	CALL_1
0x401a1a6	    0x41b800040000	                          mov r8d, 0x400	     10987	elf.c	FUNCTION_186	CALL_1
0x401a1ac	          0x4889c7	                            mov rdi, rax	     10987	elf.c	FUNCTION_186	CALL_1
0x401a1af	      0xe800000000	                          call 0x401a1b4	     10987	elf.c	FUNCTION_186	CALL_1
0x401a1b4	        0x4883c410	                           add rsp, 0x10	     10987	elf.c	FUNCTION_186	CALL_1
0x401a1b8	              0xc9	                                   leave	     10989	elf.c	FUNCTION_186
0x401a1b9	              0xc3	                                     ret	     10989	elf.c	FUNCTION_186
elfcore_write_s390_vxrs_low	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a007	              0x55	                                push rbp	     10934	elf.c	FUNCTION_182
0x401a008	          0x4889e5	                            mov rbp, rsp	     10934	elf.c	FUNCTION_182
0x401a00b	        0x4883ec40	                           sub rsp, 0x40	     10934	elf.c	FUNCTION_182
0x401a00f	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10934	elf.c	FUNCTION_182
0x401a013	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10934	elf.c	FUNCTION_182
0x401a017	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10934	elf.c	FUNCTION_182
0x401a01b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10934	elf.c	FUNCTION_182
0x401a01f	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10934	elf.c	FUNCTION_182
0x401a023	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10935	elf.c	FUNCTION_182
0x401a02b	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10936	elf.c	FUNCTION_182	CALL_1
0x401a02f	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10936	elf.c	FUNCTION_182	CALL_1
0x401a033	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10936	elf.c	FUNCTION_182	CALL_1
0x401a037	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10936	elf.c	FUNCTION_182	CALL_1
0x401a03b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10936	elf.c	FUNCTION_182	CALL_1
0x401a03f	        0x4883ec08	                              sub rsp, 8	     10936	elf.c	FUNCTION_182	CALL_1
0x401a043	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10936	elf.c	FUNCTION_182	CALL_1
0x401a046	              0x57	                                push rdi	     10936	elf.c	FUNCTION_182	CALL_1
0x401a047	          0x4d89c1	                              mov r9, r8	     10936	elf.c	FUNCTION_182	CALL_1
0x401a04a	    0x41b809030000	                          mov r8d, 0x309	     10936	elf.c	FUNCTION_182	CALL_1
0x401a050	          0x4889c7	                            mov rdi, rax	     10936	elf.c	FUNCTION_182	CALL_1
0x401a053	      0xe800000000	                          call 0x401a058	     10936	elf.c	FUNCTION_182	CALL_1
0x401a058	        0x4883c410	                           add rsp, 0x10	     10936	elf.c	FUNCTION_182	CALL_1
0x401a05c	              0xc9	                                   leave	     10938	elf.c	FUNCTION_182
0x401a05d	              0xc3	                                     ret	     10938	elf.c	FUNCTION_182
elfcore_maybe_make_sect	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	42
0x40167cc	              0x55	                                push rbp	      9048	elf.c	FUNCTION_113
0x40167cd	          0x4889e5	                            mov rbp, rsp	      9048	elf.c	FUNCTION_113
0x40167d0	        0x4883ec30	                           sub rsp, 0x30	      9048	elf.c	FUNCTION_113
0x40167d4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9048	elf.c	FUNCTION_113
0x40167d8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9048	elf.c	FUNCTION_113
0x40167dc	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9048	elf.c	FUNCTION_113
0x40167e0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x40167e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x40167e8	          0x4889d6	                            mov rsi, rdx	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x40167eb	          0x4889c7	                            mov rdi, rax	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x40167ee	      0xe800000000	                          call 0x40167f3	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x40167f3	          0x4885c0	                           test rax, rax	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x40167f6	            0x7407	                            je 0x40167ff	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x40167f8	      0xb801000000	                              mov eax, 1	      9052	elf.c	FUNCTION_113	IF_1
0x40167fd	            0xeb65	                           jmp 0x4016864	      9052	elf.c	FUNCTION_113	IF_1
0x40167ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9054	elf.c	FUNCTION_113	CALL_2
0x4016803	          0x8b5020	            mov edx, dword [rax + 0x20] 	      9054	elf.c	FUNCTION_113	CALL_2
0x4016806	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      9054	elf.c	FUNCTION_113	CALL_2
0x401680a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9054	elf.c	FUNCTION_113	CALL_2
0x401680e	          0x4889ce	                            mov rsi, rcx	      9054	elf.c	FUNCTION_113	CALL_2
0x4016811	          0x4889c7	                            mov rdi, rax	      9054	elf.c	FUNCTION_113	CALL_2
0x4016814	      0xe800000000	                          call 0x4016819	      9054	elf.c	FUNCTION_113	CALL_2
0x4016819	        0x488945f8	                mov qword [rbp - 8], rax	      9054	elf.c	FUNCTION_113	CALL_2
0x401681d	      0x48837df800	                  cmp qword [rbp - 8], 0	      9055	elf.c	FUNCTION_113	IF_2
0x4016822	            0x7507	                           jne 0x401682b	      9055	elf.c	FUNCTION_113	IF_2
0x4016824	      0xb800000000	                              mov eax, 0	      9056	elf.c	FUNCTION_113	IF_2
0x4016829	            0xeb39	                           jmp 0x4016864	      9056	elf.c	FUNCTION_113	IF_2
0x401682b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9058	elf.c	FUNCTION_113
0x401682f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9058	elf.c	FUNCTION_113
0x4016833	        0x488b45f8	                mov rax, qword [rbp - 8]	      9058	elf.c	FUNCTION_113
0x4016837	        0x48895038	             mov qword [rax + 0x38], rdx	      9058	elf.c	FUNCTION_113
0x401683b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9059	elf.c	FUNCTION_113
0x401683f	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      9059	elf.c	FUNCTION_113
0x4016846	        0x488b45f8	                mov rax, qword [rbp - 8]	      9059	elf.c	FUNCTION_113
0x401684a	    0x488990900000	             mov qword [rax + 0x90], rdx	      9059	elf.c	FUNCTION_113
0x4016851	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9060	elf.c	FUNCTION_113
0x4016855	          0x8b5070	            mov edx, dword [rax + 0x70] 	      9060	elf.c	FUNCTION_113
0x4016858	        0x488b45f8	                mov rax, qword [rbp - 8]	      9060	elf.c	FUNCTION_113
0x401685c	          0x895070	             mov dword [rax + 0x70], edx	      9060	elf.c	FUNCTION_113
0x401685f	      0xb801000000	                              mov eax, 1	      9061	elf.c	FUNCTION_113
0x4016864	              0xc9	                                   leave	      9062	elf.c	FUNCTION_113
0x4016865	              0xc3	                                     ret	      9062	elf.c	FUNCTION_113
bfd_elf_mkcorefile	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	32
0x4001003	              0x55	                                push rbp	       269	elf.c	FUNCTION_15
0x4001004	          0x4889e5	                            mov rbp, rsp	       269	elf.c	FUNCTION_15
0x4001007	              0x53	                                push rbx	       269	elf.c	FUNCTION_15
0x4001008	        0x4883ec18	                           sub rsp, 0x18	       269	elf.c	FUNCTION_15
0x400100c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       269	elf.c	FUNCTION_15
0x4001010	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       271	elf.c	FUNCTION_15	IF_1
0x4001014	        0x488b4008	                mov rax, qword [rax + 8]	       271	elf.c	FUNCTION_15	IF_1
0x4001018	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       271	elf.c	FUNCTION_15	IF_1
0x400101f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       271	elf.c	FUNCTION_15	IF_1
0x4001023	          0x4889d7	                            mov rdi, rdx	       271	elf.c	FUNCTION_15	IF_1
0x4001026	            0xffd0	                                call rax	       271	elf.c	FUNCTION_15	IF_1
0x4001028	            0x85c0	                           test eax, eax	       271	elf.c	FUNCTION_15	IF_1
0x400102a	            0x7507	                           jne 0x4001033	       271	elf.c	FUNCTION_15	IF_1
0x400102c	      0xb800000000	                              mov eax, 0	       272	elf.c	FUNCTION_15	IF_1
0x4001031	            0xeb3e	                           jmp 0x4001071	       272	elf.c	FUNCTION_15	IF_1
0x4001033	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       273	elf.c	FUNCTION_15	CALL_3
0x4001037	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	       273	elf.c	FUNCTION_15	CALL_3
0x400103e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       273	elf.c	FUNCTION_15	CALL_3
0x4001042	      0xbe20000000	                           mov esi, 0x20	       273	elf.c	FUNCTION_15	CALL_3
0x4001047	          0x4889c7	                            mov rdi, rax	       273	elf.c	FUNCTION_15	CALL_3
0x400104a	      0xe800000000	                          call 0x400104f	       273	elf.c	FUNCTION_15	CALL_3
0x400104f	    0x488983900c00	            mov qword [rbx + 0xc90], rax	       273	elf.c	FUNCTION_15	CALL_3
0x4001056	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	elf.c	FUNCTION_15	CALL_4
0x400105a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       274	elf.c	FUNCTION_15	CALL_4
0x4001061	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	       274	elf.c	FUNCTION_15	CALL_4
0x4001068	          0x4885c0	                           test rax, rax	       274	elf.c	FUNCTION_15	CALL_4
0x400106b	           0xf95c0	                                setne al	       274	elf.c	FUNCTION_15	CALL_4
0x400106e	           0xfb6c0	                           movzx eax, al	       274	elf.c	FUNCTION_15	CALL_4
0x4001071	        0x4883c418	                           add rsp, 0x18	       275	elf.c	FUNCTION_15
0x4001075	              0x5b	                                 pop rbx	       275	elf.c	FUNCTION_15
0x4001076	              0x5d	                                 pop rbp	       275	elf.c	FUNCTION_15
0x4001077	              0xc3	                                     ret	       275	elf.c	FUNCTION_15
_bfd_elf_swap_verdaux_out	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	28
0x40009cf	              0x55	                                push rbp	       113	elf.c	FUNCTION_4
0x40009d0	          0x4889e5	                            mov rbp, rsp	       113	elf.c	FUNCTION_4
0x40009d3	        0x4883ec20	                           sub rsp, 0x20	       113	elf.c	FUNCTION_4
0x40009d7	        0x48897df8	                mov qword [rbp - 8], rdi	       113	elf.c	FUNCTION_4
0x40009db	        0x488975f0	             mov qword [rbp - 0x10], rsi	       113	elf.c	FUNCTION_4
0x40009df	        0x488955e8	             mov qword [rbp - 0x18], rdx	       113	elf.c	FUNCTION_4
0x40009e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	elf.c	FUNCTION_4
0x40009e7	        0x488b4008	                mov rax, qword [rax + 8]	       114	elf.c	FUNCTION_4
0x40009eb	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       114	elf.c	FUNCTION_4
0x40009f2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       114	elf.c	FUNCTION_4
0x40009f6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       114	elf.c	FUNCTION_4
0x40009fa	          0x488b12	                    mov rdx, qword [rdx]	       114	elf.c	FUNCTION_4
0x40009fd	          0x4889ce	                            mov rsi, rcx	       114	elf.c	FUNCTION_4
0x4000a00	          0x4889d7	                            mov rdi, rdx	       114	elf.c	FUNCTION_4
0x4000a03	            0xffd0	                                call rax	       114	elf.c	FUNCTION_4
0x4000a05	        0x488b45f8	                mov rax, qword [rbp - 8]	       115	elf.c	FUNCTION_4
0x4000a09	        0x488b4008	                mov rax, qword [rax + 8]	       115	elf.c	FUNCTION_4
0x4000a0d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       115	elf.c	FUNCTION_4
0x4000a14	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       115	elf.c	FUNCTION_4
0x4000a18	        0x488d4a04	                      lea rcx, [rdx + 4]	       115	elf.c	FUNCTION_4
0x4000a1c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       115	elf.c	FUNCTION_4
0x4000a20	        0x488b5208	                mov rdx, qword [rdx + 8]	       115	elf.c	FUNCTION_4
0x4000a24	          0x4889ce	                            mov rsi, rcx	       115	elf.c	FUNCTION_4
0x4000a27	          0x4889d7	                            mov rdi, rdx	       115	elf.c	FUNCTION_4
0x4000a2a	            0xffd0	                                call rax	       115	elf.c	FUNCTION_4
0x4000a2c	              0x90	                                     nop	       116	elf.c	FUNCTION_4
0x4000a2d	              0xc9	                                   leave	       116	elf.c	FUNCTION_4
0x4000a2e	              0xc3	                                     ret	       116	elf.c	FUNCTION_4
_bfd_elf_set_arch_mach	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	30
0x4015f57	              0x55	                                push rbp	      8723	elf.c	FUNCTION_102
0x4015f58	          0x4889e5	                            mov rbp, rsp	      8723	elf.c	FUNCTION_102
0x4015f5b	        0x4883ec20	                           sub rsp, 0x20	      8723	elf.c	FUNCTION_102
0x4015f5f	        0x48897df8	                mov qword [rbp - 8], rdi	      8723	elf.c	FUNCTION_102
0x4015f63	          0x8975f4	              mov dword [rbp - 0xc], esi	      8723	elf.c	FUNCTION_102
0x4015f66	        0x488955e8	             mov qword [rbp - 0x18], rdx	      8723	elf.c	FUNCTION_102
0x4015f6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x4015f6e	        0x488b4008	                mov rax, qword [rax + 8]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x4015f72	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x4015f79	            0x8b00	                    mov eax, dword [rax]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x4015f7b	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x4015f7e	            0x7422	                            je 0x4015fa2	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x4015f80	        0x837df400	                cmp dword [rbp - 0xc], 0	      8727	elf.c	FUNCTION_102	IF_1
0x4015f84	            0x741c	                            je 0x4015fa2	      8727	elf.c	FUNCTION_102	IF_1
0x4015f86	        0x488b45f8	                mov rax, qword [rbp - 8]	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x4015f8a	        0x488b4008	                mov rax, qword [rax + 8]	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x4015f8e	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x4015f95	            0x8b00	                    mov eax, dword [rax]	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x4015f97	            0x85c0	                           test eax, eax	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x4015f99	            0x7407	                            je 0x4015fa2	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x4015f9b	      0xb800000000	                              mov eax, 0	      8729	elf.c	FUNCTION_102	IF_1
0x4015fa0	            0xeb15	                           jmp 0x4015fb7	      8729	elf.c	FUNCTION_102	IF_1
0x4015fa2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      8731	elf.c	FUNCTION_102	CALL_3
0x4015fa6	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      8731	elf.c	FUNCTION_102	CALL_3
0x4015fa9	        0x488b45f8	                mov rax, qword [rbp - 8]	      8731	elf.c	FUNCTION_102	CALL_3
0x4015fad	            0x89ce	                            mov esi, ecx	      8731	elf.c	FUNCTION_102	CALL_3
0x4015faf	          0x4889c7	                            mov rdi, rax	      8731	elf.c	FUNCTION_102	CALL_3
0x4015fb2	      0xe800000000	                          call 0x4015fb7	      8731	elf.c	FUNCTION_102	CALL_3
0x4015fb7	              0xc9	                                   leave	      8732	elf.c	FUNCTION_102
0x4015fb8	              0xc3	                                     ret	      8732	elf.c	FUNCTION_102
convert_debug_to_zdebug	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	37
0x4002742	              0x55	                                push rbp	       968	elf.c	FUNCTION_24
0x4002743	          0x4889e5	                            mov rbp, rsp	       968	elf.c	FUNCTION_24
0x4002746	        0x4883ec20	                           sub rsp, 0x20	       968	elf.c	FUNCTION_24
0x400274a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       968	elf.c	FUNCTION_24
0x400274e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       968	elf.c	FUNCTION_24
0x4002752	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       969	elf.c	FUNCTION_24	CALL_1
0x4002756	          0x4889c7	                            mov rdi, rax	       969	elf.c	FUNCTION_24	CALL_1
0x4002759	      0xe800000000	                          call 0x400275e	       969	elf.c	FUNCTION_24	CALL_1
0x400275e	          0x8945f4	              mov dword [rbp - 0xc], eax	       969	elf.c	FUNCTION_24	CALL_1
0x4002761	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       970	elf.c	FUNCTION_24	CALL_2
0x4002764	          0x83c002	                              add eax, 2	       970	elf.c	FUNCTION_24	CALL_2
0x4002767	            0x89c2	                            mov edx, eax	       970	elf.c	FUNCTION_24	CALL_2
0x4002769	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	elf.c	FUNCTION_24	CALL_2
0x400276d	          0x4889d6	                            mov rsi, rdx	       970	elf.c	FUNCTION_24	CALL_2
0x4002770	          0x4889c7	                            mov rdi, rax	       970	elf.c	FUNCTION_24	CALL_2
0x4002773	      0xe800000000	                          call 0x4002778	       970	elf.c	FUNCTION_24	CALL_2
0x4002778	        0x488945f8	                mov qword [rbp - 8], rax	       970	elf.c	FUNCTION_24	CALL_2
0x400277c	      0x48837df800	                  cmp qword [rbp - 8], 0	       971	elf.c	FUNCTION_24	IF_1
0x4002781	            0x7507	                           jne 0x400278a	       971	elf.c	FUNCTION_24	IF_1
0x4002783	      0xb800000000	                              mov eax, 0	       972	elf.c	FUNCTION_24	IF_1
0x4002788	            0xeb34	                           jmp 0x40027be	       972	elf.c	FUNCTION_24	IF_1
0x400278a	        0x488b45f8	                mov rax, qword [rbp - 8]	       973	elf.c	FUNCTION_24
0x400278e	          0xc6002e	                    mov byte [rax], 0x2e	       973	elf.c	FUNCTION_24
0x4002791	        0x488b45f8	                mov rax, qword [rbp - 8]	       974	elf.c	FUNCTION_24
0x4002795	        0x4883c001	                              add rax, 1	       974	elf.c	FUNCTION_24
0x4002799	          0xc6007a	                    mov byte [rax], 0x7a	       974	elf.c	FUNCTION_24
0x400279c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       975	elf.c	FUNCTION_24	CALL_3
0x400279f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       975	elf.c	FUNCTION_24	CALL_3
0x40027a3	        0x488d7201	                      lea rsi, [rdx + 1]	       975	elf.c	FUNCTION_24	CALL_3
0x40027a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       975	elf.c	FUNCTION_24	CALL_3
0x40027ab	        0x488d4a02	                      lea rcx, [rdx + 2]	       975	elf.c	FUNCTION_24	CALL_3
0x40027af	          0x4889c2	                            mov rdx, rax	       975	elf.c	FUNCTION_24	CALL_3
0x40027b2	          0x4889cf	                            mov rdi, rcx	       975	elf.c	FUNCTION_24	CALL_3
0x40027b5	      0xe800000000	                          call 0x40027ba	       975	elf.c	FUNCTION_24	CALL_3
0x40027ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       976	elf.c	FUNCTION_24
0x40027be	              0xc9	                                   leave	       977	elf.c	FUNCTION_24
0x40027bf	              0xc3	                                     ret	       977	elf.c	FUNCTION_24
elfcore_write_ppc_vmx	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019c4a	              0x55	                                push rbp	     10799	elf.c	FUNCTION_171
0x4019c4b	          0x4889e5	                            mov rbp, rsp	     10799	elf.c	FUNCTION_171
0x4019c4e	        0x4883ec40	                           sub rsp, 0x40	     10799	elf.c	FUNCTION_171
0x4019c52	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10799	elf.c	FUNCTION_171
0x4019c56	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10799	elf.c	FUNCTION_171
0x4019c5a	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10799	elf.c	FUNCTION_171
0x4019c5e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10799	elf.c	FUNCTION_171
0x4019c62	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10799	elf.c	FUNCTION_171
0x4019c66	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10800	elf.c	FUNCTION_171
0x4019c6e	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c72	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c76	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c7a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c82	        0x4883ec08	                              sub rsp, 8	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c86	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c89	              0x57	                                push rdi	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c8a	          0x4d89c1	                              mov r9, r8	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c8d	    0x41b800010000	                          mov r8d, 0x100	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c93	          0x4889c7	                            mov rdi, rax	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c96	      0xe800000000	                          call 0x4019c9b	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c9b	        0x4883c410	                           add rsp, 0x10	     10801	elf.c	FUNCTION_171	CALL_1
0x4019c9f	              0xc9	                                   leave	     10803	elf.c	FUNCTION_171
0x4019ca0	              0xc3	                                     ret	     10803	elf.c	FUNCTION_171
_bfd_elfcore_make_pseudosection	ELSE,0:DO,0:CALL,7:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	72
0x4016866	              0x55	                                push rbp	      9076	elf.c	FUNCTION_114
0x4016867	          0x4889e5	                            mov rbp, rsp	      9076	elf.c	FUNCTION_114
0x401686a	    0x4881ecb00000	                           sub rsp, 0xb0	      9076	elf.c	FUNCTION_114
0x4016871	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      9076	elf.c	FUNCTION_114
0x4016878	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      9076	elf.c	FUNCTION_114
0x401687f	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      9076	elf.c	FUNCTION_114
0x4016886	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      9076	elf.c	FUNCTION_114
0x401688d	    0x64488b042528	                mov rax, qword fs:[0x28]	      9076	elf.c	FUNCTION_114
0x4016896	        0x488945f8	                mov qword [rbp - 8], rax	      9076	elf.c	FUNCTION_114
0x401689a	            0x31c0	                            xor eax, eax	      9076	elf.c	FUNCTION_114
0x401689c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      9084	elf.c	FUNCTION_114	CALL_2
0x40168a3	          0x4889c7	                            mov rdi, rax	      9084	elf.c	FUNCTION_114	CALL_2
0x40168a6	      0xe8defeffff	               call sym.elfcore_make_pid	      9084	elf.c	FUNCTION_114	CALL_2
0x40168ab	            0x89c1	                            mov ecx, eax	      9084	elf.c	FUNCTION_114	CALL_2
0x40168ad	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      9084	elf.c	FUNCTION_114	CALL_2
0x40168b4	        0x488d4590	                   lea rax, [rbp - 0x70]	      9084	elf.c	FUNCTION_114	CALL_2
0x40168b8	      0xbe00000000	                              mov esi, 0	      9084	elf.c	FUNCTION_114	CALL_2
0x40168bd	          0x4889c7	                            mov rdi, rax	      9084	elf.c	FUNCTION_114	CALL_2
0x40168c0	      0xb800000000	                              mov eax, 0	      9084	elf.c	FUNCTION_114	CALL_2
0x40168c5	      0xe800000000	                          call 0x40168ca	      9084	elf.c	FUNCTION_114	CALL_2
0x40168ca	        0x488d4590	                   lea rax, [rbp - 0x70]	      9085	elf.c	FUNCTION_114	CALL_3
0x40168ce	          0x4889c7	                            mov rdi, rax	      9085	elf.c	FUNCTION_114	CALL_3
0x40168d1	      0xe800000000	                          call 0x40168d6	      9085	elf.c	FUNCTION_114	CALL_3
0x40168d6	        0x4883c001	                              add rax, 1	      9085	elf.c	FUNCTION_114	CALL_3
0x40168da	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9085	elf.c	FUNCTION_114	CALL_3
0x40168e1	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      9086	elf.c	FUNCTION_114	CALL_4
0x40168e8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      9086	elf.c	FUNCTION_114	CALL_4
0x40168ef	          0x4889d6	                            mov rsi, rdx	      9086	elf.c	FUNCTION_114	CALL_4
0x40168f2	          0x4889c7	                            mov rdi, rax	      9086	elf.c	FUNCTION_114	CALL_4
0x40168f5	      0xe800000000	                          call 0x40168fa	      9086	elf.c	FUNCTION_114	CALL_4
0x40168fa	        0x48894580	             mov qword [rbp - 0x80], rax	      9086	elf.c	FUNCTION_114	CALL_4
0x40168fe	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      9087	elf.c	FUNCTION_114	IF_1
0x4016903	            0x750a	                           jne 0x401690f	      9087	elf.c	FUNCTION_114	IF_1
0x4016905	      0xb800000000	                              mov eax, 0	      9088	elf.c	FUNCTION_114	IF_1
0x401690a	      0xe990000000	                           jmp 0x401699f	      9088	elf.c	FUNCTION_114	IF_1
0x401690f	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      9089	elf.c	FUNCTION_114	CALL_5
0x4016916	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      9089	elf.c	FUNCTION_114	CALL_5
0x401691a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9089	elf.c	FUNCTION_114	CALL_5
0x401691e	          0x4889ce	                            mov rsi, rcx	      9089	elf.c	FUNCTION_114	CALL_5
0x4016921	          0x4889c7	                            mov rdi, rax	      9089	elf.c	FUNCTION_114	CALL_5
0x4016924	      0xe800000000	                          call 0x4016929	      9089	elf.c	FUNCTION_114	CALL_5
0x4016929	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      9091	elf.c	FUNCTION_114	CALL_6
0x401692d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      9091	elf.c	FUNCTION_114	CALL_6
0x4016934	      0xba00010000	                          mov edx, 0x100	      9091	elf.c	FUNCTION_114	CALL_6
0x4016939	          0x4889ce	                            mov rsi, rcx	      9091	elf.c	FUNCTION_114	CALL_6
0x401693c	          0x4889c7	                            mov rdi, rax	      9091	elf.c	FUNCTION_114	CALL_6
0x401693f	      0xe800000000	                          call 0x4016944	      9091	elf.c	FUNCTION_114	CALL_6
0x4016944	        0x48894588	             mov qword [rbp - 0x78], rax	      9091	elf.c	FUNCTION_114	CALL_6
0x4016948	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      9093	elf.c	FUNCTION_114	IF_2
0x401694d	            0x7507	                           jne 0x4016956	      9093	elf.c	FUNCTION_114	IF_2
0x401694f	      0xb800000000	                              mov eax, 0	      9094	elf.c	FUNCTION_114	IF_2
0x4016954	            0xeb49	                           jmp 0x401699f	      9094	elf.c	FUNCTION_114	IF_2
0x4016956	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9095	elf.c	FUNCTION_114
0x401695a	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      9095	elf.c	FUNCTION_114
0x4016961	        0x48895038	             mov qword [rax + 0x38], rdx	      9095	elf.c	FUNCTION_114
0x4016965	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      9096	elf.c	FUNCTION_114
0x401696c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9096	elf.c	FUNCTION_114
0x4016970	    0x488990900000	             mov qword [rax + 0x90], rdx	      9096	elf.c	FUNCTION_114
0x4016977	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9097	elf.c	FUNCTION_114
0x401697b	    0xc74070020000	               mov dword [rax + 0x70], 2	      9097	elf.c	FUNCTION_114
0x4016982	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      9099	elf.c	FUNCTION_114	CALL_7
0x4016986	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      9099	elf.c	FUNCTION_114	CALL_7
0x401698d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      9099	elf.c	FUNCTION_114	CALL_7
0x4016994	          0x4889ce	                            mov rsi, rcx	      9099	elf.c	FUNCTION_114	CALL_7
0x4016997	          0x4889c7	                            mov rdi, rax	      9099	elf.c	FUNCTION_114	CALL_7
0x401699a	      0xe82dfeffff	        call sym.elfcore_maybe_make_sect	      9099	elf.c	FUNCTION_114	CALL_7
0x401699f	        0x488b75f8	                mov rsi, qword [rbp - 8]	      9100	elf.c	FUNCTION_114
0x40169a3	    0x644833342528	                xor rsi, qword fs:[0x28]	      9100	elf.c	FUNCTION_114
0x40169ac	            0x7405	                            je 0x40169b3	      9100	elf.c	FUNCTION_114
0x40169ae	      0xe800000000	                          call 0x40169b3	      9100	elf.c	FUNCTION_114
0x40169b3	              0xc9	                                   leave	      9100	elf.c	FUNCTION_114
0x40169b4	              0xc3	                                     ret	      9100	elf.c	FUNCTION_114
bfd_section_from_shdr	ELSE,9:DO,0:CALL,114:WHILE,0:FOR,7:IF,69:SWITCH,2:functions,0	1526
0x4005384	              0x55	                                push rbp	      1995	elf.c	FUNCTION_36
0x4005385	          0x4889e5	                            mov rbp, rsp	      1995	elf.c	FUNCTION_36
0x4005388	              0x53	                                push rbx	      1995	elf.c	FUNCTION_36
0x4005389	    0x4881ecb80000	                           sub rsp, 0xb8	      1995	elf.c	FUNCTION_36
0x4005390	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      1995	elf.c	FUNCTION_36
0x4005397	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	      1995	elf.c	FUNCTION_36
0x400539d	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	      2000	elf.c	FUNCTION_36
0x40053a7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40053ae	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40053b5	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40053bb	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40053c1	            0x770a	                            ja 0x40053cd	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40053c3	      0xb800000000	                              mov eax, 0	      2006	elf.c	FUNCTION_36	IF_1
0x40053c8	      0xe9741a0000	                           jmp 0x4006e41	      2006	elf.c	FUNCTION_36	IF_1
0x40053cd	    0x8b0500000000	            mov eax, dword [0x040053d3] 	      2008	elf.c	FUNCTION_36	IF_2
0x40053d3	          0x83c001	                              add eax, 1	      2008	elf.c	FUNCTION_36	IF_2
0x40053d6	    0x890500000000	            mov dword [0x040053dc], eax 	      2008	elf.c	FUNCTION_36	IF_2
0x40053dc	    0x8b0500000000	            mov eax, dword [0x040053e2] 	      2008	elf.c	FUNCTION_36	IF_2
0x40053e2	          0x83f803	                              cmp eax, 3	      2008	elf.c	FUNCTION_36	IF_2
0x40053e5	     0xf86d3000000	                           jbe 0x40054be	      2008	elf.c	FUNCTION_36	IF_2
0x40053eb	    0x488b05000000	            mov rax, qword [0x040053f2] 	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x40053f2	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x40053f9	            0x740b	                            je 0x4005406	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x40053fb	    0x48c705000000	               mov qword [0x04005406], 0	      2021	elf.c	FUNCTION_36	IF_2	IF_3
0x4005406	    0x488b05000000	            mov rax, qword [0x0400540d] 	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x400540d	          0x4885c0	                           test rax, rax	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4005410	            0x7545	                           jne 0x4005457	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4005412	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4005419	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4005420	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4005426	            0x89c0	                            mov eax, eax	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4005428	    0x488d14850000	                        lea rdx, [rax*4]	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4005430	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4005437	          0x4889d6	                            mov rsi, rdx	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x400543a	          0x4889c7	                            mov rdi, rax	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x400543d	      0xe800000000	                          call 0x4005442	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4005442	    0x488905000000	            mov qword [0x04005449], rax 	      2025	elf.c	FUNCTION_36	IF_2	IF_4
0x4005449	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2027	elf.c	FUNCTION_36	IF_2	IF_4
0x4005450	    0x488905000000	            mov qword [0x04005457], rax 	      2027	elf.c	FUNCTION_36	IF_2	IF_4
0x4005457	    0x488b05000000	            mov rax, qword [0x0400545e] 	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400545e	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4005464	        0x48c1e202	                              shl rdx, 2	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4005468	          0x4801d0	                            add rax, rdx	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400546b	            0x8b00	                    mov eax, dword [rax]	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400546d	            0x85c0	                           test eax, eax	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400546f	            0x7433	                            je 0x40054a4	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4005471	      0xbe00000000	                              mov esi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4005476	      0xbf00000000	                              mov edi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x400547b	      0xe800000000	                          call 0x4005480	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4005480	          0x4889c2	                            mov rdx, rax	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4005483	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x400548a	          0x4889c6	                            mov rsi, rax	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x400548d	          0x4889d7	                            mov rdi, rdx	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4005490	      0xb800000000	                              mov eax, 0	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4005495	      0xe800000000	                          call 0x400549a	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x400549a	      0xb800000000	                              mov eax, 0	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x400549f	      0xe99d190000	                           jmp 0x4006e41	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x40054a4	    0x488b05000000	            mov rax, qword [0x040054ab] 	      2035	elf.c	FUNCTION_36	IF_2
0x40054ab	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2035	elf.c	FUNCTION_36	IF_2
0x40054b1	        0x48c1e202	                              shl rdx, 2	      2035	elf.c	FUNCTION_36	IF_2
0x40054b5	          0x4801d0	                            add rax, rdx	      2035	elf.c	FUNCTION_36	IF_2
0x40054b8	    0xc70001000000	                      mov dword [rax], 1	      2035	elf.c	FUNCTION_36	IF_2
0x40054be	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2038	elf.c	FUNCTION_36	CALL_6
0x40054c5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2038	elf.c	FUNCTION_36	CALL_6
0x40054cc	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2038	elf.c	FUNCTION_36	CALL_6
0x40054d0	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2038	elf.c	FUNCTION_36	CALL_6
0x40054d6	        0x48c1e203	                              shl rdx, 3	      2038	elf.c	FUNCTION_36	CALL_6
0x40054da	          0x4801d0	                            add rax, rdx	      2038	elf.c	FUNCTION_36	CALL_6
0x40054dd	          0x488b00	                    mov rax, qword [rax]	      2038	elf.c	FUNCTION_36	CALL_6
0x40054e0	        0x48894598	             mov qword [rbp - 0x68], rax	      2038	elf.c	FUNCTION_36	CALL_6
0x40054e4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2039	elf.c	FUNCTION_36	CALL_7
0x40054eb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2039	elf.c	FUNCTION_36	CALL_7
0x40054f2	        0x488945a0	             mov qword [rbp - 0x60], rax	      2039	elf.c	FUNCTION_36	CALL_7
0x40054f6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2040	elf.c	FUNCTION_36	CALL_8
0x40054fa	            0x8b10	                    mov edx, dword [rax]	      2040	elf.c	FUNCTION_36	CALL_8
0x40054fc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2040	elf.c	FUNCTION_36	CALL_8
0x4005500	          0x8b4850	            mov ecx, dword [rax + 0x50] 	      2040	elf.c	FUNCTION_36	CALL_8
0x4005503	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2040	elf.c	FUNCTION_36	CALL_8
0x400550a	            0x89ce	                            mov esi, ecx	      2040	elf.c	FUNCTION_36	CALL_8
0x400550c	          0x4889c7	                            mov rdi, rax	      2040	elf.c	FUNCTION_36	CALL_8
0x400550f	      0xe800000000	                          call 0x4005514	      2040	elf.c	FUNCTION_36	CALL_8
0x4005514	        0x488945a8	             mov qword [rbp - 0x58], rax	      2040	elf.c	FUNCTION_36	CALL_8
0x4005518	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2042	elf.c	FUNCTION_36	IF_6
0x400551d	     0xf844e180000	                            je 0x4006d71	      2042	elf.c	FUNCTION_36	IF_6
0x4005523	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2045	elf.c	FUNCTION_36	CALL_9
0x400552a	        0x488b4008	                mov rax, qword [rax + 8]	      2045	elf.c	FUNCTION_36	CALL_9
0x400552e	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2045	elf.c	FUNCTION_36	CALL_9
0x4005535	        0x488945b0	             mov qword [rbp - 0x50], rax	      2045	elf.c	FUNCTION_36	CALL_9
0x4005539	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400553d	          0x8b4004	                mov eax, dword [rax + 4]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005540	          0x83f80a	                            cmp eax, 0xa	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005543	     0xf846b180000	                            je 0x4006db4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005549	          0x83f80a	                            cmp eax, 0xa	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400554c	            0x7758	                            ja 0x40055a6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400554e	          0x83f804	                              cmp eax, 4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005551	     0xf84b70d0000	                            je 0x400630e	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005557	          0x83f804	                              cmp eax, 4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400555a	            0x7729	                            ja 0x4005585	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400555c	          0x83f801	                              cmp eax, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400555f	     0xf84a8000000	                            je 0x400560d	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005565	          0x83f801	                              cmp eax, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005568	     0xf8249180000	                            jb 0x4006db7	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400556e	          0x83f802	                              cmp eax, 2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005571	     0xf848f020000	                            je 0x4005806	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005577	          0x83f803	                              cmp eax, 3	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400557a	     0xf8445090000	                            je 0x4005ec5	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005580	      0xe9c1150000	                           jmp 0x4006b46	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005585	          0x83f808	                              cmp eax, 8	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005588	     0xf87800d0000	                            ja 0x400630e	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400558e	          0x83f807	                              cmp eax, 7	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005591	            0x737a	                           jae 0x400560d	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005593	          0x83f805	                              cmp eax, 5	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005596	            0x7475	                            je 0x400560d	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005598	          0x83f806	                              cmp eax, 6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400559b	     0xf8494000000	                            je 0x4005635	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055a1	      0xe9a0150000	                           jmp 0x4006b46	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055a6	          0x83f812	                           cmp eax, 0x12	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055a9	     0xf84ee070000	                            je 0x4005d9d	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055af	          0x83f812	                           cmp eax, 0x12	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055b2	            0x771c	                            ja 0x40055d0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055b4	          0x83f810	                           cmp eax, 0x10	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055b7	     0xf8717150000	                            ja 0x4006ad4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055bd	          0x83f80e	                            cmp eax, 0xe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055c0	            0x734b	                           jae 0x400560d	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055c2	          0x83f80b	                            cmp eax, 0xb	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055c5	     0xf84ca050000	                            je 0x4005b95	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055cb	      0xe976150000	                           jmp 0x4006b46	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055d0	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055d5	     0xf84a4120000	                            je 0x400687f	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055db	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055e0	            0x7710	                            ja 0x40055f2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055e2	      0x2df6ffff6f	                     sub eax, 0x6ffffff6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055e7	          0x83f801	                              cmp eax, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055ea	     0xf8756150000	                            ja 0x4006b46	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055f0	            0xeb1b	                           jmp 0x400560d	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055f2	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055f7	     0xf8416140000	                            je 0x4006a13	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40055fd	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005602	     0xf8438130000	                            je 0x4006940	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4005608	      0xe939150000	                           jmp 0x4006b46	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400560d	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x4005613	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x4005617	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x400561b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x4005622	          0x4889c7	                            mov rdi, rax	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x4005625	      0xe800000000	                          call 0x400562a	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x400562a	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x4005630	      0xe99e170000	                           jmp 0x4006dd3	      2062	elf.c	FUNCTION_36	SWITCH_1
0x4005635	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400563b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400563f	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4005643	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400564a	          0x4889c7	                            mov rdi, rax	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400564d	      0xe800000000	                          call 0x4005652	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4005652	            0x85c0	                           test eax, eax	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4005654	     0xf841a170000	                            je 0x4006d74	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400565a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x400565e	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4005661	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4005668	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x400566f	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4005675	            0x39c2	                            cmp edx, eax	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4005677	            0x7647	                           jbe 0x40056c0	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4005679	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4005680	          0x4889c7	                            mov rdi, rax	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4005683	      0xe800000000	                          call 0x4005688	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4005688	          0x83f805	                              cmp eax, 5	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x400568b	            0x740a	                            je 0x4005697	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x400568d	          0x83f808	                              cmp eax, 8	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4005690	            0x7405	                            je 0x4005697	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4005692	      0xe911170000	                           jmp 0x4006da8	      2081	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2
0x4005697	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2076	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x400569b	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2076	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x400569e	      0x3d00ff0000	                         cmp eax, 0xff00	      2076	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x40056a3	     0xf8411170000	                            je 0x4006dba	      2076	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x40056a9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2077	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x40056ad	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2077	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x40056b0	      0x3d01ff0000	                         cmp eax, 0xff01	      2077	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x40056b5	     0xf84ff160000	                            je 0x4006dba	      2077	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	IF_9
0x40056bb	      0xe9e8160000	                           jmp 0x4006da8	      2081	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2
0x40056c0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056c7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056ce	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056d2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056d6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056d9	            0x89c0	                            mov eax, eax	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056db	        0x48c1e003	                              shl rax, 3	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056df	          0x4801d0	                            add rax, rdx	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056e2	          0x488b00	                    mov rax, qword [rax]	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056e5	          0x4885c0	                           test rax, rax	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056e8	     0xf8489160000	                            je 0x4006d77	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x40056ee	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x40056f5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x40056fc	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005700	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005704	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005707	            0x89c0	                            mov eax, eax	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005709	        0x48c1e003	                              shl rax, 3	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x400570d	          0x4801d0	                            add rax, rdx	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005710	          0x488b00	                    mov rax, qword [rax]	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005713	          0x8b4004	                mov eax, dword [rax + 4]	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005716	          0x83f803	                              cmp eax, 3	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4005719	     0xf849b160000	                            je 0x4006dba	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x400571f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4005726	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x400572d	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4005733	            0x85c0	                           test eax, eax	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4005735	            0x7449	                            je 0x4005780	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4005737	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x400573e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4005745	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4005749	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4005750	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4005757	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x400575d	            0x89c0	                            mov eax, eax	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x400575f	        0x48c1e003	                              shl rax, 3	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4005763	          0x4801d0	                            add rax, rdx	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4005766	          0x488b00	                    mov rax, qword [rax]	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4005769	        0x488945b8	             mov qword [rbp - 0x48], rax	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x400576d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4005771	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4005774	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4005778	          0x895028	             mov dword [rax + 0x28], edx	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x400577b	      0xe93a160000	                           jmp 0x4006dba	      2114	elf.c	FUNCTION_36	SWITCH_1
0x4005780	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2102	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	CALL_19
0x4005787	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2102	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	CALL_19
0x400578e	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2102	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	CALL_19
0x4005794	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      2102	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	CALL_19
0x400579a	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40057a4	            0xeb4d	                           jmp 0x40057f3	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40057a6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057ad	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057b4	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057b8	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057be	        0x48c1e203	                              shl rdx, 3	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057c2	          0x4801d0	                            add rax, rdx	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057c5	          0x488b00	                    mov rax, qword [rax]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057c8	        0x488945b8	             mov qword [rbp - 0x48], rax	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40057cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057d0	          0x8b4004	                mov eax, dword [rax + 4]	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057d3	          0x83f80b	                            cmp eax, 0xb	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057d6	            0x7514	                           jne 0x40057ec	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057dc	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057df	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057e3	          0x895028	             mov dword [rax + 0x28], edx	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057e6	              0x90	                                     nop	      2109	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40057e7	      0xe9ce150000	                           jmp 0x4006dba	      2114	elf.c	FUNCTION_36	SWITCH_1
0x40057ec	    0x83855cffffff	               add dword [rbp - 0xa4], 1	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40057f3	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40057f9	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40057ff	            0x72a5	                            jb 0x40057a6	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4005801	      0xe9b4150000	                           jmp 0x4006dba	      2114	elf.c	FUNCTION_36	SWITCH_1
0x4005806	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x400580d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x4005814	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x400581a	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x4005820	     0xf8497150000	                            je 0x4006dbd	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x4005826	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x400582a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x400582e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4005832	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4005839	         0xfb64005	               movzx eax, byte [rax + 5]	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x400583d	           0xfb6c0	                           movzx eax, al	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4005840	          0x4839c2	                            cmp rdx, rax	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4005843	     0xf8531150000	                           jne 0x4006d7a	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4005849	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x400584d	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005850	            0x89c2	                            mov edx, eax	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005852	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005856	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x400585a	        0x480fafd0	                           imul rdx, rax	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x400585e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005862	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005866	          0x4839c2	                            cmp rdx, rax	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005869	            0x7621	                           jbe 0x400588c	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x400586b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2125	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x400586f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2125	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x4005873	          0x4885c0	                           test rax, rax	      2125	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x4005876	     0xf8501150000	                           jne 0x4006d7d	      2125	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x400587c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2130	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005880	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      2130	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4005887	      0xe947150000	                           jmp 0x4006dd3	      2131	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x400588c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x4005893	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x400589a	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x40058a0	            0x85c0	                           test eax, eax	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x40058a2	            0x7434	                            je 0x40058d8	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x40058a4	      0xbe00000000	                              mov esi, 0	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40058a9	      0xbf00000000	                              mov edi, 0	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40058ae	      0xe800000000	                          call 0x40058b3	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40058b3	          0x4889c1	                            mov rcx, rax	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40058b6	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x40058bc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x40058c3	          0x4889c6	                            mov rsi, rax	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x40058c6	          0x4889cf	                            mov rdi, rcx	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x40058c9	      0xb800000000	                              mov eax, 0	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x40058ce	      0xe800000000	                          call 0x40058d3	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x40058d3	      0xe9fb140000	                           jmp 0x4006dd3	      2143	elf.c	FUNCTION_36	SWITCH_1	IF_18
0x40058d8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2145	elf.c	FUNCTION_36	SWITCH_1	CALL_25
0x40058df	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2145	elf.c	FUNCTION_36	SWITCH_1	CALL_25
0x40058e6	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2145	elf.c	FUNCTION_36	SWITCH_1	CALL_25
0x40058ec	    0x8990780c0000	            mov dword [rax + 0xc78], edx	      2145	elf.c	FUNCTION_36	SWITCH_1	CALL_25
0x40058f2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40058f9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005900	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005904	          0x488b0a	                    mov rcx, qword [rdx]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005907	        0x48894868	             mov qword [rax + 0x68], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400590b	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400590f	        0x48894870	             mov qword [rax + 0x70], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005913	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005917	        0x48894878	             mov qword [rax + 0x78], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400591b	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400591f	    0x488988800000	             mov qword [rax + 0x80], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005926	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400592a	    0x488988880000	             mov qword [rax + 0x88], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005931	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005935	    0x488988900000	             mov qword [rax + 0x90], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400593c	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005940	    0x488988980000	             mov qword [rax + 0x98], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005947	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400594b	    0x488988a00000	             mov qword [rax + 0xa0], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005952	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005956	    0x488988a80000	             mov qword [rax + 0xa8], rcx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400595d	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005961	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4005968	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x400596f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4005976	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x400597a	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4005980	        0x48c1e203	                              shl rdx, 3	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4005984	          0x4801c2	                            add rdx, rax	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4005987	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x400598e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4005995	        0x4883c068	                           add rax, 0x68	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4005999	        0x48894598	             mov qword [rbp - 0x68], rax	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x400599d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x40059a1	          0x488902	                    mov qword [rdx], rax	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x40059a4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059ab	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059ae	          0xc1e805	                              shr eax, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059b1	      0x25ffff0f00	                        and eax, 0xfffff	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059b6	          0x83c810	                            or eax, 0x10	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059b9	            0x89c2	                            mov edx, eax	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059bb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059c2	    0x81e2ffff0f00	                        and edx, 0xfffff	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059c8	            0x89d1	                            mov ecx, edx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059ca	          0xc1e105	                              shl ecx, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059cd	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059d0	    0x81e21f0000fe	                     and edx, 0xfe00001f	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059d6	             0x9ca	                             or edx, ecx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059d8	          0x895044	             mov dword [rax + 0x44], edx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40059db	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059df	        0x488b4008	                mov rax, qword [rax + 8]	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059e3	          0x83e002	                              and eax, 2	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059e6	          0x4885c0	                           test rax, rax	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059e9	            0x743e	                            je 0x4005a29	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059eb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059f2	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059f5	          0xc1e805	                              shr eax, 5	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059f8	      0x25ffff0f00	                        and eax, 0xfffff	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40059fd	          0x83e040	                           and eax, 0x40	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4005a00	            0x85c0	                           test eax, eax	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4005a02	            0x7425	                            je 0x4005a29	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4005a04	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a0a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a0e	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a12	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a19	          0x4889c7	                            mov rdi, rax	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a1c	      0xe800000000	                          call 0x4005a21	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a21	            0x85c0	                           test eax, eax	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a23	     0xf8457130000	                            je 0x4006d80	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4005a29	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a30	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a37	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a3e	        0x48894580	             mov qword [rbp - 0x80], rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a42	            0xeb1f	                           jmp 0x4005a63	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a44	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4005a48	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4005a4b	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4005a51	     0xf8469130000	                            je 0x4006dc0	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4005a57	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a5b	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a5f	        0x48894580	             mov qword [rbp - 0x80], rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a63	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a68	            0x75da	                           jne 0x4005a44	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4005a6a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2173	elf.c	FUNCTION_36	SWITCH_1	CALL_31
0x4005a71	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2173	elf.c	FUNCTION_36	SWITCH_1	CALL_31
0x4005a78	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2173	elf.c	FUNCTION_36	SWITCH_1	CALL_31
0x4005a7e	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      2173	elf.c	FUNCTION_36	SWITCH_1	CALL_31
0x4005a84	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005a8a	          0x83c001	                              add eax, 1	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005a8d	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005a93	            0xeb48	                           jmp 0x4005add	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005a95	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005a9c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005aa3	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005aa7	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005aad	        0x48c1e203	                              shl rdx, 3	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005ab1	          0x4801d0	                            add rax, rdx	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005ab4	          0x488b00	                    mov rax, qword [rax]	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005ab7	        0x488945c0	             mov qword [rbp - 0x40], rax	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005abb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005abf	          0x8b4004	                mov eax, dword [rax + 4]	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005ac2	          0x83f812	                           cmp eax, 0x12	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005ac5	            0x750f	                           jne 0x4005ad6	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005ac7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005acb	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005ace	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005ad4	            0x7417	                            je 0x4005aed	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005ad6	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005add	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005ae3	    0x3b8574ffffff	             cmp eax, dword [rbp - 0x8c]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005ae9	            0x72aa	                            jb 0x4005a95	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005aeb	            0xeb01	                           jmp 0x4005aee	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005aed	              0x90	                                     nop	      2180	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005aee	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x4005af4	    0x3b8574ffffff	             cmp eax, dword [rbp - 0x8c]	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x4005afa	            0x7565	                           jne 0x4005b61	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x4005afc	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005b06	            0xeb48	                           jmp 0x4005b50	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005b08	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b0f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b16	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b1a	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b20	        0x48c1e203	                              shl rdx, 3	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b24	          0x4801d0	                            add rax, rdx	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b27	          0x488b00	                    mov rax, qword [rax]	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b2a	        0x488945c8	             mov qword [rbp - 0x38], rax	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005b2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b32	          0x8b4004	                mov eax, dword [rax + 4]	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b35	          0x83f812	                           cmp eax, 0x12	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b38	            0x750f	                           jne 0x4005b49	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b3e	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b41	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b47	            0x7417	                            je 0x4005b60	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b49	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005b50	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005b56	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005b5c	            0x72aa	                            jb 0x4005b08	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005b5e	            0xeb01	                           jmp 0x4005b61	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005b60	              0x90	                                     nop	      2190	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005b61	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x4005b67	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x4005b6d	     0xf8450120000	                            je 0x4006dc3	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x4005b73	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005b79	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005b80	            0x89d6	                            mov esi, edx	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005b82	          0x4889c7	                            mov rdi, rax	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005b85	      0xe800000000	                          call 0x4005b8a	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005b8a	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005b90	      0xe92e120000	                           jmp 0x4006dc3	      2196	elf.c	FUNCTION_36	SWITCH_1
0x4005b95	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x4005b9c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x4005ba3	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x4005ba9	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x4005baf	     0xf8411120000	                            je 0x4006dc6	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x4005bb5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bb9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bbd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bc1	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bc8	         0xfb64005	               movzx eax, byte [rax + 5]	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bcc	           0xfb6c0	                           movzx eax, al	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bcf	          0x4839c2	                            cmp rdx, rax	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bd2	     0xf85ab110000	                           jne 0x4006d83	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4005bd8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005bdc	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005bdf	            0x89c2	                            mov edx, eax	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005be1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005be5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005be9	        0x480fafd0	                           imul rdx, rax	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005bed	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005bf1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005bf5	          0x4839c2	                            cmp rdx, rax	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005bf8	            0x7621	                           jbe 0x4005c1b	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005bfa	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4005bfe	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4005c02	          0x4885c0	                           test rax, rax	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4005c05	     0xf857b110000	                           jne 0x4006d86	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4005c0b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2214	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005c0f	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      2214	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005c16	      0xe9b8110000	                           jmp 0x4006dd3	      2215	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4005c1b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x4005c22	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x4005c29	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x4005c2f	            0x85c0	                           test eax, eax	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x4005c31	            0x7434	                            je 0x4005c67	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x4005c33	      0xbe00000000	                              mov esi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4005c38	      0xbf00000000	                              mov edi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4005c3d	      0xe800000000	                          call 0x4005c42	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4005c42	          0x4889c1	                            mov rcx, rax	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4005c45	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4005c4b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4005c52	          0x4889c6	                            mov rsi, rax	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4005c55	          0x4889cf	                            mov rdi, rcx	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4005c58	      0xb800000000	                              mov eax, 0	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4005c5d	      0xe800000000	                          call 0x4005c62	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4005c62	      0xe96c110000	                           jmp 0x4006dd3	      2227	elf.c	FUNCTION_36	SWITCH_1	IF_29
0x4005c67	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2229	elf.c	FUNCTION_36	SWITCH_1	CALL_39
0x4005c6e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2229	elf.c	FUNCTION_36	SWITCH_1	CALL_39
0x4005c75	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2229	elf.c	FUNCTION_36	SWITCH_1	CALL_39
0x4005c7b	    0x89907c0c0000	            mov dword [rax + 0xc7c], edx	      2229	elf.c	FUNCTION_36	SWITCH_1	CALL_39
0x4005c81	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005c88	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005c8f	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005c93	          0x488b0a	                    mov rcx, qword [rdx]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005c96	    0x488988580100	            mov qword [rax + 0x158], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005c9d	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005ca1	    0x488988600100	            mov qword [rax + 0x160], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005ca8	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cac	    0x488988680100	            mov qword [rax + 0x168], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cb3	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cb7	    0x488988700100	            mov qword [rax + 0x170], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cbe	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cc2	    0x488988780100	            mov qword [rax + 0x178], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cc9	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005ccd	    0x488988800100	            mov qword [rax + 0x180], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cd4	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cd8	    0x488988880100	            mov qword [rax + 0x188], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cdf	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005ce3	    0x488988900100	            mov qword [rax + 0x190], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cea	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cee	    0x488988980100	            mov qword [rax + 0x198], rcx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cf5	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005cf9	    0x488990a00100	            mov qword [rax + 0x1a0], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005d00	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d07	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d0e	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d12	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d18	        0x48c1e203	                              shl rdx, 3	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d1c	          0x4801c2	                            add rdx, rax	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d1f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d26	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d2d	    0x480558010000	                          add rax, 0x158	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d33	        0x48894598	             mov qword [rbp - 0x68], rax	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d37	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d3b	          0x488902	                    mov qword [rdx], rax	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4005d3e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d45	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d48	          0xc1e805	                              shr eax, 5	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d4b	      0x25ffff0f00	                        and eax, 0xfffff	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d50	          0x83c810	                            or eax, 0x10	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d53	            0x89c2	                            mov edx, eax	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d55	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d5c	    0x81e2ffff0f00	                        and edx, 0xfffff	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d62	            0x89d1	                            mov ecx, edx	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d64	          0xc1e105	                              shl ecx, 5	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d67	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d6a	    0x81e21f0000fe	                     and edx, 0xfe00001f	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d70	             0x9ca	                             or edx, ecx	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d72	          0x895044	             mov dword [rax + 0x44], edx	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4005d75	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005d7b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005d7f	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005d83	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005d8a	          0x4889c7	                            mov rdi, rax	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005d8d	      0xe800000000	                          call 0x4005d92	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005d92	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005d98	      0xe936100000	                           jmp 0x4006dd3	      2237	elf.c	FUNCTION_36	SWITCH_1
0x4005d9d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005da4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005dab	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005db2	        0x48894588	             mov qword [rbp - 0x78], rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005db6	            0xeb1f	                           jmp 0x4005dd7	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005db8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4005dbc	          0x8b4050	            mov eax, dword [rax + 0x50] 	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4005dbf	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4005dc5	     0xf84fe0f0000	                            je 0x4006dc9	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4005dcb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005dcf	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005dd3	        0x48894588	             mov qword [rbp - 0x78], rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005dd7	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005ddc	            0x75da	                           jne 0x4005db8	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4005dde	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4005de5	      0xbe60000000	                           mov esi, 0x60	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4005dea	          0x4889c7	                            mov rdi, rax	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4005ded	      0xe800000000	                          call 0x4005df2	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4005df2	        0x48894588	             mov qword [rbp - 0x78], rax	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4005df6	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4005dfb	     0xf84880f0000	                            je 0x4006d89	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4005e01	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2250	elf.c	FUNCTION_36	SWITCH_1
0x4005e05	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2250	elf.c	FUNCTION_36	SWITCH_1
0x4005e0b	          0x895050	             mov dword [rax + 0x50], edx	      2250	elf.c	FUNCTION_36	SWITCH_1
0x4005e0e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e12	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e16	          0x488b0a	                    mov rcx, qword [rdx]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e19	          0x488908	                    mov qword [rax], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e1c	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e20	        0x48894808	                mov qword [rax + 8], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e24	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e28	        0x48894810	             mov qword [rax + 0x10], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e2c	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e30	        0x48894818	             mov qword [rax + 0x18], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e34	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e38	        0x48894820	             mov qword [rax + 0x20], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e3c	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e40	        0x48894828	             mov qword [rax + 0x28], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e44	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e48	        0x48894830	             mov qword [rax + 0x30], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e4c	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e50	        0x48894838	             mov qword [rax + 0x38], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e54	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e58	        0x48894840	             mov qword [rax + 0x40], rcx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e5c	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e60	        0x48895048	             mov qword [rax + 0x48], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005e64	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4005e6b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4005e72	    0x488b90e80200	           mov rdx, qword [rax + 0x2e8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4005e79	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4005e7d	        0x48895058	             mov qword [rax + 0x58], rdx	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4005e81	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x4005e88	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x4005e8f	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x4005e93	    0x488990e80200	            mov qword [rax + 0x2e8], rdx	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x4005e9a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005ea1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005ea8	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005eac	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005eb2	        0x48c1e203	                              shl rdx, 3	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005eb6	          0x4801c2	                            add rdx, rax	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005eb9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005ebd	          0x488902	                    mov qword [rdx], rax	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005ec0	      0xe90e0f0000	                           jmp 0x4006dd3	      2255	elf.c	FUNCTION_36	SWITCH_1
0x4005ec5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4005ec9	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4005ecd	          0x4885c0	                           test rax, rax	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4005ed0	     0xf85f60e0000	                           jne 0x4006dcc	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4005ed6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4005eda	          0x8b4050	            mov eax, dword [rax + 0x50] 	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4005edd	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4005ee3	     0xf85ba000000	                           jne 0x4005fa3	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4005ee9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005ef0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005ef7	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005efb	          0x488b0a	                    mov rcx, qword [rdx]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005efe	    0x488988b80000	             mov qword [rax + 0xb8], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f05	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f09	    0x488988c00000	             mov qword [rax + 0xc0], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f10	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f14	    0x488988c80000	             mov qword [rax + 0xc8], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f1b	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f1f	    0x488988d00000	             mov qword [rax + 0xd0], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f26	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f2a	    0x488988d80000	             mov qword [rax + 0xd8], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f31	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f35	    0x488988e00000	             mov qword [rax + 0xe0], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f3c	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f40	    0x488988e80000	             mov qword [rax + 0xe8], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f47	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f4b	    0x488988f00000	             mov qword [rax + 0xf0], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f52	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f56	    0x488988f80000	             mov qword [rax + 0xf8], rcx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f5d	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f61	    0x488990000100	            mov qword [rax + 0x100], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005f68	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f6f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f76	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f7a	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f80	        0x48c1e203	                              shl rdx, 3	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f84	          0x4801c2	                            add rdx, rax	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f87	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f8e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f95	    0x4805b8000000	                           add rax, 0xb8	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f9b	          0x488902	                    mov qword [rdx], rax	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005f9e	      0xe9300e0000	                           jmp 0x4006dd3	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4005fa3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005faa	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fb1	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fb5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fbc	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fc3	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fc9	            0x89c0	                            mov eax, eax	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fcb	        0x48c1e003	                              shl rax, 3	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fcf	          0x4801d0	                            add rax, rdx	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fd2	          0x488b00	                    mov rax, qword [rax]	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fd5	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fd8	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fde	     0xf85bd000000	                           jne 0x40060a1	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fe4	            0xeb01	                           jmp 0x4005fe7	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4005fe6	              0x90	                                     nop	      2309	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40
0x4005fe7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4005fee	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4005ff5	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4005ff9	          0x488b0a	                    mov rcx, qword [rdx]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4005ffc	    0x488988080100	            mov qword [rax + 0x108], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006003	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006007	    0x488988100100	            mov qword [rax + 0x110], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400600e	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006012	    0x488988180100	            mov qword [rax + 0x118], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006019	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400601d	    0x488988200100	            mov qword [rax + 0x120], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006024	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006028	    0x488988280100	            mov qword [rax + 0x128], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400602f	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006033	    0x488988300100	            mov qword [rax + 0x130], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400603a	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400603e	    0x488988380100	            mov qword [rax + 0x138], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006045	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006049	    0x488988400100	            mov qword [rax + 0x140], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006050	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006054	    0x488988480100	            mov qword [rax + 0x148], rcx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400605b	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400605f	    0x488990500100	            mov qword [rax + 0x150], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4006066	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400606d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4006074	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4006078	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400607e	        0x48c1e203	                              shl rdx, 3	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4006082	          0x4801c2	                            add rdx, rax	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4006085	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400608c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4006093	    0x480508010000	                          add rax, 0x108	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4006099	          0x488902	                    mov qword [rdx], rax	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400609c	      0xe9320d0000	                           jmp 0x4006dd3	      2274	elf.c	FUNCTION_36	SWITCH_1	IF_34
0x40060a1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060a8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060af	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060ba	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060c1	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060c7	            0x89c0	                            mov eax, eax	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060c9	        0x48c1e003	                              shl rax, 3	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060cd	          0x4801d0	                            add rax, rdx	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060d0	          0x488b00	                    mov rax, qword [rax]	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060d3	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060d6	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060dc	     0xf85e8000000	                           jne 0x40061ca	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060e2	            0xeb01	                           jmp 0x40060e5	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40060e4	              0x90	                                     nop	      2311	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41
0x40060e5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40060ec	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40060f3	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40060f7	          0x488b0a	                    mov rcx, qword [rdx]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40060fa	    0x488988a80100	            mov qword [rax + 0x1a8], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006101	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006105	    0x488988b00100	            mov qword [rax + 0x1b0], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400610c	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006110	    0x488988b80100	            mov qword [rax + 0x1b8], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006117	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400611b	    0x488988c00100	            mov qword [rax + 0x1c0], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006122	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006126	    0x488988c80100	            mov qword [rax + 0x1c8], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400612d	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006131	    0x488988d00100	            mov qword [rax + 0x1d0], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006138	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400613c	    0x488988d80100	            mov qword [rax + 0x1d8], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006143	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006147	    0x488988e00100	            mov qword [rax + 0x1e0], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400614e	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006152	    0x488988e80100	            mov qword [rax + 0x1e8], rcx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006159	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400615d	    0x488990f00100	            mov qword [rax + 0x1f0], rdx	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4006164	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x400616b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x4006172	    0x4805a8010000	                          add rax, 0x1a8	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x4006178	        0x48894598	             mov qword [rbp - 0x68], rax	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x400617c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x4006183	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x400618a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x400618e	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x4006194	        0x48c1e203	                              shl rdx, 3	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x4006198	          0x4801c2	                            add rdx, rax	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x400619b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x400619f	          0x488902	                    mov qword [rdx], rax	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x40061a2	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40061a8	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40061ac	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40061b0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40061b7	          0x4889c7	                            mov rdi, rax	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40061ba	      0xe800000000	                          call 0x40061bf	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40061bf	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40061c5	      0xe9090c0000	                           jmp 0x4006dd3	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x40061ca	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061d1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061d8	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061de	            0x85c0	                           test eax, eax	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061e0	            0x741c	                            je 0x40061fe	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061e2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061e9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061f0	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061f6	            0x85c0	                           test eax, eax	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061f8	     0xf85e8000000	                           jne 0x40062e6	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40061fe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x4006205	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x400620c	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x4006212	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x4006218	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4006222	      0xe9ad000000	                           jmp 0x40062d4	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4006227	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x400622e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x4006235	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x4006239	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x400623f	        0x48c1e203	                              shl rdx, 3	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x4006243	          0x4801d0	                            add rax, rdx	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x4006246	          0x488b00	                    mov rax, qword [rax]	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x4006249	        0x488945d0	             mov qword [rbp - 0x30], rax	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x400624d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x4006251	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x4006254	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x400625a	            0x7571	                           jne 0x40062cd	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x400625c	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x4006262	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x4006268	     0xf841e0b0000	                            je 0x4006d8c	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x400626e	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x4006274	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x400627b	            0x89d6	                            mov esi, edx	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x400627d	          0x4889c7	                            mov rdi, rax	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x4006280	      0xe800000000	                          call 0x4006285	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x4006285	            0x85c0	                           test eax, eax	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x4006287	     0xf84020b0000	                            je 0x4006d8f	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x400628d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x4006294	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x400629b	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40062a1	    0x3b8564ffffff	             cmp eax, dword [rbp - 0x9c]	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40062a7	     0xf8439fdffff	                            je 0x4005fe6	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40062ad	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40062b4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40062bb	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40062c1	    0x3b8564ffffff	             cmp eax, dword [rbp - 0x9c]	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40062c7	     0xf8417feffff	                            je 0x40060e4	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40062cd	    0x838564ffffff	               add dword [rbp - 0x9c], 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40062d4	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40062da	    0x3b8578ffffff	             cmp eax, dword [rbp - 0x88]	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40062e0	     0xf8241ffffff	                            jb 0x4006227	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40062e6	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x40062ec	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x40062f0	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x40062f4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x40062fb	          0x4889c7	                            mov rdi, rax	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x40062fe	      0xe800000000	                          call 0x4006303	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x4006303	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x4006309	      0xe9c50a0000	                           jmp 0x4006dd3	      2316	elf.c	FUNCTION_36	SWITCH_1
0x400630e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x4006315	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x400631c	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x4006322	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x4006328	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400632c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006330	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006334	          0x8b4004	                mov eax, dword [rax + 4]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006337	          0x83f809	                              cmp eax, 9	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400633a	            0x7514	                           jne 0x4006350	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400633c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006340	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006347	         0xfb64003	               movzx eax, byte [rax + 3]	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400634b	           0xfb6c0	                           movzx eax, al	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400634e	            0xeb12	                           jmp 0x4006362	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006350	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006354	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400635b	         0xfb64004	               movzx eax, byte [rax + 4]	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400635f	           0xfb6c0	                           movzx eax, al	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006362	          0x4839c2	                            cmp rdx, rax	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006365	     0xf85270a0000	                           jne 0x4006d92	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400636b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x400636f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4006372	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4006378	            0x7267	                            jb 0x40063e1	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x400637a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x400637e	          0x8b5828	            mov ebx, dword [rax + 0x28] 	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4006381	      0xbe00000000	                              mov esi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4006386	      0xbf00000000	                              mov edi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x400638b	      0xe800000000	                          call 0x4006390	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4006390	          0x4889c7	                            mov rdi, rax	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4006393	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4006399	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x400639d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40063a4	          0x4189c8	                            mov r8d, ecx	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40063a7	          0x4889d1	                            mov rcx, rdx	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40063aa	            0x89da	                            mov edx, ebx	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40063ac	          0x4889c6	                            mov rsi, rax	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40063af	      0xb800000000	                              mov eax, 0	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40063b4	      0xe800000000	                          call 0x40063b9	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40063b9	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40063bf	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40063c3	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40063c7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40063ce	          0x4889c7	                            mov rdi, rax	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40063d1	      0xe800000000	                          call 0x40063d6	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40063d6	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40063dc	      0xe9f2090000	                           jmp 0x4006dd3	      2341	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x40063e1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x40063e8	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x40063eb	          0xc1e805	                              shr eax, 5	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x40063ee	      0x25ffff0f00	                        and eax, 0xfffff	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x40063f3	          0x83e042	                           and eax, 0x42	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x40063f6	            0x85c0	                           test eax, eax	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x40063f8	     0xf851c010000	                           jne 0x400651a	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x40063fe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006405	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x400640c	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006410	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006414	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006417	            0x89c0	                            mov eax, eax	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006419	        0x48c1e003	                              shl rax, 3	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x400641d	          0x4801d0	                            add rax, rdx	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006420	          0x488b00	                    mov rax, qword [rax]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006423	          0x8b4004	                mov eax, dword [rax + 4]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006426	          0x83f802	                              cmp eax, 2	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4006429	     0xf84eb000000	                            je 0x400651a	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x400642f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006436	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x400643d	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006441	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006445	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006448	            0x89c0	                            mov eax, eax	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x400644a	        0x48c1e003	                              shl rax, 3	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x400644e	          0x4801d0	                            add rax, rdx	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006451	          0x488b00	                    mov rax, qword [rax]	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006454	          0x8b4004	                mov eax, dword [rax + 4]	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006457	          0x83f80b	                            cmp eax, 0xb	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x400645a	     0xf84ba000000	                            je 0x400651a	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4006460	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      2360	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x400646a	    0xc78568ffffff	               mov dword [rbp - 0x98], 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4006474	            0xeb7c	                           jmp 0x40064f2	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4006476	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400647d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4006484	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4006488	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400648e	        0x48c1e203	                              shl rdx, 3	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4006492	          0x4801d0	                            add rax, rdx	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4006495	          0x488b00	                    mov rax, qword [rax]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4006498	          0x8b4004	                mov eax, dword [rax + 4]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400649b	          0x83f802	                              cmp eax, 2	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400649e	            0x742a	                            je 0x40064ca	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x40064a0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064a7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064ae	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064b2	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064b8	        0x48c1e203	                              shl rdx, 3	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064bc	          0x4801d0	                            add rax, rdx	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064bf	          0x488b00	                    mov rax, qword [rax]	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064c2	          0x8b4004	                mov eax, dword [rax + 4]	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064c5	          0x83f80b	                            cmp eax, 0xb	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064c8	            0x7521	                           jne 0x40064eb	      2364	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_78
0x40064ca	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x40064d1	            0x740c	                            je 0x40064df	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x40064d3	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      2368	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x40064dd	            0xeb25	                           jmp 0x4006504	      2369	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x40064df	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2371	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45
0x40064e5	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2371	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45
0x40064eb	    0x838568ffffff	               add dword [rbp - 0x98], 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x40064f2	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x40064f8	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x40064fe	     0xf8272ffffff	                            jb 0x4006476	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4006504	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400650b	            0x740d	                            je 0x400651a	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400650d	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4006513	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4006517	          0x895028	             mov dword [rax + 0x28], edx	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400651a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006521	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006528	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x400652c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006530	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006533	            0x89c0	                            mov eax, eax	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006535	        0x48c1e003	                              shl rax, 3	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006539	          0x4801d0	                            add rax, rdx	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x400653c	          0x488b00	                    mov rax, qword [rax]	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x400653f	          0x8b4004	                mov eax, dword [rax + 4]	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006542	          0x83f802	                              cmp eax, 2	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006545	            0x742d	                            je 0x4006574	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4006547	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x400654e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006555	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006559	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x400655d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006560	            0x89c0	                            mov eax, eax	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006562	        0x48c1e003	                              shl rax, 3	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006566	          0x4801d0	                            add rax, rdx	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006569	          0x488b00	                    mov rax, qword [rax]	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x400656c	          0x8b4004	                mov eax, dword [rax + 4]	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x400656f	          0x83f80b	                            cmp eax, 0xb	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006572	            0x7520	                           jne 0x4006594	      2380	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_80
0x4006574	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4006578	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400657b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4006582	            0x89d6	                            mov esi, edx	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4006584	          0x4889c7	                            mov rdi, rax	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4006587	      0xe800000000	                          call 0x400658c	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400658c	            0x85c0	                           test eax, eax	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400658e	     0xf8401080000	                            je 0x4006d95	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4006594	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x4006598	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x400659b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x40065a2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x40065a9	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x40065af	            0x39c2	                            cmp edx, eax	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x40065b1	            0x757f	                           jne 0x4006632	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x40065b3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065b7	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065ba	            0x85c0	                           test eax, eax	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065bc	            0x7474	                            je 0x4006632	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065be	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2393	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065c2	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2393	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065c5	            0x85c0	                           test eax, eax	      2393	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065c7	            0x7469	                            je 0x4006632	      2393	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065c9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065cd	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065d0	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065d6	            0x735a	                           jae 0x4006632	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40065d8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065df	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065e6	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065ea	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065ee	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065f1	            0x89c0	                            mov eax, eax	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065f3	        0x48c1e003	                              shl rax, 3	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065f7	          0x4801d0	                            add rax, rdx	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065fa	          0x488b00	                    mov rax, qword [rax]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40065fd	          0x8b4004	                mov eax, dword [rax + 4]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4006600	          0x83f809	                              cmp eax, 9	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4006603	            0x742d	                            je 0x4006632	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4006605	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x400660c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4006613	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4006617	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x400661b	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x400661e	            0x89c0	                            mov eax, eax	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4006620	        0x48c1e003	                              shl rax, 3	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4006624	          0x4801d0	                            add rax, rdx	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4006627	          0x488b00	                    mov rax, qword [rax]	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x400662a	          0x8b4004	                mov eax, dword [rax + 4]	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x400662d	          0x83f804	                              cmp eax, 4	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4006630	            0x7528	                           jne 0x400665a	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4006632	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x4006638	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x400663c	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x4006640	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x4006647	          0x4889c7	                            mov rdi, rax	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x400664a	      0xe800000000	                          call 0x400664f	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x400664f	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x4006655	      0xe979070000	                           jmp 0x4006dd3	      2400	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x400665a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x400665e	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4006661	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4006668	            0x89d6	                            mov esi, edx	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x400666a	          0x4889c7	                            mov rdi, rax	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x400666d	      0xe800000000	                          call 0x4006672	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4006672	            0x85c0	                           test eax, eax	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4006674	     0xf841e070000	                            je 0x4006d98	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x400667a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x400667e	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4006681	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4006688	            0x89d6	                            mov esi, edx	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x400668a	          0x4889c7	                            mov rdi, rax	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x400668d	      0xe800000000	                          call 0x4006692	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4006692	        0x488945d8	             mov qword [rbp - 0x28], rax	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4006696	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x400669b	     0xf84fa060000	                            je 0x4006d9b	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x40066a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2410	elf.c	FUNCTION_36	SWITCH_1	CALL_88
0x40066a5	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2410	elf.c	FUNCTION_36	SWITCH_1	CALL_88
0x40066ac	        0x488945e0	             mov qword [rbp - 0x20], rax	      2410	elf.c	FUNCTION_36	SWITCH_1	CALL_88
0x40066b0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066b4	          0x8b4004	                mov eax, dword [rax + 4]	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066b7	          0x83f804	                              cmp eax, 4	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066ba	            0x750e	                           jne 0x40066ca	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066c0	        0x4883c070	                           add rax, 0x70	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066c4	        0x48894590	             mov qword [rbp - 0x70], rax	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066c8	            0xeb0c	                           jmp 0x40066d6	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40066ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x40066ce	        0x4883c058	                           add rax, 0x58	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x40066d2	        0x48894590	             mov qword [rbp - 0x70], rax	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x40066d6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x40066da	          0x488b00	                    mov rax, qword [rax]	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x40066dd	          0x4885c0	                           test rax, rax	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x40066e0	     0xf85b8060000	                           jne 0x4006d9e	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x40066e6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x40066ed	      0xbe50000000	                           mov esi, 0x50	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x40066f2	          0x4889c7	                            mov rdi, rax	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x40066f5	      0xe800000000	                          call 0x40066fa	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x40066fa	        0x488945e8	             mov qword [rbp - 0x18], rax	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x40066fe	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4006703	     0xf8498060000	                            je 0x4006da1	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4006709	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400670d	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006711	          0x488b0a	                    mov rcx, qword [rdx]	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006714	          0x488908	                    mov qword [rax], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006717	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400671b	        0x48894808	                mov qword [rax + 8], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400671f	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006723	        0x48894810	             mov qword [rax + 0x10], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006727	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400672b	        0x48894818	             mov qword [rax + 0x18], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400672f	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006733	        0x48894820	             mov qword [rax + 0x20], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006737	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400673b	        0x48894828	             mov qword [rax + 0x28], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400673f	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006743	        0x48894830	             mov qword [rax + 0x30], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006747	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400674b	        0x48894838	             mov qword [rax + 0x38], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400674f	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006753	        0x48894840	             mov qword [rax + 0x40], rcx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4006757	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400675b	        0x48895048	             mov qword [rax + 0x48], rdx	      2422	elf.c	FUNCTION_36	SWITCH_1
0x400675f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2423	elf.c	FUNCTION_36	SWITCH_1
0x4006763	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2423	elf.c	FUNCTION_36	SWITCH_1
0x4006767	          0x488910	                    mov qword [rax], rdx	      2423	elf.c	FUNCTION_36	SWITCH_1
0x400676a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4006771	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4006778	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x400677c	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4006782	        0x48c1e203	                              shl rdx, 3	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4006786	          0x4801c2	                            add rdx, rax	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4006789	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x400678d	          0x488902	                    mov qword [rdx], rax	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4006790	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4006794	    0x8b8888000000	            mov ecx, dword [rax + 0x88] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x400679a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x400679e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067a2	          0x4885c0	                           test rax, rax	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067a5	            0x741c	                            je 0x40067c3	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067a7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067ab	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067af	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067b3	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067b7	      0xba00000000	                              mov edx, 0	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067bc	          0x48f7f3	                                 div rbx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067bf	            0x89c2	                            mov edx, eax	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067c1	            0xeb05	                           jmp 0x40067c8	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067c3	      0xba00000000	                              mov edx, 0	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067c8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2426	elf.c	FUNCTION_36	SWITCH_1
0x40067cc	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      2426	elf.c	FUNCTION_36	SWITCH_1
0x40067d3	         0xfb64009	               movzx eax, byte [rax + 9]	      2426	elf.c	FUNCTION_36	SWITCH_1
0x40067d7	           0xfb6c0	                           movzx eax, al	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067da	           0xfafc2	                           imul eax, edx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067dd	          0x8d1401	                    lea edx, [rcx + rax]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067e4	    0x899088000000	             mov dword [rax + 0x88], edx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x40067ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2427	elf.c	FUNCTION_36	SWITCH_1
0x40067ee	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2427	elf.c	FUNCTION_36	SWITCH_1
0x40067f1	          0x83c804	                               or eax, 4	      2427	elf.c	FUNCTION_36	SWITCH_1
0x40067f4	            0x89c2	                            mov edx, eax	      2427	elf.c	FUNCTION_36	SWITCH_1
0x40067f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2427	elf.c	FUNCTION_36	SWITCH_1
0x40067fa	          0x895020	             mov dword [rax + 0x20], edx	      2427	elf.c	FUNCTION_36	SWITCH_1
0x40067fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2428	elf.c	FUNCTION_36	SWITCH_1
0x4006801	    0x48c740780000	               mov qword [rax + 0x78], 0	      2428	elf.c	FUNCTION_36	SWITCH_1
0x4006809	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2429	elf.c	FUNCTION_36	SWITCH_1
0x400680d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4006811	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4006815	    0x488990980000	             mov qword [rax + 0x98], rdx	      2429	elf.c	FUNCTION_36	SWITCH_1
0x400681c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4006820	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4006824	          0x4885c0	                           test rax, rax	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4006827	            0x741a	                            je 0x4006843	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4006829	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x400682d	          0x8b4004	                mov eax, dword [rax + 4]	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4006830	          0x83f804	                              cmp eax, 4	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4006833	            0x750e	                           jne 0x4006843	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4006835	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2435	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4006839	         0xfb65025	           movzx edx, byte [rax + 0x25] 	      2435	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x400683d	          0x83ca04	                               or edx, 4	      2435	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4006840	          0x885025	               mov byte [rax + 0x25], dl	      2435	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4006843	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2437	elf.c	FUNCTION_36	SWITCH_1
0x400684a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2437	elf.c	FUNCTION_36	SWITCH_1
0x400684d	          0xc1e805	                              shr eax, 5	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006850	      0x25ffff0f00	                        and eax, 0xfffff	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006855	          0x83c801	                               or eax, 1	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006858	            0x89c2	                            mov edx, eax	      2437	elf.c	FUNCTION_36	SWITCH_1
0x400685a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006861	    0x81e2ffff0f00	                        and edx, 0xfffff	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006867	            0x89d1	                            mov ecx, edx	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006869	          0xc1e105	                              shl ecx, 5	      2437	elf.c	FUNCTION_36	SWITCH_1
0x400686c	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2437	elf.c	FUNCTION_36	SWITCH_1
0x400686f	    0x81e21f0000fe	                     and edx, 0xfe00001f	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006875	             0x9ca	                             or edx, ecx	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4006877	          0x895044	             mov dword [rax + 0x44], edx	      2437	elf.c	FUNCTION_36	SWITCH_1
0x400687a	      0xe954050000	                           jmp 0x4006dd3	      2438	elf.c	FUNCTION_36	SWITCH_1
0x400687f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4006886	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x400688d	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4006893	    0x8990840c0000	            mov dword [rax + 0xc84], edx	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4006899	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068a0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068a7	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068ab	          0x488b0a	                    mov rcx, qword [rdx]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068ae	    0x488988980200	            mov qword [rax + 0x298], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068b5	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068b9	    0x488988a00200	            mov qword [rax + 0x2a0], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068c0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068c4	    0x488988a80200	            mov qword [rax + 0x2a8], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068cb	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068cf	    0x488988b00200	            mov qword [rax + 0x2b0], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068d6	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068da	    0x488988b80200	            mov qword [rax + 0x2b8], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068e1	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068e5	    0x488988c00200	            mov qword [rax + 0x2c0], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068ec	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068f0	    0x488988c80200	            mov qword [rax + 0x2c8], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068f7	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x40068fb	    0x488988d00200	            mov qword [rax + 0x2d0], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4006902	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4006906	    0x488988d80200	            mov qword [rax + 0x2d8], rcx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x400690d	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4006911	    0x488990e00200	            mov qword [rax + 0x2e0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4006918	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x400691e	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4006922	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4006926	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x400692d	          0x4889c7	                            mov rdi, rax	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4006930	      0xe800000000	                          call 0x4006935	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4006935	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x400693b	      0xe993040000	                           jmp 0x4006dd3	      2445	elf.c	FUNCTION_36	SWITCH_1
0x4006940	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x4006944	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x4006948	        0x4883f802	                              cmp rax, 2	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x400694c	     0xf8552040000	                           jne 0x4006da4	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x4006952	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x4006959	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x4006960	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x4006966	    0x8990800c0000	            mov dword [rax + 0xc80], edx	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x400696c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4006973	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400697a	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400697e	          0x488b0a	                    mov rcx, qword [rdx]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4006981	    0x488988f80100	            mov qword [rax + 0x1f8], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4006988	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400698c	    0x488988000200	            mov qword [rax + 0x200], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4006993	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4006997	    0x488988080200	            mov qword [rax + 0x208], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400699e	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069a2	    0x488988100200	            mov qword [rax + 0x210], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069a9	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069ad	    0x488988180200	            mov qword [rax + 0x218], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069b4	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069b8	    0x488988200200	            mov qword [rax + 0x220], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069bf	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069c3	    0x488988280200	            mov qword [rax + 0x228], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069ca	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069ce	    0x488988300200	            mov qword [rax + 0x230], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069d5	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069d9	    0x488988380200	            mov qword [rax + 0x238], rcx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069e0	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069e4	    0x488990400200	            mov qword [rax + 0x240], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40069eb	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x40069f1	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x40069f5	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x40069f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4006a00	          0x4889c7	                            mov rdi, rax	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4006a03	      0xe800000000	                          call 0x4006a08	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4006a08	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4006a0e	      0xe9c0030000	                           jmp 0x4006dd3	      2454	elf.c	FUNCTION_36	SWITCH_1
0x4006a13	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4006a1a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4006a21	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4006a27	    0x8990880c0000	            mov dword [rax + 0xc88], edx	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4006a2d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a34	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a3b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a3f	          0x488b0a	                    mov rcx, qword [rdx]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a42	    0x488988480200	            mov qword [rax + 0x248], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a49	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a4d	    0x488988500200	            mov qword [rax + 0x250], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a54	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a58	    0x488988580200	            mov qword [rax + 0x258], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a5f	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a63	    0x488988600200	            mov qword [rax + 0x260], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a6a	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a6e	    0x488988680200	            mov qword [rax + 0x268], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a75	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a79	    0x488988700200	            mov qword [rax + 0x270], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a80	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a84	    0x488988780200	            mov qword [rax + 0x278], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a8b	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a8f	    0x488988800200	            mov qword [rax + 0x280], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a96	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006a9a	    0x488988880200	            mov qword [rax + 0x288], rcx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006aa1	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006aa5	    0x488990900200	            mov qword [rax + 0x290], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4006aac	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4006ab2	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4006ab6	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4006aba	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4006ac1	          0x4889c7	                            mov rdi, rax	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4006ac4	      0xe800000000	                          call 0x4006ac9	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4006ac9	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4006acf	      0xe9ff020000	                           jmp 0x4006dd3	      2460	elf.c	FUNCTION_36	SWITCH_1
0x4006ad4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006ad8	          0x8b4004	                mov eax, dword [rax + 4]	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006adb	          0x83f811	                           cmp eax, 0x11	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006ade	     0xf85c4020000	                           jne 0x4006da8	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006ae4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006ae8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006aec	        0x4883f803	                              cmp rax, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006af0	     0xf86b2020000	                           jbe 0x4006da8	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006af6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006afa	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006afe	        0x4883f804	                              cmp rax, 4	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006b02	     0xf85a0020000	                           jne 0x4006da8	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006b08	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006b0c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006b10	          0x83e003	                              and eax, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006b13	          0x4885c0	                           test rax, rax	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006b16	     0xf858c020000	                           jne 0x4006da8	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4006b1c	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b22	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b26	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b2a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b31	          0x4889c7	                            mov rdi, rax	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b34	      0xe800000000	                          call 0x4006b39	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b39	            0x85c0	                           test eax, eax	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b3b	     0xf858e020000	                           jne 0x4006dcf	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4006b41	      0xe962020000	                           jmp 0x4006da8	      2470	elf.c	FUNCTION_36	SWITCH_1	IF_59
0x4006b46	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b4a	          0x8b4004	                mov eax, dword [rax + 4]	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b4d	      0x3df5ffff6f	                     cmp eax, 0x6ffffff5	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b52	            0x7415	                            je 0x4006b69	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b54	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b58	          0x8b5004	                mov edx, dword [rax + 4]	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b5b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b5f	    0x8b8038030000	           mov eax, dword [rax + 0x338] 	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b65	            0x39c2	                            cmp edx, eax	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b67	            0x7540	                           jne 0x4006ba9	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006b69	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b6f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b73	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b77	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b7e	          0x4889c7	                            mov rdi, rax	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b81	      0xe800000000	                          call 0x4006b86	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b86	            0x85c0	                           test eax, eax	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b88	     0xf8419020000	                            je 0x4006da7	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4006b8e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4006b92	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4006b99	          0x4889d6	                            mov rsi, rdx	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4006b9c	          0x4889c7	                            mov rdi, rax	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4006b9f	      0xe800000000	                          call 0x4006ba4	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4006ba4	      0xe92a020000	                           jmp 0x4006dd3	      2482	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4006ba9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bad	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bb4	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bba	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bbe	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bc2	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bc9	            0xffd0	                                call rax	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bcb	            0x85c0	                           test eax, eax	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bcd	     0xf85ff010000	                           jne 0x4006dd2	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4006bd3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4006bd7	          0x8b4004	                mov eax, dword [rax + 4]	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4006bda	            0x85c0	                           test eax, eax	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4006bdc	            0x7973	                           jns 0x4006c51	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4006bde	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4006be2	        0x488b4008	                mov rax, qword [rax + 8]	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4006be6	          0x83e002	                              and eax, 2	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4006be9	          0x4885c0	                           test rax, rax	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4006bec	            0x743b	                            je 0x4006c29	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4006bee	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006bf2	          0x8b5804	                mov ebx, dword [rax + 4]	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006bf5	      0xbe00000000	                              mov esi, 0	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4006bfa	      0xbf00000000	                              mov edi, 0	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4006bff	      0xe800000000	                          call 0x4006c04	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4006c04	          0x4889c7	                            mov rdi, rax	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4006c07	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006c0b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006c12	          0x4889d1	                            mov rcx, rdx	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006c15	            0x89da	                            mov edx, ebx	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006c17	          0x4889c6	                            mov rsi, rax	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006c1a	      0xb800000000	                              mov eax, 0	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006c1f	      0xe800000000	                          call 0x4006c24	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4006c24	      0xe97f010000	                           jmp 0x4006da8	      2538	elf.c	FUNCTION_36	SWITCH_1
0x4006c29	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4006c2f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4006c33	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4006c37	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4006c3e	          0x4889c7	                            mov rdi, rax	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4006c41	      0xe800000000	                          call 0x4006c46	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4006c46	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4006c4c	      0xe982010000	                           jmp 0x4006dd3	      2503	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5
0x4006c51	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c55	          0x8b4004	                mov eax, dword [rax + 4]	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c58	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c5d	            0x7646	                           jbe 0x4006ca5	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c5f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2507	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c63	          0x8b4004	                mov eax, dword [rax + 4]	      2507	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c66	            0x85c0	                           test eax, eax	      2507	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c68	            0x783b	                            js 0x4006ca5	      2507	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4006c6a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c6e	          0x8b5804	                mov ebx, dword [rax + 4]	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c71	      0xbe00000000	                              mov esi, 0	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4006c76	      0xbf00000000	                              mov edi, 0	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4006c7b	      0xe800000000	                          call 0x4006c80	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4006c80	          0x4889c7	                            mov rdi, rax	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4006c83	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c87	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c8e	          0x4889d1	                            mov rcx, rdx	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c91	            0x89da	                            mov edx, ebx	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c93	          0x4889c6	                            mov rsi, rax	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c96	      0xb800000000	                              mov eax, 0	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006c9b	      0xe800000000	                          call 0x4006ca0	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006ca0	      0xe9ca000000	                           jmp 0x4006d6f	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4006ca5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006ca9	          0x8b4004	                mov eax, dword [rax + 4]	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006cac	      0x3dffffff5f	                     cmp eax, 0x5fffffff	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006cb1	     0xf8680000000	                           jbe 0x4006d37	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006cb7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006cbb	          0x8b4004	                mov eax, dword [rax + 4]	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006cbe	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006cc3	            0x7772	                            ja 0x4006d37	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4006cc5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4006cc9	        0x488b4008	                mov rax, qword [rax + 8]	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4006ccd	      0x2500010000	                          and eax, 0x100	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4006cd2	          0x4885c0	                           test rax, rax	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4006cd5	            0x7438	                            je 0x4006d0f	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4006cd7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006cdb	          0x8b5804	                mov ebx, dword [rax + 4]	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006cde	      0xbe00000000	                              mov esi, 0	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4006ce3	      0xbf00000000	                              mov edi, 0	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4006ce8	      0xe800000000	                          call 0x4006ced	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4006ced	          0x4889c7	                            mov rdi, rax	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4006cf0	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006cf4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006cfb	          0x4889d1	                            mov rcx, rdx	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006cfe	            0x89da	                            mov edx, ebx	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006d00	          0x4889c6	                            mov rsi, rax	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006d03	      0xb800000000	                              mov eax, 0	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006d08	      0xe800000000	                          call 0x4006d0d	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4006d0d	            0xeb60	                           jmp 0x4006d6f	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4006d0f	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4006d15	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4006d19	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4006d1d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4006d24	          0x4889c7	                            mov rdi, rax	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4006d27	      0xe800000000	                          call 0x4006d2c	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4006d2c	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4006d32	      0xe99c000000	                           jmp 0x4006dd3	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x4006d37	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d3b	          0x8b5804	                mov ebx, dword [rax + 4]	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d3e	      0xbe00000000	                              mov esi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4006d43	      0xbf00000000	                              mov edi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4006d48	      0xe800000000	                          call 0x4006d4d	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4006d4d	          0x4889c7	                            mov rdi, rax	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4006d50	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d54	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d5b	          0x4889d1	                            mov rcx, rdx	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d5e	            0x89da	                            mov edx, ebx	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d60	          0x4889c6	                            mov rsi, rax	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d63	      0xb800000000	                              mov eax, 0	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d68	      0xe800000000	                          call 0x4006d6d	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4006d6d	            0xeb39	                           jmp 0x4006da8	      2538	elf.c	FUNCTION_36	SWITCH_1
0x4006d6f	            0xeb37	                           jmp 0x4006da8	      2538	elf.c	FUNCTION_36	SWITCH_1
0x4006d71	              0x90	                                     nop	      2043	elf.c	FUNCTION_36	IF_6
0x4006d72	            0xeb34	                           jmp 0x4006da8	      2043	elf.c	FUNCTION_36	IF_6
0x4006d74	              0x90	                                     nop	      2066	elf.c	FUNCTION_36	SWITCH_1	IF_7
0x4006d75	            0xeb31	                           jmp 0x4006da8	      2066	elf.c	FUNCTION_36	SWITCH_1	IF_7
0x4006d77	              0x90	                                     nop	      2085	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10
0x4006d78	            0xeb2e	                           jmp 0x4006da8	      2085	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10
0x4006d7a	              0x90	                                     nop	      2121	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4006d7b	            0xeb2b	                           jmp 0x4006da8	      2121	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4006d7d	              0x90	                                     nop	      2126	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x4006d7e	            0xeb28	                           jmp 0x4006da8	      2126	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x4006d80	              0x90	                                     nop	      2160	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4006d81	            0xeb25	                           jmp 0x4006da8	      2160	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4006d83	              0x90	                                     nop	      2204	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4006d84	            0xeb22	                           jmp 0x4006da8	      2204	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4006d86	              0x90	                                     nop	      2209	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4006d87	            0xeb1f	                           jmp 0x4006da8	      2209	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4006d89	              0x90	                                     nop	      2249	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4006d8a	            0xeb1c	                           jmp 0x4006da8	      2249	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4006d8c	              0x90	                                     nop	      2305	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x4006d8d	            0xeb19	                           jmp 0x4006da8	      2305	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x4006d8f	              0x90	                                     nop	      2307	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39
0x4006d90	            0xeb16	                           jmp 0x4006da8	      2307	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39
0x4006d92	              0x90	                                     nop	      2330	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006d93	            0xeb13	                           jmp 0x4006da8	      2330	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4006d95	              0x90	                                     nop	      2382	elf.c	FUNCTION_36	SWITCH_1	IF_48
0x4006d96	            0xeb10	                           jmp 0x4006da8	      2382	elf.c	FUNCTION_36	SWITCH_1	IF_48
0x4006d98	              0x90	                                     nop	      2404	elf.c	FUNCTION_36	SWITCH_1	IF_50
0x4006d99	            0xeb0d	                           jmp 0x4006da8	      2404	elf.c	FUNCTION_36	SWITCH_1	IF_50
0x4006d9b	              0x90	                                     nop	      2408	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4006d9c	            0xeb0a	                           jmp 0x4006da8	      2408	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4006d9e	              0x90	                                     nop	      2418	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4006d9f	            0xeb07	                           jmp 0x4006da8	      2418	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4006da1	              0x90	                                     nop	      2421	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4006da2	            0xeb04	                           jmp 0x4006da8	      2421	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4006da4	              0x90	                                     nop	      2449	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x4006da5	            0xeb01	                           jmp 0x4006da8	      2449	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x4006da7	              0x90	                                     nop	      2480	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61
0x4006da8	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2542	elf.c	FUNCTION_36
0x4006db2	            0xeb1f	                           jmp 0x4006dd3	      2542	elf.c	FUNCTION_36
0x4006db4	              0x90	                                     nop	      2463	elf.c	FUNCTION_36	SWITCH_1
0x4006db5	            0xeb1c	                           jmp 0x4006dd3	      2463	elf.c	FUNCTION_36	SWITCH_1
0x4006db7	              0x90	                                     nop	      2050	elf.c	FUNCTION_36	SWITCH_1
0x4006db8	            0xeb19	                           jmp 0x4006dd3	      2050	elf.c	FUNCTION_36	SWITCH_1
0x4006dba	              0x90	                                     nop	      2114	elf.c	FUNCTION_36	SWITCH_1
0x4006dbb	            0xeb16	                           jmp 0x4006dd3	      2114	elf.c	FUNCTION_36	SWITCH_1
0x4006dbd	              0x90	                                     nop	      2118	elf.c	FUNCTION_36	SWITCH_1	IF_14
0x4006dbe	            0xeb13	                           jmp 0x4006dd3	      2118	elf.c	FUNCTION_36	SWITCH_1	IF_14
0x4006dc0	              0x90	                                     nop	      2171	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4006dc1	            0xeb10	                           jmp 0x4006dd3	      2171	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4006dc3	              0x90	                                     nop	      2196	elf.c	FUNCTION_36	SWITCH_1
0x4006dc4	            0xeb0d	                           jmp 0x4006dd3	      2196	elf.c	FUNCTION_36	SWITCH_1
0x4006dc6	              0x90	                                     nop	      2201	elf.c	FUNCTION_36	SWITCH_1	IF_25
0x4006dc7	            0xeb0a	                           jmp 0x4006dd3	      2201	elf.c	FUNCTION_36	SWITCH_1	IF_25
0x4006dc9	              0x90	                                     nop	      2245	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4006dca	            0xeb07	                           jmp 0x4006dd3	      2245	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4006dcc	              0x90	                                     nop	      2260	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4006dcd	            0xeb04	                           jmp 0x4006dd3	      2260	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4006dcf	              0x90	                                     nop	      2472	elf.c	FUNCTION_36	SWITCH_1
0x4006dd0	            0xeb01	                           jmp 0x4006dd3	      2472	elf.c	FUNCTION_36	SWITCH_1
0x4006dd2	              0x90	                                     nop	      2487	elf.c	FUNCTION_36	SWITCH_1	IF_62
0x4006dd3	    0x488b05000000	            mov rax, qword [0x04006dda] 	      2544	elf.c	FUNCTION_36	IF_68
0x4006dda	          0x4885c0	                           test rax, rax	      2544	elf.c	FUNCTION_36	IF_68
0x4006ddd	            0x742a	                            je 0x4006e09	      2544	elf.c	FUNCTION_36	IF_68
0x4006ddf	    0x488b05000000	            mov rax, qword [0x04006de6] 	      2544	elf.c	FUNCTION_36	IF_68
0x4006de6	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      2544	elf.c	FUNCTION_36	IF_68
0x4006ded	            0x751a	                           jne 0x4006e09	      2544	elf.c	FUNCTION_36	IF_68
0x4006def	    0x488b05000000	            mov rax, qword [0x04006df6] 	      2545	elf.c	FUNCTION_36	IF_68
0x4006df6	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2545	elf.c	FUNCTION_36	IF_68
0x4006dfc	        0x48c1e202	                              shl rdx, 2	      2545	elf.c	FUNCTION_36	IF_68
0x4006e00	          0x4801d0	                            add rax, rdx	      2545	elf.c	FUNCTION_36	IF_68
0x4006e03	    0xc70000000000	                      mov dword [rax], 0	      2545	elf.c	FUNCTION_36	IF_68
0x4006e09	    0x8b0500000000	            mov eax, dword [0x04006e0f] 	      2546	elf.c	FUNCTION_36	IF_69
0x4006e0f	          0x83e801	                              sub eax, 1	      2546	elf.c	FUNCTION_36	IF_69
0x4006e12	    0x890500000000	            mov dword [0x04006e18], eax 	      2546	elf.c	FUNCTION_36	IF_69
0x4006e18	    0x8b0500000000	            mov eax, dword [0x04006e1e] 	      2546	elf.c	FUNCTION_36	IF_69
0x4006e1e	            0x85c0	                           test eax, eax	      2546	elf.c	FUNCTION_36	IF_69
0x4006e20	            0x7519	                           jne 0x4006e3b	      2546	elf.c	FUNCTION_36	IF_69
0x4006e22	    0x48c705000000	               mov qword [0x04006e2d], 0	      2548	elf.c	FUNCTION_36	IF_69
0x4006e2d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2549	elf.c	FUNCTION_36	IF_69
0x4006e34	    0x488905000000	            mov qword [0x04006e3b], rax 	      2549	elf.c	FUNCTION_36	IF_69
0x4006e3b	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2551	elf.c	FUNCTION_36
0x4006e41	    0x4881c4b80000	                           add rsp, 0xb8	      2552	elf.c	FUNCTION_36
0x4006e48	              0x5b	                                 pop rbx	      2552	elf.c	FUNCTION_36
0x4006e49	              0x5d	                                 pop rbp	      2552	elf.c	FUNCTION_36
0x4006e4a	              0xc3	                                     ret	      2552	elf.c	FUNCTION_36
_bfd_elf_swap_verneed_out	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	60
0x4000b02	              0x55	                                push rbp	       138	elf.c	FUNCTION_6
0x4000b03	          0x4889e5	                            mov rbp, rsp	       138	elf.c	FUNCTION_6
0x4000b06	        0x4883ec20	                           sub rsp, 0x20	       138	elf.c	FUNCTION_6
0x4000b0a	        0x48897df8	                mov qword [rbp - 8], rdi	       138	elf.c	FUNCTION_6
0x4000b0e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       138	elf.c	FUNCTION_6
0x4000b12	        0x488955e8	             mov qword [rbp - 0x18], rdx	       138	elf.c	FUNCTION_6
0x4000b16	        0x488b45f8	                mov rax, qword [rbp - 8]	       139	elf.c	FUNCTION_6
0x4000b1a	        0x488b4008	                mov rax, qword [rax + 8]	       139	elf.c	FUNCTION_6
0x4000b1e	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       139	elf.c	FUNCTION_6
0x4000b25	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       139	elf.c	FUNCTION_6
0x4000b29	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       139	elf.c	FUNCTION_6
0x4000b2d	           0xfb712	                   movzx edx, word [rdx]	       139	elf.c	FUNCTION_6
0x4000b30	           0xfb7d2	                           movzx edx, dx	       139	elf.c	FUNCTION_6
0x4000b33	          0x4889ce	                            mov rsi, rcx	       139	elf.c	FUNCTION_6
0x4000b36	          0x4889d7	                            mov rdi, rdx	       139	elf.c	FUNCTION_6
0x4000b39	            0xffd0	                                call rax	       139	elf.c	FUNCTION_6
0x4000b3b	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	elf.c	FUNCTION_6
0x4000b3f	        0x488b4008	                mov rax, qword [rax + 8]	       140	elf.c	FUNCTION_6
0x4000b43	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       140	elf.c	FUNCTION_6
0x4000b4a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       140	elf.c	FUNCTION_6
0x4000b4e	        0x488d4a02	                      lea rcx, [rdx + 2]	       140	elf.c	FUNCTION_6
0x4000b52	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       140	elf.c	FUNCTION_6
0x4000b56	         0xfb75202	               movzx edx, word [rdx + 2]	       140	elf.c	FUNCTION_6
0x4000b5a	           0xfb7d2	                           movzx edx, dx	       140	elf.c	FUNCTION_6
0x4000b5d	          0x4889ce	                            mov rsi, rcx	       140	elf.c	FUNCTION_6
0x4000b60	          0x4889d7	                            mov rdi, rdx	       140	elf.c	FUNCTION_6
0x4000b63	            0xffd0	                                call rax	       140	elf.c	FUNCTION_6
0x4000b65	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	elf.c	FUNCTION_6
0x4000b69	        0x488b4008	                mov rax, qword [rax + 8]	       141	elf.c	FUNCTION_6
0x4000b6d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       141	elf.c	FUNCTION_6
0x4000b74	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       141	elf.c	FUNCTION_6
0x4000b78	        0x488d4a04	                      lea rcx, [rdx + 4]	       141	elf.c	FUNCTION_6
0x4000b7c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       141	elf.c	FUNCTION_6
0x4000b80	        0x488b5208	                mov rdx, qword [rdx + 8]	       141	elf.c	FUNCTION_6
0x4000b84	          0x4889ce	                            mov rsi, rcx	       141	elf.c	FUNCTION_6
0x4000b87	          0x4889d7	                            mov rdi, rdx	       141	elf.c	FUNCTION_6
0x4000b8a	            0xffd0	                                call rax	       141	elf.c	FUNCTION_6
0x4000b8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	elf.c	FUNCTION_6
0x4000b90	        0x488b4008	                mov rax, qword [rax + 8]	       142	elf.c	FUNCTION_6
0x4000b94	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       142	elf.c	FUNCTION_6
0x4000b9b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       142	elf.c	FUNCTION_6
0x4000b9f	        0x488d4a08	                      lea rcx, [rdx + 8]	       142	elf.c	FUNCTION_6
0x4000ba3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       142	elf.c	FUNCTION_6
0x4000ba7	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       142	elf.c	FUNCTION_6
0x4000bab	          0x4889ce	                            mov rsi, rcx	       142	elf.c	FUNCTION_6
0x4000bae	          0x4889d7	                            mov rdi, rdx	       142	elf.c	FUNCTION_6
0x4000bb1	            0xffd0	                                call rax	       142	elf.c	FUNCTION_6
0x4000bb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	elf.c	FUNCTION_6
0x4000bb7	        0x488b4008	                mov rax, qword [rax + 8]	       143	elf.c	FUNCTION_6
0x4000bbb	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       143	elf.c	FUNCTION_6
0x4000bc2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       143	elf.c	FUNCTION_6
0x4000bc6	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       143	elf.c	FUNCTION_6
0x4000bca	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       143	elf.c	FUNCTION_6
0x4000bce	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       143	elf.c	FUNCTION_6
0x4000bd2	          0x4889ce	                            mov rsi, rcx	       143	elf.c	FUNCTION_6
0x4000bd5	          0x4889d7	                            mov rdi, rdx	       143	elf.c	FUNCTION_6
0x4000bd8	            0xffd0	                                call rax	       143	elf.c	FUNCTION_6
0x4000bda	              0x90	                                     nop	       144	elf.c	FUNCTION_6
0x4000bdb	              0xc9	                                   leave	       144	elf.c	FUNCTION_6
0x4000bdc	              0xc3	                                     ret	       144	elf.c	FUNCTION_6
bfd_elf_gnu_hash	ELSE,0:DO,0:CALL,0:WHILE,1:FOR,0:IF,0:SWITCH,0:functions,0	26
0x4000e7b	              0x55	                                push rbp	       224	elf.c	FUNCTION_12
0x4000e7c	          0x4889e5	                            mov rbp, rsp	       224	elf.c	FUNCTION_12
0x4000e7f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       224	elf.c	FUNCTION_12
0x4000e83	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	elf.c	FUNCTION_12
0x4000e87	        0x488945f0	             mov qword [rbp - 0x10], rax	       225	elf.c	FUNCTION_12
0x4000e8b	    0x48c745f80515	             mov qword [rbp - 8], 0x1505	       226	elf.c	FUNCTION_12
0x4000e93	            0xeb1d	                           jmp 0x4000eb2	       229	elf.c	FUNCTION_12	WHILE_1
0x4000e95	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	elf.c	FUNCTION_12	WHILE_1
0x4000e99	        0x48c1e005	                              shl rax, 5	       230	elf.c	FUNCTION_12	WHILE_1
0x4000e9d	          0x4889c2	                            mov rdx, rax	       230	elf.c	FUNCTION_12	WHILE_1
0x4000ea0	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	elf.c	FUNCTION_12	WHILE_1
0x4000ea4	          0x4801c2	                            add rdx, rax	       230	elf.c	FUNCTION_12	WHILE_1
0x4000ea7	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	       230	elf.c	FUNCTION_12	WHILE_1
0x4000eab	          0x4801d0	                            add rax, rdx	       230	elf.c	FUNCTION_12	WHILE_1
0x4000eae	        0x488945f8	                mov qword [rbp - 8], rax	       230	elf.c	FUNCTION_12	WHILE_1
0x4000eb2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       229	elf.c	FUNCTION_12	WHILE_1
0x4000eb6	        0x488d5001	                      lea rdx, [rax + 1]	       229	elf.c	FUNCTION_12	WHILE_1
0x4000eba	        0x488955f0	             mov qword [rbp - 0x10], rdx	       229	elf.c	FUNCTION_12	WHILE_1
0x4000ebe	           0xfb600	                   movzx eax, byte [rax]	       229	elf.c	FUNCTION_12	WHILE_1
0x4000ec1	          0x8845ef	               mov byte [rbp - 0x11], al	       229	elf.c	FUNCTION_12	WHILE_1
0x4000ec4	        0x807def00	                cmp byte [rbp - 0x11], 0	       229	elf.c	FUNCTION_12	WHILE_1
0x4000ec8	            0x75cb	                           jne 0x4000e95	       229	elf.c	FUNCTION_12	WHILE_1
0x4000eca	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	elf.c	FUNCTION_12
0x4000ece	            0x89c0	                            mov eax, eax	       231	elf.c	FUNCTION_12
0x4000ed0	              0x5d	                                 pop rbp	       232	elf.c	FUNCTION_12
0x4000ed1	              0xc3	                                     ret	       232	elf.c	FUNCTION_12
elfcore_grok_openbsd_procinfo	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	53
0x4018a09	              0x55	                                push rbp	     10239	elf.c	FUNCTION_155
0x4018a0a	          0x4889e5	                            mov rbp, rsp	     10239	elf.c	FUNCTION_155
0x4018a0d	              0x53	                                push rbx	     10239	elf.c	FUNCTION_155
0x4018a0e	        0x4883ec18	                           sub rsp, 0x18	     10239	elf.c	FUNCTION_155
0x4018a12	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10239	elf.c	FUNCTION_155
0x4018a16	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10239	elf.c	FUNCTION_155
0x4018a1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10240	elf.c	FUNCTION_155	IF_1
0x4018a1e	        0x488b4008	                mov rax, qword [rax + 8]	     10240	elf.c	FUNCTION_155	IF_1
0x4018a22	        0x4883f867	                           cmp rax, 0x67	     10240	elf.c	FUNCTION_155	IF_1
0x4018a26	            0x770a	                            ja 0x4018a32	     10240	elf.c	FUNCTION_155	IF_1
0x4018a28	      0xb800000000	                              mov eax, 0	     10241	elf.c	FUNCTION_155	IF_1
0x4018a2d	      0xe9a4000000	                           jmp 0x4018ad6	     10241	elf.c	FUNCTION_155	IF_1
0x4018a32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10244	elf.c	FUNCTION_155	CALL_1
0x4018a36	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10244	elf.c	FUNCTION_155	CALL_1
0x4018a3d	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10244	elf.c	FUNCTION_155	CALL_1
0x4018a44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10245	elf.c	FUNCTION_155
0x4018a48	        0x488b4008	                mov rax, qword [rax + 8]	     10245	elf.c	FUNCTION_155
0x4018a4c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10245	elf.c	FUNCTION_155
0x4018a53	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10245	elf.c	FUNCTION_155
0x4018a57	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	     10245	elf.c	FUNCTION_155
0x4018a5b	        0x4883c208	                              add rdx, 8	     10245	elf.c	FUNCTION_155
0x4018a5f	          0x4889d7	                            mov rdi, rdx	     10245	elf.c	FUNCTION_155
0x4018a62	            0xffd0	                                call rax	     10245	elf.c	FUNCTION_155
0x4018a64	            0x8903	                    mov dword [rbx], eax	     10245	elf.c	FUNCTION_155
0x4018a66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10248	elf.c	FUNCTION_155	CALL_2
0x4018a6a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10248	elf.c	FUNCTION_155	CALL_2
0x4018a71	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10248	elf.c	FUNCTION_155	CALL_2
0x4018a78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10249	elf.c	FUNCTION_155
0x4018a7c	        0x488b4008	                mov rax, qword [rax + 8]	     10249	elf.c	FUNCTION_155
0x4018a80	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10249	elf.c	FUNCTION_155
0x4018a87	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10249	elf.c	FUNCTION_155
0x4018a8b	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	     10249	elf.c	FUNCTION_155
0x4018a8f	        0x4883c220	                           add rdx, 0x20	     10249	elf.c	FUNCTION_155
0x4018a93	          0x4889d7	                            mov rdi, rdx	     10249	elf.c	FUNCTION_155
0x4018a96	            0xffd0	                                call rax	     10249	elf.c	FUNCTION_155
0x4018a98	          0x894304	                mov dword [rbx + 4], eax	     10249	elf.c	FUNCTION_155
0x4018a9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10252	elf.c	FUNCTION_155	CALL_3
0x4018a9f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10252	elf.c	FUNCTION_155	CALL_3
0x4018aa6	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10252	elf.c	FUNCTION_155	CALL_3
0x4018aad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10253	elf.c	FUNCTION_155	CALL_4
0x4018ab1	        0x488b4020	            mov rax, qword [rax + 0x20] 	     10253	elf.c	FUNCTION_155	CALL_4
0x4018ab5	        0x488d4848	                   lea rcx, [rax + 0x48]	     10253	elf.c	FUNCTION_155	CALL_4
0x4018ab9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10253	elf.c	FUNCTION_155	CALL_4
0x4018abd	      0xba1f000000	                           mov edx, 0x1f	     10253	elf.c	FUNCTION_155	CALL_4
0x4018ac2	          0x4889ce	                            mov rsi, rcx	     10253	elf.c	FUNCTION_155	CALL_4
0x4018ac5	          0x4889c7	                            mov rdi, rax	     10253	elf.c	FUNCTION_155	CALL_4
0x4018ac8	      0xe800000000	                          call 0x4018acd	     10253	elf.c	FUNCTION_155	CALL_4
0x4018acd	        0x48894318	             mov qword [rbx + 0x18], rax	     10253	elf.c	FUNCTION_155	CALL_4
0x4018ad1	      0xb801000000	                              mov eax, 1	     10255	elf.c	FUNCTION_155
0x4018ad6	        0x4883c418	                           add rsp, 0x18	     10256	elf.c	FUNCTION_155
0x4018ada	              0x5b	                                 pop rbx	     10256	elf.c	FUNCTION_155
0x4018adb	              0x5d	                                 pop rbp	     10256	elf.c	FUNCTION_155
0x4018adc	              0xc3	                                     ret	     10256	elf.c	FUNCTION_155
elfobj_grok_stapsdt_note	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,1:functions,0	18
0x40180fb	              0x55	                                push rbp	      9925	elf.c	FUNCTION_148
0x40180fc	          0x4889e5	                            mov rbp, rsp	      9925	elf.c	FUNCTION_148
0x40180ff	        0x4883ec10	                           sub rsp, 0x10	      9925	elf.c	FUNCTION_148
0x4018103	        0x48897df8	                mov qword [rbp - 8], rdi	      9925	elf.c	FUNCTION_148
0x4018107	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9925	elf.c	FUNCTION_148
0x401810b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9926	elf.c	FUNCTION_148	SWITCH_1
0x401810f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9926	elf.c	FUNCTION_148	SWITCH_1
0x4018113	        0x4883f803	                              cmp rax, 3	      9926	elf.c	FUNCTION_148	SWITCH_1
0x4018117	            0x7515	                           jne 0x401812e	      9926	elf.c	FUNCTION_148	SWITCH_1
0x4018119	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9929	elf.c	FUNCTION_148	SWITCH_1	CALL_1
0x401811d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9929	elf.c	FUNCTION_148	SWITCH_1	CALL_1
0x4018121	          0x4889d6	                            mov rsi, rdx	      9929	elf.c	FUNCTION_148	SWITCH_1	CALL_1
0x4018124	          0x4889c7	                            mov rdi, rax	      9929	elf.c	FUNCTION_148	SWITCH_1	CALL_1
0x4018127	      0xe837ffffff	     call sym.elfobj_grok_stapsdt_note_1	      9929	elf.c	FUNCTION_148	SWITCH_1	CALL_1
0x401812c	            0xeb05	                           jmp 0x4018133	      9929	elf.c	FUNCTION_148	SWITCH_1	CALL_1
0x401812e	      0xb801000000	                              mov eax, 1	      9932	elf.c	FUNCTION_148	SWITCH_1
0x4018133	              0xc9	                                   leave	      9934	elf.c	FUNCTION_148
0x4018134	              0xc3	                                     ret	      9934	elf.c	FUNCTION_148
_bfd_elf_init_private_section_data	ELSE,0:DO,0:CALL,25:WHILE,0:FOR,0:IF,7:SWITCH,0:functions,0	189
0x40132a5	              0x55	                                push rbp	      7492	elf.c	FUNCTION_83
0x40132a6	          0x4889e5	                            mov rbp, rsp	      7492	elf.c	FUNCTION_83
0x40132a9	        0x4883ec50	                           sub rsp, 0x50	      7492	elf.c	FUNCTION_83
0x40132ad	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7492	elf.c	FUNCTION_83
0x40132b1	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7492	elf.c	FUNCTION_83
0x40132b5	        0x488955c8	             mov qword [rbp - 0x38], rdx	      7492	elf.c	FUNCTION_83
0x40132b9	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      7492	elf.c	FUNCTION_83
0x40132bd	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      7492	elf.c	FUNCTION_83
0x40132c1	      0x48837db800	               cmp qword [rbp - 0x48], 0	      7495	elf.c	FUNCTION_83	CALL_1
0x40132c6	            0x7415	                            je 0x40132dd	      7495	elf.c	FUNCTION_83	CALL_1
0x40132c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7495	elf.c	FUNCTION_83	CALL_1
0x40132cc	           0xfb600	                   movzx eax, byte [rax]	      7495	elf.c	FUNCTION_83	CALL_1
0x40132cf	          0x83e003	                              and eax, 3	      7495	elf.c	FUNCTION_83	CALL_1
0x40132d2	            0x3c02	                               cmp al, 2	      7495	elf.c	FUNCTION_83	CALL_1
0x40132d4	            0x7407	                            je 0x40132dd	      7495	elf.c	FUNCTION_83	CALL_1
0x40132d6	      0xb801000000	                              mov eax, 1	      7495	elf.c	FUNCTION_83	CALL_1
0x40132db	            0xeb05	                           jmp 0x40132e2	      7495	elf.c	FUNCTION_83	CALL_1
0x40132dd	      0xb800000000	                              mov eax, 0	      7495	elf.c	FUNCTION_83	CALL_1
0x40132e2	          0x8945ec	             mov dword [rbp - 0x14], eax	      7494	elf.c	FUNCTION_83
0x40132e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7497	elf.c	FUNCTION_83	IF_1
0x40132e9	        0x488b4008	                mov rax, qword [rax + 8]	      7497	elf.c	FUNCTION_83	IF_1
0x40132ed	          0x8b4008	                mov eax, dword [rax + 8]	      7497	elf.c	FUNCTION_83	IF_1
0x40132f0	          0x83f805	                              cmp eax, 5	      7497	elf.c	FUNCTION_83	IF_1
0x40132f3	            0x7510	                           jne 0x4013305	      7497	elf.c	FUNCTION_83	IF_1
0x40132f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7498	elf.c	FUNCTION_83	IF_1
0x40132f9	        0x488b4008	                mov rax, qword [rax + 8]	      7498	elf.c	FUNCTION_83	IF_1
0x40132fd	          0x8b4008	                mov eax, dword [rax + 8]	      7498	elf.c	FUNCTION_83	IF_1
0x4013300	          0x83f805	                              cmp eax, 5	      7498	elf.c	FUNCTION_83	IF_1
0x4013303	            0x740a	                            je 0x401330f	      7498	elf.c	FUNCTION_83	IF_1
0x4013305	      0xb801000000	                              mov eax, 1	      7499	elf.c	FUNCTION_83	IF_1
0x401330a	      0xe9a8020000	                           jmp 0x40135b7	      7499	elf.c	FUNCTION_83	IF_1
0x401330f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7501	elf.c	FUNCTION_83	CALL_3
0x4013313	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7501	elf.c	FUNCTION_83	CALL_3
0x401331a	          0x4885c0	                           test rax, rax	      7501	elf.c	FUNCTION_83	CALL_3
0x401331d	            0x750f	                           jne 0x401332e	      7501	elf.c	FUNCTION_83	CALL_3
0x401331f	      0xbe4d1d0000	                         mov esi, 0x1d4d	      7501	elf.c	FUNCTION_83	CALL_3
0x4013324	      0xbf00000000	                              mov edi, 0	      7501	elf.c	FUNCTION_83	CALL_3
0x4013329	      0xe800000000	                          call 0x401332e	      7501	elf.c	FUNCTION_83	CALL_3
0x401332e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x4013332	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x4013339	          0x8b4004	                mov eax, dword [rax + 4]	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x401333c	            0x85c0	                           test eax, eax	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x401333e	            0x754d	                           jne 0x401338d	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x4013340	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7508	elf.c	FUNCTION_83	IF_2
0x4013344	          0x8b5020	            mov edx, dword [rax + 0x20] 	      7508	elf.c	FUNCTION_83	IF_2
0x4013347	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7508	elf.c	FUNCTION_83	IF_2
0x401334b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7508	elf.c	FUNCTION_83	IF_2
0x401334e	            0x39c2	                            cmp edx, eax	      7508	elf.c	FUNCTION_83	IF_2
0x4013350	            0x741f	                            je 0x4013371	      7508	elf.c	FUNCTION_83	IF_2
0x4013352	        0x837dec00	               cmp dword [rbp - 0x14], 0	      7509	elf.c	FUNCTION_83	IF_2
0x4013356	            0x7435	                            je 0x401338d	      7509	elf.c	FUNCTION_83	IF_2
0x4013358	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7510	elf.c	FUNCTION_83	IF_2
0x401335c	          0x8b5020	            mov edx, dword [rax + 0x20] 	      7510	elf.c	FUNCTION_83	IF_2
0x401335f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7510	elf.c	FUNCTION_83	IF_2
0x4013363	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7510	elf.c	FUNCTION_83	IF_2
0x4013366	            0x31d0	                            xor eax, edx	      7510	elf.c	FUNCTION_83	IF_2
0x4013368	      0x25fbfff1ff	                     and eax, 0xfff1fffb	      7511	elf.c	FUNCTION_83	IF_2
0x401336d	            0x85c0	                           test eax, eax	      7510	elf.c	FUNCTION_83	IF_2
0x401336f	            0x751c	                           jne 0x401338d	      7510	elf.c	FUNCTION_83	IF_2
0x4013371	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7512	elf.c	FUNCTION_83	CALL_6
0x4013375	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7512	elf.c	FUNCTION_83	CALL_6
0x401337c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7512	elf.c	FUNCTION_83	CALL_6
0x4013380	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7512	elf.c	FUNCTION_83	CALL_6
0x4013387	          0x8b5204	                mov edx, dword [rdx + 4]	      7512	elf.c	FUNCTION_83	CALL_6
0x401338a	          0x895004	                mov dword [rax + 4], edx	      7512	elf.c	FUNCTION_83	CALL_6
0x401338d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7515	elf.c	FUNCTION_83	CALL_8
0x4013391	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7515	elf.c	FUNCTION_83	CALL_8
0x4013398	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7515	elf.c	FUNCTION_83	CALL_8
0x401339c	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7515	elf.c	FUNCTION_83	CALL_8
0x40133a3	        0x488b4a08	                mov rcx, qword [rdx + 8]	      7515	elf.c	FUNCTION_83	CALL_8
0x40133a7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7515	elf.c	FUNCTION_83	CALL_8
0x40133ab	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7515	elf.c	FUNCTION_83	CALL_8
0x40133b2	        0x488b5208	                mov rdx, qword [rdx + 8]	      7515	elf.c	FUNCTION_83	CALL_8
0x40133b6	    0x81e20000f0ff	                     and edx, 0xfff00000	      7516	elf.c	FUNCTION_83
0x40133bc	          0x4809ca	                             or rdx, rcx	      7515	elf.c	FUNCTION_83	CALL_8
0x40133bf	        0x48895008	                mov qword [rax + 8], rdx	      7515	elf.c	FUNCTION_83	CALL_8
0x40133c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x40133c7	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x40133ce	        0x488b4008	                mov rax, qword [rax + 8]	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x40133d2	      0x2500000001	                      and eax, 0x1000000	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x40133d7	          0x4885c0	                           test rax, rax	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x40133da	            0x741c	                            je 0x40133f8	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x40133dc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7520	elf.c	FUNCTION_83	IF_3	CALL_10
0x40133e0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7520	elf.c	FUNCTION_83	IF_3	CALL_10
0x40133e7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7521	elf.c	FUNCTION_83	CALL_11
0x40133eb	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7521	elf.c	FUNCTION_83	CALL_11
0x40133f2	          0x8b522c	            mov edx, dword [rdx + 0x2c] 	      7521	elf.c	FUNCTION_83	CALL_11
0x40133f5	          0x89502c	             mov dword [rax + 0x2c], edx	      7521	elf.c	FUNCTION_83	CALL_11
0x40133f8	      0x48837db800	               cmp qword [rbp - 0x48], 0	      7527	elf.c	FUNCTION_83	IF_4
0x40133fd	            0x7413	                            je 0x4013412	      7527	elf.c	FUNCTION_83	IF_4
0x40133ff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7528	elf.c	FUNCTION_83	IF_4
0x4013403	         0xfb64001	               movzx eax, byte [rax + 1]	      7528	elf.c	FUNCTION_83	IF_4
0x4013407	          0x83e010	                           and eax, 0x10	      7528	elf.c	FUNCTION_83	IF_4
0x401340a	            0x84c0	                             test al, al	      7528	elf.c	FUNCTION_83	IF_4
0x401340c	     0xf85bb000000	                           jne 0x40134cd	      7528	elf.c	FUNCTION_83	IF_4
0x4013412	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4013416	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x401341d	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4013424	          0x4885c0	                           test rax, rax	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4013427	            0x7422	                            je 0x401344b	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4013429	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x401342d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x4013434	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x401343b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x401343e	      0x2500001000	                       and eax, 0x100000	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x4013443	            0x85c0	                           test eax, eax	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x4013445	     0xf8582000000	                           jne 0x40134cd	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x401344b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x401344f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x4013456	        0x488b4008	                mov rax, qword [rax + 8]	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x401345a	      0x2500020000	                          and eax, 0x200	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x401345f	          0x4885c0	                           test rax, rax	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x4013462	            0x7421	                            je 0x4013485	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x4013464	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x4013468	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x401346f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x4013473	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x401347a	        0x488b5208	                mov rdx, qword [rdx + 8]	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x401347e	          0x80ce02	                                or dh, 2	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x4013481	        0x48895008	                mov qword [rax + 8], rdx	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x4013485	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x4013489	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x4013490	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x4013494	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x401349b	    0x488b92c00000	            mov rdx, qword [rdx + 0xc0] 	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x40134a2	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x40134a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x40134ad	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x40134b4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x40134b8	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x40134bf	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x40134c6	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x40134cd	        0x837dec00	               cmp dword [rbp - 0x14], 0	      7539	elf.c	FUNCTION_83	IF_6
0x40134d1	            0x754e	                           jne 0x4013521	      7539	elf.c	FUNCTION_83	IF_6
0x40134d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7539	elf.c	FUNCTION_83	IF_6
0x40134d7	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7539	elf.c	FUNCTION_83	IF_6
0x40134da	          0xc1e805	                              shr eax, 5	      7539	elf.c	FUNCTION_83	IF_6
0x40134dd	      0x25ffff0f00	                        and eax, 0xfffff	      7539	elf.c	FUNCTION_83	IF_6
0x40134e2	      0x2500800000	                         and eax, 0x8000	      7539	elf.c	FUNCTION_83	IF_6
0x40134e7	            0x85c0	                           test eax, eax	      7539	elf.c	FUNCTION_83	IF_6
0x40134e9	            0x7536	                           jne 0x4013521	      7539	elf.c	FUNCTION_83	IF_6
0x40134eb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x40134ef	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x40134f6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x40134fa	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4013501	        0x488b4a08	                mov rcx, qword [rdx + 8]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4013505	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4013509	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4013510	        0x488b5208	                mov rdx, qword [rdx + 8]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4013514	    0x81e200080000	                          and edx, 0x800	      7541	elf.c	FUNCTION_83	IF_6
0x401351a	          0x4809ca	                             or rdx, rcx	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x401351d	        0x48895008	                mov qword [rax + 8], rdx	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4013521	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7543	elf.c	FUNCTION_83	CALL_22
0x4013525	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7543	elf.c	FUNCTION_83	CALL_22
0x401352c	        0x488945f0	             mov qword [rbp - 0x10], rax	      7543	elf.c	FUNCTION_83	CALL_22
0x4013530	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7548	elf.c	FUNCTION_83	IF_7
0x4013534	        0x488b4008	                mov rax, qword [rax + 8]	      7548	elf.c	FUNCTION_83	IF_7
0x4013538	      0x2580000000	                           and eax, 0x80	      7548	elf.c	FUNCTION_83	IF_7
0x401353d	          0x4885c0	                           test rax, rax	      7548	elf.c	FUNCTION_83	IF_7
0x4013540	            0x7448	                            je 0x401358a	      7548	elf.c	FUNCTION_83	IF_7
0x4013542	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7550	elf.c	FUNCTION_83	IF_7	CALL_23
0x4013546	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7550	elf.c	FUNCTION_83	IF_7	CALL_23
0x401354d	        0x488945f8	                mov qword [rbp - 8], rax	      7550	elf.c	FUNCTION_83	IF_7	CALL_23
0x4013551	        0x488b45f8	                mov rax, qword [rbp - 8]	      7551	elf.c	FUNCTION_83	IF_7
0x4013555	        0x488b4008	                mov rax, qword [rax + 8]	      7551	elf.c	FUNCTION_83	IF_7
0x4013559	             0xc80	                             or al, 0x80	      7551	elf.c	FUNCTION_83	IF_7
0x401355b	          0x4889c2	                            mov rdx, rax	      7551	elf.c	FUNCTION_83	IF_7
0x401355e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7551	elf.c	FUNCTION_83	IF_7
0x4013562	        0x48895008	                mov qword [rax + 8], rdx	      7551	elf.c	FUNCTION_83	IF_7
0x4013566	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x401356a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x4013571	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x4013575	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x401357c	    0x488b92900000	            mov rdx, qword [rdx + 0x90] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x4013583	    0x488990900000	             mov qword [rax + 0x90], rdx	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x401358a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7555	elf.c	FUNCTION_83
0x401358e	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      7555	elf.c	FUNCTION_83
0x4013592	          0xc0e802	                               shr al, 2	      7555	elf.c	FUNCTION_83
0x4013595	          0x83e001	                              and eax, 1	      7555	elf.c	FUNCTION_83
0x4013598	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7555	elf.c	FUNCTION_83
0x401359c	          0x83e001	                              and eax, 1	      7555	elf.c	FUNCTION_83
0x401359f	    0x8d0c85000000	                        lea ecx, [rax*4]	      7555	elf.c	FUNCTION_83
0x40135a6	         0xfb64225	           movzx eax, byte [rdx + 0x25] 	      7555	elf.c	FUNCTION_83
0x40135aa	          0x83e0fb	                     and eax, 0xfffffffb	      7555	elf.c	FUNCTION_83
0x40135ad	             0x9c8	                             or eax, ecx	      7555	elf.c	FUNCTION_83
0x40135af	          0x884225	               mov byte [rdx + 0x25], al	      7555	elf.c	FUNCTION_83
0x40135b2	      0xb801000000	                              mov eax, 1	      7557	elf.c	FUNCTION_83
0x40135b7	              0xc9	                                   leave	      7558	elf.c	FUNCTION_83
0x40135b8	              0xc3	                                     ret	      7558	elf.c	FUNCTION_83
_bfd_elf_canonicalize_reloc	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,1:IF,1:SWITCH,0:functions,0	47
0x4014b2c	              0x55	                                push rbp	      8161	elf.c	FUNCTION_92
0x4014b2d	          0x4889e5	                            mov rbp, rsp	      8161	elf.c	FUNCTION_92
0x4014b30	        0x4883ec40	                           sub rsp, 0x40	      8161	elf.c	FUNCTION_92
0x4014b34	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8161	elf.c	FUNCTION_92
0x4014b38	        0x488975d0	             mov qword [rbp - 0x30], rsi	      8161	elf.c	FUNCTION_92
0x4014b3c	        0x488955c8	             mov qword [rbp - 0x38], rdx	      8161	elf.c	FUNCTION_92
0x4014b40	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      8161	elf.c	FUNCTION_92
0x4014b44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8164	elf.c	FUNCTION_92	CALL_1
0x4014b48	        0x488b4008	                mov rax, qword [rax + 8]	      8164	elf.c	FUNCTION_92	CALL_1
0x4014b4c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8164	elf.c	FUNCTION_92	CALL_1
0x4014b53	        0x488945f8	                mov qword [rbp - 8], rax	      8164	elf.c	FUNCTION_92	CALL_1
0x4014b57	        0x488b45f8	                mov rax, qword [rbp - 8]	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b5b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b62	        0x488b4040	            mov rax, qword [rax + 0x40] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b66	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b6a	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b6e	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b72	      0xb900000000	                              mov ecx, 0	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b77	            0xffd0	                                call rax	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b79	            0x85c0	                           test eax, eax	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b7b	            0x7509	                           jne 0x4014b86	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x4014b7d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8167	elf.c	FUNCTION_92	IF_1
0x4014b84	            0xeb5a	                           jmp 0x4014be0	      8167	elf.c	FUNCTION_92	IF_1
0x4014b86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8169	elf.c	FUNCTION_92
0x4014b8a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8169	elf.c	FUNCTION_92
0x4014b8e	        0x488945f0	             mov qword [rbp - 0x10], rax	      8169	elf.c	FUNCTION_92
0x4014b92	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      8170	elf.c	FUNCTION_92	FOR_1
0x4014b99	            0xeb1f	                           jmp 0x4014bba	      8170	elf.c	FUNCTION_92	FOR_1
0x4014b9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8171	elf.c	FUNCTION_92	FOR_1
0x4014b9f	        0x488d5008	                      lea rdx, [rax + 8]	      8171	elf.c	FUNCTION_92	FOR_1
0x4014ba3	        0x488955c8	             mov qword [rbp - 0x38], rdx	      8171	elf.c	FUNCTION_92	FOR_1
0x4014ba7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      8171	elf.c	FUNCTION_92	FOR_1
0x4014bab	        0x488d4a20	                   lea rcx, [rdx + 0x20]	      8171	elf.c	FUNCTION_92	FOR_1
0x4014baf	        0x48894df0	             mov qword [rbp - 0x10], rcx	      8171	elf.c	FUNCTION_92	FOR_1
0x4014bb3	          0x488910	                    mov qword [rax], rdx	      8171	elf.c	FUNCTION_92	FOR_1
0x4014bb6	        0x8345ec01	               add dword [rbp - 0x14], 1	      8170	elf.c	FUNCTION_92	FOR_1
0x4014bba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8170	elf.c	FUNCTION_92	FOR_1
0x4014bbe	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      8170	elf.c	FUNCTION_92	FOR_1
0x4014bc4	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      8170	elf.c	FUNCTION_92	FOR_1
0x4014bc7	            0x77d2	                            ja 0x4014b9b	      8170	elf.c	FUNCTION_92	FOR_1
0x4014bc9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8173	elf.c	FUNCTION_92
0x4014bcd	    0x48c700000000	                      mov qword [rax], 0	      8173	elf.c	FUNCTION_92
0x4014bd4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8175	elf.c	FUNCTION_92
0x4014bd8	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      8175	elf.c	FUNCTION_92
0x4014bde	            0x89c0	                            mov eax, eax	      8175	elf.c	FUNCTION_92
0x4014be0	              0xc9	                                   leave	      8176	elf.c	FUNCTION_92
0x4014be1	              0xc3	                                     ret	      8176	elf.c	FUNCTION_92
_bfd_elf_symbol_from_bfd_symbol	ELSE,0:DO,0:CALL,8:WHILE,0:FOR,0:IF,4:SWITCH,0:functions,0	100
0x40101f4	              0x55	                                push rbp	      6490	elf.c	FUNCTION_79
0x40101f5	          0x4889e5	                            mov rbp, rsp	      6490	elf.c	FUNCTION_79
0x40101f8	              0x53	                                push rbx	      6490	elf.c	FUNCTION_79
0x40101f9	        0x4883ec38	                           sub rsp, 0x38	      6490	elf.c	FUNCTION_79
0x40101fd	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6490	elf.c	FUNCTION_79
0x4010201	        0x488975c0	             mov qword [rbp - 0x40], rsi	      6490	elf.c	FUNCTION_79
0x4010205	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6491	elf.c	FUNCTION_79
0x4010209	          0x488b00	                    mov rax, qword [rax]	      6491	elf.c	FUNCTION_79
0x401020c	        0x488945e8	             mov qword [rbp - 0x18], rax	      6491	elf.c	FUNCTION_79
0x4010210	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6493	elf.c	FUNCTION_79
0x4010214	          0x8b4018	            mov eax, dword [rax + 0x18] 	      6493	elf.c	FUNCTION_79
0x4010217	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6493	elf.c	FUNCTION_79
0x401021a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6500	elf.c	FUNCTION_79	IF_1
0x401021e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6500	elf.c	FUNCTION_79	IF_1
0x4010222	          0x4885c0	                           test rax, rax	      6500	elf.c	FUNCTION_79	IF_1
0x4010225	     0xf85ed000000	                           jne 0x4010318	      6500	elf.c	FUNCTION_79	IF_1
0x401022b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6501	elf.c	FUNCTION_79	IF_1
0x401022e	      0x2500010000	                          and eax, 0x100	      6501	elf.c	FUNCTION_79	IF_1
0x4010233	            0x85c0	                           test eax, eax	      6501	elf.c	FUNCTION_79	IF_1
0x4010235	     0xf84dd000000	                            je 0x4010318	      6501	elf.c	FUNCTION_79	IF_1
0x401023b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6502	elf.c	FUNCTION_79	IF_1
0x401023f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6502	elf.c	FUNCTION_79	IF_1
0x4010243	          0x4885c0	                           test rax, rax	      6502	elf.c	FUNCTION_79	IF_1
0x4010246	     0xf84cc000000	                            je 0x4010318	      6502	elf.c	FUNCTION_79	IF_1
0x401024c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6507	elf.c	FUNCTION_79	IF_1
0x4010250	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6507	elf.c	FUNCTION_79	IF_1
0x4010254	        0x488945e0	             mov qword [rbp - 0x20], rax	      6507	elf.c	FUNCTION_79	IF_1
0x4010258	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x401025c	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4010263	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4010267	            0x7419	                            je 0x4010282	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4010269	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x401026d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4010271	          0x4885c0	                           test rax, rax	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4010274	            0x740c	                            je 0x4010282	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4010276	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6509	elf.c	FUNCTION_79	IF_1	IF_2
0x401027a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6509	elf.c	FUNCTION_79	IF_1	IF_2
0x401027e	        0x488945e0	             mov qword [rbp - 0x20], rax	      6509	elf.c	FUNCTION_79	IF_1	IF_2
0x4010282	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x4010286	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x401028d	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x4010291	     0xf8581000000	                           jne 0x4010318	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x4010297	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x401029b	          0x8b400c	              mov eax, dword [rax + 0xc]	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x401029e	          0x8945d8	             mov dword [rbp - 0x28], eax	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x40102a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x40102a5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x40102ac	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x40102b3	          0x8b4048	            mov eax, dword [rax + 0x48] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x40102b6	          0x3945d8	            cmp dword [rbp - 0x28], eax 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x40102b9	            0x7d5d	                           jge 0x4010318	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x40102bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102bf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102c6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102d1	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102d4	          0x4863d2	                         movsxd rdx, edx	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102d7	        0x48c1e203	                              shl rdx, 3	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102db	          0x4801d0	                            add rax, rdx	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102de	          0x488b00	                    mov rax, qword [rax]	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102e1	          0x4885c0	                           test rax, rax	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102e4	            0x7432	                            je 0x4010318	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x40102e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x40102ea	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x40102f1	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x40102f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x40102fc	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x40102ff	          0x4863d2	                         movsxd rdx, edx	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4010302	        0x48c1e203	                              shl rdx, 3	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4010306	          0x4801d0	                            add rax, rdx	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4010309	          0x488b00	                    mov rax, qword [rax]	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x401030c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4010310	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4010314	        0x48895028	             mov qword [rax + 0x28], rdx	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4010318	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6516	elf.c	FUNCTION_79
0x401031c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6516	elf.c	FUNCTION_79
0x4010320	          0x8945dc	             mov dword [rbp - 0x24], eax	      6516	elf.c	FUNCTION_79
0x4010323	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6518	elf.c	FUNCTION_79	IF_4
0x4010327	            0x7542	                           jne 0x401036b	      6518	elf.c	FUNCTION_79	IF_4
0x4010329	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x401032d	        0x488b5808	                mov rbx, qword [rax + 8]	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4010331	      0xbe00000000	                              mov esi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x4010336	      0xbf00000000	                              mov edi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x401033b	      0xe800000000	                          call 0x4010340	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x4010340	          0x4889c1	                            mov rcx, rax	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x4010343	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4010347	          0x4889da	                            mov rdx, rbx	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x401034a	          0x4889c6	                            mov rsi, rax	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x401034d	          0x4889cf	                            mov rdi, rcx	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4010350	      0xb800000000	                              mov eax, 0	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4010355	      0xe800000000	                          call 0x401035a	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x401035a	      0xbf07000000	                              mov edi, 7	      6526	elf.c	FUNCTION_79	IF_4	CALL_6
0x401035f	      0xe800000000	                          call 0x4010364	      6526	elf.c	FUNCTION_79	IF_4	CALL_6
0x4010364	      0xb8ffffffff	                     mov eax, 0xffffffff	      6527	elf.c	FUNCTION_79	IF_4
0x4010369	            0xeb03	                           jmp 0x401036e	      6527	elf.c	FUNCTION_79	IF_4
0x401036b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6539	elf.c	FUNCTION_79
0x401036e	        0x4883c438	                           add rsp, 0x38	      6540	elf.c	FUNCTION_79
0x4010372	              0x5b	                                 pop rbx	      6540	elf.c	FUNCTION_79
0x4010373	              0x5d	                                 pop rbp	      6540	elf.c	FUNCTION_79
0x4010374	              0xc3	                                     ret	      6540	elf.c	FUNCTION_79
swap_out_syms	ELSE,21:DO,0:CALL,41:WHILE,0:FOR,2:IF,41:SWITCH,1:functions,0	816
0x4013b49	              0x55	                                push rbp	      7750	elf.c	FUNCTION_88
0x4013b4a	          0x4889e5	                            mov rbp, rsp	      7750	elf.c	FUNCTION_88
0x4013b4d	            0x4154	                                push r12	      7750	elf.c	FUNCTION_88
0x4013b4f	              0x53	                                push rbx	      7750	elf.c	FUNCTION_88
0x4013b50	    0x4881ec000100	                          sub rsp, 0x100	      7750	elf.c	FUNCTION_88
0x4013b57	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      7750	elf.c	FUNCTION_88
0x4013b5e	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      7750	elf.c	FUNCTION_88
0x4013b65	    0x8995fcfeffff	            mov dword [rbp - 0x104], edx	      7750	elf.c	FUNCTION_88
0x4013b6b	    0x64488b042528	                mov rax, qword fs:[0x28]	      7750	elf.c	FUNCTION_88
0x4013b74	        0x488945e8	             mov qword [rbp - 0x18], rax	      7750	elf.c	FUNCTION_88
0x4013b78	            0x31c0	                            xor eax, eax	      7750	elf.c	FUNCTION_88
0x4013b7a	    0x488d9518ffff	                   lea rdx, [rbp - 0xe8]	      7768	elf.c	FUNCTION_88	IF_1	CALL_1
0x4013b81	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7768	elf.c	FUNCTION_88	IF_1	CALL_1
0x4013b88	          0x4889d6	                            mov rsi, rdx	      7768	elf.c	FUNCTION_88	IF_1	CALL_1
0x4013b8b	          0x4889c7	                            mov rdi, rax	      7768	elf.c	FUNCTION_88	IF_1	CALL_1
0x4013b8e	      0xe8e364ffff	                call sym.elf_map_symbols	      7768	elf.c	FUNCTION_88	IF_1	CALL_1
0x4013b93	            0x85c0	                           test eax, eax	      7768	elf.c	FUNCTION_88	IF_1	CALL_1
0x4013b95	            0x750a	                           jne 0x4013ba1	      7768	elf.c	FUNCTION_88	IF_1	CALL_1
0x4013b97	      0xb800000000	                              mov eax, 0	      7769	elf.c	FUNCTION_88	IF_1
0x4013b9c	      0xe9320e0000	                           jmp 0x40149d3	      7769	elf.c	FUNCTION_88	IF_1
0x4013ba1	      0xe800000000	                          call 0x4013ba6	      7772	elf.c	FUNCTION_88	CALL_2
0x4013ba6	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      7772	elf.c	FUNCTION_88	CALL_2
0x4013bad	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      7773	elf.c	FUNCTION_88	IF_2
0x4013bb5	            0x750a	                           jne 0x4013bc1	      7773	elf.c	FUNCTION_88	IF_2
0x4013bb7	      0xb800000000	                              mov eax, 0	      7774	elf.c	FUNCTION_88	IF_2
0x4013bbc	      0xe9120e0000	                           jmp 0x40149d3	      7774	elf.c	FUNCTION_88	IF_2
0x4013bc1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7776	elf.c	FUNCTION_88	CALL_3
0x4013bc8	        0x488b4008	                mov rax, qword [rax + 8]	      7776	elf.c	FUNCTION_88	CALL_3
0x4013bcc	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      7776	elf.c	FUNCTION_88	CALL_3
0x4013bd3	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      7776	elf.c	FUNCTION_88	CALL_3
0x4013bda	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7777	elf.c	FUNCTION_88
0x4013be1	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      7777	elf.c	FUNCTION_88
0x4013be7	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      7777	elf.c	FUNCTION_88
0x4013bed	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7778	elf.c	FUNCTION_88	CALL_4
0x4013bf4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7778	elf.c	FUNCTION_88	CALL_4
0x4013bfb	        0x4883c068	                           add rax, 0x68	      7778	elf.c	FUNCTION_88	CALL_4
0x4013bff	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      7778	elf.c	FUNCTION_88	CALL_4
0x4013c06	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7779	elf.c	FUNCTION_88
0x4013c0d	    0xc74004020000	                  mov dword [rax + 4], 2	      7779	elf.c	FUNCTION_88
0x4013c14	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7780	elf.c	FUNCTION_88
0x4013c1b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      7780	elf.c	FUNCTION_88
0x4013c22	         0xfb64005	               movzx eax, byte [rax + 5]	      7780	elf.c	FUNCTION_88
0x4013c26	           0xfb6d0	                           movzx edx, al	      7780	elf.c	FUNCTION_88
0x4013c29	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7780	elf.c	FUNCTION_88
0x4013c30	        0x48895038	             mov qword [rax + 0x38], rdx	      7780	elf.c	FUNCTION_88
0x4013c34	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7781	elf.c	FUNCTION_88
0x4013c3b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7781	elf.c	FUNCTION_88
0x4013c3f	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      7781	elf.c	FUNCTION_88
0x4013c45	          0x83c001	                              add eax, 1	      7781	elf.c	FUNCTION_88
0x4013c48	            0x4898	                                    cdqe	      7781	elf.c	FUNCTION_88
0x4013c4a	        0x480fafd0	                           imul rdx, rax	      7781	elf.c	FUNCTION_88
0x4013c4e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7781	elf.c	FUNCTION_88
0x4013c55	        0x48895020	             mov qword [rax + 0x20], rdx	      7781	elf.c	FUNCTION_88
0x4013c59	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	      7782	elf.c	FUNCTION_88
0x4013c5f	          0x8d5001	                      lea edx, [rax + 1]	      7782	elf.c	FUNCTION_88
0x4013c62	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7782	elf.c	FUNCTION_88
0x4013c69	          0x89502c	             mov dword [rax + 0x2c], edx	      7782	elf.c	FUNCTION_88
0x4013c6c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7783	elf.c	FUNCTION_88
0x4013c73	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      7783	elf.c	FUNCTION_88
0x4013c7a	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      7783	elf.c	FUNCTION_88
0x4013c7e	           0xfb6c0	                           movzx eax, al	      7783	elf.c	FUNCTION_88
0x4013c81	      0xba01000000	                              mov edx, 1	      7783	elf.c	FUNCTION_88
0x4013c86	            0x89c1	                            mov ecx, eax	      7783	elf.c	FUNCTION_88
0x4013c88	          0x48d3e2	                             shl rdx, cl	      7783	elf.c	FUNCTION_88
0x4013c8b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7783	elf.c	FUNCTION_88
0x4013c92	        0x48895030	             mov qword [rax + 0x30], rdx	      7783	elf.c	FUNCTION_88
0x4013c96	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7785	elf.c	FUNCTION_88	CALL_5
0x4013c9d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7785	elf.c	FUNCTION_88	CALL_5
0x4013ca4	    0x480508010000	                          add rax, 0x108	      7785	elf.c	FUNCTION_88	CALL_5
0x4013caa	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      7785	elf.c	FUNCTION_88	CALL_5
0x4013cb1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7786	elf.c	FUNCTION_88
0x4013cb8	    0xc74004030000	                  mov dword [rax + 4], 3	      7786	elf.c	FUNCTION_88
0x4013cbf	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      7789	elf.c	FUNCTION_88	CALL_6
0x4013cc5	          0x83c001	                              add eax, 1	      7789	elf.c	FUNCTION_88	CALL_6
0x4013cc8	          0x4863d0	                         movsxd rdx, eax	      7789	elf.c	FUNCTION_88	CALL_6
0x4013ccb	          0x4889d0	                            mov rax, rdx	      7789	elf.c	FUNCTION_88	CALL_6
0x4013cce	          0x4801c0	                            add rax, rax	      7789	elf.c	FUNCTION_88	CALL_6
0x4013cd1	          0x4801d0	                            add rax, rdx	      7789	elf.c	FUNCTION_88	CALL_6
0x4013cd4	        0x48c1e004	                              shl rax, 4	      7789	elf.c	FUNCTION_88	CALL_6
0x4013cd8	          0x4889c7	                            mov rdi, rax	      7789	elf.c	FUNCTION_88	CALL_6
0x4013cdb	      0xe800000000	                          call 0x4013ce0	      7789	elf.c	FUNCTION_88	CALL_6
0x4013ce0	        0x48894580	             mov qword [rbp - 0x80], rax	      7789	elf.c	FUNCTION_88	CALL_6
0x4013ce4	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      7791	elf.c	FUNCTION_88	IF_3
0x4013ce9	            0x7519	                           jne 0x4013d04	      7791	elf.c	FUNCTION_88	IF_3
0x4013ceb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7793	elf.c	FUNCTION_88	IF_3	CALL_7
0x4013cf2	          0x4889c7	                            mov rdi, rax	      7793	elf.c	FUNCTION_88	IF_3	CALL_7
0x4013cf5	      0xe800000000	                          call 0x4013cfa	      7793	elf.c	FUNCTION_88	IF_3	CALL_7
0x4013cfa	      0xb800000000	                              mov eax, 0	      7794	elf.c	FUNCTION_88	IF_3
0x4013cff	      0xe9cf0c0000	                           jmp 0x40149d3	      7794	elf.c	FUNCTION_88	IF_3
0x4013d04	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7798	elf.c	FUNCTION_88
0x4013d0b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      7798	elf.c	FUNCTION_88
0x4013d12	         0xfb64005	               movzx eax, byte [rax + 5]	      7798	elf.c	FUNCTION_88
0x4013d16	           0xfb6d0	                           movzx edx, al	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d19	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d1f	          0x83c001	                              add eax, 1	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d22	          0x4863c8	                         movsxd rcx, eax	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d25	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d2c	          0x4889ce	                            mov rsi, rcx	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d2f	          0x4889c7	                            mov rdi, rax	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d32	      0xe800000000	                          call 0x4013d37	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d37	        0x48894588	             mov qword [rbp - 0x78], rax	      7797	elf.c	FUNCTION_88	CALL_8
0x4013d3b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      7799	elf.c	FUNCTION_88	IF_4
0x4013d40	            0x752b	                           jne 0x4013d6d	      7799	elf.c	FUNCTION_88	IF_4
0x4013d42	            0xeb04	                           jmp 0x4013d48	      7799	elf.c	FUNCTION_88	IF_4
0x4013d44	              0x90	                                     nop	      7821	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x4013d45	            0xeb01	                           jmp 0x4013d48	      7821	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x4013d47	              0x90	                                     nop	      7878	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x4013d48	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7802	elf.c	FUNCTION_88	IF_4	CALL_9
0x4013d4f	          0x4889c7	                            mov rdi, rax	      7802	elf.c	FUNCTION_88	IF_4	CALL_9
0x4013d52	      0xe800000000	                          call 0x4013d57	      7802	elf.c	FUNCTION_88	IF_4	CALL_9
0x4013d57	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7803	elf.c	FUNCTION_88	IF_4	CALL_10
0x4013d5b	          0x4889c7	                            mov rdi, rax	      7803	elf.c	FUNCTION_88	IF_4	CALL_10
0x4013d5e	      0xe800000000	                          call 0x4013d63	      7803	elf.c	FUNCTION_88	IF_4	CALL_10
0x4013d63	      0xb800000000	                              mov eax, 0	      7804	elf.c	FUNCTION_88	IF_4
0x4013d68	      0xe9660c0000	                           jmp 0x40149d3	      7804	elf.c	FUNCTION_88	IF_4
0x4013d6d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7806	elf.c	FUNCTION_88
0x4013d74	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      7806	elf.c	FUNCTION_88
0x4013d78	        0x48895048	             mov qword [rax + 0x48], rdx	      7806	elf.c	FUNCTION_88
0x4013d7c	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      7807	elf.c	FUNCTION_88
0x4013d87	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      7809	elf.c	FUNCTION_88
0x4013d92	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      7810	elf.c	FUNCTION_88
0x4013d9d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x4013da4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x4013dab	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x4013db2	          0x4885c0	                           test rax, rax	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x4013db5	     0xf84b0000000	                            je 0x4013e6b	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x4013dbb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7814	elf.c	FUNCTION_88	IF_5	CALL_12
0x4013dc2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7814	elf.c	FUNCTION_88	IF_5	CALL_12
0x4013dc9	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7814	elf.c	FUNCTION_88	IF_5	CALL_12
0x4013dd0	        0x48894590	             mov qword [rbp - 0x70], rax	      7814	elf.c	FUNCTION_88	IF_5	CALL_12
0x4013dd4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4013dd8	            0x8b00	                    mov eax, dword [rax]	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4013dda	            0x85c0	                           test eax, eax	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4013ddc	     0xf8489000000	                            je 0x4013e6b	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4013de2	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x4013de8	          0x83c001	                              add eax, 1	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x4013deb	            0x4898	                                    cdqe	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x4013ded	        0x48c1e002	                              shl rax, 2	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x4013df1	        0x48894598	             mov qword [rbp - 0x68], rax	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x4013df5	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      7819	elf.c	FUNCTION_88	IF_5	IF_6	CALL_13
0x4013dfb	          0x83c001	                              add eax, 1	      7819	elf.c	FUNCTION_88	IF_5	IF_6	CALL_13
0x4013dfe	          0x4863c8	                         movsxd rcx, eax	      7819	elf.c	FUNCTION_88	IF_5	IF_6	CALL_13
0x4013e01	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e08	      0xba04000000	                              mov edx, 4	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e0d	          0x4889ce	                            mov rsi, rcx	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e10	          0x4889c7	                            mov rdi, rax	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e13	      0xe800000000	                          call 0x4013e18	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e18	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e1f	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x4013e27	     0xf8417ffffff	                            je 0x4013d44	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x4013e2d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7823	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e31	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      7823	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e38	        0x48895048	             mov qword [rax + 0x48], rdx	      7823	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e3c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7824	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e40	    0xc74004120000	               mov dword [rax + 4], 0x12	      7824	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e47	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7825	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e4b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      7825	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e4f	        0x48895020	             mov qword [rax + 0x20], rdx	      7825	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e53	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7826	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e57	    0x48c740300400	               mov qword [rax + 0x30], 4	      7826	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e5f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7827	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e63	    0x48c740380400	               mov qword [rax + 0x38], 4	      7827	elf.c	FUNCTION_88	IF_5	IF_6
0x4013e6b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      7836	elf.c	FUNCTION_88
0x4013e73	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      7837	elf.c	FUNCTION_88
0x4013e7b	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      7838	elf.c	FUNCTION_88
0x4013e83	        0xc645d800	                mov byte [rbp - 0x28], 0	      7839	elf.c	FUNCTION_88
0x4013e87	        0xc645d900	                mov byte [rbp - 0x27], 0	      7840	elf.c	FUNCTION_88
0x4013e8b	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      7841	elf.c	FUNCTION_88
0x4013e92	        0xc645da00	                mov byte [rbp - 0x26], 0	      7842	elf.c	FUNCTION_88
0x4013e96	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7843	elf.c	FUNCTION_88
0x4013e9a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7843	elf.c	FUNCTION_88
0x4013e9e	          0x488910	                    mov qword [rax], rdx	      7843	elf.c	FUNCTION_88
0x4013ea1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7843	elf.c	FUNCTION_88
0x4013ea5	        0x48895008	                mov qword [rax + 8], rdx	      7843	elf.c	FUNCTION_88
0x4013ea9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7843	elf.c	FUNCTION_88
0x4013ead	        0x48895010	             mov qword [rax + 0x10], rdx	      7843	elf.c	FUNCTION_88
0x4013eb1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7843	elf.c	FUNCTION_88
0x4013eb5	        0x48895018	             mov qword [rax + 0x18], rdx	      7843	elf.c	FUNCTION_88
0x4013eb9	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7844	elf.c	FUNCTION_88
0x4013ebd	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      7844	elf.c	FUNCTION_88
0x4013ec4	        0x48895020	             mov qword [rax + 0x20], rdx	      7844	elf.c	FUNCTION_88
0x4013ec8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7845	elf.c	FUNCTION_88
0x4013ecc	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      7845	elf.c	FUNCTION_88
0x4013ed3	        0x48895028	             mov qword [rax + 0x28], rdx	      7845	elf.c	FUNCTION_88
0x4013ed7	    0x48838540ffff	               add qword [rbp - 0xc0], 1	      7846	elf.c	FUNCTION_88
0x4013edf	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      7847	elf.c	FUNCTION_88	IF_8
0x4013ee7	            0x7408	                            je 0x4013ef1	      7847	elf.c	FUNCTION_88	IF_8
0x4013ee9	    0x48838548ffff	               add qword [rbp - 0xb8], 1	      7848	elf.c	FUNCTION_88	IF_8
0x4013ef1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7852	elf.c	FUNCTION_88
0x4013ef8	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      7852	elf.c	FUNCTION_88
0x4013eff	          0x4885c0	                           test rax, rax	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f02	            0x7425	                            je 0x4013f29	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f04	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f0b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f12	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f19	          0x4889d7	                            mov rdi, rdx	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f1c	            0xffd0	                                call rax	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f1e	            0x85c0	                           test eax, eax	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f20	            0x7407	                            je 0x4013f29	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f22	      0xb801000000	                              mov eax, 1	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f27	            0xeb05	                           jmp 0x4013f2e	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f29	      0xb800000000	                              mov eax, 0	      7853	elf.c	FUNCTION_88	CALL_14
0x4013f2e	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      7852	elf.c	FUNCTION_88
0x4013f34	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7855	elf.c	FUNCTION_88
0x4013f3b	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      7855	elf.c	FUNCTION_88
0x4013f42	        0x488945a0	             mov qword [rbp - 0x60], rax	      7855	elf.c	FUNCTION_88
0x4013f46	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      7856	elf.c	FUNCTION_88	FOR_1
0x4013f50	      0xe9c0080000	                           jmp 0x4014815	      7856	elf.c	FUNCTION_88	FOR_1
0x4013f55	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f5b	            0x4898	                                    cdqe	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f5d	    0x488d14c50000	                        lea rdx, [rax*8]	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f65	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f69	          0x4801d0	                            add rax, rdx	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f6c	          0x488b00	                    mov rax, qword [rax]	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f6f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f73	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      7859	elf.c	FUNCTION_88	FOR_1
0x4013f7a	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f80	            0x4898	                                    cdqe	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f82	    0x488d14c50000	                        lea rdx, [rax*8]	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f8a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f8e	          0x4801d0	                            add rax, rdx	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f91	          0x488b00	                    mov rax, qword [rax]	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f94	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f97	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      7861	elf.c	FUNCTION_88	FOR_1
0x4013f9d	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fa4	            0x751c	                           jne 0x4013fc2	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fa6	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fac	      0x2502010000	                          and eax, 0x102	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fb1	      0x3d00010000	                          cmp eax, 0x100	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fb6	            0x750a	                           jne 0x4013fc2	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fb8	    0x48c745d0ffff	mov qword [rbp - 0x30], 0xffffffffffffffff	      7868	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fc0	            0xeb47	                           jmp 0x4014009	      7868	elf.c	FUNCTION_88	FOR_1	IF_9
0x4013fc2	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fc8	            0x4898	                                    cdqe	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fca	    0x488d14c50000	                        lea rdx, [rax*8]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fd2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fd6	          0x4801d0	                            add rax, rdx	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fd9	          0x488b00	                    mov rax, qword [rax]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fdc	        0x488b4808	                mov rcx, qword [rax + 8]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fe0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fe7	      0xba00000000	                              mov edx, 0	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fec	          0x4889ce	                            mov rsi, rcx	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013fef	          0x4889c7	                            mov rdi, rax	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013ff2	      0xe800000000	                          call 0x4013ff7	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013ff7	        0x488945d0	             mov qword [rbp - 0x30], rax	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4013ffb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x4013fff	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x4014003	     0xf843efdffff	                            je 0x4013d47	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x4014009	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401400f	            0x4898	                                    cdqe	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014011	    0x488d14c50000	                        lea rdx, [rax*8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014019	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401401d	          0x4801d0	                            add rax, rdx	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014020	          0x488b00	                    mov rax, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014023	          0x488b00	                    mov rax, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014026	          0x4885c0	                           test rax, rax	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014029	            0x746e	                            je 0x4014099	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401402b	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014031	            0x4898	                                    cdqe	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014033	    0x488d14c50000	                        lea rdx, [rax*8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401403b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401403f	          0x4801d0	                            add rax, rdx	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014042	          0x488b00	                    mov rax, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014045	          0x488b00	                    mov rax, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014048	        0x488b4008	                mov rax, qword [rax + 8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401404c	          0x8b4008	                mov eax, dword [rax + 8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401404f	          0x83f805	                              cmp eax, 5	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014052	            0x7545	                           jne 0x4014099	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014054	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401405a	            0x4898	                                    cdqe	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401405c	    0x488d14c50000	                        lea rdx, [rax*8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014064	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014068	          0x4801d0	                            add rax, rdx	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401406b	          0x488b00	                    mov rax, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401406e	          0x488b00	                    mov rax, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014071	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014078	          0x4885c0	                           test rax, rax	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401407b	            0x741c	                            je 0x4014099	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401407d	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014083	            0x4898	                                    cdqe	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014085	    0x488d14c50000	                        lea rdx, [rax*8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401408d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014091	          0x4801d0	                            add rax, rdx	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014094	          0x488b00	                    mov rax, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014097	            0xeb05	                           jmp 0x401409e	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4014099	      0xb800000000	                              mov eax, 0	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x401409e	        0x488945a8	             mov qword [rbp - 0x58], rax	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x40140a2	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140a8	      0x2500010000	                          and eax, 0x100	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140ad	            0x85c0	                           test eax, eax	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140af	     0xf85c4000000	                           jne 0x4014179	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140b5	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140bb	            0x4898	                                    cdqe	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140bd	    0x488d14c50000	                        lea rdx, [rax*8]	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140c5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140c9	          0x4801d0	                            add rax, rdx	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140cc	          0x488b00	                    mov rax, qword [rax]	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140cf	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140d3	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140d6	      0x2500100000	                         and eax, 0x1000	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140db	            0x85c0	                           test eax, eax	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140dd	     0xf8496000000	                            je 0x4014179	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140e3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7889	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140ea	        0x488945c8	             mov qword [rbp - 0x38], rax	      7889	elf.c	FUNCTION_88	FOR_1	IF_11
0x40140ee	      0x48837da800	               cmp qword [rbp - 0x58], 0	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x40140f3	            0x740d	                            je 0x4014102	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x40140f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x40140f9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x40140fd	          0x4885c0	                           test rax, rax	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4014100	            0x7533	                           jne 0x4014135	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4014102	    0x4883bd50ffff	            cmp qword [rbp - 0xb0], 0xf 	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x401410a	            0x771e	                            ja 0x401412a	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x401410c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014113	          0x4889c7	                            mov rdi, rax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014116	      0xe800000000	                          call 0x401411b	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x401411b	      0xba01000000	                              mov edx, 1	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014120	            0x89c1	                            mov ecx, eax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014122	            0xd3e2	                             shl edx, cl	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014124	            0x89d0	                            mov eax, edx	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014126	            0x4898	                                    cdqe	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014128	            0xeb05	                           jmp 0x401412f	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x401412a	      0xb810000000	                           mov eax, 0x10	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x401412f	        0x488945c0	             mov qword [rbp - 0x40], rax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014133	            0xeb0c	                           jmp 0x4014141	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4014135	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7894	elf.c	FUNCTION_88	FOR_1	IF_11	ELSE_2
0x4014139	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7894	elf.c	FUNCTION_88	FOR_1	IF_11	ELSE_2
0x401413d	        0x488945c0	             mov qword [rbp - 0x40], rax	      7894	elf.c	FUNCTION_88	FOR_1	IF_11	ELSE_2
0x4014141	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x4014147	            0x4898	                                    cdqe	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x4014149	    0x488d14c50000	                        lea rdx, [rax*8]	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x4014151	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x4014155	          0x4801d0	                            add rax, rdx	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x4014158	          0x488b00	                    mov rax, qword [rax]	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x401415b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x401415f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x4014166	          0x4889d6	                            mov rsi, rdx	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x4014169	          0x4889c7	                            mov rdi, rax	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x401416c	      0xe800000000	                          call 0x4014171	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x4014171	          0x8945dc	             mov dword [rbp - 0x24], eax	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x4014174	      0xe9ca020000	                           jmp 0x4014443	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x4014179	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x401417f	            0x4898	                                    cdqe	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014181	    0x488d14c50000	                        lea rdx, [rax*8]	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014189	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x401418d	          0x4801d0	                            add rax, rdx	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014190	          0x488b00	                    mov rax, qword [rax]	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014193	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014197	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x401419e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141a5	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141a9	          0x4885c0	                           test rax, rax	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141ac	            0x7424	                            je 0x40141d2	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141ae	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141b5	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141b9	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141c0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      7906	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141c7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7906	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141cb	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      7906	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40141d2	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40141d9	            0x7512	                           jne 0x40141ed	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40141db	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40141e2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40141e6	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40141ed	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7912	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x40141f4	        0x488945c0	             mov qword [rbp - 0x40], rax	      7912	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x40141f8	      0x48837da800	               cmp qword [rbp - 0x58], 0	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x40141fd	            0x740a	                            je 0x4014209	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x40141ff	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014203	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014207	            0xeb05	                           jmp 0x401420e	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014209	      0xb800000000	                              mov eax, 0	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x401420e	        0x488945c8	             mov qword [rbp - 0x38], rax	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014212	    0x4881bd58ffff	               cmp qword [rbp - 0xa8], 0	      7915	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x401421d	     0xf8511010000	                           jne 0x4014334	      7915	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014223	      0x48837da800	               cmp qword [rbp - 0x58], 0	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014228	     0xf8406010000	                            je 0x4014334	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x401422e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014232	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014235	            0x85c0	                           test eax, eax	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014237	     0xf84f7000000	                            je 0x4014334	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x401423d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7922	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014241	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      7922	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014244	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7922	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x401424a	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4014250	       0x5c0000000	                           add eax, 0xc0	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4014255	          0x83f804	                              cmp eax, 4	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4014258	     0xf87c4000000	                            ja 0x4014322	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x401425e	            0x89c0	                            mov eax, eax	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4014260	    0x488b04c50000	                  mov rax, qword [rax*8]	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4014268	            0xffe0	                                 jmp rax	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x401426a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x4014271	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x4014278	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x401427e	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x4014284	      0xe9a6000000	                           jmp 0x401432f	      7927	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4014289	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x4014290	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x4014297	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x401429d	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x40142a3	      0xe987000000	                           jmp 0x401432f	      7930	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x40142a8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x40142af	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x40142b6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x40142bd	          0x8b4050	            mov eax, dword [rax + 0x50] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x40142c0	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x40142c6	            0xeb67	                           jmp 0x401432f	      7933	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x40142c8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40142cf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40142d6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40142dd	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40142e0	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40142e6	            0xeb47	                           jmp 0x401432f	      7936	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x40142e8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40142ef	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40142f6	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40142fd	          0x4885c0	                           test rax, rax	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x4014300	            0x742c	                            je 0x401432e	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x4014302	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x4014309	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x4014310	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x4014317	          0x8b4050	            mov eax, dword [rax + 0x50] 	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x401431a	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x4014320	            0xeb0c	                           jmp 0x401432e	      7940	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4014322	    0xc78524ffffff	     mov dword [rbp - 0xdc], 0xfffffff1 	      7942	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x401432c	            0xeb01	                           jmp 0x401432f	      7943	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x401432e	              0x90	                                     nop	      7940	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x401432f	      0xe906010000	                           jmp 0x401443a	      7945	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4014334	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x401433b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x4014342	          0x4889d6	                            mov rsi, rdx	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x4014345	          0x4889c7	                            mov rdi, rax	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x4014348	      0xe800000000	                          call 0x401434d	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x401434d	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x4014353	    0x81bd24ffffff	     cmp dword [rbp - 0xdc], 0xfffffeff 	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x401435d	     0xf85d7000000	                           jne 0x401443a	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x4014363	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x401436a	          0x488b10	                    mov rdx, qword [rax]	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x401436d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x4014374	          0x4889d6	                            mov rsi, rdx	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x4014377	          0x4889c7	                            mov rdi, rax	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x401437a	      0xe800000000	                          call 0x401437f	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x401437f	        0x488945b0	             mov qword [rbp - 0x50], rax	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x4014383	      0x48837db000	               cmp qword [rbp - 0x50], 0	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x4014388	            0x741c	                            je 0x40143a6	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x401438a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x401438e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x4014395	          0x4889d6	                            mov rsi, rdx	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x4014398	          0x4889c7	                            mov rdi, rax	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x401439b	      0xe800000000	                          call 0x40143a0	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x40143a0	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x40143a6	    0x81bd24ffffff	     cmp dword [rbp - 0xdc], 0xfffffeff 	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143b0	     0xf8584000000	                           jne 0x401443a	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143b6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x40143bd	          0x4c8b20	                    mov r12, qword [rax]	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x40143c0	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143c6	            0x4898	                                    cdqe	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143c8	    0x488d14c50000	                        lea rdx, [rax*8]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143d0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143d4	          0x4801d0	                            add rax, rdx	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143d7	          0x488b00	                    mov rax, qword [rax]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143da	        0x488b4008	                mov rax, qword [rax + 8]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143de	          0x4885c0	                           test rax, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x40143e1	            0x7420	                            je 0x4014403	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x40143e3	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143e9	            0x4898	                                    cdqe	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143eb	    0x488d14c50000	                        lea rdx, [rax*8]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143f3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143f7	          0x4801d0	                            add rax, rdx	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143fa	          0x488b00	                    mov rax, qword [rax]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x40143fd	        0x488b5808	                mov rbx, qword [rax + 8]	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4014401	            0xeb05	                           jmp 0x4014408	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4014403	      0xbb00000000	                              mov ebx, 0	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4014408	      0xbe00000000	                              mov esi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_29
0x401440d	      0xbf00000000	                              mov edi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_29
0x4014412	      0xe800000000	                          call 0x4014417	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_29
0x4014417	          0x4c89e2	                            mov rdx, r12	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x401441a	          0x4889de	                            mov rsi, rbx	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x401441d	          0x4889c7	                            mov rdi, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4014420	      0xb800000000	                              mov eax, 0	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4014425	      0xe800000000	                          call 0x401442a	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x401442a	      0xbf05000000	                              mov edi, 5	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_30
0x401442f	      0xe800000000	                          call 0x4014434	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_30
0x4014434	              0x90	                                     nop	      7973	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4014435	      0xe90ef9ffff	                           jmp 0x4013d48	      7973	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x401443a	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      7978	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014440	          0x8945dc	             mov dword [rbp - 0x24], eax	      7978	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4014443	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x4014449	      0x2500000400	                        and eax, 0x40000	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x401444e	            0x85c0	                           test eax, eax	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x4014450	            0x740f	                            je 0x4014461	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x4014452	    0xc78520ffffff	               mov dword [rbp - 0xe0], 6	      7982	elf.c	FUNCTION_88	FOR_1	IF_20
0x401445c	      0xe98f000000	                           jmp 0x40144f0	      7982	elf.c	FUNCTION_88	FOR_1	IF_20
0x4014461	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x4014467	      0x2500004000	                       and eax, 0x400000	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x401446c	            0x85c0	                           test eax, eax	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x401446e	            0x740c	                            je 0x401447c	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x4014470	    0xc78520ffffff	             mov dword [rbp - 0xe0], 0xa	      7984	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x401447a	            0xeb74	                           jmp 0x40144f0	      7984	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x401447c	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x4014482	          0x83e008	                              and eax, 8	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x4014485	            0x85c0	                           test eax, eax	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x4014487	            0x740c	                            je 0x4014495	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x4014489	    0xc78520ffffff	               mov dword [rbp - 0xe0], 2	      7986	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x4014493	            0xeb5b	                           jmp 0x40144f0	      7986	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x4014495	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x401449b	      0x2500000100	                        and eax, 0x10000	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40144a0	            0x85c0	                           test eax, eax	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40144a2	            0x740c	                            je 0x40144b0	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40144a4	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      7988	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40144ae	            0xeb40	                           jmp 0x40144f0	      7988	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40144b0	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40144b6	      0x2500000800	                        and eax, 0x80000	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40144bb	            0x85c0	                           test eax, eax	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40144bd	            0x740c	                            je 0x40144cb	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40144bf	    0xc78520ffffff	               mov dword [rbp - 0xe0], 8	      7990	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40144c9	            0xeb25	                           jmp 0x40144f0	      7990	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40144cb	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7991	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40144d1	      0x2500001000	                       and eax, 0x100000	      7991	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40144d6	            0x85c0	                           test eax, eax	      7991	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40144d8	            0x740c	                            je 0x40144e6	      7991	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40144da	    0xc78520ffffff	               mov dword [rbp - 0xe0], 9	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40144e4	            0xeb0a	                           jmp 0x40144f0	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40144e6	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      7994	elf.c	FUNCTION_88	FOR_1	ELSE_10
0x40144f0	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x40144f6	            0x4898	                                    cdqe	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x40144f8	    0x488d14c50000	                        lea rdx, [rax*8]	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x4014500	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x4014504	          0x4801d0	                            add rax, rdx	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x4014507	          0x488b00	                    mov rax, qword [rax]	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x401450a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x401450e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x4014511	      0x2500040000	                          and eax, 0x400	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x4014516	            0x85c0	                           test eax, eax	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x4014518	            0x740a	                            je 0x4014524	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x401451a	    0xc78520ffffff	               mov dword [rbp - 0xe0], 6	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x4014524	      0x48837da800	               cmp qword [rbp - 0x58], 0	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014529	            0x7436	                            je 0x4014561	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x401452b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014532	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014536	          0x4885c0	                           test rax, rax	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014539	            0x7426	                            je 0x4014561	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x401453b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014542	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014546	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x401454a	        0x488d4a30	                   lea rcx, [rdx + 0x30]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x401454e	    0x8b9520ffffff	             mov edx, dword [rbp - 0xe0]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014554	            0x89d6	                            mov esi, edx	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014556	          0x4889cf	                            mov rdi, rcx	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014559	            0xffd0	                                call rax	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x401455b	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4014561	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x4014567	      0x2500010000	                          and eax, 0x100	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x401456c	            0x85c0	                           test eax, eax	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x401456e	            0x741f	                            je 0x401458f	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x4014570	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8007	elf.c	FUNCTION_88	FOR_1	IF_28	IF_29
0x4014576	          0x83e002	                              and eax, 2	      8007	elf.c	FUNCTION_88	FOR_1	IF_28	IF_29
0x4014579	            0x85c0	                           test eax, eax	      8007	elf.c	FUNCTION_88	FOR_1	IF_28	IF_29
0x401457b	            0x7409	                            je 0x4014586	      8007	elf.c	FUNCTION_88	FOR_1	IF_28	IF_29
0x401457d	        0xc645d813	            mov byte [rbp - 0x28], 0x13 	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_31
0x4014581	      0xe9b2010000	                           jmp 0x4014738	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_31
0x4014586	        0xc645d803	                mov byte [rbp - 0x28], 3	      8010	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_32
0x401458a	      0xe9a9010000	                           jmp 0x4014738	      8010	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_32
0x401458f	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x4014595	            0x4898	                                    cdqe	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x4014597	    0x488d14c50000	                        lea rdx, [rax*8]	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x401459f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145a3	          0x4801d0	                            add rax, rdx	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145a6	          0x488b00	                    mov rax, qword [rax]	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145a9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145ad	          0x8b4020	            mov eax, dword [rax + 0x20] 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145b0	      0x2500100000	                         and eax, 0x1000	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145b5	            0x85c0	                           test eax, eax	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145b7	     0xf8486000000	                            je 0x4014643	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x40145bd	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 6	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x40145c4	            0x7469	                            je 0x401462f	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x40145c6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145cd	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145d0	          0xc1e805	                              shr eax, 5	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145d3	      0x25ffff0f00	                        and eax, 0xfffff	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145d8	      0x2500000400	                        and eax, 0x40000	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145dd	            0x85c0	                           test eax, eax	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145df	            0x742f	                            je 0x4014610	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145e1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      8017	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145e8	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8017	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145eb	          0xc1e805	                              shr eax, 5	      8017	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145ee	      0x25ffff0f00	                        and eax, 0xfffff	      8017	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145f3	      0x2500000800	                        and eax, 0x80000	      8017	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145f8	            0x85c0	                           test eax, eax	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145fa	            0x7407	                            je 0x4014603	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40145fc	      0xb805000000	                              mov eax, 5	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4014601	            0xeb05	                           jmp 0x4014608	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4014603	      0xb801000000	                              mov eax, 1	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4014608	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      8017	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x401460e	            0xeb1f	                           jmp 0x401462f	      8017	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4014610	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8020	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4014616	          0x83e040	                           and eax, 0x40	      8020	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4014619	            0x85c0	                           test eax, eax	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x401461b	            0x7407	                            je 0x4014624	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x401461d	      0xb805000000	                              mov eax, 5	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4014622	            0xeb05	                           jmp 0x4014629	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4014624	      0xb801000000	                              mov eax, 1	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4014629	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      8020	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x401462f	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x4014635	          0x83e00f	                            and eax, 0xf	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x4014638	          0x83c010	                           add eax, 0x10	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x401463b	          0x8845d8	               mov byte [rbp - 0x28], al	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x401463e	      0xe9f5000000	                           jmp 0x4014738	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x4014643	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x4014649	            0x4898	                                    cdqe	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x401464b	    0x488d14c50000	                        lea rdx, [rax*8]	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x4014653	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x4014657	          0x4801d0	                            add rax, rdx	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x401465a	          0x488b00	                    mov rax, qword [rax]	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x401465d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x4014661	    0x483d00000000	                              cmp rax, 0	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x4014667	            0x752e	                           jne 0x4014697	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x4014669	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x401466f	      0x2580000000	                           and eax, 0x80	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4014674	            0x85c0	                           test eax, eax	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4014676	            0x7407	                            je 0x401467f	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4014678	      0xba20000000	                           mov edx, 0x20	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x401467d	            0xeb05	                           jmp 0x4014684	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x401467f	      0xba10000000	                           mov edx, 0x10	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4014684	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x401468a	          0x83e00f	                            and eax, 0xf	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x401468d	             0x1d0	                            add eax, edx	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x401468f	          0x8845d8	               mov byte [rbp - 0x28], al	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4014692	      0xe9a1000000	                           jmp 0x4014738	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4014697	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x401469d	      0x2500400000	                         and eax, 0x4000	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40146a2	            0x85c0	                           test eax, eax	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40146a4	            0x7409	                            je 0x40146af	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40146a6	        0xc645d804	                mov byte [rbp - 0x28], 4	      8031	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40146aa	      0xe989000000	                           jmp 0x4014738	      8031	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40146af	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      8034	elf.c	FUNCTION_88	FOR_1	ELSE_16
0x40146b9	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40146bf	          0x83e001	                              and eax, 1	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40146c2	            0x85c0	                           test eax, eax	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40146c4	            0x740c	                            je 0x40146d2	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40146c6	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      8037	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40146d0	            0xeb4d	                           jmp 0x401471f	      8037	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40146d2	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40146d8	      0x2500008000	                       and eax, 0x800000	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40146dd	            0x85c0	                           test eax, eax	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40146df	            0x740c	                            je 0x40146ed	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40146e1	    0xc78528ffffff	             mov dword [rbp - 0xd8], 0xa	      8039	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40146eb	            0xeb32	                           jmp 0x401471f	      8039	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40146ed	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40146f3	      0x2580000000	                           and eax, 0x80	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40146f8	            0x85c0	                           test eax, eax	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40146fa	            0x740c	                            je 0x4014708	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40146fc	    0xc78528ffffff	               mov dword [rbp - 0xd8], 2	      8041	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x4014706	            0xeb17	                           jmp 0x401471f	      8041	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x4014708	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      8042	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_19	IF_38
0x401470e	          0x83e002	                              and eax, 2	      8042	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_19	IF_38
0x4014711	            0x85c0	                           test eax, eax	      8042	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_19	IF_38
0x4014713	            0x740a	                            je 0x401471f	      8042	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_19	IF_38
0x4014715	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      8043	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_19	IF_38
0x401471f	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x4014725	          0xc1e004	                              shl eax, 4	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x4014728	            0x89c2	                            mov edx, eax	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x401472a	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x4014730	          0x83e00f	                            and eax, 0xf	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x4014733	             0x1d0	                            add eax, edx	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x4014735	          0x8845d8	               mov byte [rbp - 0x28], al	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x4014738	      0x48837da800	               cmp qword [rbp - 0x58], 0	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x401473d	            0x7418	                            je 0x4014757	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x401473f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8050	elf.c	FUNCTION_88	FOR_1	IF_39
0x4014743	         0xfb64049	           movzx eax, byte [rax + 0x49] 	      8050	elf.c	FUNCTION_88	FOR_1	IF_39
0x4014747	          0x8845d9	               mov byte [rbp - 0x27], al	      8050	elf.c	FUNCTION_88	FOR_1	IF_39
0x401474a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x401474e	         0xfb6404a	           movzx eax, byte [rax + 0x4a] 	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x4014752	          0x8845da	               mov byte [rbp - 0x26], al	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x4014755	            0xeb08	                           jmp 0x401475f	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x4014757	        0xc645d900	                mov byte [rbp - 0x27], 0	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x401475b	        0xc645da00	                mov byte [rbp - 0x26], 0	      8057	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x401475f	    0x83851cffffff	               add dword [rbp - 0xe4], 1	      8060	elf.c	FUNCTION_88	FOR_1
0x4014766	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      8061	elf.c	FUNCTION_88	FOR_1
0x401476c	          0x4863d0	                         movsxd rdx, eax	      8061	elf.c	FUNCTION_88	FOR_1
0x401476f	          0x4889d0	                            mov rax, rdx	      8061	elf.c	FUNCTION_88	FOR_1
0x4014772	          0x4801c0	                            add rax, rax	      8061	elf.c	FUNCTION_88	FOR_1
0x4014775	          0x4801d0	                            add rax, rdx	      8061	elf.c	FUNCTION_88	FOR_1
0x4014778	        0x48c1e004	                              shl rax, 4	      8061	elf.c	FUNCTION_88	FOR_1
0x401477c	          0x4889c2	                            mov rdx, rax	      8061	elf.c	FUNCTION_88	FOR_1
0x401477f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8061	elf.c	FUNCTION_88	FOR_1
0x4014783	          0x4801d0	                            add rax, rdx	      8061	elf.c	FUNCTION_88	FOR_1
0x4014786	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      8061	elf.c	FUNCTION_88	FOR_1
0x401478a	          0x488910	                    mov qword [rax], rdx	      8061	elf.c	FUNCTION_88	FOR_1
0x401478d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      8061	elf.c	FUNCTION_88	FOR_1
0x4014791	        0x48895008	                mov qword [rax + 8], rdx	      8061	elf.c	FUNCTION_88	FOR_1
0x4014795	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      8061	elf.c	FUNCTION_88	FOR_1
0x4014799	        0x48895010	             mov qword [rax + 0x10], rdx	      8061	elf.c	FUNCTION_88	FOR_1
0x401479d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8061	elf.c	FUNCTION_88	FOR_1
0x40147a1	        0x48895018	             mov qword [rax + 0x18], rdx	      8061	elf.c	FUNCTION_88	FOR_1
0x40147a5	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      8062	elf.c	FUNCTION_88	FOR_1
0x40147ab	          0x4863d0	                         movsxd rdx, eax	      8062	elf.c	FUNCTION_88	FOR_1
0x40147ae	          0x4889d0	                            mov rax, rdx	      8062	elf.c	FUNCTION_88	FOR_1
0x40147b1	          0x4801c0	                            add rax, rax	      8062	elf.c	FUNCTION_88	FOR_1
0x40147b4	          0x4801d0	                            add rax, rdx	      8062	elf.c	FUNCTION_88	FOR_1
0x40147b7	        0x48c1e004	                              shl rax, 4	      8062	elf.c	FUNCTION_88	FOR_1
0x40147bb	          0x4889c2	                            mov rdx, rax	      8062	elf.c	FUNCTION_88	FOR_1
0x40147be	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8062	elf.c	FUNCTION_88	FOR_1
0x40147c2	          0x4801c2	                            add rdx, rax	      8062	elf.c	FUNCTION_88	FOR_1
0x40147c5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      8062	elf.c	FUNCTION_88	FOR_1
0x40147cc	        0x48894220	             mov qword [rdx + 0x20], rax	      8062	elf.c	FUNCTION_88	FOR_1
0x40147d0	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      8063	elf.c	FUNCTION_88	FOR_1
0x40147d6	          0x4863d0	                         movsxd rdx, eax	      8063	elf.c	FUNCTION_88	FOR_1
0x40147d9	          0x4889d0	                            mov rax, rdx	      8063	elf.c	FUNCTION_88	FOR_1
0x40147dc	          0x4801c0	                            add rax, rax	      8063	elf.c	FUNCTION_88	FOR_1
0x40147df	          0x4801d0	                            add rax, rdx	      8063	elf.c	FUNCTION_88	FOR_1
0x40147e2	        0x48c1e004	                              shl rax, 4	      8063	elf.c	FUNCTION_88	FOR_1
0x40147e6	          0x4889c2	                            mov rdx, rax	      8063	elf.c	FUNCTION_88	FOR_1
0x40147e9	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8063	elf.c	FUNCTION_88	FOR_1
0x40147ed	          0x4801c2	                            add rdx, rax	      8063	elf.c	FUNCTION_88	FOR_1
0x40147f0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      8063	elf.c	FUNCTION_88	FOR_1
0x40147f7	        0x48894228	             mov qword [rdx + 0x28], rax	      8063	elf.c	FUNCTION_88	FOR_1
0x40147fb	    0x48838540ffff	               add qword [rbp - 0xc0], 1	      8065	elf.c	FUNCTION_88	FOR_1
0x4014803	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      8066	elf.c	FUNCTION_88	FOR_1	IF_40
0x401480b	            0x7408	                            je 0x4014815	      8066	elf.c	FUNCTION_88	FOR_1	IF_40
0x401480d	    0x48838548ffff	               add qword [rbp - 0xb8], 1	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x4014815	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      7856	elf.c	FUNCTION_88	FOR_1
0x401481b	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      7856	elf.c	FUNCTION_88	FOR_1
0x4014821	     0xf8c2ef7ffff	                            jl 0x4013f55	      7856	elf.c	FUNCTION_88	FOR_1
0x4014827	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8071	elf.c	FUNCTION_88	CALL_37
0x401482e	          0x4889c7	                            mov rdi, rax	      8071	elf.c	FUNCTION_88	CALL_37
0x4014831	      0xe800000000	                          call 0x4014836	      8071	elf.c	FUNCTION_88	CALL_37
0x4014836	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      8074	elf.c	FUNCTION_88	FOR_2
0x4014840	      0xe9cd000000	                           jmp 0x4014912	      8074	elf.c	FUNCTION_88	FOR_2
0x4014845	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      8076	elf.c	FUNCTION_88	FOR_2
0x401484b	          0x4863d0	                         movsxd rdx, eax	      8076	elf.c	FUNCTION_88	FOR_2
0x401484e	          0x4889d0	                            mov rax, rdx	      8076	elf.c	FUNCTION_88	FOR_2
0x4014851	          0x4801c0	                            add rax, rax	      8076	elf.c	FUNCTION_88	FOR_2
0x4014854	          0x4801d0	                            add rax, rdx	      8076	elf.c	FUNCTION_88	FOR_2
0x4014857	        0x48c1e004	                              shl rax, 4	      8076	elf.c	FUNCTION_88	FOR_2
0x401485b	          0x4889c2	                            mov rdx, rax	      8076	elf.c	FUNCTION_88	FOR_2
0x401485e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8076	elf.c	FUNCTION_88	FOR_2
0x4014862	          0x4801d0	                            add rax, rdx	      8076	elf.c	FUNCTION_88	FOR_2
0x4014865	        0x488945b8	             mov qword [rbp - 0x48], rax	      8076	elf.c	FUNCTION_88	FOR_2
0x4014869	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x401486d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4014871	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4014875	            0x750e	                           jne 0x4014885	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4014877	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8078	elf.c	FUNCTION_88	FOR_2	IF_41
0x401487b	    0x48c740100000	               mov qword [rax + 0x10], 0	      8078	elf.c	FUNCTION_88	FOR_2	IF_41
0x4014883	            0xeb25	                           jmp 0x40148aa	      8078	elf.c	FUNCTION_88	FOR_2	IF_41
0x4014885	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x4014889	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x401488d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x4014894	          0x4889d6	                            mov rsi, rdx	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x4014897	          0x4889c7	                            mov rdi, rax	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x401489a	      0xe800000000	                          call 0x401489f	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x401489f	          0x4889c2	                            mov rdx, rax	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x40148a2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x40148a6	        0x48895010	             mov qword [rax + 0x10], rdx	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x40148aa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148b1	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148bc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      8087	elf.c	FUNCTION_88	FOR_2
0x40148c0	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      8087	elf.c	FUNCTION_88	FOR_2
0x40148c4	    0x488d0c950000	                        lea rcx, [rdx*4]	      8087	elf.c	FUNCTION_88	FOR_2
0x40148cc	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148d3	          0x4801d1	                            add rcx, rdx	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148d6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      8084	elf.c	FUNCTION_88	FOR_2
0x40148da	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      8084	elf.c	FUNCTION_88	FOR_2
0x40148de	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      8085	elf.c	FUNCTION_88	FOR_2
0x40148e5	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8085	elf.c	FUNCTION_88	FOR_2
0x40148ec	         0xfb65205	               movzx edx, byte [rdx + 5]	      8085	elf.c	FUNCTION_88	FOR_2
0x40148f0	           0xfb6d2	                           movzx edx, dl	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148f3	        0x480faff2	                           imul rsi, rdx	      8084	elf.c	FUNCTION_88	FOR_2
0x40148f7	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148fb	          0x4801f2	                            add rdx, rsi	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x40148fe	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4014902	    0x488bbd08ffff	             mov rdi, qword [rbp - 0xf8]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4014909	            0xffd0	                                call rax	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x401490b	    0x83851cffffff	               add dword [rbp - 0xe4], 1	      8074	elf.c	FUNCTION_88	FOR_2
0x4014912	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      8074	elf.c	FUNCTION_88	FOR_2
0x4014918	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      8074	elf.c	FUNCTION_88	FOR_2
0x401491e	     0xf8e21ffffff	                           jle 0x4014845	      8074	elf.c	FUNCTION_88	FOR_2
0x4014924	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8090	elf.c	FUNCTION_88	CALL_40
0x4014928	          0x4889c7	                            mov rdi, rax	      8090	elf.c	FUNCTION_88	CALL_40
0x401492b	      0xe800000000	                          call 0x4014930	      8090	elf.c	FUNCTION_88	CALL_40
0x4014930	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      8092	elf.c	FUNCTION_88
0x4014937	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      8092	elf.c	FUNCTION_88
0x401493e	          0x488910	                    mov qword [rax], rdx	      8092	elf.c	FUNCTION_88
0x4014941	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8093	elf.c	FUNCTION_88	CALL_41
0x4014948	          0x4889c7	                            mov rdi, rax	      8093	elf.c	FUNCTION_88	CALL_41
0x401494b	      0xe800000000	                          call 0x4014950	      8093	elf.c	FUNCTION_88	CALL_41
0x4014950	          0x4889c2	                            mov rdx, rax	      8093	elf.c	FUNCTION_88	CALL_41
0x4014953	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8093	elf.c	FUNCTION_88	CALL_41
0x401495a	        0x48895020	             mov qword [rax + 0x20], rdx	      8093	elf.c	FUNCTION_88	CALL_41
0x401495e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8094	elf.c	FUNCTION_88
0x4014965	    0xc74004030000	                  mov dword [rax + 4], 3	      8094	elf.c	FUNCTION_88
0x401496c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8095	elf.c	FUNCTION_88
0x4014973	    0x488b90800300	           mov rdx, qword [rax + 0x380] 	      8095	elf.c	FUNCTION_88
0x401497a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8095	elf.c	FUNCTION_88
0x4014981	        0x48895008	                mov qword [rax + 8], rdx	      8095	elf.c	FUNCTION_88
0x4014985	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8096	elf.c	FUNCTION_88
0x401498c	    0x48c740100000	               mov qword [rax + 0x10], 0	      8096	elf.c	FUNCTION_88
0x4014994	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8097	elf.c	FUNCTION_88
0x401499b	    0x48c740380000	               mov qword [rax + 0x38], 0	      8097	elf.c	FUNCTION_88
0x40149a3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8098	elf.c	FUNCTION_88
0x40149aa	    0xc74028000000	               mov dword [rax + 0x28], 0	      8098	elf.c	FUNCTION_88
0x40149b1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8099	elf.c	FUNCTION_88
0x40149b8	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      8099	elf.c	FUNCTION_88
0x40149bf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8100	elf.c	FUNCTION_88
0x40149c6	    0x48c740300100	               mov qword [rax + 0x30], 1	      8100	elf.c	FUNCTION_88
0x40149ce	      0xb801000000	                              mov eax, 1	      8102	elf.c	FUNCTION_88
0x40149d3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      8103	elf.c	FUNCTION_88
0x40149d7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8103	elf.c	FUNCTION_88
0x40149e0	            0x7405	                            je 0x40149e7	      8103	elf.c	FUNCTION_88
0x40149e2	      0xe800000000	                          call 0x40149e7	      8103	elf.c	FUNCTION_88
0x40149e7	    0x4881c4000100	                          add rsp, 0x100	      8103	elf.c	FUNCTION_88
0x40149ee	              0x5b	                                 pop rbx	      8103	elf.c	FUNCTION_88
0x40149ef	            0x415c	                                 pop r12	      8103	elf.c	FUNCTION_88
0x40149f1	              0x5d	                                 pop rbp	      8103	elf.c	FUNCTION_88
0x40149f2	              0xc3	                                     ret	      8103	elf.c	FUNCTION_88
_bfd_elf_no_info_to_howto	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	10
0x40164ab	              0x55	                                push rbp	      8885	elf.c	FUNCTION_108
0x40164ac	          0x4889e5	                            mov rbp, rsp	      8885	elf.c	FUNCTION_108
0x40164af	        0x4883ec20	                           sub rsp, 0x20	      8885	elf.c	FUNCTION_108
0x40164b3	        0x48897df8	                mov qword [rbp - 8], rdi	      8885	elf.c	FUNCTION_108
0x40164b7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8885	elf.c	FUNCTION_108
0x40164bb	        0x488955e8	             mov qword [rbp - 0x18], rdx	      8885	elf.c	FUNCTION_108
0x40164bf	      0xba00000000	                              mov edx, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x40164c4	      0xbeb6220000	                         mov esi, 0x22b6	      8886	elf.c	FUNCTION_108	CALL_1
0x40164c9	      0xbf00000000	                              mov edi, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x40164ce	      0xe800000000	        call sym._bfd_elf_validate_reloc	      8886	elf.c	FUNCTION_108	CALL_1
bfd_section_from_elf_index	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	21
0x4006f74	              0x55	                                push rbp	      2590	elf.c	FUNCTION_38
0x4006f75	          0x4889e5	                            mov rbp, rsp	      2590	elf.c	FUNCTION_38
0x4006f78	        0x48897df8	                mov qword [rbp - 8], rdi	      2590	elf.c	FUNCTION_38
0x4006f7c	          0x8975f4	              mov dword [rbp - 0xc], esi	      2590	elf.c	FUNCTION_38
0x4006f7f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4006f83	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4006f8a	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4006f90	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4006f93	            0x7707	                            ja 0x4006f9c	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4006f95	      0xb800000000	                              mov eax, 0	      2592	elf.c	FUNCTION_38	IF_1
0x4006f9a	            0xeb20	                           jmp 0x4006fbc	      2592	elf.c	FUNCTION_38	IF_1
0x4006f9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fa0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fa7	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fab	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fae	        0x48c1e203	                              shl rdx, 3	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fb2	          0x4801d0	                            add rax, rdx	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fb5	          0x488b00	                    mov rax, qword [rax]	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fb8	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4006fbc	              0x5d	                                 pop rbp	      2594	elf.c	FUNCTION_38
0x4006fbd	              0xc3	                                     ret	      2594	elf.c	FUNCTION_38
_bfd_elf_set_section_contents	ELSE,0:DO,0:CALL,6:WHILE,0:FOR,0:IF,5:SWITCH,0:functions,0	89
0x4016364	              0x55	                                push rbp	      8850	elf.c	FUNCTION_107
0x4016365	          0x4889e5	                            mov rbp, rsp	      8850	elf.c	FUNCTION_107
0x4016368	        0x4883ec50	                           sub rsp, 0x50	      8850	elf.c	FUNCTION_107
0x401636c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8850	elf.c	FUNCTION_107
0x4016370	        0x488975d0	             mov qword [rbp - 0x30], rsi	      8850	elf.c	FUNCTION_107
0x4016374	        0x488955c8	             mov qword [rbp - 0x38], rdx	      8850	elf.c	FUNCTION_107
0x4016378	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      8850	elf.c	FUNCTION_107
0x401637c	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      8850	elf.c	FUNCTION_107
0x4016380	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8854	elf.c	FUNCTION_107	IF_1
0x4016384	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      8854	elf.c	FUNCTION_107	IF_1
0x4016388	          0x83e040	                           and eax, 0x40	      8854	elf.c	FUNCTION_107	IF_1
0x401638b	            0x84c0	                             test al, al	      8854	elf.c	FUNCTION_107	IF_1
0x401638d	            0x751f	                           jne 0x40163ae	      8854	elf.c	FUNCTION_107	IF_1
0x401638f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x4016393	      0xbe00000000	                              mov esi, 0	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x4016398	          0x4889c7	                            mov rdi, rax	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x401639b	      0xe800000000	                          call 0x40163a0	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40163a0	            0x85c0	                           test eax, eax	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40163a2	            0x750a	                           jne 0x40163ae	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40163a4	      0xb800000000	                              mov eax, 0	      8856	elf.c	FUNCTION_107	IF_1
0x40163a9	      0xe9fb000000	                           jmp 0x40164a9	      8856	elf.c	FUNCTION_107	IF_1
0x40163ae	      0x48837db800	               cmp qword [rbp - 0x48], 0	      8858	elf.c	FUNCTION_107	IF_2
0x40163b3	            0x750a	                           jne 0x40163bf	      8858	elf.c	FUNCTION_107	IF_2
0x40163b5	      0xb801000000	                              mov eax, 1	      8859	elf.c	FUNCTION_107	IF_2
0x40163ba	      0xe9ea000000	                           jmp 0x40164a9	      8859	elf.c	FUNCTION_107	IF_2
0x40163bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8861	elf.c	FUNCTION_107	CALL_2
0x40163c3	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      8861	elf.c	FUNCTION_107	CALL_2
0x40163ca	        0x488945e8	             mov qword [rbp - 0x18], rax	      8861	elf.c	FUNCTION_107	CALL_2
0x40163ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8862	elf.c	FUNCTION_107	IF_3
0x40163d2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8862	elf.c	FUNCTION_107	IF_3
0x40163d6	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      8862	elf.c	FUNCTION_107	IF_3
0x40163da	            0x7575	                           jne 0x4016451	      8862	elf.c	FUNCTION_107	IF_3
0x40163dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8865	elf.c	FUNCTION_107	IF_3
0x40163e0	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8865	elf.c	FUNCTION_107	IF_3
0x40163e4	        0x488945f0	             mov qword [rbp - 0x10], rax	      8865	elf.c	FUNCTION_107	IF_3
0x40163e8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x40163ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x40163f0	          0x4801c2	                            add rdx, rax	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x40163f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x40163f7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x40163fb	          0x4839c2	                            cmp rdx, rax	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x40163fe	            0x7717	                            ja 0x4016417	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x4016400	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8867	elf.c	FUNCTION_107	IF_3	IF_4
0x4016404	          0x8b4020	            mov eax, dword [rax + 0x20] 	      8867	elf.c	FUNCTION_107	IF_3	IF_4
0x4016407	      0x2500000008	                   and eax, section_end.	      8867	elf.c	FUNCTION_107	IF_3	IF_4
0x401640c	            0x85c0	                           test eax, eax	      8867	elf.c	FUNCTION_107	IF_3	IF_4
0x401640e	            0x7407	                            je 0x4016417	      8867	elf.c	FUNCTION_107	IF_3	IF_4
0x4016410	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x4016415	            0x7514	                           jne 0x401642b	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x4016417	      0xba00000000	                              mov edx, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x401641c	      0xbea5220000	                         mov esi, 0x22a5	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x4016421	      0xbf00000000	                              mov edi, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x4016426	      0xe800000000	                          call 0x401642b	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x401642b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x401642f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x4016433	        0x488d0c02	                    lea rcx, [rdx + rax]	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x4016437	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x401643b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x401643f	          0x4889c6	                            mov rsi, rax	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x4016442	          0x4889cf	                            mov rdi, rcx	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x4016445	      0xe800000000	                          call 0x401644a	      8870	elf.c	FUNCTION_107	IF_3	CALL_4
0x401644a	      0xb801000000	                              mov eax, 1	      8871	elf.c	FUNCTION_107	IF_3
0x401644f	            0xeb58	                           jmp 0x40164a9	      8871	elf.c	FUNCTION_107	IF_3
0x4016451	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8873	elf.c	FUNCTION_107
0x4016455	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8873	elf.c	FUNCTION_107
0x4016459	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8873	elf.c	FUNCTION_107
0x401645d	          0x4801d0	                            add rax, rdx	      8873	elf.c	FUNCTION_107
0x4016460	        0x488945f8	                mov qword [rbp - 8], rax	      8873	elf.c	FUNCTION_107
0x4016464	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x4016468	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x401646c	      0xba00000000	                              mov edx, 0	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x4016471	          0x4889ce	                            mov rsi, rcx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x4016474	          0x4889c7	                            mov rdi, rax	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x4016477	      0xe800000000	                          call 0x401647c	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x401647c	            0x85c0	                           test eax, eax	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x401647e	            0x751d	                           jne 0x401649d	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x4016480	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x4016484	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x4016488	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x401648c	          0x4889ce	                            mov rsi, rcx	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x401648f	          0x4889c7	                            mov rdi, rax	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x4016492	      0xe800000000	                          call 0x4016497	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x4016497	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x401649b	            0x7407	                            je 0x40164a4	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x401649d	      0xb800000000	                              mov eax, 0	      8876	elf.c	FUNCTION_107	IF_5
0x40164a2	            0xeb05	                           jmp 0x40164a9	      8876	elf.c	FUNCTION_107	IF_5
0x40164a4	      0xb801000000	                              mov eax, 1	      8878	elf.c	FUNCTION_107
0x40164a9	              0xc9	                                   leave	      8879	elf.c	FUNCTION_107
0x40164aa	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
elfcore_grok_s390_prefix	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016db5	              0x55	                                push rbp	      9270	elf.c	FUNCTION_127
0x4016db6	          0x4889e5	                            mov rbp, rsp	      9270	elf.c	FUNCTION_127
0x4016db9	        0x4883ec10	                           sub rsp, 0x10	      9270	elf.c	FUNCTION_127
0x4016dbd	        0x48897df8	                mov qword [rbp - 8], rdi	      9270	elf.c	FUNCTION_127
0x4016dc1	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9270	elf.c	FUNCTION_127
0x4016dc5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9271	elf.c	FUNCTION_127	CALL_1
0x4016dc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      9271	elf.c	FUNCTION_127	CALL_1
0x4016dcd	      0xbe00000000	                              mov esi, 0	      9271	elf.c	FUNCTION_127	CALL_1
0x4016dd2	          0x4889c7	                            mov rdi, rax	      9271	elf.c	FUNCTION_127	CALL_1
0x4016dd5	      0xe81ffeffff	call sym.elfcore_make_note_pseudosection	      9271	elf.c	FUNCTION_127	CALL_1
0x4016dda	              0xc9	                                   leave	      9272	elf.c	FUNCTION_127
0x4016ddb	              0xc3	                                     ret	      9272	elf.c	FUNCTION_127
bfd_elf_sym_name	ELSE,1:DO,0:CALL,5:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	66
0x4001855	              0x55	                                push rbp	       522	elf.c	FUNCTION_19
0x4001856	          0x4889e5	                            mov rbp, rsp	       522	elf.c	FUNCTION_19
0x4001859	        0x4883ec30	                           sub rsp, 0x30	       522	elf.c	FUNCTION_19
0x400185d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       522	elf.c	FUNCTION_19
0x4001861	        0x488975e0	             mov qword [rbp - 0x20], rsi	       522	elf.c	FUNCTION_19
0x4001865	        0x488955d8	             mov qword [rbp - 0x28], rdx	       522	elf.c	FUNCTION_19
0x4001869	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       522	elf.c	FUNCTION_19
0x400186d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       524	elf.c	FUNCTION_19
0x4001871	        0x488b4010	            mov rax, qword [rax + 0x10] 	       524	elf.c	FUNCTION_19
0x4001875	          0x8945f0	             mov dword [rbp - 0x10], eax	       524	elf.c	FUNCTION_19
0x4001878	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       525	elf.c	FUNCTION_19
0x400187c	          0x8b4028	            mov eax, dword [rax + 0x28] 	       525	elf.c	FUNCTION_19
0x400187f	          0x8945f4	              mov dword [rbp - 0xc], eax	       525	elf.c	FUNCTION_19
0x4001882	        0x837df000	               cmp dword [rbp - 0x10], 0	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4001886	            0x7567	                           jne 0x40018ef	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4001888	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400188c	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4001890	           0xfb6c0	                           movzx eax, al	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4001893	          0x83e00f	                            and eax, 0xf	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4001896	          0x83f803	                              cmp eax, 3	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4001899	            0x7554	                           jne 0x40018ef	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400189b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x400189f	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40018a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40018a6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40018ad	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40018b3	            0x39c2	                            cmp edx, eax	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40018b5	            0x7338	                           jae 0x40018ef	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40018b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018bb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018c2	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018ca	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018cd	            0x89c0	                            mov eax, eax	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018cf	        0x48c1e003	                              shl rax, 3	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018d3	          0x4801d0	                            add rax, rdx	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018d6	          0x488b00	                    mov rax, qword [rax]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018d9	            0x8b00	                    mov eax, dword [rax]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018db	          0x8945f0	             mov dword [rbp - 0x10], eax	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40018de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	elf.c	FUNCTION_19	IF_1	CALL_4
0x40018e2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       532	elf.c	FUNCTION_19	IF_1	CALL_4
0x40018e9	          0x8b4050	            mov eax, dword [rax + 0x50] 	       532	elf.c	FUNCTION_19	IF_1	CALL_4
0x40018ec	          0x8945f4	              mov dword [rbp - 0xc], eax	       532	elf.c	FUNCTION_19	IF_1	CALL_4
0x40018ef	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       535	elf.c	FUNCTION_19	CALL_5
0x40018f2	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       535	elf.c	FUNCTION_19	CALL_5
0x40018f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	elf.c	FUNCTION_19	CALL_5
0x40018f9	            0x89ce	                            mov esi, ecx	       535	elf.c	FUNCTION_19	CALL_5
0x40018fb	          0x4889c7	                            mov rdi, rax	       535	elf.c	FUNCTION_19	CALL_5
0x40018fe	      0xe800000000	                          call 0x4001903	       535	elf.c	FUNCTION_19	CALL_5
0x4001903	        0x488945f8	                mov qword [rbp - 8], rax	       535	elf.c	FUNCTION_19	CALL_5
0x4001907	      0x48837df800	                  cmp qword [rbp - 8], 0	       536	elf.c	FUNCTION_19	IF_2
0x400190c	            0x750a	                           jne 0x4001918	       536	elf.c	FUNCTION_19	IF_2
0x400190e	    0x48c745f80000	                  mov qword [rbp - 8], 0	       537	elf.c	FUNCTION_19	IF_2
0x4001916	            0xeb1d	                           jmp 0x4001935	       537	elf.c	FUNCTION_19	IF_2
0x4001918	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400191d	            0x7416	                            je 0x4001935	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400191f	        0x488b45f8	                mov rax, qword [rbp - 8]	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4001923	           0xfb600	                   movzx eax, byte [rax]	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4001926	            0x84c0	                             test al, al	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4001928	            0x750b	                           jne 0x4001935	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400192a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       539	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400192e	          0x488b00	                    mov rax, qword [rax]	       539	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4001931	        0x488945f8	                mov qword [rbp - 8], rax	       539	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4001935	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	elf.c	FUNCTION_19
0x4001939	              0xc9	                                   leave	       542	elf.c	FUNCTION_19
0x400193a	              0xc3	                                     ret	       542	elf.c	FUNCTION_19
elfobj_grok_stapsdt_note_1	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	38
0x4018063	              0x55	                                push rbp	      9909	elf.c	FUNCTION_147
0x4018064	          0x4889e5	                            mov rbp, rsp	      9909	elf.c	FUNCTION_147
0x4018067	        0x4883ec20	                           sub rsp, 0x20	      9909	elf.c	FUNCTION_147
0x401806b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9909	elf.c	FUNCTION_147
0x401806f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9909	elf.c	FUNCTION_147
0x4018073	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9912	elf.c	FUNCTION_147
0x4018077	        0x488b4008	                mov rax, qword [rax + 8]	      9912	elf.c	FUNCTION_147
0x401807b	        0x488d5018	                   lea rdx, [rax + 0x18]	      9911	elf.c	FUNCTION_147	CALL_1
0x401807f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9910	elf.c	FUNCTION_147
0x4018083	          0x4889d6	                            mov rsi, rdx	      9910	elf.c	FUNCTION_147
0x4018086	          0x4889c7	                            mov rdi, rax	      9910	elf.c	FUNCTION_147
0x4018089	      0xe800000000	                          call 0x401808e	      9910	elf.c	FUNCTION_147
0x401808e	        0x488945f8	                mov qword [rbp - 8], rax	      9910	elf.c	FUNCTION_147
0x4018092	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9914	elf.c	FUNCTION_147	CALL_2
0x4018096	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9914	elf.c	FUNCTION_147	CALL_2
0x401809d	    0x488b90600c00	           mov rdx, qword [rax + 0xc60] 	      9914	elf.c	FUNCTION_147	CALL_2
0x40180a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      9914	elf.c	FUNCTION_147	CALL_2
0x40180a8	          0x488910	                    mov qword [rax], rdx	      9914	elf.c	FUNCTION_147	CALL_2
0x40180ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9915	elf.c	FUNCTION_147
0x40180af	        0x488b5008	                mov rdx, qword [rax + 8]	      9915	elf.c	FUNCTION_147
0x40180b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      9915	elf.c	FUNCTION_147
0x40180b7	        0x48895008	                mov qword [rax + 8], rdx	      9915	elf.c	FUNCTION_147
0x40180bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9916	elf.c	FUNCTION_147	CALL_3
0x40180bf	        0x488b5008	                mov rdx, qword [rax + 8]	      9916	elf.c	FUNCTION_147	CALL_3
0x40180c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9916	elf.c	FUNCTION_147	CALL_3
0x40180c7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9916	elf.c	FUNCTION_147	CALL_3
0x40180cb	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9916	elf.c	FUNCTION_147	CALL_3
0x40180cf	        0x4883c110	                           add rcx, 0x10	      9916	elf.c	FUNCTION_147	CALL_3
0x40180d3	          0x4889c6	                            mov rsi, rax	      9916	elf.c	FUNCTION_147	CALL_3
0x40180d6	          0x4889cf	                            mov rdi, rcx	      9916	elf.c	FUNCTION_147	CALL_3
0x40180d9	      0xe800000000	                          call 0x40180de	      9916	elf.c	FUNCTION_147	CALL_3
0x40180de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9918	elf.c	FUNCTION_147	CALL_4
0x40180e2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9918	elf.c	FUNCTION_147	CALL_4
0x40180e9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      9918	elf.c	FUNCTION_147	CALL_4
0x40180ed	    0x488990600c00	            mov qword [rax + 0xc60], rdx	      9918	elf.c	FUNCTION_147	CALL_4
0x40180f4	      0xb801000000	                              mov eax, 1	      9920	elf.c	FUNCTION_147
0x40180f9	              0xc9	                                   leave	      9921	elf.c	FUNCTION_147
0x40180fa	              0xc3	                                     ret	      9921	elf.c	FUNCTION_147
_bfd_elf_get_symbol_version_string	ELSE,3:DO,0:CALL,6:WHILE,0:FOR,2:IF,5:SWITCH,0:functions,0	92
0x4004eeb	              0x55	                                push rbp	      1856	elf.c	FUNCTION_34
0x4004eec	          0x4889e5	                            mov rbp, rsp	      1856	elf.c	FUNCTION_34
0x4004eef	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1856	elf.c	FUNCTION_34
0x4004ef3	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1856	elf.c	FUNCTION_34
0x4004ef7	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1856	elf.c	FUNCTION_34
0x4004efb	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1857	elf.c	FUNCTION_34
0x4004f03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4004f07	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4004f0e	    0x8b80800c0000	           mov eax, dword [rax + 0xc80] 	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4004f14	            0x85c0	                           test eax, eax	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4004f16	     0xf843c010000	                            je 0x4005058	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4004f1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f20	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f27	    0x8b80840c0000	           mov eax, dword [rax + 0xc84] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f2d	            0x85c0	                           test eax, eax	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f2f	            0x7519	                           jne 0x4004f4a	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f35	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f3c	    0x8b80880c0000	           mov eax, dword [rax + 0xc88] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f42	            0x85c0	                           test eax, eax	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f44	     0xf840e010000	                            je 0x4005058	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004f4a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1861	elf.c	FUNCTION_34	IF_1
0x4004f4e	         0xfb74058	           movzx eax, word [rax + 0x58] 	      1861	elf.c	FUNCTION_34	IF_1
0x4004f52	           0xfb7c0	                           movzx eax, ax	      1861	elf.c	FUNCTION_34	IF_1
0x4004f55	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1861	elf.c	FUNCTION_34	IF_1
0x4004f58	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1863	elf.c	FUNCTION_34	IF_1
0x4004f5b	      0x2500800000	                         and eax, 0x8000	      1863	elf.c	FUNCTION_34	IF_1
0x4004f60	            0x85c0	                           test eax, eax	      1863	elf.c	FUNCTION_34	IF_1
0x4004f62	           0xf95c0	                                setne al	      1863	elf.c	FUNCTION_34	IF_1
0x4004f65	           0xfb6d0	                           movzx edx, al	      1863	elf.c	FUNCTION_34	IF_1
0x4004f68	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1863	elf.c	FUNCTION_34	IF_1
0x4004f6c	            0x8910	                    mov dword [rax], edx	      1863	elf.c	FUNCTION_34	IF_1
0x4004f6e	    0x8165e4ff7f00	          and dword [rbp - 0x1c], 0x7fff	      1864	elf.c	FUNCTION_34	IF_1
0x4004f75	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x4004f79	            0x750d	                           jne 0x4004f88	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x4004f7b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1867	elf.c	FUNCTION_34	IF_1	IF_2
0x4004f83	      0xe9d0000000	                           jmp 0x4005058	      1867	elf.c	FUNCTION_34	IF_1	IF_2
0x4004f88	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4004f8c	            0x750d	                           jne 0x4004f9b	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4004f8e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1869	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4004f96	      0xe9bd000000	                           jmp 0x4005058	      1869	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4004f9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4004f9f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4004fa6	    0x8b8040030000	           mov eax, dword [rax + 0x340] 	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4004fac	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4004faf	            0x7235	                            jb 0x4004fe6	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4004fb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fb5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fbc	    0x488b90480300	           mov rdx, qword [rax + 0x348] 	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fc3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fc6	          0x83e801	                              sub eax, 1	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fc9	            0x89c1	                            mov ecx, eax	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fcb	          0x4889c8	                            mov rax, rcx	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fce	        0x48c1e003	                              shl rax, 3	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fd2	          0x4801c8	                            add rax, rcx	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fd5	        0x48c1e003	                              shl rax, 3	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fd9	          0x4801d0	                            add rax, rdx	      1872	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fdc	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fe0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fe4	            0xeb72	                           jmp 0x4005058	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004fe6	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1877	elf.c	FUNCTION_34	IF_1	ELSE_3
0x4004fee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4004ff2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4004ff9	    0x488b80500300	           mov rax, qword [rax + 0x350] 	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4005000	        0x488945f0	             mov qword [rbp - 0x10], rax	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4005004	            0xeb4b	                           jmp 0x4005051	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4005006	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x400500a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x400500e	        0x488945f8	                mov qword [rbp - 8], rax	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4005012	            0xeb2a	                           jmp 0x400503e	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4005014	        0x488b45f8	                mov rax, qword [rbp - 8]	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4005018	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x400501c	           0xfb7c0	                           movzx eax, ax	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x400501f	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4005022	            0x750e	                           jne 0x4005032	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4005024	        0x488b45f8	                mov rax, qword [rbp - 8]	      1888	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4005028	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1888	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x400502c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1888	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4005030	            0xeb13	                           jmp 0x4005045	      1889	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4005032	        0x488b45f8	                mov rax, qword [rbp - 8]	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4005036	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x400503a	        0x488945f8	                mov qword [rbp - 8], rax	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x400503e	      0x48837df800	                  cmp qword [rbp - 8], 0	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4005043	            0x75cf	                           jne 0x4005014	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4005045	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1880	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1
0x4005049	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1880	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1
0x400504d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1880	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1
0x4005051	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4005056	            0x75ae	                           jne 0x4005006	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4005058	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1895	elf.c	FUNCTION_34
0x400505c	              0x5d	                                 pop rbp	      1896	elf.c	FUNCTION_34
0x400505d	              0xc3	                                     ret	      1896	elf.c	FUNCTION_34
elfobj_grok_gnu_note	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,1:functions,0	26
0x401800e	              0x55	                                push rbp	      9893	elf.c	FUNCTION_146
0x401800f	          0x4889e5	                            mov rbp, rsp	      9893	elf.c	FUNCTION_146
0x4018012	        0x4883ec10	                           sub rsp, 0x10	      9893	elf.c	FUNCTION_146
0x4018016	        0x48897df8	                mov qword [rbp - 8], rdi	      9893	elf.c	FUNCTION_146
0x401801a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9893	elf.c	FUNCTION_146
0x401801e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4018022	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4018026	        0x4883f803	                              cmp rax, 3	      9894	elf.c	FUNCTION_146	SWITCH_1
0x401802a	            0x7422	                            je 0x401804e	      9894	elf.c	FUNCTION_146	SWITCH_1
0x401802c	        0x4883f805	                              cmp rax, 5	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4018030	            0x7407	                            je 0x4018039	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4018032	      0xb801000000	                              mov eax, 1	      9897	elf.c	FUNCTION_146	SWITCH_1
0x4018037	            0xeb28	                           jmp 0x4018061	      9897	elf.c	FUNCTION_146	SWITCH_1
0x4018039	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x401803d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4018041	          0x4889d6	                            mov rsi, rdx	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4018044	          0x4889c7	                            mov rdi, rax	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4018047	      0xe800000000	                          call 0x401804c	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x401804c	            0xeb13	                           jmp 0x4018061	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x401804e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9903	elf.c	FUNCTION_146	SWITCH_1	CALL_2
0x4018052	        0x488b45f8	                mov rax, qword [rbp - 8]	      9903	elf.c	FUNCTION_146	SWITCH_1	CALL_2
0x4018056	          0x4889d6	                            mov rsi, rdx	      9903	elf.c	FUNCTION_146	SWITCH_1	CALL_2
0x4018059	          0x4889c7	                            mov rdi, rax	      9903	elf.c	FUNCTION_146	SWITCH_1	CALL_2
0x401805c	      0xe814ffffff	       call sym.elfobj_grok_gnu_build_id	      9903	elf.c	FUNCTION_146	SWITCH_1	CALL_2
0x4018061	              0xc9	                                   leave	      9905	elf.c	FUNCTION_146
0x4018062	              0xc3	                                     ret	      9905	elf.c	FUNCTION_146
elf_get_reloc_section	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	53
0x4008d75	              0x55	                                push rbp	      3613	elf.c	FUNCTION_51
0x4008d76	          0x4889e5	                            mov rbp, rsp	      3613	elf.c	FUNCTION_51
0x4008d79	        0x4883ec30	                           sub rsp, 0x30	      3613	elf.c	FUNCTION_51
0x4008d7d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3613	elf.c	FUNCTION_51
0x4008d81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3619	elf.c	FUNCTION_51	CALL_1
0x4008d85	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3619	elf.c	FUNCTION_51	CALL_1
0x4008d8c	          0x8b4004	                mov eax, dword [rax + 4]	      3619	elf.c	FUNCTION_51	CALL_1
0x4008d8f	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3619	elf.c	FUNCTION_51	CALL_1
0x4008d92	        0x837de409	               cmp dword [rbp - 0x1c], 9	      3620	elf.c	FUNCTION_51	IF_1
0x4008d96	            0x7410	                            je 0x4008da8	      3620	elf.c	FUNCTION_51	IF_1
0x4008d98	        0x837de404	               cmp dword [rbp - 0x1c], 4	      3620	elf.c	FUNCTION_51	IF_1
0x4008d9c	            0x740a	                            je 0x4008da8	      3620	elf.c	FUNCTION_51	IF_1
0x4008d9e	      0xb800000000	                              mov eax, 0	      3621	elf.c	FUNCTION_51	IF_1
0x4008da3	      0xe98e000000	                           jmp 0x4008e36	      3621	elf.c	FUNCTION_51	IF_1
0x4008da8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3624	elf.c	FUNCTION_51
0x4008dac	          0x488b00	                    mov rax, qword [rax]	      3624	elf.c	FUNCTION_51
0x4008daf	        0x488945e8	             mov qword [rbp - 0x18], rax	      3624	elf.c	FUNCTION_51
0x4008db3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4008db7	      0xba04000000	                              mov edx, 4	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4008dbc	      0xbe00000000	                              mov esi, 0	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4008dc1	          0x4889c7	                            mov rdi, rax	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4008dc4	      0xe800000000	                          call 0x4008dc9	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4008dc9	            0x85c0	                           test eax, eax	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4008dcb	            0x7407	                            je 0x4008dd4	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4008dcd	      0xb800000000	                              mov eax, 0	      3626	elf.c	FUNCTION_51	IF_2
0x4008dd2	            0xeb62	                           jmp 0x4008e36	      3626	elf.c	FUNCTION_51	IF_2
0x4008dd4	      0x488345e804	               add qword [rbp - 0x18], 4	      3627	elf.c	FUNCTION_51
0x4008dd9	        0x837de404	               cmp dword [rbp - 0x1c], 4	      3628	elf.c	FUNCTION_51	IF_3
0x4008ddd	            0x751a	                           jne 0x4008df9	      3628	elf.c	FUNCTION_51	IF_3
0x4008ddf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3628	elf.c	FUNCTION_51	IF_3
0x4008de3	        0x488d5001	                      lea rdx, [rax + 1]	      3628	elf.c	FUNCTION_51	IF_3
0x4008de7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3628	elf.c	FUNCTION_51	IF_3
0x4008deb	           0xfb600	                   movzx eax, byte [rax]	      3628	elf.c	FUNCTION_51	IF_3
0x4008dee	            0x3c61	                            cmp al, 0x61	      3628	elf.c	FUNCTION_51	IF_3
0x4008df0	            0x7407	                            je 0x4008df9	      3628	elf.c	FUNCTION_51	IF_3
0x4008df2	      0xb800000000	                              mov eax, 0	      3629	elf.c	FUNCTION_51	IF_3
0x4008df7	            0xeb3d	                           jmp 0x4008e36	      3629	elf.c	FUNCTION_51	IF_3
0x4008df9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3631	elf.c	FUNCTION_51
0x4008dfd	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      3631	elf.c	FUNCTION_51
0x4008e04	        0x488945f0	             mov qword [rbp - 0x10], rax	      3631	elf.c	FUNCTION_51
0x4008e08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3632	elf.c	FUNCTION_51	CALL_3
0x4008e0c	        0x488b4008	                mov rax, qword [rax + 8]	      3632	elf.c	FUNCTION_51	CALL_3
0x4008e10	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3632	elf.c	FUNCTION_51	CALL_3
0x4008e17	        0x488945f8	                mov qword [rbp - 8], rax	      3632	elf.c	FUNCTION_51	CALL_3
0x4008e1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3633	elf.c	FUNCTION_51	CALL_4
0x4008e1f	    0x488b80d80200	           mov rax, qword [rax + 0x2d8] 	      3633	elf.c	FUNCTION_51	CALL_4
0x4008e26	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3633	elf.c	FUNCTION_51	CALL_4
0x4008e2a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3633	elf.c	FUNCTION_51	CALL_4
0x4008e2e	          0x4889ce	                            mov rsi, rcx	      3633	elf.c	FUNCTION_51	CALL_4
0x4008e31	          0x4889d7	                            mov rdi, rdx	      3633	elf.c	FUNCTION_51	CALL_4
0x4008e34	            0xffd0	                                call rax	      3633	elf.c	FUNCTION_51	CALL_4
0x4008e36	              0xc9	                                   leave	      3634	elf.c	FUNCTION_51
0x4008e37	              0xc3	                                     ret	      3634	elf.c	FUNCTION_51
_bfd_elf_canonicalize_dynamic_symtab	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	27
0x4014c47	              0x55	                                push rbp	      8192	elf.c	FUNCTION_94
0x4014c48	          0x4889e5	                            mov rbp, rsp	      8192	elf.c	FUNCTION_94
0x4014c4b	        0x4883ec20	                           sub rsp, 0x20	      8192	elf.c	FUNCTION_94
0x4014c4f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8192	elf.c	FUNCTION_94
0x4014c53	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8192	elf.c	FUNCTION_94
0x4014c57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8193	elf.c	FUNCTION_94	CALL_1
0x4014c5b	        0x488b4008	                mov rax, qword [rax + 8]	      8193	elf.c	FUNCTION_94	CALL_1
0x4014c5f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8193	elf.c	FUNCTION_94	CALL_1
0x4014c66	        0x488945f0	             mov qword [rbp - 0x10], rax	      8193	elf.c	FUNCTION_94	CALL_1
0x4014c6a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c6e	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c75	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c79	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c7d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c81	      0xba01000000	                              mov edx, 1	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c86	          0x4889cf	                            mov rdi, rcx	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c89	            0xffd0	                                call rax	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c8b	        0x488945f8	                mov qword [rbp - 8], rax	      8194	elf.c	FUNCTION_94	CALL_2
0x4014c8f	      0x48837df800	                  cmp qword [rbp - 8], 0	      8196	elf.c	FUNCTION_94	IF_1
0x4014c94	            0x7810	                            js 0x4014ca6	      8196	elf.c	FUNCTION_94	IF_1
0x4014c96	        0x488b45f8	                mov rax, qword [rbp - 8]	      8197	elf.c	FUNCTION_94	IF_1
0x4014c9a	            0x89c2	                            mov edx, eax	      8197	elf.c	FUNCTION_94	IF_1
0x4014c9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8197	elf.c	FUNCTION_94	IF_1
0x4014ca0	    0x8990bc000000	             mov dword [rax + 0xbc], edx	      8197	elf.c	FUNCTION_94	IF_1
0x4014ca6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8198	elf.c	FUNCTION_94
0x4014caa	              0xc9	                                   leave	      8199	elf.c	FUNCTION_94
0x4014cab	              0xc3	                                     ret	      8199	elf.c	FUNCTION_94
bfd_set_section_alignment	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	11
0x4000081	              0x55	                                push rbp	      1695	bfd.h	FUNCTION_210
0x4000082	          0x4889e5	                            mov rbp, rsp	      1695	bfd.h	FUNCTION_210
0x4000085	        0x48897df8	                mov qword [rbp - 8], rdi	      1695	bfd.h	FUNCTION_210
0x4000089	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1695	bfd.h	FUNCTION_210
0x400008d	          0x8955ec	             mov dword [rbp - 0x14], edx	      1695	bfd.h	FUNCTION_210
0x4000090	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	bfd.h	FUNCTION_210
0x4000094	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1696	bfd.h	FUNCTION_210
0x4000097	          0x895070	             mov dword [rax + 0x70], edx	      1696	bfd.h	FUNCTION_210
0x400009a	      0xb801000000	                              mov eax, 1	      1697	bfd.h	FUNCTION_210
0x400009f	              0x5d	                                 pop rbp	      1698	bfd.h	FUNCTION_210
0x40000a0	              0xc3	                                     ret	      1698	bfd.h	FUNCTION_210
sym_is_global	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	42
0x4009d95	              0x55	                                push rbp	      3982	elf.c	FUNCTION_53
0x4009d96	          0x4889e5	                            mov rbp, rsp	      3982	elf.c	FUNCTION_53
0x4009d99	        0x4883ec20	                           sub rsp, 0x20	      3982	elf.c	FUNCTION_53
0x4009d9d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3982	elf.c	FUNCTION_53
0x4009da1	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3982	elf.c	FUNCTION_53
0x4009da5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3984	elf.c	FUNCTION_53	CALL_1
0x4009da9	        0x488b4008	                mov rax, qword [rax + 8]	      3984	elf.c	FUNCTION_53	CALL_1
0x4009dad	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3984	elf.c	FUNCTION_53	CALL_1
0x4009db4	        0x488945f8	                mov qword [rbp - 8], rax	      3984	elf.c	FUNCTION_53	CALL_1
0x4009db8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3985	elf.c	FUNCTION_53	IF_1
0x4009dbc	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3985	elf.c	FUNCTION_53	IF_1
0x4009dc0	          0x4885c0	                           test rax, rax	      3985	elf.c	FUNCTION_53	IF_1
0x4009dc3	            0x741a	                            je 0x4009ddf	      3985	elf.c	FUNCTION_53	IF_1
0x4009dc5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3986	elf.c	FUNCTION_53	IF_1
0x4009dc9	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3986	elf.c	FUNCTION_53	IF_1
0x4009dcd	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3986	elf.c	FUNCTION_53	IF_1
0x4009dd1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3986	elf.c	FUNCTION_53	IF_1
0x4009dd5	          0x4889ce	                            mov rsi, rcx	      3986	elf.c	FUNCTION_53	IF_1
0x4009dd8	          0x4889d7	                            mov rdi, rdx	      3986	elf.c	FUNCTION_53	IF_1
0x4009ddb	            0xffd0	                                call rax	      3986	elf.c	FUNCTION_53	IF_1
0x4009ddd	            0xeb41	                           jmp 0x4009e20	      3986	elf.c	FUNCTION_53	IF_1
0x4009ddf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3988	elf.c	FUNCTION_53
0x4009de3	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3988	elf.c	FUNCTION_53
0x4009de6	      0x2582008000	                       and eax, 0x800082	      3988	elf.c	FUNCTION_53
0x4009deb	            0x85c0	                           test eax, eax	      3990	elf.c	FUNCTION_53
0x4009ded	            0x7524	                           jne 0x4009e13	      3990	elf.c	FUNCTION_53
0x4009def	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3989	elf.c	FUNCTION_53
0x4009df3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3989	elf.c	FUNCTION_53
0x4009df7	    0x483d00000000	                              cmp rax, 0	      3989	elf.c	FUNCTION_53
0x4009dfd	            0x7414	                            je 0x4009e13	      3989	elf.c	FUNCTION_53
0x4009dff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3990	elf.c	FUNCTION_53
0x4009e03	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3990	elf.c	FUNCTION_53
0x4009e07	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3990	elf.c	FUNCTION_53
0x4009e0a	      0x2500100000	                         and eax, 0x1000	      3990	elf.c	FUNCTION_53
0x4009e0f	            0x85c0	                           test eax, eax	      3990	elf.c	FUNCTION_53
0x4009e11	            0x7407	                            je 0x4009e1a	      3990	elf.c	FUNCTION_53
0x4009e13	      0xb801000000	                              mov eax, 1	      3990	elf.c	FUNCTION_53
0x4009e18	            0xeb05	                           jmp 0x4009e1f	      3988	elf.c	FUNCTION_53
0x4009e1a	      0xb800000000	                              mov eax, 0	      3990	elf.c	FUNCTION_53
0x4009e1f	              0x90	                                     nop	      3988	elf.c	FUNCTION_53
0x4009e20	              0xc9	                                   leave	      3991	elf.c	FUNCTION_53
0x4009e21	              0xc3	                                     ret	      3991	elf.c	FUNCTION_53
_bfd_elf_write_corefile_contents	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	9
0x40100c0	              0x55	                                push rbp	      6444	elf.c	FUNCTION_77
0x40100c1	          0x4889e5	                            mov rbp, rsp	      6444	elf.c	FUNCTION_77
0x40100c4	        0x4883ec10	                           sub rsp, 0x10	      6444	elf.c	FUNCTION_77
0x40100c8	        0x48897df8	                mov qword [rbp - 8], rdi	      6444	elf.c	FUNCTION_77
0x40100cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      6446	elf.c	FUNCTION_77	CALL_1
0x40100d0	          0x4889c7	                            mov rdi, rax	      6446	elf.c	FUNCTION_77	CALL_1
0x40100d3	      0xe800000000	                          call 0x40100d8	      6446	elf.c	FUNCTION_77	CALL_1
0x40100d8	              0xc9	                                   leave	      6447	elf.c	FUNCTION_77
0x40100d9	              0xc3	                                     ret	      6447	elf.c	FUNCTION_77
_bfd_elf_sizeof_headers	ELSE,0:DO,0:CALL,6:WHILE,0:FOR,1:IF,3:SWITCH,0:functions,0	64
0x4016264	              0x55	                                push rbp	      8817	elf.c	FUNCTION_106
0x4016265	          0x4889e5	                            mov rbp, rsp	      8817	elf.c	FUNCTION_106
0x4016268	        0x4883ec30	                           sub rsp, 0x30	      8817	elf.c	FUNCTION_106
0x401626c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8817	elf.c	FUNCTION_106
0x4016270	        0x488975d0	             mov qword [rbp - 0x30], rsi	      8817	elf.c	FUNCTION_106
0x4016274	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8818	elf.c	FUNCTION_106	CALL_1
0x4016278	        0x488b4008	                mov rax, qword [rax + 8]	      8818	elf.c	FUNCTION_106	CALL_1
0x401627c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8818	elf.c	FUNCTION_106	CALL_1
0x4016283	        0x488945f8	                mov qword [rbp - 8], rax	      8818	elf.c	FUNCTION_106	CALL_1
0x4016287	        0x488b45f8	                mov rax, qword [rbp - 8]	      8819	elf.c	FUNCTION_106
0x401628b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8819	elf.c	FUNCTION_106
0x4016292	           0xfb600	                   movzx eax, byte [rax]	      8819	elf.c	FUNCTION_106
0x4016295	           0xfb6c0	                           movzx eax, al	      8819	elf.c	FUNCTION_106
0x4016298	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8819	elf.c	FUNCTION_106
0x401629b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x401629f	           0xfb600	                   movzx eax, byte [rax]	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40162a2	          0x83e003	                              and eax, 3	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40162a5	            0x3c02	                               cmp al, 2	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40162a7	     0xf84b2000000	                            je 0x401635f	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40162ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40162b1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40162b8	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40162bf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40162c3	        0x488945e8	             mov qword [rbp - 0x18], rax	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40162c7	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x40162cc	            0x7569	                           jne 0x4016337	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x40162ce	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      8829	elf.c	FUNCTION_106	IF_1	IF_2
0x40162d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40162da	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40162e1	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40162e8	          0x488b00	                    mov rax, qword [rax]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40162eb	        0x488945f0	             mov qword [rbp - 0x10], rax	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40162ef	            0xeb21	                           jmp 0x4016312	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40162f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x40162f5	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x40162fc	         0xfb64001	               movzx eax, byte [rax + 1]	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x4016300	           0xfb6c0	                           movzx eax, al	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x4016303	        0x480145e8	            add qword [rbp - 0x18], rax 	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x4016307	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x401630b	          0x488b00	                    mov rax, qword [rax]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x401630e	        0x488945f0	             mov qword [rbp - 0x10], rax	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x4016312	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x4016317	            0x75d8	                           jne 0x40162f1	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x4016319	      0x48837de800	               cmp qword [rbp - 0x18], 0	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x401631e	            0x7517	                           jne 0x4016337	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x4016320	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x4016324	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x4016328	          0x4889d6	                            mov rsi, rdx	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x401632b	          0x4889c7	                            mov rdi, rax	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x401632e	      0xe86546ffff	        call sym.get_program_header_size	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x4016333	        0x488945e8	             mov qword [rbp - 0x18], rax	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x4016337	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x401633b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x4016342	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x4016349	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x401634d	        0x48895038	             mov qword [rax + 0x38], rdx	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x4016351	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8838	elf.c	FUNCTION_106	IF_1
0x4016355	            0x89c2	                            mov edx, eax	      8838	elf.c	FUNCTION_106	IF_1
0x4016357	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8838	elf.c	FUNCTION_106	IF_1
0x401635a	             0x1d0	                            add eax, edx	      8838	elf.c	FUNCTION_106	IF_1
0x401635c	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8838	elf.c	FUNCTION_106	IF_1
0x401635f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8841	elf.c	FUNCTION_106
0x4016362	              0xc9	                                   leave	      8842	elf.c	FUNCTION_106
0x4016363	              0xc3	                                     ret	      8842	elf.c	FUNCTION_106
bfd_elf_set_group_contents	ELSE,1:DO,0:CALL,22:WHILE,2:FOR,0:IF,13:SWITCH,0:functions,0	305
0x4008793	              0x55	                                push rbp	      3450	elf.c	FUNCTION_49
0x4008794	          0x4889e5	                            mov rbp, rsp	      3450	elf.c	FUNCTION_49
0x4008797	    0x4881eca00000	                           sub rsp, 0xa0	      3450	elf.c	FUNCTION_49
0x400879e	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      3450	elf.c	FUNCTION_49
0x40087a5	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      3450	elf.c	FUNCTION_49
0x40087ac	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      3450	elf.c	FUNCTION_49
0x40087b3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3451	elf.c	FUNCTION_49
0x40087ba	        0x488945c0	             mov qword [rbp - 0x40], rax	      3451	elf.c	FUNCTION_49
0x40087be	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3458	elf.c	FUNCTION_49	IF_1
0x40087c5	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3458	elf.c	FUNCTION_49	IF_1
0x40087c8	      0x2500001002	                      and eax, 0x2100000	      3458	elf.c	FUNCTION_49	IF_1
0x40087cd	      0x3d00000002	                      cmp eax, 0x2000000	      3458	elf.c	FUNCTION_49	IF_1
0x40087d2	     0xf850f050000	                           jne 0x4008ce7	      3458	elf.c	FUNCTION_49	IF_1
0x40087d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3459	elf.c	FUNCTION_49	IF_1
0x40087dc	            0x8b00	                    mov eax, dword [rax]	      3459	elf.c	FUNCTION_49	IF_1
0x40087de	            0x85c0	                           test eax, eax	      3459	elf.c	FUNCTION_49	IF_1
0x40087e0	     0xf8501050000	                           jne 0x4008ce7	      3459	elf.c	FUNCTION_49	IF_1
0x40087e6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40087ed	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40087f4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40087f7	            0x85c0	                           test eax, eax	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40087f9	     0xf85c4000000	                           jne 0x40088c3	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40087ff	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3464	elf.c	FUNCTION_49	IF_2
0x4008807	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x400880e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x4008815	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x400881c	          0x4885c0	                           test rax, rax	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x400881f	            0x741d	                            je 0x400883e	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x4008821	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3469	elf.c	FUNCTION_49	IF_2	CALL_3
0x4008828	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3469	elf.c	FUNCTION_49	IF_2	CALL_3
0x400882f	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3469	elf.c	FUNCTION_49	IF_2	CALL_3
0x4008836	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3469	elf.c	FUNCTION_49	IF_2	CALL_3
0x400883a	        0x488945a0	             mov qword [rbp - 0x60], rax	      3469	elf.c	FUNCTION_49	IF_2	CALL_3
0x400883e	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3471	elf.c	FUNCTION_49	IF_2	IF_4
0x4008843	            0x7564	                           jne 0x40088a9	      3471	elf.c	FUNCTION_49	IF_2	IF_4
0x4008845	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x400884c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4008853	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x400885a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x400885e	          0x4885c0	                           test rax, rax	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4008861	            0x750f	                           jne 0x4008872	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4008863	      0xbe930d0000	                          mov esi, 0xd93	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4008868	      0xbf00000000	                              mov edi, 0	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x400886d	      0xe800000000	                          call 0x4008872	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4008872	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4008879	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4008880	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4008887	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x400888b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4008892	          0x8b400c	              mov eax, dword [rax + 0xc]	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4008895	            0x89c0	                            mov eax, eax	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4008897	        0x48c1e003	                              shl rax, 3	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x400889b	          0x4801d0	                            add rax, rdx	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x400889e	          0x488b00	                    mov rax, qword [rax]	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x40088a1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x40088a5	        0x488945a0	             mov qword [rbp - 0x60], rax	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x40088a9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x40088b0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x40088b7	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x40088bb	          0x89502c	             mov dword [rax + 0x2c], edx	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x40088be	      0xe91a010000	                           jmp 0x40089dd	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x40088c3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3480	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_8
0x40088ca	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3480	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_8
0x40088d1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3480	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_8
0x40088d4	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      3480	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_8
0x40088d7	     0xf8500010000	                           jne 0x40089dd	      3480	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_8
0x40088dd	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x40088e4	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x40088eb	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x40088f2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x40088f9	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x4008900	        0x488945c8	             mov qword [rbp - 0x38], rax	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x4008904	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3495	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_11
0x4008908	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3495	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_11
0x400890f	        0x488945d0	             mov qword [rbp - 0x30], rax	      3495	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_11
0x4008913	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3496	elf.c	FUNCTION_49	ELSE_1	IF_5
0x4008917	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3496	elf.c	FUNCTION_49	ELSE_1	IF_5
0x400891a	            0x89c0	                            mov eax, eax	      3496	elf.c	FUNCTION_49	ELSE_1	IF_5
0x400891c	        0x488945d8	             mov qword [rbp - 0x28], rax	      3496	elf.c	FUNCTION_49	ELSE_1	IF_5
0x4008920	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      3497	elf.c	FUNCTION_49	ELSE_1	IF_5
0x4008928	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x400892c	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4008933	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x400893a	     0xfb6808d0c00	          movzx eax, byte [rax + 0xc8d] 	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4008941	          0x83e040	                           and eax, 0x40	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4008944	            0x84c0	                             test al, al	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4008946	            0x7527	                           jne 0x400896f	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4008948	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3502	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_13
0x400894c	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      3502	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_13
0x4008953	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3502	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_13
0x400895a	        0x4883c068	                           add rax, 0x68	      3502	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_13
0x400895e	        0x488945e0	             mov qword [rbp - 0x20], rax	      3502	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_13
0x4008962	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3503	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6
0x4008966	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3503	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6
0x4008969	            0x89c0	                            mov eax, eax	      3503	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6
0x400896b	        0x488945a8	             mov qword [rbp - 0x58], rax	      3503	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6
0x400896f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x4008973	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x400897a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x4008981	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x4008988	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x400898c	        0x482b45a8	             sub rax, qword [rbp - 0x58]	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x4008990	        0x48c1e003	                              shl rax, 3	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x4008994	          0x4801d0	                            add rax, rdx	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x4008997	          0x488b00	                    mov rax, qword [rax]	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x400899a	        0x488945b0	             mov qword [rbp - 0x50], rax	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x400899e	            0xeb0c	                           jmp 0x40089ac	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089a0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3508	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089a4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3508	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089a8	        0x488945b0	             mov qword [rbp - 0x50], rax	      3508	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089ac	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089b0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089b4	            0x3c06	                               cmp al, 6	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089b6	            0x74e8	                            je 0x40089a0	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3507	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089bc	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3507	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089c0	            0x3c07	                               cmp al, 7	      3507	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089c2	            0x74dc	                            je 0x40089a0	      3507	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40089c4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3510	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_15
0x40089cb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3510	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_15
0x40089d2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3510	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_15
0x40089d6	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3510	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_15
0x40089da	          0x89502c	             mov dword [rax + 0x2c], edx	      3510	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_15
0x40089dd	    0xc7458c010000	               mov dword [rbp - 0x74], 1	      3514	elf.c	FUNCTION_49
0x40089e4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3515	elf.c	FUNCTION_49	IF_7
0x40089eb	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3515	elf.c	FUNCTION_49	IF_7
0x40089f2	          0x4885c0	                           test rax, rax	      3515	elf.c	FUNCTION_49	IF_7
0x40089f5	            0x7577	                           jne 0x4008a6e	      3515	elf.c	FUNCTION_49	IF_7
0x40089f7	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      3517	elf.c	FUNCTION_49	IF_7
0x40089fe	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a05	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a09	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a10	          0x4889d6	                            mov rsi, rdx	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a13	          0x4889c7	                            mov rdi, rax	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a16	      0xe800000000	                          call 0x4008a1b	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a1b	          0x4889c2	                            mov rdx, rax	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a1e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a25	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x4008a2c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3521	elf.c	FUNCTION_49	IF_7	CALL_17
0x4008a33	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3521	elf.c	FUNCTION_49	IF_7	CALL_17
0x4008a3a	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3521	elf.c	FUNCTION_49	IF_7	CALL_17
0x4008a41	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	      3521	elf.c	FUNCTION_49	IF_7	CALL_17
0x4008a48	        0x48895048	             mov qword [rax + 0x48], rdx	      3521	elf.c	FUNCTION_49	IF_7	CALL_17
0x4008a4c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3522	elf.c	FUNCTION_49	IF_7	IF_8
0x4008a53	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3522	elf.c	FUNCTION_49	IF_7	IF_8
0x4008a5a	          0x4885c0	                           test rax, rax	      3522	elf.c	FUNCTION_49	IF_7	IF_8
0x4008a5d	            0x750f	                           jne 0x4008a6e	      3522	elf.c	FUNCTION_49	IF_7	IF_8
0x4008a5f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3524	elf.c	FUNCTION_49	IF_7	IF_8
0x4008a63	    0xc70001000000	                      mov dword [rax], 1	      3524	elf.c	FUNCTION_49	IF_7	IF_8
0x4008a69	      0xe97a020000	                           jmp 0x4008ce8	      3525	elf.c	FUNCTION_49	IF_7	IF_8
0x4008a6e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3529	elf.c	FUNCTION_49
0x4008a75	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	      3529	elf.c	FUNCTION_49
0x4008a7c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3529	elf.c	FUNCTION_49
0x4008a83	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3529	elf.c	FUNCTION_49
0x4008a87	          0x4801d0	                            add rax, rdx	      3529	elf.c	FUNCTION_49
0x4008a8a	        0x48894598	             mov qword [rbp - 0x68], rax	      3529	elf.c	FUNCTION_49
0x4008a8e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3534	elf.c	FUNCTION_49	CALL_18
0x4008a95	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3534	elf.c	FUNCTION_49	CALL_18
0x4008a9c	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3534	elf.c	FUNCTION_49	CALL_18
0x4008aa3	        0x48894590	             mov qword [rbp - 0x70], rax	      3534	elf.c	FUNCTION_49	CALL_18
0x4008aa7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3534	elf.c	FUNCTION_49	CALL_18
0x4008aab	        0x488945e8	             mov qword [rbp - 0x18], rax	      3534	elf.c	FUNCTION_49	CALL_18
0x4008aaf	      0xe9c5010000	                           jmp 0x4008c79	      3540	elf.c	FUNCTION_49	WHILE_2
0x4008ab4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3544	elf.c	FUNCTION_49	WHILE_2
0x4008ab8	        0x488945b8	             mov qword [rbp - 0x48], rax	      3544	elf.c	FUNCTION_49	WHILE_2
0x4008abc	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      3545	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4008ac0	            0x750c	                           jne 0x4008ace	      3545	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4008ac2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3546	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4008ac6	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3546	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4008aca	        0x488945b8	             mov qword [rbp - 0x48], rax	      3546	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4008ace	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3547	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008ad3	     0xf8480010000	                            je 0x4008c59	      3547	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008ad9	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      3548	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008ae1	     0xf8472010000	                            je 0x4008c59	      3548	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008ae7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3550	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_19
0x4008aeb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3550	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_19
0x4008af2	        0x488945f0	             mov qword [rbp - 0x10], rax	      3550	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_19
0x4008af6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3551	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_20
0x4008afa	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3551	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_20
0x4008b01	        0x488945f8	                mov qword [rbp - 8], rax	      3551	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_20
0x4008b05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3553	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b09	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3553	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b0d	          0x4885c0	                           test rax, rax	      3553	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b10	     0xf8481000000	                            je 0x4008b97	      3553	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b16	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      3554	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b1a	            0x7533	                           jne 0x4008b4f	      3554	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3555	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b20	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3555	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b24	          0x4885c0	                           test rax, rax	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b27	            0x741d	                            je 0x4008b46	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b29	        0x488b45f8	                mov rax, qword [rbp - 8]	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b2d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b31	        0x488b4008	                mov rax, qword [rax + 8]	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b35	      0x2500020000	                          and eax, 0x200	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b3a	          0x4885c0	                           test rax, rax	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b3d	            0x7407	                            je 0x4008b46	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b3f	      0xb801000000	                              mov eax, 1	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b44	            0xeb05	                           jmp 0x4008b4b	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b46	      0xb800000000	                              mov eax, 0	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b4b	            0x85c0	                           test eax, eax	      3555	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b4d	            0x7448	                            je 0x4008b97	      3555	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b53	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b57	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b5b	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b5f	        0x488b5208	                mov rdx, qword [rdx + 8]	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b63	          0x80ce02	                                or dh, 2	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b66	        0x48895008	                mov qword [rax + 8], rdx	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b6a	      0x48836d9804	               sub qword [rbp - 0x68], 4	      3559	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b6f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b76	        0x488b4008	                mov rax, qword [rax + 8]	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b7a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b81	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b85	          0x8b5264	            mov edx, dword [rdx + 0x64] 	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b88	          0x4863d2	                         movsxd rdx, edx	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b8b	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b8f	          0x4889ce	                            mov rsi, rcx	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b92	          0x4889d7	                            mov rdi, rdx	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b95	            0xffd0	                                call rax	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4008b97	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008b9b	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008b9f	          0x4885c0	                           test rax, rax	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008ba2	     0xf8481000000	                            je 0x4008c29	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008ba8	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      3563	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bac	            0x7533	                           jne 0x4008be1	      3563	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bae	        0x488b45f8	                mov rax, qword [rbp - 8]	      3564	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bb2	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3564	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bb6	          0x4885c0	                           test rax, rax	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bb9	            0x741d	                            je 0x4008bd8	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bbb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bbf	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bc3	        0x488b4008	                mov rax, qword [rax + 8]	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bc7	      0x2500020000	                          and eax, 0x200	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bcc	          0x4885c0	                           test rax, rax	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bcf	            0x7407	                            je 0x4008bd8	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bd1	      0xb801000000	                              mov eax, 1	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bd6	            0xeb05	                           jmp 0x4008bdd	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bd8	      0xb800000000	                              mov eax, 0	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bdd	            0x85c0	                           test eax, eax	      3564	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bdf	            0x7448	                            je 0x4008c29	      3564	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008be1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008be5	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008be9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bed	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bf1	        0x488b5208	                mov rdx, qword [rdx + 8]	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bf5	          0x80ce02	                                or dh, 2	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bf8	        0x48895008	                mov qword [rax + 8], rdx	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008bfc	      0x48836d9804	               sub qword [rbp - 0x68], 4	      3568	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c01	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c08	        0x488b4008	                mov rax, qword [rax + 8]	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c0c	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c13	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c17	          0x8b527c	            mov edx, dword [rdx + 0x7c] 	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c1a	          0x4863d2	                         movsxd rdx, edx	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c1d	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c21	          0x4889ce	                            mov rsi, rcx	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c24	          0x4889d7	                            mov rdi, rdx	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c27	            0xffd0	                                call rax	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4008c29	      0x48836d9804	               sub qword [rbp - 0x68], 4	      3571	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c2e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c35	        0x488b4008	                mov rax, qword [rax + 8]	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c39	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c40	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c44	    0x8b9288000000	            mov edx, dword [rdx + 0x88] 	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c4a	          0x4863d2	                         movsxd rdx, edx	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c4d	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c51	          0x4889ce	                            mov rsi, rcx	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c54	          0x4889d7	                            mov rdi, rdx	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c57	            0xffd0	                                call rax	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4008c59	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3574	elf.c	FUNCTION_49	WHILE_2	CALL_21
0x4008c5d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3574	elf.c	FUNCTION_49	WHILE_2	CALL_21
0x4008c64	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3574	elf.c	FUNCTION_49	WHILE_2	CALL_21
0x4008c6b	        0x48894590	             mov qword [rbp - 0x70], rax	      3574	elf.c	FUNCTION_49	WHILE_2	CALL_21
0x4008c6f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3575	elf.c	FUNCTION_49	WHILE_2	IF_13
0x4008c73	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3575	elf.c	FUNCTION_49	WHILE_2	IF_13
0x4008c77	            0x740d	                            je 0x4008c86	      3575	elf.c	FUNCTION_49	WHILE_2	IF_13
0x4008c79	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3540	elf.c	FUNCTION_49	WHILE_2
0x4008c7e	     0xf8530feffff	                           jne 0x4008ab4	      3540	elf.c	FUNCTION_49	WHILE_2
0x4008c84	            0xeb01	                           jmp 0x4008c87	      3540	elf.c	FUNCTION_49	WHILE_2
0x4008c86	              0x90	                                     nop	      3576	elf.c	FUNCTION_49	WHILE_2	IF_13
0x4008c87	      0x48836d9804	               sub qword [rbp - 0x68], 4	      3579	elf.c	FUNCTION_49
0x4008c8c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3580	elf.c	FUNCTION_49	CALL_22
0x4008c93	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3580	elf.c	FUNCTION_49	CALL_22
0x4008c9a	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      3580	elf.c	FUNCTION_49	CALL_22
0x4008c9e	            0x740f	                            je 0x4008caf	      3580	elf.c	FUNCTION_49	CALL_22
0x4008ca0	      0xbefc0d0000	                          mov esi, 0xdfc	      3580	elf.c	FUNCTION_49	CALL_22
0x4008ca5	      0xbf00000000	                              mov edi, 0	      3580	elf.c	FUNCTION_49	CALL_22
0x4008caa	      0xe800000000	                          call 0x4008caf	      3580	elf.c	FUNCTION_49	CALL_22
0x4008caf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3582	elf.c	FUNCTION_49
0x4008cb6	        0x488b4008	                mov rax, qword [rax + 8]	      3582	elf.c	FUNCTION_49
0x4008cba	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3582	elf.c	FUNCTION_49
0x4008cc1	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3582	elf.c	FUNCTION_49
0x4008cc8	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      3582	elf.c	FUNCTION_49
0x4008ccb	    0x81e200000200	                        and edx, 0x20000	      3582	elf.c	FUNCTION_49
0x4008cd1	            0x85d2	                           test edx, edx	      3582	elf.c	FUNCTION_49
0x4008cd3	           0xf95c2	                                setne dl	      3582	elf.c	FUNCTION_49
0x4008cd6	           0xfb6d2	                           movzx edx, dl	      3582	elf.c	FUNCTION_49
0x4008cd9	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3582	elf.c	FUNCTION_49
0x4008cdd	          0x4889ce	                            mov rsi, rcx	      3582	elf.c	FUNCTION_49
0x4008ce0	          0x4889d7	                            mov rdi, rdx	      3582	elf.c	FUNCTION_49
0x4008ce3	            0xffd0	                                call rax	      3582	elf.c	FUNCTION_49
0x4008ce5	            0xeb01	                           jmp 0x4008ce8	      3582	elf.c	FUNCTION_49
0x4008ce7	              0x90	                                     nop	      3460	elf.c	FUNCTION_49	IF_1
0x4008ce8	              0xc9	                                   leave	      3583	elf.c	FUNCTION_49
0x4008ce9	              0xc3	                                     ret	      3583	elf.c	FUNCTION_49
_bfd_elf_section_offset	ELSE,0:DO,0:CALL,5:WHILE,0:FOR,0:IF,1:SWITCH,1:functions,0	67
0x401afc5	              0x55	                                push rbp	     11332	elf.c	FUNCTION_198
0x401afc6	          0x4889e5	                            mov rbp, rsp	     11332	elf.c	FUNCTION_198
0x401afc9	              0x53	                                push rbx	     11332	elf.c	FUNCTION_198
0x401afca	        0x4883ec38	                           sub rsp, 0x38	     11332	elf.c	FUNCTION_198
0x401afce	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     11332	elf.c	FUNCTION_198
0x401afd2	        0x488975d0	             mov qword [rbp - 0x30], rsi	     11332	elf.c	FUNCTION_198
0x401afd6	        0x488955c8	             mov qword [rbp - 0x38], rdx	     11332	elf.c	FUNCTION_198
0x401afda	        0x48894dc0	             mov qword [rbp - 0x40], rcx	     11332	elf.c	FUNCTION_198
0x401afde	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401afe2	         0xfb74024	           movzx eax, word [rax + 0x24] 	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401afe6	        0x66c1e807	                               shr ax, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401afea	          0x83e007	                              and eax, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401afed	           0xfb6c0	                           movzx eax, al	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401aff0	          0x83f801	                              cmp eax, 1	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401aff3	            0x7407	                            je 0x401affc	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401aff5	          0x83f803	                              cmp eax, 3	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401aff8	            0x742c	                            je 0x401b026	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401affa	            0xeb44	                           jmp 0x401b040	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401affc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b000	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b007	    0x488b88d80000	            mov rcx, qword [rax + 0xd8] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b00e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b012	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b016	          0x4889ce	                            mov rsi, rcx	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b019	          0x4889c7	                            mov rdi, rax	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b01c	      0xe800000000	                          call 0x401b021	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b021	      0xe98a000000	                           jmp 0x401b0b0	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401b026	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x401b02a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x401b02e	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x401b032	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x401b036	          0x4889c7	                            mov rdi, rax	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x401b039	      0xe800000000	                          call 0x401b03e	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x401b03e	            0xeb70	                           jmp 0x401b0b0	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x401b040	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b044	          0x8b4020	            mov eax, dword [rax + 0x20] 	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b047	      0x2500000004	        and eax, loc.imp.bfd_sprintf_vma	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b04c	            0x85c0	                           test eax, eax	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b04e	            0x745c	                            je 0x401b0ac	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b050	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11345	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_4
0x401b054	        0x488b4008	                mov rax, qword [rax + 8]	     11345	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_4
0x401b058	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11345	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_4
0x401b05f	        0x488945e0	             mov qword [rbp - 0x20], rax	     11345	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_4
0x401b063	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b067	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b06e	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b072	          0xc0e803	                               shr al, 3	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b075	           0xfb6c0	                           movzx eax, al	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b078	        0x488945e8	             mov qword [rbp - 0x18], rax	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401b07c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b080	        0x488b4038	            mov rax, qword [rax + 0x38] 	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b084	        0x482b45e8	             sub rax, qword [rbp - 0x18]	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b088	          0x4889c3	                            mov rbx, rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b08b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b08f	          0x4889c7	                            mov rdi, rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b092	      0xe800000000	                          call 0x401b097	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b097	            0x89c7	                            mov edi, eax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b099	          0x4889d8	                            mov rax, rbx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b09c	      0xba00000000	                              mov edx, 0	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b0a1	          0x48f7f7	                                 div rdi	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b0a4	        0x482b45c0	             sub rax, qword [rbp - 0x40]	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b0a8	        0x488945c0	             mov qword [rbp - 0x40], rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401b0ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11352	elf.c	FUNCTION_198	SWITCH_1
0x401b0b0	        0x4883c438	                           add rsp, 0x38	     11354	elf.c	FUNCTION_198
0x401b0b4	              0x5b	                                 pop rbx	     11354	elf.c	FUNCTION_198
0x401b0b5	              0x5d	                                 pop rbp	     11354	elf.c	FUNCTION_198
0x401b0b6	              0xc3	                                     ret	     11354	elf.c	FUNCTION_198
elfcore_make_note_pseudosection	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	16
0x4016bf9	              0x55	                                push rbp	      9191	elf.c	FUNCTION_116
0x4016bfa	          0x4889e5	                            mov rbp, rsp	      9191	elf.c	FUNCTION_116
0x4016bfd	        0x4883ec20	                           sub rsp, 0x20	      9191	elf.c	FUNCTION_116
0x4016c01	        0x48897df8	                mov qword [rbp - 8], rdi	      9191	elf.c	FUNCTION_116
0x4016c05	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9191	elf.c	FUNCTION_116
0x4016c09	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9191	elf.c	FUNCTION_116
0x4016c0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c11	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c19	        0x488b5008	                mov rdx, qword [rax + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c1d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c21	        0x488b45f8	                mov rax, qword [rbp - 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c25	          0x4889c7	                            mov rdi, rax	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c28	      0xe800000000	                          call 0x4016c2d	      9192	elf.c	FUNCTION_116	CALL_1
0x4016c2d	              0xc9	                                   leave	      9194	elf.c	FUNCTION_116
0x4016c2e	              0xc3	                                     ret	      9194	elf.c	FUNCTION_116
_bfd_elf_is_function_type	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x401b737	              0x55	                                push rbp	     11532	elf.c	FUNCTION_202
0x401b738	          0x4889e5	                            mov rbp, rsp	     11532	elf.c	FUNCTION_202
0x401b73b	          0x897dfc	                mov dword [rbp - 4], edi	     11532	elf.c	FUNCTION_202
0x401b73e	        0x837dfc02	                  cmp dword [rbp - 4], 2	     11534	elf.c	FUNCTION_202
0x401b742	            0x7406	                            je 0x401b74a	     11534	elf.c	FUNCTION_202
0x401b744	        0x837dfc0a	                cmp dword [rbp - 4], 0xa	     11534	elf.c	FUNCTION_202
0x401b748	            0x7507	                           jne 0x401b751	     11534	elf.c	FUNCTION_202
0x401b74a	      0xb801000000	                              mov eax, 1	     11534	elf.c	FUNCTION_202
0x401b74f	            0xeb05	                           jmp 0x401b756	     11534	elf.c	FUNCTION_202
0x401b751	      0xb800000000	                              mov eax, 0	     11534	elf.c	FUNCTION_202
0x401b756	              0x5d	                                 pop rbp	     11535	elf.c	FUNCTION_202
0x401b757	              0xc3	                                     ret	     11535	elf.c	FUNCTION_202
_bfd_elf_get_symtab_upper_bound	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	30
0x40149f3	              0x55	                                push rbp	      8113	elf.c	FUNCTION_89
0x40149f4	          0x4889e5	                            mov rbp, rsp	      8113	elf.c	FUNCTION_89
0x40149f7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8113	elf.c	FUNCTION_89
0x40149fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8116	elf.c	FUNCTION_89	CALL_1
0x40149ff	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8116	elf.c	FUNCTION_89	CALL_1
0x4014a06	        0x4883c068	                           add rax, 0x68	      8116	elf.c	FUNCTION_89	CALL_1
0x4014a0a	        0x488945f0	             mov qword [rbp - 0x10], rax	      8116	elf.c	FUNCTION_89	CALL_1
0x4014a0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a12	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a16	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a1a	        0x488b5208	                mov rdx, qword [rdx + 8]	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a1e	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a25	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a2c	         0xfb65205	               movzx edx, byte [rdx + 5]	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a30	           0xfb6ca	                           movzx ecx, dl	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a33	      0xba00000000	                              mov edx, 0	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a38	          0x48f7f1	                                 div rcx	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a3b	        0x488945f8	                mov qword [rbp - 8], rax	      8118	elf.c	FUNCTION_89	CALL_2
0x4014a3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8119	elf.c	FUNCTION_89
0x4014a43	        0x4883c001	                              add rax, 1	      8119	elf.c	FUNCTION_89
0x4014a47	        0x48c1e003	                              shl rax, 3	      8119	elf.c	FUNCTION_89
0x4014a4b	        0x488945e8	             mov qword [rbp - 0x18], rax	      8119	elf.c	FUNCTION_89
0x4014a4f	      0x48837df800	                  cmp qword [rbp - 8], 0	      8120	elf.c	FUNCTION_89	IF_1
0x4014a54	            0x7e0c	                           jle 0x4014a62	      8120	elf.c	FUNCTION_89	IF_1
0x4014a56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8121	elf.c	FUNCTION_89	IF_1
0x4014a5a	        0x4883e808	                              sub rax, 8	      8121	elf.c	FUNCTION_89	IF_1
0x4014a5e	        0x488945e8	             mov qword [rbp - 0x18], rax	      8121	elf.c	FUNCTION_89	IF_1
0x4014a62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8123	elf.c	FUNCTION_89
0x4014a66	              0x5d	                                 pop rbp	      8124	elf.c	FUNCTION_89
0x4014a67	              0xc3	                                     ret	      8124	elf.c	FUNCTION_89
elfcore_write_s390_gs_cb	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a0b5	              0x55	                                push rbp	     10959	elf.c	FUNCTION_184
0x401a0b6	          0x4889e5	                            mov rbp, rsp	     10959	elf.c	FUNCTION_184
0x401a0b9	        0x4883ec40	                           sub rsp, 0x40	     10959	elf.c	FUNCTION_184
0x401a0bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10959	elf.c	FUNCTION_184
0x401a0c1	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10959	elf.c	FUNCTION_184
0x401a0c5	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10959	elf.c	FUNCTION_184
0x401a0c9	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10959	elf.c	FUNCTION_184
0x401a0cd	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10959	elf.c	FUNCTION_184
0x401a0d1	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10960	elf.c	FUNCTION_184
0x401a0d9	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0dd	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0e1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0e5	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0ed	        0x4883ec08	                              sub rsp, 8	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0f1	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0f4	              0x57	                                push rdi	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0f5	          0x4d89c1	                              mov r9, r8	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0f8	    0x41b80b030000	                          mov r8d, 0x30b	     10961	elf.c	FUNCTION_184	CALL_1
0x401a0fe	          0x4889c7	                            mov rdi, rax	     10961	elf.c	FUNCTION_184	CALL_1
0x401a101	      0xe800000000	                          call 0x401a106	     10961	elf.c	FUNCTION_184	CALL_1
0x401a106	        0x4883c410	                           add rsp, 0x10	     10961	elf.c	FUNCTION_184	CALL_1
0x401a10a	              0xc9	                                   leave	     10964	elf.c	FUNCTION_184
0x401a10b	              0xc3	                                     ret	     10964	elf.c	FUNCTION_184
elfcore_grok_nto_status	ELSE,0:DO,0:CALL,10:WHILE,0:FOR,0:IF,5:SWITCH,0:functions,0	138
0x4018ca4	              0x55	                                push rbp	     10306	elf.c	FUNCTION_157
0x4018ca5	          0x4889e5	                            mov rbp, rsp	     10306	elf.c	FUNCTION_157
0x4018ca8	              0x53	                                push rbx	     10306	elf.c	FUNCTION_157
0x4018ca9	    0x4881ecb80000	                           sub rsp, 0xb8	     10306	elf.c	FUNCTION_157
0x4018cb0	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	     10306	elf.c	FUNCTION_157
0x4018cb7	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	     10306	elf.c	FUNCTION_157
0x4018cbe	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	     10306	elf.c	FUNCTION_157
0x4018cc5	    0x64488b042528	                mov rax, qword fs:[0x28]	     10306	elf.c	FUNCTION_157
0x4018cce	        0x488945e8	             mov qword [rbp - 0x18], rax	     10306	elf.c	FUNCTION_157
0x4018cd2	            0x31c0	                            xor eax, eax	     10306	elf.c	FUNCTION_157
0x4018cd4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     10307	elf.c	FUNCTION_157
0x4018cdb	        0x488b4020	            mov rax, qword [rax + 0x20] 	     10307	elf.c	FUNCTION_157
0x4018cdf	    0x48898568ffff	             mov qword [rbp - 0x98], rax	     10307	elf.c	FUNCTION_157
0x4018ce6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     10314	elf.c	FUNCTION_157	IF_1
0x4018ced	        0x488b4008	                mov rax, qword [rax + 8]	     10314	elf.c	FUNCTION_157	IF_1
0x4018cf1	        0x4883f80f	                            cmp rax, 0xf	     10314	elf.c	FUNCTION_157	IF_1
0x4018cf5	            0x770a	                            ja 0x4018d01	     10314	elf.c	FUNCTION_157	IF_1
0x4018cf7	      0xb800000000	                              mov eax, 0	     10315	elf.c	FUNCTION_157	IF_1
0x4018cfc	      0xe929020000	                           jmp 0x4018f2a	     10315	elf.c	FUNCTION_157	IF_1
0x4018d01	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d08	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d0f	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d16	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d1d	        0x488b4008	                mov rax, qword [rax + 8]	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d21	        0x488b4038	            mov rax, qword [rax + 0x38] 	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d25	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d2c	          0x4889d7	                            mov rdi, rdx	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d2f	            0xffd0	                                call rax	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d31	          0x894304	                mov dword [rbx + 4], eax	     10318	elf.c	FUNCTION_157	CALL_1
0x4018d34	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10321	elf.c	FUNCTION_157
0x4018d3b	        0x488b4008	                mov rax, qword [rax + 8]	     10321	elf.c	FUNCTION_157
0x4018d3f	        0x488b4038	            mov rax, qword [rax + 0x38] 	     10321	elf.c	FUNCTION_157
0x4018d43	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	     10321	elf.c	FUNCTION_157
0x4018d4a	        0x4883c204	                              add rdx, 4	     10321	elf.c	FUNCTION_157
0x4018d4e	          0x4889d7	                            mov rdi, rdx	     10321	elf.c	FUNCTION_157
0x4018d51	            0xffd0	                                call rax	     10321	elf.c	FUNCTION_157
0x4018d53	          0x4889c2	                            mov rdx, rax	     10321	elf.c	FUNCTION_157
0x4018d56	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10321	elf.c	FUNCTION_157
0x4018d5d	          0x488910	                    mov qword [rax], rdx	     10321	elf.c	FUNCTION_157
0x4018d60	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10324	elf.c	FUNCTION_157
0x4018d67	        0x488b4008	                mov rax, qword [rax + 8]	     10324	elf.c	FUNCTION_157
0x4018d6b	        0x488b4038	            mov rax, qword [rax + 0x38] 	     10324	elf.c	FUNCTION_157
0x4018d6f	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	     10324	elf.c	FUNCTION_157
0x4018d76	        0x4883c208	                              add rdx, 8	     10324	elf.c	FUNCTION_157
0x4018d7a	          0x4889d7	                            mov rdi, rdx	     10324	elf.c	FUNCTION_157
0x4018d7d	            0xffd0	                                call rax	     10324	elf.c	FUNCTION_157
0x4018d7f	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	     10324	elf.c	FUNCTION_157
0x4018d85	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10327	elf.c	FUNCTION_157	IF_2
0x4018d8c	        0x488b4008	                mov rax, qword [rax + 8]	     10327	elf.c	FUNCTION_157	IF_2
0x4018d90	        0x488b4050	            mov rax, qword [rax + 0x50] 	     10327	elf.c	FUNCTION_157	IF_2
0x4018d94	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	     10327	elf.c	FUNCTION_157	IF_2
0x4018d9b	        0x4883c20e	                            add rdx, 0xe	     10327	elf.c	FUNCTION_157	IF_2
0x4018d9f	          0x4889d7	                            mov rdi, rdx	     10327	elf.c	FUNCTION_157	IF_2
0x4018da2	            0xffd0	                                call rax	     10327	elf.c	FUNCTION_157	IF_2
0x4018da4	    0x66898562ffff	               mov word [rbp - 0x9e], ax	     10327	elf.c	FUNCTION_157	IF_2
0x4018dab	    0x6683bd62ffff	                cmp word [rbp - 0x9e], 0	     10327	elf.c	FUNCTION_157	IF_2
0x4018db3	            0x7e40	                           jle 0x4018df5	     10327	elf.c	FUNCTION_157	IF_2
0x4018db5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x4018dbc	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x4018dc3	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x4018dca	     0xfbf9562ffff	            movsx edx, word [rbp - 0x9e]	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x4018dd1	            0x8910	                    mov dword [rax], edx	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x4018dd3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x4018dda	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x4018de1	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x4018de8	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x4018def	          0x488b12	                    mov rdx, qword [rdx]	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x4018df2	          0x895008	                mov dword [rax + 8], edx	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x4018df5	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	     10336	elf.c	FUNCTION_157	IF_3
0x4018dfb	      0x2580000000	                           and eax, 0x80	     10336	elf.c	FUNCTION_157	IF_3
0x4018e00	            0x85c0	                           test eax, eax	     10336	elf.c	FUNCTION_157	IF_3
0x4018e02	            0x7422	                            je 0x4018e26	     10336	elf.c	FUNCTION_157	IF_3
0x4018e04	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10337	elf.c	FUNCTION_157	CALL_4
0x4018e0b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10337	elf.c	FUNCTION_157	CALL_4
0x4018e12	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10337	elf.c	FUNCTION_157	CALL_4
0x4018e19	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	     10337	elf.c	FUNCTION_157	CALL_4
0x4018e20	          0x488b12	                    mov rdx, qword [rdx]	     10337	elf.c	FUNCTION_157	CALL_4
0x4018e23	          0x895008	                mov dword [rax + 8], edx	     10337	elf.c	FUNCTION_157	CALL_4
0x4018e26	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10340	elf.c	FUNCTION_157	CALL_5
0x4018e2d	          0x488b10	                    mov rdx, qword [rax]	     10340	elf.c	FUNCTION_157	CALL_5
0x4018e30	        0x488d4580	                   lea rax, [rbp - 0x80]	     10340	elf.c	FUNCTION_157	CALL_5
0x4018e34	      0xbe00000000	                              mov esi, 0	     10340	elf.c	FUNCTION_157	CALL_5
0x4018e39	          0x4889c7	                            mov rdi, rax	     10340	elf.c	FUNCTION_157	CALL_5
0x4018e3c	      0xb800000000	                              mov eax, 0	     10340	elf.c	FUNCTION_157	CALL_5
0x4018e41	      0xe800000000	                          call 0x4018e46	     10340	elf.c	FUNCTION_157	CALL_5
0x4018e46	        0x488d4580	                   lea rax, [rbp - 0x80]	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e4a	          0x4889c7	                            mov rdi, rax	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e4d	      0xe800000000	                          call 0x4018e52	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e52	        0x488d5001	                      lea rdx, [rax + 1]	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e56	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e5d	          0x4889d6	                            mov rsi, rdx	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e60	          0x4889c7	                            mov rdi, rax	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e63	      0xe800000000	                          call 0x4018e68	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e68	    0x48898570ffff	             mov qword [rbp - 0x90], rax	     10342	elf.c	FUNCTION_157	CALL_7
0x4018e6f	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	     10343	elf.c	FUNCTION_157	IF_4
0x4018e77	            0x750a	                           jne 0x4018e83	     10343	elf.c	FUNCTION_157	IF_4
0x4018e79	      0xb800000000	                              mov eax, 0	     10344	elf.c	FUNCTION_157	IF_4
0x4018e7e	      0xe9a7000000	                           jmp 0x4018f2a	     10344	elf.c	FUNCTION_157	IF_4
0x4018e83	        0x488d5580	                   lea rdx, [rbp - 0x80]	     10345	elf.c	FUNCTION_157	CALL_8
0x4018e87	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     10345	elf.c	FUNCTION_157	CALL_8
0x4018e8e	          0x4889d6	                            mov rsi, rdx	     10345	elf.c	FUNCTION_157	CALL_8
0x4018e91	          0x4889c7	                            mov rdi, rax	     10345	elf.c	FUNCTION_157	CALL_8
0x4018e94	      0xe800000000	                          call 0x4018e99	     10345	elf.c	FUNCTION_157	CALL_8
0x4018e99	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	     10347	elf.c	FUNCTION_157	CALL_9
0x4018ea0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10347	elf.c	FUNCTION_157	CALL_9
0x4018ea7	      0xba00010000	                          mov edx, 0x100	     10347	elf.c	FUNCTION_157	CALL_9
0x4018eac	          0x4889ce	                            mov rsi, rcx	     10347	elf.c	FUNCTION_157	CALL_9
0x4018eaf	          0x4889c7	                            mov rdi, rax	     10347	elf.c	FUNCTION_157	CALL_9
0x4018eb2	      0xe800000000	                          call 0x4018eb7	     10347	elf.c	FUNCTION_157	CALL_9
0x4018eb7	    0x48898578ffff	             mov qword [rbp - 0x88], rax	     10347	elf.c	FUNCTION_157	CALL_9
0x4018ebe	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	     10348	elf.c	FUNCTION_157	IF_5
0x4018ec6	            0x7507	                           jne 0x4018ecf	     10348	elf.c	FUNCTION_157	IF_5
0x4018ec8	      0xb800000000	                              mov eax, 0	     10349	elf.c	FUNCTION_157	IF_5
0x4018ecd	            0xeb5b	                           jmp 0x4018f2a	     10349	elf.c	FUNCTION_157	IF_5
0x4018ecf	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     10351	elf.c	FUNCTION_157
0x4018ed6	        0x488b5008	                mov rdx, qword [rax + 8]	     10351	elf.c	FUNCTION_157
0x4018eda	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     10351	elf.c	FUNCTION_157
0x4018ee1	        0x48895038	             mov qword [rax + 0x38], rdx	     10351	elf.c	FUNCTION_157
0x4018ee5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     10352	elf.c	FUNCTION_157
0x4018eec	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10352	elf.c	FUNCTION_157
0x4018ef0	          0x4889c2	                            mov rdx, rax	     10352	elf.c	FUNCTION_157
0x4018ef3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     10352	elf.c	FUNCTION_157
0x4018efa	    0x488990900000	             mov qword [rax + 0x90], rdx	     10352	elf.c	FUNCTION_157
0x4018f01	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     10353	elf.c	FUNCTION_157
0x4018f08	    0xc74070020000	               mov dword [rax + 0x70], 2	     10353	elf.c	FUNCTION_157
0x4018f0f	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	     10355	elf.c	FUNCTION_157	CALL_10
0x4018f16	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	     10355	elf.c	FUNCTION_157	CALL_10
0x4018f1d	      0xbe00000000	                              mov esi, 0	     10355	elf.c	FUNCTION_157	CALL_10
0x4018f22	          0x4889c7	                            mov rdi, rax	     10355	elf.c	FUNCTION_157	CALL_10
0x4018f25	      0xe8a2d8ffff	        call sym.elfcore_maybe_make_sect	     10355	elf.c	FUNCTION_157	CALL_10
0x4018f2a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	     10356	elf.c	FUNCTION_157
0x4018f2e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10356	elf.c	FUNCTION_157
0x4018f37	            0x7405	                            je 0x4018f3e	     10356	elf.c	FUNCTION_157
0x4018f39	      0xe800000000	                          call 0x4018f3e	     10356	elf.c	FUNCTION_157
0x4018f3e	    0x4881c4b80000	                           add rsp, 0xb8	     10356	elf.c	FUNCTION_157
0x4018f45	              0x5b	                                 pop rbx	     10356	elf.c	FUNCTION_157
0x4018f46	              0x5d	                                 pop rbp	     10356	elf.c	FUNCTION_157
0x4018f47	              0xc3	                                     ret	     10356	elf.c	FUNCTION_157
elfcore_write_aarch_hw_watch	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a268	              0x55	                                push rbp	     11021	elf.c	FUNCTION_189
0x401a269	          0x4889e5	                            mov rbp, rsp	     11021	elf.c	FUNCTION_189
0x401a26c	        0x4883ec40	                           sub rsp, 0x40	     11021	elf.c	FUNCTION_189
0x401a270	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11021	elf.c	FUNCTION_189
0x401a274	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11021	elf.c	FUNCTION_189
0x401a278	        0x488955d8	             mov qword [rbp - 0x28], rdx	     11021	elf.c	FUNCTION_189
0x401a27c	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     11021	elf.c	FUNCTION_189
0x401a280	        0x448945cc	             mov dword [rbp - 0x34], r8d	     11021	elf.c	FUNCTION_189
0x401a284	    0x48c745f80000	                  mov qword [rbp - 8], 0	     11022	elf.c	FUNCTION_189
0x401a28c	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     11023	elf.c	FUNCTION_189	CALL_1
0x401a290	        0x488b4df8	                mov rcx, qword [rbp - 8]	     11023	elf.c	FUNCTION_189	CALL_1
0x401a294	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     11023	elf.c	FUNCTION_189	CALL_1
0x401a298	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     11023	elf.c	FUNCTION_189	CALL_1
0x401a29c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2a0	        0x4883ec08	                              sub rsp, 8	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2a4	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2a7	              0x57	                                push rdi	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2a8	          0x4d89c1	                              mov r9, r8	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2ab	    0x41b803040000	                          mov r8d, 0x403	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2b1	          0x4889c7	                            mov rdi, rax	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2b4	      0xe800000000	                          call 0x401a2b9	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2b9	        0x4883c410	                           add rsp, 0x10	     11023	elf.c	FUNCTION_189	CALL_1
0x401a2bd	              0xc9	                                   leave	     11025	elf.c	FUNCTION_189
0x401a2be	              0xc3	                                     ret	     11025	elf.c	FUNCTION_189
get_program_header_size	ELSE,0:DO,0:CALL,12:WHILE,1:FOR,3:IF,14:SWITCH,0:functions,0	208
0x400a998	              0x55	                                push rbp	      4325	elf.c	FUNCTION_60
0x400a999	          0x4889e5	                            mov rbp, rsp	      4325	elf.c	FUNCTION_60
0x400a99c	              0x53	                                push rbx	      4325	elf.c	FUNCTION_60
0x400a99d	        0x4883ec38	                           sub rsp, 0x38	      4325	elf.c	FUNCTION_60
0x400a9a1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4325	elf.c	FUNCTION_60
0x400a9a5	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4325	elf.c	FUNCTION_60
0x400a9a9	    0x48c745d80200	               mov qword [rbp - 0x28], 2	      4332	elf.c	FUNCTION_60
0x400a9b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4334	elf.c	FUNCTION_60	CALL_1
0x400a9b5	      0xbe00000000	                              mov esi, 0	      4334	elf.c	FUNCTION_60	CALL_1
0x400a9ba	          0x4889c7	                            mov rdi, rax	      4334	elf.c	FUNCTION_60	CALL_1
0x400a9bd	      0xe800000000	                          call 0x400a9c2	      4334	elf.c	FUNCTION_60	CALL_1
0x400a9c2	        0x488945e0	             mov qword [rbp - 0x20], rax	      4334	elf.c	FUNCTION_60	CALL_1
0x400a9c6	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4335	elf.c	FUNCTION_60	IF_1
0x400a9cb	            0x7413	                            je 0x400a9e0	      4335	elf.c	FUNCTION_60	IF_1
0x400a9cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4335	elf.c	FUNCTION_60	IF_1
0x400a9d1	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4335	elf.c	FUNCTION_60	IF_1
0x400a9d4	          0x83e002	                              and eax, 2	      4335	elf.c	FUNCTION_60	IF_1
0x400a9d7	            0x85c0	                           test eax, eax	      4335	elf.c	FUNCTION_60	IF_1
0x400a9d9	            0x7405	                            je 0x400a9e0	      4335	elf.c	FUNCTION_60	IF_1
0x400a9db	      0x488345d802	               add qword [rbp - 0x28], 2	      4341	elf.c	FUNCTION_60	IF_1
0x400a9e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400a9e4	      0xbe00000000	                              mov esi, 0	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400a9e9	          0x4889c7	                            mov rdi, rax	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400a9ec	      0xe800000000	                          call 0x400a9f1	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400a9f1	          0x4885c0	                           test rax, rax	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400a9f4	            0x7405	                            je 0x400a9fb	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400a9f6	      0x488345d801	               add qword [rbp - 0x28], 1	      4347	elf.c	FUNCTION_60	IF_2
0x400a9fb	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4350	elf.c	FUNCTION_60	IF_3
0x400aa00	            0x7414	                            je 0x400aa16	      4350	elf.c	FUNCTION_60	IF_3
0x400aa02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4350	elf.c	FUNCTION_60	IF_3
0x400aa06	         0xfb64003	               movzx eax, byte [rax + 3]	      4350	elf.c	FUNCTION_60	IF_3
0x400aa0a	          0x83e010	                           and eax, 0x10	      4350	elf.c	FUNCTION_60	IF_3
0x400aa0d	            0x84c0	                             test al, al	      4350	elf.c	FUNCTION_60	IF_3
0x400aa0f	            0x7405	                            je 0x400aa16	      4350	elf.c	FUNCTION_60	IF_3
0x400aa11	      0x488345d801	               add qword [rbp - 0x28], 1	      4353	elf.c	FUNCTION_60	IF_3
0x400aa16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400aa1a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400aa21	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400aa28	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400aa2c	          0x4885c0	                           test rax, rax	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400aa2f	            0x7405	                            je 0x400aa36	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400aa31	      0x488345d801	               add qword [rbp - 0x28], 1	      4359	elf.c	FUNCTION_60	IF_4
0x400aa36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x400aa3a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x400aa41	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x400aa48	          0x8b4054	            mov eax, dword [rax + 0x54] 	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x400aa4b	            0x85c0	                           test eax, eax	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x400aa4d	            0x7405	                            je 0x400aa54	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x400aa4f	      0x488345d801	               add qword [rbp - 0x28], 1	      4365	elf.c	FUNCTION_60	IF_5
0x400aa54	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4368	elf.c	FUNCTION_60	FOR_1
0x400aa58	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4368	elf.c	FUNCTION_60	FOR_1
0x400aa5f	        0x488945e0	             mov qword [rbp - 0x20], rax	      4368	elf.c	FUNCTION_60	FOR_1
0x400aa63	      0xe9aa000000	                           jmp 0x400ab12	      4368	elf.c	FUNCTION_60	FOR_1
0x400aa68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa6c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa6f	          0x83e002	                              and eax, 2	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa72	            0x85c0	                           test eax, eax	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa74	     0xf848c000000	                            je 0x400ab06	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa7a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa7e	          0x488b00	                    mov rax, qword [rax]	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa81	      0xba05000000	                              mov edx, 5	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa86	      0xbe00000000	                              mov esi, 0	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa8b	          0x4889c7	                            mov rdi, rax	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa8e	      0xe800000000	                          call 0x400aa93	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa93	            0x85c0	                           test eax, eax	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa95	            0x756f	                           jne 0x400ab06	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa97	      0x488345d801	               add qword [rbp - 0x28], 1	      4374	elf.c	FUNCTION_60	FOR_1	IF_6
0x400aa9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x400aaa0	          0x8b4070	            mov eax, dword [rax + 0x70] 	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x400aaa3	          0x83f802	                              cmp eax, 2	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x400aaa6	            0x755e	                           jne 0x400ab06	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x400aaa8	            0xeb0c	                           jmp 0x400aab6	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aaaa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4387	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aaae	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4387	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aab2	        0x488945e0	             mov qword [rbp - 0x20], rax	      4387	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aab6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aaba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aabe	          0x4885c0	                           test rax, rax	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aac1	            0x7443	                            je 0x400ab06	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aac3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aac7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aacb	          0x8b4070	            mov eax, dword [rax + 0x70] 	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aace	          0x83f802	                              cmp eax, 2	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aad1	            0x7533	                           jne 0x400ab06	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aad3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aad7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aadb	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aade	          0x83e002	                              and eax, 2	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aae1	            0x85c0	                           test eax, eax	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aae3	            0x7421	                            je 0x400ab06	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aae5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aae9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aaed	          0x488b00	                    mov rax, qword [rax]	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aaf0	      0xba05000000	                              mov edx, 5	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aaf5	      0xbe00000000	                              mov esi, 0	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aafa	          0x4889c7	                            mov rdi, rax	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400aafd	      0xe800000000	                          call 0x400ab02	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400ab02	            0x85c0	                           test eax, eax	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400ab04	            0x74a4	                            je 0x400aaaa	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400ab06	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4368	elf.c	FUNCTION_60	FOR_1
0x400ab0a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4368	elf.c	FUNCTION_60	FOR_1
0x400ab0e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4368	elf.c	FUNCTION_60	FOR_1
0x400ab12	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4368	elf.c	FUNCTION_60	FOR_1
0x400ab17	     0xf854bffffff	                           jne 0x400aa68	      4368	elf.c	FUNCTION_60	FOR_1
0x400ab1d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab21	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab28	        0x488945e0	             mov qword [rbp - 0x20], rax	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab2c	            0xeb23	                           jmp 0x400ab51	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab2e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x400ab32	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x400ab35	      0x2500040000	                          and eax, 0x400	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x400ab3a	            0x85c0	                           test eax, eax	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x400ab3c	            0x7407	                            je 0x400ab45	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x400ab3e	      0x488345d801	               add qword [rbp - 0x28], 1	      4396	elf.c	FUNCTION_60	FOR_2	IF_8
0x400ab43	            0xeb13	                           jmp 0x400ab58	      4397	elf.c	FUNCTION_60	FOR_2	IF_8
0x400ab45	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab49	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab4d	        0x488945e0	             mov qword [rbp - 0x20], rax	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab51	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab56	            0x75d6	                           jne 0x400ab2e	      4391	elf.c	FUNCTION_60	FOR_2
0x400ab58	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4401	elf.c	FUNCTION_60	CALL_5
0x400ab5c	        0x488b4008	                mov rax, qword [rax + 8]	      4401	elf.c	FUNCTION_60	CALL_5
0x400ab60	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4401	elf.c	FUNCTION_60	CALL_5
0x400ab67	        0x488945e8	             mov qword [rbp - 0x18], rax	      4401	elf.c	FUNCTION_60	CALL_5
0x400ab6b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4403	elf.c	FUNCTION_60	IF_9
0x400ab6f	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4403	elf.c	FUNCTION_60	IF_9
0x400ab72	          0xc1e805	                              shr eax, 5	      4403	elf.c	FUNCTION_60	IF_9
0x400ab75	      0x25ffff0f00	                        and eax, 0xfffff	      4403	elf.c	FUNCTION_60	IF_9
0x400ab7a	      0x2500010000	                          and eax, 0x100	      4403	elf.c	FUNCTION_60	IF_9
0x400ab7f	            0x85c0	                           test eax, eax	      4403	elf.c	FUNCTION_60	IF_9
0x400ab81	     0xf84c0000000	                            je 0x400ac47	      4403	elf.c	FUNCTION_60	IF_9
0x400ab87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x400ab8b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x400ab8f	          0x4889c7	                            mov rdi, rax	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x400ab92	      0xe800000000	                          call 0x400ab97	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x400ab97	          0x8945d0	             mov dword [rbp - 0x30], eax	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x400ab9a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400ab9e	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400aba5	        0x488945e0	             mov qword [rbp - 0x20], rax	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400aba9	      0xe98e000000	                           jmp 0x400ac3c	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400abae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x400abb2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x400abb9	        0x488b4008	                mov rax, qword [rax + 8]	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x400abbd	      0x2500000001	                      and eax, 0x1000000	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x400abc2	          0x4885c0	                           test rax, rax	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x400abc5	            0x7469	                            je 0x400ac30	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x400abc7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x400abcb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x400abd2	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x400abd5	      0x3d00100000	                         cmp eax, 0x1000	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x400abda	            0x7639	                           jbe 0x400ac15	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x400abdc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4416	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x400abe0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      4416	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x400abe7	          0x8b582c	            mov ebx, dword [rax + 0x2c] 	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x400abea	      0xbe00000000	                              mov esi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x400abef	      0xbf00000000	                              mov edi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x400abf4	      0xe800000000	                          call 0x400abf9	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x400abf9	          0x4889c7	                            mov rdi, rax	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x400abfc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x400ac00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x400ac04	            0x89d9	                            mov ecx, ebx	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x400ac06	          0x4889c6	                            mov rsi, rax	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x400ac09	      0xb800000000	                              mov eax, 0	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x400ac0e	      0xe800000000	                          call 0x400ac13	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x400ac13	            0xeb1b	                           jmp 0x400ac30	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x400ac15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400ac19	          0x8b4070	            mov eax, dword [rax + 0x70] 	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400ac1c	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400ac1f	            0x730a	                           jae 0x400ac2b	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400ac21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4421	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400ac25	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4421	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400ac28	          0x895070	             mov dword [rax + 0x70], edx	      4421	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400ac2b	      0x488345d801	               add qword [rbp - 0x28], 1	      4422	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10
0x400ac30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400ac34	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400ac38	        0x488945e0	             mov qword [rbp - 0x20], rax	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400ac3c	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400ac41	     0xf8567ffffff	                           jne 0x400abae	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400ac47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4427	elf.c	FUNCTION_60	IF_13
0x400ac4b	    0x488b80480100	           mov rax, qword [rax + 0x148] 	      4427	elf.c	FUNCTION_60	IF_13
0x400ac52	          0x4885c0	                           test rax, rax	      4427	elf.c	FUNCTION_60	IF_13
0x400ac55	            0x7441	                            je 0x400ac98	      4427	elf.c	FUNCTION_60	IF_13
0x400ac57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4431	elf.c	FUNCTION_60	IF_13
0x400ac5b	    0x488b80480100	           mov rax, qword [rax + 0x148] 	      4431	elf.c	FUNCTION_60	IF_13
0x400ac62	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4431	elf.c	FUNCTION_60	IF_13
0x400ac66	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4431	elf.c	FUNCTION_60	IF_13
0x400ac6a	          0x4889ce	                            mov rsi, rcx	      4431	elf.c	FUNCTION_60	IF_13
0x400ac6d	          0x4889d7	                            mov rdi, rdx	      4431	elf.c	FUNCTION_60	IF_13
0x400ac70	            0xffd0	                                call rax	      4431	elf.c	FUNCTION_60	IF_13
0x400ac72	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4431	elf.c	FUNCTION_60	IF_13
0x400ac75	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x400ac79	            0x7514	                           jne 0x400ac8f	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x400ac7b	      0xba00000000	                              mov edx, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x400ac80	      0xbe51110000	                         mov esi, 0x1151	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x400ac85	      0xbf00000000	                              mov edi, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x400ac8a	      0xe800000000	                          call 0x400ac8f	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x400ac8f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4434	elf.c	FUNCTION_60	IF_13
0x400ac92	            0x4898	                                    cdqe	      4434	elf.c	FUNCTION_60	IF_13
0x400ac94	        0x480145d8	            add qword [rbp - 0x28], rax 	      4434	elf.c	FUNCTION_60	IF_13
0x400ac98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4437	elf.c	FUNCTION_60
0x400ac9c	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      4437	elf.c	FUNCTION_60
0x400aca3	         0xfb64001	               movzx eax, byte [rax + 1]	      4437	elf.c	FUNCTION_60
0x400aca7	           0xfb6c0	                           movzx eax, al	      4437	elf.c	FUNCTION_60
0x400acaa	      0x480faf45d8	            imul rax, qword [rbp - 0x28]	      4437	elf.c	FUNCTION_60
0x400acaf	        0x4883c438	                           add rsp, 0x38	      4438	elf.c	FUNCTION_60
0x400acb3	              0x5b	                                 pop rbx	      4438	elf.c	FUNCTION_60
0x400acb4	              0x5d	                                 pop rbp	      4438	elf.c	FUNCTION_60
0x400acb5	              0xc3	                                     ret	      4438	elf.c	FUNCTION_60
_bfd_elf_get_symbol_info	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	14
0x4015db3	              0x55	                                push rbp	      8637	elf.c	FUNCTION_99
0x4015db4	          0x4889e5	                            mov rbp, rsp	      8637	elf.c	FUNCTION_99
0x4015db7	        0x4883ec20	                           sub rsp, 0x20	      8637	elf.c	FUNCTION_99
0x4015dbb	        0x48897df8	                mov qword [rbp - 8], rdi	      8637	elf.c	FUNCTION_99
0x4015dbf	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8637	elf.c	FUNCTION_99
0x4015dc3	        0x488955e8	             mov qword [rbp - 0x18], rdx	      8637	elf.c	FUNCTION_99
0x4015dc7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      8638	elf.c	FUNCTION_99	CALL_1
0x4015dcb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8638	elf.c	FUNCTION_99	CALL_1
0x4015dcf	          0x4889d6	                            mov rsi, rdx	      8638	elf.c	FUNCTION_99	CALL_1
0x4015dd2	          0x4889c7	                            mov rdi, rax	      8638	elf.c	FUNCTION_99	CALL_1
0x4015dd5	      0xe800000000	                          call 0x4015dda	      8638	elf.c	FUNCTION_99	CALL_1
0x4015dda	              0x90	                                     nop	      8639	elf.c	FUNCTION_99
0x4015ddb	              0xc9	                                   leave	      8639	elf.c	FUNCTION_99
0x4015ddc	              0xc3	                                     ret	      8639	elf.c	FUNCTION_99
elfcore_grok_s390_gs_bc	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016ec6	              0x55	                                push rbp	      9312	elf.c	FUNCTION_134
0x4016ec7	          0x4889e5	                            mov rbp, rsp	      9312	elf.c	FUNCTION_134
0x4016eca	        0x4883ec10	                           sub rsp, 0x10	      9312	elf.c	FUNCTION_134
0x4016ece	        0x48897df8	                mov qword [rbp - 8], rdi	      9312	elf.c	FUNCTION_134
0x4016ed2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9312	elf.c	FUNCTION_134
0x4016ed6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9313	elf.c	FUNCTION_134	CALL_1
0x4016eda	        0x488b45f8	                mov rax, qword [rbp - 8]	      9313	elf.c	FUNCTION_134	CALL_1
0x4016ede	      0xbe00000000	                              mov esi, 0	      9313	elf.c	FUNCTION_134	CALL_1
0x4016ee3	          0x4889c7	                            mov rdi, rax	      9313	elf.c	FUNCTION_134	CALL_1
0x4016ee6	      0xe80efdffff	call sym.elfcore_make_note_pseudosection	      9313	elf.c	FUNCTION_134	CALL_1
0x4016eeb	              0xc9	                                   leave	      9314	elf.c	FUNCTION_134
0x4016eec	              0xc3	                                     ret	      9314	elf.c	FUNCTION_134
elf_sort_sections	ELSE,4:DO,0:CALL,0:WHILE,0:FOR,0:IF,10:SWITCH,0:functions,0	112
0x400c70d	              0x55	                                push rbp	      5113	elf.c	FUNCTION_66
0x400c70e	          0x4889e5	                            mov rbp, rsp	      5113	elf.c	FUNCTION_66
0x400c711	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5113	elf.c	FUNCTION_66
0x400c715	        0x488975d0	             mov qword [rbp - 0x30], rsi	      5113	elf.c	FUNCTION_66
0x400c719	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5114	elf.c	FUNCTION_66
0x400c71d	          0x488b00	                    mov rax, qword [rax]	      5114	elf.c	FUNCTION_66
0x400c720	        0x488945e0	             mov qword [rbp - 0x20], rax	      5114	elf.c	FUNCTION_66
0x400c724	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5115	elf.c	FUNCTION_66
0x400c728	          0x488b00	                    mov rax, qword [rax]	      5115	elf.c	FUNCTION_66
0x400c72b	        0x488945e8	             mov qword [rbp - 0x18], rax	      5115	elf.c	FUNCTION_66
0x400c72f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5120	elf.c	FUNCTION_66	IF_1
0x400c733	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5120	elf.c	FUNCTION_66	IF_1
0x400c737	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5120	elf.c	FUNCTION_66	IF_1
0x400c73b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5120	elf.c	FUNCTION_66	IF_1
0x400c73f	          0x4839c2	                            cmp rdx, rax	      5120	elf.c	FUNCTION_66	IF_1
0x400c742	            0x730a	                           jae 0x400c74e	      5120	elf.c	FUNCTION_66	IF_1
0x400c744	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x400c749	      0xe94f010000	                           jmp 0x400c89d	      5121	elf.c	FUNCTION_66	IF_1
0x400c74e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c752	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c756	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c75a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c75e	          0x4839c2	                            cmp rdx, rax	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c761	            0x760a	                           jbe 0x400c76d	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c763	      0xb801000000	                              mov eax, 1	      5123	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c768	      0xe930010000	                           jmp 0x400c89d	      5123	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400c76d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5127	elf.c	FUNCTION_66	IF_3
0x400c771	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5127	elf.c	FUNCTION_66	IF_3
0x400c775	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5127	elf.c	FUNCTION_66	IF_3
0x400c779	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5127	elf.c	FUNCTION_66	IF_3
0x400c77d	          0x4839c2	                            cmp rdx, rax	      5127	elf.c	FUNCTION_66	IF_3
0x400c780	            0x730a	                           jae 0x400c78c	      5127	elf.c	FUNCTION_66	IF_3
0x400c782	      0xb8ffffffff	                     mov eax, 0xffffffff	      5128	elf.c	FUNCTION_66	IF_3
0x400c787	      0xe911010000	                           jmp 0x400c89d	      5128	elf.c	FUNCTION_66	IF_3
0x400c78c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c790	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c794	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c798	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c79c	          0x4839c2	                            cmp rdx, rax	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c79f	            0x760a	                           jbe 0x400c7ab	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c7a1	      0xb801000000	                              mov eax, 1	      5130	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c7a6	      0xe9f2000000	                           jmp 0x400c89d	      5130	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400c7ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5136	elf.c	FUNCTION_66	IF_5
0x400c7af	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5136	elf.c	FUNCTION_66	IF_5
0x400c7b2	      0x2502040000	                          and eax, 0x402	      5136	elf.c	FUNCTION_66	IF_5
0x400c7b7	            0x85c0	                           test eax, eax	      5136	elf.c	FUNCTION_66	IF_5
0x400c7b9	            0x754f	                           jne 0x400c80a	      5136	elf.c	FUNCTION_66	IF_5
0x400c7bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x400c7bf	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x400c7c2	      0x2502040000	                          and eax, 0x402	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x400c7c7	            0x85c0	                           test eax, eax	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x400c7c9	            0x7535	                           jne 0x400c800	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x400c7cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7cf	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7d9	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7df	            0x39c2	                            cmp edx, eax	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7e1	            0x743e	                            je 0x400c821	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7e7	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7f1	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7f7	            0x29c2	                            sub edx, eax	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7f9	            0x89d0	                            mov eax, edx	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c7fb	      0xe99d000000	                           jmp 0x400c89d	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400c800	      0xb801000000	                              mov eax, 1	      5146	elf.c	FUNCTION_66	IF_5	ELSE_3
0x400c805	      0xe993000000	                           jmp 0x400c89d	      5146	elf.c	FUNCTION_66	IF_5	ELSE_3
0x400c80a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400c80e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400c811	      0x2502040000	                          and eax, 0x402	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400c816	            0x85c0	                           test eax, eax	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400c818	            0x7507	                           jne 0x400c821	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400c81a	      0xb8ffffffff	                     mov eax, 0xffffffff	      5149	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400c81f	            0xeb7c	                           jmp 0x400c89d	      5149	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400c821	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5156	elf.c	FUNCTION_66
0x400c825	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5156	elf.c	FUNCTION_66
0x400c828	          0x83e002	                              and eax, 2	      5156	elf.c	FUNCTION_66
0x400c82b	            0x85c0	                           test eax, eax	      5156	elf.c	FUNCTION_66
0x400c82d	            0x740a	                            je 0x400c839	      5156	elf.c	FUNCTION_66
0x400c82f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5156	elf.c	FUNCTION_66
0x400c833	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5156	elf.c	FUNCTION_66
0x400c837	            0xeb05	                           jmp 0x400c83e	      5156	elf.c	FUNCTION_66
0x400c839	      0xb800000000	                              mov eax, 0	      5156	elf.c	FUNCTION_66
0x400c83e	        0x488945f0	             mov qword [rbp - 0x10], rax	      5156	elf.c	FUNCTION_66
0x400c842	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5157	elf.c	FUNCTION_66
0x400c846	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5157	elf.c	FUNCTION_66
0x400c849	          0x83e002	                              and eax, 2	      5157	elf.c	FUNCTION_66
0x400c84c	            0x85c0	                           test eax, eax	      5157	elf.c	FUNCTION_66
0x400c84e	            0x740a	                            je 0x400c85a	      5157	elf.c	FUNCTION_66
0x400c850	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5157	elf.c	FUNCTION_66
0x400c854	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5157	elf.c	FUNCTION_66
0x400c858	            0xeb05	                           jmp 0x400c85f	      5157	elf.c	FUNCTION_66
0x400c85a	      0xb800000000	                              mov eax, 0	      5157	elf.c	FUNCTION_66
0x400c85f	        0x488945f8	                mov qword [rbp - 8], rax	      5157	elf.c	FUNCTION_66
0x400c863	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5159	elf.c	FUNCTION_66	IF_9
0x400c867	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5159	elf.c	FUNCTION_66	IF_9
0x400c86b	            0x7307	                           jae 0x400c874	      5159	elf.c	FUNCTION_66	IF_9
0x400c86d	      0xb8ffffffff	                     mov eax, 0xffffffff	      5160	elf.c	FUNCTION_66	IF_9
0x400c872	            0xeb29	                           jmp 0x400c89d	      5160	elf.c	FUNCTION_66	IF_9
0x400c874	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5161	elf.c	FUNCTION_66	IF_10
0x400c878	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5161	elf.c	FUNCTION_66	IF_10
0x400c87c	            0x7607	                           jbe 0x400c885	      5161	elf.c	FUNCTION_66	IF_10
0x400c87e	      0xb801000000	                              mov eax, 1	      5162	elf.c	FUNCTION_66	IF_10
0x400c883	            0xeb18	                           jmp 0x400c89d	      5162	elf.c	FUNCTION_66	IF_10
0x400c885	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5164	elf.c	FUNCTION_66
0x400c889	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      5164	elf.c	FUNCTION_66
0x400c88f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5164	elf.c	FUNCTION_66
0x400c893	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5164	elf.c	FUNCTION_66
0x400c899	            0x29c2	                            sub edx, eax	      5164	elf.c	FUNCTION_66
0x400c89b	            0x89d0	                            mov eax, edx	      5164	elf.c	FUNCTION_66
0x400c89d	              0x5d	                                 pop rbp	      5165	elf.c	FUNCTION_66
0x400c89e	              0xc3	                                     ret	      5165	elf.c	FUNCTION_66
elfcore_grok_note	ELSE,21:DO,0:CALL,53:WHILE,0:FOR,0:IF,26:SWITCH,1:functions,0	586
0x4017651	              0x55	                                push rbp	      9655	elf.c	FUNCTION_144
0x4017652	          0x4889e5	                            mov rbp, rsp	      9655	elf.c	FUNCTION_144
0x4017655	        0x4883ec20	                           sub rsp, 0x20	      9655	elf.c	FUNCTION_144
0x4017659	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9655	elf.c	FUNCTION_144
0x401765d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9655	elf.c	FUNCTION_144
0x4017661	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9656	elf.c	FUNCTION_144	CALL_1
0x4017665	        0x488b4008	                mov rax, qword [rax + 8]	      9656	elf.c	FUNCTION_144	CALL_1
0x4017669	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      9656	elf.c	FUNCTION_144	CALL_1
0x4017670	        0x488945f0	             mov qword [rbp - 0x10], rax	      9656	elf.c	FUNCTION_144	CALL_1
0x4017674	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017678	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401767c	    0x483d05030000	                          cmp rax, 0x305	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017682	     0xf8496040000	                            je 0x4017b1e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017688	    0x483d05030000	                          cmp rax, 0x305	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401768e	     0xf87ba000000	                            ja 0x401774e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017694	    0x483d00010000	                          cmp rax, 0x100	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401769a	     0xf8486020000	                            je 0x4017926	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176a0	    0x483d00010000	                          cmp rax, 0x100	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176a6	            0x774c	                            ja 0x40176f4	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176a8	        0x4883f803	                              cmp rax, 3	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176ac	     0xf84cc070000	                            je 0x4017e7e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176b2	        0x4883f803	                              cmp rax, 3	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176b6	            0x7719	                            ja 0x40176d1	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176b8	        0x4883f801	                              cmp rax, 1	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176bc	     0xf8453010000	                            je 0x4017815	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176c2	        0x4883f802	                              cmp rax, 2	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176c6	     0xf849a010000	                            je 0x4017866	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176cc	      0xe93a010000	                           jmp 0x401780b	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176d1	        0x4883f80d	                            cmp rax, 0xd	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176d5	     0xf84a3070000	                            je 0x4017e7e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176db	        0x4883f812	                           cmp rax, 0x12	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176df	     0xf8499010000	                            je 0x401787e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176e5	        0x4883f806	                              cmp rax, 6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176e9	     0xf84e0070000	                            je 0x4017ecf	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176ef	      0xe917010000	                           jmp 0x401780b	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176f4	    0x483d01030000	                          cmp rax, 0x301	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40176fa	     0xf84fe020000	                            je 0x40179fe	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017700	    0x483d01030000	                          cmp rax, 0x301	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017706	            0x7729	                            ja 0x4017731	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017708	    0x483d02020000	                          cmp rax, 0x202	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401770e	     0xf84ca010000	                            je 0x40178de	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017714	    0x483d00030000	                          cmp rax, 0x300	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401771a	     0xf8496020000	                            je 0x40179b6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017720	    0x483d02010000	                          cmp rax, 0x102	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017726	     0xf8442020000	                            je 0x401796e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401772c	      0xe9da000000	                           jmp 0x401780b	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017731	    0x483d03030000	                          cmp rax, 0x303	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017737	     0xf8451030000	                            je 0x4017a8e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401773d	    0x483d03030000	                          cmp rax, 0x303	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017743	     0xf878d030000	                            ja 0x4017ad6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017749	      0xe9f8020000	                           jmp 0x4017a46	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401774e	    0x483d0c030000	                          cmp rax, 0x30c	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017754	     0xf84bc050000	                            je 0x4017d16	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401775a	    0x483d0c030000	                          cmp rax, 0x30c	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017760	            0x774b	                            ja 0x40177ad	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017762	    0x483d08030000	                          cmp rax, 0x308	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017768	     0xf8488040000	                            je 0x4017bf6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401776e	    0x483d08030000	                          cmp rax, 0x308	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017774	            0x771a	                            ja 0x4017790	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017776	    0x483d06030000	                          cmp rax, 0x306	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401777c	     0xf84e4030000	                            je 0x4017b66	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017782	    0x483d07030000	                          cmp rax, 0x307	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017788	     0xf8420040000	                            je 0x4017bae	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401778e	            0xeb7b	                           jmp 0x401780b	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017790	    0x483d0a030000	                          cmp rax, 0x30a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017796	     0xf84ea040000	                            je 0x4017c86	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401779c	    0x483d0a030000	                          cmp rax, 0x30a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177a2	     0xf8726050000	                            ja 0x4017cce	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177a8	      0xe991040000	                           jmp 0x4017c3e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177ad	    0x483d03040000	                          cmp rax, 0x403	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177b3	     0xf847d060000	                            je 0x4017e36	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177b9	    0x483d03040000	                          cmp rax, 0x403	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177bf	            0x7726	                            ja 0x40177e7	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177c1	    0x483d01040000	                          cmp rax, 0x401	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177c7	     0xf84d9050000	                            je 0x4017da6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177cd	    0x483d01040000	                          cmp rax, 0x401	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177d3	     0xf8715060000	                            ja 0x4017dee	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177d9	    0x483d00040000	                          cmp rax, 0x400	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177df	     0xf8479050000	                            je 0x4017d5e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177e5	            0xeb24	                           jmp 0x401780b	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177e7	    0x483d7f2be646	                     cmp rax, 0x46e62b7f	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177ed	     0xf84a3000000	                            je 0x4017896	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177f3	    0x483d49474953	                     cmp rax, 0x53494749	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177f9	     0xf845f070000	                            je 0x4017f5e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40177ff	    0x483d454c4946	                     cmp rax, 0x46494c45	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4017805	     0xf843c070000	                            je 0x4017f47	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401780b	      0xb801000000	                              mov eax, 1	      9661	elf.c	FUNCTION_144	SWITCH_1
0x4017810	      0xe95e070000	                           jmp 0x4017f73	      9661	elf.c	FUNCTION_144	SWITCH_1
0x4017815	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x4017819	    0x488b80080200	           mov rax, qword [rax + 0x208] 	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x4017820	          0x4885c0	                           test rax, rax	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x4017823	            0x7429	                            je 0x401784e	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x4017825	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017829	    0x488b80080200	           mov rax, qword [rax + 0x208] 	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017830	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017834	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017838	          0x4889ce	                            mov rsi, rcx	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x401783b	          0x4889d7	                            mov rdi, rdx	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x401783e	            0xffd0	                                call rax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017840	            0x85c0	                           test eax, eax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017842	            0x740a	                            je 0x401784e	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017844	      0xb801000000	                              mov eax, 1	      9666	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4017849	      0xe925070000	                           jmp 0x4017f73	      9666	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x401784e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4017852	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4017856	          0x4889d6	                            mov rsi, rdx	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4017859	          0x4889c7	                            mov rdi, rax	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x401785c	      0xe854f1ffff	          call sym.elfcore_grok_prstatus	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4017861	      0xe90d070000	                           jmp 0x4017f73	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4017866	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9684	elf.c	FUNCTION_144	SWITCH_1	CALL_5
0x401786a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9684	elf.c	FUNCTION_144	SWITCH_1	CALL_5
0x401786e	          0x4889d6	                            mov rsi, rdx	      9684	elf.c	FUNCTION_144	SWITCH_1	CALL_5
0x4017871	          0x4889c7	                            mov rdi, rax	      9684	elf.c	FUNCTION_144	SWITCH_1	CALL_5
0x4017874	      0xe8b6f3ffff	           call sym.elfcore_grok_prfpreg	      9684	elf.c	FUNCTION_144	SWITCH_1	CALL_5
0x4017879	      0xe9f5060000	                           jmp 0x4017f73	      9684	elf.c	FUNCTION_144	SWITCH_1	CALL_5
0x401787e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9687	elf.c	FUNCTION_144	SWITCH_1	CALL_6
0x4017882	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9687	elf.c	FUNCTION_144	SWITCH_1	CALL_6
0x4017886	          0x4889d6	                            mov rsi, rdx	      9687	elf.c	FUNCTION_144	SWITCH_1	CALL_6
0x4017889	          0x4889c7	                            mov rdi, rax	      9687	elf.c	FUNCTION_144	SWITCH_1	CALL_6
0x401788c	      0xe875faffff	      call sym.elfcore_grok_win32pstatus	      9687	elf.c	FUNCTION_144	SWITCH_1	CALL_6
0x4017891	      0xe9dd060000	                           jmp 0x4017f73	      9687	elf.c	FUNCTION_144	SWITCH_1	CALL_6
0x4017896	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x401789a	          0x488b00	                    mov rax, qword [rax]	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x401789d	        0x4883f806	                              cmp rax, 6	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x40178a1	            0x7531	                           jne 0x40178d4	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x40178a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x40178a7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x40178ab	      0xbe00000000	                              mov esi, 0	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x40178b0	          0x4889c7	                            mov rdi, rax	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x40178b3	      0xe800000000	                          call 0x40178b8	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x40178b8	            0x85c0	                           test eax, eax	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x40178ba	            0x7518	                           jne 0x40178d4	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x40178bc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x40178c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x40178c4	          0x4889d6	                            mov rsi, rdx	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x40178c7	          0x4889c7	                            mov rdi, rax	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x40178ca	      0xe887f3ffff	          call sym.elfcore_grok_prxfpreg	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x40178cf	      0xe99f060000	                           jmp 0x4017f73	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x40178d4	      0xb801000000	                              mov eax, 1	      9694	elf.c	FUNCTION_144	SWITCH_1	ELSE_1
0x40178d9	      0xe995060000	                           jmp 0x4017f73	      9694	elf.c	FUNCTION_144	SWITCH_1	ELSE_1
0x40178de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x40178e2	          0x488b00	                    mov rax, qword [rax]	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x40178e5	        0x4883f806	                              cmp rax, 6	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x40178e9	            0x7531	                           jne 0x401791c	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x40178eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40178ef	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40178f3	      0xbe00000000	                              mov esi, 0	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40178f8	          0x4889c7	                            mov rdi, rax	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40178fb	      0xe800000000	                          call 0x4017900	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x4017900	            0x85c0	                           test eax, eax	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x4017902	            0x7518	                           jne 0x401791c	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x4017904	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x4017908	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x401790c	          0x4889d6	                            mov rsi, rdx	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x401790f	          0x4889c7	                            mov rdi, rax	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x4017912	      0xe866f3ffff	         call sym.elfcore_grok_xstatereg	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x4017917	      0xe957060000	                           jmp 0x4017f73	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x401791c	      0xb801000000	                              mov eax, 1	      9701	elf.c	FUNCTION_144	SWITCH_1	ELSE_2
0x4017921	      0xe94d060000	                           jmp 0x4017f73	      9701	elf.c	FUNCTION_144	SWITCH_1	ELSE_2
0x4017926	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x401792a	          0x488b00	                    mov rax, qword [rax]	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x401792d	        0x4883f806	                              cmp rax, 6	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x4017931	            0x7531	                           jne 0x4017964	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x4017933	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4017937	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x401793b	      0xbe00000000	                              mov esi, 0	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4017940	          0x4889c7	                            mov rdi, rax	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4017943	      0xe800000000	                          call 0x4017948	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4017948	            0x85c0	                           test eax, eax	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x401794a	            0x7518	                           jne 0x4017964	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x401794c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x4017950	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x4017954	          0x4889d6	                            mov rsi, rdx	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x4017957	          0x4889c7	                            mov rdi, rax	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x401795a	      0xe845f3ffff	           call sym.elfcore_grok_ppc_vmx	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x401795f	      0xe90f060000	                           jmp 0x4017f73	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x4017964	      0xb801000000	                              mov eax, 1	      9708	elf.c	FUNCTION_144	SWITCH_1	ELSE_3
0x4017969	      0xe905060000	                           jmp 0x4017f73	      9708	elf.c	FUNCTION_144	SWITCH_1	ELSE_3
0x401796e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x4017972	          0x488b00	                    mov rax, qword [rax]	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x4017975	        0x4883f806	                              cmp rax, 6	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x4017979	            0x7531	                           jne 0x40179ac	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x401797b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x401797f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x4017983	      0xbe00000000	                              mov esi, 0	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x4017988	          0x4889c7	                            mov rdi, rax	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x401798b	      0xe800000000	                          call 0x4017990	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x4017990	            0x85c0	                           test eax, eax	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x4017992	            0x7518	                           jne 0x40179ac	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x4017994	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x4017998	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x401799c	          0x4889d6	                            mov rsi, rdx	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x401799f	          0x4889c7	                            mov rdi, rax	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x40179a2	      0xe824f3ffff	           call sym.elfcore_grok_ppc_vsx	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x40179a7	      0xe9c7050000	                           jmp 0x4017f73	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x40179ac	      0xb801000000	                              mov eax, 1	      9715	elf.c	FUNCTION_144	SWITCH_1	ELSE_4
0x40179b1	      0xe9bd050000	                           jmp 0x4017f73	      9715	elf.c	FUNCTION_144	SWITCH_1	ELSE_4
0x40179b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x40179ba	          0x488b00	                    mov rax, qword [rax]	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x40179bd	        0x4883f806	                              cmp rax, 6	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x40179c1	            0x7531	                           jne 0x40179f4	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x40179c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x40179c7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x40179cb	      0xbe00000000	                              mov esi, 0	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x40179d0	          0x4889c7	                            mov rdi, rax	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x40179d3	      0xe800000000	                          call 0x40179d8	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x40179d8	            0x85c0	                           test eax, eax	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x40179da	            0x7518	                           jne 0x40179f4	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x40179dc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x40179e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x40179e4	          0x4889d6	                            mov rsi, rdx	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x40179e7	          0x4889c7	                            mov rdi, rax	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x40179ea	      0xe803f3ffff	    call sym.elfcore_grok_s390_high_gprs	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x40179ef	      0xe97f050000	                           jmp 0x4017f73	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x40179f4	      0xb801000000	                              mov eax, 1	      9722	elf.c	FUNCTION_144	SWITCH_1	ELSE_5
0x40179f9	      0xe975050000	                           jmp 0x4017f73	      9722	elf.c	FUNCTION_144	SWITCH_1	ELSE_5
0x40179fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x4017a02	          0x488b00	                    mov rax, qword [rax]	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x4017a05	        0x4883f806	                              cmp rax, 6	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x4017a09	            0x7531	                           jne 0x4017a3c	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x4017a0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4017a0f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4017a13	      0xbe00000000	                              mov esi, 0	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4017a18	          0x4889c7	                            mov rdi, rax	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4017a1b	      0xe800000000	                          call 0x4017a20	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4017a20	            0x85c0	                           test eax, eax	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4017a22	            0x7518	                           jne 0x4017a3c	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4017a24	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x4017a28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x4017a2c	          0x4889d6	                            mov rsi, rdx	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x4017a2f	          0x4889c7	                            mov rdi, rax	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x4017a32	      0xe8e2f2ffff	        call sym.elfcore_grok_s390_timer	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x4017a37	      0xe937050000	                           jmp 0x4017f73	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x4017a3c	      0xb801000000	                              mov eax, 1	      9729	elf.c	FUNCTION_144	SWITCH_1	ELSE_6
0x4017a41	      0xe92d050000	                           jmp 0x4017f73	      9729	elf.c	FUNCTION_144	SWITCH_1	ELSE_6
0x4017a46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x4017a4a	          0x488b00	                    mov rax, qword [rax]	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x4017a4d	        0x4883f806	                              cmp rax, 6	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x4017a51	            0x7531	                           jne 0x4017a84	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x4017a53	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x4017a57	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x4017a5b	      0xbe00000000	                              mov esi, 0	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x4017a60	          0x4889c7	                            mov rdi, rax	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x4017a63	      0xe800000000	                          call 0x4017a68	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x4017a68	            0x85c0	                           test eax, eax	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x4017a6a	            0x7518	                           jne 0x4017a84	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x4017a6c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x4017a70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x4017a74	          0x4889d6	                            mov rsi, rdx	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x4017a77	          0x4889c7	                            mov rdi, rax	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x4017a7a	      0xe8c1f2ffff	       call sym.elfcore_grok_s390_todcmp	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x4017a7f	      0xe9ef040000	                           jmp 0x4017f73	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x4017a84	      0xb801000000	                              mov eax, 1	      9736	elf.c	FUNCTION_144	SWITCH_1	ELSE_7
0x4017a89	      0xe9e5040000	                           jmp 0x4017f73	      9736	elf.c	FUNCTION_144	SWITCH_1	ELSE_7
0x4017a8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x4017a92	          0x488b00	                    mov rax, qword [rax]	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x4017a95	        0x4883f806	                              cmp rax, 6	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x4017a99	            0x7531	                           jne 0x4017acc	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x4017a9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4017a9f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4017aa3	      0xbe00000000	                              mov esi, 0	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4017aa8	          0x4889c7	                            mov rdi, rax	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4017aab	      0xe800000000	                          call 0x4017ab0	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4017ab0	            0x85c0	                           test eax, eax	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4017ab2	            0x7518	                           jne 0x4017acc	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4017ab4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x4017ab8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x4017abc	          0x4889d6	                            mov rsi, rdx	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x4017abf	          0x4889c7	                            mov rdi, rax	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x4017ac2	      0xe8a0f2ffff	      call sym.elfcore_grok_s390_todpreg	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x4017ac7	      0xe9a7040000	                           jmp 0x4017f73	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x4017acc	      0xb801000000	                              mov eax, 1	      9743	elf.c	FUNCTION_144	SWITCH_1	ELSE_8
0x4017ad1	      0xe99d040000	                           jmp 0x4017f73	      9743	elf.c	FUNCTION_144	SWITCH_1	ELSE_8
0x4017ad6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x4017ada	          0x488b00	                    mov rax, qword [rax]	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x4017add	        0x4883f806	                              cmp rax, 6	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x4017ae1	            0x7531	                           jne 0x4017b14	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x4017ae3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4017ae7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4017aeb	      0xbe00000000	                              mov esi, 0	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4017af0	          0x4889c7	                            mov rdi, rax	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4017af3	      0xe800000000	                          call 0x4017af8	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4017af8	            0x85c0	                           test eax, eax	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4017afa	            0x7518	                           jne 0x4017b14	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4017afc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x4017b00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x4017b04	          0x4889d6	                            mov rsi, rdx	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x4017b07	          0x4889c7	                            mov rdi, rax	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x4017b0a	      0xe87ff2ffff	         call sym.elfcore_grok_s390_ctrs	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x4017b0f	      0xe95f040000	                           jmp 0x4017f73	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x4017b14	      0xb801000000	                              mov eax, 1	      9750	elf.c	FUNCTION_144	SWITCH_1	ELSE_9
0x4017b19	      0xe955040000	                           jmp 0x4017f73	      9750	elf.c	FUNCTION_144	SWITCH_1	ELSE_9
0x4017b1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x4017b22	          0x488b00	                    mov rax, qword [rax]	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x4017b25	        0x4883f806	                              cmp rax, 6	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x4017b29	            0x7531	                           jne 0x4017b5c	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x4017b2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4017b2f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4017b33	      0xbe00000000	                              mov esi, 0	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4017b38	          0x4889c7	                            mov rdi, rax	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4017b3b	      0xe800000000	                          call 0x4017b40	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4017b40	            0x85c0	                           test eax, eax	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4017b42	            0x7518	                           jne 0x4017b5c	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4017b44	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4017b48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4017b4c	          0x4889d6	                            mov rsi, rdx	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4017b4f	          0x4889c7	                            mov rdi, rax	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4017b52	      0xe85ef2ffff	       call sym.elfcore_grok_s390_prefix	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4017b57	      0xe917040000	                           jmp 0x4017f73	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4017b5c	      0xb801000000	                              mov eax, 1	      9757	elf.c	FUNCTION_144	SWITCH_1	ELSE_10
0x4017b61	      0xe90d040000	                           jmp 0x4017f73	      9757	elf.c	FUNCTION_144	SWITCH_1	ELSE_10
0x4017b66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x4017b6a	          0x488b00	                    mov rax, qword [rax]	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x4017b6d	        0x4883f806	                              cmp rax, 6	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x4017b71	            0x7531	                           jne 0x4017ba4	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x4017b73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4017b77	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4017b7b	      0xbe00000000	                              mov esi, 0	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4017b80	          0x4889c7	                            mov rdi, rax	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4017b83	      0xe800000000	                          call 0x4017b88	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4017b88	            0x85c0	                           test eax, eax	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4017b8a	            0x7518	                           jne 0x4017ba4	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4017b8c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4017b90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4017b94	          0x4889d6	                            mov rsi, rdx	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4017b97	          0x4889c7	                            mov rdi, rax	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4017b9a	      0xe83df2ffff	   call sym.elfcore_grok_s390_last_break	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4017b9f	      0xe9cf030000	                           jmp 0x4017f73	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4017ba4	      0xb801000000	                              mov eax, 1	      9764	elf.c	FUNCTION_144	SWITCH_1	ELSE_11
0x4017ba9	      0xe9c5030000	                           jmp 0x4017f73	      9764	elf.c	FUNCTION_144	SWITCH_1	ELSE_11
0x4017bae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x4017bb2	          0x488b00	                    mov rax, qword [rax]	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x4017bb5	        0x4883f806	                              cmp rax, 6	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x4017bb9	            0x7531	                           jne 0x4017bec	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x4017bbb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4017bbf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4017bc3	      0xbe00000000	                              mov esi, 0	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4017bc8	          0x4889c7	                            mov rdi, rax	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4017bcb	      0xe800000000	                          call 0x4017bd0	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4017bd0	            0x85c0	                           test eax, eax	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4017bd2	            0x7518	                           jne 0x4017bec	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4017bd4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x4017bd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x4017bdc	          0x4889d6	                            mov rsi, rdx	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x4017bdf	          0x4889c7	                            mov rdi, rax	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x4017be2	      0xe81cf2ffff	  call sym.elfcore_grok_s390_system_call	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x4017be7	      0xe987030000	                           jmp 0x4017f73	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x4017bec	      0xb801000000	                              mov eax, 1	      9771	elf.c	FUNCTION_144	SWITCH_1	ELSE_12
0x4017bf1	      0xe97d030000	                           jmp 0x4017f73	      9771	elf.c	FUNCTION_144	SWITCH_1	ELSE_12
0x4017bf6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x4017bfa	          0x488b00	                    mov rax, qword [rax]	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x4017bfd	        0x4883f806	                              cmp rax, 6	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x4017c01	            0x7531	                           jne 0x4017c34	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x4017c03	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x4017c07	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x4017c0b	      0xbe00000000	                              mov esi, 0	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x4017c10	          0x4889c7	                            mov rdi, rax	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x4017c13	      0xe800000000	                          call 0x4017c18	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x4017c18	            0x85c0	                           test eax, eax	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x4017c1a	            0x7518	                           jne 0x4017c34	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x4017c1c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x4017c20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x4017c24	          0x4889d6	                            mov rsi, rdx	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x4017c27	          0x4889c7	                            mov rdi, rax	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x4017c2a	      0xe8fbf1ffff	          call sym.elfcore_grok_s390_tdb	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x4017c2f	      0xe93f030000	                           jmp 0x4017f73	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x4017c34	      0xb801000000	                              mov eax, 1	      9778	elf.c	FUNCTION_144	SWITCH_1	ELSE_13
0x4017c39	      0xe935030000	                           jmp 0x4017f73	      9778	elf.c	FUNCTION_144	SWITCH_1	ELSE_13
0x4017c3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x4017c42	          0x488b00	                    mov rax, qword [rax]	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x4017c45	        0x4883f806	                              cmp rax, 6	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x4017c49	            0x7531	                           jne 0x4017c7c	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x4017c4b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4017c4f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4017c53	      0xbe00000000	                              mov esi, 0	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4017c58	          0x4889c7	                            mov rdi, rax	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4017c5b	      0xe800000000	                          call 0x4017c60	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4017c60	            0x85c0	                           test eax, eax	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4017c62	            0x7518	                           jne 0x4017c7c	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4017c64	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4017c68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4017c6c	          0x4889d6	                            mov rsi, rdx	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4017c6f	          0x4889c7	                            mov rdi, rax	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4017c72	      0xe8daf1ffff	     call sym.elfcore_grok_s390_vxrs_low	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4017c77	      0xe9f7020000	                           jmp 0x4017f73	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4017c7c	      0xb801000000	                              mov eax, 1	      9785	elf.c	FUNCTION_144	SWITCH_1	ELSE_14
0x4017c81	      0xe9ed020000	                           jmp 0x4017f73	      9785	elf.c	FUNCTION_144	SWITCH_1	ELSE_14
0x4017c86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x4017c8a	          0x488b00	                    mov rax, qword [rax]	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x4017c8d	        0x4883f806	                              cmp rax, 6	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x4017c91	            0x7531	                           jne 0x4017cc4	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x4017c93	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4017c97	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4017c9b	      0xbe00000000	                              mov esi, 0	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4017ca0	          0x4889c7	                            mov rdi, rax	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4017ca3	      0xe800000000	                          call 0x4017ca8	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4017ca8	            0x85c0	                           test eax, eax	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4017caa	            0x7518	                           jne 0x4017cc4	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4017cac	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4017cb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4017cb4	          0x4889d6	                            mov rsi, rdx	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4017cb7	          0x4889c7	                            mov rdi, rax	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4017cba	      0xe8b9f1ffff	    call sym.elfcore_grok_s390_vxrs_high	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4017cbf	      0xe9af020000	                           jmp 0x4017f73	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4017cc4	      0xb801000000	                              mov eax, 1	      9792	elf.c	FUNCTION_144	SWITCH_1	ELSE_15
0x4017cc9	      0xe9a5020000	                           jmp 0x4017f73	      9792	elf.c	FUNCTION_144	SWITCH_1	ELSE_15
0x4017cce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x4017cd2	          0x488b00	                    mov rax, qword [rax]	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x4017cd5	        0x4883f806	                              cmp rax, 6	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x4017cd9	            0x7531	                           jne 0x4017d0c	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x4017cdb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x4017cdf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x4017ce3	      0xbe00000000	                              mov esi, 0	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x4017ce8	          0x4889c7	                            mov rdi, rax	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x4017ceb	      0xe800000000	                          call 0x4017cf0	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x4017cf0	            0x85c0	                           test eax, eax	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x4017cf2	            0x7518	                           jne 0x4017d0c	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x4017cf4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x4017cf8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x4017cfc	          0x4889d6	                            mov rsi, rdx	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x4017cff	          0x4889c7	                            mov rdi, rax	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x4017d02	      0xe898f1ffff	        call sym.elfcore_grok_s390_gs_cb	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x4017d07	      0xe967020000	                           jmp 0x4017f73	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x4017d0c	      0xb801000000	                              mov eax, 1	      9799	elf.c	FUNCTION_144	SWITCH_1	ELSE_16
0x4017d11	      0xe95d020000	                           jmp 0x4017f73	      9799	elf.c	FUNCTION_144	SWITCH_1	ELSE_16
0x4017d16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x4017d1a	          0x488b00	                    mov rax, qword [rax]	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x4017d1d	        0x4883f806	                              cmp rax, 6	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x4017d21	            0x7531	                           jne 0x4017d54	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x4017d23	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4017d27	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4017d2b	      0xbe00000000	                              mov esi, 0	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4017d30	          0x4889c7	                            mov rdi, rax	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4017d33	      0xe800000000	                          call 0x4017d38	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4017d38	            0x85c0	                           test eax, eax	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4017d3a	            0x7518	                           jne 0x4017d54	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4017d3c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x4017d40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x4017d44	          0x4889d6	                            mov rsi, rdx	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x4017d47	          0x4889c7	                            mov rdi, rax	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x4017d4a	      0xe877f1ffff	        call sym.elfcore_grok_s390_gs_bc	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x4017d4f	      0xe91f020000	                           jmp 0x4017f73	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x4017d54	      0xb801000000	                              mov eax, 1	      9806	elf.c	FUNCTION_144	SWITCH_1	ELSE_17
0x4017d59	      0xe915020000	                           jmp 0x4017f73	      9806	elf.c	FUNCTION_144	SWITCH_1	ELSE_17
0x4017d5e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x4017d62	          0x488b00	                    mov rax, qword [rax]	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x4017d65	        0x4883f806	                              cmp rax, 6	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x4017d69	            0x7531	                           jne 0x4017d9c	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x4017d6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4017d6f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4017d73	      0xbe00000000	                              mov esi, 0	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4017d78	          0x4889c7	                            mov rdi, rax	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4017d7b	      0xe800000000	                          call 0x4017d80	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4017d80	            0x85c0	                           test eax, eax	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4017d82	            0x7518	                           jne 0x4017d9c	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4017d84	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x4017d88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x4017d8c	          0x4889d6	                            mov rsi, rdx	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x4017d8f	          0x4889c7	                            mov rdi, rax	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x4017d92	      0xe856f1ffff	           call sym.elfcore_grok_arm_vfp	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x4017d97	      0xe9d7010000	                           jmp 0x4017f73	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x4017d9c	      0xb801000000	                              mov eax, 1	      9813	elf.c	FUNCTION_144	SWITCH_1	ELSE_18
0x4017da1	      0xe9cd010000	                           jmp 0x4017f73	      9813	elf.c	FUNCTION_144	SWITCH_1	ELSE_18
0x4017da6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x4017daa	          0x488b00	                    mov rax, qword [rax]	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x4017dad	        0x4883f806	                              cmp rax, 6	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x4017db1	            0x7531	                           jne 0x4017de4	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x4017db3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4017db7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4017dbb	      0xbe00000000	                              mov esi, 0	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4017dc0	          0x4889c7	                            mov rdi, rax	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4017dc3	      0xe800000000	                          call 0x4017dc8	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4017dc8	            0x85c0	                           test eax, eax	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4017dca	            0x7518	                           jne 0x4017de4	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4017dcc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4017dd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4017dd4	          0x4889d6	                            mov rsi, rdx	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4017dd7	          0x4889c7	                            mov rdi, rax	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4017dda	      0xe835f1ffff	         call sym.elfcore_grok_aarch_tls	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4017ddf	      0xe98f010000	                           jmp 0x4017f73	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4017de4	      0xb801000000	                              mov eax, 1	      9820	elf.c	FUNCTION_144	SWITCH_1	ELSE_19
0x4017de9	      0xe985010000	                           jmp 0x4017f73	      9820	elf.c	FUNCTION_144	SWITCH_1	ELSE_19
0x4017dee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x4017df2	          0x488b00	                    mov rax, qword [rax]	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x4017df5	        0x4883f806	                              cmp rax, 6	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x4017df9	            0x7531	                           jne 0x4017e2c	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x4017dfb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4017dff	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4017e03	      0xbe00000000	                              mov esi, 0	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4017e08	          0x4889c7	                            mov rdi, rax	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4017e0b	      0xe800000000	                          call 0x4017e10	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4017e10	            0x85c0	                           test eax, eax	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4017e12	            0x7518	                           jne 0x4017e2c	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4017e14	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x4017e18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x4017e1c	          0x4889d6	                            mov rsi, rdx	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x4017e1f	          0x4889c7	                            mov rdi, rax	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x4017e22	      0xe814f1ffff	    call sym.elfcore_grok_aarch_hw_break	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x4017e27	      0xe947010000	                           jmp 0x4017f73	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x4017e2c	      0xb801000000	                              mov eax, 1	      9827	elf.c	FUNCTION_144	SWITCH_1	ELSE_20
0x4017e31	      0xe93d010000	                           jmp 0x4017f73	      9827	elf.c	FUNCTION_144	SWITCH_1	ELSE_20
0x4017e36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x4017e3a	          0x488b00	                    mov rax, qword [rax]	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x4017e3d	        0x4883f806	                              cmp rax, 6	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x4017e41	            0x7531	                           jne 0x4017e74	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x4017e43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4017e47	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4017e4b	      0xbe00000000	                              mov esi, 0	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4017e50	          0x4889c7	                            mov rdi, rax	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4017e53	      0xe800000000	                          call 0x4017e58	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4017e58	            0x85c0	                           test eax, eax	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4017e5a	            0x7518	                           jne 0x4017e74	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4017e5c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4017e60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4017e64	          0x4889d6	                            mov rsi, rdx	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4017e67	          0x4889c7	                            mov rdi, rax	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4017e6a	      0xe8f3f0ffff	    call sym.elfcore_grok_aarch_hw_watch	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4017e6f	      0xe9ff000000	                           jmp 0x4017f73	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4017e74	      0xb801000000	                              mov eax, 1	      9834	elf.c	FUNCTION_144	SWITCH_1	ELSE_21
0x4017e79	      0xe9f5000000	                           jmp 0x4017f73	      9834	elf.c	FUNCTION_144	SWITCH_1	ELSE_21
0x4017e7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x4017e82	    0x488b80100200	           mov rax, qword [rax + 0x210] 	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x4017e89	          0x4885c0	                           test rax, rax	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x4017e8c	            0x7429	                            je 0x4017eb7	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x4017e8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017e92	    0x488b80100200	           mov rax, qword [rax + 0x210] 	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017e99	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017e9d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017ea1	          0x4889ce	                            mov rsi, rcx	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017ea4	          0x4889d7	                            mov rdi, rdx	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017ea7	            0xffd0	                                call rax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017ea9	            0x85c0	                           test eax, eax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017eab	            0x740a	                            je 0x4017eb7	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017ead	      0xb801000000	                              mov eax, 1	      9840	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017eb2	      0xe9bc000000	                           jmp 0x4017f73	      9840	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4017eb7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4017ebb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4017ebf	          0x4889d6	                            mov rsi, rdx	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4017ec2	          0x4889c7	                            mov rdi, rax	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4017ec5	      0xe863f1ffff	            call sym.elfcore_grok_psinfo	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4017eca	      0xe9a4000000	                           jmp 0x4017f73	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4017ecf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x4017ed3	      0xba00010000	                          mov edx, 0x100	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x4017ed8	      0xbe00000000	                              mov esi, 0	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x4017edd	          0x4889c7	                            mov rdi, rax	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x4017ee0	      0xe800000000	                          call 0x4017ee5	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x4017ee5	        0x488945f8	                mov qword [rbp - 8], rax	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x4017ee9	      0x48837df800	                  cmp qword [rbp - 8], 0	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x4017eee	            0x7507	                           jne 0x4017ef7	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x4017ef0	      0xb800000000	                              mov eax, 0	      9853	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x4017ef5	            0xeb7c	                           jmp 0x4017f73	      9853	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x4017ef7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9854	elf.c	FUNCTION_144	SWITCH_1
0x4017efb	        0x488b5008	                mov rdx, qword [rax + 8]	      9854	elf.c	FUNCTION_144	SWITCH_1
0x4017eff	        0x488b45f8	                mov rax, qword [rbp - 8]	      9854	elf.c	FUNCTION_144	SWITCH_1
0x4017f03	        0x48895038	             mov qword [rax + 0x38], rdx	      9854	elf.c	FUNCTION_144	SWITCH_1
0x4017f07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9855	elf.c	FUNCTION_144	SWITCH_1
0x4017f0b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9855	elf.c	FUNCTION_144	SWITCH_1
0x4017f0f	          0x4889c2	                            mov rdx, rax	      9855	elf.c	FUNCTION_144	SWITCH_1
0x4017f12	        0x488b45f8	                mov rax, qword [rbp - 8]	      9855	elf.c	FUNCTION_144	SWITCH_1
0x4017f16	    0x488990900000	             mov qword [rax + 0x90], rdx	      9855	elf.c	FUNCTION_144	SWITCH_1
0x4017f1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f21	          0x4889c7	                            mov rdi, rax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f24	      0xe800000000	                          call 0x4017f29	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f29	          0x8d501f	                   lea edx, [rax + 0x1f]	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f2c	            0x85c0	                           test eax, eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f2e	           0xf48c2	                          cmovs eax, edx	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f31	          0xc1f805	                              sar eax, 5	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f34	          0x83c001	                              add eax, 1	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f37	            0x89c2	                            mov edx, eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f39	        0x488b45f8	                mov rax, qword [rbp - 8]	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f3d	          0x895070	             mov dword [rax + 0x70], edx	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4017f40	      0xb801000000	                              mov eax, 1	      9858	elf.c	FUNCTION_144	SWITCH_1
0x4017f45	            0xeb2c	                           jmp 0x4017f73	      9858	elf.c	FUNCTION_144	SWITCH_1
0x4017f47	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x4017f4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x4017f4f	      0xbe00000000	                              mov esi, 0	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x4017f54	          0x4889c7	                            mov rdi, rax	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x4017f57	      0xe89decffff	call sym.elfcore_make_note_pseudosection	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x4017f5c	            0xeb15	                           jmp 0x4017f73	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x4017f5e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x4017f62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x4017f66	      0xbe00000000	                              mov esi, 0	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x4017f6b	          0x4889c7	                            mov rdi, rax	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x4017f6e	      0xe886ecffff	call sym.elfcore_make_note_pseudosection	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x4017f73	              0xc9	                                   leave	      9870	elf.c	FUNCTION_144
0x4017f74	              0xc3	                                     ret	      9870	elf.c	FUNCTION_144
elfcore_grok_openbsd_note	ELSE,0:DO,0:CALL,8:WHILE,0:FOR,0:IF,8:SWITCH,0:functions,0	120
0x4018add	              0x55	                                push rbp	     10260	elf.c	FUNCTION_156
0x4018ade	          0x4889e5	                            mov rbp, rsp	     10260	elf.c	FUNCTION_156
0x4018ae1	        0x4883ec20	                           sub rsp, 0x20	     10260	elf.c	FUNCTION_156
0x4018ae5	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10260	elf.c	FUNCTION_156
0x4018ae9	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10260	elf.c	FUNCTION_156
0x4018aed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10261	elf.c	FUNCTION_156	IF_1
0x4018af1	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10261	elf.c	FUNCTION_156	IF_1
0x4018af5	        0x4883f80a	                            cmp rax, 0xa	     10261	elf.c	FUNCTION_156	IF_1
0x4018af9	            0x7518	                           jne 0x4018b13	     10261	elf.c	FUNCTION_156	IF_1
0x4018afb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10262	elf.c	FUNCTION_156	CALL_1
0x4018aff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10262	elf.c	FUNCTION_156	CALL_1
0x4018b03	          0x4889d6	                            mov rsi, rdx	     10262	elf.c	FUNCTION_156	CALL_1
0x4018b06	          0x4889c7	                            mov rdi, rax	     10262	elf.c	FUNCTION_156	CALL_1
0x4018b09	      0xe8fbfeffff	  call sym.elfcore_grok_openbsd_procinfo	     10262	elf.c	FUNCTION_156	CALL_1
0x4018b0e	      0xe98f010000	                           jmp 0x4018ca2	     10262	elf.c	FUNCTION_156	CALL_1
0x4018b13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10264	elf.c	FUNCTION_156	IF_2
0x4018b17	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10264	elf.c	FUNCTION_156	IF_2
0x4018b1b	        0x4883f814	                           cmp rax, 0x14	     10264	elf.c	FUNCTION_156	IF_2
0x4018b1f	            0x751a	                           jne 0x4018b3b	     10264	elf.c	FUNCTION_156	IF_2
0x4018b21	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10265	elf.c	FUNCTION_156	CALL_2
0x4018b25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10265	elf.c	FUNCTION_156	CALL_2
0x4018b29	      0xbe00000000	                              mov esi, 0	     10265	elf.c	FUNCTION_156	CALL_2
0x4018b2e	          0x4889c7	                            mov rdi, rax	     10265	elf.c	FUNCTION_156	CALL_2
0x4018b31	      0xe8c3e0ffff	call sym.elfcore_make_note_pseudosection	     10265	elf.c	FUNCTION_156	CALL_2
0x4018b36	      0xe967010000	                           jmp 0x4018ca2	     10265	elf.c	FUNCTION_156	CALL_2
0x4018b3b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10267	elf.c	FUNCTION_156	IF_3
0x4018b3f	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10267	elf.c	FUNCTION_156	IF_3
0x4018b43	        0x4883f815	                           cmp rax, 0x15	     10267	elf.c	FUNCTION_156	IF_3
0x4018b47	            0x751a	                           jne 0x4018b63	     10267	elf.c	FUNCTION_156	IF_3
0x4018b49	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10268	elf.c	FUNCTION_156	CALL_3
0x4018b4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10268	elf.c	FUNCTION_156	CALL_3
0x4018b51	      0xbe00000000	                              mov esi, 0	     10268	elf.c	FUNCTION_156	CALL_3
0x4018b56	          0x4889c7	                            mov rdi, rax	     10268	elf.c	FUNCTION_156	CALL_3
0x4018b59	      0xe89be0ffff	call sym.elfcore_make_note_pseudosection	     10268	elf.c	FUNCTION_156	CALL_3
0x4018b5e	      0xe93f010000	                           jmp 0x4018ca2	     10268	elf.c	FUNCTION_156	CALL_3
0x4018b63	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10270	elf.c	FUNCTION_156	IF_4
0x4018b67	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10270	elf.c	FUNCTION_156	IF_4
0x4018b6b	        0x4883f816	                           cmp rax, 0x16	     10270	elf.c	FUNCTION_156	IF_4
0x4018b6f	            0x751a	                           jne 0x4018b8b	     10270	elf.c	FUNCTION_156	IF_4
0x4018b71	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10271	elf.c	FUNCTION_156	CALL_4
0x4018b75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10271	elf.c	FUNCTION_156	CALL_4
0x4018b79	      0xbe00000000	                              mov esi, 0	     10271	elf.c	FUNCTION_156	CALL_4
0x4018b7e	          0x4889c7	                            mov rdi, rax	     10271	elf.c	FUNCTION_156	CALL_4
0x4018b81	      0xe873e0ffff	call sym.elfcore_make_note_pseudosection	     10271	elf.c	FUNCTION_156	CALL_4
0x4018b86	      0xe917010000	                           jmp 0x4018ca2	     10271	elf.c	FUNCTION_156	CALL_4
0x4018b8b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10273	elf.c	FUNCTION_156	IF_5
0x4018b8f	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10273	elf.c	FUNCTION_156	IF_5
0x4018b93	        0x4883f80b	                            cmp rax, 0xb	     10273	elf.c	FUNCTION_156	IF_5
0x4018b97	            0x757e	                           jne 0x4018c17	     10273	elf.c	FUNCTION_156	IF_5
0x4018b99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4018b9d	      0xba00010000	                          mov edx, 0x100	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4018ba2	      0xbe00000000	                              mov esi, 0	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4018ba7	          0x4889c7	                            mov rdi, rax	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4018baa	      0xe800000000	                          call 0x4018baf	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4018baf	        0x488945f0	             mov qword [rbp - 0x10], rax	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4018bb3	      0x48837df000	               cmp qword [rbp - 0x10], 0	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x4018bb8	            0x750a	                           jne 0x4018bc4	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x4018bba	      0xb800000000	                              mov eax, 0	     10279	elf.c	FUNCTION_156	IF_5	IF_6
0x4018bbf	      0xe9de000000	                           jmp 0x4018ca2	     10279	elf.c	FUNCTION_156	IF_5	IF_6
0x4018bc4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10280	elf.c	FUNCTION_156	IF_5
0x4018bc8	        0x488b5008	                mov rdx, qword [rax + 8]	     10280	elf.c	FUNCTION_156	IF_5
0x4018bcc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10280	elf.c	FUNCTION_156	IF_5
0x4018bd0	        0x48895038	             mov qword [rax + 0x38], rdx	     10280	elf.c	FUNCTION_156	IF_5
0x4018bd4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10281	elf.c	FUNCTION_156	IF_5
0x4018bd8	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10281	elf.c	FUNCTION_156	IF_5
0x4018bdc	          0x4889c2	                            mov rdx, rax	     10281	elf.c	FUNCTION_156	IF_5
0x4018bdf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10281	elf.c	FUNCTION_156	IF_5
0x4018be3	    0x488990900000	             mov qword [rax + 0x90], rdx	     10281	elf.c	FUNCTION_156	IF_5
0x4018bea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018bee	          0x4889c7	                            mov rdi, rax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018bf1	      0xe800000000	                          call 0x4018bf6	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018bf6	          0x8d501f	                   lea edx, [rax + 0x1f]	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018bf9	            0x85c0	                           test eax, eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018bfb	           0xf48c2	                          cmovs eax, edx	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018bfe	          0xc1f805	                              sar eax, 5	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018c01	          0x83c001	                              add eax, 1	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018c04	            0x89c2	                            mov edx, eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018c06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018c0a	          0x895070	             mov dword [rax + 0x70], edx	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4018c0d	      0xb801000000	                              mov eax, 1	     10284	elf.c	FUNCTION_156	IF_5
0x4018c12	      0xe98b000000	                           jmp 0x4018ca2	     10284	elf.c	FUNCTION_156	IF_5
0x4018c17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10287	elf.c	FUNCTION_156	IF_7
0x4018c1b	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10287	elf.c	FUNCTION_156	IF_7
0x4018c1f	        0x4883f817	                           cmp rax, 0x17	     10287	elf.c	FUNCTION_156	IF_7
0x4018c23	            0x7578	                           jne 0x4018c9d	     10287	elf.c	FUNCTION_156	IF_7
0x4018c25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x4018c29	      0xba00010000	                          mov edx, 0x100	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x4018c2e	      0xbe00000000	                              mov esi, 0	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x4018c33	          0x4889c7	                            mov rdi, rax	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x4018c36	      0xe800000000	                          call 0x4018c3b	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x4018c3b	        0x488945f8	                mov qword [rbp - 8], rax	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x4018c3f	      0x48837df800	                  cmp qword [rbp - 8], 0	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x4018c44	            0x7507	                           jne 0x4018c4d	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x4018c46	      0xb800000000	                              mov eax, 0	     10293	elf.c	FUNCTION_156	IF_7	IF_8
0x4018c4b	            0xeb55	                           jmp 0x4018ca2	     10293	elf.c	FUNCTION_156	IF_7	IF_8
0x4018c4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10294	elf.c	FUNCTION_156	IF_7
0x4018c51	        0x488b5008	                mov rdx, qword [rax + 8]	     10294	elf.c	FUNCTION_156	IF_7
0x4018c55	        0x488b45f8	                mov rax, qword [rbp - 8]	     10294	elf.c	FUNCTION_156	IF_7
0x4018c59	        0x48895038	             mov qword [rax + 0x38], rdx	     10294	elf.c	FUNCTION_156	IF_7
0x4018c5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10295	elf.c	FUNCTION_156	IF_7
0x4018c61	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10295	elf.c	FUNCTION_156	IF_7
0x4018c65	          0x4889c2	                            mov rdx, rax	     10295	elf.c	FUNCTION_156	IF_7
0x4018c68	        0x488b45f8	                mov rax, qword [rbp - 8]	     10295	elf.c	FUNCTION_156	IF_7
0x4018c6c	    0x488990900000	             mov qword [rax + 0x90], rdx	     10295	elf.c	FUNCTION_156	IF_7
0x4018c73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c77	          0x4889c7	                            mov rdi, rax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c7a	      0xe800000000	                          call 0x4018c7f	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c7f	          0x8d501f	                   lea edx, [rax + 0x1f]	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c82	            0x85c0	                           test eax, eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c84	           0xf48c2	                          cmovs eax, edx	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c87	          0xc1f805	                              sar eax, 5	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c8a	          0x83c001	                              add eax, 1	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c8d	            0x89c2	                            mov edx, eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c8f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c93	          0x895070	             mov dword [rax + 0x70], edx	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4018c96	      0xb801000000	                              mov eax, 1	     10298	elf.c	FUNCTION_156	IF_7
0x4018c9b	            0xeb05	                           jmp 0x4018ca2	     10298	elf.c	FUNCTION_156	IF_7
0x4018c9d	      0xb801000000	                              mov eax, 1	     10301	elf.c	FUNCTION_156
0x4018ca2	              0xc9	                                   leave	     10302	elf.c	FUNCTION_156
0x4018ca3	              0xc3	                                     ret	     10302	elf.c	FUNCTION_156
_bfd_elf_rel_vtable_reloc_fn	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	11
0x4016766	              0x55	                                push rbp	      9011	elf.c	FUNCTION_111
0x4016767	          0x4889e5	                            mov rbp, rsp	      9011	elf.c	FUNCTION_111
0x401676a	        0x48897df8	                mov qword [rbp - 8], rdi	      9011	elf.c	FUNCTION_111
0x401676e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9011	elf.c	FUNCTION_111
0x4016772	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9011	elf.c	FUNCTION_111
0x4016776	        0x48894de0	             mov qword [rbp - 0x20], rcx	      9011	elf.c	FUNCTION_111
0x401677a	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      9011	elf.c	FUNCTION_111
0x401677e	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      9011	elf.c	FUNCTION_111
0x4016782	      0xb802000000	                              mov eax, 2	      9012	elf.c	FUNCTION_111
0x4016787	              0x5d	                                 pop rbp	      9013	elf.c	FUNCTION_111
0x4016788	              0xc3	                                     ret	      9013	elf.c	FUNCTION_111
elfcore_write_s390_timer	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019d4f	              0x55	                                push rbp	     10836	elf.c	FUNCTION_174
0x4019d50	          0x4889e5	                            mov rbp, rsp	     10836	elf.c	FUNCTION_174
0x4019d53	        0x4883ec40	                           sub rsp, 0x40	     10836	elf.c	FUNCTION_174
0x4019d57	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10836	elf.c	FUNCTION_174
0x4019d5b	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10836	elf.c	FUNCTION_174
0x4019d5f	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10836	elf.c	FUNCTION_174
0x4019d63	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10836	elf.c	FUNCTION_174
0x4019d67	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10836	elf.c	FUNCTION_174
0x4019d6b	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10837	elf.c	FUNCTION_174
0x4019d73	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d77	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d7b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d7f	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d87	        0x4883ec08	                              sub rsp, 8	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d8b	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d8e	              0x57	                                push rdi	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d8f	          0x4d89c1	                              mov r9, r8	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d92	    0x41b801030000	                          mov r8d, 0x301	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d98	          0x4889c7	                            mov rdi, rax	     10838	elf.c	FUNCTION_174	CALL_1
0x4019d9b	      0xe800000000	                          call 0x4019da0	     10838	elf.c	FUNCTION_174	CALL_1
0x4019da0	        0x4883c410	                           add rsp, 0x10	     10838	elf.c	FUNCTION_174	CALL_1
0x4019da4	              0xc9	                                   leave	     10840	elf.c	FUNCTION_174
0x4019da5	              0xc3	                                     ret	     10840	elf.c	FUNCTION_174
elfcore_write_linux_prpsinfo32	ELSE,1:DO,0:CALL,5:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	60
0x401964f	              0x55	                                push rbp	     10595	elf.c	FUNCTION_163
0x4019650	          0x4889e5	                            mov rbp, rsp	     10595	elf.c	FUNCTION_163
0x4019653	    0x4881ecb00000	                           sub rsp, 0xb0	     10595	elf.c	FUNCTION_163
0x401965a	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	     10595	elf.c	FUNCTION_163
0x4019661	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	     10595	elf.c	FUNCTION_163
0x4019668	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	     10595	elf.c	FUNCTION_163
0x401966f	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	     10595	elf.c	FUNCTION_163
0x4019676	    0x64488b042528	                mov rax, qword fs:[0x28]	     10595	elf.c	FUNCTION_163
0x401967f	        0x488945f8	                mov qword [rbp - 8], rax	     10595	elf.c	FUNCTION_163
0x4019683	            0x31c0	                            xor eax, eax	     10595	elf.c	FUNCTION_163
0x4019685	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x401968c	        0x488b4008	                mov rax, qword [rax + 8]	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x4019690	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x4019697	     0xfb6808b0300	          movzx eax, byte [rax + 0x38b] 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x401969e	          0x83e010	                           and eax, 0x10	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x40196a1	            0x84c0	                             test al, al	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x40196a3	            0x745e	                            je 0x4019703	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x40196a5	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10600	elf.c	FUNCTION_163	IF_1	CALL_2
0x40196ac	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	     10600	elf.c	FUNCTION_163	IF_1	CALL_2
0x40196b3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10600	elf.c	FUNCTION_163	IF_1	CALL_2
0x40196ba	          0x4889ce	                            mov rsi, rcx	     10600	elf.c	FUNCTION_163	IF_1	CALL_2
0x40196bd	          0x4889c7	                            mov rdi, rax	     10600	elf.c	FUNCTION_163	IF_1	CALL_2
0x40196c0	      0xe87c6bfeff	call sym.swap_linux_prpsinfo32_ugid16_out	     10600	elf.c	FUNCTION_163	IF_1	CALL_2
0x40196c5	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196cc	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196d3	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196e1	        0x4883ec08	                              sub rsp, 8	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196e5	            0x6a7c	                               push 0x7c	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196e7	          0x4989c9	                             mov r9, rcx	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196ea	    0x41b803000000	                              mov r8d, 3	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196f0	      0xb900000000	                              mov ecx, 0	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196f5	          0x4889c7	                            mov rdi, rax	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196f8	      0xe800000000	                          call 0x40196fd	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x40196fd	        0x4883c410	                           add rsp, 0x10	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x4019701	            0xeb5f	                           jmp 0x4019762	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x4019703	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10608	elf.c	FUNCTION_163	ELSE_1	CALL_4
0x401970a	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	     10608	elf.c	FUNCTION_163	ELSE_1	CALL_4
0x4019711	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10608	elf.c	FUNCTION_163	ELSE_1	CALL_4
0x4019718	          0x4889ce	                            mov rsi, rcx	     10608	elf.c	FUNCTION_163	ELSE_1	CALL_4
0x401971b	          0x4889c7	                            mov rdi, rax	     10608	elf.c	FUNCTION_163	ELSE_1	CALL_4
0x401971e	      0xe87e69feff	call sym.swap_linux_prpsinfo32_ugid32_out	     10608	elf.c	FUNCTION_163	ELSE_1	CALL_4
0x4019723	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401972a	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019731	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019738	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401973f	        0x4883ec08	                              sub rsp, 8	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019743	      0x6880000000	                               push 0x80	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019748	          0x4989c9	                             mov r9, rcx	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401974b	    0x41b803000000	                              mov r8d, 3	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019751	      0xb900000000	                              mov ecx, 0	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019756	          0x4889c7	                            mov rdi, rax	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019759	      0xe800000000	                          call 0x401975e	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401975e	        0x4883c410	                           add rsp, 0x10	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4019762	        0x488b7df8	                mov rdi, qword [rbp - 8]	     10612	elf.c	FUNCTION_163
0x4019766	    0x6448333c2528	                xor rdi, qword fs:[0x28]	     10612	elf.c	FUNCTION_163
0x401976f	            0x7405	                            je 0x4019776	     10612	elf.c	FUNCTION_163
0x4019771	      0xe800000000	                          call 0x4019776	     10612	elf.c	FUNCTION_163
0x4019776	              0xc9	                                   leave	     10612	elf.c	FUNCTION_163
0x4019777	              0xc3	                                     ret	     10612	elf.c	FUNCTION_163
elfcore_write_s390_todpreg	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019dfd	              0x55	                                push rbp	     10860	elf.c	FUNCTION_176
0x4019dfe	          0x4889e5	                            mov rbp, rsp	     10860	elf.c	FUNCTION_176
0x4019e01	        0x4883ec40	                           sub rsp, 0x40	     10860	elf.c	FUNCTION_176
0x4019e05	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10860	elf.c	FUNCTION_176
0x4019e09	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10860	elf.c	FUNCTION_176
0x4019e0d	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10860	elf.c	FUNCTION_176
0x4019e11	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10860	elf.c	FUNCTION_176
0x4019e15	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10860	elf.c	FUNCTION_176
0x4019e19	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10861	elf.c	FUNCTION_176
0x4019e21	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e25	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e29	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e2d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e35	        0x4883ec08	                              sub rsp, 8	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e39	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e3c	              0x57	                                push rdi	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e3d	          0x4d89c1	                              mov r9, r8	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e40	    0x41b803030000	                          mov r8d, 0x303	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e46	          0x4889c7	                            mov rdi, rax	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e49	      0xe800000000	                          call 0x4019e4e	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e4e	        0x4883c410	                           add rsp, 0x10	     10862	elf.c	FUNCTION_176	CALL_1
0x4019e52	              0xc9	                                   leave	     10864	elf.c	FUNCTION_176
0x4019e53	              0xc3	                                     ret	     10864	elf.c	FUNCTION_176
bfd_elf_make_object	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	16
0x4000fca	              0x55	                                push rbp	       261	elf.c	FUNCTION_14
0x4000fcb	          0x4889e5	                            mov rbp, rsp	       261	elf.c	FUNCTION_14
0x4000fce	        0x4883ec20	                           sub rsp, 0x20	       261	elf.c	FUNCTION_14
0x4000fd2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       261	elf.c	FUNCTION_14
0x4000fd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	elf.c	FUNCTION_14	CALL_1
0x4000fda	        0x488b4008	                mov rax, qword [rax + 8]	       262	elf.c	FUNCTION_14	CALL_1
0x4000fde	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       262	elf.c	FUNCTION_14	CALL_1
0x4000fe5	        0x488945f8	                mov qword [rbp - 8], rax	       262	elf.c	FUNCTION_14	CALL_1
0x4000fe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	elf.c	FUNCTION_14	CALL_2
0x4000fed	          0x8b5004	                mov edx, dword [rax + 4]	       263	elf.c	FUNCTION_14	CALL_2
0x4000ff0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       263	elf.c	FUNCTION_14	CALL_2
0x4000ff4	      0xbea00c0000	                          mov esi, 0xca0	       263	elf.c	FUNCTION_14	CALL_2
0x4000ff9	          0x4889c7	                            mov rdi, rax	       263	elf.c	FUNCTION_14	CALL_2
0x4000ffc	      0xe800000000	                          call 0x4001001	       263	elf.c	FUNCTION_14	CALL_2
0x4001001	              0xc9	                                   leave	       265	elf.c	FUNCTION_14
0x4001002	              0xc3	                                     ret	       265	elf.c	FUNCTION_14
_bfd_elf_section_from_bfd_section	ELSE,3:DO,0:CALL,5:WHILE,0:FOR,0:IF,7:SWITCH,0:functions,0	69
0x40100da	              0x55	                                push rbp	      6453	elf.c	FUNCTION_78
0x40100db	          0x4889e5	                            mov rbp, rsp	      6453	elf.c	FUNCTION_78
0x40100de	        0x4883ec30	                           sub rsp, 0x30	      6453	elf.c	FUNCTION_78
0x40100e2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6453	elf.c	FUNCTION_78
0x40100e6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      6453	elf.c	FUNCTION_78
0x40100ea	    0x64488b042528	                mov rax, qword fs:[0x28]	      6453	elf.c	FUNCTION_78
0x40100f3	        0x488945f8	                mov qword [rbp - 8], rax	      6453	elf.c	FUNCTION_78
0x40100f7	            0x31c0	                            xor eax, eax	      6453	elf.c	FUNCTION_78
0x40100f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x40100fd	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x4010104	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x4010107	            0x742b	                            je 0x4010134	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x4010109	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x401010d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4010114	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x401011a	            0x85c0	                           test eax, eax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x401011c	            0x7416	                            je 0x4010134	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x401011e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6459	elf.c	FUNCTION_78	CALL_3
0x4010122	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6459	elf.c	FUNCTION_78	CALL_3
0x4010129	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      6459	elf.c	FUNCTION_78	CALL_3
0x401012f	      0xe9aa000000	                           jmp 0x40101de	      6459	elf.c	FUNCTION_78	CALL_3
0x4010134	    0x48817dd00000	               cmp qword [rbp - 0x30], 0	      6461	elf.c	FUNCTION_78	IF_2
0x401013c	            0x7509	                           jne 0x4010147	      6461	elf.c	FUNCTION_78	IF_2
0x401013e	    0xc745ecf1ffff	     mov dword [rbp - 0x14], 0xfffffff1 	      6462	elf.c	FUNCTION_78	IF_2
0x4010145	            0xeb33	                           jmp 0x401017a	      6462	elf.c	FUNCTION_78	IF_2
0x4010147	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3
0x401014b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3
0x401014e	      0x2500100000	                         and eax, 0x1000	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3
0x4010153	            0x85c0	                           test eax, eax	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3
0x4010155	            0x7409	                            je 0x4010160	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3
0x4010157	    0xc745ecf2ffff	     mov dword [rbp - 0x14], 0xfffffff2 	      6464	elf.c	FUNCTION_78	ELSE_1	IF_3
0x401015e	            0xeb1a	                           jmp 0x401017a	      6464	elf.c	FUNCTION_78	ELSE_1	IF_3
0x4010160	    0x48817dd00000	               cmp qword [rbp - 0x30], 0	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4
0x4010168	            0x7509	                           jne 0x4010173	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4
0x401016a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x4010171	            0xeb07	                           jmp 0x401017a	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x4010173	    0xc745ecfffeff	     mov dword [rbp - 0x14], 0xfffffeff 	      6468	elf.c	FUNCTION_78	ELSE_3
0x401017a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6470	elf.c	FUNCTION_78	CALL_4
0x401017e	        0x488b4008	                mov rax, qword [rax + 8]	      6470	elf.c	FUNCTION_78	CALL_4
0x4010182	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6470	elf.c	FUNCTION_78	CALL_4
0x4010189	        0x488945f0	             mov qword [rbp - 0x10], rax	      6470	elf.c	FUNCTION_78	CALL_4
0x401018d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6471	elf.c	FUNCTION_78	IF_5
0x4010191	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x4010198	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x401019b	            0x742b	                            je 0x40101c8	      6471	elf.c	FUNCTION_78	IF_5
0x401019d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6473	elf.c	FUNCTION_78	IF_5
0x40101a0	          0x8945e8	             mov dword [rbp - 0x18], eax	      6473	elf.c	FUNCTION_78	IF_5
0x40101a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101a7	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101ae	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101b2	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101b6	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101ba	          0x4889cf	                            mov rdi, rcx	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101bd	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101bf	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101c1	            0x7405	                            je 0x40101c8	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40101c3	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x40101c6	            0xeb16	                           jmp 0x40101de	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x40101c8	    0x817decfffeff	     cmp dword [rbp - 0x14], 0xfffffeff 	      6479	elf.c	FUNCTION_78	IF_7
0x40101cf	            0x750a	                           jne 0x40101db	      6479	elf.c	FUNCTION_78	IF_7
0x40101d1	      0xbf0f000000	                            mov edi, 0xf	      6480	elf.c	FUNCTION_78	CALL_5
0x40101d6	      0xe800000000	                          call 0x40101db	      6480	elf.c	FUNCTION_78	CALL_5
0x40101db	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6482	elf.c	FUNCTION_78
0x40101de	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6483	elf.c	FUNCTION_78
0x40101e2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6483	elf.c	FUNCTION_78
0x40101eb	            0x7405	                            je 0x40101f2	      6483	elf.c	FUNCTION_78
0x40101ed	      0xe800000000	                          call 0x40101f2	      6483	elf.c	FUNCTION_78
0x40101f2	              0xc9	                                   leave	      6483	elf.c	FUNCTION_78
0x40101f3	              0xc3	                                     ret	      6483	elf.c	FUNCTION_78
_bfd_elf_set_reloc_sh_name	ELSE,0:DO,0:CALL,5:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	54
0x4007b20	              0x55	                                push rbp	      3064	elf.c	FUNCTION_45
0x4007b21	          0x4889e5	                            mov rbp, rsp	      3064	elf.c	FUNCTION_45
0x4007b24	        0x4883ec30	                           sub rsp, 0x30	      3064	elf.c	FUNCTION_45
0x4007b28	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3064	elf.c	FUNCTION_45
0x4007b2c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3064	elf.c	FUNCTION_45
0x4007b30	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3064	elf.c	FUNCTION_45
0x4007b34	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      3064	elf.c	FUNCTION_45
0x4007b37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3066	elf.c	FUNCTION_45	CALL_2
0x4007b3b	          0x4889c7	                            mov rdi, rax	      3066	elf.c	FUNCTION_45	CALL_2
0x4007b3e	      0xe800000000	                          call 0x4007b43	      3066	elf.c	FUNCTION_45	CALL_2
0x4007b43	        0x488d5006	                      lea rdx, [rax + 6]	      3065	elf.c	FUNCTION_45	CALL_1
0x4007b47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3065	elf.c	FUNCTION_45	CALL_1
0x4007b4b	          0x4889d6	                            mov rsi, rdx	      3065	elf.c	FUNCTION_45	CALL_1
0x4007b4e	          0x4889c7	                            mov rdi, rax	      3065	elf.c	FUNCTION_45	CALL_1
0x4007b51	      0xe800000000	                          call 0x4007b56	      3065	elf.c	FUNCTION_45	CALL_1
0x4007b56	        0x488945f8	                mov qword [rbp - 8], rax	      3065	elf.c	FUNCTION_45	CALL_1
0x4007b5a	      0x48837df800	                  cmp qword [rbp - 8], 0	      3067	elf.c	FUNCTION_45	IF_1
0x4007b5f	            0x7507	                           jne 0x4007b68	      3067	elf.c	FUNCTION_45	IF_1
0x4007b61	      0xb800000000	                              mov eax, 0	      3068	elf.c	FUNCTION_45	IF_1
0x4007b66	            0xeb7b	                           jmp 0x4007be3	      3068	elf.c	FUNCTION_45	IF_1
0x4007b68	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b6c	            0x7407	                            je 0x4007b75	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b6e	      0xbe00000000	                              mov esi, 0	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b73	            0xeb05	                           jmp 0x4007b7a	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b75	      0xbe00000000	                              mov esi, 0	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b7a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b82	          0x4889d1	                            mov rcx, rdx	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b85	          0x4889f2	                            mov rdx, rsi	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b88	      0xbe00000000	                              mov esi, 0	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b8d	          0x4889c7	                            mov rdi, rax	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b90	      0xb800000000	                              mov eax, 0	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b95	      0xe800000000	                          call 0x4007b9a	      3070	elf.c	FUNCTION_45	CALL_3
0x4007b9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3072	elf.c	FUNCTION_45	CALL_5
0x4007b9e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3072	elf.c	FUNCTION_45	CALL_5
0x4007ba5	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bac	        0x488b4008	                mov rax, qword [rax + 8]	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bb0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bb4	      0xba00000000	                              mov edx, 0	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bb9	          0x4889ce	                            mov rsi, rcx	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bbc	          0x4889c7	                            mov rdi, rax	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bbf	      0xe800000000	                          call 0x4007bc4	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bc4	            0x89c2	                            mov edx, eax	      3072	elf.c	FUNCTION_45	CALL_5
0x4007bc6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3071	elf.c	FUNCTION_45
0x4007bca	            0x8910	                    mov dword [rax], edx	      3071	elf.c	FUNCTION_45
0x4007bcc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3074	elf.c	FUNCTION_45	IF_2
0x4007bd0	            0x8b00	                    mov eax, dword [rax]	      3074	elf.c	FUNCTION_45	IF_2
0x4007bd2	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3074	elf.c	FUNCTION_45	IF_2
0x4007bd5	            0x7507	                           jne 0x4007bde	      3074	elf.c	FUNCTION_45	IF_2
0x4007bd7	      0xb800000000	                              mov eax, 0	      3075	elf.c	FUNCTION_45	IF_2
0x4007bdc	            0xeb05	                           jmp 0x4007be3	      3075	elf.c	FUNCTION_45	IF_2
0x4007bde	      0xb801000000	                              mov eax, 1	      3077	elf.c	FUNCTION_45
0x4007be3	              0xc9	                                   leave	      3078	elf.c	FUNCTION_45
0x4007be4	              0xc3	                                     ret	      3078	elf.c	FUNCTION_45
find_section_in_list	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,1:IF,1:SWITCH,0:functions,0	19
0x400f1f7	              0x55	                                push rbp	      6044	elf.c	FUNCTION_72
0x400f1f8	          0x4889e5	                            mov rbp, rsp	      6044	elf.c	FUNCTION_72
0x400f1fb	          0x897dfc	                mov dword [rbp - 4], edi	      6044	elf.c	FUNCTION_72
0x400f1fe	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6044	elf.c	FUNCTION_72
0x400f202	            0xeb18	                           jmp 0x400f21c	      6045	elf.c	FUNCTION_72	FOR_1
0x400f204	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400f208	          0x8b4050	            mov eax, dword [rax + 0x50] 	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400f20b	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400f20e	            0x7415	                            je 0x400f225	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400f210	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6045	elf.c	FUNCTION_72	FOR_1
0x400f214	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6045	elf.c	FUNCTION_72	FOR_1
0x400f218	        0x488945f0	             mov qword [rbp - 0x10], rax	      6045	elf.c	FUNCTION_72	FOR_1
0x400f21c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6045	elf.c	FUNCTION_72	FOR_1
0x400f221	            0x75e1	                           jne 0x400f204	      6045	elf.c	FUNCTION_72	FOR_1
0x400f223	            0xeb01	                           jmp 0x400f226	      6045	elf.c	FUNCTION_72	FOR_1
0x400f225	              0x90	                                     nop	      6047	elf.c	FUNCTION_72	FOR_1	IF_1
0x400f226	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6048	elf.c	FUNCTION_72
0x400f22a	              0x5d	                                 pop rbp	      6049	elf.c	FUNCTION_72
0x400f22b	              0xc3	                                     ret	      6049	elf.c	FUNCTION_72
elfcore_write_s390_todcmp	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019da6	              0x55	                                push rbp	     10848	elf.c	FUNCTION_175
0x4019da7	          0x4889e5	                            mov rbp, rsp	     10848	elf.c	FUNCTION_175
0x4019daa	        0x4883ec40	                           sub rsp, 0x40	     10848	elf.c	FUNCTION_175
0x4019dae	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10848	elf.c	FUNCTION_175
0x4019db2	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10848	elf.c	FUNCTION_175
0x4019db6	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10848	elf.c	FUNCTION_175
0x4019dba	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10848	elf.c	FUNCTION_175
0x4019dbe	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10848	elf.c	FUNCTION_175
0x4019dc2	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10849	elf.c	FUNCTION_175
0x4019dca	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10850	elf.c	FUNCTION_175	CALL_1
0x4019dce	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10850	elf.c	FUNCTION_175	CALL_1
0x4019dd2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10850	elf.c	FUNCTION_175	CALL_1
0x4019dd6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10850	elf.c	FUNCTION_175	CALL_1
0x4019dda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10850	elf.c	FUNCTION_175	CALL_1
0x4019dde	        0x4883ec08	                              sub rsp, 8	     10850	elf.c	FUNCTION_175	CALL_1
0x4019de2	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10850	elf.c	FUNCTION_175	CALL_1
0x4019de5	              0x57	                                push rdi	     10850	elf.c	FUNCTION_175	CALL_1
0x4019de6	          0x4d89c1	                              mov r9, r8	     10850	elf.c	FUNCTION_175	CALL_1
0x4019de9	    0x41b802030000	                          mov r8d, 0x302	     10850	elf.c	FUNCTION_175	CALL_1
0x4019def	          0x4889c7	                            mov rdi, rax	     10850	elf.c	FUNCTION_175	CALL_1
0x4019df2	      0xe800000000	                          call 0x4019df7	     10850	elf.c	FUNCTION_175	CALL_1
0x4019df7	        0x4883c410	                           add rsp, 0x10	     10850	elf.c	FUNCTION_175	CALL_1
0x4019dfb	              0xc9	                                   leave	     10852	elf.c	FUNCTION_175
0x4019dfc	              0xc3	                                     ret	     10852	elf.c	FUNCTION_175
vma_page_aligned_bias	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	15
0x400c89f	              0x55	                                push rbp	      5192	elf.c	FUNCTION_67
0x400c8a0	          0x4889e5	                            mov rbp, rsp	      5192	elf.c	FUNCTION_67
0x400c8a3	        0x48897df8	                mov qword [rbp - 8], rdi	      5192	elf.c	FUNCTION_67
0x400c8a7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5192	elf.c	FUNCTION_67
0x400c8ab	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5192	elf.c	FUNCTION_67
0x400c8af	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5194	elf.c	FUNCTION_67	IF_1
0x400c8b4	            0x7508	                           jne 0x400c8be	      5194	elf.c	FUNCTION_67	IF_1
0x400c8b6	    0x48c745e80100	               mov qword [rbp - 0x18], 1	      5195	elf.c	FUNCTION_67	IF_1
0x400c8be	        0x488b45f8	                mov rax, qword [rbp - 8]	      5196	elf.c	FUNCTION_67
0x400c8c2	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      5196	elf.c	FUNCTION_67
0x400c8c6	      0xba00000000	                              mov edx, 0	      5196	elf.c	FUNCTION_67
0x400c8cb	        0x48f775e8	                  div qword [rbp - 0x18]	      5196	elf.c	FUNCTION_67
0x400c8cf	          0x4889d0	                            mov rax, rdx	      5196	elf.c	FUNCTION_67
0x400c8d2	              0x5d	                                 pop rbp	      5197	elf.c	FUNCTION_67
0x400c8d3	              0xc3	                                     ret	      5197	elf.c	FUNCTION_67
elfcore_netbsd_get_lwpid	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	25
0x4018781	              0x55	                                push rbp	     10138	elf.c	FUNCTION_152
0x4018782	          0x4889e5	                            mov rbp, rsp	     10138	elf.c	FUNCTION_152
0x4018785	        0x4883ec20	                           sub rsp, 0x20	     10138	elf.c	FUNCTION_152
0x4018789	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10138	elf.c	FUNCTION_152
0x401878d	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10138	elf.c	FUNCTION_152
0x4018791	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10141	elf.c	FUNCTION_152	CALL_1
0x4018795	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10141	elf.c	FUNCTION_152	CALL_1
0x4018799	      0xbe40000000	                           mov esi, 0x40	     10141	elf.c	FUNCTION_152	CALL_1
0x401879e	          0x4889c7	                            mov rdi, rax	     10141	elf.c	FUNCTION_152	CALL_1
0x40187a1	      0xe800000000	                          call 0x40187a6	     10141	elf.c	FUNCTION_152	CALL_1
0x40187a6	        0x488945f8	                mov qword [rbp - 8], rax	     10141	elf.c	FUNCTION_152	CALL_1
0x40187aa	      0x48837df800	                  cmp qword [rbp - 8], 0	     10142	elf.c	FUNCTION_152	IF_1
0x40187af	            0x741f	                            je 0x40187d0	     10142	elf.c	FUNCTION_152	IF_1
0x40187b1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10144	elf.c	FUNCTION_152	IF_1	CALL_2
0x40187b5	        0x4883c001	                              add rax, 1	     10144	elf.c	FUNCTION_152	IF_1	CALL_2
0x40187b9	          0x4889c7	                            mov rdi, rax	     10144	elf.c	FUNCTION_152	IF_1	CALL_2
0x40187bc	      0xe800000000	                          call 0x40187c1	     10144	elf.c	FUNCTION_152	IF_1	CALL_2
0x40187c1	            0x89c2	                            mov edx, eax	     10144	elf.c	FUNCTION_152	IF_1	CALL_2
0x40187c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10144	elf.c	FUNCTION_152	IF_1	CALL_2
0x40187c7	            0x8910	                    mov dword [rax], edx	     10144	elf.c	FUNCTION_152	IF_1	CALL_2
0x40187c9	      0xb801000000	                              mov eax, 1	     10145	elf.c	FUNCTION_152	IF_1
0x40187ce	            0xeb05	                           jmp 0x40187d5	     10145	elf.c	FUNCTION_152	IF_1
0x40187d0	      0xb800000000	                              mov eax, 0	     10147	elf.c	FUNCTION_152
0x40187d5	              0xc9	                                   leave	     10148	elf.c	FUNCTION_152
0x40187d6	              0xc3	                                     ret	     10148	elf.c	FUNCTION_152
assign_file_positions_for_load_sections	ELSE,19:DO,0:CALL,48:WHILE,0:FOR,9:IF,62:SWITCH,0:functions,0	1401
0x400cafd	              0x55	                                push rbp	      5250	elf.c	FUNCTION_70
0x400cafe	          0x4889e5	                            mov rbp, rsp	      5250	elf.c	FUNCTION_70
0x400cb01	    0x4881ece00000	                           sub rsp, 0xe0	      5250	elf.c	FUNCTION_70
0x400cb08	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      5250	elf.c	FUNCTION_70
0x400cb0f	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	      5250	elf.c	FUNCTION_70
0x400cb16	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5251	elf.c	FUNCTION_70	CALL_1
0x400cb1d	        0x488b4008	                mov rax, qword [rax + 8]	      5251	elf.c	FUNCTION_70	CALL_1
0x400cb21	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      5251	elf.c	FUNCTION_70	CALL_1
0x400cb28	        0x488945a0	             mov qword [rbp - 0x60], rax	      5251	elf.c	FUNCTION_70	CALL_1
0x400cb2c	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      5257	elf.c	FUNCTION_70
0x400cb36	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5260	elf.c	FUNCTION_70
0x400cb41	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      5262	elf.c	FUNCTION_70	IF_1
0x400cb49	            0x7527	                           jne 0x400cb72	      5262	elf.c	FUNCTION_70	IF_1
0x400cb4b	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400cb52	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400cb59	          0x4889d6	                            mov rsi, rdx	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400cb5c	          0x4889c7	                            mov rdi, rax	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400cb5f	      0xe800000000	                          call 0x400cb64	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400cb64	            0x85c0	                           test eax, eax	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400cb66	            0x750a	                           jne 0x400cb72	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400cb68	      0xb800000000	                              mov eax, 0	      5264	elf.c	FUNCTION_70	IF_1
0x400cb6d	      0xe9e7180000	                           jmp 0x400e459	      5264	elf.c	FUNCTION_70	IF_1
0x400cb72	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      5266	elf.c	FUNCTION_70
0x400cb7c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cb83	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cb8a	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cb91	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cb94	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cb9b	            0xeb3a	                           jmp 0x400cbd7	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cb9d	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      5269	elf.c	FUNCTION_70	FOR_1
0x400cba4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x400cbab	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x400cbaf	          0x4885c0	                           test rax, rax	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x400cbb2	            0x7412	                            je 0x400cbc6	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x400cbb4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5271	elf.c	FUNCTION_70	FOR_1	IF_2
0x400cbbb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5271	elf.c	FUNCTION_70	FOR_1	IF_2
0x400cbbf	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5271	elf.c	FUNCTION_70	FOR_1	IF_2
0x400cbc6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cbcd	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cbd0	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cbd7	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cbdf	            0x75bc	                           jne 0x400cb9d	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400cbe1	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      5274	elf.c	FUNCTION_70	IF_3
0x400cbe8	            0x7448	                            je 0x400cc32	      5274	elf.c	FUNCTION_70	IF_3
0x400cbea	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400cbf1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400cbf8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400cbfc	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400cc03	           0xfb612	                   movzx edx, byte [rdx]	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400cc06	           0xfb6d2	                           movzx edx, dl	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400cc09	        0x48895018	             mov qword [rax + 0x18], rdx	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400cc0d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc14	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc1b	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc1f	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc26	         0xfb65201	               movzx edx, byte [rdx + 1]	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc2a	           0xfb6d2	                           movzx edx, dl	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc2d	          0x895040	             mov dword [rax + 0x40], edx	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc30	            0xeb2b	                           jmp 0x400cc5d	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400cc32	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5282	elf.c	FUNCTION_70	ELSE_1	CALL_6
0x400cc39	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5282	elf.c	FUNCTION_70	ELSE_1	CALL_6
0x400cc40	    0x48c740180000	               mov qword [rax + 0x18], 0	      5282	elf.c	FUNCTION_70	ELSE_1	CALL_6
0x400cc48	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400cc4f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400cc56	    0xc74040000000	               mov dword [rax + 0x40], 0	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400cc5d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5286	elf.c	FUNCTION_70	CALL_8
0x400cc64	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5286	elf.c	FUNCTION_70	CALL_8
0x400cc6b	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      5286	elf.c	FUNCTION_70	CALL_8
0x400cc71	          0x895044	             mov dword [rax + 0x44], edx	      5286	elf.c	FUNCTION_70	CALL_8
0x400cc74	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400cc7b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400cc82	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400cc89	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400cc8d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400cc91	            0x7536	                           jne 0x400ccc9	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400cc93	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5289	elf.c	FUNCTION_70	CALL_10
0x400cc9a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5289	elf.c	FUNCTION_70	CALL_10
0x400cca1	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5289	elf.c	FUNCTION_70	CALL_10
0x400cca8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccac	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccb3	         0xfb65201	               movzx edx, byte [rdx + 1]	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccb7	           0xfb6d2	                           movzx edx, dl	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccba	     0xfaf953cffff	            imul edx, dword [rbp - 0xc4]	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccc1	            0x89d2	                            mov edx, edx	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccc3	        0x48895038	             mov qword [rax + 0x38], rdx	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccc7	            0xeb48	                           jmp 0x400cd11	      5289	elf.c	FUNCTION_70	CALL_10
0x400ccc9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ccd0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ccd7	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ccde	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cce2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cce6	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cced	         0xfb64001	               movzx eax, byte [rax + 1]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ccf1	           0xfb6c0	                           movzx eax, al	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ccf4	     0xfaf853cffff	            imul eax, dword [rbp - 0xc4]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ccfb	            0x89c0	                            mov eax, eax	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ccfd	          0x4839c2	                            cmp rdx, rax	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cd00	            0x730f	                           jae 0x400cd11	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cd02	      0xbeac140000	                         mov esi, 0x14ac	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cd07	      0xbf00000000	                              mov edi, 0	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cd0c	      0xe800000000	                          call 0x400cd11	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400cd11	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      5294	elf.c	FUNCTION_70	IF_5
0x400cd18	            0x7534	                           jne 0x400cd4e	      5294	elf.c	FUNCTION_70	IF_5
0x400cd1a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd21	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd28	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd2f	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd33	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd3a	           0xfb612	                   movzx edx, byte [rdx]	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd3d	           0xfb6d2	                           movzx edx, dl	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd40	        0x48895040	             mov qword [rax + 0x40], rdx	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400cd44	      0xb801000000	                              mov eax, 1	      5297	elf.c	FUNCTION_70	IF_5
0x400cd49	      0xe90b170000	                           jmp 0x400e459	      5297	elf.c	FUNCTION_70	IF_5
0x400cd4e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd55	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd5c	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd63	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd67	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd6b	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd72	         0xfb65201	               movzx edx, byte [rdx + 1]	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd76	           0xfb6ca	                           movzx ecx, dl	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd79	      0xba00000000	                              mov edx, 0	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd7e	          0x48f7f1	                                 div rcx	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd81	          0x4889d0	                            mov rax, rdx	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd84	          0x4885c0	                           test rax, rax	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd87	            0x740f	                            je 0x400cd98	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd89	      0xbebe140000	                         mov esi, 0x14be	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd8e	      0xbf00000000	                              mov edi, 0	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd93	      0xe800000000	                          call 0x400cd98	      5309	elf.c	FUNCTION_70	CALL_15
0x400cd98	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5313	elf.c	FUNCTION_70	CALL_17
0x400cd9f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5313	elf.c	FUNCTION_70	CALL_17
0x400cda6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5313	elf.c	FUNCTION_70	CALL_17
0x400cdad	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5313	elf.c	FUNCTION_70	CALL_17
0x400cdb1	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5313	elf.c	FUNCTION_70	CALL_17
0x400cdb5	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      5313	elf.c	FUNCTION_70	CALL_17
0x400cdbc	         0xfb65201	               movzx edx, byte [rdx + 1]	      5313	elf.c	FUNCTION_70	CALL_17
0x400cdc0	           0xfb6f2	                           movzx esi, dl	      5312	elf.c	FUNCTION_70	CALL_16
0x400cdc3	      0xba00000000	                              mov edx, 0	      5312	elf.c	FUNCTION_70	CALL_16
0x400cdc8	          0x48f7f6	                                 div rsi	      5312	elf.c	FUNCTION_70	CALL_16
0x400cdcb	          0x4889c1	                            mov rcx, rax	      5312	elf.c	FUNCTION_70	CALL_16
0x400cdce	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5311	elf.c	FUNCTION_70
0x400cdd5	      0xba40000000	                           mov edx, 0x40	      5311	elf.c	FUNCTION_70
0x400cdda	          0x4889ce	                            mov rsi, rcx	      5311	elf.c	FUNCTION_70
0x400cddd	          0x4889c7	                            mov rdi, rax	      5311	elf.c	FUNCTION_70
0x400cde0	      0xe800000000	                          call 0x400cde5	      5311	elf.c	FUNCTION_70
0x400cde5	        0x488945a8	             mov qword [rbp - 0x58], rax	      5311	elf.c	FUNCTION_70
0x400cde9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5315	elf.c	FUNCTION_70	CALL_18
0x400cdf0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5315	elf.c	FUNCTION_70	CALL_18
0x400cdf7	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      5315	elf.c	FUNCTION_70	CALL_18
0x400cdfb	        0x48895060	             mov qword [rax + 0x60], rdx	      5315	elf.c	FUNCTION_70	CALL_18
0x400cdff	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5316	elf.c	FUNCTION_70	IF_6
0x400ce04	            0x750a	                           jne 0x400ce10	      5316	elf.c	FUNCTION_70	IF_6
0x400ce06	      0xb800000000	                              mov eax, 0	      5317	elf.c	FUNCTION_70	IF_6
0x400ce0b	      0xe949160000	                           jmp 0x400e459	      5317	elf.c	FUNCTION_70	IF_6
0x400ce10	    0x48c78570ffff	               mov qword [rbp - 0x90], 1	      5319	elf.c	FUNCTION_70
0x400ce1b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5320	elf.c	FUNCTION_70	IF_7
0x400ce22	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5320	elf.c	FUNCTION_70	IF_7
0x400ce25	          0xc1e805	                              shr eax, 5	      5320	elf.c	FUNCTION_70	IF_7
0x400ce28	      0x25ffff0f00	                        and eax, 0xfffff	      5320	elf.c	FUNCTION_70	IF_7
0x400ce2d	      0x2500010000	                          and eax, 0x100	      5320	elf.c	FUNCTION_70	IF_7
0x400ce32	            0x85c0	                           test eax, eax	      5320	elf.c	FUNCTION_70	IF_7
0x400ce34	            0x740f	                            je 0x400ce45	      5320	elf.c	FUNCTION_70	IF_7
0x400ce36	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5321	elf.c	FUNCTION_70	IF_7
0x400ce3a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5321	elf.c	FUNCTION_70	IF_7
0x400ce3e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5321	elf.c	FUNCTION_70	IF_7
0x400ce45	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5323	elf.c	FUNCTION_70
0x400ce49	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5323	elf.c	FUNCTION_70
0x400ce50	           0xfb600	                   movzx eax, byte [rax]	      5323	elf.c	FUNCTION_70
0x400ce53	           0xfb6c0	                           movzx eax, al	      5323	elf.c	FUNCTION_70
0x400ce56	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5323	elf.c	FUNCTION_70
0x400ce5d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5324	elf.c	FUNCTION_70
0x400ce61	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5324	elf.c	FUNCTION_70
0x400ce68	         0xfb64001	               movzx eax, byte [rax + 1]	      5324	elf.c	FUNCTION_70
0x400ce6c	           0xfb6c0	                           movzx eax, al	      5324	elf.c	FUNCTION_70
0x400ce6f	     0xfaf853cffff	            imul eax, dword [rbp - 0xc4]	      5324	elf.c	FUNCTION_70
0x400ce76	            0x89c0	                            mov eax, eax	      5324	elf.c	FUNCTION_70
0x400ce78	    0x48018568ffff	            add qword [rbp - 0x98], rax 	      5324	elf.c	FUNCTION_70
0x400ce7f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5325	elf.c	FUNCTION_70	IF_8
0x400ce86	    0x48398578ffff	            cmp qword [rbp - 0x88], rax 	      5325	elf.c	FUNCTION_70	IF_8
0x400ce8d	            0x730d	                           jae 0x400ce9c	      5325	elf.c	FUNCTION_70	IF_8
0x400ce8f	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5326	elf.c	FUNCTION_70	IF_8
0x400ce9a	            0xeb0e	                           jmp 0x400ceaa	      5326	elf.c	FUNCTION_70	IF_8
0x400ce9c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5328	elf.c	FUNCTION_70	ELSE_3
0x400cea3	    0x48298578ffff	             sub qword [rbp - 0x88], rax	      5328	elf.c	FUNCTION_70	ELSE_3
0x400ceaa	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5329	elf.c	FUNCTION_70	ELSE_3
0x400ceb1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5329	elf.c	FUNCTION_70	ELSE_3
0x400ceb8	          0x4801d0	                            add rax, rdx	      5329	elf.c	FUNCTION_70	ELSE_3
0x400cebb	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5329	elf.c	FUNCTION_70	ELSE_3
0x400cec2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400cec9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400ced0	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400ced7	          0x488b00	                    mov rax, qword [rax]	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400ceda	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400cee1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400cee5	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400ceec	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400cef6	      0xe92b150000	                           jmp 0x400e426	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400cefb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x400cf02	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x400cf05	          0x83f801	                              cmp eax, 1	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x400cf08	            0x7652	                           jbe 0x400cf5c	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x400cf0a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x400cf11	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x400cf18	         0xfb74038	           movzx eax, word [rax + 0x38] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x400cf1c	        0x6683f804	                               cmp ax, 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x400cf20	            0x7511	                           jne 0x400cf33	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x400cf22	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5346	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x400cf29	        0x488b4008	                mov rax, qword [rax + 8]	      5346	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x400cf2d	        0x4883f804	                              cmp rax, 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x400cf31	            0x7429	                            je 0x400cf5c	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x400cf33	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf3a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf3d	            0x89c6	                            mov esi, eax	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf3f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf46	        0x4883c048	                           add rax, 0x48	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf4a	      0xb900000000	                              mov ecx, 0	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf4f	      0xba08000000	                              mov edx, 8	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf54	          0x4889c7	                            mov rdi, rax	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf57	      0xe800000000	                          call 0x400cf5c	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x400cf5c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf63	        0x488b5008	                mov rdx, qword [rax + 8]	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf67	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf6e	          0x488910	                    mov qword [rax], rdx	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf71	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf78	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf7c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf83	        0x48895008	                mov qword [rax + 8], rdx	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400cf87	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x400cf8e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x400cf91	            0x85c0	                           test eax, eax	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x400cf93	            0x7511	                           jne 0x400cfa6	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x400cf95	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5359	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x400cf9c	    0x48c740180000	               mov qword [rax + 0x18], 0	      5359	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x400cfa4	            0xeb28	                           jmp 0x400cfce	      5359	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x400cfa6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfad	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfb1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfb5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfbc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfc0	          0x4829c2	                            sub rdx, rax	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfc3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfca	        0x48895018	             mov qword [rax + 0x18], rdx	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400cfce	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cfd5	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cfd9	          0x83e002	                              and eax, 2	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cfdc	            0x84c0	                             test al, al	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cfde	            0x7418	                            je 0x400cff8	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cfe0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cfe7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cfeb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cff2	        0x48895020	             mov qword [rax + 0x20], rdx	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cff6	            0xeb47	                           jmp 0x400d03f	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400cff8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5365	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x400cfff	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5365	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x400d002	            0x85c0	                           test eax, eax	      5365	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x400d004	            0x7511	                           jne 0x400d017	      5365	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x400d006	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5366	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x400d00d	    0x48c740200000	               mov qword [rax + 0x20], 0	      5366	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x400d015	            0xeb28	                           jmp 0x400d03f	      5366	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x400d017	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d01e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d022	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d026	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d02d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d031	          0x4829c2	                            sub rdx, rax	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d034	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d03b	        0x48895020	             mov qword [rax + 0x20], rdx	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400d03f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d046	          0x488b00	                    mov rax, qword [rax]	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d049	        0x4883f801	                              cmp rax, 1	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d04d	            0x755a	                           jne 0x400d0a9	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d04f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d056	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d059	          0xc1e805	                              shr eax, 5	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d05c	      0x25ffff0f00	                        and eax, 0xfffff	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d061	      0x2500010000	                          and eax, 0x100	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d066	            0x85c0	                           test eax, eax	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d068	            0x743f	                            je 0x400d0a9	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d06a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d071	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d075	          0x83e004	                              and eax, 4	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d078	            0x84c0	                             test al, al	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d07a	            0x7412	                            je 0x400d08e	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d07c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d083	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d087	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x400d08e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d095	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d09c	        0x48895038	             mov qword [rax + 0x38], rdx	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d0a0	    0x838538ffffff	               add dword [rbp - 0xc8], 1	      5385	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d0a7	            0xeb74	                           jmp 0x400d11d	      5385	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400d0a9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0b0	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0b4	          0x83e004	                              and eax, 4	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0b7	            0x84c0	                             test al, al	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0b9	            0x7418	                            je 0x400d0d3	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0bb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0c2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0c6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0cd	        0x48895038	             mov qword [rax + 0x38], rdx	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0d1	            0xeb4a	                           jmp 0x400d11d	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400d0d3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0da	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0dd	            0x85c0	                           test eax, eax	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0df	            0x752d	                           jne 0x400d10e	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0e1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0e5	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0ec	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0f0	           0xfb6c0	                           movzx eax, al	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0f3	      0xba01000000	                              mov edx, 1	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0f8	            0x89c1	                            mov ecx, eax	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0fa	            0xd3e2	                             shl edx, cl	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0fc	            0x89d0	                            mov eax, edx	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d0fe	          0x4863d0	                         movsxd rdx, eax	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d101	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d108	        0x48895038	             mov qword [rax + 0x38], rdx	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d10c	            0xeb0f	                           jmp 0x400d11d	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400d10e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400d115	    0x48c740380000	               mov qword [rax + 0x38], 0	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400d11d	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400d127	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400d12f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d136	          0x488b00	                    mov rax, qword [rax]	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d139	        0x4883f801	                              cmp rax, 1	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d13d	     0xf855d020000	                           jne 0x400d3a0	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d143	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d14a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d14d	            0x85c0	                           test eax, eax	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d14f	     0xf844b020000	                            je 0x400d3a0	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d155	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      5400	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d15f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d166	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d16a	          0x83e004	                              and eax, 4	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d16d	            0x84c0	                             test al, al	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d16f	            0x7414	                            je 0x400d185	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d171	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d178	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d17c	        0x48894590	             mov qword [rbp - 0x70], rax	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d180	      0xe992000000	                           jmp 0x400d217	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400d185	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d18f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d196	        0x4883c048	                           add rax, 0x48	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d19a	        0x48894580	             mov qword [rbp - 0x80], rax	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d19e	            0xeb36	                           jmp 0x400d1d6	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1a0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1a4	          0x488b00	                    mov rax, qword [rax]	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1a7	          0x8b4070	            mov eax, dword [rax + 0x70] 	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1aa	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1b0	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5411	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	IF_19
0x400d1b6	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      5411	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	IF_19
0x400d1bc	            0x760c	                           jbe 0x400d1ca	      5411	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	IF_19
0x400d1be	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5412	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	IF_19
0x400d1c4	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      5412	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	IF_19
0x400d1ca	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1d1	      0x4883458008	               add qword [rbp - 0x80], 8	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1d6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1dd	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1e0	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1e6	            0x77b8	                            ja 0x400d1a0	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400d1e8	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400d1ee	      0xba01000000	                              mov edx, 1	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400d1f3	            0x89c1	                            mov ecx, eax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400d1f5	          0x48d3e2	                             shl rdx, cl	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400d1f8	          0x4889d0	                            mov rax, rdx	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400d1fb	        0x48894590	             mov qword [rbp - 0x70], rax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400d1ff	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5415	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	IF_20
0x400d203	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      5415	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	IF_20
0x400d20a	            0x730b	                           jae 0x400d217	      5415	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	IF_20
0x400d20c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5416	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	IF_20
0x400d213	        0x48894590	             mov qword [rbp - 0x70], rax	      5416	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	IF_20
0x400d217	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400d221	            0xeb4d	                           jmp 0x400d270	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400d223	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d22a	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d230	        0x4883c208	                              add rdx, 8	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d234	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d239	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d23c	      0x2502010000	                          and eax, 0x102	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d241	            0x85c0	                           test eax, eax	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d243	            0x7524	                           jne 0x400d269	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d245	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d24c	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d252	        0x4883c208	                              add rdx, 8	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d256	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d25b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d262	    0xc74004080000	                  mov dword [rax + 4], 8	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400d269	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400d270	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400d277	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400d27a	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400d280	            0x77a1	                            ja 0x400d223	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400d282	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      5428	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d28c	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400d296	            0xeb38	                           jmp 0x400d2d0	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400d298	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d29f	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d2a5	        0x4883c208	                              add rdx, 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d2a9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d2ae	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d2b5	          0x8b4004	                mov eax, dword [rax + 4]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d2b8	          0x83f808	                              cmp eax, 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d2bb	            0x740c	                            je 0x400d2c9	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400d2bd	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x400d2c7	            0xeb19	                           jmp 0x400d2e2	      5433	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x400d2c9	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400d2d0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400d2d7	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400d2da	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400d2e0	            0x77b6	                            ja 0x400d298	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400d2e2	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d2e9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d2f0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d2f4	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d2f8	          0x4889ce	                            mov rsi, rcx	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d2fb	          0x4889c7	                            mov rdi, rax	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d2fe	      0xe89cf5ffff	          call sym.vma_page_aligned_bias	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d303	        0x48894588	             mov qword [rbp - 0x78], rax	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400d307	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 1	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d30e	            0x7661	                           jbe 0x400d371	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d310	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d314	     0xfb6808a0300	          movzx eax, byte [rax + 0x38a] 	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d31b	          0x83e080	                     and eax, 0xffffff80	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d31e	            0x84c0	                             test al, al	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d320	            0x744f	                            je 0x400d371	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d322	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d329	        0x488d50ff	                      lea rdx, [rax - 1]	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d32d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d334	          0x4821d0	                            and rax, rdx	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d337	          0x4885c0	                           test rax, rax	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d33a	            0x7435	                            je 0x400d371	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d33c	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d343	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d347	          0x4801c2	                            add rdx, rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d34a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d351	          0x4831c2	                            xor rdx, rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d354	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d35b	          0x48f7d8	                                 neg rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d35e	          0x4821d0	                            and rax, rdx	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d361	          0x4885c0	                           test rax, rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d364	            0x750b	                           jne 0x400d371	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d366	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d36d	        0x48014588	            add qword [rbp - 0x78], rax 	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400d371	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d378	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d37c	          0x4801d0	                            add rax, rdx	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d37f	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d386	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x400d38d	     0xf85e3000000	                           jne 0x400d476	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x400d393	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5459	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_11
0x400d39b	      0xe9d6000000	                           jmp 0x400d476	      5398	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d3a0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3a7	          0x488b00	                    mov rax, qword [rax]	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3aa	        0x4883f802	                              cmp rax, 2	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3ae	            0x756b	                           jne 0x400d41b	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3b0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3b7	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3ba	          0x83f801	                              cmp eax, 1	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3bd	            0x765c	                           jbe 0x400d41b	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d3bf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3c6	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3ca	          0x488b00	                    mov rax, qword [rax]	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3cd	      0xbe00000000	                              mov esi, 0	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3d2	          0x4889c7	                            mov rdi, rax	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3d5	      0xe800000000	                          call 0x400d3da	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3da	            0x85c0	                           test eax, eax	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3dc	            0x743d	                            je 0x400d41b	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400d3de	      0xbe00000000	                              mov esi, 0	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x400d3e3	      0xbf00000000	                              mov edi, 0	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x400d3e8	      0xe800000000	                          call 0x400d3ed	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x400d3ed	          0x4889c2	                            mov rdx, rax	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x400d3f0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400d3f7	          0x4889c6	                            mov rsi, rax	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400d3fa	          0x4889d7	                            mov rdi, rdx	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400d3fd	      0xb800000000	                              mov eax, 0	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400d402	      0xe800000000	                          call 0x400d407	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400d407	      0xbf11000000	                           mov edi, 0x11	      5471	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x400d40c	      0xe800000000	                          call 0x400d411	      5471	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x400d411	      0xb800000000	                              mov eax, 0	      5472	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d416	      0xe93e100000	                           jmp 0x400e459	      5472	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400d41b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x400d422	          0x488b00	                    mov rax, qword [rax]	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x400d425	        0x4883f804	                              cmp rax, 4	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x400d429	            0x754c	                           jne 0x400d477	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x400d42b	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d435	            0xeb2b	                           jmp 0x400d462	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d437	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d43e	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d444	        0x4883c208	                              add rdx, 8	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d448	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d44d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d454	    0xc74004070000	                  mov dword [rax + 4], 7	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d45b	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d462	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d469	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d46c	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d472	            0x77c3	                            ja 0x400d437	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d474	            0xeb01	                           jmp 0x400d477	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400d476	              0x90	                                     nop	      5398	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400d477	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5479	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400d47e	    0x48c740100000	               mov qword [rax + 0x10], 0	      5479	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400d486	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5480	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400d48d	    0x48c740280000	               mov qword [rax + 0x28], 0	      5480	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400d495	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5481	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400d49c	    0x48c740300000	               mov qword [rax + 0x30], 0	      5481	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400d4a4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4ab	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4af	          0x83e010	                           and eax, 0x10	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4b2	            0x84c0	                             test al, al	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4b4	     0xf8448010000	                            je 0x400d602	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4ba	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4c1	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4c5	          0x83e001	                              and eax, 1	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4c8	            0x84c0	                             test al, al	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4ca	            0x751d	                           jne 0x400d4e9	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4cc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4d3	        0x488b4008	                mov rax, qword [rax + 8]	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4d7	        0x4883c804	                               or rax, 4	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4db	          0x4889c2	                            mov rdx, rax	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4de	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4e5	        0x48895008	                mov qword [rax + 8], rdx	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400d4e9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4ed	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4f4	           0xfb600	                   movzx eax, byte [rax]	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4f7	           0xfb6d0	                           movzx edx, al	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d4fa	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d501	        0x48895028	             mov qword [rax + 0x28], rdx	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d505	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d509	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d510	           0xfb600	                   movzx eax, byte [rax]	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d513	           0xfb6d0	                           movzx edx, al	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d516	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d51d	        0x48895030	             mov qword [rax + 0x30], rdx	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400d521	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d528	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d52b	            0x85c0	                           test eax, eax	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d52d	     0xf84cf000000	                            je 0x400d602	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d533	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d53a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d53e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d545	          0x4839c2	                            cmp rdx, rax	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d548	            0x7229	                            jb 0x400d573	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d54a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d551	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d555	          0x83e002	                              and eax, 2	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d558	            0x84c0	                             test al, al	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d55a	            0x7554	                           jne 0x400d5b0	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d55c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d563	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d567	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d56e	          0x4839c2	                            cmp rdx, rax	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d571	            0x733d	                           jae 0x400d5b0	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d573	      0xbe00000000	                              mov esi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400d578	      0xbf00000000	                              mov edi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400d57d	      0xe800000000	                          call 0x400d582	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400d582	          0x4889c2	                            mov rdx, rax	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400d585	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x400d58c	          0x4889c6	                            mov rsi, rax	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x400d58f	          0x4889d7	                            mov rdi, rdx	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x400d592	      0xb800000000	                              mov eax, 0	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x400d597	      0xe800000000	                          call 0x400d59c	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x400d59c	      0xbf11000000	                           mov edi, 0x11	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x400d5a1	      0xe800000000	                          call 0x400d5a6	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x400d5a6	      0xb800000000	                              mov eax, 0	      5500	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d5ab	      0xe9a90e0000	                           jmp 0x400e459	      5500	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400d5b0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d5b7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d5bb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d5c2	          0x4829c2	                            sub rdx, rax	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d5c5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d5cc	        0x48895018	             mov qword [rax + 0x18], rdx	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400d5d0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5504	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5d7	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5504	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5db	          0x83e002	                              and eax, 2	      5504	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5de	            0x84c0	                             test al, al	      5504	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5e0	            0x7520	                           jne 0x400d602	      5504	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5e2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5e9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5ed	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5f4	          0x4829c2	                            sub rdx, rax	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5f7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d5fe	        0x48895020	             mov qword [rax + 0x20], rdx	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x400d602	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d609	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d60d	          0x83e020	                           and eax, 0x20	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d610	            0x84c0	                             test al, al	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d612	     0xf8499010000	                            je 0x400d7b1	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d618	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d61f	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d623	          0x83e001	                              and eax, 1	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d626	            0x84c0	                             test al, al	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d628	            0x751d	                           jne 0x400d647	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d62a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d631	        0x488b4008	                mov rax, qword [rax + 8]	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d635	        0x4883c804	                               or rax, 4	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d639	          0x4889c2	                            mov rdx, rax	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d63c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d643	        0x48895008	                mov qword [rax + 8], rdx	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x400d647	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d64e	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d652	          0x83e010	                           and eax, 0x10	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d655	            0x84c0	                             test al, al	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d657	     0xf859e000000	                           jne 0x400d6fb	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d65d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d661	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d668	           0xfb600	                   movzx eax, byte [rax]	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d66b	           0xfb6d0	                           movzx edx, al	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d66e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d675	        0x48895010	             mov qword [rax + 0x10], rdx	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400d679	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d680	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d683	            0x85c0	                           test eax, eax	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d685	            0x7474	                            je 0x400d6fb	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d687	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d68e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d692	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d699	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d69d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d6a4	          0x4829c1	                            sub rcx, rax	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d6a7	          0x4889c8	                            mov rax, rcx	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d6aa	          0x4801c2	                            add rdx, rax	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d6ad	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d6b4	        0x48895018	             mov qword [rax + 0x18], rdx	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400d6b8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6bf	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6c3	          0x83e002	                              and eax, 2	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6c6	            0x84c0	                             test al, al	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6c8	            0x7531	                           jne 0x400d6fb	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6ca	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6d1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6d5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6dc	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6e0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6e7	          0x4829c1	                            sub rcx, rax	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6ea	          0x4889c8	                            mov rax, rcx	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6ed	          0x4801c2	                            add rdx, rax	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6f0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6f7	        0x48895020	             mov qword [rax + 0x20], rdx	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400d6fb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d702	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d706	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d70a	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d711	         0xfb64001	               movzx eax, byte [rax + 1]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d715	           0xfb6c0	                           movzx eax, al	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d718	     0xfaf853cffff	            imul eax, dword [rbp - 0xc4]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d71f	            0x89c0	                            mov eax, eax	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d721	          0x4801c2	                            add rdx, rax	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d724	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d72b	        0x48895028	             mov qword [rax + 0x28], rdx	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d72f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d736	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d73a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d73e	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d745	         0xfb64001	               movzx eax, byte [rax + 1]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d749	           0xfb6c0	                           movzx eax, al	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d74c	     0xfaf853cffff	            imul eax, dword [rbp - 0xc4]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d753	            0x89c0	                            mov eax, eax	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d755	          0x4801c2	                            add rdx, rax	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d758	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d75f	        0x48895030	             mov qword [rax + 0x30], rdx	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400d763	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d76a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d76d	            0x85c0	                           test eax, eax	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d76f	            0x7440	                            je 0x400d7b1	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d771	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d778	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d77c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d783	          0x4801c2	                            add rdx, rax	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d786	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d78d	        0x48895028	             mov qword [rax + 0x28], rdx	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d791	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d798	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d79c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d7a3	          0x4801c2	                            add rdx, rax	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d7a6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d7ad	        0x48895030	             mov qword [rax + 0x30], rdx	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400d7b1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7b8	          0x488b00	                    mov rax, qword [rax]	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7bb	        0x4883f801	                              cmp rax, 1	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7bf	            0x742a	                            je 0x400d7eb	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7c1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7c8	          0x488b00	                    mov rax, qword [rax]	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7cb	        0x4883f804	                              cmp rax, 4	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7cf	     0xf85bb000000	                           jne 0x400d890	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7d5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7dc	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7e0	          0x83e007	                              and eax, 7	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7e3	            0x3c03	                               cmp al, 3	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7e5	     0xf85a5000000	                           jne 0x400d890	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400d7eb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d7f2	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d7f6	          0x83e010	                           and eax, 0x10	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d7f9	            0x84c0	                             test al, al	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d7fb	            0x7526	                           jne 0x400d823	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d7fd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d804	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d808	          0x83e020	                           and eax, 0x20	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d80b	            0x84c0	                             test al, al	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d80d	            0x7514	                           jne 0x400d823	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d80f	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d816	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d81d	        0x48895010	             mov qword [rax + 0x10], rdx	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d821	            0xeb6d	                           jmp 0x400d890	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400d823	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d82a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d831	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d835	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d83c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d840	          0x4801c8	                            add rax, rcx	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d843	          0x4829c2	                            sub rdx, rax	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d846	          0x4889d0	                            mov rax, rdx	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d849	        0x488945b0	             mov qword [rbp - 0x50], rax	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d84d	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d854	            0x751d	                           jne 0x400d873	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d856	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d85d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d861	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d865	          0x4801c2	                            add rdx, rax	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d868	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d86f	        0x48895028	             mov qword [rax + 0x28], rdx	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400d873	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d87a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d87e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d882	          0x4801c2	                            add rdx, rax	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d885	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d88c	        0x48895030	             mov qword [rax + 0x30], rdx	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400d890	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d89a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8a1	        0x4883c048	                           add rax, 0x48	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8a5	        0x48894580	             mov qword [rbp - 0x80], rax	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8a9	      0xe983050000	                           jmp 0x400de31	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8ae	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5562	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8b2	          0x488b00	                    mov rax, qword [rax]	      5562	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8b5	        0x488945b8	             mov qword [rbp - 0x48], rax	      5562	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5563	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_33
0x400d8bd	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5563	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_33
0x400d8c4	        0x488945c0	             mov qword [rbp - 0x40], rax	      5563	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_33
0x400d8c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8cc	          0x8b4070	            mov eax, dword [rax + 0x70] 	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8cf	      0xba01000000	                              mov edx, 1	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8d4	            0x89c1	                            mov ecx, eax	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8d6	          0x48d3e2	                             shl rdx, cl	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8d9	          0x4889d0	                            mov rax, rdx	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8dc	        0x488945c8	             mov qword [rbp - 0x38], rax	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400d8e0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d8e7	          0x488b00	                    mov rax, qword [rax]	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d8ea	        0x4883f801	                              cmp rax, 1	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d8ee	            0x7414	                            je 0x400d904	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d8f0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d8f7	          0x488b00	                    mov rax, qword [rax]	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d8fa	        0x4883f807	                              cmp rax, 7	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d8fe	     0xf85b3010000	                           jne 0x400dab7	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d904	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d908	          0x8b4004	                mov eax, dword [rax + 4]	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d90b	          0x83f808	                              cmp eax, 8	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d90e	            0x753a	                           jne 0x400d94a	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d910	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d914	        0x488b4008	                mov rax, qword [rax + 8]	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d918	          0x83e002	                              and eax, 2	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d91b	          0x4885c0	                           test rax, rax	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d91e	     0xf8493010000	                            je 0x400dab7	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d924	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5570	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d928	        0x488b4008	                mov rax, qword [rax + 8]	      5570	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d92c	      0x2500040000	                          and eax, 0x400	      5570	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d931	          0x4885c0	                           test rax, rax	      5570	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d934	            0x7414	                            je 0x400d94a	      5570	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d936	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d93d	          0x488b00	                    mov rax, qword [rax]	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d940	        0x4883f807	                              cmp rax, 7	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d944	     0xf856d010000	                           jne 0x400dab7	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d94a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5573	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d951	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5573	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d955	        0x488945d0	             mov qword [rbp - 0x30], rax	      5573	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d959	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d960	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d964	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d968	          0x4801d0	                            add rax, rdx	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d96b	        0x488945d8	             mov qword [rbp - 0x28], rax	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d96f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5575	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d973	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5575	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d977	        0x488945e0	             mov qword [rbp - 0x20], rax	      5575	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d97b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5576	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d97f	        0x482b45d8	             sub rax, qword [rbp - 0x28]	      5576	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d983	        0x48894598	             mov qword [rbp - 0x68], rax	      5576	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d987	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d98c	            0x745d	                            je 0x400d9eb	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d98e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d992	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d996	            0x720a	                            jb 0x400d9a2	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d998	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5580	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d99c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      5580	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d9a0	            0x7349	                           jae 0x400d9eb	      5580	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d9a2	      0xbe00000000	                              mov esi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x400d9a7	      0xbf00000000	                              mov edi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x400d9ac	      0xe800000000	                          call 0x400d9b1	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x400d9b1	          0x4889c7	                            mov rdi, rax	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x400d9b4	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9b8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9bc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9c0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9c7	          0x4989f0	                             mov r8, rsi	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9ca	          0x4889c6	                            mov rsi, rax	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9cd	      0xb800000000	                              mov eax, 0	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9d2	      0xe800000000	                          call 0x400d9d7	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400d9d7	    0x48c745980000	               mov qword [rbp - 0x68], 0	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d9df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d9e3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d9e7	        0x48895030	             mov qword [rax + 0x30], rdx	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400d9eb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d9f2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d9f6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d9fa	          0x4801c2	                            add rdx, rax	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400d9fd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400da04	        0x48895030	             mov qword [rax + 0x30], rdx	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400da08	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da0c	          0x8b4004	                mov eax, dword [rax + 4]	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da0f	          0x83f808	                              cmp eax, 8	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da12	     0xf849f000000	                            je 0x400dab7	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da18	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da1f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da23	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da27	          0x4801c2	                            add rdx, rax	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da2a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da31	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da35	          0x4839c2	                            cmp rdx, rax	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da38	            0x734b	                           jae 0x400da85	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da3a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da41	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da45	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da4c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da50	          0x4829c2	                            sub rdx, rax	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da53	          0x4889d0	                            mov rax, rdx	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da56	        0x48894598	             mov qword [rbp - 0x68], rax	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400da5a	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da5e	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da65	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da6c	          0x4889ce	                            mov rsi, rcx	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da6f	          0x4889c7	                            mov rdi, rax	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da72	      0xe8fcefffff	                    call sym.write_zeros	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da77	            0x85c0	                           test eax, eax	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da79	            0x750a	                           jne 0x400da85	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400da7b	      0xb800000000	                              mov eax, 0	      5600	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45
0x400da80	      0xe9d4090000	                           jmp 0x400e459	      5600	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45
0x400da85	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da8c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da90	          0x4801d0	                            add rax, rdx	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da93	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400da9a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400daa1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400daa5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400daa9	          0x4801c2	                            add rdx, rax	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400daac	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400dab3	        0x48895028	             mov qword [rax + 0x28], rdx	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400dab7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dabe	          0x488b00	                    mov rax, qword [rax]	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dac1	        0x4883f804	                              cmp rax, 4	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dac5	     0xf85be000000	                           jne 0x400db89	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dacb	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dad2	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dad6	          0x83e007	                              and eax, 7	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dad9	            0x3c03	                               cmp al, 3	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dadb	     0xf85a8000000	                           jne 0x400db89	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400dae1	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400dae8	            0x7574	                           jne 0x400db5e	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400daea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400daee	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400daf5	    0x488990900000	             mov qword [rax + 0x90], rdx	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400dafc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db00	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db07	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db0b	        0x48895018	             mov qword [rax + 0x18], rdx	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db0f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db13	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db17	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db1e	          0x4801d0	                            add rax, rdx	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db21	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db28	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5615	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db2c	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5615	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db30	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5615	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db37	        0x48895028	             mov qword [rax + 0x28], rdx	      5615	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db3b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5616	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db42	    0x48c740300000	               mov qword [rax + 0x30], 0	      5616	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db4a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5617	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db51	    0x48c740380100	               mov qword [rax + 0x38], 1	      5617	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db59	      0xe93e020000	                           jmp 0x400dd9c	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400db5e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5622	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x400db62	    0x48c780900000	               mov qword [rax + 0x90], 0	      5622	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x400db6d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5623	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x400db71	    0x48c740380000	               mov qword [rax + 0x38], 0	      5623	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x400db79	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x400db7d	    0xc74020000000	               mov dword [rax + 0x20], 0	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x400db84	      0xe99c020000	                           jmp 0x400de25	      5625	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x400db89	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400db90	          0x488b00	                    mov rax, qword [rax]	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400db93	        0x4883f801	                              cmp rax, 1	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400db97	            0x7550	                           jne 0x400dbe9	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400db99	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400db9d	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400dba4	    0x488990900000	             mov qword [rax + 0x90], rdx	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400dbab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400dbaf	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400dbb6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400dbba	        0x48895018	             mov qword [rax + 0x18], rdx	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x400dbbe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbc2	          0x8b4004	                mov eax, dword [rax + 4]	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbc5	          0x83f808	                              cmp eax, 8	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbc8	     0xf8497000000	                            je 0x400dc65	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbd2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbd6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbdd	          0x4801d0	                            add rax, rdx	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbe0	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbe7	            0xeb7c	                           jmp 0x400dc65	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400dbe9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dbed	          0x8b4004	                mov eax, dword [rax + 4]	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dbf0	          0x83f808	                              cmp eax, 8	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dbf3	            0x7570	                           jne 0x400dc65	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dbf5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dbf9	        0x488b4008	                mov rax, qword [rax + 8]	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dbfd	      0x2500040000	                          and eax, 0x400	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc02	          0x4885c0	                           test rax, rax	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc05	            0x745e	                            je 0x400dc65	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc07	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc0b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc0f	          0x4885c0	                           test rax, rax	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc12	            0x7551	                           jne 0x400dc65	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc14	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc1b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc1f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc23	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc27	          0x4889ce	                            mov rsi, rcx	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc2a	          0x4889c7	                            mov rdi, rax	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc2d	      0xe86decffff	          call sym.vma_page_aligned_bias	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc32	        0x488945e8	             mov qword [rbp - 0x18], rax	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x400dc36	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc41	          0x4801d0	                            add rax, rdx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc44	          0x4889c2	                            mov rdx, rax	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc47	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc4b	    0x488990900000	             mov qword [rax + 0x90], rdx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc52	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc56	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc5d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc61	        0x48895018	             mov qword [rax + 0x18], rdx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400dc65	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5652	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc69	          0x8b4004	                mov eax, dword [rax + 4]	      5652	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc6c	          0x83f808	                              cmp eax, 8	      5652	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc6f	            0x7458	                            je 0x400dcc9	      5652	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc71	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc78	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc7c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc80	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc84	          0x4801c2	                            add rdx, rax	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc87	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc8e	        0x48895028	             mov qword [rax + 0x28], rdx	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400dc92	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dc96	        0x488b4008	                mov rax, qword [rax + 8]	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dc9a	          0x83e002	                              and eax, 2	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dc9d	          0x4885c0	                           test rax, rax	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dca0	     0xf8499000000	                            je 0x400dd3f	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dca6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcad	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcb1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcb5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcb9	          0x4801c2	                            add rdx, rax	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcbc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcc3	        0x48895030	             mov qword [rax + 0x30], rdx	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcc7	            0xeb76	                           jmp 0x400dd3f	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400dcc9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400dccd	        0x488b4008	                mov rax, qword [rax + 8]	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400dcd1	          0x83e002	                              and eax, 2	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400dcd4	          0x4885c0	                           test rax, rax	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400dcd7	            0x7466	                            je 0x400dd3f	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400dcd9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dce0	          0x488b00	                    mov rax, qword [rax]	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dce3	        0x4883f807	                              cmp rax, 7	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dce7	            0x7523	                           jne 0x400dd0c	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dce9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dcf0	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dcf4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dcf8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dcfc	          0x4801c2	                            add rdx, rax	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dcff	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dd06	        0x48895030	             mov qword [rax + 0x30], rdx	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dd0a	            0xeb33	                           jmp 0x400dd3f	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400dd0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd10	        0x488b4008	                mov rax, qword [rax + 8]	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd14	      0x2500040000	                          and eax, 0x400	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd19	          0x4885c0	                           test rax, rax	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd1c	            0x7521	                           jne 0x400dd3f	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd1e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd25	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd29	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd2d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd31	          0x4801c2	                            add rdx, rax	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd34	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd3b	        0x48895030	             mov qword [rax + 0x30], rdx	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400dd3f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd46	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd4a	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd4e	            0x734c	                           jae 0x400dd9c	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd50	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd57	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd5b	          0x83e004	                              and eax, 4	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd5e	            0x84c0	                             test al, al	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd60	            0x753a	                           jne 0x400dd9c	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd62	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd69	          0x488b00	                    mov rax, qword [rax]	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd6c	        0x4883f801	                              cmp rax, 1	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd70	            0x751b	                           jne 0x400dd8d	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd72	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd79	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd7c	          0xc1e805	                              shr eax, 5	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd7f	      0x25ffff0f00	                        and eax, 0xfffff	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd84	      0x2500010000	                          and eax, 0x100	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd89	            0x85c0	                           test eax, eax	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd8b	            0x750f	                           jne 0x400dd9c	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd8d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5676	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd94	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5676	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd98	        0x48895038	             mov qword [rax + 0x38], rdx	      5676	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400dd9c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400dda3	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400dda7	          0x83e001	                              and eax, 1	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddaa	            0x84c0	                             test al, al	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddac	            0x7577	                           jne 0x400de25	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddae	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddb5	        0x488b4008	                mov rax, qword [rax + 8]	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddb9	        0x4883c804	                               or rax, 4	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddbd	          0x4889c2	                            mov rdx, rax	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddc0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddc7	        0x48895008	                mov qword [rax + 8], rdx	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x400ddcb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400ddcf	        0x488b4008	                mov rax, qword [rax + 8]	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400ddd3	          0x83e004	                              and eax, 4	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400ddd6	          0x4885c0	                           test rax, rax	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400ddd9	            0x741d	                            je 0x400ddf8	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400dddb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400dde2	        0x488b4008	                mov rax, qword [rax + 8]	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400dde6	        0x4883c801	                               or rax, 1	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400ddea	          0x4889c2	                            mov rdx, rax	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400dded	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400ddf4	        0x48895008	                mov qword [rax + 8], rdx	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x400ddf8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400ddfc	        0x488b4008	                mov rax, qword [rax + 8]	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de00	          0x83e001	                              and eax, 1	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de03	          0x4885c0	                           test rax, rax	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de06	            0x741d	                            je 0x400de25	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de08	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de0f	        0x488b4008	                mov rax, qword [rax + 8]	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de13	        0x4883c802	                               or rax, 2	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de17	          0x4889c2	                            mov rdx, rax	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de1a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de21	        0x48895008	                mov qword [rax + 8], rdx	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x400de25	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400de2c	      0x4883458008	               add qword [rbp - 0x80], 8	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400de31	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400de38	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400de3b	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400de41	     0xf8767faffff	                            ja 0x400d8ae	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400de47	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400de4e	        0x482b4588	             sub rax, qword [rbp - 0x78]	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400de52	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400de59	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de60	          0x488b00	                    mov rax, qword [rax]	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de63	        0x4883f801	                              cmp rax, 1	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de67	     0xf8599050000	                           jne 0x400e406	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de6d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de74	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de78	          0x83e007	                              and eax, 7	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de7b	            0x3c03	                               cmp al, 3	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de7d	     0xf8483050000	                            je 0x400e406	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de83	    0xc78550ffffff	               mov dword [rbp - 0xb0], 1	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400de8d	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400de97	      0xe978010000	                           jmp 0x400e014	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400de9c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400dea3	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400dea9	        0x4883c208	                              add rdx, 8	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400dead	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400deb2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400deb6	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400debc	          0x8d48ff	                      lea ecx, [rax - 1]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400debf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400dec6	            0x89c9	                            mov ecx, ecx	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400dec8	        0x4883c108	                              add rcx, 8	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400decc	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400ded1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400ded5	          0x4839c2	                            cmp rdx, rax	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400ded8	     0xf852f010000	                           jne 0x400e00d	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400dede	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400dee5	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400deeb	        0x4883c208	                              add rdx, 8	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400deef	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400def4	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400defb	        0x488b4008	                mov rax, qword [rax + 8]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400deff	      0x2500040000	                          and eax, 0x400	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df04	          0x4885c0	                           test rax, rax	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df07	            0x7439	                            je 0x400df42	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df09	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df10	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df16	        0x4883c208	                              add rdx, 8	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df1a	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df1f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df26	          0x8b4004	                mov eax, dword [rax + 4]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df29	          0x83f808	                              cmp eax, 8	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df2c	            0x7514	                           jne 0x400df42	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df2e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df35	          0x488b00	                    mov rax, qword [rax]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df38	        0x4883f807	                              cmp rax, 7	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df3c	     0xf85cb000000	                           jne 0x400e00d	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df42	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df49	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df4f	        0x4883c208	                              add rdx, 8	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df53	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df58	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df5f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400df63	          0x4885c0	                           test rax, rax	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400df66	     0xf84a1000000	                            je 0x400e00d	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400df6c	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df72	          0x8d50ff	                      lea edx, [rax - 1]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df75	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df7c	            0x89d2	                            mov edx, edx	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df7e	        0x4883c208	                              add rdx, 8	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df82	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df87	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df8e	        0x488b4008	                mov rax, qword [rax + 8]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df92	      0x2500040000	                          and eax, 0x400	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df97	          0x4885c0	                           test rax, rax	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df9a	            0x743a	                            je 0x400dfd6	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400df9c	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfa2	          0x8d50ff	                      lea edx, [rax - 1]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfa5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfac	            0x89d2	                            mov edx, edx	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfae	        0x4883c208	                              add rdx, 8	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfb2	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfb7	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfbe	          0x8b4004	                mov eax, dword [rax + 4]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfc1	          0x83f808	                              cmp eax, 8	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfc4	            0x7510	                           jne 0x400dfd6	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfc6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfcd	          0x488b00	                    mov rax, qword [rax]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfd0	        0x4883f807	                              cmp rax, 7	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfd4	            0x7537	                           jne 0x400e00d	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfd6	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfdc	          0x8d50ff	                      lea edx, [rax - 1]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfdf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfe6	            0x89d2	                            mov edx, edx	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfe8	        0x4883c208	                              add rdx, 8	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dfec	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dff1	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dff8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400dffc	          0x4885c0	                           test rax, rax	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400dfff	            0x740c	                            je 0x400e00d	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400e001	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      5705	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400e00b	            0xeb1d	                           jmp 0x400e02a	      5706	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400e00d	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400e014	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400e01b	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400e01e	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400e024	     0xf8772feffff	                            ja 0x400de9c	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400e02a	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e034	      0xe9b7030000	                           jmp 0x400e3f0	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e039	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e040	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e046	        0x4883c208	                              add rdx, 8	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e04a	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e04f	        0x488945f0	             mov qword [rbp - 0x10], rax	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e053	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5715	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	CALL_42
0x400e057	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5715	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	CALL_42
0x400e05e	        0x488945f8	                mov qword [rbp - 8], rax	      5715	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	CALL_42
0x400e062	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e066	        0x488b4008	                mov rax, qword [rax + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e06a	      0x2500040000	                          and eax, 0x400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e06f	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e072	            0x7432	                            je 0x400e0a6	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e074	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e07b	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e07e	        0x4883f807	                              cmp rax, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e082	            0x7460	                            je 0x400e0e4	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e084	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e08b	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e08e	    0x483d52e57464	                     cmp rax, 0x6474e552	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e094	            0x744e	                            je 0x400e0e4	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e096	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e09d	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0a0	        0x4883f801	                              cmp rax, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0a4	            0x743e	                            je 0x400e0e4	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0aa	        0x488b4008	                mov rax, qword [rax + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0ae	      0x2500040000	                          and eax, 0x400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0b3	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0b6	     0xf85c0020000	                           jne 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0bc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0c3	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0c6	        0x4883f807	                              cmp rax, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0ca	     0xf84ac020000	                            je 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0d0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0d7	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0da	        0x4883f806	                              cmp rax, 6	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0de	     0xf8498020000	                            je 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0e8	        0x488b4008	                mov rax, qword [rax + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0ec	          0x83e002	                              and eax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0ef	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0f2	            0x756a	                           jne 0x400e15e	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0f4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0fb	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e0fe	        0x4883f801	                              cmp rax, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e102	     0xf8474020000	                            je 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e108	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e10f	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e112	        0x4883f802	                              cmp rax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e116	     0xf8460020000	                            je 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e11c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e123	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e126	    0x483d50e57464	                     cmp rax, 0x6474e550	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e12c	     0xf844a020000	                            je 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e132	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e139	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e13c	    0x483d52e57464	                     cmp rax, 0x6474e552	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e142	     0xf8434020000	                            je 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e148	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e14f	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e152	    0x483d51e57464	                     cmp rax, 0x6474e551	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e158	     0xf841e020000	                            je 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e15e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e162	          0x8b4004	                mov eax, dword [rax + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e165	          0x83f808	                              cmp eax, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e168	     0xf848c000000	                            je 0x400e1fa	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e16e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e172	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e176	          0x4889c2	                            mov rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e179	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e180	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e184	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e187	     0xf82ef010000	                            jb 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e18d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e191	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e195	          0x4889c2	                            mov rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e198	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e19f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1a3	          0x4829c2	                            sub rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1aa	        0x488b4008	                mov rax, qword [rax + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1ae	      0x2500040000	                          and eax, 0x400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1b3	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1b6	            0x741c	                            je 0x400e1d4	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1bc	          0x8b4004	                mov eax, dword [rax + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1bf	          0x83f808	                              cmp eax, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1c2	            0x7510	                           jne 0x400e1d4	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1c4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1cb	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1ce	        0x4883f807	                              cmp rax, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1d2	            0x750a	                           jne 0x400e1de	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1d8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1dc	            0xeb05	                           jmp 0x400e1e3	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1de	      0xb800000000	                              mov eax, 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1e3	          0x4801c2	                            add rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1e6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1ed	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1f1	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1f4	     0xf8782010000	                            ja 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e1fa	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e201	     0xf849a000000	                            je 0x400e2a1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e207	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e20b	        0x488b4008	                mov rax, qword [rax + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e20f	          0x83e002	                              and eax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e212	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e215	     0xf8486000000	                            je 0x400e2a1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e21b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e21f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e223	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e22a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e22e	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e231	     0xf8245010000	                            jb 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e237	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e23b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e23f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e246	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e24a	          0x4829c2	                            sub rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e24d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e251	        0x488b4008	                mov rax, qword [rax + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e255	      0x2500040000	                          and eax, 0x400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e25a	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e25d	            0x741c	                            je 0x400e27b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e25f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e263	          0x8b4004	                mov eax, dword [rax + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e266	          0x83f808	                              cmp eax, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e269	            0x7510	                           jne 0x400e27b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e26b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e272	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e275	        0x4883f807	                              cmp rax, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e279	            0x750a	                           jne 0x400e285	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e27b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e27f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e283	            0xeb05	                           jmp 0x400e28a	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e285	      0xb800000000	                              mov eax, 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e28a	          0x4801c2	                            add rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e28d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e294	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e298	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e29b	     0xf87db000000	                            ja 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2a1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2a8	          0x488b00	                    mov rax, qword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2ab	        0x4883f802	                              cmp rax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2af	     0xf8534010000	                           jne 0x400e3e9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2b9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2bd	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2c0	     0xf8523010000	                           jne 0x400e3e9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2c6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2cd	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2d1	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2d4	     0xf840f010000	                            je 0x400e3e9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2da	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2de	          0x8b4004	                mov eax, dword [rax + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2e1	          0x83f808	                              cmp eax, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2e4	            0x7444	                            je 0x400e32a	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2ea	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2ee	          0x4889c2	                            mov rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2f1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2fc	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e2ff	            0x767b	                           jbe 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e301	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e305	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e309	          0x4889c2	                            mov rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e30c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e313	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e317	          0x4829c2	                            sub rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e31a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e321	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e325	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e328	            0x7352	                           jae 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e32a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e32e	        0x488b4008	                mov rax, qword [rax + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e332	          0x83e002	                              and eax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e335	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e338	     0xf84ab000000	                            je 0x400e3e9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e33e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e342	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e346	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e34d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e351	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e354	            0x7626	                           jbe 0x400e37c	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e356	        0x488b45f8	                mov rax, qword [rbp - 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e35a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e35e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e365	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e369	          0x4829c2	                            sub rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e36c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e373	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e377	          0x4839c2	                            cmp rdx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e37a	            0x726d	                            jb 0x400e3e9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400e37c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e380	        0x488b4008	                mov rax, qword [rax + 8]	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e384	      0x2500040000	                          and eax, 0x400	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e389	          0x4885c0	                           test rax, rax	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e38c	            0x741c	                            je 0x400e3aa	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e38e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e392	          0x8b4004	                mov eax, dword [rax + 4]	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e395	          0x83f808	                              cmp eax, 8	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e398	            0x7510	                           jne 0x400e3aa	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e39a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e3a1	          0x488b00	                    mov rax, qword [rax]	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e3a4	        0x4883f807	                              cmp rax, 7	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e3a8	            0x753f	                           jne 0x400e3e9	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400e3aa	      0xbe00000000	                              mov esi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x400e3af	      0xbf00000000	                              mov edi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x400e3b4	      0xe800000000	                          call 0x400e3b9	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x400e3b9	          0x4889c7	                            mov rdi, rax	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x400e3bc	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400e3c2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400e3c6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400e3cd	          0x4889c6	                            mov rsi, rax	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400e3d0	      0xb800000000	                              mov eax, 0	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400e3d5	      0xe800000000	                          call 0x400e3da	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400e3da	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5723	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_47
0x400e3e1	          0x4889c7	                            mov rdi, rax	      5723	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_47
0x400e3e4	      0xe8ebe4ffff	              call sym.print_segment_map	      5723	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_47
0x400e3e9	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e3f0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e3f7	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e3fa	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e400	     0xf8733fcffff	                            ja 0x400e039	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400e406	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400e40d	          0x488b00	                    mov rax, qword [rax]	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400e410	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400e417	    0x48838560ffff	           add qword [rbp - 0xa0], 0x40 	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400e41f	    0x838544ffffff	               add dword [rbp - 0xbc], 1	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400e426	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400e42e	     0xf85c7eaffff	                           jne 0x400cefb	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400e434	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5729	elf.c	FUNCTION_70	CALL_48
0x400e43b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5729	elf.c	FUNCTION_70	CALL_48
0x400e442	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5729	elf.c	FUNCTION_70	CALL_48
0x400e449	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5729	elf.c	FUNCTION_70	CALL_48
0x400e450	        0x48895040	             mov qword [rax + 0x40], rdx	      5729	elf.c	FUNCTION_70	CALL_48
0x400e454	      0xb801000000	                              mov eax, 1	      5730	elf.c	FUNCTION_70
0x400e459	              0xc9	                                   leave	      5731	elf.c	FUNCTION_70
0x400e45a	              0xc3	                                     ret	      5731	elf.c	FUNCTION_70
elfcore_write_s390_prefix	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019eab	              0x55	                                push rbp	     10884	elf.c	FUNCTION_178
0x4019eac	          0x4889e5	                            mov rbp, rsp	     10884	elf.c	FUNCTION_178
0x4019eaf	        0x4883ec40	                           sub rsp, 0x40	     10884	elf.c	FUNCTION_178
0x4019eb3	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10884	elf.c	FUNCTION_178
0x4019eb7	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10884	elf.c	FUNCTION_178
0x4019ebb	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10884	elf.c	FUNCTION_178
0x4019ebf	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10884	elf.c	FUNCTION_178
0x4019ec3	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10884	elf.c	FUNCTION_178
0x4019ec7	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10885	elf.c	FUNCTION_178
0x4019ecf	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10886	elf.c	FUNCTION_178	CALL_1
0x4019ed3	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10886	elf.c	FUNCTION_178	CALL_1
0x4019ed7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10886	elf.c	FUNCTION_178	CALL_1
0x4019edb	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10886	elf.c	FUNCTION_178	CALL_1
0x4019edf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10886	elf.c	FUNCTION_178	CALL_1
0x4019ee3	        0x4883ec08	                              sub rsp, 8	     10886	elf.c	FUNCTION_178	CALL_1
0x4019ee7	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10886	elf.c	FUNCTION_178	CALL_1
0x4019eea	              0x57	                                push rdi	     10886	elf.c	FUNCTION_178	CALL_1
0x4019eeb	          0x4d89c1	                              mov r9, r8	     10886	elf.c	FUNCTION_178	CALL_1
0x4019eee	    0x41b805030000	                          mov r8d, 0x305	     10886	elf.c	FUNCTION_178	CALL_1
0x4019ef4	          0x4889c7	                            mov rdi, rax	     10886	elf.c	FUNCTION_178	CALL_1
0x4019ef7	      0xe800000000	                          call 0x4019efc	     10886	elf.c	FUNCTION_178	CALL_1
0x4019efc	        0x4883c410	                           add rsp, 0x10	     10886	elf.c	FUNCTION_178	CALL_1
0x4019f00	              0xc9	                                   leave	     10888	elf.c	FUNCTION_178
0x4019f01	              0xc3	                                     ret	     10888	elf.c	FUNCTION_178
elfcore_grok_nto_note	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,0:SWITCH,1:functions,0	49
0x40190ad	              0x55	                                push rbp	     10398	elf.c	FUNCTION_159
0x40190ae	          0x4889e5	                            mov rbp, rsp	     10398	elf.c	FUNCTION_159
0x40190b1	        0x4883ec10	                           sub rsp, 0x10	     10398	elf.c	FUNCTION_159
0x40190b5	        0x48897df8	                mov qword [rbp - 8], rdi	     10398	elf.c	FUNCTION_159
0x40190b9	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10398	elf.c	FUNCTION_159
0x40190bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190c5	        0x4883f808	                              cmp rax, 8	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190c9	            0x7433	                            je 0x40190fe	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190cb	        0x4883f808	                              cmp rax, 8	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190cf	            0x7708	                            ja 0x40190d9	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190d1	        0x4883f807	                              cmp rax, 7	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190d5	            0x7410	                            je 0x40190e7	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190d7	            0xeb7b	                           jmp 0x4019154	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190d9	        0x4883f809	                              cmp rax, 9	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190dd	            0x7439	                            je 0x4019118	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190df	        0x4883f80a	                            cmp rax, 0xa	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190e3	            0x7451	                            je 0x4019136	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190e5	            0xeb6d	                           jmp 0x4019154	     10404	elf.c	FUNCTION_159	SWITCH_1
0x40190e7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x40190eb	        0x488b45f8	                mov rax, qword [rbp - 8]	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x40190ef	      0xbe00000000	                              mov esi, 0	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x40190f4	          0x4889c7	                            mov rdi, rax	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x40190f7	      0xe8fddaffff	call sym.elfcore_make_note_pseudosection	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x40190fc	            0xeb5b	                           jmp 0x4019159	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x40190fe	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	     10409	elf.c	FUNCTION_159	SWITCH_1	CALL_2
0x4019102	        0x488b45f8	                mov rax, qword [rbp - 8]	     10409	elf.c	FUNCTION_159	SWITCH_1	CALL_2
0x4019106	      0xba00000000	                              mov edx, 0	     10409	elf.c	FUNCTION_159	SWITCH_1	CALL_2
0x401910b	          0x4889ce	                            mov rsi, rcx	     10409	elf.c	FUNCTION_159	SWITCH_1	CALL_2
0x401910e	          0x4889c7	                            mov rdi, rax	     10409	elf.c	FUNCTION_159	SWITCH_1	CALL_2
0x4019111	      0xe88efbffff	        call sym.elfcore_grok_nto_status	     10409	elf.c	FUNCTION_159	SWITCH_1	CALL_2
0x4019116	            0xeb41	                           jmp 0x4019159	     10409	elf.c	FUNCTION_159	SWITCH_1	CALL_2
0x4019118	    0x488b15000000	            mov rdx, qword [0x0401911f] 	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x401911f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x4019123	        0x488b45f8	                mov rax, qword [rbp - 8]	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x4019127	      0xb900000000	                              mov ecx, 0	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x401912c	          0x4889c7	                            mov rdi, rax	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x401912f	      0xe814feffff	          call sym.elfcore_grok_nto_regs	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x4019134	            0xeb23	                           jmp 0x4019159	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x4019136	    0x488b15000000	            mov rdx, qword [0x0401913d] 	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x401913d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x4019141	        0x488b45f8	                mov rax, qword [rbp - 8]	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x4019145	      0xb900000000	                              mov ecx, 0	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x401914a	          0x4889c7	                            mov rdi, rax	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x401914d	      0xe8f6fdffff	          call sym.elfcore_grok_nto_regs	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x4019152	            0xeb05	                           jmp 0x4019159	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x4019154	      0xb801000000	                              mov eax, 1	     10415	elf.c	FUNCTION_159	SWITCH_1
0x4019159	              0xc9	                                   leave	     10417	elf.c	FUNCTION_159
0x401915a	              0xc3	                                     ret	     10417	elf.c	FUNCTION_159
_bfd_elf_fixup_group_sections	ELSE,2:DO,0:CALL,6:WHILE,1:FOR,1:IF,11:SWITCH,0:functions,0	149
0x401368b	              0x55	                                push rbp	      7599	elf.c	FUNCTION_85
0x401368c	          0x4889e5	                            mov rbp, rsp	      7599	elf.c	FUNCTION_85
0x401368f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      7599	elf.c	FUNCTION_85
0x4013693	        0x488975c0	             mov qword [rbp - 0x40], rsi	      7599	elf.c	FUNCTION_85
0x4013697	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7602	elf.c	FUNCTION_85	FOR_1
0x401369b	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7602	elf.c	FUNCTION_85	FOR_1
0x40136a2	        0x488945d8	             mov qword [rbp - 0x28], rax	      7602	elf.c	FUNCTION_85	FOR_1
0x40136a6	      0xe92c020000	                           jmp 0x40138d7	      7602	elf.c	FUNCTION_85	FOR_1
0x40136ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x40136af	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x40136b6	          0x8b4004	                mov eax, dword [rax + 4]	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x40136b9	          0x83f811	                           cmp eax, 0x11	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x40136bc	     0xf8509020000	                           jne 0x40138cb	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x40136c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7605	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_2
0x40136c6	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7605	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_2
0x40136cd	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7605	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_2
0x40136d4	        0x488945f0	             mov qword [rbp - 0x10], rax	      7605	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_2
0x40136d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7606	elf.c	FUNCTION_85	FOR_1	IF_1
0x40136dc	        0x488945e0	             mov qword [rbp - 0x20], rax	      7606	elf.c	FUNCTION_85	FOR_1	IF_1
0x40136e0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7607	elf.c	FUNCTION_85	FOR_1	IF_1
0x40136e8	      0xe904010000	                           jmp 0x40137f1	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x40136ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x40136f1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x40136f5	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x40136f9	            0x7456	                            je 0x4013751	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x40136fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x40136ff	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4013703	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4013707	            0x7548	                           jne 0x4013751	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4013709	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x401370d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x4013711	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x4013718	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x401371c	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x4013720	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x4013727	        0x488b5208	                mov rdx, qword [rdx + 8]	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x401372b	          0x80e6fd	                            and dh, 0xfd	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x401372e	        0x48895008	                mov qword [rax + 8], rdx	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x4013732	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x4013736	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x401373a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x4013741	    0x48c780b00000	               mov qword [rax + 0xb0], 0	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x401374c	      0xe980000000	                           jmp 0x40137d1	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x4013751	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7622	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4013755	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7622	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4013759	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7622	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x401375d	            0x7572	                           jne 0x40137d1	      7622	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x401375f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4013763	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4013767	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x401376b	            0x7464	                            je 0x40137d1	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x401376d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7625	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	CALL_5
0x4013771	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7625	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	CALL_5
0x4013778	        0x488945f8	                mov qword [rbp - 8], rax	      7625	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	CALL_5
0x401377c	      0x488345e804	               add qword [rbp - 0x18], 4	      7626	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4013781	        0x488b45f8	                mov rax, qword [rbp - 8]	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4013785	        0x488b4058	            mov rax, qword [rax + 0x58] 	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4013789	          0x4885c0	                           test rax, rax	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x401378c	            0x741b	                            je 0x40137a9	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x401378e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4013792	        0x488b4058	            mov rax, qword [rax + 0x58] 	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4013796	        0x488b4008	                mov rax, qword [rax + 8]	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x401379a	      0x2500020000	                          and eax, 0x200	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x401379f	          0x4885c0	                           test rax, rax	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x40137a2	            0x7405	                            je 0x40137a9	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x40137a4	      0x488345e804	               add qword [rbp - 0x18], 4	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x40137a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137ad	        0x488b4070	            mov rax, qword [rax + 0x70] 	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137b1	          0x4885c0	                           test rax, rax	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137b4	            0x741b	                            je 0x40137d1	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137ba	        0x488b4070	            mov rax, qword [rax + 0x70] 	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137be	        0x488b4008	                mov rax, qword [rax + 8]	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137c2	      0x2500020000	                          and eax, 0x200	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137c7	          0x4885c0	                           test rax, rax	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137ca	            0x7405	                            je 0x40137d1	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137cc	      0x488345e804	               add qword [rbp - 0x18], 4	      7632	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x40137d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x40137d5	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x40137dc	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x40137e3	        0x488945e0	             mov qword [rbp - 0x20], rax	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x40137e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x40137eb	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x40137ef	            0x740d	                            je 0x40137fe	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x40137f1	      0x48837de000	               cmp qword [rbp - 0x20], 0	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x40137f6	     0xf85f1feffff	                           jne 0x40136ed	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x40137fc	            0xeb01	                           jmp 0x40137ff	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x40137fe	              0x90	                                     nop	      7636	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x40137ff	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x4013804	     0xf84c1000000	                            je 0x40138cb	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x401380a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x401380f	            0x7463	                            je 0x4013874	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4013811	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4013815	        0x488b4040	            mov rax, qword [rax + 0x40] 	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4013819	          0x4885c0	                           test rax, rax	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x401381c	            0x7510	                           jne 0x401382e	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x401381e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4013822	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4013826	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x401382a	        0x48895040	             mov qword [rax + 0x40], rdx	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x401382e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4013832	        0x488b4040	            mov rax, qword [rax + 0x40] 	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4013836	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x401383a	          0x4889c2	                            mov rdx, rax	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x401383d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4013841	        0x48895038	             mov qword [rax + 0x38], rdx	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4013845	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013849	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x401384d	        0x4883f804	                              cmp rax, 4	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013851	            0x7778	                            ja 0x40138cb	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013853	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7649	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013857	    0x48c740380000	               mov qword [rax + 0x38], 0	      7649	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x401385f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013863	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013866	          0x80cc80	                             or ah, 0x80	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013869	            0x89c2	                            mov edx, eax	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x401386b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x401386f	          0x895020	             mov dword [rax + 0x20], edx	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013872	            0xeb57	                           jmp 0x40138cb	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4013874	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x4013878	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x401387c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x4013880	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x4013884	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x4013888	        0x482b55e8	             sub rdx, qword [rbp - 0x18]	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x401388c	        0x48895038	             mov qword [rax + 0x38], rdx	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x4013890	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4013894	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4013898	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x401389c	        0x4883f804	                              cmp rax, 4	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138a0	            0x7729	                            ja 0x40138cb	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7660	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138a6	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7660	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138aa	    0x48c740380000	               mov qword [rax + 0x38], 0	      7660	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138b6	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138ba	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138be	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138c2	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138c5	          0x80ce80	                             or dh, 0x80	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138c8	          0x895020	             mov dword [rax + 0x20], edx	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x40138cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7602	elf.c	FUNCTION_85	FOR_1
0x40138cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7602	elf.c	FUNCTION_85	FOR_1
0x40138d3	        0x488945d8	             mov qword [rbp - 0x28], rax	      7602	elf.c	FUNCTION_85	FOR_1
0x40138d7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      7602	elf.c	FUNCTION_85	FOR_1
0x40138dc	     0xf85c9fdffff	                           jne 0x40136ab	      7602	elf.c	FUNCTION_85	FOR_1
0x40138e2	      0xb801000000	                              mov eax, 1	      7667	elf.c	FUNCTION_85
0x40138e7	              0x5d	                                 pop rbp	      7668	elf.c	FUNCTION_85
0x40138e8	              0xc3	                                     ret	      7668	elf.c	FUNCTION_85
elfcore_write_prpsinfo	ELSE,1:DO,0:CALL,10:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	115
0x40193fe	              0x55	                                push rbp	     10535	elf.c	FUNCTION_162
0x40193ff	          0x4889e5	                            mov rbp, rsp	     10535	elf.c	FUNCTION_162
0x4019402	    0x4881ece00000	                           sub rsp, 0xe0	     10535	elf.c	FUNCTION_162
0x4019409	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	     10535	elf.c	FUNCTION_162
0x4019410	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	     10535	elf.c	FUNCTION_162
0x4019417	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	     10535	elf.c	FUNCTION_162
0x401941e	    0x48898d30ffff	             mov qword [rbp - 0xd0], rcx	     10535	elf.c	FUNCTION_162
0x4019425	    0x4c898528ffff	              mov qword [rbp - 0xd8], r8	     10535	elf.c	FUNCTION_162
0x401942c	    0x64488b042528	                mov rax, qword fs:[0x28]	     10535	elf.c	FUNCTION_162
0x4019435	        0x488945f8	                mov qword [rbp - 8], rax	     10535	elf.c	FUNCTION_162
0x4019439	            0x31c0	                            xor eax, eax	     10535	elf.c	FUNCTION_162
0x401943b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10536	elf.c	FUNCTION_162	CALL_1
0x4019442	        0x488b4008	                mov rax, qword [rax + 8]	     10536	elf.c	FUNCTION_162	CALL_1
0x4019446	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10536	elf.c	FUNCTION_162	CALL_1
0x401944d	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	     10536	elf.c	FUNCTION_162	CALL_1
0x4019454	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     10538	elf.c	FUNCTION_162	IF_1
0x401945b	    0x488b80200200	           mov rax, qword [rax + 0x220] 	     10538	elf.c	FUNCTION_162	IF_1
0x4019462	          0x4885c0	                           test rax, rax	     10538	elf.c	FUNCTION_162	IF_1
0x4019465	            0x7464	                            je 0x40194cb	     10538	elf.c	FUNCTION_162	IF_1
0x4019467	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     10541	elf.c	FUNCTION_162	IF_1
0x401946e	    0x4c8b90200200	           mov r10, qword [rax + 0x220] 	     10541	elf.c	FUNCTION_162	IF_1
0x4019475	    0x488bbd28ffff	             mov rdi, qword [rbp - 0xd8]	     10541	elf.c	FUNCTION_162	IF_1
0x401947c	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	     10541	elf.c	FUNCTION_162	IF_1
0x4019483	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	     10541	elf.c	FUNCTION_162	IF_1
0x401948a	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	     10541	elf.c	FUNCTION_162	IF_1
0x4019491	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10541	elf.c	FUNCTION_162	IF_1
0x4019498	          0x4989f9	                             mov r9, rdi	     10541	elf.c	FUNCTION_162	IF_1
0x401949b	          0x4989c8	                             mov r8, rcx	     10541	elf.c	FUNCTION_162	IF_1
0x401949e	      0xb903000000	                              mov ecx, 3	     10541	elf.c	FUNCTION_162	IF_1
0x40194a3	          0x4889c7	                            mov rdi, rax	     10541	elf.c	FUNCTION_162	IF_1
0x40194a6	      0xb800000000	                              mov eax, 0	     10541	elf.c	FUNCTION_162	IF_1
0x40194ab	          0x41ffd2	                                call r10	     10541	elf.c	FUNCTION_162	IF_1
0x40194ae	    0x48898568ffff	             mov qword [rbp - 0x98], rax	     10541	elf.c	FUNCTION_162	IF_1
0x40194b5	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x40194bd	            0x740c	                            je 0x40194cb	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x40194bf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10544	elf.c	FUNCTION_162	IF_1	IF_2
0x40194c6	      0xe96e010000	                           jmp 0x4019639	     10544	elf.c	FUNCTION_162	IF_1	IF_2
0x40194cb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     10549	elf.c	FUNCTION_162	IF_3
0x40194d2	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     10549	elf.c	FUNCTION_162	IF_3
0x40194d9	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	     10549	elf.c	FUNCTION_162	IF_3
0x40194dd	            0x3c01	                               cmp al, 1	     10549	elf.c	FUNCTION_162	IF_3
0x40194df	     0xf85ab000000	                           jne 0x4019590	     10549	elf.c	FUNCTION_162	IF_3
0x40194e5	    0xc78558ffffff	               mov dword [rbp - 0xa8], 3	     10556	elf.c	FUNCTION_162	IF_3
0x40194ef	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	     10559	elf.c	FUNCTION_162	IF_3	CALL_2
0x40194f6	      0xba7c000000	                           mov edx, 0x7c	     10559	elf.c	FUNCTION_162	IF_3	CALL_2
0x40194fb	      0xbe00000000	                              mov esi, 0	     10559	elf.c	FUNCTION_162	IF_3	CALL_2
0x4019500	          0x4889c7	                            mov rdi, rax	     10559	elf.c	FUNCTION_162	IF_3	CALL_2
0x4019503	      0xe800000000	                          call 0x4019508	     10559	elf.c	FUNCTION_162	IF_3	CALL_2
0x4019508	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	     10560	elf.c	FUNCTION_162	IF_3	CALL_3
0x401950f	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10560	elf.c	FUNCTION_162	IF_3	CALL_3
0x4019516	        0x488d4a1c	                   lea rcx, [rdx + 0x1c]	     10560	elf.c	FUNCTION_162	IF_3	CALL_3
0x401951a	      0xba10000000	                           mov edx, 0x10	     10560	elf.c	FUNCTION_162	IF_3	CALL_3
0x401951f	          0x4889c6	                            mov rsi, rax	     10560	elf.c	FUNCTION_162	IF_3	CALL_3
0x4019522	          0x4889cf	                            mov rdi, rcx	     10560	elf.c	FUNCTION_162	IF_3	CALL_3
0x4019525	      0xe800000000	                          call 0x401952a	     10560	elf.c	FUNCTION_162	IF_3	CALL_3
0x401952a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	     10561	elf.c	FUNCTION_162	IF_3	CALL_4
0x4019531	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10561	elf.c	FUNCTION_162	IF_3	CALL_4
0x4019538	        0x488d4a2c	                   lea rcx, [rdx + 0x2c]	     10561	elf.c	FUNCTION_162	IF_3	CALL_4
0x401953c	      0xba50000000	                           mov edx, 0x50	     10561	elf.c	FUNCTION_162	IF_3	CALL_4
0x4019541	          0x4889c6	                            mov rsi, rax	     10561	elf.c	FUNCTION_162	IF_3	CALL_4
0x4019544	          0x4889cf	                            mov rdi, rcx	     10561	elf.c	FUNCTION_162	IF_3	CALL_4
0x4019547	      0xe800000000	                          call 0x401954c	     10561	elf.c	FUNCTION_162	IF_3	CALL_4
0x401954c	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019553	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019559	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019560	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019567	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x401956e	        0x4883ec08	                              sub rsp, 8	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019572	            0x6a7c	                               push 0x7c	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019574	          0x4989f9	                             mov r9, rdi	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019577	          0x4189c8	                            mov r8d, ecx	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x401957a	      0xb900000000	                              mov ecx, 0	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x401957f	          0x4889c7	                            mov rdi, rax	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019582	      0xe800000000	                          call 0x4019587	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019587	        0x4883c410	                           add rsp, 0x10	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x401958b	      0xe9a9000000	                           jmp 0x4019639	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4019590	    0xc7855cffffff	               mov dword [rbp - 0xa4], 3	     10573	elf.c	FUNCTION_162	ELSE_1
0x401959a	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	     10576	elf.c	FUNCTION_162	ELSE_1	CALL_6
0x40195a1	      0xba88000000	                           mov edx, 0x88	     10576	elf.c	FUNCTION_162	ELSE_1	CALL_6
0x40195a6	      0xbe00000000	                              mov esi, 0	     10576	elf.c	FUNCTION_162	ELSE_1	CALL_6
0x40195ab	          0x4889c7	                            mov rdi, rax	     10576	elf.c	FUNCTION_162	ELSE_1	CALL_6
0x40195ae	      0xe800000000	                          call 0x40195b3	     10576	elf.c	FUNCTION_162	ELSE_1	CALL_6
0x40195b3	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	     10577	elf.c	FUNCTION_162	ELSE_1	CALL_7
0x40195ba	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10577	elf.c	FUNCTION_162	ELSE_1	CALL_7
0x40195c1	        0x488d4a28	                   lea rcx, [rdx + 0x28]	     10577	elf.c	FUNCTION_162	ELSE_1	CALL_7
0x40195c5	      0xba10000000	                           mov edx, 0x10	     10577	elf.c	FUNCTION_162	ELSE_1	CALL_7
0x40195ca	          0x4889c6	                            mov rsi, rax	     10577	elf.c	FUNCTION_162	ELSE_1	CALL_7
0x40195cd	          0x4889cf	                            mov rdi, rcx	     10577	elf.c	FUNCTION_162	ELSE_1	CALL_7
0x40195d0	      0xe800000000	                          call 0x40195d5	     10577	elf.c	FUNCTION_162	ELSE_1	CALL_7
0x40195d5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	     10578	elf.c	FUNCTION_162	ELSE_1	CALL_8
0x40195dc	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10578	elf.c	FUNCTION_162	ELSE_1	CALL_8
0x40195e3	        0x488d4a38	                   lea rcx, [rdx + 0x38]	     10578	elf.c	FUNCTION_162	ELSE_1	CALL_8
0x40195e7	      0xba50000000	                           mov edx, 0x50	     10578	elf.c	FUNCTION_162	ELSE_1	CALL_8
0x40195ec	          0x4889c6	                            mov rsi, rax	     10578	elf.c	FUNCTION_162	ELSE_1	CALL_8
0x40195ef	          0x4889cf	                            mov rdi, rcx	     10578	elf.c	FUNCTION_162	ELSE_1	CALL_8
0x40195f2	      0xe800000000	                          call 0x40195f7	     10578	elf.c	FUNCTION_162	ELSE_1	CALL_8
0x40195f7	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40195fe	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019604	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401960b	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019612	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019619	        0x4883ec08	                              sub rsp, 8	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401961d	      0x6888000000	                               push 0x88	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019622	          0x4989f9	                             mov r9, rdi	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019625	          0x4189c8	                            mov r8d, ecx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019628	      0xb900000000	                              mov ecx, 0	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401962d	          0x4889c7	                            mov rdi, rax	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019630	      0xe800000000	                          call 0x4019635	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019635	        0x4883c410	                           add rsp, 0x10	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4019639	        0x488b75f8	                mov rsi, qword [rbp - 8]	     10586	elf.c	FUNCTION_162
0x401963d	    0x644833342528	                xor rsi, qword fs:[0x28]	     10586	elf.c	FUNCTION_162
0x4019646	            0x7405	                            je 0x401964d	     10586	elf.c	FUNCTION_162
0x4019648	      0xe800000000	                          call 0x401964d	     10586	elf.c	FUNCTION_162
0x401964d	              0xc9	                                   leave	     10586	elf.c	FUNCTION_162
0x401964e	              0xc3	                                     ret	     10586	elf.c	FUNCTION_162
elfcore_write_register_note	ELSE,0:DO,0:CALL,44:WHILE,0:FOR,0:IF,22:SWITCH,0:functions,0	342
0x401a2bf	              0x55	                                push rbp	     11034	elf.c	FUNCTION_190
0x401a2c0	          0x4889e5	                            mov rbp, rsp	     11034	elf.c	FUNCTION_190
0x401a2c3	        0x4883ec30	                           sub rsp, 0x30	     11034	elf.c	FUNCTION_190
0x401a2c7	        0x48897df8	                mov qword [rbp - 8], rdi	     11034	elf.c	FUNCTION_190
0x401a2cb	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11034	elf.c	FUNCTION_190
0x401a2cf	        0x488955e8	             mov qword [rbp - 0x18], rdx	     11034	elf.c	FUNCTION_190
0x401a2d3	        0x48894de0	             mov qword [rbp - 0x20], rcx	     11034	elf.c	FUNCTION_190
0x401a2d7	        0x4c8945d8	              mov qword [rbp - 0x28], r8	     11034	elf.c	FUNCTION_190
0x401a2db	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	     11034	elf.c	FUNCTION_190
0x401a2df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x401a2e3	      0xbe00000000	                              mov esi, 0	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x401a2e8	          0x4889c7	                            mov rdi, rax	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x401a2eb	      0xe800000000	                          call 0x401a2f0	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x401a2f0	            0x85c0	                           test eax, eax	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x401a2f2	            0x7523	                           jne 0x401a317	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x401a2f4	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11036	elf.c	FUNCTION_190	CALL_2
0x401a2f7	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11036	elf.c	FUNCTION_190	CALL_2
0x401a2fb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11036	elf.c	FUNCTION_190	CALL_2
0x401a2ff	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11036	elf.c	FUNCTION_190	CALL_2
0x401a303	        0x488b45f8	                mov rax, qword [rbp - 8]	     11036	elf.c	FUNCTION_190	CALL_2
0x401a307	          0x4189f8	                            mov r8d, edi	     11036	elf.c	FUNCTION_190	CALL_2
0x401a30a	          0x4889c7	                            mov rdi, rax	     11036	elf.c	FUNCTION_190	CALL_2
0x401a30d	      0xe800000000	                          call 0x401a312	     11036	elf.c	FUNCTION_190	CALL_2
0x401a312	      0xe994040000	                           jmp 0x401a7ab	     11036	elf.c	FUNCTION_190	CALL_2
0x401a317	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x401a31b	      0xbe00000000	                              mov esi, 0	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x401a320	          0x4889c7	                            mov rdi, rax	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x401a323	      0xe800000000	                          call 0x401a328	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x401a328	            0x85c0	                           test eax, eax	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x401a32a	            0x7523	                           jne 0x401a34f	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x401a32c	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11038	elf.c	FUNCTION_190	CALL_4
0x401a32f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11038	elf.c	FUNCTION_190	CALL_4
0x401a333	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11038	elf.c	FUNCTION_190	CALL_4
0x401a337	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11038	elf.c	FUNCTION_190	CALL_4
0x401a33b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11038	elf.c	FUNCTION_190	CALL_4
0x401a33f	          0x4189f8	                            mov r8d, edi	     11038	elf.c	FUNCTION_190	CALL_4
0x401a342	          0x4889c7	                            mov rdi, rax	     11038	elf.c	FUNCTION_190	CALL_4
0x401a345	      0xe800000000	                          call 0x401a34a	     11038	elf.c	FUNCTION_190	CALL_4
0x401a34a	      0xe95c040000	                           jmp 0x401a7ab	     11038	elf.c	FUNCTION_190	CALL_4
0x401a34f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x401a353	      0xbe00000000	                              mov esi, 0	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x401a358	          0x4889c7	                            mov rdi, rax	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x401a35b	      0xe800000000	                          call 0x401a360	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x401a360	            0x85c0	                           test eax, eax	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x401a362	            0x7523	                           jne 0x401a387	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x401a364	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11040	elf.c	FUNCTION_190	CALL_6
0x401a367	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11040	elf.c	FUNCTION_190	CALL_6
0x401a36b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11040	elf.c	FUNCTION_190	CALL_6
0x401a36f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11040	elf.c	FUNCTION_190	CALL_6
0x401a373	        0x488b45f8	                mov rax, qword [rbp - 8]	     11040	elf.c	FUNCTION_190	CALL_6
0x401a377	          0x4189f8	                            mov r8d, edi	     11040	elf.c	FUNCTION_190	CALL_6
0x401a37a	          0x4889c7	                            mov rdi, rax	     11040	elf.c	FUNCTION_190	CALL_6
0x401a37d	      0xe800000000	                          call 0x401a382	     11040	elf.c	FUNCTION_190	CALL_6
0x401a382	      0xe924040000	                           jmp 0x401a7ab	     11040	elf.c	FUNCTION_190	CALL_6
0x401a387	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x401a38b	      0xbe00000000	                              mov esi, 0	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x401a390	          0x4889c7	                            mov rdi, rax	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x401a393	      0xe800000000	                          call 0x401a398	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x401a398	            0x85c0	                           test eax, eax	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x401a39a	            0x7523	                           jne 0x401a3bf	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x401a39c	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11042	elf.c	FUNCTION_190	CALL_8
0x401a39f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3a3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3a7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3ab	        0x488b45f8	                mov rax, qword [rbp - 8]	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3af	          0x4189f8	                            mov r8d, edi	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3b2	          0x4889c7	                            mov rdi, rax	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3b5	      0xe800000000	                          call 0x401a3ba	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3ba	      0xe9ec030000	                           jmp 0x401a7ab	     11042	elf.c	FUNCTION_190	CALL_8
0x401a3bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x401a3c3	      0xbe00000000	                              mov esi, 0	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x401a3c8	          0x4889c7	                            mov rdi, rax	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x401a3cb	      0xe800000000	                          call 0x401a3d0	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x401a3d0	            0x85c0	                           test eax, eax	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x401a3d2	            0x7523	                           jne 0x401a3f7	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x401a3d4	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3d7	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3db	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3df	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3e3	        0x488b45f8	                mov rax, qword [rbp - 8]	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3e7	          0x4189f8	                            mov r8d, edi	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3ea	          0x4889c7	                            mov rdi, rax	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3ed	      0xe800000000	                          call 0x401a3f2	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3f2	      0xe9b4030000	                           jmp 0x401a7ab	     11044	elf.c	FUNCTION_190	CALL_10
0x401a3f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x401a3fb	      0xbe00000000	                              mov esi, 0	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x401a400	          0x4889c7	                            mov rdi, rax	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x401a403	      0xe800000000	                          call 0x401a408	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x401a408	            0x85c0	                           test eax, eax	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x401a40a	            0x7523	                           jne 0x401a42f	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x401a40c	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11046	elf.c	FUNCTION_190	CALL_12
0x401a40f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11046	elf.c	FUNCTION_190	CALL_12
0x401a413	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11046	elf.c	FUNCTION_190	CALL_12
0x401a417	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11046	elf.c	FUNCTION_190	CALL_12
0x401a41b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11046	elf.c	FUNCTION_190	CALL_12
0x401a41f	          0x4189f8	                            mov r8d, edi	     11046	elf.c	FUNCTION_190	CALL_12
0x401a422	          0x4889c7	                            mov rdi, rax	     11046	elf.c	FUNCTION_190	CALL_12
0x401a425	      0xe8cef8ffff	   call sym.elfcore_write_s390_high_gprs	     11046	elf.c	FUNCTION_190	CALL_12
0x401a42a	      0xe97c030000	                           jmp 0x401a7ab	     11046	elf.c	FUNCTION_190	CALL_12
0x401a42f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x401a433	      0xbe00000000	                              mov esi, 0	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x401a438	          0x4889c7	                            mov rdi, rax	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x401a43b	      0xe800000000	                          call 0x401a440	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x401a440	            0x85c0	                           test eax, eax	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x401a442	            0x7523	                           jne 0x401a467	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x401a444	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11048	elf.c	FUNCTION_190	CALL_14
0x401a447	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11048	elf.c	FUNCTION_190	CALL_14
0x401a44b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11048	elf.c	FUNCTION_190	CALL_14
0x401a44f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11048	elf.c	FUNCTION_190	CALL_14
0x401a453	        0x488b45f8	                mov rax, qword [rbp - 8]	     11048	elf.c	FUNCTION_190	CALL_14
0x401a457	          0x4189f8	                            mov r8d, edi	     11048	elf.c	FUNCTION_190	CALL_14
0x401a45a	          0x4889c7	                            mov rdi, rax	     11048	elf.c	FUNCTION_190	CALL_14
0x401a45d	      0xe800000000	                          call 0x401a462	     11048	elf.c	FUNCTION_190	CALL_14
0x401a462	      0xe944030000	                           jmp 0x401a7ab	     11048	elf.c	FUNCTION_190	CALL_14
0x401a467	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x401a46b	      0xbe00000000	                              mov esi, 0	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x401a470	          0x4889c7	                            mov rdi, rax	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x401a473	      0xe800000000	                          call 0x401a478	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x401a478	            0x85c0	                           test eax, eax	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x401a47a	            0x7523	                           jne 0x401a49f	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x401a47c	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11050	elf.c	FUNCTION_190	CALL_16
0x401a47f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11050	elf.c	FUNCTION_190	CALL_16
0x401a483	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11050	elf.c	FUNCTION_190	CALL_16
0x401a487	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11050	elf.c	FUNCTION_190	CALL_16
0x401a48b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11050	elf.c	FUNCTION_190	CALL_16
0x401a48f	          0x4189f8	                            mov r8d, edi	     11050	elf.c	FUNCTION_190	CALL_16
0x401a492	          0x4889c7	                            mov rdi, rax	     11050	elf.c	FUNCTION_190	CALL_16
0x401a495	      0xe800000000	                          call 0x401a49a	     11050	elf.c	FUNCTION_190	CALL_16
0x401a49a	      0xe90c030000	                           jmp 0x401a7ab	     11050	elf.c	FUNCTION_190	CALL_16
0x401a49f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x401a4a3	      0xbe00000000	                              mov esi, 0	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x401a4a8	          0x4889c7	                            mov rdi, rax	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x401a4ab	      0xe800000000	                          call 0x401a4b0	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x401a4b0	            0x85c0	                           test eax, eax	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x401a4b2	            0x7523	                           jne 0x401a4d7	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x401a4b4	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4b7	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4bb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4bf	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4c3	        0x488b45f8	                mov rax, qword [rbp - 8]	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4c7	          0x4189f8	                            mov r8d, edi	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4ca	          0x4889c7	                            mov rdi, rax	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4cd	      0xe800000000	                          call 0x401a4d2	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4d2	      0xe9d4020000	                           jmp 0x401a7ab	     11052	elf.c	FUNCTION_190	CALL_18
0x401a4d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x401a4db	      0xbe00000000	                              mov esi, 0	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x401a4e0	          0x4889c7	                            mov rdi, rax	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x401a4e3	      0xe800000000	                          call 0x401a4e8	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x401a4e8	            0x85c0	                           test eax, eax	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x401a4ea	            0x7523	                           jne 0x401a50f	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x401a4ec	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11054	elf.c	FUNCTION_190	CALL_20
0x401a4ef	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11054	elf.c	FUNCTION_190	CALL_20
0x401a4f3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11054	elf.c	FUNCTION_190	CALL_20
0x401a4f7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11054	elf.c	FUNCTION_190	CALL_20
0x401a4fb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11054	elf.c	FUNCTION_190	CALL_20
0x401a4ff	          0x4189f8	                            mov r8d, edi	     11054	elf.c	FUNCTION_190	CALL_20
0x401a502	          0x4889c7	                            mov rdi, rax	     11054	elf.c	FUNCTION_190	CALL_20
0x401a505	      0xe800000000	                          call 0x401a50a	     11054	elf.c	FUNCTION_190	CALL_20
0x401a50a	      0xe99c020000	                           jmp 0x401a7ab	     11054	elf.c	FUNCTION_190	CALL_20
0x401a50f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x401a513	      0xbe00000000	                              mov esi, 0	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x401a518	          0x4889c7	                            mov rdi, rax	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x401a51b	      0xe800000000	                          call 0x401a520	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x401a520	            0x85c0	                           test eax, eax	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x401a522	            0x7523	                           jne 0x401a547	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x401a524	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11056	elf.c	FUNCTION_190	CALL_22
0x401a527	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11056	elf.c	FUNCTION_190	CALL_22
0x401a52b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11056	elf.c	FUNCTION_190	CALL_22
0x401a52f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11056	elf.c	FUNCTION_190	CALL_22
0x401a533	        0x488b45f8	                mov rax, qword [rbp - 8]	     11056	elf.c	FUNCTION_190	CALL_22
0x401a537	          0x4189f8	                            mov r8d, edi	     11056	elf.c	FUNCTION_190	CALL_22
0x401a53a	          0x4889c7	                            mov rdi, rax	     11056	elf.c	FUNCTION_190	CALL_22
0x401a53d	      0xe800000000	                          call 0x401a542	     11056	elf.c	FUNCTION_190	CALL_22
0x401a542	      0xe964020000	                           jmp 0x401a7ab	     11056	elf.c	FUNCTION_190	CALL_22
0x401a547	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x401a54b	      0xbe00000000	                              mov esi, 0	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x401a550	          0x4889c7	                            mov rdi, rax	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x401a553	      0xe800000000	                          call 0x401a558	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x401a558	            0x85c0	                           test eax, eax	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x401a55a	            0x7523	                           jne 0x401a57f	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x401a55c	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11058	elf.c	FUNCTION_190	CALL_24
0x401a55f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11058	elf.c	FUNCTION_190	CALL_24
0x401a563	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11058	elf.c	FUNCTION_190	CALL_24
0x401a567	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11058	elf.c	FUNCTION_190	CALL_24
0x401a56b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11058	elf.c	FUNCTION_190	CALL_24
0x401a56f	          0x4189f8	                            mov r8d, edi	     11058	elf.c	FUNCTION_190	CALL_24
0x401a572	          0x4889c7	                            mov rdi, rax	     11058	elf.c	FUNCTION_190	CALL_24
0x401a575	      0xe800000000	                          call 0x401a57a	     11058	elf.c	FUNCTION_190	CALL_24
0x401a57a	      0xe92c020000	                           jmp 0x401a7ab	     11058	elf.c	FUNCTION_190	CALL_24
0x401a57f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x401a583	      0xbe00000000	                              mov esi, 0	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x401a588	          0x4889c7	                            mov rdi, rax	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x401a58b	      0xe800000000	                          call 0x401a590	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x401a590	            0x85c0	                           test eax, eax	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x401a592	            0x7523	                           jne 0x401a5b7	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x401a594	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11060	elf.c	FUNCTION_190	CALL_26
0x401a597	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11060	elf.c	FUNCTION_190	CALL_26
0x401a59b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11060	elf.c	FUNCTION_190	CALL_26
0x401a59f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11060	elf.c	FUNCTION_190	CALL_26
0x401a5a3	        0x488b45f8	                mov rax, qword [rbp - 8]	     11060	elf.c	FUNCTION_190	CALL_26
0x401a5a7	          0x4189f8	                            mov r8d, edi	     11060	elf.c	FUNCTION_190	CALL_26
0x401a5aa	          0x4889c7	                            mov rdi, rax	     11060	elf.c	FUNCTION_190	CALL_26
0x401a5ad	      0xe800000000	                          call 0x401a5b2	     11060	elf.c	FUNCTION_190	CALL_26
0x401a5b2	      0xe9f4010000	                           jmp 0x401a7ab	     11060	elf.c	FUNCTION_190	CALL_26
0x401a5b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x401a5bb	      0xbe00000000	                              mov esi, 0	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x401a5c0	          0x4889c7	                            mov rdi, rax	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x401a5c3	      0xe800000000	                          call 0x401a5c8	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x401a5c8	            0x85c0	                           test eax, eax	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x401a5ca	            0x7523	                           jne 0x401a5ef	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x401a5cc	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5cf	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5d3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5d7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5db	        0x488b45f8	                mov rax, qword [rbp - 8]	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5df	          0x4189f8	                            mov r8d, edi	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5e2	          0x4889c7	                            mov rdi, rax	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5e5	      0xe800000000	                          call 0x401a5ea	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5ea	      0xe9bc010000	                           jmp 0x401a7ab	     11062	elf.c	FUNCTION_190	CALL_28
0x401a5ef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x401a5f3	      0xbe00000000	                              mov esi, 0	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x401a5f8	          0x4889c7	                            mov rdi, rax	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x401a5fb	      0xe800000000	                          call 0x401a600	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x401a600	            0x85c0	                           test eax, eax	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x401a602	            0x7523	                           jne 0x401a627	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x401a604	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11064	elf.c	FUNCTION_190	CALL_30
0x401a607	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11064	elf.c	FUNCTION_190	CALL_30
0x401a60b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11064	elf.c	FUNCTION_190	CALL_30
0x401a60f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11064	elf.c	FUNCTION_190	CALL_30
0x401a613	        0x488b45f8	                mov rax, qword [rbp - 8]	     11064	elf.c	FUNCTION_190	CALL_30
0x401a617	          0x4189f8	                            mov r8d, edi	     11064	elf.c	FUNCTION_190	CALL_30
0x401a61a	          0x4889c7	                            mov rdi, rax	     11064	elf.c	FUNCTION_190	CALL_30
0x401a61d	      0xe800000000	                          call 0x401a622	     11064	elf.c	FUNCTION_190	CALL_30
0x401a622	      0xe984010000	                           jmp 0x401a7ab	     11064	elf.c	FUNCTION_190	CALL_30
0x401a627	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x401a62b	      0xbe00000000	                              mov esi, 0	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x401a630	          0x4889c7	                            mov rdi, rax	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x401a633	      0xe800000000	                          call 0x401a638	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x401a638	            0x85c0	                           test eax, eax	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x401a63a	            0x7523	                           jne 0x401a65f	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x401a63c	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11066	elf.c	FUNCTION_190	CALL_32
0x401a63f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11066	elf.c	FUNCTION_190	CALL_32
0x401a643	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11066	elf.c	FUNCTION_190	CALL_32
0x401a647	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11066	elf.c	FUNCTION_190	CALL_32
0x401a64b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11066	elf.c	FUNCTION_190	CALL_32
0x401a64f	          0x4189f8	                            mov r8d, edi	     11066	elf.c	FUNCTION_190	CALL_32
0x401a652	          0x4889c7	                            mov rdi, rax	     11066	elf.c	FUNCTION_190	CALL_32
0x401a655	      0xe800000000	                          call 0x401a65a	     11066	elf.c	FUNCTION_190	CALL_32
0x401a65a	      0xe94c010000	                           jmp 0x401a7ab	     11066	elf.c	FUNCTION_190	CALL_32
0x401a65f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x401a663	      0xbe00000000	                              mov esi, 0	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x401a668	          0x4889c7	                            mov rdi, rax	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x401a66b	      0xe800000000	                          call 0x401a670	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x401a670	            0x85c0	                           test eax, eax	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x401a672	            0x7523	                           jne 0x401a697	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x401a674	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11068	elf.c	FUNCTION_190	CALL_34
0x401a677	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11068	elf.c	FUNCTION_190	CALL_34
0x401a67b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11068	elf.c	FUNCTION_190	CALL_34
0x401a67f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11068	elf.c	FUNCTION_190	CALL_34
0x401a683	        0x488b45f8	                mov rax, qword [rbp - 8]	     11068	elf.c	FUNCTION_190	CALL_34
0x401a687	          0x4189f8	                            mov r8d, edi	     11068	elf.c	FUNCTION_190	CALL_34
0x401a68a	          0x4889c7	                            mov rdi, rax	     11068	elf.c	FUNCTION_190	CALL_34
0x401a68d	      0xe800000000	                          call 0x401a692	     11068	elf.c	FUNCTION_190	CALL_34
0x401a692	      0xe914010000	                           jmp 0x401a7ab	     11068	elf.c	FUNCTION_190	CALL_34
0x401a697	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x401a69b	      0xbe00000000	                              mov esi, 0	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x401a6a0	          0x4889c7	                            mov rdi, rax	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x401a6a3	      0xe800000000	                          call 0x401a6a8	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x401a6a8	            0x85c0	                           test eax, eax	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x401a6aa	            0x7523	                           jne 0x401a6cf	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x401a6ac	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6af	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6b3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6b7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6bb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6bf	          0x4189f8	                            mov r8d, edi	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6c2	          0x4889c7	                            mov rdi, rax	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6c5	      0xe800000000	                          call 0x401a6ca	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6ca	      0xe9dc000000	                           jmp 0x401a7ab	     11070	elf.c	FUNCTION_190	CALL_36
0x401a6cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x401a6d3	      0xbe00000000	                              mov esi, 0	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x401a6d8	          0x4889c7	                            mov rdi, rax	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x401a6db	      0xe800000000	                          call 0x401a6e0	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x401a6e0	            0x85c0	                           test eax, eax	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x401a6e2	            0x7523	                           jne 0x401a707	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x401a6e4	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11072	elf.c	FUNCTION_190	CALL_38
0x401a6e7	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11072	elf.c	FUNCTION_190	CALL_38
0x401a6eb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11072	elf.c	FUNCTION_190	CALL_38
0x401a6ef	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11072	elf.c	FUNCTION_190	CALL_38
0x401a6f3	        0x488b45f8	                mov rax, qword [rbp - 8]	     11072	elf.c	FUNCTION_190	CALL_38
0x401a6f7	          0x4189f8	                            mov r8d, edi	     11072	elf.c	FUNCTION_190	CALL_38
0x401a6fa	          0x4889c7	                            mov rdi, rax	     11072	elf.c	FUNCTION_190	CALL_38
0x401a6fd	      0xe800000000	                          call 0x401a702	     11072	elf.c	FUNCTION_190	CALL_38
0x401a702	      0xe9a4000000	                           jmp 0x401a7ab	     11072	elf.c	FUNCTION_190	CALL_38
0x401a707	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x401a70b	      0xbe00000000	                              mov esi, 0	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x401a710	          0x4889c7	                            mov rdi, rax	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x401a713	      0xe800000000	                          call 0x401a718	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x401a718	            0x85c0	                           test eax, eax	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x401a71a	            0x7520	                           jne 0x401a73c	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x401a71c	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11074	elf.c	FUNCTION_190	CALL_40
0x401a71f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11074	elf.c	FUNCTION_190	CALL_40
0x401a723	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11074	elf.c	FUNCTION_190	CALL_40
0x401a727	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11074	elf.c	FUNCTION_190	CALL_40
0x401a72b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11074	elf.c	FUNCTION_190	CALL_40
0x401a72f	          0x4189f8	                            mov r8d, edi	     11074	elf.c	FUNCTION_190	CALL_40
0x401a732	          0x4889c7	                            mov rdi, rax	     11074	elf.c	FUNCTION_190	CALL_40
0x401a735	      0xe800000000	                          call 0x401a73a	     11074	elf.c	FUNCTION_190	CALL_40
0x401a73a	            0xeb6f	                           jmp 0x401a7ab	     11074	elf.c	FUNCTION_190	CALL_40
0x401a73c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x401a740	      0xbe00000000	                              mov esi, 0	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x401a745	          0x4889c7	                            mov rdi, rax	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x401a748	      0xe800000000	                          call 0x401a74d	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x401a74d	            0x85c0	                           test eax, eax	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x401a74f	            0x7520	                           jne 0x401a771	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x401a751	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11076	elf.c	FUNCTION_190	CALL_42
0x401a754	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11076	elf.c	FUNCTION_190	CALL_42
0x401a758	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11076	elf.c	FUNCTION_190	CALL_42
0x401a75c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11076	elf.c	FUNCTION_190	CALL_42
0x401a760	        0x488b45f8	                mov rax, qword [rbp - 8]	     11076	elf.c	FUNCTION_190	CALL_42
0x401a764	          0x4189f8	                            mov r8d, edi	     11076	elf.c	FUNCTION_190	CALL_42
0x401a767	          0x4889c7	                            mov rdi, rax	     11076	elf.c	FUNCTION_190	CALL_42
0x401a76a	      0xe800000000	                          call 0x401a76f	     11076	elf.c	FUNCTION_190	CALL_42
0x401a76f	            0xeb3a	                           jmp 0x401a7ab	     11076	elf.c	FUNCTION_190	CALL_42
0x401a771	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x401a775	      0xbe00000000	                              mov esi, 0	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x401a77a	          0x4889c7	                            mov rdi, rax	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x401a77d	      0xe800000000	                          call 0x401a782	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x401a782	            0x85c0	                           test eax, eax	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x401a784	            0x7520	                           jne 0x401a7a6	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x401a786	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	     11078	elf.c	FUNCTION_190	CALL_44
0x401a789	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11078	elf.c	FUNCTION_190	CALL_44
0x401a78d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11078	elf.c	FUNCTION_190	CALL_44
0x401a791	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11078	elf.c	FUNCTION_190	CALL_44
0x401a795	        0x488b45f8	                mov rax, qword [rbp - 8]	     11078	elf.c	FUNCTION_190	CALL_44
0x401a799	          0x4189f8	                            mov r8d, edi	     11078	elf.c	FUNCTION_190	CALL_44
0x401a79c	          0x4889c7	                            mov rdi, rax	     11078	elf.c	FUNCTION_190	CALL_44
0x401a79f	      0xe800000000	                          call 0x401a7a4	     11078	elf.c	FUNCTION_190	CALL_44
0x401a7a4	            0xeb05	                           jmp 0x401a7ab	     11078	elf.c	FUNCTION_190	CALL_44
0x401a7a6	      0xb800000000	                              mov eax, 0	     11079	elf.c	FUNCTION_190
0x401a7ab	              0xc9	                                   leave	     11080	elf.c	FUNCTION_190
0x401a7ac	              0xc3	                                     ret	     11080	elf.c	FUNCTION_190
elf_read_notes	ELSE,0:DO,0:CALL,6:WHILE,0:FOR,0:IF,4:SWITCH,0:functions,0	65
0x401ac4a	              0x55	                                push rbp	     11185	elf.c	FUNCTION_192
0x401ac4b	          0x4889e5	                            mov rbp, rsp	     11185	elf.c	FUNCTION_192
0x401ac4e	        0x4883ec30	                           sub rsp, 0x30	     11185	elf.c	FUNCTION_192
0x401ac52	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11185	elf.c	FUNCTION_192
0x401ac56	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11185	elf.c	FUNCTION_192
0x401ac5a	        0x488955d8	             mov qword [rbp - 0x28], rdx	     11185	elf.c	FUNCTION_192
0x401ac5e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     11185	elf.c	FUNCTION_192
0x401ac62	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     11188	elf.c	FUNCTION_192	IF_1
0x401ac67	            0x7407	                            je 0x401ac70	     11188	elf.c	FUNCTION_192	IF_1
0x401ac69	      0x48837dd8ff	cmp qword [rbp - 0x28], 0xffffffffffffffff	     11188	elf.c	FUNCTION_192	IF_1
0x401ac6e	            0x750a	                           jne 0x401ac7a	     11188	elf.c	FUNCTION_192	IF_1
0x401ac70	      0xb801000000	                              mov eax, 1	     11189	elf.c	FUNCTION_192	IF_1
0x401ac75	      0xe9ba000000	                           jmp 0x401ad34	     11189	elf.c	FUNCTION_192	IF_1
0x401ac7a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac82	      0xba00000000	                              mov edx, 0	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac87	          0x4889ce	                            mov rsi, rcx	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac8a	          0x4889c7	                            mov rdi, rax	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac8d	      0xe800000000	                          call 0x401ac92	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac92	            0x85c0	                           test eax, eax	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac94	            0x740a	                            je 0x401aca0	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x401ac96	      0xb800000000	                              mov eax, 0	     11192	elf.c	FUNCTION_192	IF_2
0x401ac9b	      0xe994000000	                           jmp 0x401ad34	     11192	elf.c	FUNCTION_192	IF_2
0x401aca0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11194	elf.c	FUNCTION_192	CALL_2
0x401aca4	        0x4883c001	                              add rax, 1	     11194	elf.c	FUNCTION_192	CALL_2
0x401aca8	          0x4889c7	                            mov rdi, rax	     11194	elf.c	FUNCTION_192	CALL_2
0x401acab	      0xe800000000	                          call 0x401acb0	     11194	elf.c	FUNCTION_192	CALL_2
0x401acb0	        0x488945f8	                mov qword [rbp - 8], rax	     11194	elf.c	FUNCTION_192	CALL_2
0x401acb4	      0x48837df800	                  cmp qword [rbp - 8], 0	     11195	elf.c	FUNCTION_192	IF_3
0x401acb9	            0x7507	                           jne 0x401acc2	     11195	elf.c	FUNCTION_192	IF_3
0x401acbb	      0xb800000000	                              mov eax, 0	     11196	elf.c	FUNCTION_192	IF_3
0x401acc0	            0xeb72	                           jmp 0x401ad34	     11196	elf.c	FUNCTION_192	IF_3
0x401acc2	        0x488b55f8	                mov rdx, qword [rbp - 8]	     11200	elf.c	FUNCTION_192
0x401acc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11200	elf.c	FUNCTION_192
0x401acca	          0x4801d0	                            add rax, rdx	     11200	elf.c	FUNCTION_192
0x401accd	          0xc60000	                       mov byte [rax], 0	     11200	elf.c	FUNCTION_192
0x401acd0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401acd4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401acd8	        0x488b45f8	                mov rax, qword [rbp - 8]	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401acdc	          0x4889ce	                            mov rsi, rcx	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401acdf	          0x4889c7	                            mov rdi, rax	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401ace2	      0xe800000000	                          call 0x401ace7	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401ace7	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401aceb	            0x7523	                           jne 0x401ad10	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x401aced	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401acf1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401acf5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401acf9	        0x488b75f8	                mov rsi, qword [rbp - 8]	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401acfd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401ad01	          0x4989f8	                             mov r8, rdi	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401ad04	          0x4889c7	                            mov rdi, rax	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401ad07	      0xe8a1faffff	                call sym.elf_parse_notes	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401ad0c	            0x85c0	                           test eax, eax	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401ad0e	            0x7513	                           jne 0x401ad23	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x401ad10	        0x488b45f8	                mov rax, qword [rbp - 8]	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x401ad14	          0x4889c7	                            mov rdi, rax	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x401ad17	      0xe800000000	                          call 0x401ad1c	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x401ad1c	      0xb800000000	                              mov eax, 0	     11206	elf.c	FUNCTION_192	IF_4
0x401ad21	            0xeb11	                           jmp 0x401ad34	     11206	elf.c	FUNCTION_192	IF_4
0x401ad23	        0x488b45f8	                mov rax, qword [rbp - 8]	     11209	elf.c	FUNCTION_192	CALL_6
0x401ad27	          0x4889c7	                            mov rdi, rax	     11209	elf.c	FUNCTION_192	CALL_6
0x401ad2a	      0xe800000000	                          call 0x401ad2f	     11209	elf.c	FUNCTION_192	CALL_6
0x401ad2f	      0xb801000000	                              mov eax, 1	     11210	elf.c	FUNCTION_192
0x401ad34	              0xc9	                                   leave	     11211	elf.c	FUNCTION_192
0x401ad35	              0xc3	                                     ret	     11211	elf.c	FUNCTION_192
bfd_elf_generic_reloc	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	36
0x4003447	              0x55	                                push rbp	      1281	elf.c	ELSE_12	FUNCTION_27
0x4003448	          0x4889e5	                            mov rbp, rsp	      1281	elf.c	ELSE_12	FUNCTION_27
0x400344b	        0x48897df8	                mov qword [rbp - 8], rdi	      1281	elf.c	ELSE_12	FUNCTION_27
0x400344f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1281	elf.c	ELSE_12	FUNCTION_27
0x4003453	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1281	elf.c	ELSE_12	FUNCTION_27
0x4003457	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1281	elf.c	ELSE_12	FUNCTION_27
0x400345b	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1281	elf.c	ELSE_12	FUNCTION_27
0x400345f	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      1281	elf.c	ELSE_12	FUNCTION_27
0x4003463	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003468	            0x744e	                            je 0x40034b8	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400346a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400346e	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003471	      0x2500010000	                          and eax, 0x100	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003476	            0x85c0	                           test eax, eax	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003478	            0x753e	                           jne 0x40034b8	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400347a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400347e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003482	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003485	            0x85c0	                           test eax, eax	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003487	            0x740d	                            je 0x4003496	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003489	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400348d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003491	          0x4885c0	                           test rax, rax	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003494	            0x7522	                           jne 0x40034b8	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003496	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400349a	        0x488b5008	                mov rdx, qword [rax + 8]	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400349e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x40034a2	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x40034a6	          0x4801c2	                            add rdx, rax	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x40034a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x40034ad	        0x48895008	                mov qword [rax + 8], rdx	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x40034b1	      0xb802000000	                              mov eax, 2	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x40034b6	            0xeb05	                           jmp 0x40034bd	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x40034b8	      0xb805000000	                              mov eax, 5	      1291	elf.c	ELSE_12	FUNCTION_27
0x40034bd	              0x5d	                                 pop rbp	      1292	elf.c	ELSE_12	FUNCTION_27
0x40034be	              0xc3	                                     ret	      1292	elf.c	ELSE_12	FUNCTION_27
swap_linux_prpsinfo32_ugid32_out	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	120
0x40000a1	              0x55	                                push rbp	        60	elf-linux-core.h	FUNCTION_204
0x40000a2	          0x4889e5	                            mov rbp, rsp	        60	elf-linux-core.h	FUNCTION_204
0x40000a5	        0x4883ec20	                           sub rsp, 0x20	        60	elf-linux-core.h	FUNCTION_204
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	        60	elf-linux-core.h	FUNCTION_204
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	        60	elf-linux-core.h	FUNCTION_204
0x40000b1	        0x488955e8	             mov qword [rbp - 0x18], rdx	        60	elf-linux-core.h	FUNCTION_204
0x40000b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	elf-linux-core.h	FUNCTION_204
0x40000b9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        61	elf-linux-core.h	FUNCTION_204
0x40000bd	           0xfb612	                   movzx edx, byte [rdx]	        61	elf-linux-core.h	FUNCTION_204
0x40000c0	            0x8810	                      mov byte [rax], dl	        61	elf-linux-core.h	FUNCTION_204
0x40000c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	elf-linux-core.h	FUNCTION_204
0x40000c6	        0x488d5001	                      lea rdx, [rax + 1]	        62	elf-linux-core.h	FUNCTION_204
0x40000ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        62	elf-linux-core.h	FUNCTION_204
0x40000ce	         0xfb64001	               movzx eax, byte [rax + 1]	        62	elf-linux-core.h	FUNCTION_204
0x40000d2	            0x8802	                      mov byte [rdx], al	        62	elf-linux-core.h	FUNCTION_204
0x40000d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        63	elf-linux-core.h	FUNCTION_204
0x40000d8	        0x488d5002	                      lea rdx, [rax + 2]	        63	elf-linux-core.h	FUNCTION_204
0x40000dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        63	elf-linux-core.h	FUNCTION_204
0x40000e0	         0xfb64002	               movzx eax, byte [rax + 2]	        63	elf-linux-core.h	FUNCTION_204
0x40000e4	            0x8802	                      mov byte [rdx], al	        63	elf-linux-core.h	FUNCTION_204
0x40000e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        64	elf-linux-core.h	FUNCTION_204
0x40000ea	        0x488d5003	                      lea rdx, [rax + 3]	        64	elf-linux-core.h	FUNCTION_204
0x40000ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        64	elf-linux-core.h	FUNCTION_204
0x40000f2	         0xfb64003	               movzx eax, byte [rax + 3]	        64	elf-linux-core.h	FUNCTION_204
0x40000f6	            0x8802	                      mov byte [rdx], al	        64	elf-linux-core.h	FUNCTION_204
0x40000f8	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	elf-linux-core.h	FUNCTION_204
0x40000fc	        0x488b4008	                mov rax, qword [rax + 8]	        65	elf-linux-core.h	FUNCTION_204
0x4000100	        0x488b4048	            mov rax, qword [rax + 0x48] 	        65	elf-linux-core.h	FUNCTION_204
0x4000104	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        65	elf-linux-core.h	FUNCTION_204
0x4000108	        0x488d4a04	                      lea rcx, [rdx + 4]	        65	elf-linux-core.h	FUNCTION_204
0x400010c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        65	elf-linux-core.h	FUNCTION_204
0x4000110	        0x488b5208	                mov rdx, qword [rdx + 8]	        65	elf-linux-core.h	FUNCTION_204
0x4000114	          0x4889ce	                            mov rsi, rcx	        65	elf-linux-core.h	FUNCTION_204
0x4000117	          0x4889d7	                            mov rdi, rdx	        65	elf-linux-core.h	FUNCTION_204
0x400011a	            0xffd0	                                call rax	        65	elf-linux-core.h	FUNCTION_204
0x400011c	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	elf-linux-core.h	FUNCTION_204
0x4000120	        0x488b4008	                mov rax, qword [rax + 8]	        66	elf-linux-core.h	FUNCTION_204
0x4000124	        0x488b4048	            mov rax, qword [rax + 0x48] 	        66	elf-linux-core.h	FUNCTION_204
0x4000128	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        66	elf-linux-core.h	FUNCTION_204
0x400012c	        0x488d4a08	                      lea rcx, [rdx + 8]	        66	elf-linux-core.h	FUNCTION_204
0x4000130	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        66	elf-linux-core.h	FUNCTION_204
0x4000134	          0x8b5210	            mov edx, dword [rdx + 0x10] 	        66	elf-linux-core.h	FUNCTION_204
0x4000137	            0x89d2	                            mov edx, edx	        66	elf-linux-core.h	FUNCTION_204
0x4000139	          0x4889ce	                            mov rsi, rcx	        66	elf-linux-core.h	FUNCTION_204
0x400013c	          0x4889d7	                            mov rdi, rdx	        66	elf-linux-core.h	FUNCTION_204
0x400013f	            0xffd0	                                call rax	        66	elf-linux-core.h	FUNCTION_204
0x4000141	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	elf-linux-core.h	FUNCTION_204
0x4000145	        0x488b4008	                mov rax, qword [rax + 8]	        67	elf-linux-core.h	FUNCTION_204
0x4000149	        0x488b4048	            mov rax, qword [rax + 0x48] 	        67	elf-linux-core.h	FUNCTION_204
0x400014d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        67	elf-linux-core.h	FUNCTION_204
0x4000151	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	        67	elf-linux-core.h	FUNCTION_204
0x4000155	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        67	elf-linux-core.h	FUNCTION_204
0x4000159	          0x8b5214	            mov edx, dword [rdx + 0x14] 	        67	elf-linux-core.h	FUNCTION_204
0x400015c	            0x89d2	                            mov edx, edx	        67	elf-linux-core.h	FUNCTION_204
0x400015e	          0x4889ce	                            mov rsi, rcx	        67	elf-linux-core.h	FUNCTION_204
0x4000161	          0x4889d7	                            mov rdi, rdx	        67	elf-linux-core.h	FUNCTION_204
0x4000164	            0xffd0	                                call rax	        67	elf-linux-core.h	FUNCTION_204
0x4000166	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	elf-linux-core.h	FUNCTION_204
0x400016a	        0x488b4008	                mov rax, qword [rax + 8]	        68	elf-linux-core.h	FUNCTION_204
0x400016e	        0x488b4048	            mov rax, qword [rax + 0x48] 	        68	elf-linux-core.h	FUNCTION_204
0x4000172	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        68	elf-linux-core.h	FUNCTION_204
0x4000176	        0x488d4a10	                   lea rcx, [rdx + 0x10]	        68	elf-linux-core.h	FUNCTION_204
0x400017a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        68	elf-linux-core.h	FUNCTION_204
0x400017e	          0x8b5218	            mov edx, dword [rdx + 0x18] 	        68	elf-linux-core.h	FUNCTION_204
0x4000181	          0x4863d2	                         movsxd rdx, edx	        68	elf-linux-core.h	FUNCTION_204
0x4000184	          0x4889ce	                            mov rsi, rcx	        68	elf-linux-core.h	FUNCTION_204
0x4000187	          0x4889d7	                            mov rdi, rdx	        68	elf-linux-core.h	FUNCTION_204
0x400018a	            0xffd0	                                call rax	        68	elf-linux-core.h	FUNCTION_204
0x400018c	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	elf-linux-core.h	FUNCTION_204
0x4000190	        0x488b4008	                mov rax, qword [rax + 8]	        69	elf-linux-core.h	FUNCTION_204
0x4000194	        0x488b4048	            mov rax, qword [rax + 0x48] 	        69	elf-linux-core.h	FUNCTION_204
0x4000198	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        69	elf-linux-core.h	FUNCTION_204
0x400019c	        0x488d4a14	                   lea rcx, [rdx + 0x14]	        69	elf-linux-core.h	FUNCTION_204
0x40001a0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        69	elf-linux-core.h	FUNCTION_204
0x40001a4	          0x8b521c	            mov edx, dword [rdx + 0x1c] 	        69	elf-linux-core.h	FUNCTION_204
0x40001a7	          0x4863d2	                         movsxd rdx, edx	        69	elf-linux-core.h	FUNCTION_204
0x40001aa	          0x4889ce	                            mov rsi, rcx	        69	elf-linux-core.h	FUNCTION_204
0x40001ad	          0x4889d7	                            mov rdi, rdx	        69	elf-linux-core.h	FUNCTION_204
0x40001b0	            0xffd0	                                call rax	        69	elf-linux-core.h	FUNCTION_204
0x40001b2	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	elf-linux-core.h	FUNCTION_204
0x40001b6	        0x488b4008	                mov rax, qword [rax + 8]	        70	elf-linux-core.h	FUNCTION_204
0x40001ba	        0x488b4048	            mov rax, qword [rax + 0x48] 	        70	elf-linux-core.h	FUNCTION_204
0x40001be	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        70	elf-linux-core.h	FUNCTION_204
0x40001c2	        0x488d4a18	                   lea rcx, [rdx + 0x18]	        70	elf-linux-core.h	FUNCTION_204
0x40001c6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        70	elf-linux-core.h	FUNCTION_204
0x40001ca	          0x8b5220	            mov edx, dword [rdx + 0x20] 	        70	elf-linux-core.h	FUNCTION_204
0x40001cd	          0x4863d2	                         movsxd rdx, edx	        70	elf-linux-core.h	FUNCTION_204
0x40001d0	          0x4889ce	                            mov rsi, rcx	        70	elf-linux-core.h	FUNCTION_204
0x40001d3	          0x4889d7	                            mov rdi, rdx	        70	elf-linux-core.h	FUNCTION_204
0x40001d6	            0xffd0	                                call rax	        70	elf-linux-core.h	FUNCTION_204
0x40001d8	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	elf-linux-core.h	FUNCTION_204
0x40001dc	        0x488b4008	                mov rax, qword [rax + 8]	        71	elf-linux-core.h	FUNCTION_204
0x40001e0	        0x488b4048	            mov rax, qword [rax + 0x48] 	        71	elf-linux-core.h	FUNCTION_204
0x40001e4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        71	elf-linux-core.h	FUNCTION_204
0x40001e8	        0x488d4a1c	                   lea rcx, [rdx + 0x1c]	        71	elf-linux-core.h	FUNCTION_204
0x40001ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        71	elf-linux-core.h	FUNCTION_204
0x40001f0	          0x8b5224	            mov edx, dword [rdx + 0x24] 	        71	elf-linux-core.h	FUNCTION_204
0x40001f3	          0x4863d2	                         movsxd rdx, edx	        71	elf-linux-core.h	FUNCTION_204
0x40001f6	          0x4889ce	                            mov rsi, rcx	        71	elf-linux-core.h	FUNCTION_204
0x40001f9	          0x4889d7	                            mov rdi, rdx	        71	elf-linux-core.h	FUNCTION_204
0x40001fc	            0xffd0	                                call rax	        71	elf-linux-core.h	FUNCTION_204
0x40001fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x4000202	        0x488d4828	                   lea rcx, [rax + 0x28]	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x4000206	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x400020a	        0x4883c020	                           add rax, 0x20	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x400020e	      0xba10000000	                           mov edx, 0x10	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x4000213	          0x4889ce	                            mov rsi, rcx	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x4000216	          0x4889c7	                            mov rdi, rax	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x4000219	      0xe800000000	                          call 0x400021e	        72	elf-linux-core.h	FUNCTION_204	CALL_1
0x400021e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x4000222	        0x488d4839	                   lea rcx, [rax + 0x39]	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x4000226	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x400022a	        0x4883c030	                           add rax, 0x30	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x400022e	      0xba50000000	                           mov edx, 0x50	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x4000233	          0x4889ce	                            mov rsi, rcx	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x4000236	          0x4889c7	                            mov rdi, rax	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x4000239	      0xe800000000	                          call 0x400023e	        73	elf-linux-core.h	FUNCTION_204	CALL_2
0x400023e	              0x90	                                     nop	        74	elf-linux-core.h	FUNCTION_204
0x400023f	              0xc9	                                   leave	        74	elf-linux-core.h	FUNCTION_204
0x4000240	              0xc3	                                     ret	        74	elf-linux-core.h	FUNCTION_204
elfcore_grok_xstatereg	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016c7d	              0x55	                                push rbp	      9222	elf.c	FUNCTION_119
0x4016c7e	          0x4889e5	                            mov rbp, rsp	      9222	elf.c	FUNCTION_119
0x4016c81	        0x4883ec10	                           sub rsp, 0x10	      9222	elf.c	FUNCTION_119
0x4016c85	        0x48897df8	                mov qword [rbp - 8], rdi	      9222	elf.c	FUNCTION_119
0x4016c89	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9222	elf.c	FUNCTION_119
0x4016c8d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9223	elf.c	FUNCTION_119	CALL_1
0x4016c91	        0x488b45f8	                mov rax, qword [rbp - 8]	      9223	elf.c	FUNCTION_119	CALL_1
0x4016c95	      0xbe00000000	                              mov esi, 0	      9223	elf.c	FUNCTION_119	CALL_1
0x4016c9a	          0x4889c7	                            mov rdi, rax	      9223	elf.c	FUNCTION_119	CALL_1
0x4016c9d	      0xe857ffffff	call sym.elfcore_make_note_pseudosection	      9223	elf.c	FUNCTION_119	CALL_1
0x4016ca2	              0xc9	                                   leave	      9224	elf.c	FUNCTION_119
0x4016ca3	              0xc3	                                     ret	      9224	elf.c	FUNCTION_119
_bfd_elf_make_section_from_shdr	ELSE,12:DO,0:CALL,33:WHILE,0:FOR,2:IF,49:SWITCH,0:functions,0	831
0x4002833	              0x55	                                push rbp	       999	elf.c	FUNCTION_26
0x4002834	          0x4889e5	                            mov rbp, rsp	       999	elf.c	FUNCTION_26
0x4002837	        0x4883c480	             add rsp, 0xffffffffffffff80	       999	elf.c	FUNCTION_26
0x400283b	        0x48897d98	             mov qword [rbp - 0x68], rdi	       999	elf.c	FUNCTION_26
0x400283f	        0x48897590	             mov qword [rbp - 0x70], rsi	       999	elf.c	FUNCTION_26
0x4002843	        0x48895588	             mov qword [rbp - 0x78], rdx	       999	elf.c	FUNCTION_26
0x4002847	          0x894d84	             mov dword [rbp - 0x7c], ecx	       999	elf.c	FUNCTION_26
0x400284a	    0x64488b042528	                mov rax, qword fs:[0x28]	       999	elf.c	FUNCTION_26
0x4002853	        0x488945f8	                mov qword [rbp - 8], rax	       999	elf.c	FUNCTION_26
0x4002857	            0x31c0	                            xor eax, eax	       999	elf.c	FUNCTION_26
0x4002859	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1004	elf.c	FUNCTION_26	IF_1
0x400285d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1004	elf.c	FUNCTION_26	IF_1
0x4002861	          0x4885c0	                           test rax, rax	      1004	elf.c	FUNCTION_26	IF_1
0x4002864	            0x740a	                            je 0x4002870	      1004	elf.c	FUNCTION_26	IF_1
0x4002866	      0xb801000000	                              mov eax, 1	      1005	elf.c	FUNCTION_26	IF_1
0x400286b	      0xe9c10b0000	                           jmp 0x4003431	      1005	elf.c	FUNCTION_26	IF_1
0x4002870	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1007	elf.c	FUNCTION_26	CALL_1
0x4002874	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1007	elf.c	FUNCTION_26	CALL_1
0x4002878	          0x4889d6	                            mov rsi, rdx	      1007	elf.c	FUNCTION_26	CALL_1
0x400287b	          0x4889c7	                            mov rdi, rax	      1007	elf.c	FUNCTION_26	CALL_1
0x400287e	      0xe800000000	                          call 0x4002883	      1007	elf.c	FUNCTION_26	CALL_1
0x4002883	        0x488945e0	             mov qword [rbp - 0x20], rax	      1007	elf.c	FUNCTION_26	CALL_1
0x4002887	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1008	elf.c	FUNCTION_26	IF_2
0x400288c	            0x750a	                           jne 0x4002898	      1008	elf.c	FUNCTION_26	IF_2
0x400288e	      0xb800000000	                              mov eax, 0	      1009	elf.c	FUNCTION_26	IF_2
0x4002893	      0xe9990b0000	                           jmp 0x4003431	      1009	elf.c	FUNCTION_26	IF_2
0x4002898	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1011	elf.c	FUNCTION_26
0x400289c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1011	elf.c	FUNCTION_26
0x40028a0	        0x48895040	             mov qword [rax + 0x40], rdx	      1011	elf.c	FUNCTION_26
0x40028a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1012	elf.c	FUNCTION_26	CALL_2
0x40028a8	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028af	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1012	elf.c	FUNCTION_26	CALL_2
0x40028b3	          0x488b0a	                    mov rcx, qword [rdx]	      1012	elf.c	FUNCTION_26	CALL_2
0x40028b6	          0x488908	                    mov qword [rax], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028b9	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1012	elf.c	FUNCTION_26	CALL_2
0x40028bd	        0x48894808	                mov qword [rax + 8], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028c1	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028c5	        0x48894810	             mov qword [rax + 0x10], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028c9	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028cd	        0x48894818	             mov qword [rax + 0x18], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028d1	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028d5	        0x48894820	             mov qword [rax + 0x20], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028d9	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028dd	        0x48894828	             mov qword [rax + 0x28], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028e1	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028e5	        0x48894830	             mov qword [rax + 0x30], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028e9	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028ed	        0x48894838	             mov qword [rax + 0x38], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028f1	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028f5	        0x48894840	             mov qword [rax + 0x40], rcx	      1012	elf.c	FUNCTION_26	CALL_2
0x40028f9	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      1012	elf.c	FUNCTION_26	CALL_2
0x40028fd	        0x48895048	             mov qword [rax + 0x48], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4002901	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1013	elf.c	FUNCTION_26	CALL_3
0x4002905	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1013	elf.c	FUNCTION_26	CALL_3
0x400290c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1013	elf.c	FUNCTION_26	CALL_3
0x400290f	    0x899088000000	             mov dword [rax + 0x88], edx	      1013	elf.c	FUNCTION_26	CALL_3
0x4002915	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1016	elf.c	FUNCTION_26	CALL_4
0x4002919	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1016	elf.c	FUNCTION_26	CALL_4
0x4002920	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1016	elf.c	FUNCTION_26	CALL_4
0x4002924	          0x8b5204	                mov edx, dword [rdx + 4]	      1016	elf.c	FUNCTION_26	CALL_4
0x4002927	          0x895004	                mov dword [rax + 4], edx	      1016	elf.c	FUNCTION_26	CALL_4
0x400292a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1017	elf.c	FUNCTION_26	CALL_5
0x400292e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1017	elf.c	FUNCTION_26	CALL_5
0x4002935	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1017	elf.c	FUNCTION_26	CALL_5
0x4002939	        0x488b5208	                mov rdx, qword [rdx + 8]	      1017	elf.c	FUNCTION_26	CALL_5
0x400293d	        0x48895008	                mov qword [rax + 8], rdx	      1017	elf.c	FUNCTION_26	CALL_5
0x4002941	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1019	elf.c	FUNCTION_26
0x4002945	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1019	elf.c	FUNCTION_26
0x4002949	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1019	elf.c	FUNCTION_26
0x400294d	    0x488990900000	             mov qword [rax + 0x90], rdx	      1019	elf.c	FUNCTION_26
0x4002954	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x4002958	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x400295c	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x4002960	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x4002964	          0x4889ce	                            mov rsi, rcx	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x4002967	          0x4889c7	                            mov rdi, rax	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x400296a	      0xe8d1d6ffff	            call sym.bfd_set_section_vma	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x400296f	            0x85c0	                           test eax, eax	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x4002971	            0x7448	                            je 0x40029bb	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x4002973	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4002977	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x400297b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x400297f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4002983	          0x4889ce	                            mov rsi, rcx	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4002986	          0x4889c7	                            mov rdi, rax	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4002989	      0xe800000000	                          call 0x400298e	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x400298e	            0x85c0	                           test eax, eax	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4002990	            0x7429	                            je 0x40029bb	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4002992	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x4002996	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x400299a	          0x4889c7	                            mov rdi, rax	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x400299d	      0xe800000000	                          call 0x40029a2	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029a2	            0x89c2	                            mov edx, eax	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029a4	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029a8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029ac	          0x4889ce	                            mov rsi, rcx	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029af	          0x4889c7	                            mov rdi, rax	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029b2	      0xe8cad6ffff	      call sym.bfd_set_section_alignment	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029b7	            0x85c0	                           test eax, eax	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029b9	            0x750a	                           jne 0x40029c5	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40029bb	      0xb800000000	                              mov eax, 0	      1025	elf.c	FUNCTION_26	IF_3
0x40029c0	      0xe96c0a0000	                           jmp 0x4003431	      1025	elf.c	FUNCTION_26	IF_3
0x40029c5	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      1027	elf.c	FUNCTION_26
0x40029cc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1028	elf.c	FUNCTION_26	IF_4
0x40029d0	          0x8b4004	                mov eax, dword [rax + 4]	      1028	elf.c	FUNCTION_26	IF_4
0x40029d3	          0x83f808	                              cmp eax, 8	      1028	elf.c	FUNCTION_26	IF_4
0x40029d6	            0x7409	                            je 0x40029e1	      1028	elf.c	FUNCTION_26	IF_4
0x40029d8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1029	elf.c	FUNCTION_26	IF_4
0x40029db	          0x80cc01	                                or ah, 1	      1029	elf.c	FUNCTION_26	IF_4
0x40029de	          0x8945ac	             mov dword [rbp - 0x54], eax	      1029	elf.c	FUNCTION_26	IF_4
0x40029e1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1030	elf.c	FUNCTION_26	IF_5
0x40029e5	          0x8b4004	                mov eax, dword [rax + 4]	      1030	elf.c	FUNCTION_26	IF_5
0x40029e8	          0x83f811	                           cmp eax, 0x11	      1030	elf.c	FUNCTION_26	IF_5
0x40029eb	            0x750b	                           jne 0x40029f8	      1030	elf.c	FUNCTION_26	IF_5
0x40029ed	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1031	elf.c	FUNCTION_26	IF_5
0x40029f0	       0xd00000002	                       or eax, 0x2000000	      1031	elf.c	FUNCTION_26	IF_5
0x40029f5	          0x8945ac	             mov dword [rbp - 0x54], eax	      1031	elf.c	FUNCTION_26	IF_5
0x40029f8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1032	elf.c	FUNCTION_26	IF_6
0x40029fc	        0x488b4008	                mov rax, qword [rax + 8]	      1032	elf.c	FUNCTION_26	IF_6
0x4002a00	          0x83e002	                              and eax, 2	      1032	elf.c	FUNCTION_26	IF_6
0x4002a03	          0x4885c0	                           test rax, rax	      1032	elf.c	FUNCTION_26	IF_6
0x4002a06	            0x741e	                            je 0x4002a26	      1032	elf.c	FUNCTION_26	IF_6
0x4002a08	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1034	elf.c	FUNCTION_26	IF_6
0x4002a0b	          0x83c801	                               or eax, 1	      1034	elf.c	FUNCTION_26	IF_6
0x4002a0e	          0x8945ac	             mov dword [rbp - 0x54], eax	      1034	elf.c	FUNCTION_26	IF_6
0x4002a11	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1035	elf.c	FUNCTION_26	IF_6	IF_7
0x4002a15	          0x8b4004	                mov eax, dword [rax + 4]	      1035	elf.c	FUNCTION_26	IF_6	IF_7
0x4002a18	          0x83f808	                              cmp eax, 8	      1035	elf.c	FUNCTION_26	IF_6	IF_7
0x4002a1b	            0x7409	                            je 0x4002a26	      1035	elf.c	FUNCTION_26	IF_6	IF_7
0x4002a1d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1036	elf.c	FUNCTION_26	IF_6	IF_7
0x4002a20	          0x83c802	                               or eax, 2	      1036	elf.c	FUNCTION_26	IF_6	IF_7
0x4002a23	          0x8945ac	             mov dword [rbp - 0x54], eax	      1036	elf.c	FUNCTION_26	IF_6	IF_7
0x4002a26	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1038	elf.c	FUNCTION_26	IF_8
0x4002a2a	        0x488b4008	                mov rax, qword [rax + 8]	      1038	elf.c	FUNCTION_26	IF_8
0x4002a2e	          0x83e001	                              and eax, 1	      1038	elf.c	FUNCTION_26	IF_8
0x4002a31	          0x4885c0	                           test rax, rax	      1038	elf.c	FUNCTION_26	IF_8
0x4002a34	            0x7509	                           jne 0x4002a3f	      1038	elf.c	FUNCTION_26	IF_8
0x4002a36	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1039	elf.c	FUNCTION_26	IF_8
0x4002a39	          0x83c808	                               or eax, 8	      1039	elf.c	FUNCTION_26	IF_8
0x4002a3c	          0x8945ac	             mov dword [rbp - 0x54], eax	      1039	elf.c	FUNCTION_26	IF_8
0x4002a3f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1040	elf.c	FUNCTION_26	IF_9
0x4002a43	        0x488b4008	                mov rax, qword [rax + 8]	      1040	elf.c	FUNCTION_26	IF_9
0x4002a47	          0x83e004	                              and eax, 4	      1040	elf.c	FUNCTION_26	IF_9
0x4002a4a	          0x4885c0	                           test rax, rax	      1040	elf.c	FUNCTION_26	IF_9
0x4002a4d	            0x740b	                            je 0x4002a5a	      1040	elf.c	FUNCTION_26	IF_9
0x4002a4f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1041	elf.c	FUNCTION_26	IF_9
0x4002a52	          0x83c810	                            or eax, 0x10	      1041	elf.c	FUNCTION_26	IF_9
0x4002a55	          0x8945ac	             mov dword [rbp - 0x54], eax	      1041	elf.c	FUNCTION_26	IF_9
0x4002a58	            0xeb13	                           jmp 0x4002a6d	      1041	elf.c	FUNCTION_26	IF_9
0x4002a5a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1042	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4002a5d	          0x83e002	                              and eax, 2	      1042	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4002a60	            0x85c0	                           test eax, eax	      1042	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4002a62	            0x7409	                            je 0x4002a6d	      1042	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4002a64	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1043	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4002a67	          0x83c820	                            or eax, 0x20	      1043	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4002a6a	          0x8945ac	             mov dword [rbp - 0x54], eax	      1043	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4002a6d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1044	elf.c	FUNCTION_26	IF_11
0x4002a71	        0x488b4008	                mov rax, qword [rax + 8]	      1044	elf.c	FUNCTION_26	IF_11
0x4002a75	          0x83e010	                           and eax, 0x10	      1044	elf.c	FUNCTION_26	IF_11
0x4002a78	          0x4885c0	                           test rax, rax	      1044	elf.c	FUNCTION_26	IF_11
0x4002a7b	            0x741f	                            je 0x4002a9c	      1044	elf.c	FUNCTION_26	IF_11
0x4002a7d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1046	elf.c	FUNCTION_26	IF_11
0x4002a80	       0xd00008000	                        or eax, 0x800000	      1046	elf.c	FUNCTION_26	IF_11
0x4002a85	          0x8945ac	             mov dword [rbp - 0x54], eax	      1046	elf.c	FUNCTION_26	IF_11
0x4002a88	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1047	elf.c	FUNCTION_26	IF_11
0x4002a8c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1047	elf.c	FUNCTION_26	IF_11
0x4002a90	            0x89c2	                            mov edx, eax	      1047	elf.c	FUNCTION_26	IF_11
0x4002a92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1047	elf.c	FUNCTION_26	IF_11
0x4002a96	    0x8990c4000000	             mov dword [rax + 0xc4], edx	      1047	elf.c	FUNCTION_26	IF_11
0x4002a9c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1049	elf.c	FUNCTION_26	IF_12
0x4002aa0	        0x488b4008	                mov rax, qword [rax + 8]	      1049	elf.c	FUNCTION_26	IF_12
0x4002aa4	          0x83e020	                           and eax, 0x20	      1049	elf.c	FUNCTION_26	IF_12
0x4002aa7	          0x4885c0	                           test rax, rax	      1049	elf.c	FUNCTION_26	IF_12
0x4002aaa	            0x740b	                            je 0x4002ab7	      1049	elf.c	FUNCTION_26	IF_12
0x4002aac	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1050	elf.c	FUNCTION_26	IF_12
0x4002aaf	       0xd00000001	                       or eax, 0x1000000	      1050	elf.c	FUNCTION_26	IF_12
0x4002ab4	          0x8945ac	             mov dword [rbp - 0x54], eax	      1050	elf.c	FUNCTION_26	IF_12
0x4002ab7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1051	elf.c	FUNCTION_26	IF_13
0x4002abb	        0x488b4008	                mov rax, qword [rax + 8]	      1051	elf.c	FUNCTION_26	IF_13
0x4002abf	      0x2500020000	                          and eax, 0x200	      1051	elf.c	FUNCTION_26	IF_13
0x4002ac4	          0x4885c0	                           test rax, rax	      1051	elf.c	FUNCTION_26	IF_13
0x4002ac7	            0x7425	                            je 0x4002aee	      1051	elf.c	FUNCTION_26	IF_13
0x4002ac9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002acd	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002ad1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002ad5	          0x4889ce	                            mov rsi, rcx	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002ad8	          0x4889c7	                            mov rdi, rax	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002adb	      0xe87defffff	                    call sym.setup_group	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002ae0	            0x85c0	                           test eax, eax	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002ae2	            0x750a	                           jne 0x4002aee	      1052	elf.c	FUNCTION_26	IF_13	IF_14	CALL_10
0x4002ae4	      0xb800000000	                              mov eax, 0	      1053	elf.c	FUNCTION_26	IF_13	IF_14
0x4002ae9	      0xe943090000	                           jmp 0x4003431	      1053	elf.c	FUNCTION_26	IF_13	IF_14
0x4002aee	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1054	elf.c	FUNCTION_26	IF_15
0x4002af2	        0x488b4008	                mov rax, qword [rax + 8]	      1054	elf.c	FUNCTION_26	IF_15
0x4002af6	      0x2500040000	                          and eax, 0x400	      1054	elf.c	FUNCTION_26	IF_15
0x4002afb	          0x4885c0	                           test rax, rax	      1054	elf.c	FUNCTION_26	IF_15
0x4002afe	            0x7409	                            je 0x4002b09	      1054	elf.c	FUNCTION_26	IF_15
0x4002b00	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1055	elf.c	FUNCTION_26	IF_15
0x4002b03	          0x80cc04	                                or ah, 4	      1055	elf.c	FUNCTION_26	IF_15
0x4002b06	          0x8945ac	             mov dword [rbp - 0x54], eax	      1055	elf.c	FUNCTION_26	IF_15
0x4002b09	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1056	elf.c	FUNCTION_26	IF_16
0x4002b0d	        0x488b4008	                mov rax, qword [rax + 8]	      1056	elf.c	FUNCTION_26	IF_16
0x4002b11	      0x2500000080	                     and eax, 0x80000000	      1056	elf.c	FUNCTION_26	IF_16
0x4002b16	          0x4885c0	                           test rax, rax	      1056	elf.c	FUNCTION_26	IF_16
0x4002b19	            0x7409	                            je 0x4002b24	      1056	elf.c	FUNCTION_26	IF_16
0x4002b1b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1057	elf.c	FUNCTION_26	IF_16
0x4002b1e	          0x80cc80	                             or ah, 0x80	      1057	elf.c	FUNCTION_26	IF_16
0x4002b21	          0x8945ac	             mov dword [rbp - 0x54], eax	      1057	elf.c	FUNCTION_26	IF_16
0x4002b24	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1059	elf.c	FUNCTION_26	IF_17
0x4002b27	          0x83e001	                              and eax, 1	      1059	elf.c	FUNCTION_26	IF_17
0x4002b2a	            0x85c0	                           test eax, eax	      1059	elf.c	FUNCTION_26	IF_17
0x4002b2c	     0xf852f010000	                           jne 0x4002c61	      1059	elf.c	FUNCTION_26	IF_17
0x4002b32	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1063	elf.c	FUNCTION_26	IF_17	IF_18
0x4002b36	           0xfb600	                   movzx eax, byte [rax]	      1063	elf.c	FUNCTION_26	IF_17	IF_18
0x4002b39	            0x3c2e	                            cmp al, 0x2e	      1063	elf.c	FUNCTION_26	IF_17	IF_18
0x4002b3b	     0xf8520010000	                           jne 0x4002c61	      1063	elf.c	FUNCTION_26	IF_17	IF_18
0x4002b41	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b45	        0x4883c001	                              add rax, 1	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b49	           0xfb600	                   movzx eax, byte [rax]	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b4c	            0x3c64	                            cmp al, 0x64	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b4e	            0x7514	                           jne 0x4002b64	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b50	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1068	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b58	    0xc745b4060000	               mov dword [rbp - 0x4c], 6	      1068	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b5f	      0xe9d0000000	                           jmp 0x4002c34	      1068	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4002b64	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b68	        0x4883c001	                              add rax, 1	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b6c	           0xfb600	                   movzx eax, byte [rax]	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b6f	            0x3c67	                            cmp al, 0x67	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b71	            0x7523	                           jne 0x4002b96	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b73	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b77	        0x4883c002	                              add rax, 2	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b7b	           0xfb600	                   movzx eax, byte [rax]	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b7e	            0x3c6e	                            cmp al, 0x6e	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b80	            0x7514	                           jne 0x4002b96	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b82	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1070	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b8a	    0xc745b4110000	           mov dword [rbp - 0x4c], 0x11 	      1070	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b91	      0xe99e000000	                           jmp 0x4002c34	      1070	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4002b96	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002b9a	        0x4883c001	                              add rax, 1	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002b9e	           0xfb600	                   movzx eax, byte [rax]	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002ba1	            0x3c67	                            cmp al, 0x67	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002ba3	            0x7520	                           jne 0x4002bc5	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002ba5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002ba9	        0x4883c002	                              add rax, 2	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002bad	           0xfb600	                   movzx eax, byte [rax]	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002bb0	            0x3c64	                            cmp al, 0x64	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002bb2	            0x7511	                           jne 0x4002bc5	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002bb4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1072	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002bbc	    0xc745b40b0000	            mov dword [rbp - 0x4c], 0xb 	      1072	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002bc3	            0xeb6f	                           jmp 0x4002c34	      1072	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4002bc5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1073	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002bc9	        0x4883c001	                              add rax, 1	      1073	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002bcd	           0xfb600	                   movzx eax, byte [rax]	      1073	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002bd0	            0x3c6c	                            cmp al, 0x6c	      1073	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002bd2	            0x7511	                           jne 0x4002be5	      1073	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002bd4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1074	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002bdc	    0xc745b4050000	               mov dword [rbp - 0x4c], 5	      1074	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002be3	            0xeb4f	                           jmp 0x4002c34	      1074	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4002be5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1075	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002be9	        0x4883c001	                              add rax, 1	      1075	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002bed	           0xfb600	                   movzx eax, byte [rax]	      1075	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002bf0	            0x3c73	                            cmp al, 0x73	      1075	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002bf2	            0x7511	                           jne 0x4002c05	      1075	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002bf4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1076	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002bfc	    0xc745b4050000	               mov dword [rbp - 0x4c], 5	      1076	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002c03	            0xeb2f	                           jmp 0x4002c34	      1076	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4002c05	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c09	        0x4883c001	                              add rax, 1	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c0d	           0xfb600	                   movzx eax, byte [rax]	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c10	            0x3c7a	                            cmp al, 0x7a	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c12	            0x7511	                           jne 0x4002c25	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c14	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1078	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c1c	    0xc745b4070000	               mov dword [rbp - 0x4c], 7	      1078	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c23	            0xeb0f	                           jmp 0x4002c34	      1078	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4002c25	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1080	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_7
0x4002c2d	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1080	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_7
0x4002c34	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c39	            0x7426	                            je 0x4002c61	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c3b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c3e	          0x4863d0	                         movsxd rdx, eax	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c41	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c45	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c49	          0x4889ce	                            mov rsi, rcx	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c4c	          0x4889c7	                            mov rdi, rax	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c4f	      0xe800000000	                          call 0x4002c54	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c54	            0x85c0	                           test eax, eax	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c56	            0x7509	                           jne 0x4002c61	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4002c58	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1082	elf.c	FUNCTION_26	IF_17	IF_18	IF_25
0x4002c5b	          0x80cc20	                             or ah, 0x20	      1082	elf.c	FUNCTION_26	IF_17	IF_18	IF_25
0x4002c5e	          0x8945ac	             mov dword [rbp - 0x54], eax	      1082	elf.c	FUNCTION_26	IF_17	IF_18	IF_25
0x4002c61	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1092	elf.c	FUNCTION_26	IF_26
0x4002c65	      0xba0d000000	                            mov edx, 0xd	      1092	elf.c	FUNCTION_26	IF_26
0x4002c6a	      0xbe00000000	                              mov esi, 0	      1092	elf.c	FUNCTION_26	IF_26
0x4002c6f	          0x4889c7	                            mov rdi, rax	      1092	elf.c	FUNCTION_26	IF_26
0x4002c72	      0xe800000000	                          call 0x4002c77	      1092	elf.c	FUNCTION_26	IF_26
0x4002c77	            0x85c0	                           test eax, eax	      1092	elf.c	FUNCTION_26	IF_26
0x4002c79	            0x7522	                           jne 0x4002c9d	      1092	elf.c	FUNCTION_26	IF_26
0x4002c7b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x4002c7f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x4002c86	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x4002c8d	          0x4885c0	                           test rax, rax	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x4002c90	            0x750b	                           jne 0x4002c9d	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x4002c92	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1094	elf.c	FUNCTION_26	IF_26
0x4002c95	       0xd00000200	                         or eax, 0x20000	      1094	elf.c	FUNCTION_26	IF_26
0x4002c9a	          0x8945ac	             mov dword [rbp - 0x54], eax	      1094	elf.c	FUNCTION_26	IF_26
0x4002c9d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1096	elf.c	FUNCTION_26	CALL_13
0x4002ca1	        0x488b4008	                mov rax, qword [rax + 8]	      1096	elf.c	FUNCTION_26	CALL_13
0x4002ca5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1096	elf.c	FUNCTION_26	CALL_13
0x4002cac	        0x488945e8	             mov qword [rbp - 0x18], rax	      1096	elf.c	FUNCTION_26	CALL_13
0x4002cb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1097	elf.c	FUNCTION_26	IF_27
0x4002cb4	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1097	elf.c	FUNCTION_26	IF_27
0x4002cbb	          0x4885c0	                           test rax, rax	      1097	elf.c	FUNCTION_26	IF_27
0x4002cbe	            0x7429	                            je 0x4002ce9	      1097	elf.c	FUNCTION_26	IF_27
0x4002cc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002cc4	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002ccb	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002ccf	        0x488d55ac	                   lea rdx, [rbp - 0x54]	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002cd3	          0x4889ce	                            mov rsi, rcx	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002cd6	          0x4889d7	                            mov rdi, rdx	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002cd9	            0xffd0	                                call rax	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002cdb	            0x85c0	                           test eax, eax	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002cdd	            0x750a	                           jne 0x4002ce9	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4002cdf	      0xb800000000	                              mov eax, 0	      1099	elf.c	FUNCTION_26	IF_27	IF_28
0x4002ce4	      0xe948070000	                           jmp 0x4003431	      1099	elf.c	FUNCTION_26	IF_27	IF_28
0x4002ce9	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002cec	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002cf0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002cf4	          0x4889ce	                            mov rsi, rcx	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002cf7	          0x4889c7	                            mov rdi, rax	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002cfa	      0xe800000000	                          call 0x4002cff	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002cff	            0x85c0	                           test eax, eax	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002d01	            0x750a	                           jne 0x4002d0d	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4002d03	      0xb800000000	                              mov eax, 0	      1102	elf.c	FUNCTION_26	IF_29
0x4002d08	      0xe924070000	                           jmp 0x4003431	      1102	elf.c	FUNCTION_26	IF_29
0x4002d0d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1107	elf.c	FUNCTION_26	IF_30
0x4002d11	          0x8b4004	                mov eax, dword [rax + 4]	      1107	elf.c	FUNCTION_26	IF_30
0x4002d14	          0x83f807	                              cmp eax, 7	      1107	elf.c	FUNCTION_26	IF_30
0x4002d17	            0x755c	                           jne 0x4002d75	      1107	elf.c	FUNCTION_26	IF_30
0x4002d19	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d1d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d21	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d25	          0x4889ce	                            mov rsi, rcx	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d28	          0x4889c7	                            mov rdi, rax	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d2b	      0xe800000000	                          call 0x4002d30	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d30	            0x85c0	                           test eax, eax	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d32	            0x750a	                           jne 0x4002d3e	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4002d34	      0xb800000000	                              mov eax, 0	      1112	elf.c	FUNCTION_26	IF_30	IF_31
0x4002d39	      0xe9f3060000	                           jmp 0x4003431	      1112	elf.c	FUNCTION_26	IF_30	IF_31
0x4002d3e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d42	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d46	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d4a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d4e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d52	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d56	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d5a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d5e	          0x4989f8	                             mov r8, rdi	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d61	          0x4889c7	                            mov rdi, rax	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d64	      0xe8447a0100	                call sym.elf_parse_notes	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x4002d69	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1116	elf.c	FUNCTION_26	IF_30	CALL_18
0x4002d6d	          0x4889c7	                            mov rdi, rax	      1116	elf.c	FUNCTION_26	IF_30	CALL_18
0x4002d70	      0xe800000000	                          call 0x4002d75	      1116	elf.c	FUNCTION_26	IF_30	CALL_18
0x4002d75	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1119	elf.c	FUNCTION_26	IF_32
0x4002d78	          0x83e001	                              and eax, 1	      1119	elf.c	FUNCTION_26	IF_32
0x4002d7b	            0x85c0	                           test eax, eax	      1119	elf.c	FUNCTION_26	IF_32
0x4002d7d	     0xf8462040000	                            je 0x40031e5	      1119	elf.c	FUNCTION_26	IF_32
0x4002d83	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1128	elf.c	FUNCTION_26	IF_32	CALL_19
0x4002d87	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1128	elf.c	FUNCTION_26	IF_32	CALL_19
0x4002d8e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1128	elf.c	FUNCTION_26	IF_32	CALL_19
0x4002d92	        0x488945d8	             mov qword [rbp - 0x28], rax	      1128	elf.c	FUNCTION_26	IF_32	CALL_19
0x4002d96	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002d9d	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002da4	            0xeb34	                           jmp 0x4002dda	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002da6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4002daa	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4002dae	          0x4885c0	                           test rax, rax	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4002db1	            0x753c	                           jne 0x4002def	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4002db3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002db7	          0x488b00	                    mov rax, qword [rax]	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dba	        0x4883f801	                              cmp rax, 1	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dbe	            0x7511	                           jne 0x4002dd1	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dc4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dc8	          0x4885c0	                           test rax, rax	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dcb	            0x7404	                            je 0x4002dd1	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dcd	        0x8345bc01	               add dword [rbp - 0x44], 1	      1133	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4002dd1	        0x8345b801	               add dword [rbp - 0x48], 1	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002dd5	      0x488345d840	           add qword [rbp - 0x28], 0x40 	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002dda	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002dde	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002de5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002de8	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002deb	            0x77b9	                            ja 0x4002da6	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002ded	            0xeb01	                           jmp 0x4002df0	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4002def	              0x90	                                     nop	      1131	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4002df0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4002df4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4002dfb	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4002dfe	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4002e01	            0x7710	                            ja 0x4002e13	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4002e03	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4002e07	            0x760a	                           jbe 0x4002e13	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4002e09	      0xb801000000	                              mov eax, 1	      1135	elf.c	FUNCTION_26	IF_32	IF_35
0x4002e0e	      0xe91e060000	                           jmp 0x4003431	      1135	elf.c	FUNCTION_26	IF_32	IF_35
0x4002e13	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1137	elf.c	FUNCTION_26	IF_32	CALL_22
0x4002e17	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1137	elf.c	FUNCTION_26	IF_32	CALL_22
0x4002e1e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1137	elf.c	FUNCTION_26	IF_32	CALL_22
0x4002e22	        0x488945d8	             mov qword [rbp - 0x28], rax	      1137	elf.c	FUNCTION_26	IF_32	CALL_22
0x4002e26	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x4002e2d	      0xe999030000	                           jmp 0x40031cb	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x4002e32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1140	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e36	          0x488b00	                    mov rax, qword [rax]	      1140	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e39	        0x4883f801	                              cmp rax, 1	      1140	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e3d	            0x7512	                           jne 0x4002e51	      1140	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e3f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e43	        0x488b4008	                mov rax, qword [rax + 8]	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e47	      0x2500040000	                          and eax, 0x400	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e4c	          0x4885c0	                           test rax, rax	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e4f	            0x7411	                            je 0x4002e62	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1142	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e55	          0x488b00	                    mov rax, qword [rax]	      1142	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e58	        0x4883f807	                              cmp rax, 7	      1142	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e5c	     0xf8560030000	                           jne 0x40031c2	      1142	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4002e62	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e66	        0x488b4008	                mov rax, qword [rax + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e6a	      0x2500040000	                          and eax, 0x400	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e6f	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e72	            0x7429	                            je 0x4002e9d	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e78	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e7b	        0x4883f807	                              cmp rax, 7	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e7f	            0x7454	                            je 0x4002ed5	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e85	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e88	    0x483d52e57464	                     cmp rax, 0x6474e552	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e8e	            0x7445	                            je 0x4002ed5	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e94	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e97	        0x4883f801	                              cmp rax, 1	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e9b	            0x7438	                            je 0x4002ed5	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002e9d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ea1	        0x488b4008	                mov rax, qword [rax + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ea5	      0x2500040000	                          and eax, 0x400	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002eaa	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ead	     0xf850f030000	                           jne 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002eb3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002eb7	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002eba	        0x4883f807	                              cmp rax, 7	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ebe	     0xf84fe020000	                            je 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ec4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ec8	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ecb	        0x4883f806	                              cmp rax, 6	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ecf	     0xf84ed020000	                            je 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ed5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ed9	        0x488b4008	                mov rax, qword [rax + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002edd	          0x83e002	                              and eax, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ee0	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ee3	            0x755b	                           jne 0x4002f40	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ee5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ee9	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002eec	        0x4883f801	                              cmp rax, 1	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ef0	     0xf84cc020000	                            je 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ef6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002efa	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002efd	        0x4883f802	                              cmp rax, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f01	     0xf84bb020000	                            je 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f0b	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f0e	    0x483d50e57464	                     cmp rax, 0x6474e550	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f14	     0xf84a8020000	                            je 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f1e	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f21	    0x483d52e57464	                     cmp rax, 0x6474e552	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f27	     0xf8495020000	                            je 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f31	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f34	    0x483d51e57464	                     cmp rax, 0x6474e551	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f3a	     0xf8482020000	                            je 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f40	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f44	          0x8b4004	                mov eax, dword [rax + 4]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f47	          0x83f808	                              cmp eax, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f4a	     0xf8480000000	                            je 0x4002fd0	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f50	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f54	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f58	          0x4889c2	                            mov rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f5f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f63	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f66	     0xf8256020000	                            jb 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f6c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f70	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f74	          0x4889c2	                            mov rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f7b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f7f	          0x4829c2	                            sub rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f82	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f86	        0x488b4008	                mov rax, qword [rax + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f8a	      0x2500040000	                          and eax, 0x400	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f8f	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f92	            0x7419	                            je 0x4002fad	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f94	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f98	          0x8b4004	                mov eax, dword [rax + 4]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f9b	          0x83f808	                              cmp eax, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002f9e	            0x750d	                           jne 0x4002fad	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fa0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fa4	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fa7	        0x4883f807	                              cmp rax, 7	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fab	            0x750a	                           jne 0x4002fb7	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fad	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fb1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fb5	            0xeb05	                           jmp 0x4002fbc	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fb7	      0xb800000000	                              mov eax, 0	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fbc	          0x4801c2	                            add rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fbf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fc3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fc7	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fca	     0xf87f2010000	                            ja 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fd0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fd4	        0x488b4008	                mov rax, qword [rax + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fd8	          0x83e002	                              and eax, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fdb	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fde	            0x747a	                            je 0x400305a	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fe0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fe4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fe8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002fec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ff0	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ff3	     0xf82c9010000	                            jb 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ff9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4002ffd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003001	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003005	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003009	          0x4829c2	                            sub rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400300c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003010	        0x488b4008	                mov rax, qword [rax + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003014	      0x2500040000	                          and eax, 0x400	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003019	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400301c	            0x7419	                            je 0x4003037	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400301e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003022	          0x8b4004	                mov eax, dword [rax + 4]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003025	          0x83f808	                              cmp eax, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003028	            0x750d	                           jne 0x4003037	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400302a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400302e	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003031	        0x4883f807	                              cmp rax, 7	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003035	            0x750a	                           jne 0x4003041	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003037	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400303b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400303f	            0xeb05	                           jmp 0x4003046	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003041	      0xb800000000	                              mov eax, 0	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003046	          0x4801c2	                            add rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003049	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400304d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003051	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003054	     0xf8768010000	                            ja 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400305a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400305e	          0x488b00	                    mov rax, qword [rax]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003061	        0x4883f802	                              cmp rax, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003065	     0xf85be000000	                           jne 0x4003129	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400306b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400306f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003073	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003076	     0xf85ad000000	                           jne 0x4003129	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400307c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003080	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003084	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003087	     0xf849c000000	                            je 0x4003129	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400308d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003091	          0x8b4004	                mov eax, dword [rax + 4]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003094	          0x83f808	                              cmp eax, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003097	            0x7443	                            je 0x40030dc	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003099	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400309d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030a1	          0x4889c2	                            mov rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030ac	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030af	     0xf860d010000	                           jbe 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030b5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030b9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030bd	          0x4889c2	                            mov rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030c4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030c8	          0x4829c2	                            sub rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030cf	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030d3	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030d6	     0xf83e6000000	                           jae 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030dc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030e0	        0x488b4008	                mov rax, qword [rax + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030e4	          0x83e002	                              and eax, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030e7	          0x4885c0	                           test rax, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030ea	            0x743d	                            je 0x4003129	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030ec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030f0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030f8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030fc	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40030ff	     0xf86bd000000	                           jbe 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003105	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003109	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400310d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003111	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003115	          0x4829c2	                            sub rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003118	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400311c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003120	          0x4839c2	                            cmp rdx, rax	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003123	     0xf8399000000	                           jae 0x40031c2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4003129	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400312c	          0x83e002	                              and eax, 2	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400312f	            0x85c0	                           test eax, eax	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003131	            0x7528	                           jne 0x400315b	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003133	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003137	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400313b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1147	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400313f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1147	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003143	          0x4801c2	                            add rdx, rax	      1147	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003146	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1147	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400314a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1147	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400314e	          0x4829c2	                            sub rdx, rax	      1147	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003151	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003155	        0x48895030	             mov qword [rax + 0x30], rdx	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4003159	            0xeb26	                           jmp 0x4003181	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400315b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x400315f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4003163	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1157	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4003167	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1157	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x400316b	          0x4801c2	                            add rdx, rax	      1157	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x400316e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1157	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4003172	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1157	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4003176	          0x4829c2	                            sub rdx, rax	      1157	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4003179	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x400317d	        0x48895030	             mov qword [rax + 0x30], rdx	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4003181	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4003185	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4003189	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x400318d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4003191	          0x4839c2	                            cmp rdx, rax	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4003194	            0x722c	                            jb 0x40031c2	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4003196	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x400319a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x400319e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031a2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031a6	        0x488d0c02	                    lea rcx, [rdx + rax]	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1165	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031ae	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1165	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1165	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031b6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1165	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031ba	          0x4801d0	                            add rax, rdx	      1165	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031bd	          0x4839c1	                            cmp rcx, rax	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031c0	            0x7622	                           jbe 0x40031e4	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031c2	        0x8345b801	               add dword [rbp - 0x48], 1	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031c6	      0x488345d840	           add qword [rbp - 0x28], 0x40 	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031cb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031cf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031d6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031d9	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031dc	     0xf8750fcffff	                            ja 0x4002e32	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031e2	            0xeb01	                           jmp 0x40031e5	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x40031e4	              0x90	                                     nop	      1166	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x40031e5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1173	elf.c	FUNCTION_26	IF_39
0x40031e8	      0x2500200000	                         and eax, 0x2000	      1173	elf.c	FUNCTION_26	IF_39
0x40031ed	            0x85c0	                           test eax, eax	      1173	elf.c	FUNCTION_26	IF_39
0x40031ef	     0xf8437020000	                            je 0x400342c	      1173	elf.c	FUNCTION_26	IF_39
0x40031f5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1174	elf.c	FUNCTION_26	IF_39
0x40031f9	        0x4883c001	                              add rax, 1	      1174	elf.c	FUNCTION_26	IF_39
0x40031fd	           0xfb600	                   movzx eax, byte [rax]	      1174	elf.c	FUNCTION_26	IF_39
0x4003200	            0x3c64	                            cmp al, 0x64	      1174	elf.c	FUNCTION_26	IF_39
0x4003202	            0x750f	                           jne 0x4003213	      1174	elf.c	FUNCTION_26	IF_39
0x4003204	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1174	elf.c	FUNCTION_26	IF_39
0x4003208	        0x4883c006	                              add rax, 6	      1174	elf.c	FUNCTION_26	IF_39
0x400320c	           0xfb600	                   movzx eax, byte [rax]	      1174	elf.c	FUNCTION_26	IF_39
0x400320f	            0x3c5f	                            cmp al, 0x5f	      1174	elf.c	FUNCTION_26	IF_39
0x4003211	            0x7426	                            je 0x4003239	      1174	elf.c	FUNCTION_26	IF_39
0x4003213	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1175	elf.c	FUNCTION_26	IF_39
0x4003217	        0x4883c001	                              add rax, 1	      1175	elf.c	FUNCTION_26	IF_39
0x400321b	           0xfb600	                   movzx eax, byte [rax]	      1175	elf.c	FUNCTION_26	IF_39
0x400321e	            0x3c7a	                            cmp al, 0x7a	      1175	elf.c	FUNCTION_26	IF_39
0x4003220	     0xf8506020000	                           jne 0x400342c	      1175	elf.c	FUNCTION_26	IF_39
0x4003226	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1175	elf.c	FUNCTION_26	IF_39
0x400322a	        0x4883c007	                              add rax, 7	      1175	elf.c	FUNCTION_26	IF_39
0x400322e	           0xfb600	                   movzx eax, byte [rax]	      1175	elf.c	FUNCTION_26	IF_39
0x4003231	            0x3c5f	                            cmp al, 0x5f	      1175	elf.c	FUNCTION_26	IF_39
0x4003233	     0xf85f3010000	                           jne 0x400342c	      1175	elf.c	FUNCTION_26	IF_39
0x4003239	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      1177	elf.c	FUNCTION_26	IF_39
0x4003240	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      1180	elf.c	FUNCTION_26	IF_39
0x4003244	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1180	elf.c	FUNCTION_26	IF_39
0x4003248	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1180	elf.c	FUNCTION_26	IF_39
0x400324c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1180	elf.c	FUNCTION_26	IF_39
0x4003250	          0x4889c7	                            mov rdi, rax	      1180	elf.c	FUNCTION_26	IF_39
0x4003253	      0xe800000000	                          call 0x4003258	      1180	elf.c	FUNCTION_26	IF_39
0x4003258	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1180	elf.c	FUNCTION_26	IF_39
0x400325b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1185	elf.c	FUNCTION_26	IF_39	IF_40
0x400325f	            0x741f	                            je 0x4003280	      1185	elf.c	FUNCTION_26	IF_39	IF_40
0x4003261	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4003265	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4003268	          0xc1e805	                              shr eax, 5	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x400326b	      0x25ffff0f00	                        and eax, 0xfffff	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4003270	      0x2500800000	                         and eax, 0x8000	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4003275	            0x85c0	                           test eax, eax	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4003277	            0x7407	                            je 0x4003280	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4003279	    0xc745c0020000	               mov dword [rbp - 0x40], 2	      1189	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4003280	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1194	elf.c	FUNCTION_26	IF_39	IF_42
0x4003284	            0x7575	                           jne 0x40032fb	      1194	elf.c	FUNCTION_26	IF_39	IF_42
0x4003286	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1196	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x400328a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1196	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x400328e	          0x4885c0	                           test rax, rax	      1196	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4003291	            0x745e	                            je 0x40032f1	      1196	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4003293	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4003297	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x400329a	          0xc1e805	                              shr eax, 5	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x400329d	      0x25ffff0f00	                        and eax, 0xfffff	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032a2	      0x2500400000	                         and eax, 0x4000	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032a7	            0x85c0	                           test eax, eax	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032a9	            0x7446	                            je 0x40032f1	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032ab	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1198	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032ae	            0x85c0	                           test eax, eax	      1198	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032b0	            0x783f	                            js 0x40032f1	      1198	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032b2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1199	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032b6	          0x4885c0	                           test rax, rax	      1199	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032b9	            0x7436	                            je 0x40032f1	      1199	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032bb	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1200	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032bf	            0x7427	                            je 0x40032e8	      1200	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032c1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032c4	            0x85c0	                           test eax, eax	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032c6	           0xf9fc2	                                 setg dl	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032c9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032cd	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032d0	          0xc1e805	                              shr eax, 5	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032d3	      0x25ffff0f00	                        and eax, 0xfffff	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032d8	      0x2500000200	                        and eax, 0x20000	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032dd	            0x85c0	                           test eax, eax	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032df	           0xf95c0	                                setne al	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032e2	            0x31d0	                            xor eax, edx	      1202	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032e4	            0x84c0	                             test al, al	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032e6	            0x7409	                            je 0x40032f1	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032e8	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      1203	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032ef	            0xeb0a	                           jmp 0x40032fb	      1203	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x40032f1	      0xb801000000	                              mov eax, 1	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x40032f6	      0xe936010000	                           jmp 0x4003431	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x40032fb	        0x837dc001	               cmp dword [rbp - 0x40], 1	      1208	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44
0x40032ff	            0x754b	                           jne 0x400334c	      1208	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44
0x4003301	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4003305	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4003309	          0x4889d6	                            mov rsi, rdx	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x400330c	          0x4889c7	                            mov rdi, rax	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x400330f	      0xe800000000	                          call 0x4003314	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4003314	            0x85c0	                           test eax, eax	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4003316	            0x757f	                           jne 0x4003397	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4003318	      0xbe00000000	                              mov esi, 0	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x400331d	      0xbf00000000	                              mov edi, 0	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x4003322	      0xe800000000	                          call 0x4003327	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x4003327	          0x4889c1	                            mov rcx, rax	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x400332a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x400332e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4003332	          0x4889c6	                            mov rsi, rax	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4003335	          0x4889cf	                            mov rdi, rcx	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4003338	      0xb800000000	                              mov eax, 0	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x400333d	      0xe800000000	                          call 0x4003342	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4003342	      0xb800000000	                              mov eax, 0	      1216	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45
0x4003347	      0xe9e5000000	                           jmp 0x4003431	      1216	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45
0x400334c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4003350	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4003354	          0x4889d6	                            mov rsi, rdx	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4003357	          0x4889c7	                            mov rdi, rax	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x400335a	      0xe800000000	                          call 0x400335f	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x400335f	            0x85c0	                           test eax, eax	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4003361	            0x7534	                           jne 0x4003397	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4003363	      0xbe00000000	                              mov esi, 0	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x4003368	      0xbf00000000	                              mov edi, 0	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x400336d	      0xe800000000	                          call 0x4003372	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x4003372	          0x4889c1	                            mov rcx, rax	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x4003375	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4003379	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x400337d	          0x4889c6	                            mov rsi, rax	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4003380	          0x4889cf	                            mov rdi, rcx	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4003383	      0xb800000000	                              mov eax, 0	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4003388	      0xe800000000	                          call 0x400338d	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x400338d	      0xb800000000	                              mov eax, 0	      1227	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46
0x4003392	      0xe99a000000	                           jmp 0x4003431	      1227	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46
0x4003397	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1231	elf.c	FUNCTION_26	IF_39	IF_47
0x400339b	         0xfb64048	           movzx eax, byte [rax + 0x48] 	      1231	elf.c	FUNCTION_26	IF_39	IF_47
0x400339f	          0x83e008	                              and eax, 8	      1231	elf.c	FUNCTION_26	IF_39	IF_47
0x40033a2	            0x84c0	                             test al, al	      1231	elf.c	FUNCTION_26	IF_39	IF_47
0x40033a4	            0x7471	                            je 0x4003417	      1231	elf.c	FUNCTION_26	IF_39	IF_47
0x40033a6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1233	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033aa	        0x4883c001	                              add rax, 1	      1233	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033ae	           0xfb600	                   movzx eax, byte [rax]	      1233	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033b1	            0x3c7a	                            cmp al, 0x7a	      1233	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033b3	            0x7577	                           jne 0x400342c	      1233	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033b5	        0x837dc002	               cmp dword [rbp - 0x40], 2	      1234	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033b9	            0x741e	                            je 0x40033d9	      1234	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033bb	        0x837dc001	               cmp dword [rbp - 0x40], 1	      1235	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033bf	            0x756b	                           jne 0x400342c	      1235	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033c1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033c5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033c8	          0xc1e805	                              shr eax, 5	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033cb	      0x25ffff0f00	                        and eax, 0xfffff	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033d0	      0x2500000200	                        and eax, 0x20000	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033d5	            0x85c0	                           test eax, eax	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033d7	            0x7453	                            je 0x400342c	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x40033d9	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x40033dd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x40033e1	          0x4889d6	                            mov rsi, rdx	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x40033e4	          0x4889c7	                            mov rdi, rax	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x40033e7	      0xe8d4f3ffff	        call sym.convert_zdebug_to_debug	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x40033ec	        0x488945f0	             mov qword [rbp - 0x10], rax	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x40033f0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1242	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x40033f5	            0x7507	                           jne 0x40033fe	      1242	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x40033f7	      0xb800000000	                              mov eax, 0	      1243	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x40033fc	            0xeb33	                           jmp 0x4003431	      1243	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x40033fe	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4003402	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4003406	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x400340a	          0x4889ce	                            mov rsi, rcx	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x400340d	          0x4889c7	                            mov rdi, rax	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4003410	      0xe800000000	                          call 0x4003415	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4003415	            0xeb15	                           jmp 0x400342c	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4003417	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1250	elf.c	FUNCTION_26	IF_39	ELSE_12
0x400341b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1250	elf.c	FUNCTION_26	IF_39	ELSE_12
0x400341e	       0xd00000010	                      or eax, 0x10000000	      1250	elf.c	FUNCTION_26	IF_39	ELSE_12
0x4003423	            0x89c2	                            mov edx, eax	      1250	elf.c	FUNCTION_26	IF_39	ELSE_12
0x4003425	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1250	elf.c	FUNCTION_26	IF_39	ELSE_12
0x4003429	          0x895020	             mov dword [rax + 0x20], edx	      1250	elf.c	FUNCTION_26	IF_39	ELSE_12
0x400342c	      0xb801000000	                              mov eax, 1	      1253	elf.c	FUNCTION_26	ELSE_12
0x4003431	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1254	elf.c	FUNCTION_26	ELSE_12
0x4003435	    0x644833342528	                xor rsi, qword fs:[0x28]	      1254	elf.c	FUNCTION_26	ELSE_12
0x400343e	            0x7405	                            je 0x4003445	      1254	elf.c	FUNCTION_26	ELSE_12
0x4003440	      0xe800000000	                          call 0x4003445	      1254	elf.c	FUNCTION_26	ELSE_12
0x4003445	              0xc9	                                   leave	      1254	elf.c	FUNCTION_26	ELSE_12
0x4003446	              0xc3	                                     ret	      1254	elf.c	FUNCTION_26	ELSE_12
elfcore_write_s390_high_gprs	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019cf8	              0x55	                                push rbp	     10823	elf.c	FUNCTION_173
0x4019cf9	          0x4889e5	                            mov rbp, rsp	     10823	elf.c	FUNCTION_173
0x4019cfc	        0x4883ec40	                           sub rsp, 0x40	     10823	elf.c	FUNCTION_173
0x4019d00	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10823	elf.c	FUNCTION_173
0x4019d04	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10823	elf.c	FUNCTION_173
0x4019d08	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10823	elf.c	FUNCTION_173
0x4019d0c	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10823	elf.c	FUNCTION_173
0x4019d10	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10823	elf.c	FUNCTION_173
0x4019d14	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10824	elf.c	FUNCTION_173
0x4019d1c	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d20	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d24	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d28	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d30	        0x4883ec08	                              sub rsp, 8	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d34	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d37	              0x57	                                push rdi	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d38	          0x4d89c1	                              mov r9, r8	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d3b	    0x41b800030000	                          mov r8d, 0x300	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d41	          0x4889c7	                            mov rdi, rax	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d44	      0xe800000000	                          call 0x4019d49	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d49	        0x4883c410	                           add rsp, 0x10	     10825	elf.c	FUNCTION_173	CALL_1
0x4019d4d	              0xc9	                                   leave	     10828	elf.c	FUNCTION_173
0x4019d4e	              0xc3	                                     ret	     10828	elf.c	FUNCTION_173
elfcore_grok_s390_vxrs_high	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016e78	              0x55	                                push rbp	      9300	elf.c	FUNCTION_132
0x4016e79	          0x4889e5	                            mov rbp, rsp	      9300	elf.c	FUNCTION_132
0x4016e7c	        0x4883ec10	                           sub rsp, 0x10	      9300	elf.c	FUNCTION_132
0x4016e80	        0x48897df8	                mov qword [rbp - 8], rdi	      9300	elf.c	FUNCTION_132
0x4016e84	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9300	elf.c	FUNCTION_132
0x4016e88	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9301	elf.c	FUNCTION_132	CALL_1
0x4016e8c	        0x488b45f8	                mov rax, qword [rbp - 8]	      9301	elf.c	FUNCTION_132	CALL_1
0x4016e90	      0xbe00000000	                              mov esi, 0	      9301	elf.c	FUNCTION_132	CALL_1
0x4016e95	          0x4889c7	                            mov rdi, rax	      9301	elf.c	FUNCTION_132	CALL_1
0x4016e98	      0xe85cfdffff	call sym.elfcore_make_note_pseudosection	      9301	elf.c	FUNCTION_132	CALL_1
0x4016e9d	              0xc9	                                   leave	      9302	elf.c	FUNCTION_132
0x4016e9e	              0xc3	                                     ret	      9302	elf.c	FUNCTION_132
_bfd_elf_init_reloc_shdr	ELSE,1:DO,0:CALL,4:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	82
0x4007be5	              0x55	                                push rbp	      3091	elf.c	FUNCTION_46
0x4007be6	          0x4889e5	                            mov rbp, rsp	      3091	elf.c	FUNCTION_46
0x4007be9	        0x4883ec30	                           sub rsp, 0x30	      3091	elf.c	FUNCTION_46
0x4007bed	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3091	elf.c	FUNCTION_46
0x4007bf1	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3091	elf.c	FUNCTION_46
0x4007bf5	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3091	elf.c	FUNCTION_46
0x4007bf9	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      3091	elf.c	FUNCTION_46
0x4007bfc	        0x448945d0	             mov dword [rbp - 0x30], r8d	      3091	elf.c	FUNCTION_46
0x4007c00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3093	elf.c	FUNCTION_46	CALL_1
0x4007c04	        0x488b4008	                mov rax, qword [rax + 8]	      3093	elf.c	FUNCTION_46	CALL_1
0x4007c08	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3093	elf.c	FUNCTION_46	CALL_1
0x4007c0f	        0x488945f0	             mov qword [rbp - 0x10], rax	      3093	elf.c	FUNCTION_46	CALL_1
0x4007c13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3095	elf.c	FUNCTION_46	CALL_2
0x4007c17	          0x488b00	                    mov rax, qword [rax]	      3095	elf.c	FUNCTION_46	CALL_2
0x4007c1a	          0x4885c0	                           test rax, rax	      3095	elf.c	FUNCTION_46	CALL_2
0x4007c1d	            0x740f	                            je 0x4007c2e	      3095	elf.c	FUNCTION_46	CALL_2
0x4007c1f	      0xbe170c0000	                          mov esi, 0xc17	      3095	elf.c	FUNCTION_46	CALL_2
0x4007c24	      0xbf00000000	                              mov edi, 0	      3095	elf.c	FUNCTION_46	CALL_2
0x4007c29	      0xe800000000	                          call 0x4007c2e	      3095	elf.c	FUNCTION_46	CALL_2
0x4007c2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3096	elf.c	FUNCTION_46	CALL_3
0x4007c32	      0xbe50000000	                           mov esi, 0x50	      3096	elf.c	FUNCTION_46	CALL_3
0x4007c37	          0x4889c7	                            mov rdi, rax	      3096	elf.c	FUNCTION_46	CALL_3
0x4007c3a	      0xe800000000	                          call 0x4007c3f	      3096	elf.c	FUNCTION_46	CALL_3
0x4007c3f	        0x488945f8	                mov qword [rbp - 8], rax	      3096	elf.c	FUNCTION_46	CALL_3
0x4007c43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3097	elf.c	FUNCTION_46
0x4007c47	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3097	elf.c	FUNCTION_46
0x4007c4b	          0x488910	                    mov qword [rax], rdx	      3097	elf.c	FUNCTION_46
0x4007c4e	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3099	elf.c	FUNCTION_46	IF_1
0x4007c52	            0x740c	                            je 0x4007c60	      3099	elf.c	FUNCTION_46	IF_1
0x4007c54	        0x488b45f8	                mov rax, qword [rbp - 8]	      3100	elf.c	FUNCTION_46	IF_1
0x4007c58	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      3100	elf.c	FUNCTION_46	IF_1
0x4007c5e	            0xeb25	                           jmp 0x4007c85	      3100	elf.c	FUNCTION_46	IF_1
0x4007c60	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c63	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c67	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c6f	          0x4889c7	                            mov rdi, rax	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c72	      0xe8a9feffff	     call sym._bfd_elf_set_reloc_sh_name	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c77	            0x85c0	                           test eax, eax	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c79	            0x750a	                           jne 0x4007c85	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x4007c7b	      0xb800000000	                              mov eax, 0	      3103	elf.c	FUNCTION_46	ELSE_1	IF_2
0x4007c80	      0xe9a6000000	                           jmp 0x4007d2b	      3103	elf.c	FUNCTION_46	ELSE_1	IF_2
0x4007c85	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3104	elf.c	FUNCTION_46
0x4007c89	            0x7407	                            je 0x4007c92	      3104	elf.c	FUNCTION_46
0x4007c8b	      0xba04000000	                              mov edx, 4	      3104	elf.c	FUNCTION_46
0x4007c90	            0xeb05	                           jmp 0x4007c97	      3104	elf.c	FUNCTION_46
0x4007c92	      0xba09000000	                              mov edx, 9	      3104	elf.c	FUNCTION_46
0x4007c97	        0x488b45f8	                mov rax, qword [rbp - 8]	      3104	elf.c	FUNCTION_46
0x4007c9b	          0x895004	                mov dword [rax + 4], edx	      3104	elf.c	FUNCTION_46
0x4007c9e	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3105	elf.c	FUNCTION_46
0x4007ca2	            0x7414	                            je 0x4007cb8	      3105	elf.c	FUNCTION_46
0x4007ca4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3106	elf.c	FUNCTION_46
0x4007ca8	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3106	elf.c	FUNCTION_46
0x4007caf	         0xfb64004	               movzx eax, byte [rax + 4]	      3106	elf.c	FUNCTION_46
0x4007cb3	           0xfb6c0	                           movzx eax, al	      3105	elf.c	FUNCTION_46
0x4007cb6	            0xeb12	                           jmp 0x4007cca	      3105	elf.c	FUNCTION_46
0x4007cb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3107	elf.c	FUNCTION_46
0x4007cbc	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3107	elf.c	FUNCTION_46
0x4007cc3	         0xfb64003	               movzx eax, byte [rax + 3]	      3107	elf.c	FUNCTION_46
0x4007cc7	           0xfb6c0	                           movzx eax, al	      3105	elf.c	FUNCTION_46
0x4007cca	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3105	elf.c	FUNCTION_46
0x4007cce	        0x48894238	             mov qword [rdx + 0x38], rax	      3105	elf.c	FUNCTION_46
0x4007cd2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3108	elf.c	FUNCTION_46
0x4007cd6	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3108	elf.c	FUNCTION_46
0x4007cdd	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      3108	elf.c	FUNCTION_46
0x4007ce1	           0xfb6c0	                           movzx eax, al	      3108	elf.c	FUNCTION_46
0x4007ce4	      0xba01000000	                              mov edx, 1	      3108	elf.c	FUNCTION_46
0x4007ce9	            0x89c1	                            mov ecx, eax	      3108	elf.c	FUNCTION_46
0x4007ceb	          0x48d3e2	                             shl rdx, cl	      3108	elf.c	FUNCTION_46
0x4007cee	        0x488b45f8	                mov rax, qword [rbp - 8]	      3108	elf.c	FUNCTION_46
0x4007cf2	        0x48895030	             mov qword [rax + 0x30], rdx	      3108	elf.c	FUNCTION_46
0x4007cf6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3109	elf.c	FUNCTION_46
0x4007cfa	    0x48c740080000	                  mov qword [rax + 8], 0	      3109	elf.c	FUNCTION_46
0x4007d02	        0x488b45f8	                mov rax, qword [rbp - 8]	      3110	elf.c	FUNCTION_46
0x4007d06	    0x48c740100000	               mov qword [rax + 0x10], 0	      3110	elf.c	FUNCTION_46
0x4007d0e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3111	elf.c	FUNCTION_46
0x4007d12	    0x48c740200000	               mov qword [rax + 0x20], 0	      3111	elf.c	FUNCTION_46
0x4007d1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3112	elf.c	FUNCTION_46
0x4007d1e	    0x48c740180000	               mov qword [rax + 0x18], 0	      3112	elf.c	FUNCTION_46
0x4007d26	      0xb801000000	                              mov eax, 1	      3114	elf.c	FUNCTION_46
0x4007d2b	              0xc9	                                   leave	      3115	elf.c	FUNCTION_46
0x4007d2c	              0xc3	                                     ret	      3115	elf.c	FUNCTION_46
_bfd_elf_get_reloc_upper_bound	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	11
0x4014b0b	              0x55	                                push rbp	      8150	elf.c	FUNCTION_91
0x4014b0c	          0x4889e5	                            mov rbp, rsp	      8150	elf.c	FUNCTION_91
0x4014b0f	        0x48897df8	                mov qword [rbp - 8], rdi	      8150	elf.c	FUNCTION_91
0x4014b13	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8150	elf.c	FUNCTION_91
0x4014b17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8151	elf.c	FUNCTION_91
0x4014b1b	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      8151	elf.c	FUNCTION_91
0x4014b21	          0x83c001	                              add eax, 1	      8151	elf.c	FUNCTION_91
0x4014b24	            0x89c0	                            mov eax, eax	      8151	elf.c	FUNCTION_91
0x4014b26	        0x48c1e003	                              shl rax, 3	      8151	elf.c	FUNCTION_91
0x4014b2a	              0x5d	                                 pop rbp	      8152	elf.c	FUNCTION_91
0x4014b2b	              0xc3	                                     ret	      8152	elf.c	FUNCTION_91
_bfd_elf_get_special_section	ELSE,1:DO,0:CALL,3:WHILE,0:FOR,1:IF,8:SWITCH,0:functions,0	138
0x4006fbe	              0x55	                                push rbp	      2751	elf.c	FUNCTION_39
0x4006fbf	          0x4889e5	                            mov rbp, rsp	      2751	elf.c	FUNCTION_39
0x4006fc2	        0x4883ec30	                           sub rsp, 0x30	      2751	elf.c	FUNCTION_39
0x4006fc6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2751	elf.c	FUNCTION_39
0x4006fca	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2751	elf.c	FUNCTION_39
0x4006fce	          0x8955dc	             mov dword [rbp - 0x24], edx	      2751	elf.c	FUNCTION_39
0x4006fd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2755	elf.c	FUNCTION_39	CALL_1
0x4006fd5	          0x4889c7	                            mov rdi, rax	      2755	elf.c	FUNCTION_39	CALL_1
0x4006fd8	      0xe800000000	                          call 0x4006fdd	      2755	elf.c	FUNCTION_39	CALL_1
0x4006fdd	          0x8945f4	              mov dword [rbp - 0xc], eax	      2755	elf.c	FUNCTION_39	CALL_1
0x4006fe0	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      2757	elf.c	FUNCTION_39	FOR_1
0x4006fe7	      0xe95f010000	                           jmp 0x400714b	      2757	elf.c	FUNCTION_39	FOR_1
0x4006fec	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2760	elf.c	FUNCTION_39	FOR_1
0x4006fef	            0x4898	                                    cdqe	      2760	elf.c	FUNCTION_39	FOR_1
0x4006ff1	        0x48c1e005	                              shl rax, 5	      2760	elf.c	FUNCTION_39	FOR_1
0x4006ff5	          0x4889c2	                            mov rdx, rax	      2760	elf.c	FUNCTION_39	FOR_1
0x4006ff8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2760	elf.c	FUNCTION_39	FOR_1
0x4006ffc	          0x4801d0	                            add rax, rdx	      2760	elf.c	FUNCTION_39	FOR_1
0x4006fff	          0x8b4008	                mov eax, dword [rax + 8]	      2760	elf.c	FUNCTION_39	FOR_1
0x4007002	          0x8945f8	                mov dword [rbp - 8], eax	      2760	elf.c	FUNCTION_39	FOR_1
0x4007005	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x4007008	          0x3b45f8	                cmp eax, dword [rbp - 8]	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x400700b	     0xf8c26010000	                            jl 0x4007137	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x4007011	          0x8b45f8	                mov eax, dword [rbp - 8]	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007014	          0x4863d0	                         movsxd rdx, eax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007017	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400701a	            0x4898	                                    cdqe	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400701c	        0x48c1e005	                              shl rax, 5	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007020	          0x4889c1	                            mov rcx, rax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007023	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007027	          0x4801c8	                            add rax, rcx	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400702a	          0x488b08	                    mov rcx, qword [rax]	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400702d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007031	          0x4889ce	                            mov rsi, rcx	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007034	          0x4889c7	                            mov rdi, rax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007037	      0xe800000000	                          call 0x400703c	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400703c	            0x85c0	                           test eax, eax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400703e	     0xf85f6000000	                           jne 0x400713a	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4007044	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2767	elf.c	FUNCTION_39	FOR_1
0x4007047	            0x4898	                                    cdqe	      2767	elf.c	FUNCTION_39	FOR_1
0x4007049	        0x48c1e005	                              shl rax, 5	      2767	elf.c	FUNCTION_39	FOR_1
0x400704d	          0x4889c2	                            mov rdx, rax	      2767	elf.c	FUNCTION_39	FOR_1
0x4007050	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2767	elf.c	FUNCTION_39	FOR_1
0x4007054	          0x4801d0	                            add rax, rdx	      2767	elf.c	FUNCTION_39	FOR_1
0x4007057	          0x8b400c	              mov eax, dword [rax + 0xc]	      2767	elf.c	FUNCTION_39	FOR_1
0x400705a	          0x8945fc	                mov dword [rbp - 4], eax	      2767	elf.c	FUNCTION_39	FOR_1
0x400705d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x4007061	            0x7f67	                            jg 0x40070ca	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x4007063	          0x8b45f8	                mov eax, dword [rbp - 8]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4007066	          0x4863d0	                         movsxd rdx, eax	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4007069	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x400706d	          0x4801d0	                            add rax, rdx	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4007070	           0xfb600	                   movzx eax, byte [rax]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4007073	            0x84c0	                             test al, al	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4007075	     0xf84a7000000	                            je 0x4007122	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x400707b	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x400707f	     0xf84b8000000	                            je 0x400713d	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x4007085	          0x8b45f8	                mov eax, dword [rbp - 8]	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4007088	          0x4863d0	                         movsxd rdx, eax	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x400708b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x400708f	          0x4801d0	                            add rax, rdx	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4007092	           0xfb600	                   movzx eax, byte [rax]	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4007095	            0x3c2e	                            cmp al, 0x2e	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4007097	     0xf8485000000	                            je 0x4007122	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x400709d	        0x837dfcfe	 cmp dword [rbp - 4], 0xfffffffffffffffe	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070a1	     0xf8499000000	                            je 0x4007140	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070a7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070ab	            0x7475	                            je 0x4007122	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070ad	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070b0	            0x4898	                                    cdqe	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070b2	        0x48c1e005	                              shl rax, 5	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070b6	          0x4889c2	                            mov rdx, rax	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070bd	          0x4801d0	                            add rax, rdx	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070c0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070c3	          0x83f809	                              cmp eax, 9	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070c6	            0x755a	                           jne 0x4007122	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070c8	            0xeb76	                           jmp 0x4007140	      2777	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40070ca	          0x8b55f8	                mov edx, dword [rbp - 8]	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40070cd	          0x8b45fc	                mov eax, dword [rbp - 4]	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40070d0	             0x1d0	                            add eax, edx	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40070d2	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40070d5	            0x7f6c	                            jg 0x4007143	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40070d7	          0x8b45fc	                mov eax, dword [rbp - 4]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40070da	            0x4898	                                    cdqe	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40070dc	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2785	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x40070df	          0x4863d2	                         movsxd rdx, edx	      2785	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x40070e2	          0x4889d1	                            mov rcx, rdx	      2785	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x40070e5	        0x48c1e105	                              shl rcx, 5	      2785	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x40070e9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2785	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x40070ed	          0x4801ca	                            add rdx, rcx	      2785	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x40070f0	          0x488b0a	                    mov rcx, qword [rdx]	      2785	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x40070f3	          0x8b55f8	                mov edx, dword [rbp - 8]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40070f6	          0x4863d2	                         movsxd rdx, edx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40070f9	        0x488d3411	                    lea rsi, [rcx + rdx]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40070fd	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007100	          0x4863ca	                         movsxd rcx, edx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007103	          0x8b55fc	                mov edx, dword [rbp - 4]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007106	          0x4863d2	                         movsxd rdx, edx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007109	          0x4829d1	                            sub rcx, rdx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400710c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007110	          0x4801d1	                            add rcx, rdx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007113	          0x4889c2	                            mov rdx, rax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007116	          0x4889cf	                            mov rdi, rcx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007119	      0xe800000000	                          call 0x400711e	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400711e	            0x85c0	                           test eax, eax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007120	            0x7524	                           jne 0x4007146	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4007122	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2789	elf.c	FUNCTION_39	FOR_1
0x4007125	            0x4898	                                    cdqe	      2789	elf.c	FUNCTION_39	FOR_1
0x4007127	        0x48c1e005	                              shl rax, 5	      2789	elf.c	FUNCTION_39	FOR_1
0x400712b	          0x4889c2	                            mov rdx, rax	      2789	elf.c	FUNCTION_39	FOR_1
0x400712e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2789	elf.c	FUNCTION_39	FOR_1
0x4007132	          0x4801d0	                            add rax, rdx	      2789	elf.c	FUNCTION_39	FOR_1
0x4007135	            0xeb38	                           jmp 0x400716f	      2789	elf.c	FUNCTION_39	FOR_1
0x4007137	              0x90	                                     nop	      2763	elf.c	FUNCTION_39	FOR_1	IF_1
0x4007138	            0xeb0d	                           jmp 0x4007147	      2763	elf.c	FUNCTION_39	FOR_1	IF_1
0x400713a	              0x90	                                     nop	      2765	elf.c	FUNCTION_39	FOR_1	IF_2
0x400713b	            0xeb0a	                           jmp 0x4007147	      2765	elf.c	FUNCTION_39	FOR_1	IF_2
0x400713d	              0x90	                                     nop	      2773	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x400713e	            0xeb07	                           jmp 0x4007147	      2773	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x4007140	              0x90	                                     nop	      2777	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4007141	            0xeb04	                           jmp 0x4007147	      2777	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4007143	              0x90	                                     nop	      2783	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4007144	            0xeb01	                           jmp 0x4007147	      2783	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4007146	              0x90	                                     nop	      2787	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8
0x4007147	        0x8345f001	               add dword [rbp - 0x10], 1	      2757	elf.c	FUNCTION_39	FOR_1
0x400714b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2757	elf.c	FUNCTION_39	FOR_1
0x400714e	            0x4898	                                    cdqe	      2757	elf.c	FUNCTION_39	FOR_1
0x4007150	        0x48c1e005	                              shl rax, 5	      2757	elf.c	FUNCTION_39	FOR_1
0x4007154	          0x4889c2	                            mov rdx, rax	      2757	elf.c	FUNCTION_39	FOR_1
0x4007157	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2757	elf.c	FUNCTION_39	FOR_1
0x400715b	          0x4801d0	                            add rax, rdx	      2757	elf.c	FUNCTION_39	FOR_1
0x400715e	          0x488b00	                    mov rax, qword [rax]	      2757	elf.c	FUNCTION_39	FOR_1
0x4007161	          0x4885c0	                           test rax, rax	      2757	elf.c	FUNCTION_39	FOR_1
0x4007164	     0xf8582feffff	                           jne 0x4006fec	      2757	elf.c	FUNCTION_39	FOR_1
0x400716a	      0xb800000000	                              mov eax, 0	      2792	elf.c	FUNCTION_39
0x400716f	              0xc9	                                   leave	      2793	elf.c	FUNCTION_39
0x4007170	              0xc3	                                     ret	      2793	elf.c	FUNCTION_39
bfd_elf_bfd_from_remote_memory	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	20
0x401b0b7	              0x55	                                push rbp	     11376	elf.c	FUNCTION_199
0x401b0b8	          0x4889e5	                            mov rbp, rsp	     11376	elf.c	FUNCTION_199
0x401b0bb	        0x4883ec30	                           sub rsp, 0x30	     11376	elf.c	FUNCTION_199
0x401b0bf	        0x48897df8	                mov qword [rbp - 8], rdi	     11376	elf.c	FUNCTION_199
0x401b0c3	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11376	elf.c	FUNCTION_199
0x401b0c7	        0x488955e8	             mov qword [rbp - 0x18], rdx	     11376	elf.c	FUNCTION_199
0x401b0cb	        0x48894de0	             mov qword [rbp - 0x20], rcx	     11376	elf.c	FUNCTION_199
0x401b0cf	        0x4c8945d8	              mov qword [rbp - 0x28], r8	     11376	elf.c	FUNCTION_199
0x401b0d3	        0x488b45f8	                mov rax, qword [rbp - 8]	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0d7	        0x488b4008	                mov rax, qword [rax + 8]	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0db	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0e2	    0x488b80900200	           mov rax, qword [rax + 0x290] 	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0e9	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0ed	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0f1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0f5	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0f9	        0x488b7df8	                mov rdi, qword [rbp - 8]	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0fd	            0xffd0	                                call rax	     11377	elf.c	FUNCTION_199	CALL_1
0x401b0ff	              0xc9	                                   leave	     11379	elf.c	FUNCTION_199
0x401b100	              0xc3	                                     ret	     11379	elf.c	FUNCTION_199
elfcore_write_ppc_vsx	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019ca1	              0x55	                                push rbp	     10811	elf.c	FUNCTION_172
0x4019ca2	          0x4889e5	                            mov rbp, rsp	     10811	elf.c	FUNCTION_172
0x4019ca5	        0x4883ec40	                           sub rsp, 0x40	     10811	elf.c	FUNCTION_172
0x4019ca9	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10811	elf.c	FUNCTION_172
0x4019cad	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10811	elf.c	FUNCTION_172
0x4019cb1	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10811	elf.c	FUNCTION_172
0x4019cb5	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10811	elf.c	FUNCTION_172
0x4019cb9	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10811	elf.c	FUNCTION_172
0x4019cbd	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10812	elf.c	FUNCTION_172
0x4019cc5	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cc9	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10813	elf.c	FUNCTION_172	CALL_1
0x4019ccd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cd1	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cd5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cd9	        0x4883ec08	                              sub rsp, 8	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cdd	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10813	elf.c	FUNCTION_172	CALL_1
0x4019ce0	              0x57	                                push rdi	     10813	elf.c	FUNCTION_172	CALL_1
0x4019ce1	          0x4d89c1	                              mov r9, r8	     10813	elf.c	FUNCTION_172	CALL_1
0x4019ce4	    0x41b802010000	                          mov r8d, 0x102	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cea	          0x4889c7	                            mov rdi, rax	     10813	elf.c	FUNCTION_172	CALL_1
0x4019ced	      0xe800000000	                          call 0x4019cf2	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cf2	        0x4883c410	                           add rsp, 0x10	     10813	elf.c	FUNCTION_172	CALL_1
0x4019cf6	              0xc9	                                   leave	     10815	elf.c	FUNCTION_172
0x4019cf7	              0xc3	                                     ret	     10815	elf.c	FUNCTION_172
bfd_get_elf_phdr_upper_bound	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	20
0x401ad36	              0x55	                                push rbp	     11221	elf.c	FUNCTION_193
0x401ad37	          0x4889e5	                            mov rbp, rsp	     11221	elf.c	FUNCTION_193
0x401ad3a	        0x4883ec10	                           sub rsp, 0x10	     11221	elf.c	FUNCTION_193
0x401ad3e	        0x48897df8	                mov qword [rbp - 8], rdi	     11221	elf.c	FUNCTION_193
0x401ad42	        0x488b45f8	                mov rax, qword [rbp - 8]	     11222	elf.c	FUNCTION_193	IF_1
0x401ad46	        0x488b4008	                mov rax, qword [rax + 8]	     11222	elf.c	FUNCTION_193	IF_1
0x401ad4a	          0x8b4008	                mov eax, dword [rax + 8]	     11222	elf.c	FUNCTION_193	IF_1
0x401ad4d	          0x83f805	                              cmp eax, 5	     11222	elf.c	FUNCTION_193	IF_1
0x401ad50	            0x7413	                            je 0x401ad65	     11222	elf.c	FUNCTION_193	IF_1
0x401ad52	      0xbf03000000	                              mov edi, 3	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x401ad57	      0xe800000000	                          call 0x401ad5c	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x401ad5c	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11225	elf.c	FUNCTION_193	IF_1
0x401ad63	            0xeb14	                           jmp 0x401ad79	     11225	elf.c	FUNCTION_193	IF_1
0x401ad65	        0x488b45f8	                mov rax, qword [rbp - 8]	     11228	elf.c	FUNCTION_193	CALL_2
0x401ad69	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     11228	elf.c	FUNCTION_193	CALL_2
0x401ad70	          0x8b4044	            mov eax, dword [rax + 0x44] 	     11228	elf.c	FUNCTION_193	CALL_2
0x401ad73	            0x89c0	                            mov eax, eax	     11228	elf.c	FUNCTION_193	CALL_2
0x401ad75	        0x48c1e006	                              shl rax, 6	     11228	elf.c	FUNCTION_193	CALL_2
0x401ad79	              0xc9	                                   leave	     11229	elf.c	FUNCTION_193
0x401ad7a	              0xc3	                                     ret	     11229	elf.c	FUNCTION_193
_bfd_elf_get_sec_type_attr	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,6:SWITCH,0:functions,0	78
0x4007171	              0x55	                                push rbp	      2797	elf.c	FUNCTION_40
0x4007172	          0x4889e5	                            mov rbp, rsp	      2797	elf.c	FUNCTION_40
0x4007175	        0x4883ec30	                           sub rsp, 0x30	      2797	elf.c	FUNCTION_40
0x4007179	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2797	elf.c	FUNCTION_40
0x400717d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2797	elf.c	FUNCTION_40
0x4007181	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2803	elf.c	FUNCTION_40	IF_1
0x4007185	          0x488b00	                    mov rax, qword [rax]	      2803	elf.c	FUNCTION_40	IF_1
0x4007188	          0x4885c0	                           test rax, rax	      2803	elf.c	FUNCTION_40	IF_1
0x400718b	            0x750a	                           jne 0x4007197	      2803	elf.c	FUNCTION_40	IF_1
0x400718d	      0xb800000000	                              mov eax, 0	      2804	elf.c	FUNCTION_40	IF_1
0x4007192	      0xe9f0000000	                           jmp 0x4007287	      2804	elf.c	FUNCTION_40	IF_1
0x4007197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2806	elf.c	FUNCTION_40	CALL_1
0x400719b	        0x488b4008	                mov rax, qword [rax + 8]	      2806	elf.c	FUNCTION_40	CALL_1
0x400719f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2806	elf.c	FUNCTION_40	CALL_1
0x40071a6	        0x488945f0	             mov qword [rbp - 0x10], rax	      2806	elf.c	FUNCTION_40	CALL_1
0x40071aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2807	elf.c	FUNCTION_40
0x40071ae	    0x488b80080300	           mov rax, qword [rax + 0x308] 	      2807	elf.c	FUNCTION_40
0x40071b5	        0x488945f8	                mov qword [rbp - 8], rax	      2807	elf.c	FUNCTION_40
0x40071b9	      0x48837df800	                  cmp qword [rbp - 8], 0	      2808	elf.c	FUNCTION_40	IF_2
0x40071be	            0x7442	                            je 0x4007202	      2808	elf.c	FUNCTION_40	IF_2
0x40071c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2812	elf.c	FUNCTION_40	IF_2
0x40071c4	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      2812	elf.c	FUNCTION_40	IF_2
0x40071c8	          0xc0e802	                               shr al, 2	      2812	elf.c	FUNCTION_40	IF_2
0x40071cb	          0x83e001	                              and eax, 1	      2812	elf.c	FUNCTION_40	IF_2
0x40071ce	           0xfb6d0	                           movzx edx, al	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071d5	    0x488b88080300	           mov rcx, qword [rax + 0x308] 	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071e0	          0x488b00	                    mov rax, qword [rax]	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071e3	          0x4889ce	                            mov rsi, rcx	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071e6	          0x4889c7	                            mov rdi, rax	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071e9	      0xe800000000	                          call 0x40071ee	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071ee	        0x488945f8	                mov qword [rbp - 8], rax	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40071f2	      0x48837df800	                  cmp qword [rbp - 8], 0	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x40071f7	            0x7409	                            je 0x4007202	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x40071f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2814	elf.c	FUNCTION_40	IF_2	IF_3
0x40071fd	      0xe985000000	                           jmp 0x4007287	      2814	elf.c	FUNCTION_40	IF_2	IF_3
0x4007202	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2817	elf.c	FUNCTION_40	IF_4
0x4007206	          0x488b00	                    mov rax, qword [rax]	      2817	elf.c	FUNCTION_40	IF_4
0x4007209	           0xfb600	                   movzx eax, byte [rax]	      2817	elf.c	FUNCTION_40	IF_4
0x400720c	            0x3c2e	                            cmp al, 0x2e	      2817	elf.c	FUNCTION_40	IF_4
0x400720e	            0x7407	                            je 0x4007217	      2817	elf.c	FUNCTION_40	IF_4
0x4007210	      0xb800000000	                              mov eax, 0	      2818	elf.c	FUNCTION_40	IF_4
0x4007215	            0xeb70	                           jmp 0x4007287	      2818	elf.c	FUNCTION_40	IF_4
0x4007217	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2820	elf.c	FUNCTION_40
0x400721b	          0x488b00	                    mov rax, qword [rax]	      2820	elf.c	FUNCTION_40
0x400721e	        0x4883c001	                              add rax, 1	      2820	elf.c	FUNCTION_40
0x4007222	           0xfb600	                   movzx eax, byte [rax]	      2820	elf.c	FUNCTION_40
0x4007225	           0xfbec0	                           movsx eax, al	      2820	elf.c	FUNCTION_40
0x4007228	          0x83e862	                           sub eax, 0x62	      2820	elf.c	FUNCTION_40
0x400722b	          0x8945ec	             mov dword [rbp - 0x14], eax	      2820	elf.c	FUNCTION_40
0x400722e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2821	elf.c	FUNCTION_40	IF_5
0x4007232	            0x7806	                            js 0x400723a	      2821	elf.c	FUNCTION_40	IF_5
0x4007234	        0x837dec18	           cmp dword [rbp - 0x14], 0x18 	      2821	elf.c	FUNCTION_40	IF_5
0x4007238	            0x7e07	                           jle 0x4007241	      2821	elf.c	FUNCTION_40	IF_5
0x400723a	      0xb800000000	                              mov eax, 0	      2822	elf.c	FUNCTION_40	IF_5
0x400723f	            0xeb46	                           jmp 0x4007287	      2822	elf.c	FUNCTION_40	IF_5
0x4007241	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2824	elf.c	FUNCTION_40
0x4007244	            0x4898	                                    cdqe	      2824	elf.c	FUNCTION_40
0x4007246	    0x488b04c50000	                  mov rax, qword [rax*8]	      2824	elf.c	FUNCTION_40
0x400724e	        0x488945f8	                mov qword [rbp - 8], rax	      2824	elf.c	FUNCTION_40
0x4007252	      0x48837df800	                  cmp qword [rbp - 8], 0	      2826	elf.c	FUNCTION_40	IF_6
0x4007257	            0x7507	                           jne 0x4007260	      2826	elf.c	FUNCTION_40	IF_6
0x4007259	      0xb800000000	                              mov eax, 0	      2827	elf.c	FUNCTION_40	IF_6
0x400725e	            0xeb27	                           jmp 0x4007287	      2827	elf.c	FUNCTION_40	IF_6
0x4007260	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2829	elf.c	FUNCTION_40	CALL_3
0x4007264	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      2829	elf.c	FUNCTION_40	CALL_3
0x4007268	          0xc0e802	                               shr al, 2	      2829	elf.c	FUNCTION_40	CALL_3
0x400726b	          0x83e001	                              and eax, 1	      2829	elf.c	FUNCTION_40	CALL_3
0x400726e	           0xfb6d0	                           movzx edx, al	      2829	elf.c	FUNCTION_40	CALL_3
0x4007271	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2829	elf.c	FUNCTION_40	CALL_3
0x4007275	          0x488b00	                    mov rax, qword [rax]	      2829	elf.c	FUNCTION_40	CALL_3
0x4007278	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2829	elf.c	FUNCTION_40	CALL_3
0x400727c	          0x4889ce	                            mov rsi, rcx	      2829	elf.c	FUNCTION_40	CALL_3
0x400727f	          0x4889c7	                            mov rdi, rax	      2829	elf.c	FUNCTION_40	CALL_3
0x4007282	      0xe800000000	                          call 0x4007287	      2829	elf.c	FUNCTION_40	CALL_3
0x4007287	              0xc9	                                   leave	      2830	elf.c	FUNCTION_40
0x4007288	              0xc3	                                     ret	      2830	elf.c	FUNCTION_40
elf_parse_notes	ELSE,1:DO,0:CALL,10:WHILE,1:FOR,1:IF,11:SWITCH,1:functions,0	257
0x401a7ad	              0x55	                                push rbp	     11085	elf.c	FUNCTION_191
0x401a7ae	          0x4889e5	                            mov rbp, rsp	     11085	elf.c	FUNCTION_191
0x401a7b1	    0x4881ec200100	                          sub rsp, 0x120	     11085	elf.c	FUNCTION_191
0x401a7b8	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	     11085	elf.c	FUNCTION_191
0x401a7bf	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	     11085	elf.c	FUNCTION_191
0x401a7c6	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	     11085	elf.c	FUNCTION_191
0x401a7cd	    0x48898df0feff	            mov qword [rbp - 0x110], rcx	     11085	elf.c	FUNCTION_191
0x401a7d4	    0x4c8985e8feff	             mov qword [rbp - 0x118], r8	     11085	elf.c	FUNCTION_191
0x401a7db	    0x64488b042528	                mov rax, qword fs:[0x28]	     11085	elf.c	FUNCTION_191
0x401a7e4	        0x488945f8	                mov qword [rbp - 8], rax	     11085	elf.c	FUNCTION_191
0x401a7e8	            0x31c0	                            xor eax, eax	     11085	elf.c	FUNCTION_191
0x401a7ea	    0x4883bde8feff	              cmp qword [rbp - 0x118], 3	     11092	elf.c	FUNCTION_191	IF_1
0x401a7f2	            0x770b	                            ja 0x401a7ff	     11092	elf.c	FUNCTION_191	IF_1
0x401a7f4	    0x48c785e8feff	              mov qword [rbp - 0x118], 4	     11093	elf.c	FUNCTION_191	IF_1
0x401a7ff	    0x4883bde8feff	              cmp qword [rbp - 0x118], 4	     11094	elf.c	FUNCTION_191	IF_2
0x401a807	            0x7414	                            je 0x401a81d	     11094	elf.c	FUNCTION_191	IF_2
0x401a809	    0x4883bde8feff	              cmp qword [rbp - 0x118], 8	     11094	elf.c	FUNCTION_191	IF_2
0x401a811	            0x740a	                            je 0x401a81d	     11094	elf.c	FUNCTION_191	IF_2
0x401a813	      0xb800000000	                              mov eax, 0	     11095	elf.c	FUNCTION_191	IF_2
0x401a818	      0xe917040000	                           jmp 0x401ac34	     11095	elf.c	FUNCTION_191	IF_2
0x401a81d	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	     11097	elf.c	FUNCTION_191
0x401a824	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	     11097	elf.c	FUNCTION_191
0x401a82b	      0xe9e1030000	                           jmp 0x401ac11	     11098	elf.c	FUNCTION_191	WHILE_1
0x401a830	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	     11100	elf.c	FUNCTION_191	WHILE_1
0x401a837	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	     11100	elf.c	FUNCTION_191	WHILE_1
0x401a83e	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a845	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a84c	          0x4829c2	                            sub rdx, rax	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a84f	          0x4889d0	                            mov rax, rdx	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a852	          0x4889c2	                            mov rdx, rax	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a855	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a85c	          0x4801d0	                            add rax, rdx	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a85f	        0x4883f80b	                            cmp rax, 0xb	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a863	            0x770a	                            ja 0x401a86f	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a865	      0xb800000000	                              mov eax, 0	     11104	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a86a	      0xe9c5030000	                           jmp 0x401ac34	     11104	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401a86f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a876	        0x488b4008	                mov rax, qword [rax + 8]	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a87a	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a881	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a888	        0x4883c208	                              add rdx, 8	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a88c	          0x4889d7	                            mov rdi, rdx	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a88f	            0xffd0	                                call rax	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a891	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	     11106	elf.c	FUNCTION_191	WHILE_1
0x401a898	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	     11108	elf.c	FUNCTION_191	WHILE_1
0x401a89f	        0x488b4008	                mov rax, qword [rax + 8]	     11108	elf.c	FUNCTION_191	WHILE_1
0x401a8a3	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     11108	elf.c	FUNCTION_191	WHILE_1
0x401a8aa	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	     11108	elf.c	FUNCTION_191	WHILE_1
0x401a8b1	          0x4889d7	                            mov rdi, rdx	     11108	elf.c	FUNCTION_191	WHILE_1
0x401a8b4	            0xffd0	                                call rax	     11108	elf.c	FUNCTION_191	WHILE_1
0x401a8b6	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	     11108	elf.c	FUNCTION_191	WHILE_1
0x401a8bd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	     11109	elf.c	FUNCTION_191	WHILE_1
0x401a8c4	        0x4883c00c	                            add rax, 0xc	     11109	elf.c	FUNCTION_191	WHILE_1
0x401a8c8	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	     11109	elf.c	FUNCTION_191	WHILE_1
0x401a8cf	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8d6	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8dd	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8e4	          0x4829ca	                            sub rdx, rcx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8e7	          0x4889d1	                            mov rcx, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8ea	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8f1	          0x4801ca	                            add rdx, rcx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8f4	          0x4839d0	                            cmp rax, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8f7	            0x760a	                           jbe 0x401a903	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8f9	      0xb800000000	                              mov eax, 0	     11111	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a8fe	      0xe931030000	                           jmp 0x401ac34	     11111	elf.c	FUNCTION_191	WHILE_1	IF_4
0x401a903	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a90a	        0x488b4008	                mov rax, qword [rax + 8]	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a90e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a915	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a91c	        0x4883c204	                              add rdx, 4	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a920	          0x4889d7	                            mov rdi, rdx	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a923	            0xffd0	                                call rax	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a925	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	     11113	elf.c	FUNCTION_191	WHILE_1
0x401a92c	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a933	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a93a	          0x4801d0	                            add rax, rdx	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a93d	        0x488d500b	                    lea rdx, [rax + 0xb]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a941	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a948	          0x48f7d8	                                 neg rax	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a94b	          0x4821c2	                            and rdx, rax	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a94e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a955	          0x4801d0	                            add rax, rdx	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a958	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x401a95f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11115	elf.c	FUNCTION_191	WHILE_1
0x401a966	          0x4889c2	                            mov rdx, rax	     11115	elf.c	FUNCTION_191	WHILE_1
0x401a969	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	     11115	elf.c	FUNCTION_191	WHILE_1
0x401a970	          0x4829c2	                            sub rdx, rax	     11115	elf.c	FUNCTION_191	WHILE_1
0x401a973	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	     11115	elf.c	FUNCTION_191	WHILE_1
0x401a97a	          0x4801d0	                            add rax, rdx	     11115	elf.c	FUNCTION_191	WHILE_1
0x401a97d	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	     11115	elf.c	FUNCTION_191	WHILE_1
0x401a984	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a98b	          0x4885c0	                           test rax, rax	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a98e	            0x7451	                            je 0x401a9e1	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a990	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a997	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a99e	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9a5	          0x4801ca	                            add rdx, rcx	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9a8	          0x4839d0	                            cmp rax, rdx	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9ab	            0x732a	                           jae 0x401a9d7	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9ad	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9b4	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9bb	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9c2	          0x4829ca	                            sub rdx, rcx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9c5	          0x4889d1	                            mov rcx, rdx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9c8	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9cf	          0x4801ca	                            add rdx, rcx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9d2	          0x4839d0	                            cmp rax, rdx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9d5	            0x760a	                           jbe 0x401a9e1	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9d7	      0xb800000000	                              mov eax, 0	     11119	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9dc	      0xe953020000	                           jmp 0x401ac34	     11119	elf.c	FUNCTION_191	WHILE_1	IF_5
0x401a9e1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401a9e8	         0xfb64044	           movzx eax, byte [rax + 0x44] 	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401a9ec	          0x83e007	                              and eax, 7	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401a9ef	           0xfb6c0	                           movzx eax, al	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401a9f2	          0x83f801	                              cmp eax, 1	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401a9f5	     0xf842d010000	                            je 0x401ab28	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401a9fb	          0x83f803	                              cmp eax, 3	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401a9fe	            0x740a	                            je 0x401aa0a	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa00	      0xb801000000	                              mov eax, 1	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa05	      0xe92a020000	                           jmp 0x401ac34	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa0a	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa11	      0xbe00000000	                              mov esi, 0	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa16	      0xba12000000	                           mov edx, 0x12	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa1b	          0x4889c7	                            mov rdi, rax	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa1e	          0x4889d1	                            mov rcx, rdx	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa21	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401aa24	    0xc7851cffffff	               mov dword [rbp - 0xe4], 6	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x401aa2e	      0xe9d9000000	                           jmp 0x401ab0c	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x401aa33	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa3a	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa40	          0x4863d0	                         movsxd rdx, eax	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa43	          0x4889d0	                            mov rax, rdx	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa46	          0x4801c0	                            add rax, rax	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa49	          0x4801d0	                            add rax, rdx	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa4c	        0x48c1e003	                              shl rax, 3	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa50	          0x4801e8	                            add rax, rbp	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa53	    0x482d98000000	                           sub rax, 0x98	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa59	          0x488b00	                    mov rax, qword [rax]	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa5c	          0x4839c1	                            cmp rcx, rax	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa5f	     0xf82a7000000	                            jb 0x401ab0c	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401aa65	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa6b	          0x4863d0	                         movsxd rdx, eax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa6e	          0x4889d0	                            mov rax, rdx	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa71	          0x4801c0	                            add rax, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa74	          0x4801d0	                            add rax, rdx	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa77	        0x48c1e003	                              shl rax, 3	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa7b	          0x4801e8	                            add rax, rbp	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa7e	    0x482d98000000	                           sub rax, 0x98	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa84	          0x488b30	                    mov rsi, qword [rax]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa87	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa8d	          0x4863d0	                         movsxd rdx, eax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa90	          0x4889d0	                            mov rax, rdx	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa93	          0x4801c0	                            add rax, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa96	          0x4801d0	                            add rax, rdx	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa99	        0x48c1e003	                              shl rax, 3	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aa9d	          0x4801e8	                            add rax, rbp	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aaa0	    0x482da0000000	                           sub rax, 0xa0	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aaa6	          0x488b08	                    mov rcx, qword [rax]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aaa9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aab0	          0x4889f2	                            mov rdx, rsi	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aab3	          0x4889ce	                            mov rsi, rcx	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aab6	          0x4889c7	                            mov rdi, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aab9	      0xe800000000	                          call 0x401aabe	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aabe	            0x85c0	                           test eax, eax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aac0	            0x754a	                           jne 0x401ab0c	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x401aac2	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aac8	          0x4863d0	                         movsxd rdx, eax	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aacb	          0x4889d0	                            mov rax, rdx	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aace	          0x4801c0	                            add rax, rax	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aad1	          0x4801d0	                            add rax, rdx	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aad4	        0x48c1e003	                              shl rax, 3	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aad8	          0x4801e8	                            add rax, rbp	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aadb	    0x482d90000000	                           sub rax, 0x90	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aae1	          0x488b00	                    mov rax, qword [rax]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aae4	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aaeb	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aaf2	          0x4889ce	                            mov rsi, rcx	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aaf5	          0x4889d7	                            mov rdi, rdx	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aaf8	            0xffd0	                                call rax	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aafa	            0x85c0	                           test eax, eax	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401aafc	     0xf85bd000000	                           jne 0x401abbf	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x401ab02	      0xb800000000	                              mov eax, 0	     11154	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7
0x401ab07	      0xe928010000	                           jmp 0x401ac34	     11104	elf.c	FUNCTION_191	WHILE_1	IF_3
0x401ab0c	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x401ab12	          0x8d50ff	                      lea edx, [rax - 1]	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x401ab15	    0x89951cffffff	             mov dword [rbp - 0xe4], edx	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x401ab1b	            0x85c0	                           test eax, eax	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x401ab1d	     0xf8510ffffff	                           jne 0x401aa33	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x401ab23	      0xe99b000000	                           jmp 0x401abc3	     11158	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401ab28	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab2f	        0x4883f804	                              cmp rax, 4	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab33	            0x753f	                           jne 0x401ab74	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab35	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab3c	      0xbe00000000	                              mov esi, 0	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab41	          0x4889c7	                            mov rdi, rax	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab44	      0xe800000000	                          call 0x401ab49	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab49	            0x85c0	                           test eax, eax	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab4b	            0x7527	                           jne 0x401ab74	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x401ab4d	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x401ab54	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x401ab5b	          0x4889d6	                            mov rsi, rdx	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x401ab5e	          0x4889c7	                            mov rdi, rax	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x401ab61	      0xe8a8d4ffff	           call sym.elfobj_grok_gnu_note	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x401ab66	            0x85c0	                           test eax, eax	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x401ab68	            0x7553	                           jne 0x401abbd	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x401ab6a	      0xb800000000	                              mov eax, 0	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x401ab6f	      0xe9c0000000	                           jmp 0x401ac34	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x401ab74	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x401ab7b	        0x4883f808	                              cmp rax, 8	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x401ab7f	            0x7541	                           jne 0x401abc2	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x401ab81	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x401ab88	      0xbe00000000	                              mov esi, 0	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x401ab8d	          0x4889c7	                            mov rdi, rax	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x401ab90	      0xe800000000	                          call 0x401ab95	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x401ab95	            0x85c0	                           test eax, eax	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x401ab97	            0x7529	                           jne 0x401abc2	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x401ab99	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	     11170	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11	CALL_9
0x401aba0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	     11170	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11	CALL_9
0x401aba7	          0x4889d6	                            mov rsi, rdx	     11170	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11	CALL_9
0x401abaa	          0x4889c7	                            mov rdi, rax	     11170	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11	CALL_9
0x401abad	      0xe849d5ffff	       call sym.elfobj_grok_stapsdt_note	     11170	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11	CALL_9
0x401abb2	            0x85c0	                           test eax, eax	     11170	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11	CALL_9
0x401abb4	            0x750c	                           jne 0x401abc2	     11170	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11	CALL_9
0x401abb6	      0xb800000000	                              mov eax, 0	     11171	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11
0x401abbb	            0xeb77	                           jmp 0x401ac34	     11171	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	IF_11
0x401abbd	            0xeb03	                           jmp 0x401abc2	     11173	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401abbf	              0x90	                                     nop	     11155	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401abc0	            0xeb01	                           jmp 0x401abc3	     11155	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x401abc2	              0x90	                                     nop	     11173	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x401abc3	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abca	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abd1	          0x4801d0	                            add rax, rdx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abd4	        0x488d500b	                    lea rdx, [rax + 0xb]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abd8	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abdf	          0x48f7d8	                                 neg rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abe2	          0x4821c2	                            and rdx, rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abe5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abec	          0x4801c2	                            add rdx, rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abef	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abf6	          0x4801d0	                            add rax, rdx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abf9	        0x488d50ff	                      lea rdx, [rax - 1]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401abfd	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401ac04	          0x48f7d8	                                 neg rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401ac07	          0x4821d0	                            and rax, rdx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401ac0a	    0x48018520ffff	            add qword [rbp - 0xe0], rax 	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x401ac11	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	     11098	elf.c	FUNCTION_191	WHILE_1
0x401ac18	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	     11098	elf.c	FUNCTION_191	WHILE_1
0x401ac1f	          0x4801d0	                            add rax, rdx	     11098	elf.c	FUNCTION_191	WHILE_1
0x401ac22	    0x483b8520ffff	             cmp rax, qword [rbp - 0xe0]	     11098	elf.c	FUNCTION_191	WHILE_1
0x401ac29	     0xf8701fcffff	                            ja 0x401a830	     11098	elf.c	FUNCTION_191	WHILE_1
0x401ac2f	      0xb801000000	                              mov eax, 1	     11179	elf.c	FUNCTION_191
0x401ac34	        0x488b75f8	                mov rsi, qword [rbp - 8]	     11180	elf.c	FUNCTION_191
0x401ac38	    0x644833342528	                xor rsi, qword fs:[0x28]	     11180	elf.c	FUNCTION_191
0x401ac41	            0x7405	                            je 0x401ac48	     11180	elf.c	FUNCTION_191
0x401ac43	      0xe800000000	                          call 0x401ac48	     11180	elf.c	FUNCTION_191
0x401ac48	              0xc9	                                   leave	     11180	elf.c	FUNCTION_191
0x401ac49	              0xc3	                                     ret	     11180	elf.c	FUNCTION_191
elfcore_grok_netbsd_note	ELSE,0:DO,0:CALL,8:WHILE,0:FOR,0:IF,3:SWITCH,3:functions,0	90
0x40188bd	              0x55	                                push rbp	     10174	elf.c	FUNCTION_154
0x40188be	          0x4889e5	                            mov rbp, rsp	     10174	elf.c	FUNCTION_154
0x40188c1	        0x4883ec20	                           sub rsp, 0x20	     10174	elf.c	FUNCTION_154
0x40188c5	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10174	elf.c	FUNCTION_154
0x40188c9	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10174	elf.c	FUNCTION_154
0x40188cd	    0x64488b042528	                mov rax, qword fs:[0x28]	     10174	elf.c	FUNCTION_154
0x40188d6	        0x488945f8	                mov qword [rbp - 8], rax	     10174	elf.c	FUNCTION_154
0x40188da	            0x31c0	                            xor eax, eax	     10174	elf.c	FUNCTION_154
0x40188dc	        0x488d55f4	                    lea rdx, [rbp - 0xc]	     10177	elf.c	FUNCTION_154	IF_1	CALL_1
0x40188e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10177	elf.c	FUNCTION_154	IF_1	CALL_1
0x40188e4	          0x4889d6	                            mov rsi, rdx	     10177	elf.c	FUNCTION_154	IF_1	CALL_1
0x40188e7	          0x4889c7	                            mov rdi, rax	     10177	elf.c	FUNCTION_154	IF_1	CALL_1
0x40188ea	      0xe892feffff	       call sym.elfcore_netbsd_get_lwpid	     10177	elf.c	FUNCTION_154	IF_1	CALL_1
0x40188ef	            0x85c0	                           test eax, eax	     10177	elf.c	FUNCTION_154	IF_1	CALL_1
0x40188f1	            0x7418	                            je 0x401890b	     10177	elf.c	FUNCTION_154	IF_1	CALL_1
0x40188f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10178	elf.c	FUNCTION_154	CALL_2
0x40188f7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10178	elf.c	FUNCTION_154	CALL_2
0x40188fe	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10178	elf.c	FUNCTION_154	CALL_2
0x4018905	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     10178	elf.c	FUNCTION_154	CALL_2
0x4018908	          0x895008	                mov dword [rax + 8], edx	     10178	elf.c	FUNCTION_154	CALL_2
0x401890b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10180	elf.c	FUNCTION_154	IF_2
0x401890f	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10180	elf.c	FUNCTION_154	IF_2
0x4018913	        0x4883f801	                              cmp rax, 1	     10180	elf.c	FUNCTION_154	IF_2
0x4018917	            0x7518	                           jne 0x4018931	     10180	elf.c	FUNCTION_154	IF_2
0x4018919	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10187	elf.c	FUNCTION_154	IF_2	CALL_3
0x401891d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10187	elf.c	FUNCTION_154	IF_2	CALL_3
0x4018921	          0x4889d6	                            mov rsi, rdx	     10187	elf.c	FUNCTION_154	IF_2	CALL_3
0x4018924	          0x4889c7	                            mov rdi, rax	     10187	elf.c	FUNCTION_154	IF_2	CALL_3
0x4018927	      0xe8abfeffff	   call sym.elfcore_grok_netbsd_procinfo	     10187	elf.c	FUNCTION_154	IF_2	CALL_3
0x401892c	      0xe9c2000000	                           jmp 0x40189f3	     10187	elf.c	FUNCTION_154	IF_2	CALL_3
0x4018931	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10195	elf.c	FUNCTION_154	IF_3
0x4018935	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10195	elf.c	FUNCTION_154	IF_3
0x4018939	        0x4883f81f	                           cmp rax, 0x1f	     10195	elf.c	FUNCTION_154	IF_3
0x401893d	            0x770a	                            ja 0x4018949	     10195	elf.c	FUNCTION_154	IF_3
0x401893f	      0xb801000000	                              mov eax, 1	     10196	elf.c	FUNCTION_154	IF_3
0x4018944	      0xe9aa000000	                           jmp 0x40189f3	     10196	elf.c	FUNCTION_154	IF_3
0x4018949	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10199	elf.c	FUNCTION_154	SWITCH_1	CALL_4
0x401894d	          0x4889c7	                            mov rdi, rax	     10199	elf.c	FUNCTION_154	SWITCH_1	CALL_4
0x4018950	      0xe800000000	                          call 0x4018955	     10199	elf.c	FUNCTION_154	SWITCH_1	CALL_4
0x4018955	          0x83f805	                              cmp eax, 5	     10199	elf.c	FUNCTION_154	SWITCH_1	CALL_4
0x4018958	            0x7405	                            je 0x401895f	     10199	elf.c	FUNCTION_154	SWITCH_1	CALL_4
0x401895a	          0x83f820	                           cmp eax, 0x20	     10199	elf.c	FUNCTION_154	SWITCH_1	CALL_4
0x401895d	            0x754b	                           jne 0x40189aa	     10199	elf.c	FUNCTION_154	SWITCH_1	CALL_4
0x401895f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10206	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x4018963	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10206	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x4018967	        0x4883f820	                           cmp rax, 0x20	     10206	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x401896b	            0x7408	                            je 0x4018975	     10206	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x401896d	        0x4883f822	                           cmp rax, 0x22	     10206	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x4018971	            0x7419	                            je 0x401898c	     10206	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x4018973	            0xeb2e	                           jmp 0x40189a3	     10206	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x4018975	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10209	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_5
0x4018979	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10209	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_5
0x401897d	      0xbe00000000	                              mov esi, 0	     10209	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_5
0x4018982	          0x4889c7	                            mov rdi, rax	     10209	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_5
0x4018985	      0xe86fe2ffff	call sym.elfcore_make_note_pseudosection	     10209	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_5
0x401898a	            0xeb67	                           jmp 0x40189f3	     10209	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_5
0x401898c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10212	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_6
0x4018990	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10212	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_6
0x4018994	      0xbe00000000	                              mov esi, 0	     10212	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_6
0x4018999	          0x4889c7	                            mov rdi, rax	     10212	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_6
0x401899c	      0xe858e2ffff	call sym.elfcore_make_note_pseudosection	     10212	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_6
0x40189a1	            0xeb50	                           jmp 0x40189f3	     10212	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2	CALL_6
0x40189a3	      0xb801000000	                              mov eax, 1	     10215	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x40189a8	            0xeb49	                           jmp 0x40189f3	     10215	elf.c	FUNCTION_154	SWITCH_1	SWITCH_2
0x40189aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10222	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189ae	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10222	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189b2	        0x4883f821	                           cmp rax, 0x21	     10222	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189b6	            0x7408	                            je 0x40189c0	     10222	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189b8	        0x4883f823	                           cmp rax, 0x23	     10222	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189bc	            0x7419	                            je 0x40189d7	     10222	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189be	            0xeb2e	                           jmp 0x40189ee	     10222	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189c0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10225	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_7
0x40189c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10225	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_7
0x40189c8	      0xbe00000000	                              mov esi, 0	     10225	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_7
0x40189cd	          0x4889c7	                            mov rdi, rax	     10225	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_7
0x40189d0	      0xe824e2ffff	call sym.elfcore_make_note_pseudosection	     10225	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_7
0x40189d5	            0xeb1c	                           jmp 0x40189f3	     10225	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_7
0x40189d7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10228	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_8
0x40189db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10228	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_8
0x40189df	      0xbe00000000	                              mov esi, 0	     10228	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_8
0x40189e4	          0x4889c7	                            mov rdi, rax	     10228	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_8
0x40189e7	      0xe80de2ffff	call sym.elfcore_make_note_pseudosection	     10228	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_8
0x40189ec	            0xeb05	                           jmp 0x40189f3	     10228	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3	CALL_8
0x40189ee	      0xb801000000	                              mov eax, 1	     10231	elf.c	FUNCTION_154	SWITCH_1	SWITCH_3
0x40189f3	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10235	elf.c	FUNCTION_154
0x40189f7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10235	elf.c	FUNCTION_154
0x4018a00	            0x7405	                            je 0x4018a07	     10235	elf.c	FUNCTION_154
0x4018a02	      0xe800000000	                          call 0x4018a07	     10235	elf.c	FUNCTION_154
0x4018a07	              0xc9	                                   leave	     10235	elf.c	FUNCTION_154
0x4018a08	              0xc3	                                     ret	     10235	elf.c	FUNCTION_154
copy_private_bfd_data	ELSE,2:DO,0:CALL,14:WHILE,0:FOR,5:IF,13:SWITCH,0:functions,0	428
0x4012c1c	              0x55	                                push rbp	      7366	elf.c	FUNCTION_82
0x4012c1d	          0x4889e5	                            mov rbp, rsp	      7366	elf.c	FUNCTION_82
0x4012c20	              0x53	                                push rbx	      7366	elf.c	FUNCTION_82
0x4012c21	        0x4883ec68	                           sub rsp, 0x68	      7366	elf.c	FUNCTION_82
0x4012c25	        0x48897d98	             mov qword [rbp - 0x68], rdi	      7366	elf.c	FUNCTION_82
0x4012c29	        0x48897590	             mov qword [rbp - 0x70], rsi	      7366	elf.c	FUNCTION_82
0x4012c2d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7367	elf.c	FUNCTION_82	IF_1
0x4012c31	        0x488b4008	                mov rax, qword [rax + 8]	      7367	elf.c	FUNCTION_82	IF_1
0x4012c35	          0x8b4008	                mov eax, dword [rax + 8]	      7367	elf.c	FUNCTION_82	IF_1
0x4012c38	          0x83f805	                              cmp eax, 5	      7367	elf.c	FUNCTION_82	IF_1
0x4012c3b	            0x7510	                           jne 0x4012c4d	      7367	elf.c	FUNCTION_82	IF_1
0x4012c3d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7368	elf.c	FUNCTION_82	IF_1
0x4012c41	        0x488b4008	                mov rax, qword [rax + 8]	      7368	elf.c	FUNCTION_82	IF_1
0x4012c45	          0x8b4008	                mov eax, dword [rax + 8]	      7368	elf.c	FUNCTION_82	IF_1
0x4012c48	          0x83f805	                              cmp eax, 5	      7368	elf.c	FUNCTION_82	IF_1
0x4012c4b	            0x740a	                            je 0x4012c57	      7368	elf.c	FUNCTION_82	IF_1
0x4012c4d	      0xb801000000	                              mov eax, 1	      7369	elf.c	FUNCTION_82	IF_1
0x4012c52	      0xe947060000	                           jmp 0x401329e	      7369	elf.c	FUNCTION_82	IF_1
0x4012c57	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7371	elf.c	FUNCTION_82	IF_2	CALL_1
0x4012c5b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7371	elf.c	FUNCTION_82	IF_2	CALL_1
0x4012c62	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7371	elf.c	FUNCTION_82	IF_2	CALL_1
0x4012c66	          0x4885c0	                           test rax, rax	      7371	elf.c	FUNCTION_82	IF_2	CALL_1
0x4012c69	            0x750a	                           jne 0x4012c75	      7371	elf.c	FUNCTION_82	IF_2	CALL_1
0x4012c6b	      0xb801000000	                              mov eax, 1	      7372	elf.c	FUNCTION_82	IF_2
0x4012c70	      0xe929060000	                           jmp 0x401329e	      7372	elf.c	FUNCTION_82	IF_2
0x4012c75	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7374	elf.c	FUNCTION_82	IF_3
0x4012c79	        0x488b5008	                mov rdx, qword [rax + 8]	      7374	elf.c	FUNCTION_82	IF_3
0x4012c7d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7374	elf.c	FUNCTION_82	IF_3
0x4012c81	        0x488b4008	                mov rax, qword [rax + 8]	      7374	elf.c	FUNCTION_82	IF_3
0x4012c85	          0x4839c2	                            cmp rdx, rax	      7374	elf.c	FUNCTION_82	IF_3
0x4012c88	     0xf85f6040000	                           jne 0x4013184	      7374	elf.c	FUNCTION_82	IF_3
0x4012c8e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7384	elf.c	FUNCTION_82	IF_3	CALL_2
0x4012c92	        0x488b4008	                mov rax, qword [rax + 8]	      7384	elf.c	FUNCTION_82	IF_3	CALL_2
0x4012c96	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      7384	elf.c	FUNCTION_82	IF_3	CALL_2
0x4012c9d	        0x488945d8	             mov qword [rbp - 0x28], rax	      7384	elf.c	FUNCTION_82	IF_3	CALL_2
0x4012ca1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x4012ca5	     0xfb6808a0300	          movzx eax, byte [rax + 0x38a] 	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x4012cac	          0x83e040	                           and eax, 0x40	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x4012caf	            0x84c0	                             test al, al	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x4012cb1	     0xf85c9040000	                           jne 0x4013180	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x4012cb7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cbb	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cc2	        0x488945c0	             mov qword [rbp - 0x40], rax	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cc6	            0xeb1a	                           jmp 0x4012ce2	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cc8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7393	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012ccc	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      7393	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cd0	          0x83e2bf	                     and edx, 0xffffffbf	      7393	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cd3	          0x885024	               mov byte [rax + 0x24], dl	      7393	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cd6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7392	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cda	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7392	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012cde	        0x488945c0	             mov qword [rbp - 0x40], rax	      7392	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012ce2	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012ce7	            0x75df	                           jne 0x4012cc8	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x4012ce9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7395	elf.c	FUNCTION_82	IF_3	CALL_3
0x4012ced	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_3
0x4012cf4	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_3
0x4012cf7	          0x8945b0	             mov dword [rbp - 0x50], eax	      7395	elf.c	FUNCTION_82	IF_3	CALL_3
0x4012cfa	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4012d01	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4012d05	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4012d0c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4012d10	        0x488945b8	             mov qword [rbp - 0x48], rax	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4012d14	      0xe902040000	                           jmp 0x401311b	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4012d19	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d1d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d21	          0x4885c0	                           test rax, rax	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d24	            0x752f	                           jne 0x4012d55	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d26	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d2a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d2e	          0x4885c0	                           test rax, rax	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d31	            0x7522	                           jne 0x4012d55	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d33	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d37	          0x488b00	                    mov rax, qword [rax]	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d3a	        0x4883f803	                              cmp rax, 3	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d3e	     0xf8440040000	                            je 0x4013184	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d44	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d48	          0x488b00	                    mov rax, qword [rax]	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d4b	        0x4883f802	                              cmp rax, 2	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d4f	     0xf842f040000	                            je 0x4013184	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x4012d55	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4012d59	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4012d60	        0x488945c0	             mov qword [rbp - 0x40], rax	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4012d64	      0xe99e030000	                           jmp 0x4013107	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4012d69	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7414	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4012d6d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7414	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4012d71	        0x488945e0	             mov qword [rbp - 0x20], rax	      7414	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4012d75	      0x48837de000	               cmp qword [rbp - 0x20], 0	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x4012d7a	            0x740e	                            je 0x4012d8a	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x4012d7c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7416	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x4012d80	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      7416	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x4012d84	          0x83ca40	                            or edx, 0x40	      7416	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x4012d87	          0x885024	               mov byte [rax + 0x24], dl	      7416	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x4012d8a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7419	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	CALL_5
0x4012d8e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7419	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	CALL_5
0x4012d95	        0x488945e8	             mov qword [rbp - 0x18], rax	      7419	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	CALL_5
0x4012d99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012d9d	        0x488b4008	                mov rax, qword [rax + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012da1	      0x2500040000	                          and eax, 0x400	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012da6	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012da9	            0x7429	                            je 0x4012dd4	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012daf	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012db2	        0x4883f807	                              cmp rax, 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012db6	            0x7454	                            je 0x4012e0c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012db8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dbc	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dbf	    0x483d52e57464	                     cmp rax, 0x6474e552	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dc5	            0x7445	                            je 0x4012e0c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dc7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dcb	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dce	        0x4883f801	                              cmp rax, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dd2	            0x7438	                            je 0x4012e0c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dd8	        0x488b4008	                mov rax, qword [rax + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ddc	      0x2500040000	                          and eax, 0x400	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012de1	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012de4	     0xf8511030000	                           jne 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dee	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012df1	        0x4883f807	                              cmp rax, 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012df5	     0xf8400030000	                            je 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dfb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012dff	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e02	        0x4883f806	                              cmp rax, 6	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e06	     0xf84ef020000	                            je 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e10	        0x488b4008	                mov rax, qword [rax + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e14	          0x83e002	                              and eax, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e17	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e1a	            0x755b	                           jne 0x4012e77	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e1c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e20	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e23	        0x4883f801	                              cmp rax, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e27	     0xf84ce020000	                            je 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e2d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e31	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e34	        0x4883f802	                              cmp rax, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e38	     0xf84bd020000	                            je 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e3e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e42	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e45	    0x483d50e57464	                     cmp rax, 0x6474e550	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e4b	     0xf84aa020000	                            je 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e51	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e55	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e58	    0x483d52e57464	                     cmp rax, 0x6474e552	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e5e	     0xf8497020000	                            je 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e64	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e68	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e6b	    0x483d51e57464	                     cmp rax, 0x6474e551	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e71	     0xf8484020000	                            je 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e7b	          0x8b4004	                mov eax, dword [rax + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e7e	          0x83f808	                              cmp eax, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e81	     0xf8480000000	                            je 0x4012f07	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e8b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e8f	          0x4889c2	                            mov rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e92	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e96	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e9a	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012e9d	     0xf8258020000	                            jb 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ea3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ea7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012eab	          0x4889c2	                            mov rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012eae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012eb2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012eb6	          0x4829c2	                            sub rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012eb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ebd	        0x488b4008	                mov rax, qword [rax + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ec1	      0x2500040000	                          and eax, 0x400	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ec6	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ec9	            0x7419	                            je 0x4012ee4	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ecb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ecf	          0x8b4004	                mov eax, dword [rax + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ed2	          0x83f808	                              cmp eax, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ed5	            0x750d	                           jne 0x4012ee4	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ed7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012edb	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ede	        0x4883f807	                              cmp rax, 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ee2	            0x750a	                           jne 0x4012eee	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ee4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ee8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012eec	            0xeb05	                           jmp 0x4012ef3	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012eee	      0xb800000000	                              mov eax, 0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ef3	          0x4801c2	                            add rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ef6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012efa	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012efe	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f01	     0xf87f4010000	                            ja 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f0b	        0x488b4008	                mov rax, qword [rax + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f0f	          0x83e002	                              and eax, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f12	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f15	            0x747a	                            je 0x4012f91	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f1b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f1f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f23	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f27	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f2a	     0xf82cb010000	                            jb 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f34	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f38	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f3c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f40	          0x4829c2	                            sub rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f47	        0x488b4008	                mov rax, qword [rax + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f4b	      0x2500040000	                          and eax, 0x400	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f50	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f53	            0x7419	                            je 0x4012f6e	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f59	          0x8b4004	                mov eax, dword [rax + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f5c	          0x83f808	                              cmp eax, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f5f	            0x750d	                           jne 0x4012f6e	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f61	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f65	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f68	        0x4883f807	                              cmp rax, 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f6c	            0x750a	                           jne 0x4012f78	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f72	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f76	            0xeb05	                           jmp 0x4012f7d	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f78	      0xb800000000	                              mov eax, 0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f7d	          0x4801c2	                            add rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f80	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f84	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f88	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f8b	     0xf876a010000	                            ja 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f91	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f95	          0x488b00	                    mov rax, qword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f98	        0x4883f802	                              cmp rax, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012f9c	     0xf85be000000	                           jne 0x4013060	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fa6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012faa	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fad	     0xf85ad000000	                           jne 0x4013060	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fb7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fbb	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fbe	     0xf849c000000	                            je 0x4013060	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fc8	          0x8b4004	                mov eax, dword [rax + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fcb	          0x83f808	                              cmp eax, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fce	            0x7443	                            je 0x4013013	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fd4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fd8	          0x4889c2	                            mov rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fdb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fdf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fe3	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fe6	     0xf860f010000	                           jbe 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ff0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ff4	          0x4889c2	                            mov rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ff7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012ffb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4012fff	          0x4829c2	                            sub rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013002	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013006	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401300a	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401300d	     0xf83e8000000	                           jae 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013013	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013017	        0x488b4008	                mov rax, qword [rax + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401301b	          0x83e002	                              and eax, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401301e	          0x4885c0	                           test rax, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013021	            0x743d	                            je 0x4013060	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013023	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013027	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401302b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401302f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013033	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013036	     0xf86bf000000	                           jbe 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401303c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013040	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013044	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013048	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401304c	          0x4829c2	                            sub rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401304f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013053	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013057	          0x4839c2	                            cmp rdx, rax	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x401305a	     0xf839b000000	                           jae 0x40130fb	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x4013060	      0x48837de000	               cmp qword [rbp - 0x20], 0	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013065	     0xf8419010000	                            je 0x4013184	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x401306b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x401306f	          0x8b5020	            mov edx, dword [rax + 0x20] 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013072	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013076	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013079	            0x39c2	                            cmp edx, eax	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x401307b	     0xf8503010000	                           jne 0x4013184	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013081	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013085	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013089	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x401308d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013091	          0x4839c2	                            cmp rdx, rax	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x4013094	     0xf85ea000000	                           jne 0x4013184	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x401309a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x401309e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130a6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130aa	          0x4839c2	                            cmp rdx, rax	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130ad	     0xf85d1000000	                           jne 0x4013184	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130b7	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130bf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130c3	          0x4839c2	                            cmp rdx, rax	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130c6	     0xf85b8000000	                           jne 0x4013184	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130d0	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130d8	        0x488b4040	            mov rax, qword [rax + 0x40] 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130dc	          0x4839c2	                            cmp rdx, rax	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130df	     0xf859f000000	                           jne 0x4013184	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130e9	          0x8b5070	            mov edx, dword [rax + 0x70] 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130f0	          0x8b4070	            mov eax, dword [rax + 0x70] 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130f3	            0x39c2	                            cmp edx, eax	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130f5	     0xf8589000000	                           jne 0x4013184	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x40130fb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7410	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x40130ff	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7410	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4013103	        0x488945c0	             mov qword [rbp - 0x40], rax	      7410	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4013107	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x401310c	     0xf8557fcffff	                           jne 0x4012d69	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x4013112	        0x8345a801	               add dword [rbp - 0x58], 1	      7398	elf.c	FUNCTION_82	IF_3	FOR_2
0x4013116	      0x488345b840	           add qword [rbp - 0x48], 0x40 	      7398	elf.c	FUNCTION_82	IF_3	FOR_2
0x401311b	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x401311e	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4013121	     0xf82f2fbffff	                            jb 0x4012d19	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x4013127	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x401312b	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x4013132	        0x488945c0	             mov qword [rbp - 0x40], rax	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x4013136	            0xeb29	                           jmp 0x4013161	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x4013138	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x401313c	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x4013140	          0x83e040	                           and eax, 0x40	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x4013143	            0x84c0	                             test al, al	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x4013145	            0x743c	                            je 0x4013183	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x4013147	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x401314b	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x401314f	          0x83e2bf	                     and edx, 0xffffffbf	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x4013152	          0x885024	               mov byte [rax + 0x24], dl	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x4013155	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x4013159	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x401315d	        0x488945c0	             mov qword [rbp - 0x40], rax	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x4013161	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x4013166	            0x75d0	                           jne 0x4013138	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x4013168	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      7447	elf.c	FUNCTION_82	IF_3	CALL_7
0x401316c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7447	elf.c	FUNCTION_82	IF_3	CALL_7
0x4013170	          0x4889d6	                            mov rsi, rdx	      7447	elf.c	FUNCTION_82	IF_3	CALL_7
0x4013173	          0x4889c7	                            mov rdi, rax	      7447	elf.c	FUNCTION_82	IF_3	CALL_7
0x4013176	      0xe8b5efffff	        call sym.copy_elf_program_header	      7447	elf.c	FUNCTION_82	IF_3	CALL_7
0x401317b	      0xe91e010000	                           jmp 0x401329e	      7447	elf.c	FUNCTION_82	IF_3	CALL_7
0x4013180	              0x90	                                     nop	      7388	elf.c	FUNCTION_82	IF_3	IF_4
0x4013181	            0xeb01	                           jmp 0x4013184	      7388	elf.c	FUNCTION_82	IF_3	IF_4
0x4013183	              0x90	                                     nop	      7442	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x4013184	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7451	elf.c	FUNCTION_82	IF_10
0x4013188	        0x488b5008	                mov rdx, qword [rax + 8]	      7451	elf.c	FUNCTION_82	IF_10
0x401318c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7451	elf.c	FUNCTION_82	IF_10
0x4013190	        0x488b4008	                mov rax, qword [rax + 8]	      7451	elf.c	FUNCTION_82	IF_10
0x4013194	          0x4839c2	                            cmp rdx, rax	      7451	elf.c	FUNCTION_82	IF_10
0x4013197	     0xf85ee000000	                           jne 0x401328b	      7451	elf.c	FUNCTION_82	IF_10
0x401319d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7457	elf.c	FUNCTION_82	IF_10	CALL_8
0x40131a1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_8
0x40131a8	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_8
0x40131ab	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7457	elf.c	FUNCTION_82	IF_10	CALL_8
0x40131ae	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      7458	elf.c	FUNCTION_82	IF_10
0x40131b6	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x40131bd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x40131c1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x40131c8	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x40131cc	        0x488945c8	             mov qword [rbp - 0x38], rax	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x40131d0	            0xeb7a	                           jmp 0x401324c	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x40131d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131d6	          0x488b00	                    mov rax, qword [rax]	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131d9	        0x4883f801	                              cmp rax, 1	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131dd	            0x7564	                           jne 0x4013243	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131e3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131e7	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131eb	            0x7656	                           jbe 0x4013243	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x40131ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x40131f1	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x40131f5	    0x48b800000000	         movabs rax, 0x4000000000000000 	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x40131ff	          0x4839c2	                            cmp rdx, rax	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x4013202	            0x7633	                           jbe 0x4013237	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x4013204	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7471	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x4013208	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      7471	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x401320c	      0xbe00000000	                              mov esi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013211	      0xbf00000000	                              mov edi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013216	      0xe800000000	                          call 0x401321b	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x401321b	          0x4889c1	                            mov rcx, rax	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x401321e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013222	          0x4889da	                            mov rdx, rbx	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013225	          0x4889c6	                            mov rsi, rax	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013228	          0x4889cf	                            mov rdi, rcx	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x401322b	      0xb800000000	                              mov eax, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013230	      0xe800000000	                          call 0x4013235	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013235	            0xeb0c	                           jmp 0x4013243	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x4013237	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7473	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	ELSE_2
0x401323b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7473	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	ELSE_2
0x401323f	        0x488945d0	             mov qword [rbp - 0x30], rax	      7473	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	ELSE_2
0x4013243	        0x8345ac01	               add dword [rbp - 0x54], 1	      7462	elf.c	FUNCTION_82	IF_10	FOR_5
0x4013247	      0x488345c840	           add qword [rbp - 0x38], 0x40 	      7462	elf.c	FUNCTION_82	IF_10	FOR_5
0x401324c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x401324f	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x4013252	     0xf827affffff	                            jb 0x40131d2	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x4013258	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x401325c	        0x488b4008	                mov rax, qword [rax + 8]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x4013260	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x4013267	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x401326b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x401326f	            0x741a	                            je 0x401328b	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x4013271	        0x488b4590	             mov rax, qword [rbp - 0x70]	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x4013275	        0x488b4008	                mov rax, qword [rax + 8]	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x4013279	          0x488b00	                    mov rax, qword [rax]	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x401327c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x4013280	          0x4889d6	                            mov rsi, rdx	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x4013283	          0x4889c7	                            mov rdi, rax	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x4013286	      0xe800000000	                          call 0x401328b	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x401328b	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      7480	elf.c	FUNCTION_82	CALL_14
0x401328f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7480	elf.c	FUNCTION_82	CALL_14
0x4013293	          0x4889d6	                            mov rsi, rdx	      7480	elf.c	FUNCTION_82	CALL_14
0x4013296	          0x4889c7	                            mov rdi, rax	      7480	elf.c	FUNCTION_82	CALL_14
0x4013299	      0xe8d7d0ffff	     call sym.rewrite_elf_program_header	      7480	elf.c	FUNCTION_82	CALL_14
0x401329e	        0x4883c468	                           add rsp, 0x68	      7481	elf.c	FUNCTION_82
0x40132a2	              0x5b	                                 pop rbx	      7481	elf.c	FUNCTION_82
0x40132a3	              0x5d	                                 pop rbp	      7481	elf.c	FUNCTION_82
0x40132a4	              0xc3	                                     ret	      7481	elf.c	FUNCTION_82
bfd_sym_from_r_symndx	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	79
0x4006e4b	              0x55	                                push rbp	      2560	elf.c	FUNCTION_37
0x4006e4c	          0x4889e5	                            mov rbp, rsp	      2560	elf.c	FUNCTION_37
0x4006e4f	        0x4883ec60	                           sub rsp, 0x60	      2560	elf.c	FUNCTION_37
0x4006e53	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2560	elf.c	FUNCTION_37
0x4006e57	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2560	elf.c	FUNCTION_37
0x4006e5b	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2560	elf.c	FUNCTION_37
0x4006e5f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2560	elf.c	FUNCTION_37
0x4006e68	        0x488945f8	                mov qword [rbp - 8], rax	      2560	elf.c	FUNCTION_37
0x4006e6c	            0x31c0	                            xor eax, eax	      2560	elf.c	FUNCTION_37
0x4006e6e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2561	elf.c	FUNCTION_37
0x4006e72	          0x83e01f	                           and eax, 0x1f	      2561	elf.c	FUNCTION_37
0x4006e75	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2561	elf.c	FUNCTION_37
0x4006e78	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2563	elf.c	FUNCTION_37	IF_1
0x4006e7c	          0x488b00	                    mov rax, qword [rax]	      2563	elf.c	FUNCTION_37	IF_1
0x4006e7f	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      2563	elf.c	FUNCTION_37	IF_1
0x4006e83	            0x7516	                           jne 0x4006e9b	      2563	elf.c	FUNCTION_37	IF_1
0x4006e85	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2563	elf.c	FUNCTION_37	IF_1
0x4006e89	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2563	elf.c	FUNCTION_37	IF_1
0x4006e8c	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2563	elf.c	FUNCTION_37	IF_1
0x4006e91	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2563	elf.c	FUNCTION_37	IF_1
0x4006e95	     0xf84aa000000	                            je 0x4006f45	      2563	elf.c	FUNCTION_37	IF_1
0x4006e9b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x4006e9f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x4006ea6	        0x4883c068	                           add rax, 0x68	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x4006eaa	        0x488945c8	             mov qword [rbp - 0x38], rax	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x4006eae	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006eb1	        0x4883c008	                              add rax, 8	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006eb5	        0x48c1e005	                              shl rax, 5	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006eb9	          0x4889c2	                            mov rdx, rax	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ebc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ec0	          0x4801d0	                            add rax, rdx	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ec3	        0x4c8d4008	                       lea r8, [rax + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ec7	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ecb	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ecf	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ed3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ed7	        0x4883ec08	                              sub rsp, 8	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006edb	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006edf	              0x51	                                push rcx	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ee0	          0x4989f9	                             mov r9, rdi	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ee3	          0x4889d1	                            mov rcx, rdx	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ee6	      0xba01000000	                              mov edx, 1	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006eeb	          0x4889c7	                            mov rdi, rax	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006eee	      0xe800000000	                          call 0x4006ef3	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ef3	        0x4883c410	                           add rsp, 0x10	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006ef7	          0x4885c0	                           test rax, rax	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006efa	            0x7507	                           jne 0x4006f03	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4006efc	      0xb800000000	                              mov eax, 0	      2572	elf.c	FUNCTION_37	IF_1	IF_2
0x4006f01	            0xeb5b	                           jmp 0x4006f5e	      2572	elf.c	FUNCTION_37	IF_1	IF_2
0x4006f03	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4006f07	          0x488b00	                    mov rax, qword [rax]	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4006f0a	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4006f0e	            0x7425	                            je 0x4006f35	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4006f10	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2576	elf.c	FUNCTION_37	IF_1	IF_3	CALL_3
0x4006f14	        0x4883c008	                              add rax, 8	      2576	elf.c	FUNCTION_37	IF_1	IF_3	CALL_3
0x4006f18	      0xba00010000	                          mov edx, 0x100	      2576	elf.c	FUNCTION_37	IF_1	IF_3	CALL_3
0x4006f1d	      0xbeffffffff	                     mov esi, 0xffffffff	      2576	elf.c	FUNCTION_37	IF_1	IF_3	CALL_3
0x4006f22	          0x4889c7	                            mov rdi, rax	      2576	elf.c	FUNCTION_37	IF_1	IF_3	CALL_3
0x4006f25	      0xe800000000	                          call 0x4006f2a	      2576	elf.c	FUNCTION_37	IF_1	IF_3	CALL_3
0x4006f2a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2577	elf.c	FUNCTION_37	IF_1	IF_3
0x4006f2e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2577	elf.c	FUNCTION_37	IF_1	IF_3
0x4006f32	          0x488910	                    mov qword [rax], rdx	      2577	elf.c	FUNCTION_37	IF_1	IF_3
0x4006f35	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2579	elf.c	FUNCTION_37	IF_1
0x4006f39	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2579	elf.c	FUNCTION_37	IF_1
0x4006f3c	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2579	elf.c	FUNCTION_37	IF_1
0x4006f40	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      2579	elf.c	FUNCTION_37	IF_1
0x4006f45	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2582	elf.c	FUNCTION_37
0x4006f48	        0x4883c008	                              add rax, 8	      2582	elf.c	FUNCTION_37
0x4006f4c	        0x48c1e005	                              shl rax, 5	      2582	elf.c	FUNCTION_37
0x4006f50	          0x4889c2	                            mov rdx, rax	      2582	elf.c	FUNCTION_37
0x4006f53	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2582	elf.c	FUNCTION_37
0x4006f57	          0x4801d0	                            add rax, rdx	      2582	elf.c	FUNCTION_37
0x4006f5a	        0x4883c008	                              add rax, 8	      2582	elf.c	FUNCTION_37
0x4006f5e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2583	elf.c	FUNCTION_37
0x4006f62	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2583	elf.c	FUNCTION_37
0x4006f6b	            0x7405	                            je 0x4006f72	      2583	elf.c	FUNCTION_37
0x4006f6d	      0xe800000000	                          call 0x4006f72	      2583	elf.c	FUNCTION_37
0x4006f72	              0xc9	                                   leave	      2583	elf.c	FUNCTION_37
0x4006f73	              0xc3	                                     ret	      2583	elf.c	FUNCTION_37
_bfd_elf_swap_verdaux_in	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	28
0x400096f	              0x55	                                push rbp	       102	elf.c	FUNCTION_3
0x4000970	          0x4889e5	                            mov rbp, rsp	       102	elf.c	FUNCTION_3
0x4000973	        0x4883ec20	                           sub rsp, 0x20	       102	elf.c	FUNCTION_3
0x4000977	        0x48897df8	                mov qword [rbp - 8], rdi	       102	elf.c	FUNCTION_3
0x400097b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       102	elf.c	FUNCTION_3
0x400097f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       102	elf.c	FUNCTION_3
0x4000983	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	elf.c	FUNCTION_3
0x4000987	        0x488b4008	                mov rax, qword [rax + 8]	       103	elf.c	FUNCTION_3
0x400098b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       103	elf.c	FUNCTION_3
0x4000992	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       103	elf.c	FUNCTION_3
0x4000996	          0x4889d7	                            mov rdi, rdx	       103	elf.c	FUNCTION_3
0x4000999	            0xffd0	                                call rax	       103	elf.c	FUNCTION_3
0x400099b	          0x4889c2	                            mov rdx, rax	       103	elf.c	FUNCTION_3
0x400099e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       103	elf.c	FUNCTION_3
0x40009a2	          0x488910	                    mov qword [rax], rdx	       103	elf.c	FUNCTION_3
0x40009a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	elf.c	FUNCTION_3
0x40009a9	        0x488b4008	                mov rax, qword [rax + 8]	       104	elf.c	FUNCTION_3
0x40009ad	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       104	elf.c	FUNCTION_3
0x40009b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       104	elf.c	FUNCTION_3
0x40009b8	        0x4883c204	                              add rdx, 4	       104	elf.c	FUNCTION_3
0x40009bc	          0x4889d7	                            mov rdi, rdx	       104	elf.c	FUNCTION_3
0x40009bf	            0xffd0	                                call rax	       104	elf.c	FUNCTION_3
0x40009c1	          0x4889c2	                            mov rdx, rax	       104	elf.c	FUNCTION_3
0x40009c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       104	elf.c	FUNCTION_3
0x40009c8	        0x48895008	                mov qword [rax + 8], rdx	       104	elf.c	FUNCTION_3
0x40009cc	              0x90	                                     nop	       105	elf.c	FUNCTION_3
0x40009cd	              0xc9	                                   leave	       105	elf.c	FUNCTION_3
0x40009ce	              0xc3	                                     ret	       105	elf.c	FUNCTION_3
_bfd_elf_write_object_contents	ELSE,0:DO,0:CALL,17:WHILE,0:FOR,1:IF,11:SWITCH,0:functions,0	217
0x400fd59	              0x55	                                push rbp	      6381	elf.c	FUNCTION_76
0x400fd5a	          0x4889e5	                            mov rbp, rsp	      6381	elf.c	FUNCTION_76
0x400fd5d	              0x53	                                push rbx	      6381	elf.c	FUNCTION_76
0x400fd5e	        0x4883ec58	                           sub rsp, 0x58	      6381	elf.c	FUNCTION_76
0x400fd62	        0x48897da8	             mov qword [rbp - 0x58], rdi	      6381	elf.c	FUNCTION_76
0x400fd66	    0x64488b042528	                mov rax, qword fs:[0x28]	      6381	elf.c	FUNCTION_76
0x400fd6f	        0x488945e8	             mov qword [rbp - 0x18], rax	      6381	elf.c	FUNCTION_76
0x400fd73	            0x31c0	                            xor eax, eax	      6381	elf.c	FUNCTION_76
0x400fd75	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6382	elf.c	FUNCTION_76	CALL_1
0x400fd79	        0x488b4008	                mov rax, qword [rax + 8]	      6382	elf.c	FUNCTION_76	CALL_1
0x400fd7d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6382	elf.c	FUNCTION_76	CALL_1
0x400fd84	        0x488945c8	             mov qword [rbp - 0x38], rax	      6382	elf.c	FUNCTION_76	CALL_1
0x400fd88	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6388	elf.c	FUNCTION_76	IF_1
0x400fd8c	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      6388	elf.c	FUNCTION_76	IF_1
0x400fd90	          0x83e040	                           and eax, 0x40	      6388	elf.c	FUNCTION_76	IF_1
0x400fd93	            0x84c0	                             test al, al	      6388	elf.c	FUNCTION_76	IF_1
0x400fd95	            0x751f	                           jne 0x400fdb6	      6388	elf.c	FUNCTION_76	IF_1
0x400fd97	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400fd9b	      0xbe00000000	                              mov esi, 0	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400fda0	          0x4889c7	                            mov rdi, rax	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400fda3	      0xe800000000	                          call 0x400fda8	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400fda8	            0x85c0	                           test eax, eax	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400fdaa	            0x750a	                           jne 0x400fdb6	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400fdac	      0xb800000000	                              mov eax, 0	      6390	elf.c	FUNCTION_76	IF_1
0x400fdb1	      0xe9ef020000	                           jmp 0x40100a5	      6390	elf.c	FUNCTION_76	IF_1
0x400fdb6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6392	elf.c	FUNCTION_76	CALL_3
0x400fdba	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400fdc1	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400fdc5	        0x488945d0	             mov qword [rbp - 0x30], rax	      6392	elf.c	FUNCTION_76	CALL_3
0x400fdc9	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6394	elf.c	FUNCTION_76
0x400fdd0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6395	elf.c	FUNCTION_76	CALL_4
0x400fdd4	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6395	elf.c	FUNCTION_76	CALL_4
0x400fddb	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      6395	elf.c	FUNCTION_76	CALL_4
0x400fddf	        0x488d55bc	                   lea rdx, [rbp - 0x44]	      6395	elf.c	FUNCTION_76	CALL_4
0x400fde3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6395	elf.c	FUNCTION_76	CALL_4
0x400fde7	          0x4889ce	                            mov rsi, rcx	      6395	elf.c	FUNCTION_76	CALL_4
0x400fdea	          0x4889c7	                            mov rdi, rax	      6395	elf.c	FUNCTION_76	CALL_4
0x400fded	      0xe800000000	                          call 0x400fdf2	      6395	elf.c	FUNCTION_76	CALL_4
0x400fdf2	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6396	elf.c	FUNCTION_76	IF_2
0x400fdf5	            0x85c0	                           test eax, eax	      6396	elf.c	FUNCTION_76	IF_2
0x400fdf7	            0x740a	                            je 0x400fe03	      6396	elf.c	FUNCTION_76	IF_2
0x400fdf9	      0xb800000000	                              mov eax, 0	      6397	elf.c	FUNCTION_76	IF_2
0x400fdfe	      0xe9a2020000	                           jmp 0x40100a5	      6397	elf.c	FUNCTION_76	IF_2
0x400fe03	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6399	elf.c	FUNCTION_76	IF_3	CALL_5
0x400fe07	          0x4889c7	                            mov rdi, rax	      6399	elf.c	FUNCTION_76	IF_3	CALL_5
0x400fe0a	      0xe897fbffff	call sym._bfd_elf_assign_file_positions_for_non_load	      6399	elf.c	FUNCTION_76	IF_3	CALL_5
0x400fe0f	            0x85c0	                           test eax, eax	      6399	elf.c	FUNCTION_76	IF_3	CALL_5
0x400fe11	            0x750a	                           jne 0x400fe1d	      6399	elf.c	FUNCTION_76	IF_3	CALL_5
0x400fe13	      0xb800000000	                              mov eax, 0	      6400	elf.c	FUNCTION_76	IF_3
0x400fe18	      0xe988020000	                           jmp 0x40100a5	      6400	elf.c	FUNCTION_76	IF_3
0x400fe1d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6403	elf.c	FUNCTION_76	CALL_6
0x400fe21	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6403	elf.c	FUNCTION_76	CALL_6
0x400fe28	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      6403	elf.c	FUNCTION_76	CALL_6
0x400fe2e	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6403	elf.c	FUNCTION_76	CALL_6
0x400fe31	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      6404	elf.c	FUNCTION_76	FOR_1
0x400fe38	      0xe94b010000	                           jmp 0x400ff88	      6404	elf.c	FUNCTION_76	FOR_1
0x400fe3d	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6406	elf.c	FUNCTION_76	FOR_1
0x400fe40	    0x488d14c50000	                        lea rdx, [rax*8]	      6406	elf.c	FUNCTION_76	FOR_1
0x400fe48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6406	elf.c	FUNCTION_76	FOR_1
0x400fe4c	          0x4801d0	                            add rax, rdx	      6406	elf.c	FUNCTION_76	FOR_1
0x400fe4f	          0x488b18	                    mov rbx, qword [rax]	      6406	elf.c	FUNCTION_76	FOR_1
0x400fe52	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6408	elf.c	FUNCTION_76	FOR_1
0x400fe55	    0x488d14c50000	                        lea rdx, [rax*8]	      6408	elf.c	FUNCTION_76	FOR_1
0x400fe5d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6408	elf.c	FUNCTION_76	FOR_1
0x400fe61	          0x4801d0	                            add rax, rdx	      6408	elf.c	FUNCTION_76	FOR_1
0x400fe64	          0x488b00	                    mov rax, qword [rax]	      6408	elf.c	FUNCTION_76	FOR_1
0x400fe67	            0x8b00	                    mov eax, dword [rax]	      6408	elf.c	FUNCTION_76	FOR_1
0x400fe69	            0x89c2	                            mov edx, eax	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe6b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe6f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe76	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe7d	        0x488b4008	                mov rax, qword [rax + 8]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe81	          0x4889d6	                            mov rsi, rdx	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe84	          0x4889c7	                            mov rdi, rax	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe87	      0xe800000000	                          call 0x400fe8c	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe8c	            0x8903	                    mov dword [rbx], eax	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400fe8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400fe92	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400fe99	          0x4885c0	                           test rax, rax	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400fe9c	            0x743a	                            je 0x400fed8	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400fe9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fea2	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fea9	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400feac	    0x488d0cd50000	                        lea rcx, [rdx*8]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400feb4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400feb8	          0x4801ca	                            add rdx, rcx	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400febb	          0x488b0a	                    mov rcx, qword [rdx]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400febe	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fec2	          0x4889ce	                            mov rsi, rcx	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fec5	          0x4889d7	                            mov rdi, rdx	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fec8	            0xffd0	                                call rax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400feca	            0x85c0	                           test eax, eax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fecc	            0x750a	                           jne 0x400fed8	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fece	      0xb800000000	                              mov eax, 0	      6411	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fed3	      0xe9cd010000	                           jmp 0x40100a5	      6411	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400fed8	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400fedb	    0x488d14c50000	                        lea rdx, [rax*8]	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400fee3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400fee7	          0x4801d0	                            add rax, rdx	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400feea	          0x488b00	                    mov rax, qword [rax]	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400feed	        0x488b4048	            mov rax, qword [rax + 0x48] 	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400fef1	          0x4885c0	                           test rax, rax	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400fef4	     0xf848a000000	                            je 0x400ff84	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400fefa	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400fefd	    0x488d14c50000	                        lea rdx, [rax*8]	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ff05	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ff09	          0x4801d0	                            add rax, rdx	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ff0c	          0x488b00	                    mov rax, qword [rax]	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ff0f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ff13	        0x488945d8	             mov qword [rbp - 0x28], rax	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ff17	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff1a	    0x488d14c50000	                        lea rdx, [rax*8]	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff22	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff26	          0x4801d0	                            add rax, rdx	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff29	          0x488b00	                    mov rax, qword [rax]	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff2c	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff30	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff34	      0xba00000000	                              mov edx, 0	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff39	          0x4889ce	                            mov rsi, rcx	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff3c	          0x4889c7	                            mov rdi, rax	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff3f	      0xe800000000	                          call 0x400ff44	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff44	            0x85c0	                           test eax, eax	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff46	            0x7532	                           jne 0x400ff7a	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ff48	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff4b	    0x488d14c50000	                        lea rdx, [rax*8]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff53	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff57	          0x4801d0	                            add rax, rdx	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff5a	          0x488b00	                    mov rax, qword [rax]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff5d	        0x488b4048	            mov rax, qword [rax + 0x48] 	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff61	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff65	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff69	          0x4889ce	                            mov rsi, rcx	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff6c	          0x4889c7	                            mov rdi, rax	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff6f	      0xe800000000	                          call 0x400ff74	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff74	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff78	            0x740a	                            je 0x400ff84	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ff7a	      0xb800000000	                              mov eax, 0	      6418	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7
0x400ff7f	      0xe921010000	                           jmp 0x40100a5	      6418	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7
0x400ff84	        0x8345c001	               add dword [rbp - 0x40], 1	      6404	elf.c	FUNCTION_76	FOR_1
0x400ff88	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6404	elf.c	FUNCTION_76	FOR_1
0x400ff8b	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      6404	elf.c	FUNCTION_76	FOR_1
0x400ff8e	     0xf82a9feffff	                            jb 0x400fe3d	      6404	elf.c	FUNCTION_76	FOR_1
0x400ff94	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6423	elf.c	FUNCTION_76	CALL_11
0x400ff98	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6423	elf.c	FUNCTION_76	CALL_11
0x400ff9f	        0x488945e0	             mov qword [rbp - 0x20], rax	      6423	elf.c	FUNCTION_76	CALL_11
0x400ffa3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ffa7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ffae	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ffb5	        0x488b4008	                mov rax, qword [rax + 8]	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ffb9	          0x4885c0	                           test rax, rax	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ffbc	            0x7456	                            je 0x4010014	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ffbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffc2	    0x488b88d00000	            mov rcx, qword [rax + 0xd0] 	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffc9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffcd	      0xba00000000	                              mov edx, 0	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffd2	          0x4889ce	                            mov rsi, rcx	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffd5	          0x4889c7	                            mov rdi, rax	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffd8	      0xe800000000	                          call 0x400ffdd	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffdd	            0x85c0	                           test eax, eax	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffdf	            0x7529	                           jne 0x401000a	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ffe1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400ffe5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400ffec	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400fff3	        0x488b5008	                mov rdx, qword [rax + 8]	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400fff7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400fffb	          0x4889d6	                            mov rsi, rdx	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400fffe	          0x4889c7	                            mov rdi, rax	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4010001	      0xe800000000	                          call 0x4010006	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4010006	            0x85c0	                           test eax, eax	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4010008	            0x750a	                           jne 0x4010014	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x401000a	      0xb800000000	                              mov eax, 0	      6427	elf.c	FUNCTION_76	IF_8
0x401000f	      0xe991000000	                           jmp 0x40100a5	      6427	elf.c	FUNCTION_76	IF_8
0x4010014	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6429	elf.c	FUNCTION_76	IF_9
0x4010018	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      6429	elf.c	FUNCTION_76	IF_9
0x401001f	          0x4885c0	                           test rax, rax	      6429	elf.c	FUNCTION_76	IF_9
0x4010022	            0x742b	                            je 0x401004f	      6429	elf.c	FUNCTION_76	IF_9
0x4010024	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6430	elf.c	FUNCTION_76	CALL_16
0x4010028	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      6430	elf.c	FUNCTION_76	CALL_16
0x401002f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6430	elf.c	FUNCTION_76	CALL_16
0x4010033	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      6430	elf.c	FUNCTION_76	CALL_16
0x401003a	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      6430	elf.c	FUNCTION_76	CALL_16
0x4010041	          0x8b4a58	            mov ecx, dword [rdx + 0x58] 	      6430	elf.c	FUNCTION_76	CALL_16
0x4010044	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6430	elf.c	FUNCTION_76	CALL_16
0x4010048	            0x89ce	                            mov esi, ecx	      6430	elf.c	FUNCTION_76	CALL_16
0x401004a	          0x4889d7	                            mov rdi, rdx	      6430	elf.c	FUNCTION_76	CALL_16
0x401004d	            0xffd0	                                call rax	      6430	elf.c	FUNCTION_76	CALL_16
0x401004f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4010053	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x401005a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x401005e	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4010062	          0x4889d7	                            mov rdi, rdx	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4010065	            0xffd0	                                call rax	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4010067	            0x85c0	                           test eax, eax	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4010069	            0x7507	                           jne 0x4010072	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x401006b	      0xb800000000	                              mov eax, 0	      6433	elf.c	FUNCTION_76	IF_10
0x4010070	            0xeb33	                           jmp 0x40100a5	      6433	elf.c	FUNCTION_76	IF_10
0x4010072	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6436	elf.c	FUNCTION_76	IF_11
0x4010076	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6436	elf.c	FUNCTION_76	IF_11
0x401007d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6436	elf.c	FUNCTION_76	IF_11
0x4010081	          0x4885c0	                           test rax, rax	      6436	elf.c	FUNCTION_76	IF_11
0x4010084	            0x741a	                            je 0x40100a0	      6436	elf.c	FUNCTION_76	IF_11
0x4010086	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6437	elf.c	FUNCTION_76	IF_11
0x401008a	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6437	elf.c	FUNCTION_76	IF_11
0x4010091	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6437	elf.c	FUNCTION_76	IF_11
0x4010095	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6437	elf.c	FUNCTION_76	IF_11
0x4010099	          0x4889d7	                            mov rdi, rdx	      6437	elf.c	FUNCTION_76	IF_11
0x401009c	            0xffd0	                                call rax	      6437	elf.c	FUNCTION_76	IF_11
0x401009e	            0xeb05	                           jmp 0x40100a5	      6437	elf.c	FUNCTION_76	IF_11
0x40100a0	      0xb801000000	                              mov eax, 1	      6439	elf.c	FUNCTION_76
0x40100a5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      6440	elf.c	FUNCTION_76
0x40100a9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6440	elf.c	FUNCTION_76
0x40100b2	            0x7405	                            je 0x40100b9	      6440	elf.c	FUNCTION_76
0x40100b4	      0xe800000000	                          call 0x40100b9	      6440	elf.c	FUNCTION_76
0x40100b9	        0x4883c458	                           add rsp, 0x58	      6440	elf.c	FUNCTION_76
0x40100bd	              0x5b	                                 pop rbx	      6440	elf.c	FUNCTION_76
0x40100be	              0x5d	                                 pop rbp	      6440	elf.c	FUNCTION_76
0x40100bf	              0xc3	                                     ret	      6440	elf.c	FUNCTION_76
elf_fake_sections	ELSE,9:DO,0:CALL,27:WHILE,0:FOR,0:IF,38:SWITCH,1:functions,0	684
0x4007d58	              0x55	                                push rbp	      3138	elf.c	FUNCTION_48
0x4007d59	          0x4889e5	                            mov rbp, rsp	      3138	elf.c	FUNCTION_48
0x4007d5c	              0x53	                                push rbx	      3138	elf.c	FUNCTION_48
0x4007d5d	        0x4883ec78	                           sub rsp, 0x78	      3138	elf.c	FUNCTION_48
0x4007d61	        0x48897d98	             mov qword [rbp - 0x68], rdi	      3138	elf.c	FUNCTION_48
0x4007d65	        0x48897590	             mov qword [rbp - 0x70], rsi	      3138	elf.c	FUNCTION_48
0x4007d69	        0x48895588	             mov qword [rbp - 0x78], rdx	      3138	elf.c	FUNCTION_48
0x4007d6d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3139	elf.c	FUNCTION_48
0x4007d71	        0x488945b8	             mov qword [rbp - 0x48], rax	      3139	elf.c	FUNCTION_48
0x4007d75	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3140	elf.c	FUNCTION_48	CALL_1
0x4007d79	        0x488b4008	                mov rax, qword [rax + 8]	      3140	elf.c	FUNCTION_48	CALL_1
0x4007d7d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3140	elf.c	FUNCTION_48	CALL_1
0x4007d84	        0x488945c0	             mov qword [rbp - 0x40], rax	      3140	elf.c	FUNCTION_48	CALL_1
0x4007d88	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3141	elf.c	FUNCTION_48	CALL_2
0x4007d8c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3141	elf.c	FUNCTION_48	CALL_2
0x4007d93	        0x488945c8	             mov qword [rbp - 0x38], rax	      3141	elf.c	FUNCTION_48	CALL_2
0x4007d97	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3144	elf.c	FUNCTION_48
0x4007d9b	          0x488b00	                    mov rax, qword [rax]	      3144	elf.c	FUNCTION_48
0x4007d9e	        0x488945b0	             mov qword [rbp - 0x50], rax	      3144	elf.c	FUNCTION_48
0x4007da2	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3145	elf.c	FUNCTION_48
0x4007da9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3147	elf.c	FUNCTION_48	IF_1
0x4007dad	          0x8b4008	                mov eax, dword [rax + 8]	      3147	elf.c	FUNCTION_48	IF_1
0x4007db0	            0x85c0	                           test eax, eax	      3147	elf.c	FUNCTION_48	IF_1
0x4007db2	     0xf85d3090000	                           jne 0x400878b	      3147	elf.c	FUNCTION_48	IF_1
0x4007db8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3154	elf.c	FUNCTION_48
0x4007dbc	        0x488945d0	             mov qword [rbp - 0x30], rax	      3154	elf.c	FUNCTION_48
0x4007dc0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3156	elf.c	FUNCTION_48	IF_2
0x4007dc4	          0x488b00	                    mov rax, qword [rax]	      3156	elf.c	FUNCTION_48	IF_2
0x4007dc7	          0x4885c0	                           test rax, rax	      3156	elf.c	FUNCTION_48	IF_2
0x4007dca	            0x7470	                            je 0x4007e3c	      3156	elf.c	FUNCTION_48	IF_2
0x4007dcc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4007dd0	          0x488b00	                    mov rax, qword [rax]	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4007dd3	          0x8b400c	              mov eax, dword [rax + 0xc]	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4007dd6	          0x83e001	                              and eax, 1	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4007dd9	            0x85c0	                           test eax, eax	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4007ddb	     0xf8435010000	                            je 0x4007f16	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4007de1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4007de5	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4007de8	      0x2500200000	                         and eax, 0x2000	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4007ded	            0x85c0	                           test eax, eax	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4007def	     0xf8421010000	                            je 0x4007f16	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4007df5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4007df9	        0x4883c001	                              add rax, 1	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4007dfd	           0xfb600	                   movzx eax, byte [rax]	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e00	            0x3c64	                            cmp al, 0x64	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e02	     0xf850e010000	                           jne 0x4007f16	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e08	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e0c	        0x4883c006	                              add rax, 6	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e10	           0xfb600	                   movzx eax, byte [rax]	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e13	            0x3c5f	                            cmp al, 0x5f	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e15	     0xf85fb000000	                           jne 0x4007f16	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e1b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e1f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e22	       0xd00000008	                    or eax, section_end.	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e27	            0x89c2	                            mov edx, eax	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e29	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e2d	          0x895020	             mov dword [rax + 0x20], edx	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e30	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      3171	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e37	      0xe9da000000	                           jmp 0x4007f16	      3171	elf.c	FUNCTION_48	IF_2	IF_3
0x4007e3c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x4007e40	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x4007e43	      0x2500000010	                     and eax, 0x10000000	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x4007e48	            0x85c0	                           test eax, eax	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x4007e4a	     0xf84c6000000	                            je 0x4007f16	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x4007e50	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4007e54	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4007e57	          0xc1e805	                              shr eax, 5	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4007e5a	      0x25ffff0f00	                        and eax, 0xfffff	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4007e5f	      0x2500800200	                        and eax, 0x28000	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4007e64	            0x85c0	                           test eax, eax	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4007e66	            0x744b	                            je 0x4007eb3	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4007e68	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007e6c	        0x4883c001	                              add rax, 1	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007e70	           0xfb600	                   movzx eax, byte [rax]	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007e73	            0x3c7a	                            cmp al, 0x7a	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007e75	     0xf859b000000	                           jne 0x4007f16	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007e7b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4007e7f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4007e83	          0x4889d6	                            mov rsi, rdx	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4007e86	          0x4889c7	                            mov rdi, rax	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4007e89	      0xe832a9ffff	        call sym.convert_zdebug_to_debug	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4007e8e	        0x488945d8	             mov qword [rbp - 0x28], rax	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4007e92	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4007e97	            0x7510	                           jne 0x4007ea9	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4007e99	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3187	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4007e9d	    0xc74008010000	                  mov dword [rax + 8], 1	      3187	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4007ea4	      0xe9e3080000	                           jmp 0x400878c	      3188	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4007ea9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3190	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007ead	        0x488945b0	             mov qword [rbp - 0x50], rax	      3190	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007eb1	            0xeb63	                           jmp 0x4007f16	      3190	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4007eb3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4007eb7	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4007ebb	          0x83e030	                           and eax, 0x30	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4007ebe	            0x3c10	                            cmp al, 0x10	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4007ec0	            0x7554	                           jne 0x4007f16	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4007ec2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4007ec6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4007eca	          0x4889d6	                            mov rsi, rdx	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4007ecd	          0x4889c7	                            mov rdi, rax	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4007ed0	      0xe86da8ffff	        call sym.convert_debug_to_zdebug	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4007ed5	        0x488945e0	             mov qword [rbp - 0x20], rax	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4007ed9	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3200	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4007ede	            0x7510	                           jne 0x4007ef0	      3200	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4007ee0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3202	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4007ee4	    0xc74008010000	                  mov dword [rax + 8], 1	      3202	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4007eeb	      0xe99c080000	                           jmp 0x400878c	      3203	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4007ef0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007ef4	        0x4883c001	                              add rax, 1	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007ef8	           0xfb600	                   movzx eax, byte [rax]	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007efb	            0x3c7a	                            cmp al, 0x7a	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007efd	            0x750f	                           jne 0x4007f0e	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007eff	      0xbe850c0000	                          mov esi, 0xc85	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007f04	      0xbf00000000	                              mov edi, 0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007f09	      0xe800000000	                          call 0x4007f0e	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4007f0e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3206	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4007f12	        0x488945b0	             mov qword [rbp - 0x50], rax	      3206	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4007f16	        0x837dac00	               cmp dword [rbp - 0x54], 0	      3210	elf.c	FUNCTION_48	IF_10
0x4007f1a	            0x740c	                            je 0x4007f28	      3210	elf.c	FUNCTION_48	IF_10
0x4007f1c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3211	elf.c	FUNCTION_48	IF_10
0x4007f20	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      3211	elf.c	FUNCTION_48	IF_10
0x4007f26	            0xeb4d	                           jmp 0x4007f75	      3211	elf.c	FUNCTION_48	IF_10
0x4007f28	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f2c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f33	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f3a	        0x488b4008	                mov rax, qword [rax + 8]	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f3e	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f42	      0xba00000000	                              mov edx, 0	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f47	          0x4889ce	                            mov rsi, rcx	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f4a	          0x4889c7	                            mov rdi, rax	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f4d	      0xe800000000	                          call 0x4007f52	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f52	            0x89c2	                            mov edx, eax	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f54	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f58	            0x8910	                    mov dword [rax], edx	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4007f5a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4007f5e	            0x8b00	                    mov eax, dword [rax]	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4007f60	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4007f63	            0x7510	                           jne 0x4007f75	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4007f65	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3219	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4007f69	    0xc74008010000	                  mov dword [rax + 8], 1	      3219	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4007f70	      0xe917080000	                           jmp 0x400878c	      3220	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4007f75	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3226	elf.c	FUNCTION_48	IF_12
0x4007f79	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3226	elf.c	FUNCTION_48	IF_12
0x4007f7c	          0x83e001	                              and eax, 1	      3226	elf.c	FUNCTION_48	IF_12
0x4007f7f	            0x85c0	                           test eax, eax	      3226	elf.c	FUNCTION_48	IF_12
0x4007f81	            0x750f	                           jne 0x4007f92	      3226	elf.c	FUNCTION_48	IF_12
0x4007f83	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3227	elf.c	FUNCTION_48	IF_12
0x4007f87	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      3227	elf.c	FUNCTION_48	IF_12
0x4007f8b	          0x83e001	                              and eax, 1	      3227	elf.c	FUNCTION_48	IF_12
0x4007f8e	            0x84c0	                             test al, al	      3227	elf.c	FUNCTION_48	IF_12
0x4007f90	            0x7412	                            je 0x4007fa4	      3227	elf.c	FUNCTION_48	IF_12
0x4007f92	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3228	elf.c	FUNCTION_48	IF_12
0x4007f96	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3228	elf.c	FUNCTION_48	IF_12
0x4007f9a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3228	elf.c	FUNCTION_48	IF_12
0x4007f9e	        0x48895010	             mov qword [rax + 0x10], rdx	      3228	elf.c	FUNCTION_48	IF_12
0x4007fa2	            0xeb0c	                           jmp 0x4007fb0	      3228	elf.c	FUNCTION_48	IF_12
0x4007fa4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3230	elf.c	FUNCTION_48	ELSE_4
0x4007fa8	    0x48c740100000	               mov qword [rax + 0x10], 0	      3230	elf.c	FUNCTION_48	ELSE_4
0x4007fb0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3232	elf.c	FUNCTION_48	ELSE_4
0x4007fb4	    0x48c740180000	               mov qword [rax + 0x18], 0	      3232	elf.c	FUNCTION_48	ELSE_4
0x4007fbc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3233	elf.c	FUNCTION_48	ELSE_4
0x4007fc0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3233	elf.c	FUNCTION_48	ELSE_4
0x4007fc4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3233	elf.c	FUNCTION_48	ELSE_4
0x4007fc8	        0x48895020	             mov qword [rax + 0x20], rdx	      3233	elf.c	FUNCTION_48	ELSE_4
0x4007fcc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3234	elf.c	FUNCTION_48	ELSE_4
0x4007fd0	    0xc74028000000	               mov dword [rax + 0x28], 0	      3234	elf.c	FUNCTION_48	ELSE_4
0x4007fd7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4007fdb	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4007fde	          0x83f83e	                           cmp eax, 0x3e	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4007fe1	            0x7643	                           jbe 0x4008026	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4007fe3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4007fe7	          0x8b5870	            mov ebx, dword [rax + 0x70] 	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4007fea	      0xbe00000000	                              mov esi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x4007fef	      0xbf00000000	                              mov edi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x4007ff4	      0xe800000000	                          call 0x4007ff9	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x4007ff9	          0x4889c7	                            mov rdi, rax	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x4007ffc	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4008000	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4008004	          0x4889d1	                            mov rcx, rdx	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4008007	            0x89da	                            mov edx, ebx	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4008009	          0x4889c6	                            mov rsi, rax	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x400800c	      0xb800000000	                              mov eax, 0	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4008011	      0xe800000000	                          call 0x4008016	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4008016	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3242	elf.c	FUNCTION_48	ELSE_4	IF_13
0x400801a	    0xc74008010000	                  mov dword [rax + 8], 1	      3242	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4008021	      0xe966070000	                           jmp 0x400878c	      3243	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4008026	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3245	elf.c	FUNCTION_48
0x400802a	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3245	elf.c	FUNCTION_48
0x400802d	      0xba01000000	                              mov edx, 1	      3245	elf.c	FUNCTION_48
0x4008032	            0x89c1	                            mov ecx, eax	      3245	elf.c	FUNCTION_48
0x4008034	          0x48d3e2	                             shl rdx, cl	      3245	elf.c	FUNCTION_48
0x4008037	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3245	elf.c	FUNCTION_48
0x400803b	        0x48895030	             mov qword [rax + 0x30], rdx	      3245	elf.c	FUNCTION_48
0x400803f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3249	elf.c	FUNCTION_48
0x4008043	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3249	elf.c	FUNCTION_48
0x4008047	        0x48895040	             mov qword [rax + 0x40], rdx	      3249	elf.c	FUNCTION_48
0x400804b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3250	elf.c	FUNCTION_48
0x400804f	    0x48c740480000	               mov qword [rax + 0x48], 0	      3250	elf.c	FUNCTION_48
0x4008057	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3254	elf.c	FUNCTION_48	IF_14
0x400805b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3254	elf.c	FUNCTION_48	IF_14
0x400805e	      0x2500000002	                      and eax, 0x2000000	      3254	elf.c	FUNCTION_48	IF_14
0x4008063	            0x85c0	                           test eax, eax	      3254	elf.c	FUNCTION_48	IF_14
0x4008065	            0x7409	                            je 0x4008070	      3254	elf.c	FUNCTION_48	IF_14
0x4008067	    0xc745a8110000	           mov dword [rbp - 0x58], 0x11 	      3255	elf.c	FUNCTION_48	IF_14
0x400806e	            0xeb11	                           jmp 0x4008081	      3255	elf.c	FUNCTION_48	IF_14
0x4008070	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3257	elf.c	FUNCTION_48	CALL_10
0x4008074	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3257	elf.c	FUNCTION_48	CALL_10
0x4008077	            0x89c7	                            mov edi, eax	      3257	elf.c	FUNCTION_48	CALL_10
0x4008079	      0xe800000000	                          call 0x400807e	      3257	elf.c	FUNCTION_48	CALL_10
0x400807e	          0x8945a8	             mov dword [rbp - 0x58], eax	      3257	elf.c	FUNCTION_48	CALL_10
0x4008081	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3259	elf.c	FUNCTION_48	IF_15
0x4008085	          0x8b4004	                mov eax, dword [rax + 4]	      3259	elf.c	FUNCTION_48	IF_15
0x4008088	            0x85c0	                           test eax, eax	      3259	elf.c	FUNCTION_48	IF_15
0x400808a	            0x750c	                           jne 0x4008098	      3259	elf.c	FUNCTION_48	IF_15
0x400808c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3260	elf.c	FUNCTION_48	IF_15
0x4008090	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3260	elf.c	FUNCTION_48	IF_15
0x4008093	          0x895004	                mov dword [rax + 4], edx	      3260	elf.c	FUNCTION_48	IF_15
0x4008096	            0xeb50	                           jmp 0x40080e8	      3260	elf.c	FUNCTION_48	IF_15
0x4008098	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3261	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400809c	          0x8b4004	                mov eax, dword [rax + 4]	      3261	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400809f	          0x83f808	                              cmp eax, 8	      3261	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080a2	            0x7544	                           jne 0x40080e8	      3261	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080a4	        0x837da801	               cmp dword [rbp - 0x58], 1	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080a8	            0x753e	                           jne 0x40080e8	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080aa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080ae	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080b1	          0x83e001	                              and eax, 1	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080b4	            0x85c0	                           test eax, eax	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080b6	            0x7430	                            je 0x40080e8	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080b8	      0xbe00000000	                              mov esi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40080bd	      0xbf00000000	                              mov edi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40080c2	      0xe800000000	                          call 0x40080c7	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40080c7	          0x4889c2	                            mov rdx, rax	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40080ca	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40080ce	          0x4889c6	                            mov rsi, rax	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40080d1	          0x4889d7	                            mov rdi, rdx	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40080d4	      0xb800000000	                              mov eax, 0	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40080d9	      0xe800000000	                          call 0x40080de	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40080de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080e2	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080e5	          0x895004	                mov dword [rax + 4], edx	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40080e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40080ec	          0x8b4004	                mov eax, dword [rax + 4]	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40080ef	          0x83f809	                              cmp eax, 9	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40080f2	     0xf8468010000	                            je 0x4008260	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40080f8	          0x83f809	                              cmp eax, 9	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40080fb	            0x773c	                            ja 0x4008139	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40080fd	          0x83f805	                              cmp eax, 5	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008100	     0xf84bd000000	                            je 0x40081c3	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008106	          0x83f805	                              cmp eax, 5	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008109	            0x7720	                            ja 0x400812b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400810b	          0x83f803	                              cmp eax, 3	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400810e	     0xf84cb020000	                            je 0x40083df	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008114	          0x83f803	                              cmp eax, 3	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008117	     0xf8703010000	                            ja 0x4008220	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400811d	          0x83f801	                              cmp eax, 1	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008120	     0xf84b9020000	                            je 0x40083df	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008126	      0xe9b7020000	                           jmp 0x40083e2	      3277	elf.c	FUNCTION_48	SWITCH_1
0x400812b	          0x83f806	                              cmp eax, 6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400812e	     0xf84cd000000	                            je 0x4008201	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008134	      0xe9a6020000	                           jmp 0x40083df	      3283	elf.c	FUNCTION_48	SWITCH_1
0x4008139	          0x83f811	                           cmp eax, 0x11	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400813c	     0xf8466020000	                            je 0x40083a8	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008142	          0x83f811	                           cmp eax, 0x11	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008145	            0x771d	                            ja 0x4008164	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008147	          0x83f80b	                            cmp eax, 0xb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400814a	     0xf8492000000	                            je 0x40081e2	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008150	          0x83f80b	                            cmp eax, 0xb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008153	     0xf8289020000	                            jb 0x40083e2	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008159	          0x83f80e	                            cmp eax, 0xe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400815c	     0xf8280020000	                            jb 0x40083e2	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008162	            0xeb3d	                           jmp 0x40081a1	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008164	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008169	     0xf8442010000	                            je 0x40082b1	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400816f	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008174	            0x7710	                            ja 0x4008186	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008176	      0x3df6ffff6f	                     cmp eax, 0x6ffffff6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400817b	     0xf8435020000	                            je 0x40083b6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008181	      0xe95c020000	                           jmp 0x40083e2	      3277	elf.c	FUNCTION_48	SWITCH_1
0x4008186	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400818b	     0xf84a1010000	                            je 0x4008332	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008191	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4008196	     0xf8404010000	                            je 0x40082a0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400819c	      0xe941020000	                           jmp 0x40083e2	      3277	elf.c	FUNCTION_48	SWITCH_1
0x40081a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40081a5	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40081ac	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40081b0	          0xc0e803	                               shr al, 3	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40081b3	           0xfb6d0	                           movzx edx, al	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40081b6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40081ba	        0x48895038	             mov qword [rax + 0x38], rdx	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40081be	      0xe92c020000	                           jmp 0x40083ef	      3289	elf.c	FUNCTION_48	SWITCH_1
0x40081c3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3292	elf.c	FUNCTION_48	SWITCH_1
0x40081c7	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3292	elf.c	FUNCTION_48	SWITCH_1
0x40081ce	         0xfb64008	               movzx eax, byte [rax + 8]	      3292	elf.c	FUNCTION_48	SWITCH_1
0x40081d2	           0xfb6d0	                           movzx edx, al	      3292	elf.c	FUNCTION_48	SWITCH_1
0x40081d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3292	elf.c	FUNCTION_48	SWITCH_1
0x40081d9	        0x48895038	             mov qword [rax + 0x38], rdx	      3292	elf.c	FUNCTION_48	SWITCH_1
0x40081dd	      0xe90d020000	                           jmp 0x40083ef	      3293	elf.c	FUNCTION_48	SWITCH_1
0x40081e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40081e6	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40081ed	         0xfb64005	               movzx eax, byte [rax + 5]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40081f1	           0xfb6d0	                           movzx edx, al	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40081f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40081f8	        0x48895038	             mov qword [rax + 0x38], rdx	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40081fc	      0xe9ee010000	                           jmp 0x40083ef	      3297	elf.c	FUNCTION_48	SWITCH_1
0x4008201	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4008205	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3300	elf.c	FUNCTION_48	SWITCH_1
0x400820c	         0xfb64006	               movzx eax, byte [rax + 6]	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4008210	           0xfb6d0	                           movzx edx, al	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4008213	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4008217	        0x48895038	             mov qword [rax + 0x38], rdx	      3300	elf.c	FUNCTION_48	SWITCH_1
0x400821b	      0xe9cf010000	                           jmp 0x40083ef	      3301	elf.c	FUNCTION_48	SWITCH_1
0x4008220	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4008224	        0x488b4008	                mov rax, qword [rax + 8]	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4008228	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400822f	     0xfb680880300	          movzx eax, byte [rax + 0x388] 	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4008236	          0x83e008	                              and eax, 8	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4008239	            0x84c0	                             test al, al	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400823b	     0xf84a4010000	                            je 0x40083e5	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4008241	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4008245	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x400824c	         0xfb64004	               movzx eax, byte [rax + 4]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4008250	           0xfb6d0	                           movzx edx, al	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4008253	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4008257	        0x48895038	             mov qword [rax + 0x38], rdx	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x400825b	      0xe985010000	                           jmp 0x40083e5	      3306	elf.c	FUNCTION_48	SWITCH_1
0x4008260	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4008264	        0x488b4008	                mov rax, qword [rax + 8]	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4008268	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x400826f	     0xfb680880300	          movzx eax, byte [rax + 0x388] 	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4008276	          0x83e004	                              and eax, 4	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4008279	            0x84c0	                             test al, al	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x400827b	     0xf8467010000	                            je 0x40083e8	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4008281	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4008285	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x400828c	         0xfb64003	               movzx eax, byte [rax + 3]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4008290	           0xfb6d0	                           movzx edx, al	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4008293	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4008297	        0x48895038	             mov qword [rax + 0x38], rdx	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x400829b	      0xe948010000	                           jmp 0x40083e8	      3311	elf.c	FUNCTION_48	SWITCH_1
0x40082a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3314	elf.c	FUNCTION_48	SWITCH_1
0x40082a4	    0x48c740380200	               mov qword [rax + 0x38], 2	      3314	elf.c	FUNCTION_48	SWITCH_1
0x40082ac	      0xe93e010000	                           jmp 0x40083ef	      3315	elf.c	FUNCTION_48	SWITCH_1
0x40082b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3318	elf.c	FUNCTION_48	SWITCH_1
0x40082b5	    0x48c740380000	               mov qword [rax + 0x38], 0	      3318	elf.c	FUNCTION_48	SWITCH_1
0x40082bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40082c1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40082c4	            0x85c0	                           test eax, eax	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40082c6	            0x751d	                           jne 0x40082e5	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40082c8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40082cc	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40082d3	    0x8b9040030000	           mov edx, dword [rax + 0x340] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40082d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40082dd	          0x89502c	             mov dword [rax + 0x2c], edx	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40082e0	      0xe906010000	                           jmp 0x40083eb	      3327	elf.c	FUNCTION_48	SWITCH_1
0x40082e5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40082e9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40082f0	    0x8b8040030000	           mov eax, dword [rax + 0x340] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40082f6	            0x85c0	                           test eax, eax	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40082f8	     0xf84ed000000	                            je 0x40083eb	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40082fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008302	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008305	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008309	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008310	    0x8b8040030000	           mov eax, dword [rax + 0x340] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008316	            0x39c2	                            cmp edx, eax	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008318	     0xf84cd000000	                            je 0x40083eb	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x400831e	      0xbefe0c0000	                          mov esi, 0xcfe	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008323	      0xbf00000000	                              mov edi, 0	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4008328	      0xe800000000	                          call 0x400832d	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x400832d	      0xe9b9000000	                           jmp 0x40083eb	      3327	elf.c	FUNCTION_48	SWITCH_1
0x4008332	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3330	elf.c	FUNCTION_48	SWITCH_1
0x4008336	    0x48c740380000	               mov qword [rax + 0x38], 0	      3330	elf.c	FUNCTION_48	SWITCH_1
0x400833e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x4008342	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x4008345	            0x85c0	                           test eax, eax	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x4008347	            0x751d	                           jne 0x4008366	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x4008349	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x400834d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4008354	    0x8b9044030000	           mov edx, dword [rax + 0x344] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x400835a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x400835e	          0x89502c	             mov dword [rax + 0x2c], edx	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4008361	      0xe988000000	                           jmp 0x40083ee	      3339	elf.c	FUNCTION_48	SWITCH_1
0x4008366	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400836a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008371	    0x8b8044030000	           mov eax, dword [rax + 0x344] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008377	            0x85c0	                           test eax, eax	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008379	            0x7473	                            je 0x40083ee	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400837b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400837f	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008382	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008386	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400838d	    0x8b8044030000	           mov eax, dword [rax + 0x344] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008393	            0x39c2	                            cmp edx, eax	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008395	            0x7457	                            je 0x40083ee	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4008397	      0xbe0a0d0000	                          mov esi, 0xd0a	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400839c	      0xbf00000000	                              mov edi, 0	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x40083a1	      0xe800000000	                          call 0x40083a6	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x40083a6	            0xeb46	                           jmp 0x40083ee	      3339	elf.c	FUNCTION_48	SWITCH_1
0x40083a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3342	elf.c	FUNCTION_48	SWITCH_1
0x40083ac	    0x48c740380400	               mov qword [rax + 0x38], 4	      3342	elf.c	FUNCTION_48	SWITCH_1
0x40083b4	            0xeb39	                           jmp 0x40083ef	      3343	elf.c	FUNCTION_48	SWITCH_1
0x40083b6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083ba	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083c1	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083c5	            0x3c40	                            cmp al, 0x40	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083c7	            0x7507	                           jne 0x40083d0	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083c9	      0xba00000000	                              mov edx, 0	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083ce	            0xeb05	                           jmp 0x40083d5	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083d0	      0xba04000000	                              mov edx, 4	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083d9	        0x48895038	             mov qword [rax + 0x38], rdx	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40083dd	            0xeb10	                           jmp 0x40083ef	      3347	elf.c	FUNCTION_48	SWITCH_1
0x40083df	              0x90	                                     nop	      3283	elf.c	FUNCTION_48	SWITCH_1
0x40083e0	            0xeb0d	                           jmp 0x40083ef	      3283	elf.c	FUNCTION_48	SWITCH_1
0x40083e2	              0x90	                                     nop	      3277	elf.c	FUNCTION_48	SWITCH_1
0x40083e3	            0xeb0a	                           jmp 0x40083ef	      3277	elf.c	FUNCTION_48	SWITCH_1
0x40083e5	              0x90	                                     nop	      3306	elf.c	FUNCTION_48	SWITCH_1
0x40083e6	            0xeb07	                           jmp 0x40083ef	      3306	elf.c	FUNCTION_48	SWITCH_1
0x40083e8	              0x90	                                     nop	      3311	elf.c	FUNCTION_48	SWITCH_1
0x40083e9	            0xeb04	                           jmp 0x40083ef	      3311	elf.c	FUNCTION_48	SWITCH_1
0x40083eb	              0x90	                                     nop	      3327	elf.c	FUNCTION_48	SWITCH_1
0x40083ec	            0xeb01	                           jmp 0x40083ef	      3327	elf.c	FUNCTION_48	SWITCH_1
0x40083ee	              0x90	                                     nop	      3339	elf.c	FUNCTION_48	SWITCH_1
0x40083ef	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3350	elf.c	FUNCTION_48	IF_21
0x40083f3	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3350	elf.c	FUNCTION_48	IF_21
0x40083f6	          0x83e001	                              and eax, 1	      3350	elf.c	FUNCTION_48	IF_21
0x40083f9	            0x85c0	                           test eax, eax	      3350	elf.c	FUNCTION_48	IF_21
0x40083fb	            0x7417	                            je 0x4008414	      3350	elf.c	FUNCTION_48	IF_21
0x40083fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3351	elf.c	FUNCTION_48	IF_21
0x4008401	        0x488b4008	                mov rax, qword [rax + 8]	      3351	elf.c	FUNCTION_48	IF_21
0x4008405	        0x4883c802	                               or rax, 2	      3351	elf.c	FUNCTION_48	IF_21
0x4008409	          0x4889c2	                            mov rdx, rax	      3351	elf.c	FUNCTION_48	IF_21
0x400840c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3351	elf.c	FUNCTION_48	IF_21
0x4008410	        0x48895008	                mov qword [rax + 8], rdx	      3351	elf.c	FUNCTION_48	IF_21
0x4008414	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3352	elf.c	FUNCTION_48	IF_22
0x4008418	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3352	elf.c	FUNCTION_48	IF_22
0x400841b	          0x83e008	                              and eax, 8	      3352	elf.c	FUNCTION_48	IF_22
0x400841e	            0x85c0	                           test eax, eax	      3352	elf.c	FUNCTION_48	IF_22
0x4008420	            0x7517	                           jne 0x4008439	      3352	elf.c	FUNCTION_48	IF_22
0x4008422	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3353	elf.c	FUNCTION_48	IF_22
0x4008426	        0x488b4008	                mov rax, qword [rax + 8]	      3353	elf.c	FUNCTION_48	IF_22
0x400842a	        0x4883c801	                               or rax, 1	      3353	elf.c	FUNCTION_48	IF_22
0x400842e	          0x4889c2	                            mov rdx, rax	      3353	elf.c	FUNCTION_48	IF_22
0x4008431	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3353	elf.c	FUNCTION_48	IF_22
0x4008435	        0x48895008	                mov qword [rax + 8], rdx	      3353	elf.c	FUNCTION_48	IF_22
0x4008439	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3354	elf.c	FUNCTION_48	IF_23
0x400843d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3354	elf.c	FUNCTION_48	IF_23
0x4008440	          0x83e010	                           and eax, 0x10	      3354	elf.c	FUNCTION_48	IF_23
0x4008443	            0x85c0	                           test eax, eax	      3354	elf.c	FUNCTION_48	IF_23
0x4008445	            0x7417	                            je 0x400845e	      3354	elf.c	FUNCTION_48	IF_23
0x4008447	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3355	elf.c	FUNCTION_48	IF_23
0x400844b	        0x488b4008	                mov rax, qword [rax + 8]	      3355	elf.c	FUNCTION_48	IF_23
0x400844f	        0x4883c804	                               or rax, 4	      3355	elf.c	FUNCTION_48	IF_23
0x4008453	          0x4889c2	                            mov rdx, rax	      3355	elf.c	FUNCTION_48	IF_23
0x4008456	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3355	elf.c	FUNCTION_48	IF_23
0x400845a	        0x48895008	                mov qword [rax + 8], rdx	      3355	elf.c	FUNCTION_48	IF_23
0x400845e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3356	elf.c	FUNCTION_48	IF_24
0x4008462	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3356	elf.c	FUNCTION_48	IF_24
0x4008465	      0x2500008000	                       and eax, 0x800000	      3356	elf.c	FUNCTION_48	IF_24
0x400846a	            0x85c0	                           test eax, eax	      3356	elf.c	FUNCTION_48	IF_24
0x400846c	            0x742b	                            je 0x4008499	      3356	elf.c	FUNCTION_48	IF_24
0x400846e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3358	elf.c	FUNCTION_48	IF_24
0x4008472	        0x488b4008	                mov rax, qword [rax + 8]	      3358	elf.c	FUNCTION_48	IF_24
0x4008476	        0x4883c810	                            or rax, 0x10	      3358	elf.c	FUNCTION_48	IF_24
0x400847a	          0x4889c2	                            mov rdx, rax	      3358	elf.c	FUNCTION_48	IF_24
0x400847d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3358	elf.c	FUNCTION_48	IF_24
0x4008481	        0x48895008	                mov qword [rax + 8], rdx	      3358	elf.c	FUNCTION_48	IF_24
0x4008485	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3359	elf.c	FUNCTION_48	IF_24
0x4008489	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      3359	elf.c	FUNCTION_48	IF_24
0x400848f	            0x89c2	                            mov edx, eax	      3359	elf.c	FUNCTION_48	IF_24
0x4008491	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3359	elf.c	FUNCTION_48	IF_24
0x4008495	        0x48895038	             mov qword [rax + 0x38], rdx	      3359	elf.c	FUNCTION_48	IF_24
0x4008499	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3361	elf.c	FUNCTION_48	IF_25
0x400849d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3361	elf.c	FUNCTION_48	IF_25
0x40084a0	      0x2500000001	                      and eax, 0x1000000	      3361	elf.c	FUNCTION_48	IF_25
0x40084a5	            0x85c0	                           test eax, eax	      3361	elf.c	FUNCTION_48	IF_25
0x40084a7	            0x7417	                            je 0x40084c0	      3361	elf.c	FUNCTION_48	IF_25
0x40084a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3362	elf.c	FUNCTION_48	IF_25
0x40084ad	        0x488b4008	                mov rax, qword [rax + 8]	      3362	elf.c	FUNCTION_48	IF_25
0x40084b1	        0x4883c820	                            or rax, 0x20	      3362	elf.c	FUNCTION_48	IF_25
0x40084b5	          0x4889c2	                            mov rdx, rax	      3362	elf.c	FUNCTION_48	IF_25
0x40084b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3362	elf.c	FUNCTION_48	IF_25
0x40084bc	        0x48895008	                mov qword [rax + 8], rdx	      3362	elf.c	FUNCTION_48	IF_25
0x40084c0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084c4	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084c7	      0x2500000002	                      and eax, 0x2000000	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084cc	            0x85c0	                           test eax, eax	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084ce	            0x752d	                           jne 0x40084fd	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084d0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084d4	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084db	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084e2	          0x4885c0	                           test rax, rax	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084e5	            0x7416	                            je 0x40084fd	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40084e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3364	elf.c	FUNCTION_48	IF_26
0x40084eb	        0x488b4008	                mov rax, qword [rax + 8]	      3364	elf.c	FUNCTION_48	IF_26
0x40084ef	          0x80cc02	                                or ah, 2	      3364	elf.c	FUNCTION_48	IF_26
0x40084f2	          0x4889c2	                            mov rdx, rax	      3364	elf.c	FUNCTION_48	IF_26
0x40084f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3364	elf.c	FUNCTION_48	IF_26
0x40084f9	        0x48895008	                mov qword [rax + 8], rdx	      3364	elf.c	FUNCTION_48	IF_26
0x40084fd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3365	elf.c	FUNCTION_48	IF_27
0x4008501	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3365	elf.c	FUNCTION_48	IF_27
0x4008504	      0x2500040000	                          and eax, 0x400	      3365	elf.c	FUNCTION_48	IF_27
0x4008509	            0x85c0	                           test eax, eax	      3365	elf.c	FUNCTION_48	IF_27
0x400850b	     0xf8488000000	                            je 0x4008599	      3365	elf.c	FUNCTION_48	IF_27
0x4008511	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3367	elf.c	FUNCTION_48	IF_27
0x4008515	        0x488b4008	                mov rax, qword [rax + 8]	      3367	elf.c	FUNCTION_48	IF_27
0x4008519	          0x80cc04	                                or ah, 4	      3367	elf.c	FUNCTION_48	IF_27
0x400851c	          0x4889c2	                            mov rdx, rax	      3367	elf.c	FUNCTION_48	IF_27
0x400851f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3367	elf.c	FUNCTION_48	IF_27
0x4008523	        0x48895008	                mov qword [rax + 8], rdx	      3367	elf.c	FUNCTION_48	IF_27
0x4008527	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x400852b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x400852f	          0x4885c0	                           test rax, rax	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x4008532	            0x7565	                           jne 0x4008599	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x4008534	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x4008538	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x400853b	      0x2500010000	                          and eax, 0x100	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x4008540	            0x85c0	                           test eax, eax	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x4008542	            0x7555	                           jne 0x4008599	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x4008544	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3371	elf.c	FUNCTION_48	IF_27	IF_28
0x4008548	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      3371	elf.c	FUNCTION_48	IF_27	IF_28
0x400854f	        0x488945e8	             mov qword [rbp - 0x18], rax	      3371	elf.c	FUNCTION_48	IF_27	IF_28
0x4008553	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3373	elf.c	FUNCTION_48	IF_27	IF_28
0x4008557	    0x48c740200000	               mov qword [rax + 0x20], 0	      3373	elf.c	FUNCTION_48	IF_27	IF_28
0x400855f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4008564	            0x7433	                            je 0x4008599	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4008566	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x400856a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x400856e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4008572	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4008576	          0x4801c2	                            add rdx, rax	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4008579	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x400857d	        0x48895020	             mov qword [rax + 0x20], rdx	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4008581	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4008585	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4008589	          0x4885c0	                           test rax, rax	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x400858c	            0x740b	                            je 0x4008599	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x400858e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3378	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4008592	    0xc74004080000	                  mov dword [rax + 4], 8	      3378	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4008599	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3382	elf.c	FUNCTION_48	IF_31
0x400859d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3382	elf.c	FUNCTION_48	IF_31
0x40085a0	      0x2500800002	                      and eax, 0x2008000	      3382	elf.c	FUNCTION_48	IF_31
0x40085a5	      0x3d00800000	                         cmp eax, 0x8000	      3382	elf.c	FUNCTION_48	IF_31
0x40085aa	            0x7518	                           jne 0x40085c4	      3382	elf.c	FUNCTION_48	IF_31
0x40085ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3383	elf.c	FUNCTION_48	IF_31
0x40085b0	        0x488b5008	                mov rdx, qword [rax + 8]	      3383	elf.c	FUNCTION_48	IF_31
0x40085b4	      0xb800000080	                     mov eax, 0x80000000	      3383	elf.c	FUNCTION_48	IF_31
0x40085b9	          0x4809c2	                             or rdx, rax	      3383	elf.c	FUNCTION_48	IF_31
0x40085bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3383	elf.c	FUNCTION_48	IF_31
0x40085c0	        0x48895008	                mov qword [rax + 8], rdx	      3383	elf.c	FUNCTION_48	IF_31
0x40085c4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3389	elf.c	FUNCTION_48	IF_32
0x40085c8	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3389	elf.c	FUNCTION_48	IF_32
0x40085cb	          0x83e004	                              and eax, 4	      3389	elf.c	FUNCTION_48	IF_32
0x40085ce	            0x85c0	                           test eax, eax	      3389	elf.c	FUNCTION_48	IF_32
0x40085d0	     0xf844f010000	                            je 0x4008725	      3389	elf.c	FUNCTION_48	IF_32
0x40085d6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x40085da	          0x488b00	                    mov rax, qword [rax]	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x40085dd	          0x4885c0	                           test rax, rax	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x40085e0	     0xf84e5000000	                            je 0x40086cb	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x40085e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x40085ea	          0x8b5060	            mov edx, dword [rax + 0x60] 	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x40085ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x40085f1	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x40085f4	             0x1d0	                            add eax, edx	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x40085f6	            0x85c0	                           test eax, eax	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x40085f8	     0xf84cd000000	                            je 0x40086cb	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x40085fe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4008602	          0x488b00	                    mov rax, qword [rax]	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4008605	           0xfb600	                   movzx eax, byte [rax]	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4008608	          0x83e003	                              and eax, 3	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400860b	            0x3c02	                               cmp al, 2	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400860d	            0x7416	                            je 0x4008625	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400860f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x4008613	          0x488b00	                    mov rax, qword [rax]	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x4008616	         0xfb64003	               movzx eax, byte [rax + 3]	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x400861a	          0x83e008	                              and eax, 8	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x400861d	            0x84c0	                             test al, al	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x400861f	     0xf84a6000000	                            je 0x40086cb	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x4008625	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4008629	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400862c	            0x85c0	                           test eax, eax	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400862e	            0x7444	                            je 0x4008674	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4008630	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4008634	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4008638	          0x4885c0	                           test rax, rax	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400863b	            0x7537	                           jne 0x4008674	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400863d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008641	        0x488d7058	                   lea rsi, [rax + 0x58]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008645	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008648	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x400864c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008650	          0x4189c8	                            mov r8d, ecx	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008653	      0xb900000000	                              mov ecx, 0	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008658	          0x4889c7	                            mov rdi, rax	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x400865b	      0xe885f5ffff	       call sym._bfd_elf_init_reloc_shdr	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008660	            0x85c0	                           test eax, eax	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008662	            0x7510	                           jne 0x4008674	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4008664	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3403	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4008668	    0xc74008010000	                  mov dword [rax + 8], 1	      3403	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400866f	      0xe918010000	                           jmp 0x400878c	      3404	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4008674	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4008678	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x400867b	            0x85c0	                           test eax, eax	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x400867d	     0xf84a1000000	                            je 0x4008724	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4008683	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4008687	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x400868b	          0x4885c0	                           test rax, rax	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x400868e	     0xf8590000000	                           jne 0x4008724	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4008694	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x4008698	        0x488d7070	                   lea rsi, [rax + 0x70]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x400869c	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x400869f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086a3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086a7	          0x4189c8	                            mov r8d, ecx	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086aa	      0xb901000000	                              mov ecx, 1	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086af	          0x4889c7	                            mov rdi, rax	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086b2	      0xe82ef5ffff	       call sym._bfd_elf_init_reloc_shdr	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086b7	            0x85c0	                           test eax, eax	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086b9	            0x7569	                           jne 0x4008724	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40086bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3410	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40086bf	    0xc74008010000	                  mov dword [rax + 8], 1	      3410	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40086c6	      0xe9c1000000	                           jmp 0x400878c	      3411	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40086cb	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40086cf	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40086d3	          0xc0e802	                               shr al, 2	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40086d6	          0x83e001	                              and eax, 1	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40086d9	           0xfb6c8	                           movzx ecx, al	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086dc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3416	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40086e0	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      3416	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40086e4	          0x83e004	                              and eax, 4	      3416	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40086e7	            0x84c0	                             test al, al	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086e9	            0x740a	                            je 0x40086f5	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086ef	        0x4883c070	                           add rax, 0x70	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086f3	            0xeb08	                           jmp 0x40086fd	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086f9	        0x4883c058	                           add rax, 0x58	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40086fd	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4008700	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4008704	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4008708	          0x4189f0	                            mov r8d, esi	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400870b	          0x4889c6	                            mov rsi, rax	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400870e	      0xe8d2f4ffff	       call sym._bfd_elf_init_reloc_shdr	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4008713	            0x85c0	                           test eax, eax	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4008715	            0x750e	                           jne 0x4008725	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4008717	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3421	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x400871b	    0xc74008010000	                  mov dword [rax + 8], 1	      3421	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4008722	            0xeb68	                           jmp 0x400878c	      3422	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4008724	              0x90	                                     nop	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4008725	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3427	elf.c	FUNCTION_48
0x4008729	          0x8b4004	                mov eax, dword [rax + 4]	      3427	elf.c	FUNCTION_48
0x400872c	          0x8945a8	             mov dword [rbp - 0x58], eax	      3427	elf.c	FUNCTION_48
0x400872f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3428	elf.c	FUNCTION_48	IF_37
0x4008733	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3428	elf.c	FUNCTION_48	IF_37
0x400873a	          0x4885c0	                           test rax, rax	      3428	elf.c	FUNCTION_48	IF_37
0x400873d	            0x742d	                            je 0x400876c	      3428	elf.c	FUNCTION_48	IF_37
0x400873f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3429	elf.c	FUNCTION_48	IF_37
0x4008743	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3429	elf.c	FUNCTION_48	IF_37
0x400874a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3429	elf.c	FUNCTION_48	IF_37
0x400874e	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3429	elf.c	FUNCTION_48	IF_37
0x4008752	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3429	elf.c	FUNCTION_48	IF_37
0x4008756	          0x4889cf	                            mov rdi, rcx	      3429	elf.c	FUNCTION_48	IF_37
0x4008759	            0xffd0	                                call rax	      3429	elf.c	FUNCTION_48	IF_37
0x400875b	            0x85c0	                           test eax, eax	      3429	elf.c	FUNCTION_48	IF_37
0x400875d	            0x750d	                           jne 0x400876c	      3429	elf.c	FUNCTION_48	IF_37
0x400875f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3431	elf.c	FUNCTION_48	IF_37
0x4008763	    0xc74008010000	                  mov dword [rax + 8], 1	      3431	elf.c	FUNCTION_48	IF_37
0x400876a	            0xeb20	                           jmp 0x400878c	      3432	elf.c	FUNCTION_48	IF_37
0x400876c	        0x837da808	               cmp dword [rbp - 0x58], 8	      3435	elf.c	FUNCTION_48	IF_38
0x4008770	            0x751a	                           jne 0x400878c	      3435	elf.c	FUNCTION_48	IF_38
0x4008772	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3435	elf.c	FUNCTION_48	IF_38
0x4008776	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3435	elf.c	FUNCTION_48	IF_38
0x400877a	          0x4885c0	                           test rax, rax	      3435	elf.c	FUNCTION_48	IF_38
0x400877d	            0x740d	                            je 0x400878c	      3435	elf.c	FUNCTION_48	IF_38
0x400877f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3439	elf.c	FUNCTION_48	IF_38
0x4008783	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3439	elf.c	FUNCTION_48	IF_38
0x4008786	          0x895004	                mov dword [rax + 4], edx	      3439	elf.c	FUNCTION_48	IF_38
0x4008789	            0xeb01	                           jmp 0x400878c	      3439	elf.c	FUNCTION_48	IF_38
0x400878b	              0x90	                                     nop	      3151	elf.c	FUNCTION_48	IF_1
0x400878c	        0x4883c478	                           add rsp, 0x78	      3441	elf.c	FUNCTION_48
0x4008790	              0x5b	                                 pop rbx	      3441	elf.c	FUNCTION_48
0x4008791	              0x5d	                                 pop rbp	      3441	elf.c	FUNCTION_48
0x4008792	              0xc3	                                     ret	      3441	elf.c	FUNCTION_48
elfcore_grok_prfpreg	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016c2f	              0x55	                                push rbp	      9202	elf.c	FUNCTION_117
0x4016c30	          0x4889e5	                            mov rbp, rsp	      9202	elf.c	FUNCTION_117
0x4016c33	        0x4883ec10	                           sub rsp, 0x10	      9202	elf.c	FUNCTION_117
0x4016c37	        0x48897df8	                mov qword [rbp - 8], rdi	      9202	elf.c	FUNCTION_117
0x4016c3b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9202	elf.c	FUNCTION_117
0x4016c3f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9203	elf.c	FUNCTION_117	CALL_1
0x4016c43	        0x488b45f8	                mov rax, qword [rbp - 8]	      9203	elf.c	FUNCTION_117	CALL_1
0x4016c47	      0xbe00000000	                              mov esi, 0	      9203	elf.c	FUNCTION_117	CALL_1
0x4016c4c	          0x4889c7	                            mov rdi, rax	      9203	elf.c	FUNCTION_117	CALL_1
0x4016c4f	      0xe8a5ffffff	call sym.elfcore_make_note_pseudosection	      9203	elf.c	FUNCTION_117	CALL_1
0x4016c54	              0xc9	                                   leave	      9204	elf.c	FUNCTION_117
0x4016c55	              0xc3	                                     ret	      9204	elf.c	FUNCTION_117
_bfd_elf_swap_verdef_in	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	78
0x4000721	              0x55	                                push rbp	        70	elf.c	FUNCTION_1
0x4000722	          0x4889e5	                            mov rbp, rsp	        70	elf.c	FUNCTION_1
0x4000725	        0x4883ec20	                           sub rsp, 0x20	        70	elf.c	FUNCTION_1
0x4000729	        0x48897df8	                mov qword [rbp - 8], rdi	        70	elf.c	FUNCTION_1
0x400072d	        0x488975f0	             mov qword [rbp - 0x10], rsi	        70	elf.c	FUNCTION_1
0x4000731	        0x488955e8	             mov qword [rbp - 0x18], rdx	        70	elf.c	FUNCTION_1
0x4000735	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	elf.c	FUNCTION_1
0x4000739	        0x488b4008	                mov rax, qword [rax + 8]	        71	elf.c	FUNCTION_1
0x400073d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	        71	elf.c	FUNCTION_1
0x4000744	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        71	elf.c	FUNCTION_1
0x4000748	          0x4889d7	                            mov rdi, rdx	        71	elf.c	FUNCTION_1
0x400074b	            0xffd0	                                call rax	        71	elf.c	FUNCTION_1
0x400074d	            0x89c2	                            mov edx, eax	        71	elf.c	FUNCTION_1
0x400074f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	elf.c	FUNCTION_1
0x4000753	          0x668910	                      mov word [rax], dx	        71	elf.c	FUNCTION_1
0x4000756	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	elf.c	FUNCTION_1
0x400075a	        0x488b4008	                mov rax, qword [rax + 8]	        72	elf.c	FUNCTION_1
0x400075e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	        72	elf.c	FUNCTION_1
0x4000765	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        72	elf.c	FUNCTION_1
0x4000769	        0x4883c202	                              add rdx, 2	        72	elf.c	FUNCTION_1
0x400076d	          0x4889d7	                            mov rdi, rdx	        72	elf.c	FUNCTION_1
0x4000770	            0xffd0	                                call rax	        72	elf.c	FUNCTION_1
0x4000772	            0x89c2	                            mov edx, eax	        72	elf.c	FUNCTION_1
0x4000774	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	elf.c	FUNCTION_1
0x4000778	        0x66895002	                  mov word [rax + 2], dx	        72	elf.c	FUNCTION_1
0x400077c	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	elf.c	FUNCTION_1
0x4000780	        0x488b4008	                mov rax, qword [rax + 8]	        73	elf.c	FUNCTION_1
0x4000784	    0x488b80980000	            mov rax, qword [rax + 0x98] 	        73	elf.c	FUNCTION_1
0x400078b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        73	elf.c	FUNCTION_1
0x400078f	        0x4883c204	                              add rdx, 4	        73	elf.c	FUNCTION_1
0x4000793	          0x4889d7	                            mov rdi, rdx	        73	elf.c	FUNCTION_1
0x4000796	            0xffd0	                                call rax	        73	elf.c	FUNCTION_1
0x4000798	            0x89c2	                            mov edx, eax	        73	elf.c	FUNCTION_1
0x400079a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	elf.c	FUNCTION_1
0x400079e	        0x66895004	                  mov word [rax + 4], dx	        73	elf.c	FUNCTION_1
0x40007a2	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	elf.c	FUNCTION_1
0x40007a6	        0x488b4008	                mov rax, qword [rax + 8]	        74	elf.c	FUNCTION_1
0x40007aa	    0x488b80980000	            mov rax, qword [rax + 0x98] 	        74	elf.c	FUNCTION_1
0x40007b1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        74	elf.c	FUNCTION_1
0x40007b5	        0x4883c206	                              add rdx, 6	        74	elf.c	FUNCTION_1
0x40007b9	          0x4889d7	                            mov rdi, rdx	        74	elf.c	FUNCTION_1
0x40007bc	            0xffd0	                                call rax	        74	elf.c	FUNCTION_1
0x40007be	            0x89c2	                            mov edx, eax	        74	elf.c	FUNCTION_1
0x40007c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	elf.c	FUNCTION_1
0x40007c4	        0x66895006	                  mov word [rax + 6], dx	        74	elf.c	FUNCTION_1
0x40007c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	elf.c	FUNCTION_1
0x40007cc	        0x488b4008	                mov rax, qword [rax + 8]	        75	elf.c	FUNCTION_1
0x40007d0	    0x488b80800000	            mov rax, qword [rax + 0x80] 	        75	elf.c	FUNCTION_1
0x40007d7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        75	elf.c	FUNCTION_1
0x40007db	        0x4883c208	                              add rdx, 8	        75	elf.c	FUNCTION_1
0x40007df	          0x4889d7	                            mov rdi, rdx	        75	elf.c	FUNCTION_1
0x40007e2	            0xffd0	                                call rax	        75	elf.c	FUNCTION_1
0x40007e4	          0x4889c2	                            mov rdx, rax	        75	elf.c	FUNCTION_1
0x40007e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	elf.c	FUNCTION_1
0x40007eb	        0x48895008	                mov qword [rax + 8], rdx	        75	elf.c	FUNCTION_1
0x40007ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	elf.c	FUNCTION_1
0x40007f3	        0x488b4008	                mov rax, qword [rax + 8]	        76	elf.c	FUNCTION_1
0x40007f7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	        76	elf.c	FUNCTION_1
0x40007fe	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        76	elf.c	FUNCTION_1
0x4000802	        0x4883c20c	                            add rdx, 0xc	        76	elf.c	FUNCTION_1
0x4000806	          0x4889d7	                            mov rdi, rdx	        76	elf.c	FUNCTION_1
0x4000809	            0xffd0	                                call rax	        76	elf.c	FUNCTION_1
0x400080b	          0x4889c2	                            mov rdx, rax	        76	elf.c	FUNCTION_1
0x400080e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	elf.c	FUNCTION_1
0x4000812	        0x48895010	             mov qword [rax + 0x10], rdx	        76	elf.c	FUNCTION_1
0x4000816	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	elf.c	FUNCTION_1
0x400081a	        0x488b4008	                mov rax, qword [rax + 8]	        77	elf.c	FUNCTION_1
0x400081e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	        77	elf.c	FUNCTION_1
0x4000825	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        77	elf.c	FUNCTION_1
0x4000829	        0x4883c210	                           add rdx, 0x10	        77	elf.c	FUNCTION_1
0x400082d	          0x4889d7	                            mov rdi, rdx	        77	elf.c	FUNCTION_1
0x4000830	            0xffd0	                                call rax	        77	elf.c	FUNCTION_1
0x4000832	          0x4889c2	                            mov rdx, rax	        77	elf.c	FUNCTION_1
0x4000835	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        77	elf.c	FUNCTION_1
0x4000839	        0x48895018	             mov qword [rax + 0x18], rdx	        77	elf.c	FUNCTION_1
0x400083d	              0x90	                                     nop	        78	elf.c	FUNCTION_1
0x400083e	              0xc9	                                   leave	        78	elf.c	FUNCTION_1
0x400083f	              0xc3	                                     ret	        78	elf.c	FUNCTION_1
_bfd_elf_validate_reloc	ELSE,3:DO,0:CALL,5:WHILE,0:FOR,0:IF,5:SWITCH,2:functions,0	133
0x40164d3	              0x55	                                push rbp	      8894	elf.c	FUNCTION_109
0x40164d4	          0x4889e5	                            mov rbp, rsp	      8894	elf.c	FUNCTION_109
0x40164d7	              0x53	                                push rbx	      8894	elf.c	FUNCTION_109
0x40164d8	        0x4883ec28	                           sub rsp, 0x28	      8894	elf.c	FUNCTION_109
0x40164dc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8894	elf.c	FUNCTION_109
0x40164e0	        0x488975d0	             mov qword [rbp - 0x30], rsi	      8894	elf.c	FUNCTION_109
0x40164e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8897	elf.c	FUNCTION_109	IF_1
0x40164e8	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x40164eb	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x40164ee	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x40164f1	        0x488b5008	                mov rdx, qword [rax + 8]	      8897	elf.c	FUNCTION_109	IF_1
0x40164f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8897	elf.c	FUNCTION_109	IF_1
0x40164f9	        0x488b4008	                mov rax, qword [rax + 8]	      8897	elf.c	FUNCTION_109	IF_1
0x40164fd	          0x4839c2	                            cmp rdx, rax	      8897	elf.c	FUNCTION_109	IF_1
0x4016500	     0xf845e010000	                            je 0x4016664	      8897	elf.c	FUNCTION_109	IF_1
0x4016506	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x401650a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x401650e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x4016511	            0x85c0	                           test eax, eax	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x4016513	     0xf84cf000000	                            je 0x40165e8	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x4016519	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401651d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016521	          0x8b400c	              mov eax, dword [rax + 0xc]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016524	          0x83e808	                              sub eax, 8	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016527	          0x83f838	                           cmp eax, 0x38	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401652a	     0xf873b010000	                            ja 0x401666b	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016530	            0x89c0	                            mov eax, eax	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016532	    0x488b04c50000	                  mov rax, qword [rax*8]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401653a	            0xffe0	                                 jmp rax	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401653c	    0xc745e40d0000	            mov dword [rbp - 0x1c], 0xd 	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016543	            0xeb2c	                           jmp 0x4016571	      8911	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016545	    0xc745e40c0000	            mov dword [rbp - 0x1c], 0xc 	      8913	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401654c	            0xeb23	                           jmp 0x4016571	      8914	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401654e	    0xc745e40b0000	            mov dword [rbp - 0x1c], 0xb 	      8916	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016555	            0xeb1a	                           jmp 0x4016571	      8917	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016557	    0xc745e40a0000	             mov dword [rbp - 0x1c], 0xa	      8919	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401655e	            0xeb11	                           jmp 0x4016571	      8920	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016560	    0xc745e4090000	               mov dword [rbp - 0x1c], 9	      8922	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016567	            0xeb08	                           jmp 0x4016571	      8923	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016569	    0xc745e4080000	               mov dword [rbp - 0x1c], 8	      8925	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016570	              0x90	                                     nop	      8926	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4016571	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x4016574	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x4016578	            0x89d6	                            mov esi, edx	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x401657a	          0x4889c7	                            mov rdi, rax	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x401657d	      0xe800000000	                          call 0x4016582	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x4016582	        0x488945e8	             mov qword [rbp - 0x18], rax	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x4016586	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x401658a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x401658e	          0x8b5048	            mov edx, dword [rax + 0x48] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4016591	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4016595	          0x8b4048	            mov eax, dword [rax + 0x48] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4016598	            0x39c2	                            cmp edx, eax	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x401659a	     0xf84b1000000	                            je 0x4016651	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x40165a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165a4	          0x8b4048	            mov eax, dword [rax + 0x48] 	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165a7	            0x85c0	                           test eax, eax	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165a9	            0x7420	                            je 0x40165cb	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165af	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165b7	        0x488b4008	                mov rax, qword [rax + 8]	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165bb	          0x4801c2	                            add rdx, rax	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165c2	        0x48895010	             mov qword [rax + 0x10], rdx	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165c6	      0xe986000000	                           jmp 0x4016651	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x40165cb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165cf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165d7	        0x488b4008	                mov rax, qword [rax + 8]	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165db	          0x4829c2	                            sub rdx, rax	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165e2	        0x48895010	             mov qword [rax + 0x10], rdx	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165e6	            0xeb69	                           jmp 0x4016651	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40165e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40165ec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40165f0	          0x8b400c	              mov eax, dword [rax + 0xc]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40165f3	          0x83e808	                              sub eax, 8	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40165f6	          0x83f838	                           cmp eax, 0x38	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40165f9	            0x7773	                            ja 0x401666e	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40165fb	            0x89c0	                            mov eax, eax	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40165fd	    0x488b04c50000	                  mov rax, qword [rax*8]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016605	            0xffe0	                                 jmp rax	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016607	    0xc745e4070000	               mov dword [rbp - 0x1c], 7	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401660e	            0xeb2c	                           jmp 0x401663c	      8947	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016610	    0xc745e4060000	               mov dword [rbp - 0x1c], 6	      8949	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016617	            0xeb23	                           jmp 0x401663c	      8950	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016619	    0xc745e4050000	               mov dword [rbp - 0x1c], 5	      8952	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016620	            0xeb1a	                           jmp 0x401663c	      8953	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016622	    0xc745e4030000	               mov dword [rbp - 0x1c], 3	      8955	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016629	            0xeb11	                           jmp 0x401663c	      8956	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401662b	    0xc745e4020000	               mov dword [rbp - 0x1c], 2	      8958	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016632	            0xeb08	                           jmp 0x401663c	      8959	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016634	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      8961	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401663b	              0x90	                                     nop	      8962	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401663c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x401663f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x4016643	            0x89d6	                            mov esi, edx	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x4016645	          0x4889c7	                            mov rdi, rax	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x4016648	      0xe800000000	                          call 0x401664d	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x401664d	        0x488945e8	             mov qword [rbp - 0x18], rax	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x4016651	      0x48837de800	               cmp qword [rbp - 0x18], 0	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x4016656	            0x7419	                            je 0x4016671	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x4016658	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8971	elf.c	FUNCTION_109	IF_1	IF_5
0x401665c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      8971	elf.c	FUNCTION_109	IF_1	IF_5
0x4016660	        0x48895018	             mov qword [rax + 0x18], rdx	      8971	elf.c	FUNCTION_109	IF_1	IF_5
0x4016664	      0xb801000000	                              mov eax, 1	      8976	elf.c	FUNCTION_109
0x4016669	            0xeb4b	                           jmp 0x40166b6	      8976	elf.c	FUNCTION_109
0x401666b	              0x90	                                     nop	      8928	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401666c	            0xeb04	                           jmp 0x4016672	      8928	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401666e	              0x90	                                     nop	      8964	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401666f	            0xeb01	                           jmp 0x4016672	      8964	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4016671	              0x90	                                     nop	      8973	elf.c	FUNCTION_109	IF_1	ELSE_3
0x4016672	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8981	elf.c	FUNCTION_109
0x4016676	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8981	elf.c	FUNCTION_109
0x401667a	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      8980	elf.c	FUNCTION_109	CALL_4
0x401667e	      0xbe00000000	                              mov esi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x4016683	      0xbf00000000	                              mov edi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x4016688	      0xe800000000	                          call 0x401668d	      8980	elf.c	FUNCTION_109	CALL_4
0x401668d	          0x4889c1	                            mov rcx, rax	      8980	elf.c	FUNCTION_109	CALL_4
0x4016690	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8980	elf.c	FUNCTION_109	CALL_4
0x4016694	          0x4889da	                            mov rdx, rbx	      8980	elf.c	FUNCTION_109	CALL_4
0x4016697	          0x4889c6	                            mov rsi, rax	      8980	elf.c	FUNCTION_109	CALL_4
0x401669a	          0x4889cf	                            mov rdi, rcx	      8980	elf.c	FUNCTION_109	CALL_4
0x401669d	      0xb800000000	                              mov eax, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x40166a2	      0xe800000000	                          call 0x40166a7	      8980	elf.c	FUNCTION_109	CALL_4
0x40166a7	      0xbf11000000	                           mov edi, 0x11	      8982	elf.c	FUNCTION_109	CALL_5
0x40166ac	      0xe800000000	                          call 0x40166b1	      8982	elf.c	FUNCTION_109	CALL_5
0x40166b1	      0xb800000000	                              mov eax, 0	      8983	elf.c	FUNCTION_109
0x40166b6	        0x4883c428	                           add rsp, 0x28	      8984	elf.c	FUNCTION_109
0x40166ba	              0x5b	                                 pop rbx	      8984	elf.c	FUNCTION_109
0x40166bb	              0x5d	                                 pop rbp	      8984	elf.c	FUNCTION_109
0x40166bc	              0xc3	                                     ret	      8984	elf.c	FUNCTION_109
elfcore_write_prxfpreg	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019b7b	              0x55	                                push rbp	     10774	elf.c	FUNCTION_169
0x4019b7c	          0x4889e5	                            mov rbp, rsp	     10774	elf.c	FUNCTION_169
0x4019b7f	        0x4883ec40	                           sub rsp, 0x40	     10774	elf.c	FUNCTION_169
0x4019b83	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10774	elf.c	FUNCTION_169
0x4019b87	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10774	elf.c	FUNCTION_169
0x4019b8b	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10774	elf.c	FUNCTION_169
0x4019b8f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10774	elf.c	FUNCTION_169
0x4019b93	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10774	elf.c	FUNCTION_169
0x4019b97	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10775	elf.c	FUNCTION_169
0x4019b9f	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10776	elf.c	FUNCTION_169	CALL_1
0x4019ba3	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10776	elf.c	FUNCTION_169	CALL_1
0x4019ba7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bab	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10776	elf.c	FUNCTION_169	CALL_1
0x4019baf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bb3	        0x4883ec08	                              sub rsp, 8	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bb7	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bba	              0x57	                                push rdi	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bbb	          0x4d89c1	                              mov r9, r8	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bbe	    0x41b87f2be646	                     mov r8d, 0x46e62b7f	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bc4	          0x4889c7	                            mov rdi, rax	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bc7	      0xe800000000	                          call 0x4019bcc	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bcc	        0x4883c410	                           add rsp, 0x10	     10776	elf.c	FUNCTION_169	CALL_1
0x4019bd0	              0xc9	                                   leave	     10778	elf.c	FUNCTION_169
0x4019bd1	              0xc3	                                     ret	     10778	elf.c	FUNCTION_169
elfcore_write_xstatereg	ELSE,1:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	32
0x4019bd2	              0x55	                                push rbp	     10783	elf.c	FUNCTION_170
0x4019bd3	          0x4889e5	                            mov rbp, rsp	     10783	elf.c	FUNCTION_170
0x4019bd6	        0x4883ec40	                           sub rsp, 0x40	     10783	elf.c	FUNCTION_170
0x4019bda	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10783	elf.c	FUNCTION_170
0x4019bde	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10783	elf.c	FUNCTION_170
0x4019be2	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10783	elf.c	FUNCTION_170
0x4019be6	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10783	elf.c	FUNCTION_170
0x4019bea	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10783	elf.c	FUNCTION_170
0x4019bee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4019bf2	        0x488b4008	                mov rax, qword [rax + 8]	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4019bf6	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4019bfd	          0x8b400c	              mov eax, dword [rax + 0xc]	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4019c00	          0x83f809	                              cmp eax, 9	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4019c03	            0x750a	                           jne 0x4019c0f	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4019c05	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10786	elf.c	FUNCTION_170	IF_1
0x4019c0d	            0xeb08	                           jmp 0x4019c17	     10786	elf.c	FUNCTION_170	IF_1
0x4019c0f	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10788	elf.c	FUNCTION_170	ELSE_1
0x4019c17	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c1b	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c1f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c23	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c2b	        0x4883ec08	                              sub rsp, 8	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c2f	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c32	              0x57	                                push rdi	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c33	          0x4d89c1	                              mov r9, r8	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c36	    0x41b802020000	                          mov r8d, 0x202	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c3c	          0x4889c7	                            mov rdi, rax	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c3f	      0xe800000000	                          call 0x4019c44	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c44	        0x4883c410	                           add rsp, 0x10	     10789	elf.c	FUNCTION_170	CALL_2
0x4019c48	              0xc9	                                   leave	     10791	elf.c	FUNCTION_170
0x4019c49	              0xc3	                                     ret	     10791	elf.c	FUNCTION_170
elfcore_grok_prstatus	ELSE,2:DO,0:CALL,15:WHILE,0:FOR,0:IF,6:SWITCH,0:functions,0	112
0x40169b5	              0x55	                                push rbp	      9112	elf.c	FUNCTION_115
0x40169b6	          0x4889e5	                            mov rbp, rsp	      9112	elf.c	FUNCTION_115
0x40169b9	    0x4881ec800100	                          sub rsp, 0x180	      9112	elf.c	FUNCTION_115
0x40169c0	    0x4889bd88feff	            mov qword [rbp - 0x178], rdi	      9112	elf.c	FUNCTION_115
0x40169c7	    0x4889b580feff	            mov qword [rbp - 0x180], rsi	      9112	elf.c	FUNCTION_115
0x40169ce	    0x64488b042528	                mov rax, qword fs:[0x28]	      9112	elf.c	FUNCTION_115
0x40169d7	        0x488945f8	                mov qword [rbp - 8], rax	      9112	elf.c	FUNCTION_115
0x40169db	            0x31c0	                            xor eax, eax	      9112	elf.c	FUNCTION_115
0x40169dd	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      9116	elf.c	FUNCTION_115	IF_1
0x40169e4	        0x488b4008	                mov rax, qword [rax + 8]	      9116	elf.c	FUNCTION_115	IF_1
0x40169e8	    0x483d50010000	                          cmp rax, 0x150	      9116	elf.c	FUNCTION_115	IF_1
0x40169ee	     0xf85d1000000	                           jne 0x4016ac5	      9116	elf.c	FUNCTION_115	IF_1
0x40169f4	    0x48c78598feff	          mov qword [rbp - 0x168], 0xd8 	      9120	elf.c	FUNCTION_115	IF_1
0x40169ff	    0xc78594feffff	          mov dword [rbp - 0x16c], 0x70 	      9121	elf.c	FUNCTION_115	IF_1
0x4016a09	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a10	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a14	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a1b	          0x4889d6	                            mov rsi, rdx	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a1e	      0xba2a000000	                           mov edx, 0x2a	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a23	          0x4889c7	                            mov rdi, rax	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a26	          0x4889d1	                            mov rcx, rdx	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a29	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4016a2c	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4016a33	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4016a3a	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4016a41	            0x8b00	                    mov eax, dword [rax]	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4016a43	            0x85c0	                           test eax, eax	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4016a45	            0x7521	                           jne 0x4016a68	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4016a47	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4016a4e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4016a55	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4016a5c	     0xfb795acfeff	           movzx edx, word [rbp - 0x154]	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4016a63	           0xfbfd2	                           movsx edx, dx	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4016a66	            0x8910	                    mov dword [rax], edx	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4016a68	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4016a6f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4016a76	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4016a7d	          0x8b4004	                mov eax, dword [rax + 4]	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4016a80	            0x85c0	                           test eax, eax	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4016a82	            0x751e	                           jne 0x4016aa2	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4016a84	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x4016a8b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x4016a92	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x4016a99	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x4016a9f	          0x895004	                mov dword [rax + 4], edx	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x4016aa2	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4016aa9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4016ab0	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4016ab7	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4016abd	          0x895008	                mov dword [rax + 8], edx	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4016ac0	      0xe9ec000000	                           jmp 0x4016bb1	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4016ac5	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4016acc	        0x488b4008	                mov rax, qword [rax + 8]	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4016ad0	    0x483d90000000	                           cmp rax, 0x90	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4016ad6	     0xf85ce000000	                           jne 0x4016baa	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4016adc	    0x48c78598feff	          mov qword [rbp - 0x168], 0x44 	      9149	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4016ae7	    0xc78594feffff	          mov dword [rbp - 0x16c], 0x48 	      9150	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4016af1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016af8	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016afc	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016b03	          0x4889d6	                            mov rsi, rdx	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016b06	      0xba12000000	                           mov edx, 0x12	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016b0b	          0x4889c7	                            mov rdi, rax	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016b0e	          0x4889d1	                            mov rcx, rdx	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016b11	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4016b14	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4016b1b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4016b22	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4016b29	            0x8b00	                    mov eax, dword [rax]	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4016b2b	            0x85c0	                           test eax, eax	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4016b2d	            0x7521	                           jne 0x4016b50	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4016b2f	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4016b36	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4016b3d	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4016b44	     0xfb795acfeff	           movzx edx, word [rbp - 0x154]	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4016b4b	           0xfbfd2	                           movsx edx, dx	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4016b4e	            0x8910	                    mov dword [rax], edx	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4016b50	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4016b57	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4016b5e	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4016b65	          0x8b4004	                mov eax, dword [rax + 4]	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4016b68	            0x85c0	                           test eax, eax	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4016b6a	            0x751e	                           jne 0x4016b8a	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4016b6c	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x4016b73	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x4016b7a	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x4016b81	    0x8b95b8feffff	            mov edx, dword [rbp - 0x148]	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x4016b87	          0x895004	                mov dword [rax + 4], edx	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x4016b8a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4016b91	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4016b98	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4016b9f	    0x8b95b8feffff	            mov edx, dword [rbp - 0x148]	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4016ba5	          0x895008	                mov dword [rax + 8], edx	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4016ba8	            0xeb07	                           jmp 0x4016bb1	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4016baa	      0xb801000000	                              mov eax, 1	      9177	elf.c	FUNCTION_115	ELSE_2
0x4016baf	            0xeb32	                           jmp 0x4016be3	      9177	elf.c	FUNCTION_115	ELSE_2
0x4016bb1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      9182	elf.c	FUNCTION_115
0x4016bb8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      9182	elf.c	FUNCTION_115
0x4016bbc	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      9181	elf.c	FUNCTION_115	CALL_15
0x4016bc2	            0x4898	                                    cdqe	      9181	elf.c	FUNCTION_115	CALL_15
0x4016bc4	        0x488d0c02	                    lea rcx, [rdx + rax]	      9181	elf.c	FUNCTION_115	CALL_15
0x4016bc8	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      9181	elf.c	FUNCTION_115	CALL_15
0x4016bcf	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      9181	elf.c	FUNCTION_115	CALL_15
0x4016bd6	      0xbe00000000	                              mov esi, 0	      9181	elf.c	FUNCTION_115	CALL_15
0x4016bdb	          0x4889c7	                            mov rdi, rax	      9181	elf.c	FUNCTION_115	CALL_15
0x4016bde	      0xe800000000	                          call 0x4016be3	      9181	elf.c	FUNCTION_115	CALL_15
0x4016be3	        0x488b75f8	                mov rsi, qword [rbp - 8]	      9183	elf.c	FUNCTION_115
0x4016be7	    0x644833342528	                xor rsi, qword fs:[0x28]	      9183	elf.c	FUNCTION_115
0x4016bf0	            0x7405	                            je 0x4016bf7	      9183	elf.c	FUNCTION_115
0x4016bf2	      0xe800000000	                          call 0x4016bf7	      9183	elf.c	FUNCTION_115
0x4016bf7	              0xc9	                                   leave	      9183	elf.c	FUNCTION_115
0x4016bf8	              0xc3	                                     ret	      9183	elf.c	FUNCTION_115
elfcore_write_prstatus	ELSE,1:DO,0:CALL,8:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	121
0x40198a4	              0x55	                                push rbp	     10644	elf.c	FUNCTION_165
0x40198a5	          0x4889e5	                            mov rbp, rsp	     10644	elf.c	FUNCTION_165
0x40198a8	    0x4881eca00100	                          sub rsp, 0x1a0	     10644	elf.c	FUNCTION_165
0x40198af	    0x4889bd88feff	            mov qword [rbp - 0x178], rdi	     10644	elf.c	FUNCTION_165
0x40198b6	    0x4889b580feff	            mov qword [rbp - 0x180], rsi	     10644	elf.c	FUNCTION_165
0x40198bd	    0x48899578feff	            mov qword [rbp - 0x188], rdx	     10644	elf.c	FUNCTION_165
0x40198c4	    0x48898d70feff	            mov qword [rbp - 0x190], rcx	     10644	elf.c	FUNCTION_165
0x40198cb	    0x4489856cfeff	            mov dword [rbp - 0x194], r8d	     10644	elf.c	FUNCTION_165
0x40198d2	    0x4c898d60feff	             mov qword [rbp - 0x1a0], r9	     10644	elf.c	FUNCTION_165
0x40198d9	    0x64488b042528	                mov rax, qword fs:[0x28]	     10644	elf.c	FUNCTION_165
0x40198e2	        0x488945f8	                mov qword [rbp - 8], rax	     10644	elf.c	FUNCTION_165
0x40198e6	            0x31c0	                            xor eax, eax	     10644	elf.c	FUNCTION_165
0x40198e8	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	     10645	elf.c	FUNCTION_165	CALL_1
0x40198ef	        0x488b4008	                mov rax, qword [rax + 8]	     10645	elf.c	FUNCTION_165	CALL_1
0x40198f3	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10645	elf.c	FUNCTION_165	CALL_1
0x40198fa	    0x48898590feff	            mov qword [rbp - 0x170], rax	     10645	elf.c	FUNCTION_165	CALL_1
0x4019901	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	     10647	elf.c	FUNCTION_165	IF_1
0x4019908	    0x488b80200200	           mov rax, qword [rax + 0x220] 	     10647	elf.c	FUNCTION_165	IF_1
0x401990f	          0x4885c0	                           test rax, rax	     10647	elf.c	FUNCTION_165	IF_1
0x4019912	            0x7471	                            je 0x4019985	     10647	elf.c	FUNCTION_165	IF_1
0x4019914	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	     10650	elf.c	FUNCTION_165	IF_1
0x401991b	    0x4c8b90200200	           mov r10, qword [rax + 0x220] 	     10650	elf.c	FUNCTION_165	IF_1
0x4019922	    0x8bbd6cfeffff	            mov edi, dword [rbp - 0x194]	     10650	elf.c	FUNCTION_165	IF_1
0x4019928	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	     10650	elf.c	FUNCTION_165	IF_1
0x401992f	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	     10650	elf.c	FUNCTION_165	IF_1
0x4019936	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	     10650	elf.c	FUNCTION_165	IF_1
0x401993d	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	     10650	elf.c	FUNCTION_165	IF_1
0x4019944	        0x4883ec08	                              sub rsp, 8	     10650	elf.c	FUNCTION_165	IF_1
0x4019948	    0xffb560feffff	                push qword [rbp - 0x1a0]	     10650	elf.c	FUNCTION_165	IF_1
0x401994e	          0x4189f9	                            mov r9d, edi	     10650	elf.c	FUNCTION_165	IF_1
0x4019951	          0x4989c8	                             mov r8, rcx	     10650	elf.c	FUNCTION_165	IF_1
0x4019954	      0xb901000000	                              mov ecx, 1	     10650	elf.c	FUNCTION_165	IF_1
0x4019959	          0x4889c7	                            mov rdi, rax	     10650	elf.c	FUNCTION_165	IF_1
0x401995c	      0xb800000000	                              mov eax, 0	     10650	elf.c	FUNCTION_165	IF_1
0x4019961	          0x41ffd2	                                call r10	     10650	elf.c	FUNCTION_165	IF_1
0x4019964	        0x4883c410	                           add rsp, 0x10	     10650	elf.c	FUNCTION_165	IF_1
0x4019968	    0x48898598feff	            mov qword [rbp - 0x168], rax	     10650	elf.c	FUNCTION_165	IF_1
0x401996f	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x4019977	            0x740c	                            je 0x4019985	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x4019979	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     10654	elf.c	FUNCTION_165	IF_1	IF_2
0x4019980	      0xe989010000	                           jmp 0x4019b0e	     10654	elf.c	FUNCTION_165	IF_1	IF_2
0x4019985	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	     10659	elf.c	FUNCTION_165	IF_3
0x401998c	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     10659	elf.c	FUNCTION_165	IF_3
0x4019993	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	     10659	elf.c	FUNCTION_165	IF_3
0x4019997	            0x3c01	                               cmp al, 1	     10659	elf.c	FUNCTION_165	IF_3
0x4019999	     0xf85de000000	                           jne 0x4019a7d	     10659	elf.c	FUNCTION_165	IF_3
0x401999f	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	     10663	elf.c	FUNCTION_165	IF_3	CALL_2
0x40199a6	      0xba90000000	                           mov edx, 0x90	     10663	elf.c	FUNCTION_165	IF_3	CALL_2
0x40199ab	      0xbe00000000	                              mov esi, 0	     10663	elf.c	FUNCTION_165	IF_3	CALL_2
0x40199b0	          0x4889c7	                            mov rdi, rax	     10663	elf.c	FUNCTION_165	IF_3	CALL_2
0x40199b3	      0xe800000000	                          call 0x40199b8	     10663	elf.c	FUNCTION_165	IF_3	CALL_2
0x40199b8	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     10664	elf.c	FUNCTION_165	IF_3
0x40199bf	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	     10664	elf.c	FUNCTION_165	IF_3
0x40199c5	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	     10665	elf.c	FUNCTION_165	IF_3
0x40199cb	    0x668985acfeff	              mov word [rbp - 0x154], ax	     10665	elf.c	FUNCTION_165	IF_3
0x40199d2	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199d9	          0x488b10	                    mov rdx, qword [rax]	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199dc	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199e3	        0x488b5008	                mov rdx, qword [rax + 8]	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199e7	    0x488995f0feff	            mov qword [rbp - 0x110], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199ee	        0x488b5010	            mov rdx, qword [rax + 0x10] 	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199f2	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199f9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x40199fd	    0x48899500ffff	            mov qword [rbp - 0x100], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a04	        0x488b5020	            mov rdx, qword [rax + 0x20] 	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a08	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a0f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a13	    0x48899510ffff	             mov qword [rbp - 0xf0], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a1a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a1e	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a25	        0x488b5038	            mov rdx, qword [rax + 0x38] 	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a29	    0x48899520ffff	             mov qword [rbp - 0xe0], rdx	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a30	          0x8b4040	            mov eax, dword [rax + 0x40] 	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a33	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	     10666	elf.c	FUNCTION_165	IF_3	CALL_3
0x4019a39	    0x488d8da0feff	                  lea rcx, [rbp - 0x160]	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a40	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a47	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a4e	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a55	        0x4883ec08	                              sub rsp, 8	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a59	      0x6890000000	                               push 0x90	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a5e	          0x4989c9	                             mov r9, rcx	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a61	    0x41b801000000	                              mov r8d, 1	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a67	      0xb900000000	                              mov ecx, 0	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a6c	          0x4889c7	                            mov rdi, rax	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a6f	      0xe800000000	                          call 0x4019a74	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a74	        0x4883c410	                           add rsp, 0x10	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a78	      0xe991000000	                           jmp 0x4019b0e	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4019a7d	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	     10675	elf.c	FUNCTION_165	ELSE_1	CALL_5
0x4019a84	      0xba50010000	                          mov edx, 0x150	     10675	elf.c	FUNCTION_165	ELSE_1	CALL_5
0x4019a89	      0xbe00000000	                              mov esi, 0	     10675	elf.c	FUNCTION_165	ELSE_1	CALL_5
0x4019a8e	          0x4889c7	                            mov rdi, rax	     10675	elf.c	FUNCTION_165	ELSE_1	CALL_5
0x4019a91	      0xe800000000	                          call 0x4019a96	     10675	elf.c	FUNCTION_165	ELSE_1	CALL_5
0x4019a96	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     10676	elf.c	FUNCTION_165	ELSE_1
0x4019a9d	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	     10676	elf.c	FUNCTION_165	ELSE_1
0x4019aa3	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	     10677	elf.c	FUNCTION_165	ELSE_1
0x4019aa9	    0x668985acfeff	              mov word [rbp - 0x154], ax	     10677	elf.c	FUNCTION_165	ELSE_1
0x4019ab0	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	     10678	elf.c	FUNCTION_165	ELSE_1	CALL_6
0x4019ab7	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	     10678	elf.c	FUNCTION_165	ELSE_1	CALL_6
0x4019abe	          0x4889d6	                            mov rsi, rdx	     10678	elf.c	FUNCTION_165	ELSE_1	CALL_6
0x4019ac1	      0xba1b000000	                           mov edx, 0x1b	     10678	elf.c	FUNCTION_165	ELSE_1	CALL_6
0x4019ac6	          0x4889c7	                            mov rdi, rax	     10678	elf.c	FUNCTION_165	ELSE_1	CALL_6
0x4019ac9	          0x4889d1	                            mov rcx, rdx	     10678	elf.c	FUNCTION_165	ELSE_1	CALL_6
0x4019acc	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     10678	elf.c	FUNCTION_165	ELSE_1	CALL_6
0x4019acf	    0x488d8da0feff	                  lea rcx, [rbp - 0x160]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019ad6	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019add	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019ae4	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019aeb	        0x4883ec08	                              sub rsp, 8	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019aef	      0x6850010000	                              push 0x150	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019af4	          0x4989c9	                             mov r9, rcx	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019af7	    0x41b801000000	                              mov r8d, 1	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019afd	      0xb900000000	                              mov ecx, 0	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019b02	          0x4889c7	                            mov rdi, rax	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019b05	      0xe800000000	                          call 0x4019b0a	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019b0a	        0x4883c410	                           add rsp, 0x10	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4019b0e	        0x488b7df8	                mov rdi, qword [rbp - 8]	     10686	elf.c	FUNCTION_165
0x4019b12	    0x6448333c2528	                xor rdi, qword fs:[0x28]	     10686	elf.c	FUNCTION_165
0x4019b1b	            0x7405	                            je 0x4019b22	     10686	elf.c	FUNCTION_165
0x4019b1d	      0xe800000000	                          call 0x4019b22	     10686	elf.c	FUNCTION_165
0x4019b22	              0xc9	                                   leave	     10686	elf.c	FUNCTION_165
0x4019b23	              0xc3	                                     ret	     10686	elf.c	FUNCTION_165
convert_zdebug_to_debug	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	34
0x40027c0	              0x55	                                push rbp	       981	elf.c	FUNCTION_25
0x40027c1	          0x4889e5	                            mov rbp, rsp	       981	elf.c	FUNCTION_25
0x40027c4	        0x4883ec20	                           sub rsp, 0x20	       981	elf.c	FUNCTION_25
0x40027c8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       981	elf.c	FUNCTION_25
0x40027cc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       981	elf.c	FUNCTION_25
0x40027d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       982	elf.c	FUNCTION_25	CALL_1
0x40027d4	          0x4889c7	                            mov rdi, rax	       982	elf.c	FUNCTION_25	CALL_1
0x40027d7	      0xe800000000	                          call 0x40027dc	       982	elf.c	FUNCTION_25	CALL_1
0x40027dc	          0x8945f4	              mov dword [rbp - 0xc], eax	       982	elf.c	FUNCTION_25	CALL_1
0x40027df	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       983	elf.c	FUNCTION_25	CALL_2
0x40027e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       983	elf.c	FUNCTION_25	CALL_2
0x40027e6	          0x4889d6	                            mov rsi, rdx	       983	elf.c	FUNCTION_25	CALL_2
0x40027e9	          0x4889c7	                            mov rdi, rax	       983	elf.c	FUNCTION_25	CALL_2
0x40027ec	      0xe800000000	                          call 0x40027f1	       983	elf.c	FUNCTION_25	CALL_2
0x40027f1	        0x488945f8	                mov qword [rbp - 8], rax	       983	elf.c	FUNCTION_25	CALL_2
0x40027f5	      0x48837df800	                  cmp qword [rbp - 8], 0	       984	elf.c	FUNCTION_25	IF_1
0x40027fa	            0x7507	                           jne 0x4002803	       984	elf.c	FUNCTION_25	IF_1
0x40027fc	      0xb800000000	                              mov eax, 0	       985	elf.c	FUNCTION_25	IF_1
0x4002801	            0xeb2e	                           jmp 0x4002831	       985	elf.c	FUNCTION_25	IF_1
0x4002803	        0x488b45f8	                mov rax, qword [rbp - 8]	       986	elf.c	FUNCTION_25
0x4002807	          0xc6002e	                    mov byte [rax], 0x2e	       986	elf.c	FUNCTION_25
0x400280a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       987	elf.c	FUNCTION_25	CALL_3
0x400280d	          0x83e801	                              sub eax, 1	       987	elf.c	FUNCTION_25	CALL_3
0x4002810	            0x89c2	                            mov edx, eax	       987	elf.c	FUNCTION_25	CALL_3
0x4002812	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       987	elf.c	FUNCTION_25	CALL_3
0x4002816	        0x488d4802	                      lea rcx, [rax + 2]	       987	elf.c	FUNCTION_25	CALL_3
0x400281a	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	elf.c	FUNCTION_25	CALL_3
0x400281e	        0x4883c001	                              add rax, 1	       987	elf.c	FUNCTION_25	CALL_3
0x4002822	          0x4889ce	                            mov rsi, rcx	       987	elf.c	FUNCTION_25	CALL_3
0x4002825	          0x4889c7	                            mov rdi, rax	       987	elf.c	FUNCTION_25	CALL_3
0x4002828	      0xe800000000	                          call 0x400282d	       987	elf.c	FUNCTION_25	CALL_3
0x400282d	        0x488b45f8	                mov rax, qword [rbp - 8]	       988	elf.c	FUNCTION_25
0x4002831	              0xc9	                                   leave	       989	elf.c	FUNCTION_25
0x4002832	              0xc3	                                     ret	       989	elf.c	FUNCTION_25
elfcore_grok_aarch_tls	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016f14	              0x55	                                push rbp	      9324	elf.c	FUNCTION_136
0x4016f15	          0x4889e5	                            mov rbp, rsp	      9324	elf.c	FUNCTION_136
0x4016f18	        0x4883ec10	                           sub rsp, 0x10	      9324	elf.c	FUNCTION_136
0x4016f1c	        0x48897df8	                mov qword [rbp - 8], rdi	      9324	elf.c	FUNCTION_136
0x4016f20	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9324	elf.c	FUNCTION_136
0x4016f24	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9325	elf.c	FUNCTION_136	CALL_1
0x4016f28	        0x488b45f8	                mov rax, qword [rbp - 8]	      9325	elf.c	FUNCTION_136	CALL_1
0x4016f2c	      0xbe00000000	                              mov esi, 0	      9325	elf.c	FUNCTION_136	CALL_1
0x4016f31	          0x4889c7	                            mov rdi, rax	      9325	elf.c	FUNCTION_136	CALL_1
0x4016f34	      0xe8c0fcffff	call sym.elfcore_make_note_pseudosection	      9325	elf.c	FUNCTION_136	CALL_1
0x4016f39	              0xc9	                                   leave	      9326	elf.c	FUNCTION_136
0x4016f3a	              0xc3	                                     ret	      9326	elf.c	FUNCTION_136
_bfd_elf_swap_verneed_in	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	58
0x4000a2f	              0x55	                                push rbp	       124	elf.c	FUNCTION_5
0x4000a30	          0x4889e5	                            mov rbp, rsp	       124	elf.c	FUNCTION_5
0x4000a33	        0x4883ec20	                           sub rsp, 0x20	       124	elf.c	FUNCTION_5
0x4000a37	        0x48897df8	                mov qword [rbp - 8], rdi	       124	elf.c	FUNCTION_5
0x4000a3b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       124	elf.c	FUNCTION_5
0x4000a3f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       124	elf.c	FUNCTION_5
0x4000a43	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	elf.c	FUNCTION_5
0x4000a47	        0x488b4008	                mov rax, qword [rax + 8]	       125	elf.c	FUNCTION_5
0x4000a4b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       125	elf.c	FUNCTION_5
0x4000a52	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       125	elf.c	FUNCTION_5
0x4000a56	          0x4889d7	                            mov rdi, rdx	       125	elf.c	FUNCTION_5
0x4000a59	            0xffd0	                                call rax	       125	elf.c	FUNCTION_5
0x4000a5b	            0x89c2	                            mov edx, eax	       125	elf.c	FUNCTION_5
0x4000a5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	elf.c	FUNCTION_5
0x4000a61	          0x668910	                      mov word [rax], dx	       125	elf.c	FUNCTION_5
0x4000a64	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	elf.c	FUNCTION_5
0x4000a68	        0x488b4008	                mov rax, qword [rax + 8]	       126	elf.c	FUNCTION_5
0x4000a6c	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       126	elf.c	FUNCTION_5
0x4000a73	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       126	elf.c	FUNCTION_5
0x4000a77	        0x4883c202	                              add rdx, 2	       126	elf.c	FUNCTION_5
0x4000a7b	          0x4889d7	                            mov rdi, rdx	       126	elf.c	FUNCTION_5
0x4000a7e	            0xffd0	                                call rax	       126	elf.c	FUNCTION_5
0x4000a80	            0x89c2	                            mov edx, eax	       126	elf.c	FUNCTION_5
0x4000a82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	elf.c	FUNCTION_5
0x4000a86	        0x66895002	                  mov word [rax + 2], dx	       126	elf.c	FUNCTION_5
0x4000a8a	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	elf.c	FUNCTION_5
0x4000a8e	        0x488b4008	                mov rax, qword [rax + 8]	       127	elf.c	FUNCTION_5
0x4000a92	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       127	elf.c	FUNCTION_5
0x4000a99	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	elf.c	FUNCTION_5
0x4000a9d	        0x4883c204	                              add rdx, 4	       127	elf.c	FUNCTION_5
0x4000aa1	          0x4889d7	                            mov rdi, rdx	       127	elf.c	FUNCTION_5
0x4000aa4	            0xffd0	                                call rax	       127	elf.c	FUNCTION_5
0x4000aa6	          0x4889c2	                            mov rdx, rax	       127	elf.c	FUNCTION_5
0x4000aa9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	elf.c	FUNCTION_5
0x4000aad	        0x48895008	                mov qword [rax + 8], rdx	       127	elf.c	FUNCTION_5
0x4000ab1	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	elf.c	FUNCTION_5
0x4000ab5	        0x488b4008	                mov rax, qword [rax + 8]	       128	elf.c	FUNCTION_5
0x4000ab9	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       128	elf.c	FUNCTION_5
0x4000ac0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       128	elf.c	FUNCTION_5
0x4000ac4	        0x4883c208	                              add rdx, 8	       128	elf.c	FUNCTION_5
0x4000ac8	          0x4889d7	                            mov rdi, rdx	       128	elf.c	FUNCTION_5
0x4000acb	            0xffd0	                                call rax	       128	elf.c	FUNCTION_5
0x4000acd	          0x4889c2	                            mov rdx, rax	       128	elf.c	FUNCTION_5
0x4000ad0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	elf.c	FUNCTION_5
0x4000ad4	        0x48895010	             mov qword [rax + 0x10], rdx	       128	elf.c	FUNCTION_5
0x4000ad8	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	elf.c	FUNCTION_5
0x4000adc	        0x488b4008	                mov rax, qword [rax + 8]	       129	elf.c	FUNCTION_5
0x4000ae0	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       129	elf.c	FUNCTION_5
0x4000ae7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       129	elf.c	FUNCTION_5
0x4000aeb	        0x4883c20c	                            add rdx, 0xc	       129	elf.c	FUNCTION_5
0x4000aef	          0x4889d7	                            mov rdi, rdx	       129	elf.c	FUNCTION_5
0x4000af2	            0xffd0	                                call rax	       129	elf.c	FUNCTION_5
0x4000af4	          0x4889c2	                            mov rdx, rax	       129	elf.c	FUNCTION_5
0x4000af7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	elf.c	FUNCTION_5
0x4000afb	        0x48895018	             mov qword [rax + 0x18], rdx	       129	elf.c	FUNCTION_5
0x4000aff	              0x90	                                     nop	       130	elf.c	FUNCTION_5
0x4000b00	              0xc9	                                   leave	       130	elf.c	FUNCTION_5
0x4000b01	              0xc3	                                     ret	       130	elf.c	FUNCTION_5
elfcore_grok_s390_high_gprs	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016cf2	              0x55	                                push rbp	      9240	elf.c	FUNCTION_122
0x4016cf3	          0x4889e5	                            mov rbp, rsp	      9240	elf.c	FUNCTION_122
0x4016cf6	        0x4883ec10	                           sub rsp, 0x10	      9240	elf.c	FUNCTION_122
0x4016cfa	        0x48897df8	                mov qword [rbp - 8], rdi	      9240	elf.c	FUNCTION_122
0x4016cfe	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9240	elf.c	FUNCTION_122
0x4016d02	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9241	elf.c	FUNCTION_122	CALL_1
0x4016d06	        0x488b45f8	                mov rax, qword [rbp - 8]	      9241	elf.c	FUNCTION_122	CALL_1
0x4016d0a	      0xbe00000000	                              mov esi, 0	      9241	elf.c	FUNCTION_122	CALL_1
0x4016d0f	          0x4889c7	                            mov rdi, rax	      9241	elf.c	FUNCTION_122	CALL_1
0x4016d12	      0xe8e2feffff	call sym.elfcore_make_note_pseudosection	      9241	elf.c	FUNCTION_122	CALL_1
0x4016d17	              0xc9	                                   leave	      9242	elf.c	FUNCTION_122
0x4016d18	              0xc3	                                     ret	      9242	elf.c	FUNCTION_122
elfcore_write_note	ELSE,0:DO,0:CALL,4:WHILE,2:FOR,0:IF,3:SWITCH,0:functions,0	132
0x401922d	              0x55	                                push rbp	     10470	elf.c	FUNCTION_161
0x401922e	          0x4889e5	                            mov rbp, rsp	     10470	elf.c	FUNCTION_161
0x4019231	        0x4883ec50	                           sub rsp, 0x50	     10470	elf.c	FUNCTION_161
0x4019235	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     10470	elf.c	FUNCTION_161
0x4019239	        0x488975d0	             mov qword [rbp - 0x30], rsi	     10470	elf.c	FUNCTION_161
0x401923d	        0x488955c8	             mov qword [rbp - 0x38], rdx	     10470	elf.c	FUNCTION_161
0x4019241	        0x48894dc0	             mov qword [rbp - 0x40], rcx	     10470	elf.c	FUNCTION_161
0x4019245	        0x448945bc	             mov dword [rbp - 0x44], r8d	     10470	elf.c	FUNCTION_161
0x4019249	        0x4c894db0	              mov qword [rbp - 0x50], r9	     10470	elf.c	FUNCTION_161
0x401924d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	     10476	elf.c	FUNCTION_161
0x4019255	      0x48837dc000	               cmp qword [rbp - 0x40], 0	     10477	elf.c	FUNCTION_161	IF_1
0x401925a	            0x7414	                            je 0x4019270	     10477	elf.c	FUNCTION_161	IF_1
0x401925c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10478	elf.c	FUNCTION_161	CALL_1
0x4019260	          0x4889c7	                            mov rdi, rax	     10478	elf.c	FUNCTION_161	CALL_1
0x4019263	      0xe800000000	                          call 0x4019268	     10478	elf.c	FUNCTION_161	CALL_1
0x4019268	        0x4883c001	                              add rax, 1	     10478	elf.c	FUNCTION_161	CALL_1
0x401926c	        0x488945e0	             mov qword [rbp - 0x20], rax	     10478	elf.c	FUNCTION_161	CALL_1
0x4019270	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10480	elf.c	FUNCTION_161
0x4019274	        0x4883c003	                              add rax, 3	     10480	elf.c	FUNCTION_161
0x4019278	        0x4883e0fc	             and rax, 0xfffffffffffffffc	     10480	elf.c	FUNCTION_161
0x401927c	          0x4889c2	                            mov rdx, rax	     10480	elf.c	FUNCTION_161
0x401927f	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10480	elf.c	FUNCTION_161
0x4019282	          0x83c003	                              add eax, 3	     10480	elf.c	FUNCTION_161
0x4019285	          0x83e0fc	                     and eax, 0xfffffffc	     10480	elf.c	FUNCTION_161
0x4019288	            0x4898	                                    cdqe	     10480	elf.c	FUNCTION_161
0x401928a	          0x4801d0	                            add rax, rdx	     10480	elf.c	FUNCTION_161
0x401928d	        0x4883c00c	                            add rax, 0xc	     10480	elf.c	FUNCTION_161
0x4019291	        0x488945f0	             mov qword [rbp - 0x10], rax	     10480	elf.c	FUNCTION_161
0x4019295	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10482	elf.c	FUNCTION_161	CALL_2
0x4019299	            0x8b00	                    mov eax, dword [rax]	     10482	elf.c	FUNCTION_161	CALL_2
0x401929b	          0x4863d0	                         movsxd rdx, eax	     10482	elf.c	FUNCTION_161	CALL_2
0x401929e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10482	elf.c	FUNCTION_161	CALL_2
0x40192a2	          0x4801c2	                            add rdx, rax	     10482	elf.c	FUNCTION_161	CALL_2
0x40192a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10482	elf.c	FUNCTION_161	CALL_2
0x40192a9	          0x4889d6	                            mov rsi, rdx	     10482	elf.c	FUNCTION_161	CALL_2
0x40192ac	          0x4889c7	                            mov rdi, rax	     10482	elf.c	FUNCTION_161	CALL_2
0x40192af	      0xe800000000	                          call 0x40192b4	     10482	elf.c	FUNCTION_161	CALL_2
0x40192b4	        0x488945d0	             mov qword [rbp - 0x30], rax	     10482	elf.c	FUNCTION_161	CALL_2
0x40192b8	      0x48837dd000	               cmp qword [rbp - 0x30], 0	     10483	elf.c	FUNCTION_161	IF_2
0x40192bd	            0x7509	                           jne 0x40192c8	     10483	elf.c	FUNCTION_161	IF_2
0x40192bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10484	elf.c	FUNCTION_161	IF_2
0x40192c3	      0xe934010000	                           jmp 0x40193fc	     10484	elf.c	FUNCTION_161	IF_2
0x40192c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10485	elf.c	FUNCTION_161
0x40192cc	            0x8b00	                    mov eax, dword [rax]	     10485	elf.c	FUNCTION_161
0x40192ce	          0x4863d0	                         movsxd rdx, eax	     10485	elf.c	FUNCTION_161
0x40192d1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10485	elf.c	FUNCTION_161
0x40192d5	          0x4801d0	                            add rax, rdx	     10485	elf.c	FUNCTION_161
0x40192d8	        0x488945e8	             mov qword [rbp - 0x18], rax	     10485	elf.c	FUNCTION_161
0x40192dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10486	elf.c	FUNCTION_161
0x40192e0	            0x8b00	                    mov eax, dword [rax]	     10486	elf.c	FUNCTION_161
0x40192e2	            0x89c2	                            mov edx, eax	     10486	elf.c	FUNCTION_161
0x40192e4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10486	elf.c	FUNCTION_161
0x40192e8	             0x1d0	                            add eax, edx	     10486	elf.c	FUNCTION_161
0x40192ea	            0x89c2	                            mov edx, eax	     10486	elf.c	FUNCTION_161
0x40192ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10486	elf.c	FUNCTION_161
0x40192f0	            0x8910	                    mov dword [rax], edx	     10486	elf.c	FUNCTION_161
0x40192f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10487	elf.c	FUNCTION_161
0x40192f6	        0x488945f8	                mov qword [rbp - 8], rax	     10487	elf.c	FUNCTION_161
0x40192fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10488	elf.c	FUNCTION_161
0x40192fe	        0x488b4008	                mov rax, qword [rax + 8]	     10488	elf.c	FUNCTION_161
0x4019302	    0x488b80900000	            mov rax, qword [rax + 0x90] 	     10488	elf.c	FUNCTION_161
0x4019309	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10488	elf.c	FUNCTION_161
0x401930d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10488	elf.c	FUNCTION_161
0x4019311	          0x4889ce	                            mov rsi, rcx	     10488	elf.c	FUNCTION_161
0x4019314	          0x4889d7	                            mov rdi, rdx	     10488	elf.c	FUNCTION_161
0x4019317	            0xffd0	                                call rax	     10488	elf.c	FUNCTION_161
0x4019319	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10489	elf.c	FUNCTION_161
0x401931d	        0x488b4008	                mov rax, qword [rax + 8]	     10489	elf.c	FUNCTION_161
0x4019321	    0x488b80900000	            mov rax, qword [rax + 0x90] 	     10489	elf.c	FUNCTION_161
0x4019328	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10489	elf.c	FUNCTION_161
0x401932c	        0x488d4a04	                      lea rcx, [rdx + 4]	     10489	elf.c	FUNCTION_161
0x4019330	          0x8b5510	            mov edx, dword [rbp + 0x10] 	     10489	elf.c	FUNCTION_161
0x4019333	          0x4863d2	                         movsxd rdx, edx	     10489	elf.c	FUNCTION_161
0x4019336	          0x4889ce	                            mov rsi, rcx	     10489	elf.c	FUNCTION_161
0x4019339	          0x4889d7	                            mov rdi, rdx	     10489	elf.c	FUNCTION_161
0x401933c	            0xffd0	                                call rax	     10489	elf.c	FUNCTION_161
0x401933e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10490	elf.c	FUNCTION_161
0x4019342	        0x488b4008	                mov rax, qword [rax + 8]	     10490	elf.c	FUNCTION_161
0x4019346	    0x488b80900000	            mov rax, qword [rax + 0x90] 	     10490	elf.c	FUNCTION_161
0x401934d	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10490	elf.c	FUNCTION_161
0x4019351	        0x488d4a08	                      lea rcx, [rdx + 8]	     10490	elf.c	FUNCTION_161
0x4019355	          0x8b55bc	             mov edx, dword [rbp - 0x44]	     10490	elf.c	FUNCTION_161
0x4019358	          0x4863d2	                         movsxd rdx, edx	     10490	elf.c	FUNCTION_161
0x401935b	          0x4889ce	                            mov rsi, rcx	     10490	elf.c	FUNCTION_161
0x401935e	          0x4889d7	                            mov rdi, rdx	     10490	elf.c	FUNCTION_161
0x4019361	            0xffd0	                                call rax	     10490	elf.c	FUNCTION_161
0x4019363	        0x488b45f8	                mov rax, qword [rbp - 8]	     10491	elf.c	FUNCTION_161
0x4019367	        0x4883c00c	                            add rax, 0xc	     10491	elf.c	FUNCTION_161
0x401936b	        0x488945e8	             mov qword [rbp - 0x18], rax	     10491	elf.c	FUNCTION_161
0x401936f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	     10492	elf.c	FUNCTION_161	IF_3
0x4019374	            0x7441	                            je 0x40193b7	     10492	elf.c	FUNCTION_161	IF_3
0x4019376	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10494	elf.c	FUNCTION_161	IF_3	CALL_3
0x401937a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	     10494	elf.c	FUNCTION_161	IF_3	CALL_3
0x401937e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10494	elf.c	FUNCTION_161	IF_3	CALL_3
0x4019382	          0x4889ce	                            mov rsi, rcx	     10494	elf.c	FUNCTION_161	IF_3	CALL_3
0x4019385	          0x4889c7	                            mov rdi, rax	     10494	elf.c	FUNCTION_161	IF_3	CALL_3
0x4019388	      0xe800000000	                          call 0x401938d	     10494	elf.c	FUNCTION_161	IF_3	CALL_3
0x401938d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10495	elf.c	FUNCTION_161	IF_3
0x4019391	        0x480145e8	            add qword [rbp - 0x18], rax 	     10495	elf.c	FUNCTION_161	IF_3
0x4019395	            0xeb14	                           jmp 0x40193ab	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x4019397	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x401939b	        0x488d5001	                      lea rdx, [rax + 1]	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x401939f	        0x488955e8	             mov qword [rbp - 0x18], rdx	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40193a3	          0xc60000	                       mov byte [rax], 0	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40193a6	      0x488345e001	               add qword [rbp - 0x20], 1	     10499	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40193ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40193af	          0x83e003	                              and eax, 3	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40193b2	          0x4885c0	                           test rax, rax	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40193b5	            0x75e0	                           jne 0x4019397	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40193b7	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10502	elf.c	FUNCTION_161	CALL_4
0x40193ba	          0x4863d0	                         movsxd rdx, eax	     10502	elf.c	FUNCTION_161	CALL_4
0x40193bd	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	     10502	elf.c	FUNCTION_161	CALL_4
0x40193c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10502	elf.c	FUNCTION_161	CALL_4
0x40193c5	          0x4889ce	                            mov rsi, rcx	     10502	elf.c	FUNCTION_161	CALL_4
0x40193c8	          0x4889c7	                            mov rdi, rax	     10502	elf.c	FUNCTION_161	CALL_4
0x40193cb	      0xe800000000	                          call 0x40193d0	     10502	elf.c	FUNCTION_161	CALL_4
0x40193d0	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10503	elf.c	FUNCTION_161
0x40193d3	            0x4898	                                    cdqe	     10503	elf.c	FUNCTION_161
0x40193d5	        0x480145e8	            add qword [rbp - 0x18], rax 	     10503	elf.c	FUNCTION_161
0x40193d9	            0xeb13	                           jmp 0x40193ee	     10504	elf.c	FUNCTION_161	WHILE_2
0x40193db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10506	elf.c	FUNCTION_161	WHILE_2
0x40193df	        0x488d5001	                      lea rdx, [rax + 1]	     10506	elf.c	FUNCTION_161	WHILE_2
0x40193e3	        0x488955e8	             mov qword [rbp - 0x18], rdx	     10506	elf.c	FUNCTION_161	WHILE_2
0x40193e7	          0xc60000	                       mov byte [rax], 0	     10506	elf.c	FUNCTION_161	WHILE_2
0x40193ea	        0x83451001	               add dword [rbp + 0x10], 1	     10507	elf.c	FUNCTION_161	WHILE_2
0x40193ee	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10504	elf.c	FUNCTION_161	WHILE_2
0x40193f1	          0x83e003	                              and eax, 3	     10504	elf.c	FUNCTION_161	WHILE_2
0x40193f4	            0x85c0	                           test eax, eax	     10504	elf.c	FUNCTION_161	WHILE_2
0x40193f6	            0x75e3	                           jne 0x40193db	     10504	elf.c	FUNCTION_161	WHILE_2
0x40193f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10509	elf.c	FUNCTION_161
0x40193fc	              0xc9	                                   leave	     10510	elf.c	FUNCTION_161
0x40193fd	              0xc3	                                     ret	     10510	elf.c	FUNCTION_161
elfcore_write_linux_prpsinfo64	ELSE,1:DO,0:CALL,5:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	60
0x4019778	              0x55	                                push rbp	     10618	elf.c	FUNCTION_164
0x4019779	          0x4889e5	                            mov rbp, rsp	     10618	elf.c	FUNCTION_164
0x401977c	    0x4881ecb00000	                           sub rsp, 0xb0	     10618	elf.c	FUNCTION_164
0x4019783	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	     10618	elf.c	FUNCTION_164
0x401978a	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	     10618	elf.c	FUNCTION_164
0x4019791	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	     10618	elf.c	FUNCTION_164
0x4019798	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	     10618	elf.c	FUNCTION_164
0x401979f	    0x64488b042528	                mov rax, qword fs:[0x28]	     10618	elf.c	FUNCTION_164
0x40197a8	        0x488945f8	                mov qword [rbp - 8], rax	     10618	elf.c	FUNCTION_164
0x40197ac	            0x31c0	                            xor eax, eax	     10618	elf.c	FUNCTION_164
0x40197ae	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40197b5	        0x488b4008	                mov rax, qword [rax + 8]	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40197b9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40197c0	     0xfb6808b0300	          movzx eax, byte [rax + 0x38b] 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40197c7	          0x83e020	                           and eax, 0x20	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40197ca	            0x84c0	                             test al, al	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40197cc	            0x7461	                            je 0x401982f	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40197ce	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10623	elf.c	FUNCTION_164	IF_1	CALL_2
0x40197d5	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	     10623	elf.c	FUNCTION_164	IF_1	CALL_2
0x40197dc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10623	elf.c	FUNCTION_164	IF_1	CALL_2
0x40197e3	          0x4889ce	                            mov rsi, rcx	     10623	elf.c	FUNCTION_164	IF_1	CALL_2
0x40197e6	          0x4889c7	                            mov rdi, rax	     10623	elf.c	FUNCTION_164	IF_1	CALL_2
0x40197e9	      0xe8936dfeff	call sym.swap_linux_prpsinfo64_ugid16_out	     10623	elf.c	FUNCTION_164	IF_1	CALL_2
0x40197ee	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x40197f5	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x40197fc	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4019803	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x401980a	        0x4883ec08	                              sub rsp, 8	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x401980e	      0x6884000000	                               push 0x84	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4019813	          0x4989c9	                             mov r9, rcx	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4019816	    0x41b803000000	                              mov r8d, 3	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x401981c	      0xb900000000	                              mov ecx, 0	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4019821	          0x4889c7	                            mov rdi, rax	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4019824	      0xe800000000	                          call 0x4019829	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4019829	        0x4883c410	                           add rsp, 0x10	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x401982d	            0xeb5f	                           jmp 0x401988e	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x401982f	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	     10631	elf.c	FUNCTION_164	ELSE_1	CALL_4
0x4019836	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	     10631	elf.c	FUNCTION_164	ELSE_1	CALL_4
0x401983d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10631	elf.c	FUNCTION_164	ELSE_1	CALL_4
0x4019844	          0x4889ce	                            mov rsi, rcx	     10631	elf.c	FUNCTION_164	ELSE_1	CALL_4
0x4019847	          0x4889c7	                            mov rdi, rax	     10631	elf.c	FUNCTION_164	ELSE_1	CALL_4
0x401984a	      0xe8926bfeff	call sym.swap_linux_prpsinfo64_ugid32_out	     10631	elf.c	FUNCTION_164	ELSE_1	CALL_4
0x401984f	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4019856	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401985d	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4019864	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401986b	        0x4883ec08	                              sub rsp, 8	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401986f	      0x6888000000	                               push 0x88	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4019874	          0x4989c9	                             mov r9, rcx	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4019877	    0x41b803000000	                              mov r8d, 3	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401987d	      0xb900000000	                              mov ecx, 0	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4019882	          0x4889c7	                            mov rdi, rax	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4019885	      0xe800000000	                          call 0x401988a	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401988a	        0x4883c410	                           add rsp, 0x10	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401988e	        0x488b7df8	                mov rdi, qword [rbp - 8]	     10635	elf.c	FUNCTION_164
0x4019892	    0x6448333c2528	                xor rdi, qword fs:[0x28]	     10635	elf.c	FUNCTION_164
0x401989b	            0x7405	                            je 0x40198a2	     10635	elf.c	FUNCTION_164
0x401989d	      0xe800000000	                          call 0x40198a2	     10635	elf.c	FUNCTION_164
0x40198a2	              0xc9	                                   leave	     10635	elf.c	FUNCTION_164
0x40198a3	              0xc3	                                     ret	     10635	elf.c	FUNCTION_164
section_match	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	41
0x40034bf	              0x55	                                push rbp	      1301	elf.c	FUNCTION_28
0x40034c0	          0x4889e5	                            mov rbp, rsp	      1301	elf.c	FUNCTION_28
0x40034c3	        0x48897df8	                mov qword [rbp - 8], rdi	      1301	elf.c	FUNCTION_28
0x40034c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1301	elf.c	FUNCTION_28
0x40034cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	elf.c	FUNCTION_28
0x40034cf	          0x8b5004	                mov edx, dword [rax + 4]	      1303	elf.c	FUNCTION_28
0x40034d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1303	elf.c	FUNCTION_28
0x40034d6	          0x8b4004	                mov eax, dword [rax + 4]	      1303	elf.c	FUNCTION_28
0x40034d9	            0x39c2	                            cmp edx, eax	      1308	elf.c	FUNCTION_28
0x40034db	            0x7562	                           jne 0x400353f	      1308	elf.c	FUNCTION_28
0x40034dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1304	elf.c	FUNCTION_28
0x40034e1	        0x488b5008	                mov rdx, qword [rax + 8]	      1304	elf.c	FUNCTION_28
0x40034e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1305	elf.c	FUNCTION_28
0x40034e9	        0x488b4008	                mov rax, qword [rax + 8]	      1305	elf.c	FUNCTION_28
0x40034ed	          0x4831d0	                            xor rax, rdx	      1305	elf.c	FUNCTION_28
0x40034f0	        0x4883e0bf	             and rax, 0xffffffffffffffbf	      1305	elf.c	FUNCTION_28
0x40034f4	          0x4885c0	                           test rax, rax	      1304	elf.c	FUNCTION_28
0x40034f7	            0x7546	                           jne 0x400353f	      1304	elf.c	FUNCTION_28
0x40034f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1306	elf.c	FUNCTION_28
0x40034fd	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1306	elf.c	FUNCTION_28
0x4003501	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1306	elf.c	FUNCTION_28
0x4003505	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1306	elf.c	FUNCTION_28
0x4003509	          0x4839c2	                            cmp rdx, rax	      1306	elf.c	FUNCTION_28
0x400350c	            0x7531	                           jne 0x400353f	      1306	elf.c	FUNCTION_28
0x400350e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1307	elf.c	FUNCTION_28
0x4003512	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1307	elf.c	FUNCTION_28
0x4003516	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1307	elf.c	FUNCTION_28
0x400351a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1307	elf.c	FUNCTION_28
0x400351e	          0x4839c2	                            cmp rdx, rax	      1307	elf.c	FUNCTION_28
0x4003521	            0x751c	                           jne 0x400353f	      1307	elf.c	FUNCTION_28
0x4003523	        0x488b45f8	                mov rax, qword [rbp - 8]	      1308	elf.c	FUNCTION_28
0x4003527	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1308	elf.c	FUNCTION_28
0x400352b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1308	elf.c	FUNCTION_28
0x400352f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1308	elf.c	FUNCTION_28
0x4003533	          0x4839c2	                            cmp rdx, rax	      1308	elf.c	FUNCTION_28
0x4003536	            0x7507	                           jne 0x400353f	      1308	elf.c	FUNCTION_28
0x4003538	      0xb801000000	                              mov eax, 1	      1308	elf.c	FUNCTION_28
0x400353d	            0xeb05	                           jmp 0x4003544	      1308	elf.c	FUNCTION_28
0x400353f	      0xb800000000	                              mov eax, 0	      1308	elf.c	FUNCTION_28
0x4003544	              0x5d	                                 pop rbp	      1311	elf.c	FUNCTION_28
0x4003545	              0xc3	                                     ret	      1311	elf.c	FUNCTION_28
_bfd_elf_close_and_cleanup	ELSE,0:DO,0:CALL,7:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	42
0x40166bd	              0x55	                                push rbp	      8988	elf.c	FUNCTION_110
0x40166be	          0x4889e5	                            mov rbp, rsp	      8988	elf.c	FUNCTION_110
0x40166c1	        0x4883ec20	                           sub rsp, 0x20	      8988	elf.c	FUNCTION_110
0x40166c5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8988	elf.c	FUNCTION_110
0x40166c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8989	elf.c	FUNCTION_110	CALL_1
0x40166cd	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8989	elf.c	FUNCTION_110	CALL_1
0x40166d4	        0x488945f8	                mov qword [rbp - 8], rax	      8989	elf.c	FUNCTION_110	CALL_1
0x40166d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8990	elf.c	FUNCTION_110	IF_1
0x40166dc	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      8990	elf.c	FUNCTION_110	IF_1
0x40166e0	          0x83e007	                              and eax, 7	      8990	elf.c	FUNCTION_110	IF_1
0x40166e3	            0x3c01	                               cmp al, 1	      8990	elf.c	FUNCTION_110	IF_1
0x40166e5	            0x7571	                           jne 0x4016758	      8990	elf.c	FUNCTION_110	IF_1
0x40166e7	      0x48837df800	                  cmp qword [rbp - 8], 0	      8990	elf.c	FUNCTION_110	IF_1
0x40166ec	            0x746a	                            je 0x4016758	      8990	elf.c	FUNCTION_110	IF_1
0x40166ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x40166f2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x40166f9	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x4016700	          0x4885c0	                           test rax, rax	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x4016703	            0x7439	                            je 0x401673e	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x4016705	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x4016709	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x4016710	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x4016717	        0x488b4008	                mov rax, qword [rax + 8]	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x401671b	          0x4885c0	                           test rax, rax	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x401671e	            0x741e	                            je 0x401673e	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x4016720	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8993	elf.c	FUNCTION_110	IF_1	CALL_5
0x4016724	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8993	elf.c	FUNCTION_110	IF_1	CALL_5
0x401672b	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      8993	elf.c	FUNCTION_110	IF_1	CALL_5
0x4016732	        0x488b4008	                mov rax, qword [rax + 8]	      8993	elf.c	FUNCTION_110	IF_1	CALL_5
0x4016736	          0x4889c7	                            mov rdi, rax	      8993	elf.c	FUNCTION_110	IF_1	CALL_5
0x4016739	      0xe800000000	                          call 0x401673e	      8993	elf.c	FUNCTION_110	IF_1	CALL_5
0x401673e	        0x488b45f8	                mov rax, qword [rbp - 8]	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x4016742	    0x488d90300300	                  lea rdx, [rax + 0x330]	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x4016749	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x401674d	          0x4889d6	                            mov rsi, rdx	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x4016750	          0x4889c7	                            mov rdi, rax	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x4016753	      0xe800000000	                          call 0x4016758	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x4016758	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8997	elf.c	FUNCTION_110	CALL_7
0x401675c	          0x4889c7	                            mov rdi, rax	      8997	elf.c	FUNCTION_110	CALL_7
0x401675f	      0xe800000000	                          call 0x4016764	      8997	elf.c	FUNCTION_110	CALL_7
0x4016764	              0xc9	                                   leave	      8998	elf.c	FUNCTION_110
0x4016765	              0xc3	                                     ret	      8998	elf.c	FUNCTION_110
swap_linux_prpsinfo32_ugid16_out	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	120
0x4000241	              0x55	                                push rbp	       112	elf-linux-core.h	FUNCTION_205
0x4000242	          0x4889e5	                            mov rbp, rsp	       112	elf-linux-core.h	FUNCTION_205
0x4000245	        0x4883ec20	                           sub rsp, 0x20	       112	elf-linux-core.h	FUNCTION_205
0x4000249	        0x48897df8	                mov qword [rbp - 8], rdi	       112	elf-linux-core.h	FUNCTION_205
0x400024d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       112	elf-linux-core.h	FUNCTION_205
0x4000251	        0x488955e8	             mov qword [rbp - 0x18], rdx	       112	elf-linux-core.h	FUNCTION_205
0x4000255	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       113	elf-linux-core.h	FUNCTION_205
0x4000259	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       113	elf-linux-core.h	FUNCTION_205
0x400025d	           0xfb612	                   movzx edx, byte [rdx]	       113	elf-linux-core.h	FUNCTION_205
0x4000260	            0x8810	                      mov byte [rax], dl	       113	elf-linux-core.h	FUNCTION_205
0x4000262	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	elf-linux-core.h	FUNCTION_205
0x4000266	        0x488d5001	                      lea rdx, [rax + 1]	       114	elf-linux-core.h	FUNCTION_205
0x400026a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	elf-linux-core.h	FUNCTION_205
0x400026e	         0xfb64001	               movzx eax, byte [rax + 1]	       114	elf-linux-core.h	FUNCTION_205
0x4000272	            0x8802	                      mov byte [rdx], al	       114	elf-linux-core.h	FUNCTION_205
0x4000274	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	elf-linux-core.h	FUNCTION_205
0x4000278	        0x488d5002	                      lea rdx, [rax + 2]	       115	elf-linux-core.h	FUNCTION_205
0x400027c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       115	elf-linux-core.h	FUNCTION_205
0x4000280	         0xfb64002	               movzx eax, byte [rax + 2]	       115	elf-linux-core.h	FUNCTION_205
0x4000284	            0x8802	                      mov byte [rdx], al	       115	elf-linux-core.h	FUNCTION_205
0x4000286	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	elf-linux-core.h	FUNCTION_205
0x400028a	        0x488d5003	                      lea rdx, [rax + 3]	       116	elf-linux-core.h	FUNCTION_205
0x400028e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	elf-linux-core.h	FUNCTION_205
0x4000292	         0xfb64003	               movzx eax, byte [rax + 3]	       116	elf-linux-core.h	FUNCTION_205
0x4000296	            0x8802	                      mov byte [rdx], al	       116	elf-linux-core.h	FUNCTION_205
0x4000298	        0x488b45f8	                mov rax, qword [rbp - 8]	       117	elf-linux-core.h	FUNCTION_205
0x400029c	        0x488b4008	                mov rax, qword [rax + 8]	       117	elf-linux-core.h	FUNCTION_205
0x40002a0	        0x488b4048	            mov rax, qword [rax + 0x48] 	       117	elf-linux-core.h	FUNCTION_205
0x40002a4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       117	elf-linux-core.h	FUNCTION_205
0x40002a8	        0x488d4a04	                      lea rcx, [rdx + 4]	       117	elf-linux-core.h	FUNCTION_205
0x40002ac	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       117	elf-linux-core.h	FUNCTION_205
0x40002b0	        0x488b5208	                mov rdx, qword [rdx + 8]	       117	elf-linux-core.h	FUNCTION_205
0x40002b4	          0x4889ce	                            mov rsi, rcx	       117	elf-linux-core.h	FUNCTION_205
0x40002b7	          0x4889d7	                            mov rdi, rdx	       117	elf-linux-core.h	FUNCTION_205
0x40002ba	            0xffd0	                                call rax	       117	elf-linux-core.h	FUNCTION_205
0x40002bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	elf-linux-core.h	FUNCTION_205
0x40002c0	        0x488b4008	                mov rax, qword [rax + 8]	       118	elf-linux-core.h	FUNCTION_205
0x40002c4	        0x488b4060	            mov rax, qword [rax + 0x60] 	       118	elf-linux-core.h	FUNCTION_205
0x40002c8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       118	elf-linux-core.h	FUNCTION_205
0x40002cc	        0x488d4a08	                      lea rcx, [rdx + 8]	       118	elf-linux-core.h	FUNCTION_205
0x40002d0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       118	elf-linux-core.h	FUNCTION_205
0x40002d4	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       118	elf-linux-core.h	FUNCTION_205
0x40002d7	            0x89d2	                            mov edx, edx	       118	elf-linux-core.h	FUNCTION_205
0x40002d9	          0x4889ce	                            mov rsi, rcx	       118	elf-linux-core.h	FUNCTION_205
0x40002dc	          0x4889d7	                            mov rdi, rdx	       118	elf-linux-core.h	FUNCTION_205
0x40002df	            0xffd0	                                call rax	       118	elf-linux-core.h	FUNCTION_205
0x40002e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	elf-linux-core.h	FUNCTION_205
0x40002e5	        0x488b4008	                mov rax, qword [rax + 8]	       119	elf-linux-core.h	FUNCTION_205
0x40002e9	        0x488b4060	            mov rax, qword [rax + 0x60] 	       119	elf-linux-core.h	FUNCTION_205
0x40002ed	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       119	elf-linux-core.h	FUNCTION_205
0x40002f1	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	       119	elf-linux-core.h	FUNCTION_205
0x40002f5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       119	elf-linux-core.h	FUNCTION_205
0x40002f9	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       119	elf-linux-core.h	FUNCTION_205
0x40002fc	            0x89d2	                            mov edx, edx	       119	elf-linux-core.h	FUNCTION_205
0x40002fe	          0x4889ce	                            mov rsi, rcx	       119	elf-linux-core.h	FUNCTION_205
0x4000301	          0x4889d7	                            mov rdi, rdx	       119	elf-linux-core.h	FUNCTION_205
0x4000304	            0xffd0	                                call rax	       119	elf-linux-core.h	FUNCTION_205
0x4000306	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	elf-linux-core.h	FUNCTION_205
0x400030a	        0x488b4008	                mov rax, qword [rax + 8]	       120	elf-linux-core.h	FUNCTION_205
0x400030e	        0x488b4048	            mov rax, qword [rax + 0x48] 	       120	elf-linux-core.h	FUNCTION_205
0x4000312	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       120	elf-linux-core.h	FUNCTION_205
0x4000316	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       120	elf-linux-core.h	FUNCTION_205
0x400031a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       120	elf-linux-core.h	FUNCTION_205
0x400031e	          0x8b5218	            mov edx, dword [rdx + 0x18] 	       120	elf-linux-core.h	FUNCTION_205
0x4000321	          0x4863d2	                         movsxd rdx, edx	       120	elf-linux-core.h	FUNCTION_205
0x4000324	          0x4889ce	                            mov rsi, rcx	       120	elf-linux-core.h	FUNCTION_205
0x4000327	          0x4889d7	                            mov rdi, rdx	       120	elf-linux-core.h	FUNCTION_205
0x400032a	            0xffd0	                                call rax	       120	elf-linux-core.h	FUNCTION_205
0x400032c	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	elf-linux-core.h	FUNCTION_205
0x4000330	        0x488b4008	                mov rax, qword [rax + 8]	       121	elf-linux-core.h	FUNCTION_205
0x4000334	        0x488b4048	            mov rax, qword [rax + 0x48] 	       121	elf-linux-core.h	FUNCTION_205
0x4000338	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       121	elf-linux-core.h	FUNCTION_205
0x400033c	        0x488d4a10	                   lea rcx, [rdx + 0x10]	       121	elf-linux-core.h	FUNCTION_205
0x4000340	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       121	elf-linux-core.h	FUNCTION_205
0x4000344	          0x8b521c	            mov edx, dword [rdx + 0x1c] 	       121	elf-linux-core.h	FUNCTION_205
0x4000347	          0x4863d2	                         movsxd rdx, edx	       121	elf-linux-core.h	FUNCTION_205
0x400034a	          0x4889ce	                            mov rsi, rcx	       121	elf-linux-core.h	FUNCTION_205
0x400034d	          0x4889d7	                            mov rdi, rdx	       121	elf-linux-core.h	FUNCTION_205
0x4000350	            0xffd0	                                call rax	       121	elf-linux-core.h	FUNCTION_205
0x4000352	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	elf-linux-core.h	FUNCTION_205
0x4000356	        0x488b4008	                mov rax, qword [rax + 8]	       122	elf-linux-core.h	FUNCTION_205
0x400035a	        0x488b4048	            mov rax, qword [rax + 0x48] 	       122	elf-linux-core.h	FUNCTION_205
0x400035e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       122	elf-linux-core.h	FUNCTION_205
0x4000362	        0x488d4a14	                   lea rcx, [rdx + 0x14]	       122	elf-linux-core.h	FUNCTION_205
0x4000366	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       122	elf-linux-core.h	FUNCTION_205
0x400036a	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       122	elf-linux-core.h	FUNCTION_205
0x400036d	          0x4863d2	                         movsxd rdx, edx	       122	elf-linux-core.h	FUNCTION_205
0x4000370	          0x4889ce	                            mov rsi, rcx	       122	elf-linux-core.h	FUNCTION_205
0x4000373	          0x4889d7	                            mov rdi, rdx	       122	elf-linux-core.h	FUNCTION_205
0x4000376	            0xffd0	                                call rax	       122	elf-linux-core.h	FUNCTION_205
0x4000378	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	elf-linux-core.h	FUNCTION_205
0x400037c	        0x488b4008	                mov rax, qword [rax + 8]	       123	elf-linux-core.h	FUNCTION_205
0x4000380	        0x488b4048	            mov rax, qword [rax + 0x48] 	       123	elf-linux-core.h	FUNCTION_205
0x4000384	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       123	elf-linux-core.h	FUNCTION_205
0x4000388	        0x488d4a18	                   lea rcx, [rdx + 0x18]	       123	elf-linux-core.h	FUNCTION_205
0x400038c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       123	elf-linux-core.h	FUNCTION_205
0x4000390	          0x8b5224	            mov edx, dword [rdx + 0x24] 	       123	elf-linux-core.h	FUNCTION_205
0x4000393	          0x4863d2	                         movsxd rdx, edx	       123	elf-linux-core.h	FUNCTION_205
0x4000396	          0x4889ce	                            mov rsi, rcx	       123	elf-linux-core.h	FUNCTION_205
0x4000399	          0x4889d7	                            mov rdi, rdx	       123	elf-linux-core.h	FUNCTION_205
0x400039c	            0xffd0	                                call rax	       123	elf-linux-core.h	FUNCTION_205
0x400039e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003a2	        0x488d4828	                   lea rcx, [rax + 0x28]	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003aa	        0x4883c01c	                           add rax, 0x1c	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003ae	      0xba10000000	                           mov edx, 0x10	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003b3	          0x4889ce	                            mov rsi, rcx	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003b6	          0x4889c7	                            mov rdi, rax	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003b9	      0xe800000000	                          call 0x40003be	       124	elf-linux-core.h	FUNCTION_205	CALL_1
0x40003be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003c2	        0x488d4839	                   lea rcx, [rax + 0x39]	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003ca	        0x4883c02c	                           add rax, 0x2c	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003ce	      0xba50000000	                           mov edx, 0x50	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003d3	          0x4889ce	                            mov rsi, rcx	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003d6	          0x4889c7	                            mov rdi, rax	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003d9	      0xe800000000	                          call 0x40003de	       125	elf-linux-core.h	FUNCTION_205	CALL_2
0x40003de	              0x90	                                     nop	       126	elf-linux-core.h	FUNCTION_205
0x40003df	              0xc9	                                   leave	       126	elf-linux-core.h	FUNCTION_205
0x40003e0	              0xc3	                                     ret	       126	elf-linux-core.h	FUNCTION_205
bfd_elf_print_symbol	ELSE,2:DO,0:CALL,18:WHILE,0:FOR,1:IF,5:SWITCH,2:functions,0	214
0x400505e	              0x55	                                push rbp	      1905	elf.c	FUNCTION_35
0x400505f	          0x4889e5	                            mov rbp, rsp	      1905	elf.c	FUNCTION_35
0x4005062	        0x4883ec70	                           sub rsp, 0x70	      1905	elf.c	FUNCTION_35
0x4005066	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1905	elf.c	FUNCTION_35
0x400506a	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1905	elf.c	FUNCTION_35
0x400506e	        0x48895598	             mov qword [rbp - 0x68], rdx	      1905	elf.c	FUNCTION_35
0x4005072	          0x894d94	             mov dword [rbp - 0x6c], ecx	      1905	elf.c	FUNCTION_35
0x4005075	    0x64488b042528	                mov rax, qword fs:[0x28]	      1905	elf.c	FUNCTION_35
0x400507e	        0x488945f8	                mov qword [rbp - 8], rax	      1905	elf.c	FUNCTION_35
0x4005082	            0x31c0	                            xor eax, eax	      1905	elf.c	FUNCTION_35
0x4005084	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1906	elf.c	FUNCTION_35
0x4005088	        0x488945d8	             mov qword [rbp - 0x28], rax	      1906	elf.c	FUNCTION_35
0x400508c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1907	elf.c	FUNCTION_35	SWITCH_1
0x400508f	          0x83f801	                              cmp eax, 1	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4005092	            0x742b	                            je 0x40050bf	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4005094	          0x83f801	                              cmp eax, 1	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4005097	            0x720a	                            jb 0x40050a3	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4005099	          0x83f802	                              cmp eax, 2	      1907	elf.c	FUNCTION_35	SWITCH_1
0x400509c	            0x7479	                            je 0x4005117	      1907	elf.c	FUNCTION_35	SWITCH_1
0x400509e	      0xe9ca020000	                           jmp 0x400536d	      1987	elf.c	FUNCTION_35
0x40050a3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1910	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40050a7	        0x488b4008	                mov rax, qword [rax + 8]	      1910	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40050ab	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1910	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40050af	          0x4889d6	                            mov rsi, rdx	      1910	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40050b2	          0x4889c7	                            mov rdi, rax	      1910	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40050b5	      0xe800000000	                          call 0x40050ba	      1910	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40050ba	      0xe9ae020000	                           jmp 0x400536d	      1911	elf.c	FUNCTION_35	SWITCH_1
0x40050bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1913	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x40050c3	          0x4889c1	                            mov rcx, rax	      1913	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x40050c6	      0xba04000000	                              mov edx, 4	      1913	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x40050cb	      0xbe01000000	                              mov esi, 1	      1913	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x40050d0	      0xbf00000000	                              mov edi, 0	      1913	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x40050d5	      0xe800000000	                          call 0x40050da	      1913	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x40050da	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_3
0x40050de	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_3
0x40050e2	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_3
0x40050e6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_3
0x40050ea	          0x4889ce	                            mov rsi, rcx	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_3
0x40050ed	          0x4889c7	                            mov rdi, rax	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_3
0x40050f0	      0xe800000000	                          call 0x40050f5	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_3
0x40050f5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1915	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x40050f9	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1915	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x40050fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1915	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x4005100	      0xbe00000000	                              mov esi, 0	      1915	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x4005105	          0x4889c7	                            mov rdi, rax	      1915	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x4005108	      0xb800000000	                              mov eax, 0	      1915	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x400510d	      0xe800000000	                          call 0x4005112	      1915	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x4005112	      0xe956020000	                           jmp 0x400536d	      1916	elf.c	FUNCTION_35	SWITCH_1
0x4005117	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1920	elf.c	FUNCTION_35	SWITCH_1
0x400511f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4005123	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4005127	          0x4885c0	                           test rax, rax	      1927	elf.c	FUNCTION_35	SWITCH_1
0x400512a	            0x740d	                            je 0x4005139	      1927	elf.c	FUNCTION_35	SWITCH_1
0x400512c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4005130	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4005134	          0x488b00	                    mov rax, qword [rax]	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4005137	            0xeb05	                           jmp 0x400513e	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4005139	      0xb800000000	                              mov eax, 0	      1927	elf.c	FUNCTION_35	SWITCH_1
0x400513e	        0x488945e0	             mov qword [rbp - 0x20], rax	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4005142	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1929	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4005146	        0x488b4008	                mov rax, qword [rax + 8]	      1929	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x400514a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1929	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4005151	        0x488945e8	             mov qword [rbp - 0x18], rax	      1929	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4005155	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005159	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005160	          0x4885c0	                           test rax, rax	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005163	            0x7420	                            je 0x4005185	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005165	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005169	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005170	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005174	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005178	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400517c	          0x4889cf	                            mov rdi, rcx	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400517f	            0xffd0	                                call rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005181	        0x488945c8	             mov qword [rbp - 0x38], rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4005185	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x400518a	            0x7523	                           jne 0x40051af	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x400518c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1935	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x4005190	        0x488b4008	                mov rax, qword [rax + 8]	      1935	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x4005194	        0x488945c8	             mov qword [rbp - 0x38], rax	      1935	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x4005198	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_6
0x400519c	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_6
0x40051a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_6
0x40051a4	          0x4889ce	                            mov rsi, rcx	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_6
0x40051a7	          0x4889c7	                            mov rdi, rax	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_6
0x40051aa	      0xe800000000	                          call 0x40051af	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_6
0x40051af	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1939	elf.c	FUNCTION_35	SWITCH_1	CALL_7
0x40051b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1939	elf.c	FUNCTION_35	SWITCH_1	CALL_7
0x40051b7	      0xbe00000000	                              mov esi, 0	      1939	elf.c	FUNCTION_35	SWITCH_1	CALL_7
0x40051bc	          0x4889c7	                            mov rdi, rax	      1939	elf.c	FUNCTION_35	SWITCH_1	CALL_7
0x40051bf	      0xb800000000	                              mov eax, 0	      1939	elf.c	FUNCTION_35	SWITCH_1	CALL_7
0x40051c4	      0xe800000000	                          call 0x40051c9	      1939	elf.c	FUNCTION_35	SWITCH_1	CALL_7
0x40051c9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051cd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051d1	          0x4885c0	                           test rax, rax	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051d4	            0x7422	                            je 0x40051f8	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051d6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051da	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051de	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051e1	      0x2500100000	                         and eax, 0x1000	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051e6	            0x85c0	                           test eax, eax	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051e8	            0x740e	                            je 0x40051f8	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051ea	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051ee	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051f2	        0x488945d0	             mov qword [rbp - 0x30], rax	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051f6	            0xeb0c	                           jmp 0x4005204	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40051f8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x40051fc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4005200	        0x488945d0	             mov qword [rbp - 0x30], rax	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4005204	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_8
0x4005208	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_8
0x400520c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_8
0x4005210	          0x4889ce	                            mov rsi, rcx	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_8
0x4005213	          0x4889c7	                            mov rdi, rax	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_8
0x4005216	      0xe800000000	                          call 0x400521b	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_8
0x400521b	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_9
0x400521f	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_9
0x4005223	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_9
0x4005227	          0x4889ce	                            mov rsi, rcx	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_9
0x400522a	          0x4889c7	                            mov rdi, rax	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_9
0x400522d	      0xe800000000	                          call 0x4005232	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_9
0x4005232	        0x488945f0	             mov qword [rbp - 0x10], rax	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_9
0x4005236	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x400523b	            0x7472	                            je 0x40052af	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x400523d	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4005240	            0x85c0	                           test eax, eax	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4005242	            0x751c	                           jne 0x4005260	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4005244	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1957	elf.c	FUNCTION_35	SWITCH_1	IF_4	CALL_10
0x4005248	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1957	elf.c	FUNCTION_35	SWITCH_1	IF_4	CALL_10
0x400524c	      0xbe00000000	                              mov esi, 0	      1957	elf.c	FUNCTION_35	SWITCH_1	IF_4	CALL_10
0x4005251	          0x4889c7	                            mov rdi, rax	      1957	elf.c	FUNCTION_35	SWITCH_1	IF_4	CALL_10
0x4005254	      0xb800000000	                              mov eax, 0	      1957	elf.c	FUNCTION_35	SWITCH_1	IF_4	CALL_10
0x4005259	      0xe800000000	                          call 0x400525e	      1957	elf.c	FUNCTION_35	SWITCH_1	IF_4	CALL_10
0x400525e	            0xeb4f	                           jmp 0x40052af	      1957	elf.c	FUNCTION_35	SWITCH_1	IF_4	CALL_10
0x4005260	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1962	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_11
0x4005264	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1962	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_11
0x4005268	      0xbe00000000	                              mov esi, 0	      1962	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_11
0x400526d	          0x4889c7	                            mov rdi, rax	      1962	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_11
0x4005270	      0xb800000000	                              mov eax, 0	      1962	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_11
0x4005275	      0xe800000000	                          call 0x400527a	      1962	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_11
0x400527a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x400527e	          0x4889c7	                            mov rdi, rax	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x4005281	      0xe800000000	                          call 0x4005286	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x4005286	      0xba0a000000	                            mov edx, 0xa	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x400528b	            0x29c2	                            sub edx, eax	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x400528d	            0x89d0	                            mov eax, edx	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x400528f	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x4005292	            0xeb15	                           jmp 0x40052a9	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x4005294	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_13
0x4005298	          0x4889c6	                            mov rsi, rax	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_13
0x400529b	      0xbf20000000	                           mov edi, 0x20	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_13
0x40052a0	      0xe800000000	                          call 0x40052a5	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_13
0x40052a5	        0x836dc401	               sub dword [rbp - 0x3c], 1	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x40052a9	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x40052ad	            0x7fe5	                            jg 0x4005294	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_12
0x40052af	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1969	elf.c	FUNCTION_35	SWITCH_1
0x40052b3	         0xfb64049	           movzx eax, byte [rax + 0x49] 	      1969	elf.c	FUNCTION_35	SWITCH_1
0x40052b7	          0x8845bf	               mov byte [rbp - 0x41], al	      1969	elf.c	FUNCTION_35	SWITCH_1
0x40052ba	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052be	          0x83f801	                              cmp eax, 1	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052c1	            0x741b	                            je 0x40052de	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052c3	          0x83f801	                              cmp eax, 1	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052c6	            0x7f0a	                            jg 0x40052d2	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052c8	            0x85c0	                           test eax, eax	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052ca	     0xf8481000000	                            je 0x4005351	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052d0	            0xeb63	                           jmp 0x4005335	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052d2	          0x83f802	                              cmp eax, 2	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052d5	            0x7424	                            je 0x40052fb	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052d7	          0x83f803	                              cmp eax, 3	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052da	            0x743c	                            je 0x4005318	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052dc	            0xeb57	                           jmp 0x4005335	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40052de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1974	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_14
0x40052e2	          0x4889c1	                            mov rcx, rax	      1974	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_14
0x40052e5	      0xba0a000000	                            mov edx, 0xa	      1974	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_14
0x40052ea	      0xbe01000000	                              mov esi, 1	      1974	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_14
0x40052ef	      0xbf00000000	                              mov edi, 0	      1974	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_14
0x40052f4	      0xe800000000	                          call 0x40052f9	      1974	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_14
0x40052f9	            0xeb57	                           jmp 0x4005352	      1974	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_14
0x40052fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1975	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_15
0x40052ff	          0x4889c1	                            mov rcx, rax	      1975	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_15
0x4005302	      0xba08000000	                              mov edx, 8	      1975	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_15
0x4005307	      0xbe01000000	                              mov esi, 1	      1975	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_15
0x400530c	      0xbf00000000	                              mov edi, 0	      1975	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_15
0x4005311	      0xe800000000	                          call 0x4005316	      1975	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_15
0x4005316	            0xeb3a	                           jmp 0x4005352	      1975	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_15
0x4005318	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1976	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_16
0x400531c	          0x4889c1	                            mov rcx, rax	      1976	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_16
0x400531f	      0xba0b000000	                            mov edx, 0xb	      1976	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_16
0x4005324	      0xbe01000000	                              mov esi, 1	      1976	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_16
0x4005329	      0xbf00000000	                              mov edi, 0	      1976	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_16
0x400532e	      0xe800000000	                          call 0x4005333	      1976	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_16
0x4005333	            0xeb1d	                           jmp 0x4005352	      1976	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_16
0x4005335	         0xfb655bf	            movzx edx, byte [rbp - 0x41]	      1980	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_17
0x4005339	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1980	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_17
0x400533d	      0xbe00000000	                              mov esi, 0	      1980	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_17
0x4005342	          0x4889c7	                            mov rdi, rax	      1980	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_17
0x4005345	      0xb800000000	                              mov eax, 0	      1980	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_17
0x400534a	      0xe800000000	                          call 0x400534f	      1980	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_17
0x400534f	            0xeb01	                           jmp 0x4005352	      1980	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2	CALL_17
0x4005351	              0x90	                                     nop	      1973	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4005352	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1983	elf.c	FUNCTION_35	SWITCH_1	CALL_18
0x4005356	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1983	elf.c	FUNCTION_35	SWITCH_1	CALL_18
0x400535a	      0xbe00000000	                              mov esi, 0	      1983	elf.c	FUNCTION_35	SWITCH_1	CALL_18
0x400535f	          0x4889c7	                            mov rdi, rax	      1983	elf.c	FUNCTION_35	SWITCH_1	CALL_18
0x4005362	      0xb800000000	                              mov eax, 0	      1983	elf.c	FUNCTION_35	SWITCH_1	CALL_18
0x4005367	      0xe800000000	                          call 0x400536c	      1983	elf.c	FUNCTION_35	SWITCH_1	CALL_18
0x400536c	              0x90	                                     nop	      1985	elf.c	FUNCTION_35	SWITCH_1
0x400536d	              0x90	                                     nop	      1987	elf.c	FUNCTION_35
0x400536e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1987	elf.c	FUNCTION_35
0x4005372	    0x644833042528	                xor rax, qword fs:[0x28]	      1987	elf.c	FUNCTION_35
0x400537b	            0x7405	                            je 0x4005382	      1987	elf.c	FUNCTION_35
0x400537d	      0xe800000000	                          call 0x4005382	      1987	elf.c	FUNCTION_35
0x4005382	              0xc9	                                   leave	      1987	elf.c	FUNCTION_35
0x4005383	              0xc3	                                     ret	      1987	elf.c	FUNCTION_35
_bfd_elf_find_segment_containing_section	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,2:IF,1:SWITCH,0:functions,0	40
0x400acb6	              0x55	                                push rbp	      4444	elf.c	FUNCTION_61
0x400acb7	          0x4889e5	                            mov rbp, rsp	      4444	elf.c	FUNCTION_61
0x400acba	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4444	elf.c	FUNCTION_61
0x400acbe	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4444	elf.c	FUNCTION_61
0x400acc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acc6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400accd	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acd4	          0x488b00	                    mov rax, qword [rax]	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acd7	        0x488945f0	             mov qword [rbp - 0x10], rax	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acdb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acdf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400ace6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acea	        0x488945f8	                mov qword [rbp - 8], rax	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acee	            0xeb48	                           jmp 0x400ad38	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400acf0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400acf4	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400acf7	          0x83e801	                              sub eax, 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400acfa	          0x8945ec	             mov dword [rbp - 0x14], eax	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400acfd	            0xeb23	                           jmp 0x400ad22	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400acff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad03	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad06	          0x4863d2	                         movsxd rdx, edx	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad09	        0x4883c208	                              add rdx, 8	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad0d	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad12	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad16	            0x7506	                           jne 0x400ad1e	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad18	        0x488b45f8	                mov rax, qword [rbp - 8]	      4456	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad1c	            0xeb26	                           jmp 0x400ad44	      4456	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400ad1e	        0x836dec01	               sub dword [rbp - 0x14], 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400ad22	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400ad26	            0x79d7	                           jns 0x400acff	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400ad28	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4450	elf.c	FUNCTION_61	FOR_1
0x400ad2c	          0x488b00	                    mov rax, qword [rax]	      4450	elf.c	FUNCTION_61	FOR_1
0x400ad2f	        0x488945f0	             mov qword [rbp - 0x10], rax	      4450	elf.c	FUNCTION_61	FOR_1
0x400ad33	      0x488345f840	               add qword [rbp - 8], 0x40	      4450	elf.c	FUNCTION_61	FOR_1
0x400ad38	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400ad3d	            0x75b1	                           jne 0x400acf0	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400ad3f	      0xb800000000	                              mov eax, 0	      4459	elf.c	FUNCTION_61
0x400ad44	              0x5d	                                 pop rbp	      4460	elf.c	FUNCTION_61
0x400ad45	              0xc3	                                     ret	      4460	elf.c	FUNCTION_61
copy_special_section_fields	ELSE,3:DO,0:CALL,12:WHILE,0:FOR,0:IF,11:SWITCH,0:functions,0	169
0x4003646	              0x55	                                push rbp	      1358	elf.c	FUNCTION_30
0x4003647	          0x4889e5	                            mov rbp, rsp	      1358	elf.c	FUNCTION_30
0x400364a	              0x53	                                push rbx	      1358	elf.c	FUNCTION_30
0x400364b	        0x4883ec58	                           sub rsp, 0x58	      1358	elf.c	FUNCTION_30
0x400364f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1358	elf.c	FUNCTION_30
0x4003653	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1358	elf.c	FUNCTION_30
0x4003657	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1358	elf.c	FUNCTION_30
0x400365b	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1358	elf.c	FUNCTION_30
0x400365f	        0x448945ac	             mov dword [rbp - 0x54], r8d	      1358	elf.c	FUNCTION_30
0x4003663	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1359	elf.c	FUNCTION_30	CALL_1
0x4003667	        0x488b4008	                mov rax, qword [rax + 8]	      1359	elf.c	FUNCTION_30	CALL_1
0x400366b	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1359	elf.c	FUNCTION_30	CALL_1
0x4003672	        0x488945e0	             mov qword [rbp - 0x20], rax	      1359	elf.c	FUNCTION_30	CALL_1
0x4003676	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1360	elf.c	FUNCTION_30	CALL_2
0x400367a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1360	elf.c	FUNCTION_30	CALL_2
0x4003681	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1360	elf.c	FUNCTION_30	CALL_2
0x4003685	        0x488945e8	             mov qword [rbp - 0x18], rax	      1360	elf.c	FUNCTION_30	CALL_2
0x4003689	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1361	elf.c	FUNCTION_30
0x4003690	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1364	elf.c	FUNCTION_30	IF_1
0x4003694	          0x8b4004	                mov eax, dword [rax + 4]	      1364	elf.c	FUNCTION_30	IF_1
0x4003697	          0x83f808	                              cmp eax, 8	      1364	elf.c	FUNCTION_30	IF_1
0x400369a	            0x753c	                           jne 0x40036d8	      1364	elf.c	FUNCTION_30	IF_1
0x400369c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x40036a0	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x40036a3	            0x85c0	                           test eax, eax	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x40036a5	            0x750e	                           jne 0x40036b5	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x40036a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x40036ab	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x40036ae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x40036b2	          0x895028	             mov dword [rax + 0x28], edx	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x40036b5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x40036b9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x40036bc	            0x85c0	                           test eax, eax	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x40036be	            0x750e	                           jne 0x40036ce	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x40036c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40036c4	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40036c7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40036cb	          0x89502c	             mov dword [rax + 0x2c], edx	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40036ce	      0xb801000000	                              mov eax, 1	      1386	elf.c	FUNCTION_30	IF_1
0x40036d3	      0xe9d8010000	                           jmp 0x40038b0	      1386	elf.c	FUNCTION_30	IF_1
0x40036d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1390	elf.c	FUNCTION_30	IF_4
0x40036dc	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1390	elf.c	FUNCTION_30	IF_4
0x40036e3	          0x4885c0	                           test rax, rax	      1390	elf.c	FUNCTION_30	IF_4
0x40036e6	            0x742b	                            je 0x4003713	      1390	elf.c	FUNCTION_30	IF_4
0x40036e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x40036ec	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x40036f3	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x40036f7	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x40036fb	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x40036ff	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x4003703	            0xffd0	                                call rax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x4003705	            0x85c0	                           test eax, eax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x4003707	            0x740a	                            je 0x4003713	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x4003709	      0xb801000000	                              mov eax, 1	      1393	elf.c	FUNCTION_30	IF_4
0x400370e	      0xe99d010000	                           jmp 0x40038b0	      1393	elf.c	FUNCTION_30	IF_4
0x4003713	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1399	elf.c	FUNCTION_30	IF_5
0x4003717	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1399	elf.c	FUNCTION_30	IF_5
0x400371a	            0x85c0	                           test eax, eax	      1399	elf.c	FUNCTION_30	IF_5
0x400371c	     0xf84cd000000	                            je 0x40037ef	      1399	elf.c	FUNCTION_30	IF_5
0x4003722	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x4003726	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x4003729	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x400372d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x4003734	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x400373a	            0x39c2	                            cmp edx, eax	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x400373c	            0x723b	                            jb 0x4003779	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x400373e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4003742	          0x8b5828	            mov ebx, dword [rax + 0x28] 	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4003745	      0xbe00000000	                              mov esi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x400374a	      0xbf00000000	                              mov edi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x400374f	      0xe800000000	                          call 0x4003754	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x4003754	          0x4889c7	                            mov rdi, rax	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x4003757	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400375a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400375e	            0x89d1	                            mov ecx, edx	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4003760	            0x89da	                            mov edx, ebx	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4003762	          0x4889c6	                            mov rsi, rax	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4003765	      0xb800000000	                              mov eax, 0	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400376a	      0xe800000000	                          call 0x400376f	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400376f	      0xb800000000	                              mov eax, 0	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4003774	      0xe937010000	                           jmp 0x40038b0	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4003779	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x400377d	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4003780	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4003784	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4003787	            0x89c0	                            mov eax, eax	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4003789	    0x488d0cc50000	                        lea rcx, [rax*8]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4003791	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4003795	          0x4801c8	                            add rax, rcx	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4003798	          0x488b08	                    mov rcx, qword [rax]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x400379b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x400379f	          0x4889ce	                            mov rsi, rcx	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40037a2	          0x4889c7	                            mov rdi, rax	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40037a5	      0xe89cfdffff	                      call sym.find_link	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40037aa	          0x8945dc	             mov dword [rbp - 0x24], eax	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40037ad	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x40037b1	            0x7413	                            je 0x40037c6	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x40037b3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1414	elf.c	FUNCTION_30	IF_5	IF_7
0x40037b7	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1414	elf.c	FUNCTION_30	IF_5	IF_7
0x40037ba	          0x895028	             mov dword [rax + 0x28], edx	      1414	elf.c	FUNCTION_30	IF_5	IF_7
0x40037bd	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x40037c4	            0xeb29	                           jmp 0x40037ef	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x40037c6	      0xbe00000000	                              mov esi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40037cb	      0xbf00000000	                              mov edi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40037d0	      0xe800000000	                          call 0x40037d5	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40037d5	          0x4889c1	                            mov rcx, rax	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40037d8	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40037db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40037df	          0x4889c6	                            mov rsi, rax	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40037e2	          0x4889cf	                            mov rdi, rcx	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40037e5	      0xb800000000	                              mov eax, 0	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40037ea	      0xe800000000	                          call 0x40037ef	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40037ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1425	elf.c	FUNCTION_30	IF_8
0x40037f3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1425	elf.c	FUNCTION_30	IF_8
0x40037f6	            0x85c0	                           test eax, eax	      1425	elf.c	FUNCTION_30	IF_8
0x40037f8	     0xf84af000000	                            je 0x40038ad	      1425	elf.c	FUNCTION_30	IF_8
0x40037fe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x4003802	        0x488b4008	                mov rax, qword [rax + 8]	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x4003806	          0x83e040	                           and eax, 0x40	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x4003809	          0x4885c0	                           test rax, rax	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x400380c	            0x7453	                            je 0x4003861	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x400380e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003812	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003815	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003819	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400381c	            0x89c0	                            mov eax, eax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400381e	    0x488d0cc50000	                        lea rcx, [rax*8]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003826	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400382a	          0x4801c8	                            add rax, rcx	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400382d	          0x488b08	                    mov rcx, qword [rax]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003830	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003834	          0x4889ce	                            mov rsi, rcx	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003837	          0x4889c7	                            mov rdi, rax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400383a	      0xe807fdffff	                      call sym.find_link	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400383f	          0x8945dc	             mov dword [rbp - 0x24], eax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4003842	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4003846	            0x7423	                            je 0x400386b	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4003848	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x400384c	        0x488b4008	                mov rax, qword [rax + 8]	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4003850	        0x4883c840	                            or rax, 0x40	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4003854	          0x4889c2	                            mov rdx, rax	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4003857	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x400385b	        0x48895008	                mov qword [rax + 8], rdx	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x400385f	            0xeb0a	                           jmp 0x400386b	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4003861	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1439	elf.c	FUNCTION_30	IF_8	ELSE_2
0x4003865	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1439	elf.c	FUNCTION_30	IF_8	ELSE_2
0x4003868	          0x8945dc	             mov dword [rbp - 0x24], eax	      1439	elf.c	FUNCTION_30	IF_8	ELSE_2
0x400386b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1441	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x400386f	            0x7413	                            je 0x4003884	      1441	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4003871	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1443	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4003875	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1443	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4003878	          0x89502c	             mov dword [rax + 0x2c], edx	      1443	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x400387b	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1444	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4003882	            0xeb29	                           jmp 0x40038ad	      1444	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4003884	      0xbe00000000	                              mov esi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4003889	      0xbf00000000	                              mov edi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x400388e	      0xe800000000	                          call 0x4003893	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4003893	          0x4889c1	                            mov rcx, rax	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4003896	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x4003899	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400389d	          0x4889c6	                            mov rsi, rax	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40038a0	          0x4889cf	                            mov rdi, rcx	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40038a3	      0xb800000000	                              mov eax, 0	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40038a8	      0xe800000000	                          call 0x40038ad	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40038ad	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1452	elf.c	FUNCTION_30
0x40038b0	        0x4883c458	                           add rsp, 0x58	      1453	elf.c	FUNCTION_30
0x40038b4	              0x5b	                                 pop rbx	      1453	elf.c	FUNCTION_30
0x40038b5	              0x5d	                                 pop rbp	      1453	elf.c	FUNCTION_30
0x40038b6	              0xc3	                                     ret	      1453	elf.c	FUNCTION_30
assign_file_positions_except_relocs	ELSE,2:DO,0:CALL,23:WHILE,0:FOR,2:IF,12:SWITCH,0:functions,0	298
0x400f22c	              0x55	                                push rbp	      6068	elf.c	FUNCTION_73
0x400f22d	          0x4889e5	                            mov rbp, rsp	      6068	elf.c	FUNCTION_73
0x400f230	        0x4883ec70	                           sub rsp, 0x70	      6068	elf.c	FUNCTION_73
0x400f234	        0x48897d98	             mov qword [rbp - 0x68], rdi	      6068	elf.c	FUNCTION_73
0x400f238	        0x48897590	             mov qword [rbp - 0x70], rsi	      6068	elf.c	FUNCTION_73
0x400f23c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6069	elf.c	FUNCTION_73	CALL_1
0x400f240	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6069	elf.c	FUNCTION_73	CALL_1
0x400f247	        0x488945d0	             mov qword [rbp - 0x30], rax	      6069	elf.c	FUNCTION_73	CALL_1
0x400f24b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6070	elf.c	FUNCTION_73	CALL_2
0x400f24f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6070	elf.c	FUNCTION_73	CALL_2
0x400f256	        0x488945d8	             mov qword [rbp - 0x28], rax	      6070	elf.c	FUNCTION_73	CALL_2
0x400f25a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6071	elf.c	FUNCTION_73	CALL_3
0x400f25e	        0x488b4008	                mov rax, qword [rax + 8]	      6071	elf.c	FUNCTION_73	CALL_3
0x400f262	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6071	elf.c	FUNCTION_73	CALL_3
0x400f269	        0x488945e0	             mov qword [rbp - 0x20], rax	      6071	elf.c	FUNCTION_73	CALL_3
0x400f26d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6073	elf.c	FUNCTION_73	IF_1
0x400f271	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6073	elf.c	FUNCTION_73	IF_1
0x400f274	          0xc1e805	                              shr eax, 5	      6073	elf.c	FUNCTION_73	IF_1
0x400f277	      0x25ffff0f00	                        and eax, 0xfffff	      6073	elf.c	FUNCTION_73	IF_1
0x400f27c	          0x83e042	                           and eax, 0x42	      6073	elf.c	FUNCTION_73	IF_1
0x400f27f	            0x85c0	                           test eax, eax	      6073	elf.c	FUNCTION_73	IF_1
0x400f281	     0xf85a6010000	                           jne 0x400f42d	      6073	elf.c	FUNCTION_73	IF_1
0x400f287	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6074	elf.c	FUNCTION_73	IF_1
0x400f28b	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      6074	elf.c	FUNCTION_73	IF_1
0x400f28f	          0x83e007	                              and eax, 7	      6074	elf.c	FUNCTION_73	IF_1
0x400f292	            0x3c03	                               cmp al, 3	      6074	elf.c	FUNCTION_73	IF_1
0x400f294	     0xf8493010000	                            je 0x400f42d	      6074	elf.c	FUNCTION_73	IF_1
0x400f29a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6076	elf.c	FUNCTION_73	IF_1	CALL_4
0x400f29e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_4
0x400f2a5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_4
0x400f2a9	        0x488945e8	             mov qword [rbp - 0x18], rax	      6076	elf.c	FUNCTION_73	IF_1	CALL_4
0x400f2ad	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6077	elf.c	FUNCTION_73	IF_1	CALL_5
0x400f2b1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6077	elf.c	FUNCTION_73	IF_1	CALL_5
0x400f2b8	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      6077	elf.c	FUNCTION_73	IF_1	CALL_5
0x400f2be	          0x8945a4	             mov dword [rbp - 0x5c], eax	      6077	elf.c	FUNCTION_73	IF_1	CALL_5
0x400f2c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6083	elf.c	FUNCTION_73	IF_1
0x400f2c5	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      6083	elf.c	FUNCTION_73	IF_1
0x400f2c8	            0x89c0	                            mov eax, eax	      6083	elf.c	FUNCTION_73	IF_1
0x400f2ca	        0x488945b8	             mov qword [rbp - 0x48], rax	      6083	elf.c	FUNCTION_73	IF_1
0x400f2ce	    0xc745a0010000	               mov dword [rbp - 0x60], 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2d9	        0x4883c008	                              add rax, 8	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2dd	        0x488945b0	             mov qword [rbp - 0x50], rax	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2e1	      0xe91c010000	                           jmp 0x400f402	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2e6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6092	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2ea	          0x488b00	                    mov rax, qword [rax]	      6092	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2ed	        0x488945f0	             mov qword [rbp - 0x10], rax	      6092	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f2f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f2f5	          0x8b4004	                mov eax, dword [rax + 4]	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f2f8	          0x83f809	                              cmp eax, 9	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f2fb	            0x740c	                            je 0x400f309	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f2fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f301	          0x8b4004	                mov eax, dword [rax + 4]	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f304	          0x83f804	                              cmp eax, 4	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f307	            0x7511	                           jne 0x400f31a	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f309	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f30d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f311	          0x4885c0	                           test rax, rax	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f314	     0xf84b5000000	                            je 0x400f3cf	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f31a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f31e	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f322	          0x4885c0	                           test rax, rax	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f325	            0x7418	                            je 0x400f33f	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f327	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f32b	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f32f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f332	      0x2500000008	                   and eax, section_end.	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f337	            0x85c0	                           test eax, eax	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f339	     0xf8590000000	                           jne 0x400f3cf	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f33f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x400f343	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x400f34a	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x400f350	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x400f353	            0x747a	                            je 0x400f3cf	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x400f355	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x400f359	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x400f360	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x400f367	          0x4885c0	                           test rax, rax	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x400f36a	            0x742f	                            je 0x400f39b	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x400f36c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f370	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f377	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f37e	          0x8b4050	            mov eax, dword [rax + 0x50] 	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f381	            0x89c0	                            mov eax, eax	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f383	    0x488d14c50000	                        lea rdx, [rax*8]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f38b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f38f	          0x4801d0	                            add rax, rdx	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f392	          0x488b00	                    mov rax, qword [rax]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f395	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f399	            0x7434	                            je 0x400f3cf	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400f39b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x400f39f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x400f3a6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x400f3ad	          0x8b4050	            mov eax, dword [rax + 0x50] 	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x400f3b0	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x400f3b3	            0x741a	                            je 0x400f3cf	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x400f3b5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x400f3b9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x400f3c0	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x400f3c7	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x400f3ca	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x400f3cd	            0x750e	                           jne 0x400f3dd	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x400f3cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f3d3	    0x48c74018ffff	mov qword [rax + 0x18], 0xffffffffffffffff	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f3db	            0xeb1c	                           jmp 0x400f3f9	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400f3dd	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x400f3e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x400f3e5	      0xba01000000	                              mov edx, 1	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x400f3ea	          0x4889ce	                            mov rsi, rcx	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x400f3ed	          0x4889c7	                            mov rdi, rax	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x400f3f0	      0xe800000000	                          call 0x400f3f5	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x400f3f5	        0x488945b8	             mov qword [rbp - 0x48], rax	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x400f3f9	        0x8345a001	               add dword [rbp - 0x60], 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f3fd	      0x488345b008	               add qword [rbp - 0x50], 8	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f402	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f405	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f408	     0xf82d8feffff	                            jb 0x400f2e6	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400f40e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x400f412	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x400f419	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x400f420	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x400f424	        0x48895040	             mov qword [rax + 0x40], rdx	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x400f428	      0xe99b020000	                           jmp 0x400f6c8	      6075	elf.c	FUNCTION_73	IF_1
0x400f42d	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      6118	elf.c	FUNCTION_73	ELSE_2	IF_3	CALL_13
0x400f431	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6118	elf.c	FUNCTION_73	ELSE_2	IF_3	CALL_13
0x400f435	          0x4889d6	                            mov rsi, rdx	      6118	elf.c	FUNCTION_73	ELSE_2	IF_3	CALL_13
0x400f438	          0x4889c7	                            mov rdi, rax	      6118	elf.c	FUNCTION_73	ELSE_2	IF_3	CALL_13
0x400f43b	      0xe8bdd6ffff	call sym.assign_file_positions_for_load_sections	      6118	elf.c	FUNCTION_73	ELSE_2	IF_3	CALL_13
0x400f440	            0x85c0	                           test eax, eax	      6118	elf.c	FUNCTION_73	ELSE_2	IF_3	CALL_13
0x400f442	            0x750a	                           jne 0x400f44e	      6118	elf.c	FUNCTION_73	ELSE_2	IF_3	CALL_13
0x400f444	      0xb800000000	                              mov eax, 0	      6119	elf.c	FUNCTION_73	ELSE_2	IF_3
0x400f449	      0xe97f020000	                           jmp 0x400f6cd	      6119	elf.c	FUNCTION_73	ELSE_2	IF_3
0x400f44e	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      6122	elf.c	FUNCTION_73	ELSE_2	IF_4	CALL_14
0x400f452	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6122	elf.c	FUNCTION_73	ELSE_2	IF_4	CALL_14
0x400f456	          0x4889d6	                            mov rsi, rdx	      6122	elf.c	FUNCTION_73	ELSE_2	IF_4	CALL_14
0x400f459	          0x4889c7	                            mov rdi, rax	      6122	elf.c	FUNCTION_73	ELSE_2	IF_4	CALL_14
0x400f45c	      0xe8faefffff	call sym.assign_file_positions_for_non_load_sections	      6122	elf.c	FUNCTION_73	ELSE_2	IF_4	CALL_14
0x400f461	            0x85c0	                           test eax, eax	      6122	elf.c	FUNCTION_73	ELSE_2	IF_4	CALL_14
0x400f463	            0x750a	                           jne 0x400f46f	      6122	elf.c	FUNCTION_73	ELSE_2	IF_4	CALL_14
0x400f465	      0xb800000000	                              mov eax, 0	      6123	elf.c	FUNCTION_73	ELSE_2	IF_4
0x400f46a	      0xe95e020000	                           jmp 0x400f6cd	      6123	elf.c	FUNCTION_73	ELSE_2	IF_4
0x400f46f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400f473	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400f47a	          0x4885c0	                           test rax, rax	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400f47d	            0x7429	                            je 0x400f4a8	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400f47f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f483	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f48a	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f48e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f492	          0x4889ce	                            mov rsi, rcx	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f495	          0x4889d7	                            mov rdi, rdx	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f498	            0xffd0	                                call rax	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f49a	            0x85c0	                           test eax, eax	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f49c	            0x750a	                           jne 0x400f4a8	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f49e	      0xb800000000	                              mov eax, 0	      6128	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f4a3	      0xe925020000	                           jmp 0x400f6cd	      6128	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400f4a8	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400f4ad	     0xf849c000000	                            je 0x400f54f	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400f4b3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400f4b7	           0xfb600	                   movzx eax, byte [rax]	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400f4ba	          0x83e003	                              and eax, 3	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400f4bd	            0x3c01	                               cmp al, 1	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400f4bf	     0xf858a000000	                           jne 0x400f54f	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400f4c5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6134	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400f4c9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6134	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400f4d0	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6134	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400f4d3	          0x8945a8	             mov dword [rbp - 0x58], eax	      6134	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400f4d6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6135	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_17
0x400f4da	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6135	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_17
0x400f4e1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6135	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_17
0x400f4e5	        0x488945c0	             mov qword [rbp - 0x40], rax	      6135	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_17
0x400f4e9	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400f4ec	        0x48c1e006	                              shl rax, 6	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400f4f0	          0x4889c2	                            mov rdx, rax	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400f4f3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400f4f7	          0x4801d0	                            add rax, rdx	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400f4fa	        0x488945f8	                mov qword [rbp - 8], rax	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400f4fe	    0x48c745c8ffff	mov qword [rbp - 0x38], 0xffffffffffffffff	      6139	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400f506	            0xeb2c	                           jmp 0x400f534	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400f508	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f50c	          0x488b00	                    mov rax, qword [rax]	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f50f	        0x4883f801	                              cmp rax, 1	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f513	            0x751a	                           jne 0x400f52f	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f515	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f519	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f51d	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f521	            0x730c	                           jae 0x400f52f	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f523	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6142	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f527	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6142	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f52b	        0x488945c8	             mov qword [rbp - 0x38], rax	      6142	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400f52f	      0x488345c040	           add qword [rbp - 0x40], 0x40 	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400f534	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400f538	        0x483b45f8	                cmp rax, qword [rbp - 8]	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400f53c	            0x72ca	                            jb 0x400f508	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400f53e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400f543	            0x740a	                            je 0x400f54f	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400f545	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400f549	    0x66c740380200	                mov word [rax + 0x38], 2	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400f54f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_18
0x400f553	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_18
0x400f55a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_18
0x400f55d	          0x8945ac	             mov dword [rbp - 0x54], eax	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_18
0x400f560	        0x837dac00	               cmp dword [rbp - 0x54], 0	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x400f564	            0x750a	                           jne 0x400f570	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x400f566	      0xb801000000	                              mov eax, 1	      6153	elf.c	FUNCTION_73	ELSE_2	IF_10
0x400f56b	      0xe95d010000	                           jmp 0x400f6cd	      6153	elf.c	FUNCTION_73	ELSE_2	IF_10
0x400f570	        0x837dac01	               cmp dword [rbp - 0x54], 1	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f574	     0xf86f7000000	                           jbe 0x400f671	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f57a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f57e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f582	          0x488b00	                    mov rax, qword [rax]	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f585	        0x4883f806	                              cmp rax, 6	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f589	     0xf85e2000000	                           jne 0x400f671	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f58f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f593	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f59a	          0x4885c0	                           test rax, rax	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f59d	            0x7427	                            je 0x400f5c6	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f59f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5a3	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5aa	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5ae	        0x488b7260	            mov rsi, qword [rdx + 0x60] 	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5b2	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5b5	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5b9	          0x4889cf	                            mov rdi, rcx	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5bc	            0xffd0	                                call rax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5be	            0x85c0	                           test eax, eax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5c0	     0xf85ab000000	                           jne 0x400f671	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x400f5c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5ca	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5ce	        0x4883c040	                           add rax, 0x40	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5d2	          0x488b00	                    mov rax, qword [rax]	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5d5	        0x4883f801	                              cmp rax, 1	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5d9	     0xf8592000000	                           jne 0x400f671	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5e3	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5e7	        0x4883c040	                           add rax, 0x40	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5eb	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5f3	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5f7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5fb	          0x4839c2	                            cmp rdx, rax	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f5fe	            0x7744	                            ja 0x400f644	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f600	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f604	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f608	        0x4883c040	                           add rax, 0x40	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f60c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f610	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f614	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f618	        0x4883c040	                           add rax, 0x40	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f61c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f620	        0x488d0c02	                    lea rcx, [rdx + rax]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f624	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6174	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f628	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6174	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f62c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6174	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f630	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6174	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f634	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6174	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f638	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6174	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f63c	          0x4801d0	                            add rax, rdx	      6174	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f63f	          0x4839c1	                            cmp rcx, rax	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f642	            0x732d	                           jae 0x400f671	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f644	      0xbe00000000	                              mov esi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f649	      0xbf00000000	                              mov edi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f64e	      0xe800000000	                          call 0x400f653	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f653	          0x4889c2	                            mov rdx, rax	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f656	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f65a	          0x4889c6	                            mov rsi, rax	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f65d	          0x4889d7	                            mov rdi, rdx	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f660	      0xb800000000	                              mov eax, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f665	      0xe800000000	                          call 0x400f66a	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400f66a	      0xb800000000	                              mov eax, 0	      6182	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f66f	            0xeb5c	                           jmp 0x400f6cd	      6182	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400f671	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f675	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f67c	           0xfb600	                   movzx eax, byte [rax]	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f67f	           0xfb6c8	                           movzx ecx, al	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f682	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f686	      0xba00000000	                              mov edx, 0	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f68b	          0x4889ce	                            mov rsi, rcx	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f68e	          0x4889c7	                            mov rdi, rax	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f691	      0xe800000000	                          call 0x400f696	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f696	            0x85c0	                           test eax, eax	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f698	            0x7527	                           jne 0x400f6c1	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400f69a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f69e	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6a5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6a9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6ad	        0x488b7260	            mov rsi, qword [rdx + 0x60] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6b1	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6b4	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6b8	          0x4889cf	                            mov rdi, rcx	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6bb	            0xffd0	                                call rax	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6bd	            0x85c0	                           test eax, eax	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6bf	            0x7407	                            je 0x400f6c8	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400f6c1	      0xb800000000	                              mov eax, 0	      6187	elf.c	FUNCTION_73	ELSE_2	IF_12
0x400f6c6	            0xeb05	                           jmp 0x400f6cd	      6187	elf.c	FUNCTION_73	ELSE_2	IF_12
0x400f6c8	      0xb801000000	                              mov eax, 1	      6190	elf.c	FUNCTION_73
0x400f6cd	              0xc9	                                   leave	      6191	elf.c	FUNCTION_73
0x400f6ce	              0xc3	                                     ret	      6191	elf.c	FUNCTION_73
elfcore_grok_nto_regs	ELSE,0:DO,0:CALL,7:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	78
0x4018f48	              0x55	                                push rbp	     10363	elf.c	FUNCTION_158
0x4018f49	          0x4889e5	                            mov rbp, rsp	     10363	elf.c	FUNCTION_158
0x4018f4c	    0x4881eca00000	                           sub rsp, 0xa0	     10363	elf.c	FUNCTION_158
0x4018f53	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	     10363	elf.c	FUNCTION_158
0x4018f5a	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	     10363	elf.c	FUNCTION_158
0x4018f61	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	     10363	elf.c	FUNCTION_158
0x4018f68	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	     10363	elf.c	FUNCTION_158
0x4018f6f	    0x64488b042528	                mov rax, qword fs:[0x28]	     10363	elf.c	FUNCTION_158
0x4018f78	        0x488945f8	                mov qword [rbp - 8], rax	     10363	elf.c	FUNCTION_158
0x4018f7c	            0x31c0	                            xor eax, eax	     10363	elf.c	FUNCTION_158
0x4018f7e	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	     10369	elf.c	FUNCTION_158	CALL_1
0x4018f85	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	     10369	elf.c	FUNCTION_158	CALL_1
0x4018f8c	        0x488d4590	                   lea rax, [rbp - 0x70]	     10369	elf.c	FUNCTION_158	CALL_1
0x4018f90	      0xbe00000000	                              mov esi, 0	     10369	elf.c	FUNCTION_158	CALL_1
0x4018f95	          0x4889c7	                            mov rdi, rax	     10369	elf.c	FUNCTION_158	CALL_1
0x4018f98	      0xb800000000	                              mov eax, 0	     10369	elf.c	FUNCTION_158	CALL_1
0x4018f9d	      0xe800000000	                          call 0x4018fa2	     10369	elf.c	FUNCTION_158	CALL_1
0x4018fa2	        0x488d4590	                   lea rax, [rbp - 0x70]	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fa6	          0x4889c7	                            mov rdi, rax	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fa9	      0xe800000000	                          call 0x4018fae	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fae	        0x488d5001	                      lea rdx, [rax + 1]	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fb2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fb9	          0x4889d6	                            mov rsi, rdx	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fbc	          0x4889c7	                            mov rdi, rax	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fbf	      0xe800000000	                          call 0x4018fc4	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fc4	        0x48894580	             mov qword [rbp - 0x80], rax	     10371	elf.c	FUNCTION_158	CALL_3
0x4018fc8	      0x48837d8000	               cmp qword [rbp - 0x80], 0	     10372	elf.c	FUNCTION_158	IF_1
0x4018fcd	            0x750a	                           jne 0x4018fd9	     10372	elf.c	FUNCTION_158	IF_1
0x4018fcf	      0xb800000000	                              mov eax, 0	     10373	elf.c	FUNCTION_158	IF_1
0x4018fd4	      0xe9be000000	                           jmp 0x4019097	     10373	elf.c	FUNCTION_158	IF_1
0x4018fd9	        0x488d5590	                   lea rdx, [rbp - 0x70]	     10374	elf.c	FUNCTION_158	CALL_4
0x4018fdd	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10374	elf.c	FUNCTION_158	CALL_4
0x4018fe1	          0x4889d6	                            mov rsi, rdx	     10374	elf.c	FUNCTION_158	CALL_4
0x4018fe4	          0x4889c7	                            mov rdi, rax	     10374	elf.c	FUNCTION_158	CALL_4
0x4018fe7	      0xe800000000	                          call 0x4018fec	     10374	elf.c	FUNCTION_158	CALL_4
0x4018fec	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	     10376	elf.c	FUNCTION_158	CALL_5
0x4018ff0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     10376	elf.c	FUNCTION_158	CALL_5
0x4018ff7	      0xba00010000	                          mov edx, 0x100	     10376	elf.c	FUNCTION_158	CALL_5
0x4018ffc	          0x4889ce	                            mov rsi, rcx	     10376	elf.c	FUNCTION_158	CALL_5
0x4018fff	          0x4889c7	                            mov rdi, rax	     10376	elf.c	FUNCTION_158	CALL_5
0x4019002	      0xe800000000	                          call 0x4019007	     10376	elf.c	FUNCTION_158	CALL_5
0x4019007	        0x48894588	             mov qword [rbp - 0x78], rax	     10376	elf.c	FUNCTION_158	CALL_5
0x401900b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	     10377	elf.c	FUNCTION_158	IF_2
0x4019010	            0x7507	                           jne 0x4019019	     10377	elf.c	FUNCTION_158	IF_2
0x4019012	      0xb800000000	                              mov eax, 0	     10378	elf.c	FUNCTION_158	IF_2
0x4019017	            0xeb7e	                           jmp 0x4019097	     10378	elf.c	FUNCTION_158	IF_2
0x4019019	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     10380	elf.c	FUNCTION_158
0x4019020	        0x488b5008	                mov rdx, qword [rax + 8]	     10380	elf.c	FUNCTION_158
0x4019024	        0x488b4588	             mov rax, qword [rbp - 0x78]	     10380	elf.c	FUNCTION_158
0x4019028	        0x48895038	             mov qword [rax + 0x38], rdx	     10380	elf.c	FUNCTION_158
0x401902c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     10381	elf.c	FUNCTION_158
0x4019033	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10381	elf.c	FUNCTION_158
0x4019037	          0x4889c2	                            mov rdx, rax	     10381	elf.c	FUNCTION_158
0x401903a	        0x488b4588	             mov rax, qword [rbp - 0x78]	     10381	elf.c	FUNCTION_158
0x401903e	    0x488990900000	             mov qword [rax + 0x90], rdx	     10381	elf.c	FUNCTION_158
0x4019045	        0x488b4588	             mov rax, qword [rbp - 0x78]	     10382	elf.c	FUNCTION_158
0x4019049	    0xc74070020000	               mov dword [rax + 0x70], 2	     10382	elf.c	FUNCTION_158
0x4019050	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     10385	elf.c	FUNCTION_158	IF_3	CALL_6
0x4019057	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10385	elf.c	FUNCTION_158	IF_3	CALL_6
0x401905e	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10385	elf.c	FUNCTION_158	IF_3	CALL_6
0x4019065	          0x8b4008	                mov eax, dword [rax + 8]	     10385	elf.c	FUNCTION_158	IF_3	CALL_6
0x4019068	            0x4898	                                    cdqe	     10385	elf.c	FUNCTION_158	IF_3	CALL_6
0x401906a	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	     10385	elf.c	FUNCTION_158	IF_3	CALL_6
0x4019071	            0x751f	                           jne 0x4019092	     10385	elf.c	FUNCTION_158	IF_3	CALL_6
0x4019073	        0x488b5588	             mov rdx, qword [rbp - 0x78]	     10386	elf.c	FUNCTION_158	CALL_7
0x4019077	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	     10386	elf.c	FUNCTION_158	CALL_7
0x401907e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     10386	elf.c	FUNCTION_158	CALL_7
0x4019085	          0x4889ce	                            mov rsi, rcx	     10386	elf.c	FUNCTION_158	CALL_7
0x4019088	          0x4889c7	                            mov rdi, rax	     10386	elf.c	FUNCTION_158	CALL_7
0x401908b	      0xe83cd7ffff	        call sym.elfcore_maybe_make_sect	     10386	elf.c	FUNCTION_158	CALL_7
0x4019090	            0xeb05	                           jmp 0x4019097	     10386	elf.c	FUNCTION_158	CALL_7
0x4019092	      0xb801000000	                              mov eax, 1	     10388	elf.c	FUNCTION_158
0x4019097	        0x488b75f8	                mov rsi, qword [rbp - 8]	     10389	elf.c	FUNCTION_158
0x401909b	    0x644833342528	                xor rsi, qword fs:[0x28]	     10389	elf.c	FUNCTION_158
0x40190a4	            0x7405	                            je 0x40190ab	     10389	elf.c	FUNCTION_158
0x40190a6	      0xe800000000	                          call 0x40190ab	     10389	elf.c	FUNCTION_158
0x40190ab	              0xc9	                                   leave	     10389	elf.c	FUNCTION_158
0x40190ac	              0xc3	                                     ret	     10389	elf.c	FUNCTION_158
_bfd_elf_swap_vernaux_out	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	60
0x4000cb0	              0x55	                                push rbp	       166	elf.c	FUNCTION_8
0x4000cb1	          0x4889e5	                            mov rbp, rsp	       166	elf.c	FUNCTION_8
0x4000cb4	        0x4883ec20	                           sub rsp, 0x20	       166	elf.c	FUNCTION_8
0x4000cb8	        0x48897df8	                mov qword [rbp - 8], rdi	       166	elf.c	FUNCTION_8
0x4000cbc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       166	elf.c	FUNCTION_8
0x4000cc0	        0x488955e8	             mov qword [rbp - 0x18], rdx	       166	elf.c	FUNCTION_8
0x4000cc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       167	elf.c	FUNCTION_8
0x4000cc8	        0x488b4008	                mov rax, qword [rax + 8]	       167	elf.c	FUNCTION_8
0x4000ccc	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       167	elf.c	FUNCTION_8
0x4000cd3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       167	elf.c	FUNCTION_8
0x4000cd7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       167	elf.c	FUNCTION_8
0x4000cdb	          0x488b12	                    mov rdx, qword [rdx]	       167	elf.c	FUNCTION_8
0x4000cde	          0x4889ce	                            mov rsi, rcx	       167	elf.c	FUNCTION_8
0x4000ce1	          0x4889d7	                            mov rdi, rdx	       167	elf.c	FUNCTION_8
0x4000ce4	            0xffd0	                                call rax	       167	elf.c	FUNCTION_8
0x4000ce6	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	elf.c	FUNCTION_8
0x4000cea	        0x488b4008	                mov rax, qword [rax + 8]	       168	elf.c	FUNCTION_8
0x4000cee	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       168	elf.c	FUNCTION_8
0x4000cf5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       168	elf.c	FUNCTION_8
0x4000cf9	        0x488d4a04	                      lea rcx, [rdx + 4]	       168	elf.c	FUNCTION_8
0x4000cfd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       168	elf.c	FUNCTION_8
0x4000d01	         0xfb75208	               movzx edx, word [rdx + 8]	       168	elf.c	FUNCTION_8
0x4000d05	           0xfb7d2	                           movzx edx, dx	       168	elf.c	FUNCTION_8
0x4000d08	          0x4889ce	                            mov rsi, rcx	       168	elf.c	FUNCTION_8
0x4000d0b	          0x4889d7	                            mov rdi, rdx	       168	elf.c	FUNCTION_8
0x4000d0e	            0xffd0	                                call rax	       168	elf.c	FUNCTION_8
0x4000d10	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	elf.c	FUNCTION_8
0x4000d14	        0x488b4008	                mov rax, qword [rax + 8]	       169	elf.c	FUNCTION_8
0x4000d18	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       169	elf.c	FUNCTION_8
0x4000d1f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       169	elf.c	FUNCTION_8
0x4000d23	        0x488d4a06	                      lea rcx, [rdx + 6]	       169	elf.c	FUNCTION_8
0x4000d27	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       169	elf.c	FUNCTION_8
0x4000d2b	         0xfb7520a	            movzx edx, word [rdx + 0xa] 	       169	elf.c	FUNCTION_8
0x4000d2f	           0xfb7d2	                           movzx edx, dx	       169	elf.c	FUNCTION_8
0x4000d32	          0x4889ce	                            mov rsi, rcx	       169	elf.c	FUNCTION_8
0x4000d35	          0x4889d7	                            mov rdi, rdx	       169	elf.c	FUNCTION_8
0x4000d38	            0xffd0	                                call rax	       169	elf.c	FUNCTION_8
0x4000d3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	elf.c	FUNCTION_8
0x4000d3e	        0x488b4008	                mov rax, qword [rax + 8]	       170	elf.c	FUNCTION_8
0x4000d42	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       170	elf.c	FUNCTION_8
0x4000d49	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       170	elf.c	FUNCTION_8
0x4000d4d	        0x488d4a08	                      lea rcx, [rdx + 8]	       170	elf.c	FUNCTION_8
0x4000d51	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       170	elf.c	FUNCTION_8
0x4000d55	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       170	elf.c	FUNCTION_8
0x4000d59	          0x4889ce	                            mov rsi, rcx	       170	elf.c	FUNCTION_8
0x4000d5c	          0x4889d7	                            mov rdi, rdx	       170	elf.c	FUNCTION_8
0x4000d5f	            0xffd0	                                call rax	       170	elf.c	FUNCTION_8
0x4000d61	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	elf.c	FUNCTION_8
0x4000d65	        0x488b4008	                mov rax, qword [rax + 8]	       171	elf.c	FUNCTION_8
0x4000d69	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       171	elf.c	FUNCTION_8
0x4000d70	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       171	elf.c	FUNCTION_8
0x4000d74	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       171	elf.c	FUNCTION_8
0x4000d78	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       171	elf.c	FUNCTION_8
0x4000d7c	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       171	elf.c	FUNCTION_8
0x4000d80	          0x4889ce	                            mov rsi, rcx	       171	elf.c	FUNCTION_8
0x4000d83	          0x4889d7	                            mov rdi, rdx	       171	elf.c	FUNCTION_8
0x4000d86	            0xffd0	                                call rax	       171	elf.c	FUNCTION_8
0x4000d88	              0x90	                                     nop	       172	elf.c	FUNCTION_8
0x4000d89	              0xc9	                                   leave	       172	elf.c	FUNCTION_8
0x4000d8a	              0xc3	                                     ret	       172	elf.c	FUNCTION_8
elfcore_grok_s390_todcmp	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016d40	              0x55	                                push rbp	      9252	elf.c	FUNCTION_124
0x4016d41	          0x4889e5	                            mov rbp, rsp	      9252	elf.c	FUNCTION_124
0x4016d44	        0x4883ec10	                           sub rsp, 0x10	      9252	elf.c	FUNCTION_124
0x4016d48	        0x48897df8	                mov qword [rbp - 8], rdi	      9252	elf.c	FUNCTION_124
0x4016d4c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9252	elf.c	FUNCTION_124
0x4016d50	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9253	elf.c	FUNCTION_124	CALL_1
0x4016d54	        0x488b45f8	                mov rax, qword [rbp - 8]	      9253	elf.c	FUNCTION_124	CALL_1
0x4016d58	      0xbe00000000	                              mov esi, 0	      9253	elf.c	FUNCTION_124	CALL_1
0x4016d5d	          0x4889c7	                            mov rdi, rax	      9253	elf.c	FUNCTION_124	CALL_1
0x4016d60	      0xe894feffff	call sym.elfcore_make_note_pseudosection	      9253	elf.c	FUNCTION_124	CALL_1
0x4016d65	              0xc9	                                   leave	      9254	elf.c	FUNCTION_124
0x4016d66	              0xc3	                                     ret	      9254	elf.c	FUNCTION_124
elfcore_grok_s390_todpreg	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016d67	              0x55	                                push rbp	      9258	elf.c	FUNCTION_125
0x4016d68	          0x4889e5	                            mov rbp, rsp	      9258	elf.c	FUNCTION_125
0x4016d6b	        0x4883ec10	                           sub rsp, 0x10	      9258	elf.c	FUNCTION_125
0x4016d6f	        0x48897df8	                mov qword [rbp - 8], rdi	      9258	elf.c	FUNCTION_125
0x4016d73	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9258	elf.c	FUNCTION_125
0x4016d77	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9259	elf.c	FUNCTION_125	CALL_1
0x4016d7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      9259	elf.c	FUNCTION_125	CALL_1
0x4016d7f	      0xbe00000000	                              mov esi, 0	      9259	elf.c	FUNCTION_125	CALL_1
0x4016d84	          0x4889c7	                            mov rdi, rax	      9259	elf.c	FUNCTION_125	CALL_1
0x4016d87	      0xe86dfeffff	call sym.elfcore_make_note_pseudosection	      9259	elf.c	FUNCTION_125	CALL_1
0x4016d8c	              0xc9	                                   leave	      9260	elf.c	FUNCTION_125
0x4016d8d	              0xc3	                                     ret	      9260	elf.c	FUNCTION_125
elfcore_grok_psinfo	ELSE,2:DO,0:CALL,14:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	151
0x401702d	              0x55	                                push rbp	      9383	elf.c	FUNCTION_140
0x401702e	          0x4889e5	                            mov rbp, rsp	      9383	elf.c	FUNCTION_140
0x4017031	              0x53	                                push rbx	      9383	elf.c	FUNCTION_140
0x4017032	    0x4881ecb80000	                           sub rsp, 0xb8	      9383	elf.c	FUNCTION_140
0x4017039	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      9383	elf.c	FUNCTION_140
0x4017040	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      9383	elf.c	FUNCTION_140
0x4017047	    0x64488b042528	                mov rax, qword fs:[0x28]	      9383	elf.c	FUNCTION_140
0x4017050	        0x488945e8	             mov qword [rbp - 0x18], rax	      9383	elf.c	FUNCTION_140
0x4017054	            0x31c0	                            xor eax, eax	      9383	elf.c	FUNCTION_140
0x4017056	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      9384	elf.c	FUNCTION_140	IF_1
0x401705d	        0x488b4008	                mov rax, qword [rax + 8]	      9384	elf.c	FUNCTION_140	IF_1
0x4017061	    0x483d88000000	                           cmp rax, 0x88	      9384	elf.c	FUNCTION_140	IF_1
0x4017067	     0xf85bc000000	                           jne 0x4017129	      9384	elf.c	FUNCTION_140	IF_1
0x401706d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x4017074	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x4017078	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x401707f	          0x4889d6	                            mov rsi, rdx	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x4017082	      0xba11000000	                           mov edx, 0x11	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x4017087	          0x4889c7	                            mov rdi, rax	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x401708a	          0x4889d1	                            mov rcx, rdx	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x401708d	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      9388	elf.c	FUNCTION_140	IF_1	CALL_1
0x4017090	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x4017097	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x401709e	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x40170a5	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x40170ab	          0x895004	                mov dword [rax + 4], edx	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x40170ae	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9393	elf.c	FUNCTION_140	IF_1	CALL_3
0x40170b5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9393	elf.c	FUNCTION_140	IF_1	CALL_3
0x40170bc	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9393	elf.c	FUNCTION_140	IF_1	CALL_3
0x40170c3	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170ca	        0x488d4828	                   lea rcx, [rax + 0x28]	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170ce	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170d5	      0xba10000000	                           mov edx, 0x10	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170da	          0x4889ce	                            mov rsi, rcx	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170dd	          0x4889c7	                            mov rdi, rax	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170e0	      0xe800000000	                          call 0x40170e5	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170e5	        0x48894310	             mov qword [rbx + 0x10], rax	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x40170e9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9397	elf.c	FUNCTION_140	IF_1	CALL_5
0x40170f0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9397	elf.c	FUNCTION_140	IF_1	CALL_5
0x40170f7	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9397	elf.c	FUNCTION_140	IF_1	CALL_5
0x40170fe	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017105	        0x488d4838	                   lea rcx, [rax + 0x38]	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017109	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017110	      0xba50000000	                           mov edx, 0x50	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017115	          0x4889ce	                            mov rsi, rcx	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017118	          0x4889c7	                            mov rdi, rax	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x401711b	      0xe800000000	                          call 0x4017120	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017120	        0x48894318	             mov qword [rbx + 0x18], rax	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017124	      0xe946010000	                           jmp 0x401726f	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x4017129	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x4017130	        0x488b4008	                mov rax, qword [rax + 8]	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x4017134	        0x4883f87c	                           cmp rax, 0x7c	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x4017138	     0xf852a010000	                           jne 0x4017268	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x401713e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017145	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017149	          0x488b10	                    mov rdx, qword [rax]	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x401714c	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017153	        0x488b5008	                mov rdx, qword [rax + 8]	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017157	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x401715e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017162	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017169	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x401716d	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017174	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017178	        0x48895580	             mov qword [rbp - 0x80], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x401717c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017180	        0x48895588	             mov qword [rbp - 0x78], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017184	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017188	        0x48895590	             mov qword [rbp - 0x70], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x401718c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017190	        0x48895598	             mov qword [rbp - 0x68], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017194	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x4017198	        0x488955a0	             mov qword [rbp - 0x60], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x401719c	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171a0	        0x488955a8	             mov qword [rbp - 0x58], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171a4	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171a8	        0x488955b0	             mov qword [rbp - 0x50], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171ac	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171b0	        0x488955b8	             mov qword [rbp - 0x48], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171b4	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171b8	        0x488955c0	             mov qword [rbp - 0x40], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171bc	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171c0	        0x488955c8	             mov qword [rbp - 0x38], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171c4	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171c8	        0x488955d0	             mov qword [rbp - 0x30], rdx	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171cc	          0x8b4078	            mov eax, dword [rax + 0x78] 	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171cf	          0x8945d8	             mov dword [rbp - 0x28], eax	      9407	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_7
0x40171d2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x40171d9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x40171e0	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x40171e7	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x40171ed	          0x895004	                mov dword [rax + 4], edx	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x40171f0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9412	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_9
0x40171f7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9412	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_9
0x40171fe	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9412	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_9
0x4017205	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x401720c	        0x488d481c	                   lea rcx, [rax + 0x1c]	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x4017210	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x4017217	      0xba10000000	                           mov edx, 0x10	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x401721c	          0x4889ce	                            mov rsi, rcx	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x401721f	          0x4889c7	                            mov rdi, rax	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x4017222	      0xe800000000	                          call 0x4017227	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x4017227	        0x48894310	             mov qword [rbx + 0x10], rax	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x401722b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9416	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_11
0x4017232	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9416	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_11
0x4017239	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9416	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_11
0x4017240	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x4017247	        0x488d482c	                   lea rcx, [rax + 0x2c]	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x401724b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x4017252	      0xba50000000	                           mov edx, 0x50	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x4017257	          0x4889ce	                            mov rsi, rcx	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x401725a	          0x4889c7	                            mov rdi, rax	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x401725d	      0xe800000000	                          call 0x4017262	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x4017262	        0x48894318	             mov qword [rbx + 0x18], rax	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x4017266	            0xeb07	                           jmp 0x401726f	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x4017268	      0xb801000000	                              mov eax, 1	      9426	elf.c	FUNCTION_140	ELSE_2
0x401726d	            0xeb79	                           jmp 0x40172e8	      9426	elf.c	FUNCTION_140	ELSE_2
0x401726f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      9434	elf.c	FUNCTION_140	CALL_13
0x4017276	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9434	elf.c	FUNCTION_140	CALL_13
0x401727d	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9434	elf.c	FUNCTION_140	CALL_13
0x4017284	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9434	elf.c	FUNCTION_140	CALL_13
0x4017288	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      9434	elf.c	FUNCTION_140	CALL_13
0x401728f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      9435	elf.c	FUNCTION_140	CALL_14
0x4017296	          0x4889c7	                            mov rdi, rax	      9435	elf.c	FUNCTION_140	CALL_14
0x4017299	      0xe800000000	                          call 0x401729e	      9435	elf.c	FUNCTION_140	CALL_14
0x401729e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      9435	elf.c	FUNCTION_140	CALL_14
0x40172a4	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      9437	elf.c	FUNCTION_140	IF_3
0x40172ab	            0x7e36	                           jle 0x40172e3	      9437	elf.c	FUNCTION_140	IF_3
0x40172ad	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      9437	elf.c	FUNCTION_140	IF_3
0x40172b3	            0x4898	                                    cdqe	      9437	elf.c	FUNCTION_140	IF_3
0x40172b5	        0x488d50ff	                      lea rdx, [rax - 1]	      9437	elf.c	FUNCTION_140	IF_3
0x40172b9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      9437	elf.c	FUNCTION_140	IF_3
0x40172c0	          0x4801d0	                            add rax, rdx	      9437	elf.c	FUNCTION_140	IF_3
0x40172c3	           0xfb600	                   movzx eax, byte [rax]	      9437	elf.c	FUNCTION_140	IF_3
0x40172c6	            0x3c20	                            cmp al, 0x20	      9437	elf.c	FUNCTION_140	IF_3
0x40172c8	            0x7519	                           jne 0x40172e3	      9437	elf.c	FUNCTION_140	IF_3
0x40172ca	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      9438	elf.c	FUNCTION_140	IF_3
0x40172d0	            0x4898	                                    cdqe	      9438	elf.c	FUNCTION_140	IF_3
0x40172d2	        0x488d50ff	                      lea rdx, [rax - 1]	      9438	elf.c	FUNCTION_140	IF_3
0x40172d6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      9438	elf.c	FUNCTION_140	IF_3
0x40172dd	          0x4801d0	                            add rax, rdx	      9438	elf.c	FUNCTION_140	IF_3
0x40172e0	          0xc60000	                       mov byte [rax], 0	      9438	elf.c	FUNCTION_140	IF_3
0x40172e3	      0xb801000000	                              mov eax, 1	      9441	elf.c	FUNCTION_140
0x40172e8	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      9442	elf.c	FUNCTION_140
0x40172ec	    0x644833342528	                xor rsi, qword fs:[0x28]	      9442	elf.c	FUNCTION_140
0x40172f5	            0x7405	                            je 0x40172fc	      9442	elf.c	FUNCTION_140
0x40172f7	      0xe800000000	                          call 0x40172fc	      9442	elf.c	FUNCTION_140
0x40172fc	    0x4881c4b80000	                           add rsp, 0xb8	      9442	elf.c	FUNCTION_140
0x4017303	              0x5b	                                 pop rbx	      9442	elf.c	FUNCTION_140
0x4017304	              0x5d	                                 pop rbp	      9442	elf.c	FUNCTION_140
0x4017305	              0xc3	                                     ret	      9442	elf.c	FUNCTION_140
_bfd_elf_swap_versym_out	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	19
0x4000dc3	              0x55	                                push rbp	       190	elf.c	FUNCTION_10
0x4000dc4	          0x4889e5	                            mov rbp, rsp	       190	elf.c	FUNCTION_10
0x4000dc7	        0x4883ec20	                           sub rsp, 0x20	       190	elf.c	FUNCTION_10
0x4000dcb	        0x48897df8	                mov qword [rbp - 8], rdi	       190	elf.c	FUNCTION_10
0x4000dcf	        0x488975f0	             mov qword [rbp - 0x10], rsi	       190	elf.c	FUNCTION_10
0x4000dd3	        0x488955e8	             mov qword [rbp - 0x18], rdx	       190	elf.c	FUNCTION_10
0x4000dd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	elf.c	FUNCTION_10
0x4000ddb	        0x488b4008	                mov rax, qword [rax + 8]	       191	elf.c	FUNCTION_10
0x4000ddf	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       191	elf.c	FUNCTION_10
0x4000de6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       191	elf.c	FUNCTION_10
0x4000dea	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       191	elf.c	FUNCTION_10
0x4000dee	           0xfb712	                   movzx edx, word [rdx]	       191	elf.c	FUNCTION_10
0x4000df1	           0xfb7d2	                           movzx edx, dx	       191	elf.c	FUNCTION_10
0x4000df4	          0x4889ce	                            mov rsi, rcx	       191	elf.c	FUNCTION_10
0x4000df7	          0x4889d7	                            mov rdi, rdx	       191	elf.c	FUNCTION_10
0x4000dfa	            0xffd0	                                call rax	       191	elf.c	FUNCTION_10
0x4000dfc	              0x90	                                     nop	       192	elf.c	FUNCTION_10
0x4000dfd	              0xc9	                                   leave	       192	elf.c	FUNCTION_10
0x4000dfe	              0xc3	                                     ret	       192	elf.c	FUNCTION_10
elfcore_write_prfpreg	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019b24	              0x55	                                push rbp	     10762	elf.c	FUNCTION_168
0x4019b25	          0x4889e5	                            mov rbp, rsp	     10762	elf.c	FUNCTION_168
0x4019b28	        0x4883ec40	                           sub rsp, 0x40	     10762	elf.c	FUNCTION_168
0x4019b2c	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10762	elf.c	FUNCTION_168
0x4019b30	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10762	elf.c	FUNCTION_168
0x4019b34	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10762	elf.c	FUNCTION_168
0x4019b38	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10762	elf.c	FUNCTION_168
0x4019b3c	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10762	elf.c	FUNCTION_168
0x4019b40	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10763	elf.c	FUNCTION_168
0x4019b48	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b4c	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b50	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b54	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b5c	        0x4883ec08	                              sub rsp, 8	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b60	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b63	              0x57	                                push rdi	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b64	          0x4d89c1	                              mov r9, r8	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b67	    0x41b802000000	                              mov r8d, 2	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b6d	          0x4889c7	                            mov rdi, rax	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b70	      0xe800000000	                          call 0x4019b75	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b75	        0x4883c410	                           add rsp, 0x10	     10764	elf.c	FUNCTION_168	CALL_1
0x4019b79	              0xc9	                                   leave	     10766	elf.c	FUNCTION_168
0x4019b7a	              0xc3	                                     ret	     10766	elf.c	FUNCTION_168
elfcore_grok_netbsd_procinfo	ELSE,0:DO,0:CALL,5:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	57
0x40187d7	              0x55	                                push rbp	     10152	elf.c	FUNCTION_153
0x40187d8	          0x4889e5	                            mov rbp, rsp	     10152	elf.c	FUNCTION_153
0x40187db	              0x53	                                push rbx	     10152	elf.c	FUNCTION_153
0x40187dc	        0x4883ec18	                           sub rsp, 0x18	     10152	elf.c	FUNCTION_153
0x40187e0	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10152	elf.c	FUNCTION_153
0x40187e4	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10152	elf.c	FUNCTION_153
0x40187e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10153	elf.c	FUNCTION_153	IF_1
0x40187ec	        0x488b4008	                mov rax, qword [rax + 8]	     10153	elf.c	FUNCTION_153	IF_1
0x40187f0	    0x483d9b000000	                           cmp rax, 0x9b	     10153	elf.c	FUNCTION_153	IF_1
0x40187f6	            0x770a	                            ja 0x4018802	     10153	elf.c	FUNCTION_153	IF_1
0x40187f8	      0xb800000000	                              mov eax, 0	     10154	elf.c	FUNCTION_153	IF_1
0x40187fd	      0xe9b4000000	                           jmp 0x40188b6	     10154	elf.c	FUNCTION_153	IF_1
0x4018802	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10157	elf.c	FUNCTION_153	CALL_1
0x4018806	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10157	elf.c	FUNCTION_153	CALL_1
0x401880d	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10157	elf.c	FUNCTION_153	CALL_1
0x4018814	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10158	elf.c	FUNCTION_153
0x4018818	        0x488b4008	                mov rax, qword [rax + 8]	     10158	elf.c	FUNCTION_153
0x401881c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10158	elf.c	FUNCTION_153
0x4018823	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10158	elf.c	FUNCTION_153
0x4018827	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	     10158	elf.c	FUNCTION_153
0x401882b	        0x4883c208	                              add rdx, 8	     10158	elf.c	FUNCTION_153
0x401882f	          0x4889d7	                            mov rdi, rdx	     10158	elf.c	FUNCTION_153
0x4018832	            0xffd0	                                call rax	     10158	elf.c	FUNCTION_153
0x4018834	            0x8903	                    mov dword [rbx], eax	     10158	elf.c	FUNCTION_153
0x4018836	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10161	elf.c	FUNCTION_153	CALL_2
0x401883a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10161	elf.c	FUNCTION_153	CALL_2
0x4018841	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10161	elf.c	FUNCTION_153	CALL_2
0x4018848	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10162	elf.c	FUNCTION_153
0x401884c	        0x488b4008	                mov rax, qword [rax + 8]	     10162	elf.c	FUNCTION_153
0x4018850	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10162	elf.c	FUNCTION_153
0x4018857	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10162	elf.c	FUNCTION_153
0x401885b	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	     10162	elf.c	FUNCTION_153
0x401885f	        0x4883c250	                           add rdx, 0x50	     10162	elf.c	FUNCTION_153
0x4018863	          0x4889d7	                            mov rdi, rdx	     10162	elf.c	FUNCTION_153
0x4018866	            0xffd0	                                call rax	     10162	elf.c	FUNCTION_153
0x4018868	          0x894304	                mov dword [rbx + 4], eax	     10162	elf.c	FUNCTION_153
0x401886b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10165	elf.c	FUNCTION_153	CALL_3
0x401886f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10165	elf.c	FUNCTION_153	CALL_3
0x4018876	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10165	elf.c	FUNCTION_153	CALL_3
0x401887d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10166	elf.c	FUNCTION_153	CALL_4
0x4018881	        0x488b4020	            mov rax, qword [rax + 0x20] 	     10166	elf.c	FUNCTION_153	CALL_4
0x4018885	        0x488d487c	                   lea rcx, [rax + 0x7c]	     10166	elf.c	FUNCTION_153	CALL_4
0x4018889	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10166	elf.c	FUNCTION_153	CALL_4
0x401888d	      0xba1f000000	                           mov edx, 0x1f	     10166	elf.c	FUNCTION_153	CALL_4
0x4018892	          0x4889ce	                            mov rsi, rcx	     10166	elf.c	FUNCTION_153	CALL_4
0x4018895	          0x4889c7	                            mov rdi, rax	     10166	elf.c	FUNCTION_153	CALL_4
0x4018898	      0xe800000000	                          call 0x401889d	     10166	elf.c	FUNCTION_153	CALL_4
0x401889d	        0x48894318	             mov qword [rbx + 0x18], rax	     10166	elf.c	FUNCTION_153	CALL_4
0x40188a1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10168	elf.c	FUNCTION_153	CALL_5
0x40188a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10168	elf.c	FUNCTION_153	CALL_5
0x40188a9	      0xbe00000000	                              mov esi, 0	     10168	elf.c	FUNCTION_153	CALL_5
0x40188ae	          0x4889c7	                            mov rdi, rax	     10168	elf.c	FUNCTION_153	CALL_5
0x40188b1	      0xe843e3ffff	call sym.elfcore_make_note_pseudosection	     10168	elf.c	FUNCTION_153	CALL_5
0x40188b6	        0x4883c418	                           add rsp, 0x18	     10170	elf.c	FUNCTION_153
0x40188ba	              0x5b	                                 pop rbx	     10170	elf.c	FUNCTION_153
0x40188bb	              0x5d	                                 pop rbp	     10170	elf.c	FUNCTION_153
0x40188bc	              0xc3	                                     ret	     10170	elf.c	FUNCTION_153
elfcore_grok_s390_gs_cb	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016e9f	              0x55	                                push rbp	      9306	elf.c	FUNCTION_133
0x4016ea0	          0x4889e5	                            mov rbp, rsp	      9306	elf.c	FUNCTION_133
0x4016ea3	        0x4883ec10	                           sub rsp, 0x10	      9306	elf.c	FUNCTION_133
0x4016ea7	        0x48897df8	                mov qword [rbp - 8], rdi	      9306	elf.c	FUNCTION_133
0x4016eab	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9306	elf.c	FUNCTION_133
0x4016eaf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9307	elf.c	FUNCTION_133	CALL_1
0x4016eb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      9307	elf.c	FUNCTION_133	CALL_1
0x4016eb7	      0xbe00000000	                              mov esi, 0	      9307	elf.c	FUNCTION_133	CALL_1
0x4016ebc	          0x4889c7	                            mov rdi, rax	      9307	elf.c	FUNCTION_133	CALL_1
0x4016ebf	      0xe835fdffff	call sym.elfcore_make_note_pseudosection	      9307	elf.c	FUNCTION_133	CALL_1
0x4016ec4	              0xc9	                                   leave	      9308	elf.c	FUNCTION_133
0x4016ec5	              0xc3	                                     ret	      9308	elf.c	FUNCTION_133
_bfd_elf_get_dynamic_symtab_upper_bound	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	40
0x4014a68	              0x55	                                push rbp	      8128	elf.c	FUNCTION_90
0x4014a69	          0x4889e5	                            mov rbp, rsp	      8128	elf.c	FUNCTION_90
0x4014a6c	        0x4883ec30	                           sub rsp, 0x30	      8128	elf.c	FUNCTION_90
0x4014a70	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8128	elf.c	FUNCTION_90
0x4014a74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8131	elf.c	FUNCTION_90	CALL_1
0x4014a78	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8131	elf.c	FUNCTION_90	CALL_1
0x4014a7f	    0x480558010000	                          add rax, 0x158	      8131	elf.c	FUNCTION_90	CALL_1
0x4014a85	        0x488945f0	             mov qword [rbp - 0x10], rax	      8131	elf.c	FUNCTION_90	CALL_1
0x4014a89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x4014a8d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x4014a94	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x4014a9a	            0x85c0	                           test eax, eax	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x4014a9c	            0x7513	                           jne 0x4014ab1	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x4014a9e	      0xbf05000000	                              mov edi, 5	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x4014aa3	      0xe800000000	                          call 0x4014aa8	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x4014aa8	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8136	elf.c	FUNCTION_90	IF_1
0x4014aaf	            0xeb58	                           jmp 0x4014b09	      8136	elf.c	FUNCTION_90	IF_1
0x4014ab1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ab5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ab9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8139	elf.c	FUNCTION_90	CALL_4
0x4014abd	        0x488b5208	                mov rdx, qword [rdx + 8]	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ac1	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ac8	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8139	elf.c	FUNCTION_90	CALL_4
0x4014acf	         0xfb65205	               movzx edx, byte [rdx + 5]	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ad3	           0xfb6ca	                           movzx ecx, dl	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ad6	      0xba00000000	                              mov edx, 0	      8139	elf.c	FUNCTION_90	CALL_4
0x4014adb	          0x48f7f1	                                 div rcx	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ade	        0x488945f8	                mov qword [rbp - 8], rax	      8139	elf.c	FUNCTION_90	CALL_4
0x4014ae2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8140	elf.c	FUNCTION_90
0x4014ae6	        0x4883c001	                              add rax, 1	      8140	elf.c	FUNCTION_90
0x4014aea	        0x48c1e003	                              shl rax, 3	      8140	elf.c	FUNCTION_90
0x4014aee	        0x488945e8	             mov qword [rbp - 0x18], rax	      8140	elf.c	FUNCTION_90
0x4014af2	      0x48837df800	                  cmp qword [rbp - 8], 0	      8141	elf.c	FUNCTION_90	IF_2
0x4014af7	            0x7e0c	                           jle 0x4014b05	      8141	elf.c	FUNCTION_90	IF_2
0x4014af9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8142	elf.c	FUNCTION_90	IF_2
0x4014afd	        0x4883e808	                              sub rax, 8	      8142	elf.c	FUNCTION_90	IF_2
0x4014b01	        0x488945e8	             mov qword [rbp - 0x18], rax	      8142	elf.c	FUNCTION_90	IF_2
0x4014b05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8144	elf.c	FUNCTION_90
0x4014b09	              0xc9	                                   leave	      8145	elf.c	FUNCTION_90
0x4014b0a	              0xc3	                                     ret	      8145	elf.c	FUNCTION_90
bfd_elf_get_elf_syms	ELSE,1:DO,0:CALL,20:WHILE,0:FOR,2:IF,18:SWITCH,0:functions,0	257
0x40013e8	              0x55	                                push rbp	       386	elf.c	FUNCTION_18
0x40013e9	          0x4889e5	                            mov rbp, rsp	       386	elf.c	FUNCTION_18
0x40013ec	    0x4881eca00000	                           sub rsp, 0xa0	       386	elf.c	FUNCTION_18
0x40013f3	        0x48897d88	             mov qword [rbp - 0x78], rdi	       386	elf.c	FUNCTION_18
0x40013f7	        0x48897580	             mov qword [rbp - 0x80], rsi	       386	elf.c	FUNCTION_18
0x40013fb	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       386	elf.c	FUNCTION_18
0x4001402	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	       386	elf.c	FUNCTION_18
0x4001409	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	       386	elf.c	FUNCTION_18
0x4001410	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	       386	elf.c	FUNCTION_18
0x4001417	        0x488b4588	             mov rax, qword [rbp - 0x78]	       400	elf.c	FUNCTION_18	IF_1
0x400141b	        0x488b4008	                mov rax, qword [rax + 8]	       400	elf.c	FUNCTION_18	IF_1
0x400141f	          0x8b4008	                mov eax, dword [rax + 8]	       400	elf.c	FUNCTION_18	IF_1
0x4001422	          0x83f805	                              cmp eax, 5	       400	elf.c	FUNCTION_18	IF_1
0x4001425	            0x7414	                            je 0x400143b	       400	elf.c	FUNCTION_18	IF_1
0x4001427	      0xba00000000	                              mov edx, 0	       401	elf.c	FUNCTION_18	CALL_1
0x400142c	      0xbe91010000	                          mov esi, 0x191	       401	elf.c	FUNCTION_18	CALL_1
0x4001431	      0xbf00000000	                              mov edi, 0	       401	elf.c	FUNCTION_18	CALL_1
0x4001436	      0xe800000000	                          call 0x400143b	       401	elf.c	FUNCTION_18	CALL_1
0x400143b	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       403	elf.c	FUNCTION_18	IF_2
0x4001443	            0x750c	                           jne 0x4001451	       403	elf.c	FUNCTION_18	IF_2
0x4001445	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       404	elf.c	FUNCTION_18	IF_2
0x400144c	      0xe902040000	                           jmp 0x4001853	       404	elf.c	FUNCTION_18	IF_2
0x4001451	    0x48c745900000	               mov qword [rbp - 0x70], 0	       407	elf.c	FUNCTION_18
0x4001459	        0x488b4588	             mov rax, qword [rbp - 0x78]	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x400145d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x4001464	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x400146b	          0x4885c0	                           test rax, rax	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x400146e	     0xf84b8000000	                            je 0x400152c	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x4001474	        0x488b4588	             mov rax, qword [rbp - 0x78]	       411	elf.c	FUNCTION_18	IF_3	CALL_3
0x4001478	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       411	elf.c	FUNCTION_18	IF_3	CALL_3
0x400147f	        0x488b4058	            mov rax, qword [rax + 0x58] 	       411	elf.c	FUNCTION_18	IF_3	CALL_3
0x4001483	        0x488945d0	             mov qword [rbp - 0x30], rax	       411	elf.c	FUNCTION_18	IF_3	CALL_3
0x4001487	        0x488b4588	             mov rax, qword [rbp - 0x78]	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x400148b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x4001492	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x4001499	        0x488945c8	             mov qword [rbp - 0x38], rax	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x400149d	            0xeb54	                           jmp 0x40014f3	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x400149f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40014a3	          0x8b5028	            mov edx, dword [rax + 0x28] 	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40014a6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40014aa	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40014b1	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40014b7	            0x39c2	                            cmp edx, eax	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40014b9	            0x732b	                           jae 0x40014e6	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40014bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014bf	          0x8b4028	            mov eax, dword [rax + 0x28] 	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014c2	            0x89c0	                            mov eax, eax	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014c4	    0x488d14c50000	                        lea rdx, [rax*8]	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014cc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014d0	          0x4801d0	                            add rax, rdx	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014d3	          0x488b00	                    mov rax, qword [rax]	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014d6	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014da	            0x750b	                           jne 0x40014e7	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       422	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014e0	        0x48894590	             mov qword [rbp - 0x70], rax	       422	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014e4	            0xeb14	                           jmp 0x40014fa	       423	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40014e6	              0x90	                                     nop	       418	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4
0x40014e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x40014eb	        0x488b4058	            mov rax, qword [rax + 0x58] 	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x40014ef	        0x488945c8	             mov qword [rbp - 0x38], rax	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x40014f3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x40014f8	            0x75a5	                           jne 0x400149f	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x40014fa	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       427	elf.c	FUNCTION_18	IF_3	IF_6
0x40014ff	            0x752b	                           jne 0x400152c	       427	elf.c	FUNCTION_18	IF_3	IF_6
0x4001501	        0x488b4588	             mov rax, qword [rbp - 0x78]	       429	elf.c	FUNCTION_18	IF_3	IF_6	IF_7	CALL_6
0x4001505	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       429	elf.c	FUNCTION_18	IF_3	IF_6	IF_7	CALL_6
0x400150c	        0x4883c068	                           add rax, 0x68	       429	elf.c	FUNCTION_18	IF_3	IF_6	IF_7	CALL_6
0x4001510	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       429	elf.c	FUNCTION_18	IF_3	IF_6	IF_7	CALL_6
0x4001514	            0x7516	                           jne 0x400152c	       429	elf.c	FUNCTION_18	IF_3	IF_6	IF_7	CALL_6
0x4001516	        0x488b4588	             mov rax, qword [rbp - 0x78]	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x400151a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x4001521	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x4001528	        0x48894590	             mov qword [rbp - 0x70], rax	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x400152c	    0x48c745980000	               mov qword [rbp - 0x68], 0	       438	elf.c	FUNCTION_18
0x4001534	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       439	elf.c	FUNCTION_18
0x400153c	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       440	elf.c	FUNCTION_18
0x4001544	        0x488b4588	             mov rax, qword [rbp - 0x78]	       441	elf.c	FUNCTION_18	CALL_8
0x4001548	        0x488b4008	                mov rax, qword [rax + 8]	       441	elf.c	FUNCTION_18	CALL_8
0x400154c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       441	elf.c	FUNCTION_18	CALL_8
0x4001553	        0x488945d8	             mov qword [rbp - 0x28], rax	       441	elf.c	FUNCTION_18	CALL_8
0x4001557	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       442	elf.c	FUNCTION_18
0x400155b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	       442	elf.c	FUNCTION_18
0x4001562	         0xfb64005	               movzx eax, byte [rax + 5]	       442	elf.c	FUNCTION_18
0x4001566	           0xfb6c0	                           movzx eax, al	       442	elf.c	FUNCTION_18
0x4001569	        0x488945e0	             mov qword [rbp - 0x20], rax	       442	elf.c	FUNCTION_18
0x400156d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       443	elf.c	FUNCTION_18
0x4001574	      0x480faf45e0	            imul rax, qword [rbp - 0x20]	       443	elf.c	FUNCTION_18
0x4001579	        0x488945e8	             mov qword [rbp - 0x18], rax	       443	elf.c	FUNCTION_18
0x400157d	        0x488b4580	             mov rax, qword [rbp - 0x80]	       444	elf.c	FUNCTION_18
0x4001581	        0x488b4018	            mov rax, qword [rax + 0x18] 	       444	elf.c	FUNCTION_18
0x4001585	          0x4889c2	                            mov rdx, rax	       444	elf.c	FUNCTION_18
0x4001588	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       444	elf.c	FUNCTION_18
0x400158f	      0x480faf45e0	            imul rax, qword [rbp - 0x20]	       444	elf.c	FUNCTION_18
0x4001594	          0x4801d0	                            add rax, rdx	       444	elf.c	FUNCTION_18
0x4001597	        0x488945f0	             mov qword [rbp - 0x10], rax	       444	elf.c	FUNCTION_18
0x400159b	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       445	elf.c	FUNCTION_18	IF_8
0x40015a3	            0x7525	                           jne 0x40015ca	       445	elf.c	FUNCTION_18	IF_8
0x40015a5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x40015a9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x40015b0	          0x4889d6	                            mov rsi, rdx	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x40015b3	          0x4889c7	                            mov rdi, rax	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x40015b6	      0xe800000000	                          call 0x40015bb	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x40015bb	        0x48894598	             mov qword [rbp - 0x68], rax	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x40015bf	        0x488b4598	             mov rax, qword [rbp - 0x68]	       448	elf.c	FUNCTION_18	IF_8
0x40015c3	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       448	elf.c	FUNCTION_18	IF_8
0x40015ca	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       450	elf.c	FUNCTION_18	IF_9
0x40015d2	            0x743c	                            je 0x4001610	       450	elf.c	FUNCTION_18	IF_9
0x40015d4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015d8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015dc	      0xba00000000	                              mov edx, 0	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015e1	          0x4889ce	                            mov rsi, rcx	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015e4	          0x4889c7	                            mov rdi, rax	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015e7	      0xe800000000	                          call 0x40015ec	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015ec	            0x85c0	                           test eax, eax	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015ee	            0x7520	                           jne 0x4001610	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40015f0	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x40015f4	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x40015f8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x40015ff	          0x4889ce	                            mov rsi, rcx	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x4001602	          0x4889c7	                            mov rdi, rax	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x4001605	      0xe800000000	                          call 0x400160a	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x400160a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x400160e	            0x7410	                            je 0x4001620	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x4001610	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       454	elf.c	FUNCTION_18	IF_9
0x400161b	      0xe906020000	                           jmp 0x4001826	       455	elf.c	FUNCTION_18	IF_9
0x4001620	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       458	elf.c	FUNCTION_18	IF_10
0x4001625	            0x740d	                            je 0x4001634	       458	elf.c	FUNCTION_18	IF_10
0x4001627	        0x488b4590	             mov rax, qword [rbp - 0x70]	       458	elf.c	FUNCTION_18	IF_10
0x400162b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       458	elf.c	FUNCTION_18	IF_10
0x400162f	          0x4885c0	                           test rax, rax	       458	elf.c	FUNCTION_18	IF_10
0x4001632	            0x750d	                           jne 0x4001641	       458	elf.c	FUNCTION_18	IF_10
0x4001634	    0x48c745100000	               mov qword [rbp + 0x10], 0	       459	elf.c	FUNCTION_18	IF_10
0x400163c	      0xe9a0000000	                           jmp 0x40016e1	       459	elf.c	FUNCTION_18	IF_10
0x4001641	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       462	elf.c	FUNCTION_18	ELSE_1
0x4001648	        0x48c1e002	                              shl rax, 2	       462	elf.c	FUNCTION_18	ELSE_1
0x400164c	        0x488945e8	             mov qword [rbp - 0x18], rax	       462	elf.c	FUNCTION_18	ELSE_1
0x4001650	        0x488b4590	             mov rax, qword [rbp - 0x70]	       463	elf.c	FUNCTION_18	ELSE_1
0x4001654	        0x488b4018	            mov rax, qword [rax + 0x18] 	       463	elf.c	FUNCTION_18	ELSE_1
0x4001658	          0x4889c2	                            mov rdx, rax	       463	elf.c	FUNCTION_18	ELSE_1
0x400165b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       463	elf.c	FUNCTION_18	ELSE_1
0x4001662	        0x48c1e002	                              shl rax, 2	       463	elf.c	FUNCTION_18	ELSE_1
0x4001666	          0x4801d0	                            add rax, rdx	       463	elf.c	FUNCTION_18	ELSE_1
0x4001669	        0x488945f0	             mov qword [rbp - 0x10], rax	       463	elf.c	FUNCTION_18	ELSE_1
0x400166d	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       464	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4001672	            0x7520	                           jne 0x4001694	       464	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4001674	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x400167b	      0xbe04000000	                              mov esi, 4	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4001680	          0x4889c7	                            mov rdi, rax	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4001683	      0xe800000000	                          call 0x4001688	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4001688	        0x488945a8	             mov qword [rbp - 0x58], rax	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x400168c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       468	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4001690	        0x48894510	            mov qword [rbp + 0x10], rax 	       468	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4001694	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x4001699	            0x7436	                            je 0x40016d1	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x400169b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x400169f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40016a3	      0xba00000000	                              mov edx, 0	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40016a8	          0x4889ce	                            mov rsi, rcx	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40016ab	          0x4889c7	                            mov rdi, rax	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40016ae	      0xe800000000	                          call 0x40016b3	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40016b3	            0x85c0	                           test eax, eax	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40016b5	            0x751a	                           jne 0x40016d1	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40016b7	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40016bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40016bf	          0x4889c6	                            mov rsi, rax	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40016c2	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40016c6	      0xe800000000	                          call 0x40016cb	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40016cb	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40016cf	            0x7410	                            je 0x40016e1	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40016d1	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40016dc	      0xe945010000	                           jmp 0x4001826	       475	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40016e1	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       479	elf.c	FUNCTION_18	IF_13
0x40016e9	            0x7531	                           jne 0x400171c	       479	elf.c	FUNCTION_18	IF_13
0x40016eb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       481	elf.c	FUNCTION_18	IF_13
0x40016f2	      0xbe20000000	                           mov esi, 0x20	       481	elf.c	FUNCTION_18	IF_13
0x40016f7	          0x4889c7	                            mov rdi, rax	       481	elf.c	FUNCTION_18	IF_13
0x40016fa	      0xe800000000	                          call 0x40016ff	       481	elf.c	FUNCTION_18	IF_13
0x40016ff	        0x488945b8	             mov qword [rbp - 0x48], rax	       481	elf.c	FUNCTION_18	IF_13
0x4001703	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       483	elf.c	FUNCTION_18	IF_13
0x4001707	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       483	elf.c	FUNCTION_18	IF_13
0x400170e	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x4001716	     0xf8409010000	                            je 0x4001825	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x400171c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       489	elf.c	FUNCTION_18
0x4001723	        0x48c1e005	                              shl rax, 5	       489	elf.c	FUNCTION_18
0x4001727	          0x4889c2	                            mov rdx, rax	       489	elf.c	FUNCTION_18
0x400172a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       489	elf.c	FUNCTION_18
0x4001731	          0x4801d0	                            add rax, rdx	       489	elf.c	FUNCTION_18
0x4001734	        0x488945f8	                mov qword [rbp - 8], rax	       489	elf.c	FUNCTION_18
0x4001738	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       490	elf.c	FUNCTION_18	FOR_2
0x400173f	        0x488945a0	             mov qword [rbp - 0x60], rax	       490	elf.c	FUNCTION_18	FOR_2
0x4001743	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       490	elf.c	FUNCTION_18	FOR_2
0x400174a	        0x488945c0	             mov qword [rbp - 0x40], rax	       490	elf.c	FUNCTION_18	FOR_2
0x400174e	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       491	elf.c	FUNCTION_18	FOR_2
0x4001752	        0x488945b0	             mov qword [rbp - 0x50], rax	       491	elf.c	FUNCTION_18	FOR_2
0x4001756	      0xe9ba000000	                           jmp 0x4001815	       490	elf.c	FUNCTION_18	FOR_2
0x400175b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400175f	    0x488b80000300	           mov rax, qword [rax + 0x300] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4001766	        0x488b4030	            mov rax, qword [rax + 0x30] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400176a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400176e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4001772	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4001776	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400177a	            0xffd0	                                call rax	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400177c	            0x85c0	                           test eax, eax	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400177e	            0x756e	                           jne 0x40017ee	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4001780	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       496	elf.c	FUNCTION_18	FOR_2	IF_15
0x4001784	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       496	elf.c	FUNCTION_18	FOR_2	IF_15
0x400178b	          0x4829c2	                            sub rdx, rax	       496	elf.c	FUNCTION_18	FOR_2	IF_15
0x400178e	          0x4889d0	                            mov rax, rdx	       496	elf.c	FUNCTION_18	FOR_2	IF_15
0x4001791	      0xba00000000	                              mov edx, 0	       496	elf.c	FUNCTION_18	FOR_2	IF_15
0x4001796	        0x48f775e0	                  div qword [rbp - 0x20]	       496	elf.c	FUNCTION_18	FOR_2	IF_15
0x400179a	    0x48018570ffff	            add qword [rbp - 0x90], rax 	       496	elf.c	FUNCTION_18	FOR_2	IF_15
0x40017a1	      0xbe00000000	                              mov esi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017a6	      0xbf00000000	                              mov edi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017ab	      0xe800000000	                          call 0x40017b0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017b0	          0x4889c1	                            mov rcx, rax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017b3	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017ba	        0x488b4588	             mov rax, qword [rbp - 0x78]	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017be	          0x4889c6	                            mov rsi, rax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017c1	          0x4889cf	                            mov rdi, rcx	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017c4	      0xb800000000	                              mov eax, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017c9	      0xe800000000	                          call 0x40017ce	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40017ce	      0x48837db800	               cmp qword [rbp - 0x48], 0	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x40017d3	            0x740c	                            je 0x40017e1	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x40017d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40017d9	          0x4889c7	                            mov rdi, rax	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40017dc	      0xe800000000	                          call 0x40017e1	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40017e1	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       503	elf.c	FUNCTION_18	FOR_2	IF_15
0x40017ec	            0xeb38	                           jmp 0x4001826	       504	elf.c	FUNCTION_18	FOR_2	IF_15
0x40017ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       493	elf.c	FUNCTION_18	FOR_2
0x40017f2	        0x480145a0	            add qword [rbp - 0x60], rax 	       493	elf.c	FUNCTION_18	FOR_2
0x40017f6	      0x488345c020	            add qword [rbp - 0x40], 0x20	       493	elf.c	FUNCTION_18	FOR_2
0x40017fb	      0x48837db000	               cmp qword [rbp - 0x50], 0	       493	elf.c	FUNCTION_18	FOR_2
0x4001800	            0x740a	                            je 0x400180c	       493	elf.c	FUNCTION_18	FOR_2
0x4001802	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       493	elf.c	FUNCTION_18	FOR_2
0x4001806	        0x4883c004	                              add rax, 4	       493	elf.c	FUNCTION_18	FOR_2
0x400180a	            0xeb05	                           jmp 0x4001811	       493	elf.c	FUNCTION_18	FOR_2
0x400180c	      0xb800000000	                              mov eax, 0	       493	elf.c	FUNCTION_18	FOR_2
0x4001811	        0x488945b0	             mov qword [rbp - 0x50], rax	       493	elf.c	FUNCTION_18	FOR_2
0x4001815	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       490	elf.c	FUNCTION_18	FOR_2
0x4001819	        0x483b45f8	                cmp rax, qword [rbp - 8]	       490	elf.c	FUNCTION_18	FOR_2
0x400181d	     0xf8238ffffff	                            jb 0x400175b	       490	elf.c	FUNCTION_18	FOR_2
0x4001823	            0xeb01	                           jmp 0x4001826	       490	elf.c	FUNCTION_18	FOR_2
0x4001825	              0x90	                                     nop	       485	elf.c	FUNCTION_18	IF_13	IF_14
0x4001826	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       508	elf.c	FUNCTION_18	IF_17
0x400182b	            0x740c	                            je 0x4001839	       508	elf.c	FUNCTION_18	IF_17
0x400182d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       509	elf.c	FUNCTION_18	CALL_19
0x4001831	          0x4889c7	                            mov rdi, rax	       509	elf.c	FUNCTION_18	CALL_19
0x4001834	      0xe800000000	                          call 0x4001839	       509	elf.c	FUNCTION_18	CALL_19
0x4001839	      0x48837da800	               cmp qword [rbp - 0x58], 0	       510	elf.c	FUNCTION_18	IF_18
0x400183e	            0x740c	                            je 0x400184c	       510	elf.c	FUNCTION_18	IF_18
0x4001840	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       511	elf.c	FUNCTION_18	CALL_20
0x4001844	          0x4889c7	                            mov rdi, rax	       511	elf.c	FUNCTION_18	CALL_20
0x4001847	      0xe800000000	                          call 0x400184c	       511	elf.c	FUNCTION_18	CALL_20
0x400184c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       513	elf.c	FUNCTION_18
0x4001853	              0xc9	                                   leave	       514	elf.c	FUNCTION_18
0x4001854	              0xc3	                                     ret	       514	elf.c	FUNCTION_18
elfcore_grok_ppc_vsx	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016ccb	              0x55	                                push rbp	      9234	elf.c	FUNCTION_121
0x4016ccc	          0x4889e5	                            mov rbp, rsp	      9234	elf.c	FUNCTION_121
0x4016ccf	        0x4883ec10	                           sub rsp, 0x10	      9234	elf.c	FUNCTION_121
0x4016cd3	        0x48897df8	                mov qword [rbp - 8], rdi	      9234	elf.c	FUNCTION_121
0x4016cd7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9234	elf.c	FUNCTION_121
0x4016cdb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9235	elf.c	FUNCTION_121	CALL_1
0x4016cdf	        0x488b45f8	                mov rax, qword [rbp - 8]	      9235	elf.c	FUNCTION_121	CALL_1
0x4016ce3	      0xbe00000000	                              mov esi, 0	      9235	elf.c	FUNCTION_121	CALL_1
0x4016ce8	          0x4889c7	                            mov rdi, rax	      9235	elf.c	FUNCTION_121	CALL_1
0x4016ceb	      0xe809ffffff	call sym.elfcore_make_note_pseudosection	      9235	elf.c	FUNCTION_121	CALL_1
0x4016cf0	              0xc9	                                   leave	      9236	elf.c	FUNCTION_121
0x4016cf1	              0xc3	                                     ret	      9236	elf.c	FUNCTION_121
_bfd_elf_find_inliner_info	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	21
0x4016217	              0x55	                                push rbp	      8807	elf.c	FUNCTION_105
0x4016218	          0x4889e5	                            mov rbp, rsp	      8807	elf.c	FUNCTION_105
0x401621b	        0x4883ec30	                           sub rsp, 0x30	      8807	elf.c	FUNCTION_105
0x401621f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8807	elf.c	FUNCTION_105
0x4016223	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8807	elf.c	FUNCTION_105
0x4016227	        0x488955d8	             mov qword [rbp - 0x28], rdx	      8807	elf.c	FUNCTION_105
0x401622b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      8807	elf.c	FUNCTION_105
0x401622f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8811	elf.c	FUNCTION_105	CALL_2
0x4016233	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8811	elf.c	FUNCTION_105	CALL_2
0x401623a	    0x488db8300300	                  lea rdi, [rax + 0x330]	      8809	elf.c	FUNCTION_105	CALL_1
0x4016241	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      8809	elf.c	FUNCTION_105	CALL_1
0x4016245	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8809	elf.c	FUNCTION_105	CALL_1
0x4016249	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8809	elf.c	FUNCTION_105	CALL_1
0x401624d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8809	elf.c	FUNCTION_105	CALL_1
0x4016251	          0x4989f8	                             mov r8, rdi	      8809	elf.c	FUNCTION_105	CALL_1
0x4016254	          0x4889c7	                            mov rdi, rax	      8809	elf.c	FUNCTION_105	CALL_1
0x4016257	      0xe800000000	                          call 0x401625c	      8809	elf.c	FUNCTION_105	CALL_1
0x401625c	          0x8945fc	                mov dword [rbp - 4], eax	      8809	elf.c	FUNCTION_105	CALL_1
0x401625f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8812	elf.c	FUNCTION_105
0x4016262	              0xc9	                                   leave	      8813	elf.c	FUNCTION_105
0x4016263	              0xc3	                                     ret	      8813	elf.c	FUNCTION_105
print_segment_map	ELSE,2:DO,0:CALL,9:WHILE,0:FOR,1:IF,3:SWITCH,0:functions,0	100
0x400c8d4	              0x55	                                push rbp	      5201	elf.c	FUNCTION_68
0x400c8d5	          0x4889e5	                            mov rbp, rsp	      5201	elf.c	FUNCTION_68
0x400c8d8	        0x4883ec50	                           sub rsp, 0x50	      5201	elf.c	FUNCTION_68
0x400c8dc	        0x48897db8	             mov qword [rbp - 0x48], rdi	      5201	elf.c	FUNCTION_68
0x400c8e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      5201	elf.c	FUNCTION_68
0x400c8e9	        0x488945f8	                mov qword [rbp - 8], rax	      5201	elf.c	FUNCTION_68
0x400c8ed	            0x31c0	                            xor eax, eax	      5201	elf.c	FUNCTION_68
0x400c8ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5203	elf.c	FUNCTION_68	CALL_1
0x400c8f3	        0x488b4008	                mov rax, qword [rax + 8]	      5203	elf.c	FUNCTION_68	CALL_1
0x400c8f7	            0x89c7	                            mov edi, eax	      5203	elf.c	FUNCTION_68	CALL_1
0x400c8f9	      0xe82c74ffff	               call sym.get_segment_type	      5203	elf.c	FUNCTION_68	CALL_1
0x400c8fe	        0x488945c8	             mov qword [rbp - 0x38], rax	      5203	elf.c	FUNCTION_68	CALL_1
0x400c902	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5206	elf.c	FUNCTION_68	IF_1
0x400c907	     0xf85bb000000	                           jne 0x400c9c8	      5206	elf.c	FUNCTION_68	IF_1
0x400c90d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c911	        0x488b4008	                mov rax, qword [rax + 8]	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c915	    0x483dffffff6f	                     cmp rax, 0x6fffffff	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c91b	            0x7636	                           jbe 0x400c953	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c91d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c921	        0x488b4008	                mov rax, qword [rax + 8]	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c925	    0x483dffffff7f	                     cmp rax, 0x7fffffff	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c92b	            0x7726	                            ja 0x400c953	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400c92d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5210	elf.c	FUNCTION_68	IF_1	IF_2
0x400c931	        0x488b4008	                mov rax, qword [rax + 8]	      5210	elf.c	FUNCTION_68	IF_1	IF_2
0x400c935	    0x8d9000000090	             lea edx, [rax - 0x70000000]	      5209	elf.c	FUNCTION_68	IF_1	IF_2	CALL_2
0x400c93b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5209	elf.c	FUNCTION_68	IF_1	IF_2	CALL_2
0x400c93f	      0xbe00000000	                              mov esi, 0	      5209	elf.c	FUNCTION_68	IF_1	IF_2	CALL_2
0x400c944	          0x4889c7	                            mov rdi, rax	      5209	elf.c	FUNCTION_68	IF_1	IF_2	CALL_2
0x400c947	      0xb800000000	                              mov eax, 0	      5209	elf.c	FUNCTION_68	IF_1	IF_2	CALL_2
0x400c94c	      0xe800000000	                          call 0x400c951	      5209	elf.c	FUNCTION_68	IF_1	IF_2	CALL_2
0x400c951	            0xeb6d	                           jmp 0x400c9c0	      5209	elf.c	FUNCTION_68	IF_1	IF_2	CALL_2
0x400c953	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c957	        0x488b4008	                mov rax, qword [rax + 8]	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c95b	    0x483dffffff5f	                     cmp rax, 0x5fffffff	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c961	            0x7636	                           jbe 0x400c999	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c963	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c967	        0x488b4008	                mov rax, qword [rax + 8]	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c96b	    0x483dffffff6f	                     cmp rax, 0x6fffffff	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c971	            0x7726	                            ja 0x400c999	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c973	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5213	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c977	        0x488b4008	                mov rax, qword [rax + 8]	      5213	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400c97b	    0x8d90000000a0	             lea edx, [rax - 0x60000000]	      5212	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3	CALL_3
0x400c981	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5212	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3	CALL_3
0x400c985	      0xbe00000000	                              mov esi, 0	      5212	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3	CALL_3
0x400c98a	          0x4889c7	                            mov rdi, rax	      5212	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3	CALL_3
0x400c98d	      0xb800000000	                              mov eax, 0	      5212	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3	CALL_3
0x400c992	      0xe800000000	                          call 0x400c997	      5212	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3	CALL_3
0x400c997	            0xeb27	                           jmp 0x400c9c0	      5212	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3	CALL_3
0x400c999	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5216	elf.c	FUNCTION_68	IF_1	ELSE_2
0x400c99d	        0x488b4008	                mov rax, qword [rax + 8]	      5216	elf.c	FUNCTION_68	IF_1	ELSE_2
0x400c9a1	            0x89c2	                            mov edx, eax	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9a3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9a7	            0x89d1	                            mov ecx, edx	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9a9	      0xba00000000	                              mov edx, 0	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9ae	      0xbe20000000	                           mov esi, 0x20	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9b3	          0x4889c7	                            mov rdi, rax	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9b6	      0xb800000000	                              mov eax, 0	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9bb	      0xe800000000	                          call 0x400c9c0	      5215	elf.c	FUNCTION_68	IF_1	ELSE_2	CALL_4
0x400c9c0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5217	elf.c	FUNCTION_68	IF_1
0x400c9c4	        0x488945c8	             mov qword [rbp - 0x38], rax	      5217	elf.c	FUNCTION_68	IF_1
0x400c9c8	    0x488b05000000	            mov rax, qword [0x0400c9cf] 	      5219	elf.c	FUNCTION_68	CALL_5
0x400c9cf	          0x4889c7	                            mov rdi, rax	      5219	elf.c	FUNCTION_68	CALL_5
0x400c9d2	      0xe800000000	                          call 0x400c9d7	      5219	elf.c	FUNCTION_68	CALL_5
0x400c9d7	    0x488b05000000	            mov rax, qword [0x0400c9de] 	      5220	elf.c	FUNCTION_68	CALL_6
0x400c9de	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5220	elf.c	FUNCTION_68	CALL_6
0x400c9e2	      0xbe00000000	                              mov esi, 0	      5220	elf.c	FUNCTION_68	CALL_6
0x400c9e7	          0x4889c7	                            mov rdi, rax	      5220	elf.c	FUNCTION_68	CALL_6
0x400c9ea	      0xb800000000	                              mov eax, 0	      5220	elf.c	FUNCTION_68	CALL_6
0x400c9ef	      0xe800000000	                          call 0x400c9f4	      5220	elf.c	FUNCTION_68	CALL_6
0x400c9f4	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      5221	elf.c	FUNCTION_68	FOR_1
0x400c9fb	            0xeb30	                           jmp 0x400ca2d	      5221	elf.c	FUNCTION_68	FOR_1
0x400c9fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca01	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca04	        0x4883c208	                              add rdx, 8	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca08	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca0d	          0x488b10	                    mov rdx, qword [rax]	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca10	    0x488b05000000	            mov rax, qword [0x0400ca17] 	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca17	      0xbe00000000	                              mov esi, 0	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca1c	          0x4889c7	                            mov rdi, rax	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca1f	      0xb800000000	                              mov eax, 0	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca24	      0xe800000000	                          call 0x400ca29	      5222	elf.c	FUNCTION_68	CALL_7
0x400ca29	        0x8345c401	               add dword [rbp - 0x3c], 1	      5221	elf.c	FUNCTION_68	FOR_1
0x400ca2d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5221	elf.c	FUNCTION_68	FOR_1
0x400ca31	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5221	elf.c	FUNCTION_68	FOR_1
0x400ca34	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      5221	elf.c	FUNCTION_68	FOR_1
0x400ca37	            0x77c4	                            ja 0x400c9fd	      5221	elf.c	FUNCTION_68	FOR_1
0x400ca39	    0x488b05000000	            mov rax, qword [0x0400ca40] 	      5223	elf.c	FUNCTION_68	CALL_8
0x400ca40	          0x4889c6	                            mov rsi, rax	      5223	elf.c	FUNCTION_68	CALL_8
0x400ca43	      0xbf0a000000	                            mov edi, 0xa	      5223	elf.c	FUNCTION_68	CALL_8
0x400ca48	      0xe800000000	                          call 0x400ca4d	      5223	elf.c	FUNCTION_68	CALL_8
0x400ca4d	    0x488b05000000	            mov rax, qword [0x0400ca54] 	      5224	elf.c	FUNCTION_68	CALL_9
0x400ca54	          0x4889c7	                            mov rdi, rax	      5224	elf.c	FUNCTION_68	CALL_9
0x400ca57	      0xe800000000	                          call 0x400ca5c	      5224	elf.c	FUNCTION_68	CALL_9
0x400ca5c	              0x90	                                     nop	      5225	elf.c	FUNCTION_68
0x400ca5d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5225	elf.c	FUNCTION_68
0x400ca61	    0x644833042528	                xor rax, qword fs:[0x28]	      5225	elf.c	FUNCTION_68
0x400ca6a	            0x7405	                            je 0x400ca71	      5225	elf.c	FUNCTION_68
0x400ca6c	      0xe800000000	                          call 0x400ca71	      5225	elf.c	FUNCTION_68
0x400ca71	              0xc9	                                   leave	      5225	elf.c	FUNCTION_68
0x400ca72	              0xc3	                                     ret	      5225	elf.c	FUNCTION_68
bfd_section_from_phdr	ELSE,0:DO,0:CALL,13:WHILE,0:FOR,0:IF,2:SWITCH,1:functions,0	137
0x400788e	              0x55	                                push rbp	      2996	elf.c	FUNCTION_43
0x400788f	          0x4889e5	                            mov rbp, rsp	      2996	elf.c	FUNCTION_43
0x4007892	        0x4883ec30	                           sub rsp, 0x30	      2996	elf.c	FUNCTION_43
0x4007896	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2996	elf.c	FUNCTION_43
0x400789a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2996	elf.c	FUNCTION_43
0x400789e	          0x8955dc	             mov dword [rbp - 0x24], edx	      2996	elf.c	FUNCTION_43
0x40078a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078a5	          0x488b00	                    mov rax, qword [rax]	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078a8	        0x4883f804	                              cmp rax, 4	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078ac	     0xf84ed000000	                            je 0x400799f	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078b2	        0x4883f804	                              cmp rax, 4	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078b6	            0x7729	                            ja 0x40078e1	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078b8	        0x4883f801	                              cmp rax, 1	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078bc	     0xf8486000000	                            je 0x4007948	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078c2	        0x4883f801	                              cmp rax, 1	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078c6	            0x7263	                            jb 0x400792b	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078c8	        0x4883f802	                              cmp rax, 2	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078cc	     0xf8493000000	                            je 0x4007965	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078d2	        0x4883f803	                              cmp rax, 3	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078d6	     0xf84a6000000	                            je 0x4007982	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078dc	      0xe9a8010000	                           jmp 0x4007a89	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078e1	    0x483d50e57464	                     cmp rax, 0x6474e550	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078e7	     0xf844e010000	                            je 0x4007a3b	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078ed	    0x483d50e57464	                     cmp rax, 0x6474e550	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078f3	            0x7719	                            ja 0x400790e	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078f5	        0x4883f805	                              cmp rax, 5	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078f9	     0xf8405010000	                            je 0x4007a04	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40078ff	        0x4883f806	                              cmp rax, 6	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4007903	     0xf8418010000	                            je 0x4007a21	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4007909	      0xe97b010000	                           jmp 0x4007a89	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400790e	    0x483d51e57464	                     cmp rax, 0x6474e551	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4007914	     0xf843b010000	                            je 0x4007a55	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400791a	    0x483d52e57464	                     cmp rax, 0x6474e552	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4007920	     0xf8449010000	                            je 0x4007a6f	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4007926	      0xe95e010000	                           jmp 0x4007a89	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400792b	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x400792e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x4007932	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x4007936	      0xb900000000	                              mov ecx, 0	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x400793b	          0x4889c7	                            mov rdi, rax	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x400793e	      0xe800000000	                          call 0x4007943	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x4007943	      0xe971010000	                           jmp 0x4007ab9	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x4007948	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x400794b	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x400794f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4007953	      0xb900000000	                              mov ecx, 0	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4007958	          0x4889c7	                            mov rdi, rax	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x400795b	      0xe800000000	                          call 0x4007960	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4007960	      0xe954010000	                           jmp 0x4007ab9	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4007965	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4007968	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x400796c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4007970	      0xb900000000	                              mov ecx, 0	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4007975	          0x4889c7	                            mov rdi, rax	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4007978	      0xe800000000	                          call 0x400797d	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x400797d	      0xe937010000	                           jmp 0x4007ab9	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4007982	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4007985	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4007989	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x400798d	      0xb900000000	                              mov ecx, 0	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4007992	          0x4889c7	                            mov rdi, rax	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4007995	      0xe800000000	                          call 0x400799a	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x400799a	      0xe91a010000	                           jmp 0x4007ab9	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x400799f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079a2	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079aa	      0xb900000000	                              mov ecx, 0	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079af	          0x4889c7	                            mov rdi, rax	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079b2	      0xe800000000	                          call 0x40079b7	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079b7	            0x85c0	                           test eax, eax	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079b9	            0x750a	                           jne 0x40079c5	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40079bb	      0xb800000000	                              mov eax, 0	      3015	elf.c	FUNCTION_43	SWITCH_1	IF_1
0x40079c0	      0xe9f4000000	                           jmp 0x4007ab9	      3015	elf.c	FUNCTION_43	SWITCH_1	IF_1
0x40079c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079c9	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079d1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079d9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079dd	          0x4889c6	                            mov rsi, rax	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079e4	          0x4889c7	                            mov rdi, rax	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079e7	      0xe85e320100	                 call sym.elf_read_notes	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079ec	            0x85c0	                           test eax, eax	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079ee	            0x750a	                           jne 0x40079fa	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40079f0	      0xb800000000	                              mov eax, 0	      3018	elf.c	FUNCTION_43	SWITCH_1	IF_2
0x40079f5	      0xe9bf000000	                           jmp 0x4007ab9	      3018	elf.c	FUNCTION_43	SWITCH_1	IF_2
0x40079fa	      0xb801000000	                              mov eax, 1	      3019	elf.c	FUNCTION_43	SWITCH_1
0x40079ff	      0xe9b5000000	                           jmp 0x4007ab9	      3019	elf.c	FUNCTION_43	SWITCH_1
0x4007a04	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4007a07	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4007a0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4007a0f	      0xb900000000	                              mov ecx, 0	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4007a14	          0x4889c7	                            mov rdi, rax	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4007a17	      0xe800000000	                          call 0x4007a1c	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4007a1c	      0xe998000000	                           jmp 0x4007ab9	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4007a21	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4007a24	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4007a28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4007a2c	      0xb900000000	                              mov ecx, 0	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4007a31	          0x4889c7	                            mov rdi, rax	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4007a34	      0xe800000000	                          call 0x4007a39	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4007a39	            0xeb7e	                           jmp 0x4007ab9	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4007a3b	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4007a3e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4007a42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4007a46	      0xb900000000	                              mov ecx, 0	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4007a4b	          0x4889c7	                            mov rdi, rax	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4007a4e	      0xe800000000	                          call 0x4007a53	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4007a53	            0xeb64	                           jmp 0x4007ab9	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4007a55	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4007a58	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4007a5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4007a60	      0xb900000000	                              mov ecx, 0	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4007a65	          0x4889c7	                            mov rdi, rax	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4007a68	      0xe800000000	                          call 0x4007a6d	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4007a6d	            0xeb4a	                           jmp 0x4007ab9	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4007a6f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4007a72	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4007a76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4007a7a	      0xb900000000	                              mov ecx, 0	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4007a7f	          0x4889c7	                            mov rdi, rax	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4007a82	      0xe800000000	                          call 0x4007a87	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4007a87	            0xeb30	                           jmp 0x4007ab9	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4007a89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3039	elf.c	FUNCTION_43	SWITCH_1	CALL_12
0x4007a8d	        0x488b4008	                mov rax, qword [rax + 8]	      3039	elf.c	FUNCTION_43	SWITCH_1	CALL_12
0x4007a91	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3039	elf.c	FUNCTION_43	SWITCH_1	CALL_12
0x4007a98	        0x488945f8	                mov qword [rbp - 8], rax	      3039	elf.c	FUNCTION_43	SWITCH_1	CALL_12
0x4007a9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4007aa0	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4007aa7	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4007aaa	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4007aae	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4007ab2	      0xb900000000	                              mov ecx, 0	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4007ab7	            0xffd0	                                call rax	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4007ab9	              0xc9	                                   leave	      3042	elf.c	FUNCTION_43
0x4007aba	              0xc3	                                     ret	      3042	elf.c	FUNCTION_43
elfcore_grok_ppc_vmx	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016ca4	              0x55	                                push rbp	      9228	elf.c	FUNCTION_120
0x4016ca5	          0x4889e5	                            mov rbp, rsp	      9228	elf.c	FUNCTION_120
0x4016ca8	        0x4883ec10	                           sub rsp, 0x10	      9228	elf.c	FUNCTION_120
0x4016cac	        0x48897df8	                mov qword [rbp - 8], rdi	      9228	elf.c	FUNCTION_120
0x4016cb0	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9228	elf.c	FUNCTION_120
0x4016cb4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9229	elf.c	FUNCTION_120	CALL_1
0x4016cb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      9229	elf.c	FUNCTION_120	CALL_1
0x4016cbc	      0xbe00000000	                              mov esi, 0	      9229	elf.c	FUNCTION_120	CALL_1
0x4016cc1	          0x4889c7	                            mov rdi, rax	      9229	elf.c	FUNCTION_120	CALL_1
0x4016cc4	      0xe830ffffff	call sym.elfcore_make_note_pseudosection	      9229	elf.c	FUNCTION_120	CALL_1
0x4016cc9	              0xc9	                                   leave	      9230	elf.c	FUNCTION_120
0x4016cca	              0xc3	                                     ret	      9230	elf.c	FUNCTION_120
setup_group	ELSE,2:DO,0:CALL,56:WHILE,3:FOR,3:IF,23:SWITCH,0:functions,0	518
0x4001a5d	              0x55	                                push rbp	       586	elf.c	FUNCTION_21
0x4001a5e	          0x4889e5	                            mov rbp, rsp	       586	elf.c	FUNCTION_21
0x4001a61	              0x53	                                push rbx	       586	elf.c	FUNCTION_21
0x4001a62	    0x4881ec980000	                           sub rsp, 0x98	       586	elf.c	FUNCTION_21
0x4001a69	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       586	elf.c	FUNCTION_21
0x4001a70	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       586	elf.c	FUNCTION_21
0x4001a77	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       586	elf.c	FUNCTION_21
0x4001a7e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       587	elf.c	FUNCTION_21	CALL_1
0x4001a85	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       587	elf.c	FUNCTION_21	CALL_1
0x4001a8c	    0x8b80700c0000	           mov eax, dword [rax + 0xc70] 	       587	elf.c	FUNCTION_21	CALL_1
0x4001a92	          0x894584	             mov dword [rbp - 0x7c], eax	       587	elf.c	FUNCTION_21	CALL_1
0x4001a95	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       591	elf.c	FUNCTION_21	IF_1
0x4001a99	     0xf8592050000	                           jne 0x4002031	       591	elf.c	FUNCTION_21	IF_1
0x4001a9f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       597	elf.c	FUNCTION_21	IF_1	CALL_2
0x4001aa6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       597	elf.c	FUNCTION_21	IF_1	CALL_2
0x4001aad	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	       597	elf.c	FUNCTION_21	IF_1	CALL_2
0x4001ab3	          0x894590	             mov dword [rbp - 0x70], eax	       597	elf.c	FUNCTION_21	IF_1	CALL_2
0x4001ab6	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       598	elf.c	FUNCTION_21	IF_1
0x4001abd	    0xc74588000000	               mov dword [rbp - 0x78], 0	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x4001ac4	            0xeb63	                           jmp 0x4001b29	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x4001ac6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001acd	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001ad4	        0x488b4058	            mov rax, qword [rax + 0x58] 	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001ad8	          0x8b5588	             mov edx, dword [rbp - 0x78]	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001adb	        0x48c1e203	                              shl rdx, 3	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001adf	          0x4801d0	                            add rax, rdx	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001ae2	          0x488b00	                    mov rax, qword [rax]	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001ae5	        0x488945c8	             mov qword [rbp - 0x38], rax	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4001ae9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001aed	          0x8b4004	                mov eax, dword [rax + 4]	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001af0	          0x83f811	                           cmp eax, 0x11	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001af3	            0x7530	                           jne 0x4001b25	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001af5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001af9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001afd	        0x4883f807	                              cmp rax, 7	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b01	            0x7622	                           jbe 0x4001b25	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b07	        0x488b4038	            mov rax, qword [rax + 0x38] 	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b0b	        0x4883f804	                              cmp rax, 4	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b0f	            0x7514	                           jne 0x4001b25	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b11	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b15	        0x488b4020	            mov rax, qword [rax + 0x20] 	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b19	          0x83e003	                              and eax, 3	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b1c	          0x4885c0	                           test rax, rax	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b1f	            0x7504	                           jne 0x4001b25	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b21	        0x83458401	               add dword [rbp - 0x7c], 1	       611	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x4001b25	        0x83458801	               add dword [rbp - 0x78], 1	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x4001b29	          0x8b4588	             mov eax, dword [rbp - 0x78]	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x4001b2c	          0x3b4590	             cmp eax, dword [rbp - 0x70]	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x4001b2f	            0x7295	                            jb 0x4001ac6	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x4001b31	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       614	elf.c	FUNCTION_21	IF_1	IF_3
0x4001b35	            0x753c	                           jne 0x4001b73	       614	elf.c	FUNCTION_21	IF_1	IF_3
0x4001b37	    0xc74584ffffff	     mov dword [rbp - 0x7c], 0xffffffff 	       616	elf.c	FUNCTION_21	IF_1	IF_3
0x4001b3e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       617	elf.c	FUNCTION_21	IF_1	IF_3	CALL_4
0x4001b45	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       617	elf.c	FUNCTION_21	IF_1	IF_3	CALL_4
0x4001b4c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       617	elf.c	FUNCTION_21	IF_1	IF_3	CALL_4
0x4001b4f	    0x8990700c0000	            mov dword [rax + 0xc70], edx	       617	elf.c	FUNCTION_21	IF_1	IF_3	CALL_4
0x4001b55	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       618	elf.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001b5c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       618	elf.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001b63	    0x48c780680c00	              mov qword [rax + 0xc68], 0	       618	elf.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001b6e	      0xe9be040000	                           jmp 0x4002031	       618	elf.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001b73	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       626	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_6
0x4001b7a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       626	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_6
0x4001b81	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       626	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_6
0x4001b84	    0x8990700c0000	            mov dword [rax + 0xc70], edx	       626	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_6
0x4001b8a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       627	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x4001b91	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	       627	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x4001b98	          0x8b4d84	             mov ecx, dword [rbp - 0x7c]	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4001b9b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4001ba2	      0xba08000000	                              mov edx, 8	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4001ba7	          0x4889ce	                            mov rsi, rcx	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4001baa	          0x4889c7	                            mov rdi, rax	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4001bad	      0xe800000000	                          call 0x4001bb2	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4001bb2	    0x488983680c00	            mov qword [rbx + 0xc68], rax	       627	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x4001bb9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4001bc0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4001bc7	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4001bce	          0x4885c0	                           test rax, rax	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4001bd1	            0x750a	                           jne 0x4001bdd	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4001bd3	      0xb800000000	                              mov eax, 0	       630	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x4001bd8	      0xe98a070000	                           jmp 0x4002367	       630	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x4001bdd	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001be0	    0x488d14c50000	                        lea rdx, [rax*8]	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001be8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001bef	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001bf6	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001bfd	      0xbe00000000	                              mov esi, 0	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001c02	          0x4889c7	                            mov rdi, rax	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001c05	      0xe800000000	                          call 0x4001c0a	       631	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_11
0x4001c0a	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       633	elf.c	FUNCTION_21	IF_1	ELSE_1
0x4001c11	    0xc74588000000	               mov dword [rbp - 0x78], 0	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x4001c18	      0xe963030000	                           jmp 0x4001f80	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x4001c1d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c24	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c2b	        0x488b4058	            mov rax, qword [rax + 0x58] 	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c2f	          0x8b5588	             mov edx, dword [rbp - 0x78]	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c32	        0x48c1e203	                              shl rdx, 3	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c36	          0x4801d0	                            add rax, rdx	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c39	          0x488b00	                    mov rax, qword [rax]	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c3c	        0x488945d0	             mov qword [rbp - 0x30], rax	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4001c40	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c44	          0x8b4004	                mov eax, dword [rax + 4]	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c47	          0x83f811	                           cmp eax, 0x11	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c4a	     0xf852c030000	                           jne 0x4001f7c	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c50	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c54	        0x488b4020	            mov rax, qword [rax + 0x20] 	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c58	        0x4883f807	                              cmp rax, 7	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c5c	     0xf861a030000	                           jbe 0x4001f7c	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c62	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c66	        0x488b4038	            mov rax, qword [rax + 0x38] 	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c6a	        0x4883f804	                              cmp rax, 4	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c6e	     0xf8508030000	                           jne 0x4001f7c	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c74	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c78	        0x488b4020	            mov rax, qword [rax + 0x20] 	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c7c	          0x83e003	                              and eax, 3	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c7f	          0x4885c0	                           test rax, rax	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c82	     0xf85f4020000	                           jne 0x4001f7c	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001c88	          0x8b5588	             mov edx, dword [rbp - 0x78]	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4001c8b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4001c92	            0x89d6	                            mov esi, edx	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4001c94	          0x4889c7	                            mov rdi, rax	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4001c97	      0xe800000000	                          call 0x4001c9c	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4001c9c	            0x85c0	                           test eax, eax	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4001c9e	            0x750a	                           jne 0x4001caa	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4001ca0	      0xb800000000	                              mov eax, 0	       647	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6
0x4001ca5	      0xe9bd060000	                           jmp 0x4002367	       647	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6
0x4001caa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001cb1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001cb8	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001cbf	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001cc2	        0x48c1e203	                              shl rdx, 3	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001cc6	          0x4801c2	                            add rdx, rax	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001cc9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001ccd	          0x488902	                    mov qword [rdx], rax	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x4001cd0	        0x83458401	               add dword [rbp - 0x7c], 1	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001cd4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001cd8	        0x488b4020	            mov rax, qword [rax + 0x20] 	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001cdc	        0x48c1e003	                              shl rax, 3	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001ce0	        0x48c1e802	                              shr rax, 2	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001ce4	        0x488945d8	             mov qword [rbp - 0x28], rax	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001ce8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001cec	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001cf0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001cf7	      0xba02000000	                              mov edx, 2	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001cfc	          0x4889ce	                            mov rsi, rcx	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001cff	          0x4889c7	                            mov rdi, rax	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001d02	      0xe800000000	                          call 0x4001d07	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001d07	          0x4889c2	                            mov rdx, rax	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x4001d0a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       656	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001d0e	        0x48895048	             mov qword [rax + 0x48], rdx	       656	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001d12	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       659	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d16	        0x488b4048	            mov rax, qword [rax + 0x48] 	       659	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d1a	          0x4885c0	                           test rax, rax	       659	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d1d	            0x7547	                           jne 0x4001d66	       659	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d1f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       665	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d23	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       665	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d27	      0xbe00000000	                              mov esi, 0	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x4001d2c	      0xbf00000000	                              mov edi, 0	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x4001d31	      0xe800000000	                          call 0x4001d36	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x4001d36	          0x4889c1	                            mov rcx, rax	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x4001d39	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4001d40	          0x4889da	                            mov rdx, rbx	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4001d43	          0x4889c6	                            mov rsi, rax	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4001d46	          0x4889cf	                            mov rdi, rcx	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4001d49	      0xb800000000	                              mov eax, 0	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4001d4e	      0xe800000000	                          call 0x4001d53	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4001d53	      0xbf11000000	                           mov edi, 0x11	       666	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_19
0x4001d58	      0xe800000000	                          call 0x4001d5d	       666	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_19
0x4001d5d	        0x836d8401	               sub dword [rbp - 0x7c], 1	       667	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d61	      0xe916020000	                           jmp 0x4001f7c	       668	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4001d66	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       671	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_20
0x4001d6a	        0x488b4048	            mov rax, qword [rax + 0x48] 	       671	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_20
0x4001d6e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       671	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_20
0x4001d72	      0xbe00000000	                              mov esi, 0	       671	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_20
0x4001d77	          0x4889c7	                            mov rdi, rax	       671	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_20
0x4001d7a	      0xe800000000	                          call 0x4001d7f	       671	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_20
0x4001d7f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001d83	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001d87	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001d8e	      0xba00000000	                              mov edx, 0	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001d93	          0x4889ce	                            mov rsi, rcx	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001d96	          0x4889c7	                            mov rdi, rax	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001d99	      0xe800000000	                          call 0x4001d9e	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001d9e	            0x85c0	                           test eax, eax	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001da0	            0x7532	                           jne 0x4001dd4	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4001da2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001da6	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001daa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001dae	        0x488b4048	            mov rax, qword [rax + 0x48] 	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001db2	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001db9	          0x4889ce	                            mov rsi, rcx	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001dbc	          0x4889c7	                            mov rdi, rax	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001dbf	      0xe800000000	                          call 0x4001dc4	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001dc4	          0x4889c2	                            mov rdx, rax	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001dc7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       675	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x4001dcb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       675	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x4001dcf	          0x4839c2	                            cmp rdx, rax	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001dd2	            0x7460	                            je 0x4001e34	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4001dd4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       681	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x4001dd8	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       681	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x4001ddc	      0xbe00000000	                              mov esi, 0	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x4001de1	      0xbf00000000	                              mov edi, 0	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x4001de6	      0xe800000000	                          call 0x4001deb	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x4001deb	          0x4889c1	                            mov rcx, rax	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x4001dee	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x4001df5	          0x4889da	                            mov rdx, rbx	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x4001df8	          0x4889c6	                            mov rsi, rax	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x4001dfb	          0x4889cf	                            mov rdi, rcx	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x4001dfe	      0xb800000000	                              mov eax, 0	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x4001e03	      0xe800000000	                          call 0x4001e08	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x4001e08	      0xbf11000000	                           mov edi, 0x11	       682	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_25
0x4001e0d	      0xe800000000	                          call 0x4001e12	       682	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_25
0x4001e12	        0x836d8401	               sub dword [rbp - 0x7c], 1	       683	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x4001e16	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       687	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_26
0x4001e1a	        0x488b4048	            mov rax, qword [rax + 0x48] 	       687	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_26
0x4001e1e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       687	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_26
0x4001e22	      0xbe00000000	                              mov esi, 0	       687	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_26
0x4001e27	          0x4889c7	                            mov rdi, rax	       687	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_26
0x4001e2a	      0xe800000000	                          call 0x4001e2f	       687	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_26
0x4001e2f	      0xe948010000	                           jmp 0x4001f7c	       688	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x4001e34	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e38	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e3c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e40	        0x488b4020	            mov rax, qword [rax + 0x20] 	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e44	          0x4801d0	                            add rax, rdx	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e47	        0x488945a0	             mov qword [rbp - 0x60], rax	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e4b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       696	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e4f	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       696	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       696	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e57	          0x4801d0	                            add rax, rdx	       696	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e5a	        0x488945a8	             mov qword [rbp - 0x58], rax	       696	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4001e5e	      0x48836da004	               sub qword [rbp - 0x60], 4	       702	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e63	      0x48836da808	               sub qword [rbp - 0x58], 8	       703	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e68	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e6f	        0x488b4008	                mov rax, qword [rax + 8]	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e73	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e7a	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e7e	          0x4889d7	                            mov rdi, rdx	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e81	            0xffd0	                                call rax	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e83	          0x894594	             mov dword [rbp - 0x6c], eax	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001e86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001e8a	        0x488b4048	            mov rax, qword [rax + 0x48] 	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001e8e	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001e92	            0x7549	                           jne 0x4001edd	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001e94	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       707	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001e98	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       707	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001e9b	            0x8910	                    mov dword [rax], edx	       707	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001e9d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ea1	        0x488b4040	            mov rax, qword [rax + 0x40] 	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ea5	          0x4885c0	                           test rax, rax	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ea8	     0xf84cd000000	                            je 0x4001f7b	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001eae	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001eb1	          0x83e001	                              and eax, 1	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001eb4	            0x85c0	                           test eax, eax	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001eb6	     0xf84bf000000	                            je 0x4001f7b	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ebc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       709	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ec0	        0x488b4040	            mov rax, qword [rax + 0x40] 	       709	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ec4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       709	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ec8	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       709	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ecc	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       710	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ecf	    0x81ca00000200	                         or edx, 0x20000	       710	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ed5	          0x895020	             mov dword [rax + 0x20], edx	       710	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4001ed8	      0xe99e000000	                           jmp 0x4001f7b	       711	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001edd	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       713	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001ee0	          0x3b4590	             cmp eax, dword [rbp - 0x70]	       713	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001ee3	            0x733f	                           jae 0x4001f24	       713	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001ee5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001eec	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001ef3	        0x488b4058	            mov rax, qword [rax + 0x58] 	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001ef7	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001efa	        0x48c1e203	                              shl rdx, 3	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001efe	          0x4801d0	                            add rax, rdx	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001f01	          0x488b10	                    mov rdx, qword [rax]	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001f04	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001f08	          0x488910	                    mov qword [rax], rdx	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4001f0b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001f0f	          0x488b00	                    mov rax, qword [rax]	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001f12	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001f16	          0x488b12	                    mov rdx, qword [rdx]	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001f19	        0x488b5208	                mov rdx, qword [rdx + 8]	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001f1d	          0x80ce02	                                or dh, 2	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001f20	        0x48895008	                mov qword [rax + 8], rdx	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4001f24	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       723	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f27	          0x3b4590	             cmp eax, dword [rbp - 0x70]	       723	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f2a	            0x7313	                           jae 0x4001f3f	       723	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f2c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f30	          0x488b00	                    mov rax, qword [rax]	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f33	          0x8b4004	                mov eax, dword [rax + 4]	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f36	          0x83f811	                           cmp eax, 0x11	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f39	     0xf851fffffff	                           jne 0x4001e5e	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f3f	      0xbe00000000	                              mov esi, 0	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x4001f44	      0xbf00000000	                              mov edi, 0	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x4001f49	      0xe800000000	                          call 0x4001f4e	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x4001f4e	          0x4889c1	                            mov rcx, rax	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x4001f51	          0x8b5588	             mov edx, dword [rbp - 0x78]	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4001f54	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4001f5b	          0x4889c6	                            mov rsi, rax	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4001f5e	          0x4889cf	                            mov rdi, rcx	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4001f61	      0xb800000000	                              mov eax, 0	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4001f66	      0xe800000000	                          call 0x4001f6b	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4001f6b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       729	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f6f	    0x48c700000000	                      mov qword [rax], 0	       729	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4001f76	      0xe9e3feffff	                           jmp 0x4001e5e	       731	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4001f7b	              0x90	                                     nop	       711	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4001f7c	        0x83458801	               add dword [rbp - 0x78], 1	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x4001f80	          0x8b4588	             mov eax, dword [rbp - 0x78]	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x4001f83	          0x3b4590	             cmp eax, dword [rbp - 0x70]	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x4001f86	     0xf8291fcffff	                            jb 0x4001c1d	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x4001f8c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x4001f93	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x4001f9a	    0x8b80700c0000	           mov eax, dword [rax + 0xc70] 	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x4001fa0	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x4001fa3	     0xf8488000000	                            je 0x4002031	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x4001fa9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       738	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_31
0x4001fb0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       738	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_31
0x4001fb7	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       738	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_31
0x4001fba	    0x8990700c0000	            mov dword [rax + 0xc70], edx	       738	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_31
0x4001fc0	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       741	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14
0x4001fc4	            0x756b	                           jne 0x4002031	       741	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14
0x4001fc6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       743	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_32
0x4001fcd	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       743	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_32
0x4001fd4	    0x48c780680c00	              mov qword [rax + 0xc68], 0	       743	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_32
0x4001fdf	    0xc74584ffffff	     mov dword [rbp - 0x7c], 0xffffffff 	       744	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_33
0x4001fe6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       744	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_33
0x4001fed	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       744	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_33
0x4001ff4	    0xc780700c0000	    mov dword [rax + 0xc70], 0xffffffff 	       744	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_33
0x4001ffe	      0xbe00000000	                              mov esi, 0	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x4002003	      0xbf00000000	                              mov edi, 0	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x4002008	      0xe800000000	                          call 0x400200d	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x400200d	          0x4889c2	                            mov rdx, rax	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x4002010	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x4002017	          0x4889c6	                            mov rsi, rax	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x400201a	          0x4889d7	                            mov rdi, rdx	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x400201d	      0xb800000000	                              mov eax, 0	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x4002022	      0xe800000000	                          call 0x4002027	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x4002027	      0xbf11000000	                           mov edi, 0x11	       747	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_36
0x400202c	      0xe800000000	                          call 0x4002031	       747	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_36
0x4002031	        0x837d84ff	cmp dword [rbp - 0x7c], 0xffffffffffffffff	       753	elf.c	FUNCTION_21	IF_15
0x4002035	     0xf84d6020000	                            je 0x4002311	       753	elf.c	FUNCTION_21	IF_15
0x400203b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4002042	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4002049	    0x8b80740c0000	           mov eax, dword [rax + 0xc74] 	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x400204f	          0x894598	             mov dword [rbp - 0x68], eax	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4002052	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002059	      0xe9a7020000	                           jmp 0x4002305	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x400205e	          0x8b558c	             mov edx, dword [rbp - 0x74]	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002061	          0x8b4598	             mov eax, dword [rbp - 0x68]	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002064	             0x1d0	                            add eax, edx	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002066	      0xba00000000	                              mov edx, 0	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x400206b	          0xf77584	                  div dword [rbp - 0x7c]	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x400206e	          0x89559c	             mov dword [rbp - 0x64], edx	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002071	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4002078	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x400207f	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4002086	          0x8b559c	             mov edx, dword [rbp - 0x64]	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4002089	        0x48c1e203	                              shl rdx, 3	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x400208d	          0x4801d0	                            add rax, rdx	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4002090	          0x488b00	                    mov rax, qword [rax]	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4002093	        0x488945e0	             mov qword [rbp - 0x20], rax	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4002097	      0x48837de000	               cmp qword [rbp - 0x20], 0	       767	elf.c	FUNCTION_21	IF_15	FOR_3	IF_16
0x400209c	     0xf845e020000	                            je 0x4002300	       767	elf.c	FUNCTION_21	IF_15	FOR_3	IF_16
0x40020a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       770	elf.c	FUNCTION_21	IF_15	FOR_3
0x40020a6	        0x488b4048	            mov rax, qword [rax + 0x48] 	       770	elf.c	FUNCTION_21	IF_15	FOR_3
0x40020aa	        0x488945b0	             mov qword [rbp - 0x50], rax	       770	elf.c	FUNCTION_21	IF_15	FOR_3
0x40020ae	      0x48837db000	               cmp qword [rbp - 0x50], 0	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40020b3	            0x740e	                            je 0x40020c3	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40020b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40020b9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40020bd	        0x4883f803	                              cmp rax, 3	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40020c1	            0x776e	                            ja 0x4002131	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40020c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020c7	        0x488b5840	            mov rbx, qword [rax + 0x40] 	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020cb	      0xbe00000000	                              mov esi, 0	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020d0	      0xbf00000000	                              mov edi, 0	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020d5	      0xe800000000	                          call 0x40020da	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020da	          0x4889c1	                            mov rcx, rax	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020dd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020e4	          0x4889da	                            mov rdx, rbx	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020e7	          0x4889c6	                            mov rsi, rax	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020ea	          0x4889cf	                            mov rdi, rcx	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020ed	      0xb800000000	                              mov eax, 0	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020f2	      0xe800000000	                          call 0x40020f7	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40020f7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x40020fe	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x4002105	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x400210c	          0x8b559c	             mov edx, dword [rbp - 0x64]	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x400210f	        0x48c1e203	                              shl rdx, 3	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x4002113	          0x4801d0	                            add rax, rdx	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x4002116	    0x48c700000000	                      mov qword [rax], 0	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x400211d	      0xbf11000000	                           mov edi, 0x11	       778	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_42
0x4002122	      0xe800000000	                          call 0x4002127	       778	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_42
0x4002127	      0xb800000000	                              mov eax, 0	       779	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x400212c	      0xe936020000	                           jmp 0x4002367	       779	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x4002131	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002135	        0x488b4020	            mov rax, qword [rax + 0x20] 	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002139	        0x48c1e802	                              shr rax, 2	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x400213d	        0x488945b8	             mov qword [rbp - 0x48], rax	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002141	      0xe9a8010000	                           jmp 0x40022ee	       785	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2
0x4002146	      0x488345b008	               add qword [rbp - 0x50], 8	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400214b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400214f	          0x488b00	                    mov rax, qword [rax]	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4002152	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4002159	     0xf858f010000	                           jne 0x40022ee	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400215f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       788	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4002167	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       793	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400216b	        0x488b4048	            mov rax, qword [rax + 0x48] 	       793	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400216f	        0x488945b0	             mov qword [rbp - 0x50], rax	       793	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4002173	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       794	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4002177	        0x488b4020	            mov rax, qword [rax + 0x20] 	       794	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400217b	        0x48c1e802	                              shr rax, 2	       794	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400217f	        0x488945b8	             mov qword [rbp - 0x48], rax	       794	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4002183	            0xeb3e	                           jmp 0x40021c3	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x4002185	      0x488345b008	               add qword [rbp - 0x50], 8	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x400218a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x400218e	          0x488b00	                    mov rax, qword [rax]	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4002191	          0x4885c0	                           test rax, rax	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4002194	            0x742d	                            je 0x40021c3	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4002196	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x400219a	          0x488b00	                    mov rax, qword [rax]	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x400219d	        0x488b4040	            mov rax, qword [rax + 0x40] 	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x40021a1	        0x488945c0	             mov qword [rbp - 0x40], rax	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x40021a5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x40021aa	            0x7417	                            je 0x40021c3	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x40021ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x40021b0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x40021b7	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x40021be	          0x4885c0	                           test rax, rax	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x40021c1	            0x750e	                           jne 0x40021d1	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x40021c3	      0x48836db801	               sub qword [rbp - 0x48], 1	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x40021c8	      0x48837db800	               cmp qword [rbp - 0x48], 0	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x40021cd	            0x75b6	                           jne 0x4002185	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x40021cf	            0xeb01	                           jmp 0x40021d2	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x40021d1	              0x90	                                     nop	       799	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x40021d2	      0x48837db800	               cmp qword [rbp - 0x48], 0	       800	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20
0x40021d7	            0x7469	                            je 0x4002242	       800	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20
0x40021d9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x40021e0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x40021e7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x40021eb	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x40021f2	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x40021f9	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x4002200	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4002207	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x400220e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4002212	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4002219	    0x488b92c00000	            mov rdx, qword [rdx + 0xc0] 	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4002220	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4002227	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x400222b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x4002232	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x4002239	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x4002240	            0xeb60	                           jmp 0x40022a2	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x4002242	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       812	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_49
0x4002246	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       812	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_49
0x400224d	          0x4889d6	                            mov rsi, rdx	       812	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_49
0x4002250	          0x4889c7	                            mov rdi, rax	       812	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_49
0x4002253	      0xe8e3f6ffff	                call sym.group_signature	       812	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_49
0x4002258	        0x488945e8	             mov qword [rbp - 0x18], rax	       812	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_49
0x400225c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       813	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	IF_21
0x4002261	            0x750a	                           jne 0x400226d	       813	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	IF_21
0x4002263	      0xb800000000	                              mov eax, 0	       814	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	IF_21
0x4002268	      0xe9fa000000	                           jmp 0x4002367	       814	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	IF_21
0x400226d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       815	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_50
0x4002274	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       815	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_50
0x400227b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       815	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_50
0x400227f	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       815	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_50
0x4002286	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       818	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_51
0x400228d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       818	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_51
0x4002294	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       818	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_51
0x400229b	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       818	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_51
0x40022a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       823	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_22
0x40022a6	        0x488b4040	            mov rax, qword [rax + 0x40] 	       823	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_22
0x40022aa	          0x4885c0	                           test rax, rax	       823	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_22
0x40022ad	            0x741d	                            je 0x40022cc	       823	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_22
0x40022af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       824	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_52
0x40022b3	        0x488b4040	            mov rax, qword [rax + 0x40] 	       824	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_52
0x40022b7	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       824	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_52
0x40022be	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       824	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_52
0x40022c5	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       824	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_52
0x40022cc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       826	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_53
0x40022d3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       826	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_53
0x40022da	          0x8b559c	             mov edx, dword [rbp - 0x64]	       826	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_53
0x40022dd	    0x8990740c0000	            mov dword [rax + 0xc74], edx	       826	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_53
0x40022e3	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       827	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x40022e6	          0x83e801	                              sub eax, 1	       827	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x40022e9	          0x89458c	             mov dword [rbp - 0x74], eax	       827	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x40022ec	            0xeb13	                           jmp 0x4002301	       828	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x40022ee	      0x48836db801	               sub qword [rbp - 0x48], 1	       785	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2
0x40022f3	      0x48837db800	               cmp qword [rbp - 0x48], 0	       785	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2
0x40022f8	     0xf8548feffff	                           jne 0x4002146	       785	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2
0x40022fe	            0xeb01	                           jmp 0x4002301	       785	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2
0x4002300	              0x90	                                     nop	       768	elf.c	FUNCTION_21	IF_15	FOR_3	IF_16
0x4002301	        0x83458c01	               add dword [rbp - 0x74], 1	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002305	          0x8b458c	             mov eax, dword [rbp - 0x74]	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002308	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x400230b	     0xf824dfdffff	                            jb 0x400205e	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x4002311	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x4002318	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x400231f	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x4002326	          0x4885c0	                           test rax, rax	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x4002329	            0x7537	                           jne 0x4002362	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x400232b	      0xbe00000000	                              mov esi, 0	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4002330	      0xbf00000000	                              mov edi, 0	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4002335	      0xe800000000	                          call 0x400233a	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400233a	          0x4889c1	                            mov rcx, rax	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400233d	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4002344	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400234b	          0x4889c6	                            mov rsi, rax	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400234e	          0x4889cf	                            mov rdi, rcx	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4002351	      0xb800000000	                              mov eax, 0	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4002356	      0xe800000000	                          call 0x400235b	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400235b	      0xb800000000	                              mov eax, 0	       838	elf.c	FUNCTION_21	IF_23
0x4002360	            0xeb05	                           jmp 0x4002367	       838	elf.c	FUNCTION_21	IF_23
0x4002362	      0xb801000000	                              mov eax, 1	       840	elf.c	FUNCTION_21
0x4002367	    0x4881c4980000	                           add rsp, 0x98	       841	elf.c	FUNCTION_21
0x400236e	              0x5b	                                 pop rbx	       841	elf.c	FUNCTION_21
0x400236f	              0x5d	                                 pop rbp	       841	elf.c	FUNCTION_21
0x4002370	              0xc3	                                     ret	       841	elf.c	FUNCTION_21
_bfd_elf_make_dynamic_segment	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	26
0x400ae44	              0x55	                                push rbp	      4502	elf.c	FUNCTION_63
0x400ae45	          0x4889e5	                            mov rbp, rsp	      4502	elf.c	FUNCTION_63
0x400ae48	        0x4883ec20	                           sub rsp, 0x20	      4502	elf.c	FUNCTION_63
0x400ae4c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4502	elf.c	FUNCTION_63
0x400ae50	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4502	elf.c	FUNCTION_63
0x400ae54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4505	elf.c	FUNCTION_63	CALL_1
0x400ae58	      0xbe50000000	                           mov esi, 0x50	      4505	elf.c	FUNCTION_63	CALL_1
0x400ae5d	          0x4889c7	                            mov rdi, rax	      4505	elf.c	FUNCTION_63	CALL_1
0x400ae60	      0xe800000000	                          call 0x400ae65	      4505	elf.c	FUNCTION_63	CALL_1
0x400ae65	        0x488945f8	                mov qword [rbp - 8], rax	      4505	elf.c	FUNCTION_63	CALL_1
0x400ae69	      0x48837df800	                  cmp qword [rbp - 8], 0	      4507	elf.c	FUNCTION_63	IF_1
0x400ae6e	            0x7507	                           jne 0x400ae77	      4507	elf.c	FUNCTION_63	IF_1
0x400ae70	      0xb800000000	                              mov eax, 0	      4508	elf.c	FUNCTION_63	IF_1
0x400ae75	            0xeb32	                           jmp 0x400aea9	      4508	elf.c	FUNCTION_63	IF_1
0x400ae77	        0x488b45f8	                mov rax, qword [rbp - 8]	      4509	elf.c	FUNCTION_63
0x400ae7b	    0x48c700000000	                      mov qword [rax], 0	      4509	elf.c	FUNCTION_63
0x400ae82	        0x488b45f8	                mov rax, qword [rbp - 8]	      4510	elf.c	FUNCTION_63
0x400ae86	    0x48c740080200	                  mov qword [rax + 8], 2	      4510	elf.c	FUNCTION_63
0x400ae8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4511	elf.c	FUNCTION_63
0x400ae92	    0xc74044010000	               mov dword [rax + 0x44], 1	      4511	elf.c	FUNCTION_63
0x400ae99	        0x488b45f8	                mov rax, qword [rbp - 8]	      4512	elf.c	FUNCTION_63
0x400ae9d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4512	elf.c	FUNCTION_63
0x400aea1	        0x48895048	             mov qword [rax + 0x48], rdx	      4512	elf.c	FUNCTION_63
0x400aea5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4514	elf.c	FUNCTION_63
0x400aea9	              0xc9	                                   leave	      4515	elf.c	FUNCTION_63
0x400aeaa	              0xc3	                                     ret	      4515	elf.c	FUNCTION_63
bfd_elf_is_group_section	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4002719	              0x55	                                push rbp	       962	elf.c	FUNCTION_23
0x400271a	          0x4889e5	                            mov rbp, rsp	       962	elf.c	FUNCTION_23
0x400271d	        0x48897df8	                mov qword [rbp - 8], rdi	       962	elf.c	FUNCTION_23
0x4002721	        0x488975f0	             mov qword [rbp - 0x10], rsi	       962	elf.c	FUNCTION_23
0x4002725	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       963	elf.c	FUNCTION_23	CALL_1
0x4002729	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       963	elf.c	FUNCTION_23	CALL_1
0x4002730	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       963	elf.c	FUNCTION_23	CALL_1
0x4002737	          0x4885c0	                           test rax, rax	       963	elf.c	FUNCTION_23	CALL_1
0x400273a	           0xf95c0	                                setne al	       963	elf.c	FUNCTION_23	CALL_1
0x400273d	           0xfb6c0	                           movzx eax, al	       963	elf.c	FUNCTION_23	CALL_1
0x4002740	              0x5d	                                 pop rbp	       964	elf.c	FUNCTION_23
0x4002741	              0xc3	                                     ret	       964	elf.c	FUNCTION_23
_bfd_elf_reloc_type_class	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	8
0x401adec	              0x55	                                push rbp	     11261	elf.c	FUNCTION_195
0x401aded	          0x4889e5	                            mov rbp, rsp	     11261	elf.c	FUNCTION_195
0x401adf0	        0x48897df8	                mov qword [rbp - 8], rdi	     11261	elf.c	FUNCTION_195
0x401adf4	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11261	elf.c	FUNCTION_195
0x401adf8	        0x488955e8	             mov qword [rbp - 0x18], rdx	     11261	elf.c	FUNCTION_195
0x401adfc	      0xb800000000	                              mov eax, 0	     11262	elf.c	FUNCTION_195
0x401ae01	              0x5d	                                 pop rbp	     11263	elf.c	FUNCTION_195
0x401ae02	              0xc3	                                     ret	     11263	elf.c	FUNCTION_195
elfcore_write_s390_last_break	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019f02	              0x55	                                push rbp	     10896	elf.c	FUNCTION_179
0x4019f03	          0x4889e5	                            mov rbp, rsp	     10896	elf.c	FUNCTION_179
0x4019f06	        0x4883ec40	                           sub rsp, 0x40	     10896	elf.c	FUNCTION_179
0x4019f0a	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10896	elf.c	FUNCTION_179
0x4019f0e	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10896	elf.c	FUNCTION_179
0x4019f12	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10896	elf.c	FUNCTION_179
0x4019f16	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10896	elf.c	FUNCTION_179
0x4019f1a	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10896	elf.c	FUNCTION_179
0x4019f1e	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10897	elf.c	FUNCTION_179
0x4019f26	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f2a	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f2e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f32	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f3a	        0x4883ec08	                              sub rsp, 8	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f3e	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f41	              0x57	                                push rdi	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f42	          0x4d89c1	                              mov r9, r8	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f45	    0x41b806030000	                          mov r8d, 0x306	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f4b	          0x4889c7	                            mov rdi, rax	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f4e	      0xe800000000	                          call 0x4019f53	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f53	        0x4883c410	                           add rsp, 0x10	     10898	elf.c	FUNCTION_179	CALL_1
0x4019f57	              0xc9	                                   leave	     10901	elf.c	FUNCTION_179
0x4019f58	              0xc3	                                     ret	     10901	elf.c	FUNCTION_179
_bfd_elf_maybe_function_sym	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	35
0x401b758	              0x55	                                push rbp	     11544	elf.c	FUNCTION_203
0x401b759	          0x4889e5	                            mov rbp, rsp	     11544	elf.c	FUNCTION_203
0x401b75c	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11544	elf.c	FUNCTION_203
0x401b760	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11544	elf.c	FUNCTION_203
0x401b764	        0x488955d8	             mov qword [rbp - 0x28], rdx	     11544	elf.c	FUNCTION_203
0x401b768	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11547	elf.c	FUNCTION_203	IF_1
0x401b76c	          0x8b4018	            mov eax, dword [rax + 0x18] 	     11547	elf.c	FUNCTION_203	IF_1
0x401b76f	      0x2500411d00	                       and eax, 0x1d4100	     11547	elf.c	FUNCTION_203	IF_1
0x401b774	            0x85c0	                           test eax, eax	     11547	elf.c	FUNCTION_203	IF_1
0x401b776	            0x750e	                           jne 0x401b786	     11547	elf.c	FUNCTION_203	IF_1
0x401b778	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11549	elf.c	FUNCTION_203	IF_1
0x401b77c	        0x488b4020	            mov rax, qword [rax + 0x20] 	     11549	elf.c	FUNCTION_203	IF_1
0x401b780	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	     11549	elf.c	FUNCTION_203	IF_1
0x401b784	            0x7407	                            je 0x401b78d	     11549	elf.c	FUNCTION_203	IF_1
0x401b786	      0xb800000000	                              mov eax, 0	     11550	elf.c	FUNCTION_203	IF_1
0x401b78b	            0xeb46	                           jmp 0x401b7d3	     11550	elf.c	FUNCTION_203	IF_1
0x401b78d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11552	elf.c	FUNCTION_203
0x401b791	        0x488b5010	            mov rdx, qword [rax + 0x10] 	     11552	elf.c	FUNCTION_203
0x401b795	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11552	elf.c	FUNCTION_203
0x401b799	          0x488910	                    mov qword [rax], rdx	     11552	elf.c	FUNCTION_203
0x401b79c	    0x48c745f80000	                  mov qword [rbp - 8], 0	     11553	elf.c	FUNCTION_203
0x401b7a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11554	elf.c	FUNCTION_203	IF_2
0x401b7a8	          0x8b4018	            mov eax, dword [rax + 0x18] 	     11554	elf.c	FUNCTION_203	IF_2
0x401b7ab	      0x2500002000	                       and eax, 0x200000	     11554	elf.c	FUNCTION_203	IF_2
0x401b7b0	            0x85c0	                           test eax, eax	     11554	elf.c	FUNCTION_203	IF_2
0x401b7b2	            0x750c	                           jne 0x401b7c0	     11554	elf.c	FUNCTION_203	IF_2
0x401b7b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11555	elf.c	FUNCTION_203	IF_2
0x401b7b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	     11555	elf.c	FUNCTION_203	IF_2
0x401b7bc	        0x488945f8	                mov qword [rbp - 8], rax	     11555	elf.c	FUNCTION_203	IF_2
0x401b7c0	      0x48837df800	                  cmp qword [rbp - 8], 0	     11556	elf.c	FUNCTION_203	IF_3
0x401b7c5	            0x7508	                           jne 0x401b7cf	     11556	elf.c	FUNCTION_203	IF_3
0x401b7c7	    0x48c745f80100	                  mov qword [rbp - 8], 1	     11557	elf.c	FUNCTION_203	IF_3
0x401b7cf	        0x488b45f8	                mov rax, qword [rbp - 8]	     11558	elf.c	FUNCTION_203
0x401b7d3	              0x5d	                                 pop rbp	     11559	elf.c	FUNCTION_203
0x401b7d4	              0xc3	                                     ret	     11559	elf.c	FUNCTION_203
elf_map_symbols	ELSE,5:DO,0:CALL,14:WHILE,0:FOR,6:IF,13:SWITCH,0:functions,0	304
0x400a076	              0x55	                                push rbp	      4064	elf.c	FUNCTION_56
0x400a077	          0x4889e5	                            mov rbp, rsp	      4064	elf.c	FUNCTION_56
0x400a07a	        0x4883c480	             add rsp, 0xffffffffffffff80	      4064	elf.c	FUNCTION_56
0x400a07e	        0x48897d88	             mov qword [rbp - 0x78], rdi	      4064	elf.c	FUNCTION_56
0x400a082	        0x48897580	             mov qword [rbp - 0x80], rsi	      4064	elf.c	FUNCTION_56
0x400a086	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4065	elf.c	FUNCTION_56
0x400a08a	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4065	elf.c	FUNCTION_56
0x400a090	          0x8945bc	             mov dword [rbp - 0x44], eax	      4065	elf.c	FUNCTION_56
0x400a093	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4066	elf.c	FUNCTION_56
0x400a097	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      4066	elf.c	FUNCTION_56
0x400a09e	        0x488945d0	             mov qword [rbp - 0x30], rax	      4066	elf.c	FUNCTION_56
0x400a0a2	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      4068	elf.c	FUNCTION_56
0x400a0a9	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      4069	elf.c	FUNCTION_56
0x400a0b0	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      4070	elf.c	FUNCTION_56
0x400a0b7	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      4071	elf.c	FUNCTION_56
0x400a0be	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      4072	elf.c	FUNCTION_56
0x400a0c5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0c9	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0d0	        0x488945c0	             mov qword [rbp - 0x40], rax	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0d4	            0xeb22	                           jmp 0x400a0f8	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0d6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x400a0da	          0x8b400c	              mov eax, dword [rax + 0xc]	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x400a0dd	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x400a0e0	            0x760a	                           jbe 0x400a0ec	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x400a0e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4085	elf.c	FUNCTION_56	FOR_1	IF_1
0x400a0e6	          0x8b400c	              mov eax, dword [rax + 0xc]	      4085	elf.c	FUNCTION_56	FOR_1	IF_1
0x400a0e9	          0x8945ac	             mov dword [rbp - 0x54], eax	      4085	elf.c	FUNCTION_56	FOR_1	IF_1
0x400a0ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0f0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0f4	        0x488945c0	             mov qword [rbp - 0x40], rax	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0f8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0fd	            0x75d7	                           jne 0x400a0d6	      4082	elf.c	FUNCTION_56	FOR_1
0x400a0ff	        0x8345ac01	               add dword [rbp - 0x54], 1	      4088	elf.c	FUNCTION_56
0x400a103	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      4089	elf.c	FUNCTION_56	CALL_3
0x400a106	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4089	elf.c	FUNCTION_56	CALL_3
0x400a10a	      0xba08000000	                              mov edx, 8	      4089	elf.c	FUNCTION_56	CALL_3
0x400a10f	          0x4889ce	                            mov rsi, rcx	      4089	elf.c	FUNCTION_56	CALL_3
0x400a112	          0x4889c7	                            mov rdi, rax	      4089	elf.c	FUNCTION_56	CALL_3
0x400a115	      0xe800000000	                          call 0x400a11a	      4089	elf.c	FUNCTION_56	CALL_3
0x400a11a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4089	elf.c	FUNCTION_56	CALL_3
0x400a11e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4090	elf.c	FUNCTION_56	IF_2
0x400a123	            0x750a	                           jne 0x400a12f	      4090	elf.c	FUNCTION_56	IF_2
0x400a125	      0xb800000000	                              mov eax, 0	      4091	elf.c	FUNCTION_56	IF_2
0x400a12a	      0xe9cd030000	                           jmp 0x400a4fc	      4091	elf.c	FUNCTION_56	IF_2
0x400a12f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4092	elf.c	FUNCTION_56	CALL_4
0x400a133	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4092	elf.c	FUNCTION_56	CALL_4
0x400a13a	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4092	elf.c	FUNCTION_56	CALL_4
0x400a141	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4092	elf.c	FUNCTION_56	CALL_4
0x400a145	        0x48895010	             mov qword [rax + 0x10], rdx	      4092	elf.c	FUNCTION_56	CALL_4
0x400a149	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4093	elf.c	FUNCTION_56	CALL_5
0x400a14d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4093	elf.c	FUNCTION_56	CALL_5
0x400a154	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4093	elf.c	FUNCTION_56	CALL_5
0x400a15b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4093	elf.c	FUNCTION_56	CALL_5
0x400a15e	          0x895048	             mov dword [rax + 0x48], edx	      4093	elf.c	FUNCTION_56	CALL_5
0x400a161	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      4097	elf.c	FUNCTION_56	FOR_2
0x400a168	      0xe9c2000000	                           jmp 0x400a22f	      4097	elf.c	FUNCTION_56	FOR_2
0x400a16d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4099	elf.c	FUNCTION_56	FOR_2
0x400a170	    0x488d14c50000	                        lea rdx, [rax*8]	      4099	elf.c	FUNCTION_56	FOR_2
0x400a178	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4099	elf.c	FUNCTION_56	FOR_2
0x400a17c	          0x4801d0	                            add rax, rdx	      4099	elf.c	FUNCTION_56	FOR_2
0x400a17f	          0x488b00	                    mov rax, qword [rax]	      4099	elf.c	FUNCTION_56	FOR_2
0x400a182	        0x488945e0	             mov qword [rbp - 0x20], rax	      4099	elf.c	FUNCTION_56	FOR_2
0x400a186	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a18a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a18d	      0x2500010000	                          and eax, 0x100	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a192	            0x85c0	                           test eax, eax	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a194	     0xf8491000000	                            je 0x400a22b	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a19a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a19e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1a2	          0x4885c0	                           test rax, rax	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1a5	     0xf8580000000	                           jne 0x400a22b	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1ab	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_6
0x400a1af	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_6
0x400a1b3	          0x4889d6	                            mov rsi, rdx	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_6
0x400a1b6	          0x4889c7	                            mov rdi, rax	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_6
0x400a1b9	      0xe898fdffff	             call sym.ignore_section_sym	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_6
0x400a1be	            0x85c0	                           test eax, eax	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_6
0x400a1c0	            0x7569	                           jne 0x400a22b	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_6
0x400a1c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4104	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1c6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4104	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1ca	    0x483d00000000	                              cmp rax, 0	      4104	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1d0	            0x7459	                            je 0x400a22b	      4104	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4106	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1d6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4106	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1da	        0x488945c8	             mov qword [rbp - 0x38], rax	      4106	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x400a1e2	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x400a1e9	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x400a1ed	            0x740c	                            je 0x400a1fb	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x400a1ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4109	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x400a1f3	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4109	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x400a1f7	        0x488945c8	             mov qword [rbp - 0x38], rax	      4109	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x400a1fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a1ff	          0x8b400c	              mov eax, dword [rax + 0xc]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a202	            0x89c0	                            mov eax, eax	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a204	    0x488d14c50000	                        lea rdx, [rax*8]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a20c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a210	          0x4801c2	                            add rdx, rax	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a213	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a216	    0x488d0cc50000	                        lea rcx, [rax*8]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a21e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a222	          0x4801c8	                            add rax, rcx	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a225	          0x488b00	                    mov rax, qword [rax]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a228	          0x488902	                    mov qword [rdx], rax	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400a22b	        0x8345b001	               add dword [rbp - 0x50], 1	      4097	elf.c	FUNCTION_56	FOR_2
0x400a22f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4097	elf.c	FUNCTION_56	FOR_2
0x400a232	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      4097	elf.c	FUNCTION_56	FOR_2
0x400a235	     0xf8232ffffff	                            jb 0x400a16d	      4097	elf.c	FUNCTION_56	FOR_2
0x400a23b	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      4116	elf.c	FUNCTION_56	FOR_3
0x400a242	            0xeb5e	                           jmp 0x400a2a2	      4116	elf.c	FUNCTION_56	FOR_3
0x400a244	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a247	    0x488d14c50000	                        lea rdx, [rax*8]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a24f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a253	          0x4801d0	                            add rax, rdx	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a256	          0x488b10	                    mov rdx, qword [rax]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a259	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a25d	          0x4889d6	                            mov rsi, rdx	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a260	          0x4889c7	                            mov rdi, rax	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a263	      0xe82dfbffff	                  call sym.sym_is_global	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a268	            0x85c0	                           test eax, eax	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a26a	            0x7406	                            je 0x400a272	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_7
0x400a26c	        0x8345a001	               add dword [rbp - 0x60], 1	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x400a270	            0xeb2c	                           jmp 0x400a29e	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x400a272	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a275	    0x488d14c50000	                        lea rdx, [rax*8]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a27d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a281	          0x4801d0	                            add rax, rdx	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a284	          0x488b10	                    mov rdx, qword [rax]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a287	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a28b	          0x4889d6	                            mov rsi, rdx	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a28e	          0x4889c7	                            mov rdi, rax	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a291	      0xe8c0fcffff	             call sym.ignore_section_sym	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a296	            0x85c0	                           test eax, eax	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a298	            0x7504	                           jne 0x400a29e	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_8
0x400a29a	        0x83459c01	               add dword [rbp - 0x64], 1	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x400a29e	        0x8345b001	               add dword [rbp - 0x50], 1	      4116	elf.c	FUNCTION_56	FOR_3
0x400a2a2	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4116	elf.c	FUNCTION_56	FOR_3
0x400a2a5	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      4116	elf.c	FUNCTION_56	FOR_3
0x400a2a8	            0x729a	                            jb 0x400a244	      4116	elf.c	FUNCTION_56	FOR_3
0x400a2aa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4128	elf.c	FUNCTION_56	FOR_4
0x400a2ae	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4128	elf.c	FUNCTION_56	FOR_4
0x400a2b5	        0x488945c0	             mov qword [rbp - 0x40], rax	      4128	elf.c	FUNCTION_56	FOR_4
0x400a2b9	            0xeb54	                           jmp 0x400a30f	      4128	elf.c	FUNCTION_56	FOR_4
0x400a2bb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2bf	          0x8b400c	              mov eax, dword [rax + 0xc]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2c2	            0x89c0	                            mov eax, eax	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2c4	    0x488d14c50000	                        lea rdx, [rax*8]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2d0	          0x4801d0	                            add rax, rdx	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2d3	          0x488b00	                    mov rax, qword [rax]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2d6	          0x4885c0	                           test rax, rax	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2d9	            0x7528	                           jne 0x400a303	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400a2db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2df	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2e6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2ea	          0x4889d6	                            mov rsi, rdx	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2ed	          0x4889c7	                            mov rdi, rax	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2f0	      0xe8a0faffff	                  call sym.sym_is_global	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2f5	            0x85c0	                           test eax, eax	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2f7	            0x7506	                           jne 0x400a2ff	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_9
0x400a2f9	        0x83459c01	               add dword [rbp - 0x64], 1	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400a2fd	            0xeb04	                           jmp 0x400a303	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400a2ff	        0x8345a001	               add dword [rbp - 0x60], 1	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x400a303	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4128	elf.c	FUNCTION_56	FOR_4
0x400a307	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4128	elf.c	FUNCTION_56	FOR_4
0x400a30b	        0x488945c0	             mov qword [rbp - 0x40], rax	      4128	elf.c	FUNCTION_56	FOR_4
0x400a30f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4128	elf.c	FUNCTION_56	FOR_4
0x400a314	            0x75a5	                           jne 0x400a2bb	      4128	elf.c	FUNCTION_56	FOR_4
0x400a316	          0x8b559c	             mov edx, dword [rbp - 0x64]	      4140	elf.c	FUNCTION_56	CALL_10
0x400a319	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4140	elf.c	FUNCTION_56	CALL_10
0x400a31c	             0x1d0	                            add eax, edx	      4140	elf.c	FUNCTION_56	CALL_10
0x400a31e	            0x89c1	                            mov ecx, eax	      4140	elf.c	FUNCTION_56	CALL_10
0x400a320	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4140	elf.c	FUNCTION_56	CALL_10
0x400a324	      0xba08000000	                              mov edx, 8	      4140	elf.c	FUNCTION_56	CALL_10
0x400a329	          0x4889ce	                            mov rsi, rcx	      4140	elf.c	FUNCTION_56	CALL_10
0x400a32c	          0x4889c7	                            mov rdi, rax	      4140	elf.c	FUNCTION_56	CALL_10
0x400a32f	      0xe800000000	                          call 0x400a334	      4140	elf.c	FUNCTION_56	CALL_10
0x400a334	        0x488945e8	             mov qword [rbp - 0x18], rax	      4140	elf.c	FUNCTION_56	CALL_10
0x400a338	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4143	elf.c	FUNCTION_56	IF_9
0x400a33d	            0x750a	                           jne 0x400a349	      4143	elf.c	FUNCTION_56	IF_9
0x400a33f	      0xb800000000	                              mov eax, 0	      4144	elf.c	FUNCTION_56	IF_9
0x400a344	      0xe9b3010000	                           jmp 0x400a4fc	      4144	elf.c	FUNCTION_56	IF_9
0x400a349	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      4146	elf.c	FUNCTION_56	FOR_5
0x400a350	      0xe996000000	                           jmp 0x400a3eb	      4146	elf.c	FUNCTION_56	FOR_5
0x400a355	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4148	elf.c	FUNCTION_56	FOR_5
0x400a358	    0x488d14c50000	                        lea rdx, [rax*8]	      4148	elf.c	FUNCTION_56	FOR_5
0x400a360	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4148	elf.c	FUNCTION_56	FOR_5
0x400a364	          0x4801d0	                            add rax, rdx	      4148	elf.c	FUNCTION_56	FOR_5
0x400a367	          0x488b00	                    mov rax, qword [rax]	      4148	elf.c	FUNCTION_56	FOR_5
0x400a36a	        0x488945f0	             mov qword [rbp - 0x10], rax	      4148	elf.c	FUNCTION_56	FOR_5
0x400a36e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_11
0x400a372	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_11
0x400a376	          0x4889d6	                            mov rsi, rdx	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_11
0x400a379	          0x4889c7	                            mov rdi, rax	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_11
0x400a37c	      0xe814faffff	                  call sym.sym_is_global	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_11
0x400a381	            0x85c0	                           test eax, eax	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_11
0x400a383	            0x7413	                            je 0x400a398	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_11
0x400a385	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x400a388	          0x8d5001	                      lea edx, [rax + 1]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x400a38b	          0x8955a8	             mov dword [rbp - 0x58], edx	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x400a38e	          0x8b559c	             mov edx, dword [rbp - 0x64]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x400a391	             0x1d0	                            add eax, edx	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x400a393	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x400a396	            0xeb23	                           jmp 0x400a3bb	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x400a398	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_12
0x400a39c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_12
0x400a3a0	          0x4889d6	                            mov rsi, rdx	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_12
0x400a3a3	          0x4889c7	                            mov rdi, rax	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_12
0x400a3a6	      0xe8abfbffff	             call sym.ignore_section_sym	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_12
0x400a3ab	            0x85c0	                           test eax, eax	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_12
0x400a3ad	            0x7537	                           jne 0x400a3e6	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_12
0x400a3af	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x400a3b2	          0x8d5001	                      lea edx, [rax + 1]	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x400a3b5	          0x8955a4	             mov dword [rbp - 0x5c], edx	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x400a3b8	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x400a3bb	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3be	    0x488d14c50000	                        lea rdx, [rax*8]	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3ca	          0x4801c2	                            add rdx, rax	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3d1	          0x488902	                    mov qword [rdx], rax	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3d4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3d7	          0x83c001	                              add eax, 1	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3da	            0x89c2	                            mov edx, eax	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3e0	        0x48895028	             mov qword [rax + 0x28], rdx	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3e4	            0xeb01	                           jmp 0x400a3e7	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3e6	              0x90	                                     nop	      4156	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400a3e7	        0x8345b001	               add dword [rbp - 0x50], 1	      4146	elf.c	FUNCTION_56	FOR_5
0x400a3eb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4146	elf.c	FUNCTION_56	FOR_5
0x400a3ee	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      4146	elf.c	FUNCTION_56	FOR_5
0x400a3f1	     0xf825effffff	                            jb 0x400a355	      4146	elf.c	FUNCTION_56	FOR_5
0x400a3f7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a3fb	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a402	        0x488945c0	             mov qword [rbp - 0x40], rax	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a406	      0xe9bd000000	                           jmp 0x400a4c8	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a40b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a40f	          0x8b400c	              mov eax, dword [rax + 0xc]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a412	            0x89c0	                            mov eax, eax	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a414	    0x488d14c50000	                        lea rdx, [rax*8]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a41c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a420	          0x4801d0	                            add rax, rdx	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a423	          0x488b00	                    mov rax, qword [rax]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a426	          0x4885c0	                           test rax, rax	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a429	     0xf858d000000	                           jne 0x400a4bc	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a42f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4164	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a433	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4164	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a43a	        0x488945f8	                mov qword [rbp - 8], rax	      4164	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a43e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a442	          0x8b400c	              mov eax, dword [rax + 0xc]	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a445	            0x89c0	                            mov eax, eax	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a447	    0x488d14c50000	                        lea rdx, [rax*8]	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a44f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a453	          0x4801c2	                            add rdx, rax	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a456	        0x488b45f8	                mov rax, qword [rbp - 8]	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a45a	          0x488902	                    mov qword [rdx], rax	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a45d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_13
0x400a461	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_13
0x400a465	          0x4889d6	                            mov rsi, rdx	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_13
0x400a468	          0x4889c7	                            mov rdi, rax	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_13
0x400a46b	      0xe825f9ffff	                  call sym.sym_is_global	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_13
0x400a470	            0x85c0	                           test eax, eax	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_13
0x400a472	            0x750e	                           jne 0x400a482	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_13
0x400a474	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a477	          0x8d5001	                      lea edx, [rax + 1]	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a47a	          0x8955a4	             mov dword [rbp - 0x5c], edx	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a47d	          0x8945b8	             mov dword [rbp - 0x48], eax	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a480	            0xeb11	                           jmp 0x400a493	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a482	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400a485	          0x8d5001	                      lea edx, [rax + 1]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400a488	          0x8955a8	             mov dword [rbp - 0x58], edx	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400a48b	          0x8b559c	             mov edx, dword [rbp - 0x64]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400a48e	             0x1d0	                            add eax, edx	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400a490	          0x8945b8	             mov dword [rbp - 0x48], eax	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400a493	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a496	    0x488d14c50000	                        lea rdx, [rax*8]	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a49e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4a2	          0x4801c2	                            add rdx, rax	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4a9	          0x488902	                    mov qword [rdx], rax	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4ac	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4af	          0x83c001	                              add eax, 1	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4b2	            0x89c2	                            mov edx, eax	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4b8	        0x48895028	             mov qword [rax + 0x28], rdx	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a4bc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a4c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a4c4	        0x488945c0	             mov qword [rbp - 0x40], rax	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a4c8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a4cd	     0xf8538ffffff	                           jne 0x400a40b	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400a4d3	          0x8b559c	             mov edx, dword [rbp - 0x64]	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4d6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4d9	             0x1c2	                            add edx, eax	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4db	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4df	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4e3	          0x4889ce	                            mov rsi, rcx	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4e6	          0x4889c7	                            mov rdi, rax	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4e9	      0xe800000000	                          call 0x400a4ee	      4177	elf.c	FUNCTION_56	CALL_14
0x400a4ee	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4179	elf.c	FUNCTION_56
0x400a4f2	          0x8b559c	             mov edx, dword [rbp - 0x64]	      4179	elf.c	FUNCTION_56
0x400a4f5	            0x8910	                    mov dword [rax], edx	      4179	elf.c	FUNCTION_56
0x400a4f7	      0xb801000000	                              mov eax, 1	      4180	elf.c	FUNCTION_56
0x400a4fc	              0xc9	                                   leave	      4181	elf.c	FUNCTION_56
0x400a4fd	              0xc3	                                     ret	      4181	elf.c	FUNCTION_56
rewrite_elf_program_header	ELSE,5:DO,1:CALL,22:WHILE,0:FOR,11:IF,45:SWITCH,0:functions,0	1663
0x4010375	              0x55	                                push rbp	      6546	elf.c	FUNCTION_80
0x4010376	          0x4889e5	                            mov rbp, rsp	      6546	elf.c	FUNCTION_80
0x4010379	              0x53	                                push rbx	      6546	elf.c	FUNCTION_80
0x401037a	    0x4881ece80000	                           sub rsp, 0xe8	      6546	elf.c	FUNCTION_80
0x4010381	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	      6546	elf.c	FUNCTION_80
0x4010388	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      6546	elf.c	FUNCTION_80
0x401038f	    0x64488b042528	                mov rax, qword fs:[0x28]	      6546	elf.c	FUNCTION_80
0x4010398	        0x488945e8	             mov qword [rbp - 0x18], rax	      6546	elf.c	FUNCTION_80
0x401039c	            0x31c0	                            xor eax, eax	      6546	elf.c	FUNCTION_80
0x401039e	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      6555	elf.c	FUNCTION_80
0x40103a8	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      6558	elf.c	FUNCTION_80
0x40103b3	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      6559	elf.c	FUNCTION_80
0x40103bd	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6562	elf.c	FUNCTION_80	CALL_1
0x40103c4	        0x488b4008	                mov rax, qword [rax + 8]	      6562	elf.c	FUNCTION_80	CALL_1
0x40103c8	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6562	elf.c	FUNCTION_80	CALL_1
0x40103cf	        0x488945a0	             mov qword [rbp - 0x60], rax	      6562	elf.c	FUNCTION_80	CALL_1
0x40103d3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6563	elf.c	FUNCTION_80	CALL_2
0x40103da	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6563	elf.c	FUNCTION_80	CALL_2
0x40103e1	        0x488945a8	             mov qword [rbp - 0x58], rax	      6563	elf.c	FUNCTION_80	CALL_2
0x40103e5	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      6565	elf.c	FUNCTION_80
0x40103f0	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      6566	elf.c	FUNCTION_80
0x40103f7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      6566	elf.c	FUNCTION_80
0x40103fe	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6568	elf.c	FUNCTION_80	CALL_3
0x4010405	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6568	elf.c	FUNCTION_80	CALL_3
0x401040c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6568	elf.c	FUNCTION_80	CALL_3
0x401040f	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      6568	elf.c	FUNCTION_80	CALL_3
0x4010415	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6569	elf.c	FUNCTION_80	CALL_4
0x401041c	        0x488b4008	                mov rax, qword [rax + 8]	      6569	elf.c	FUNCTION_80	CALL_4
0x4010420	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6569	elf.c	FUNCTION_80	CALL_4
0x4010427	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6569	elf.c	FUNCTION_80	CALL_4
0x401042b	        0x488945b0	             mov qword [rbp - 0x50], rax	      6569	elf.c	FUNCTION_80	CALL_4
0x401042f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6682	elf.c	FUNCTION_80	FOR_1
0x4010436	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6682	elf.c	FUNCTION_80	FOR_1
0x401043d	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6682	elf.c	FUNCTION_80	FOR_1
0x4010444	            0xeb23	                           jmp 0x4010469	      6682	elf.c	FUNCTION_80	FOR_1
0x4010446	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6683	elf.c	FUNCTION_80	FOR_1
0x401044d	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      6683	elf.c	FUNCTION_80	FOR_1
0x4010451	          0x83e2bf	                     and edx, 0xffffffbf	      6683	elf.c	FUNCTION_80	FOR_1
0x4010454	          0x885024	               mov byte [rax + 0x24], dl	      6683	elf.c	FUNCTION_80	FOR_1
0x4010457	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6682	elf.c	FUNCTION_80	FOR_1
0x401045e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6682	elf.c	FUNCTION_80	FOR_1
0x4010462	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6682	elf.c	FUNCTION_80	FOR_1
0x4010469	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      6682	elf.c	FUNCTION_80	FOR_1
0x4010471	            0x75d3	                           jne 0x4010446	      6682	elf.c	FUNCTION_80	FOR_1
0x4010473	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      6689	elf.c	FUNCTION_80
0x401047d	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x4010487	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x401048e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x4010495	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x4010499	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x40104a0	            0xeb2b	                           jmp 0x40104cd	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x40104a2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x40104a9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x40104ad	          0x4885c0	                           test rax, rax	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x40104b0	            0x740c	                            je 0x40104be	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x40104b2	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x40104bc	            0xeb1d	                           jmp 0x40104db	      6696	elf.c	FUNCTION_80	FOR_2	IF_1
0x40104be	    0x838520ffffff	               add dword [rbp - 0xe0], 1	      6692	elf.c	FUNCTION_80	FOR_2
0x40104c5	    0x48838560ffff	           add qword [rbp - 0xa0], 0x40 	      6692	elf.c	FUNCTION_80	FOR_2
0x40104cd	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x40104d3	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x40104d9	            0x72c7	                            jb 0x40104a2	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x40104db	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x40104e5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x40104ec	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x40104f3	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x40104f7	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x40104fe	      0xe98a040000	                           jmp 0x401098d	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x4010503	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x401050a	          0x488b00	                    mov rax, qword [rax]	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x401050d	        0x4883f803	                              cmp rax, 3	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x4010511	     0xf8528010000	                           jne 0x401063f	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x4010517	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x401051e	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x4010525	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x401052c	      0xe900010000	                           jmp 0x4010631	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x4010531	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010538	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401053c	          0x4885c0	                           test rax, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401053f	     0xf85da000000	                           jne 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010545	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401054c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010550	          0x4885c0	                           test rax, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010553	     0xf85c6000000	                           jne 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010559	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010560	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010564	          0x4885c0	                           test rax, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010567	     0xf85b2000000	                           jne 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401056d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010574	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010578	          0x4885c0	                           test rax, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401057b	     0xf849e000000	                            je 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010581	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010588	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401058b	      0x2500010000	                          and eax, 0x100	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010590	            0x85c0	                           test eax, eax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010592	     0xf8487000000	                            je 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010598	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401059f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105a3	          0x4885c0	                           test rax, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105a6	            0x7477	                            je 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105a8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105af	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105b6	          0x4889c2	                            mov rdx, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105b9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105c4	          0x4839c2	                            cmp rdx, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105c7	            0x7256	                            jb 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105c9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105d0	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105d7	          0x4889c2	                            mov rdx, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105e1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105e5	        0x488d0c02	                    lea rcx, [rdx + rax]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105e9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105f0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105f4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105fb	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x40105ff	          0x4801d0	                            add rax, rdx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010602	          0x4839c1	                            cmp rcx, rax	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010605	            0x7718	                            ja 0x401061f	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010607	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401060e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010612	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x4010619	        0x48895018	             mov qword [rax + 0x18], rdx	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401061d	            0xeb20	                           jmp 0x401063f	      6717	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x401061f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x4010626	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x401062a	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x4010631	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x4010639	     0xf85f2feffff	                           jne 0x4010531	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x401063f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x4010646	          0x488b00	                    mov rax, qword [rax]	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x4010649	        0x4883f801	                              cmp rax, 1	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x401064d	            0x7429	                            je 0x4010678	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x401064f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x4010656	          0x488b00	                    mov rax, qword [rax]	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x4010659	    0x483d52e57464	                     cmp rax, 0x6474e552	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x401065f	     0xf8518030000	                           jne 0x401097d	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x4010665	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6724	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x401066c	    0x48c700000000	                      mov qword [rax], 0	      6724	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x4010673	      0xe905030000	                           jmp 0x401097d	      6725	elf.c	FUNCTION_80	FOR_3	IF_4
0x4010678	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x4010682	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x4010689	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x4010690	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x4010694	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x401069b	      0xe9c9020000	                           jmp 0x4010969	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x40106a0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106a7	          0x488b00	                    mov rax, qword [rax]	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106aa	        0x4883f801	                              cmp rax, 1	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106ae	     0xf85a5020000	                           jne 0x4010959	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106b4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106bb	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106bf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106c6	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106ca	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106d1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106d5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106dc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106e0	          0x4839c2	                            cmp rdx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106e3	        0x480f43c2	                         cmovae rax, rdx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106e7	          0x4801f0	                            add rax, rsi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106ea	          0x4839c1	                            cmp rcx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106ed	     0xf8366020000	                           jae 0x4010959	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106f3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106fa	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40106fe	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010705	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010709	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010710	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010714	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401071b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401071f	          0x4839c2	                            cmp rdx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010722	        0x480f43c2	                         cmovae rax, rdx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010726	          0x4801f0	                            add rax, rsi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010729	          0x4839c1	                            cmp rcx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401072c	     0xf8327020000	                           jae 0x4010959	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010732	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010739	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401073d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010744	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010748	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401074f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010753	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401075a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401075e	          0x4839c2	                            cmp rdx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010761	        0x480f43c2	                         cmovae rax, rdx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010765	          0x4801f0	                            add rax, rsi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010768	          0x4839c1	                            cmp rcx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401076b	     0xf83e8010000	                           jae 0x4010959	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010771	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010778	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401077c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010783	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010787	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401078e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010792	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x4010799	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401079d	          0x4839c2	                            cmp rdx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40107a0	        0x480f43c2	                         cmovae rax, rdx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40107a4	          0x4801f0	                            add rax, rsi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40107a7	          0x4839c1	                            cmp rcx, rax	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40107aa	     0xf83a9010000	                           jae 0x4010959	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x40107b0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107b7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107bb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107c2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107c6	          0x4839c2	                            cmp rdx, rax	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107c9	     0xf83d8000000	                           jae 0x40108a7	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107cf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107d6	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107da	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107e1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107e5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107ec	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107f0	          0x4839c2	                            cmp rdx, rax	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107f3	        0x480f43c2	                         cmovae rax, rdx	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107f7	        0x488d3401	                    lea rsi, [rcx + rax]	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40107fb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010802	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010806	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x401080d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010811	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010818	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x401081c	          0x4839c2	                            cmp rdx, rax	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x401081f	        0x480f43c2	                         cmovae rax, rdx	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010823	          0x4801c8	                            add rax, rcx	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010826	          0x4829c6	                            sub rsi, rax	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010829	          0x4889f0	                            mov rax, rsi	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x401082c	        0x488945b8	             mov qword [rbp - 0x48], rax	      6742	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010830	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010835	            0x7e3a	                           jle 0x4010871	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010837	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x401083e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010842	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010846	          0x4801c2	                            add rdx, rax	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010849	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010850	        0x48895030	             mov qword [rax + 0x30], rdx	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010854	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x401085b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x401085f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010863	          0x4801c2	                            add rdx, rax	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010866	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x401086d	        0x48895028	             mov qword [rax + 0x28], rdx	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x4010871	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010878	    0x48c700000000	                      mov qword [rax], 0	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x401087f	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      6754	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x4010889	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6755	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	CALL_8
0x4010890	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6755	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	CALL_8
0x4010897	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6755	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	CALL_8
0x401089b	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      6755	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	CALL_8
0x40108a2	      0xe9d7000000	                           jmp 0x401097e	      6756	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x40108a7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108ae	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108b2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108b9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108bd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108c4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108c8	          0x4839c2	                            cmp rdx, rax	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108cb	        0x480f43c2	                         cmovae rax, rdx	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108cf	        0x488d3401	                    lea rsi, [rcx + rax]	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108d3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108da	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108de	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108e5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108e9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108f0	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108f4	          0x4839c2	                            cmp rdx, rax	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108f7	        0x480f43c2	                         cmovae rax, rdx	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108fb	          0x4801c8	                            add rax, rcx	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x40108fe	          0x4829c6	                            sub rsi, rax	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x4010901	          0x4889f0	                            mov rax, rsi	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x4010904	        0x488945b8	             mov qword [rbp - 0x48], rax	      6762	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x4010908	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x401090d	            0x7e3a	                           jle 0x4010949	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x401090f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x4010916	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x401091a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x401091e	          0x4801c2	                            add rdx, rax	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x4010921	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x4010928	        0x48895030	             mov qword [rax + 0x30], rdx	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x401092c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x4010933	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x4010937	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x401093b	          0x4801c2	                            add rdx, rax	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x401093e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x4010945	        0x48895028	             mov qword [rax + 0x28], rdx	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x4010949	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x4010950	    0x48c700000000	                      mov qword [rax], 0	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x4010957	            0xeb01	                           jmp 0x401095a	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x4010959	              0x90	                                     nop	      6735	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x401095a	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x4010961	    0x48838578ffff	           add qword [rbp - 0x88], 0x40 	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x4010969	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x401096f	    0x3b8520ffffff	             cmp eax, dword [rbp - 0xe0]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x4010975	     0xf8225fdffff	                            jb 0x40106a0	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x401097b	            0xeb01	                           jmp 0x401097e	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x401097d	              0x90	                                     nop	      6725	elf.c	FUNCTION_80	FOR_3	IF_4
0x401097e	    0x838520ffffff	               add dword [rbp - 0xe0], 1	      6705	elf.c	FUNCTION_80	FOR_3
0x4010985	    0x48838560ffff	           add qword [rbp - 0xa0], 0x40 	      6705	elf.c	FUNCTION_80	FOR_3
0x401098d	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x4010993	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x4010999	     0xf8264fbffff	                            jb 0x4010503	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x401099f	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x40109a9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x40109b0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x40109b7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x40109bb	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x40109c2	      0xe909160000	                           jmp 0x4011fd0	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x40109c7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x40109ce	          0x488b00	                    mov rax, qword [rax]	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x40109d1	          0x4885c0	                           test rax, rax	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x40109d4	     0xf84e6150000	                            je 0x4011fc0	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x40109da	    0x48c745900000	               mov qword [rbp - 0x70], 0	      6794	elf.c	FUNCTION_80	FOR_6
0x40109e2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x40109e9	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x40109f0	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x40109f7	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x4010a01	      0xe98f030000	                           jmp 0x4010d95	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x4010a06	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a0d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a11	          0x4885c0	                           test rax, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a14	     0xf84ae000000	                            je 0x4010ac8	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a1a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a21	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a25	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a2c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a30	          0x4839c2	                            cmp rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a33	            0x727e	                            jb 0x4010ab3	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a35	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a3c	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a40	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a47	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a4a	      0x2500050000	                          and eax, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a4f	      0x3d00040000	                          cmp eax, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a54	            0x7510	                           jne 0x4010a66	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a56	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a5d	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a60	        0x4883f807	                              cmp rax, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a64	            0x750d	                           jne 0x4010a73	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a66	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a6d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a71	            0xeb05	                           jmp 0x4010a78	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a73	      0xb800000000	                              mov eax, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a78	        0x488d3402	                    lea rsi, [rdx + rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a7c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a83	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a87	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a8e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a92	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a99	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010a9d	          0x4839c2	                            cmp rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010aa0	        0x480f43c2	                         cmovae rax, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010aa4	          0x4801c8	                            add rax, rcx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010aa7	          0x4839c6	                            cmp rsi, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010aaa	            0x7707	                            ja 0x4010ab3	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010aac	      0xb801000000	                              mov eax, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ab1	            0xeb05	                           jmp 0x4010ab8	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ab3	      0xb800000000	                              mov eax, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ab8	          0x83e001	                              and eax, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010abb	            0x84c0	                             test al, al	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010abd	     0xf85aa000000	                           jne 0x4010b6d	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ac3	      0xe9ba000000	                           jmp 0x4010b82	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ac8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010acf	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ad3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ada	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ade	          0x4839c2	                            cmp rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ae1	            0x727e	                            jb 0x4010b61	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ae3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010aea	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010aee	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010af5	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010af8	      0x2500050000	                          and eax, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010afd	      0x3d00040000	                          cmp eax, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b02	            0x7510	                           jne 0x4010b14	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b04	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b0b	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b0e	        0x4883f807	                              cmp rax, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b12	            0x750d	                           jne 0x4010b21	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b14	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b1b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b1f	            0xeb05	                           jmp 0x4010b26	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b21	      0xb800000000	                              mov eax, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b26	        0x488d3402	                    lea rsi, [rdx + rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b2a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b31	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b35	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b3c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b40	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b47	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b4b	          0x4839c2	                            cmp rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b4e	        0x480f43c2	                         cmovae rax, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b52	          0x4801c8	                            add rax, rcx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b55	          0x4839c6	                            cmp rsi, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b58	            0x7707	                            ja 0x4010b61	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b5a	      0xb801000000	                              mov eax, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b5f	            0xeb05	                           jmp 0x4010b66	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b61	      0xb800000000	                              mov eax, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b66	          0x83e001	                              and eax, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b69	            0x84c0	                             test al, al	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b6b	            0x7415	                            je 0x4010b82	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b6d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b74	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b77	          0x83e001	                              and eax, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b7a	            0x85c0	                           test eax, eax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b7c	     0xf8595000000	                           jne 0x4010c17	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b82	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b89	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b8c	        0x4883f804	                              cmp rax, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b90	     0xf85ed010000	                           jne 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b96	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010b9d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ba4	          0x8b4004	                mov eax, dword [rax + 4]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ba7	          0x83f807	                              cmp eax, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010baa	     0xf85d3010000	                           jne 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bb0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bb7	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bbe	          0x4889c2	                            mov rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bc1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bc8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bcc	          0x4839c2	                            cmp rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bcf	     0xf82ae010000	                            jb 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bd5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bdc	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010be3	          0x4889c2	                            mov rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010be6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bed	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bf1	        0x488d0c02	                    lea rcx, [rdx + rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bf5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010bfc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c00	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c07	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c0b	          0x4801d0	                            add rax, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c0e	          0x4839c1	                            cmp rcx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c11	     0xf876c010000	                            ja 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c17	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c1e	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c21	    0x483d51e57464	                     cmp rax, 0x6474e551	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c27	     0xf8456010000	                            je 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c2d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c34	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c37	        0x4883f807	                              cmp rax, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c3b	            0x7517	                           jne 0x4010c54	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c3d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c44	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c47	      0x2500040000	                          and eax, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c4c	            0x85c0	                           test eax, eax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c4e	     0xf842f010000	                            je 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c54	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c5b	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c5e	        0x4883f801	                              cmp rax, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c62	            0x7427	                            je 0x4010c8b	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c64	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c6b	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c6e	        0x4883f807	                              cmp rax, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c72	            0x7417	                            je 0x4010c8b	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c74	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c7b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c7e	      0x2500040000	                          and eax, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c83	            0x85c0	                           test eax, eax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c85	     0xf85f8000000	                           jne 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c8b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c92	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c95	        0x4883f802	                              cmp rax, 2	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c99	     0xf8599000000	                           jne 0x4010d38	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010c9f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ca6	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ca9	      0x2500050000	                          and eax, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cae	      0x3d00040000	                          cmp eax, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cb3	            0x7510	                           jne 0x4010cc5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cb5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cbc	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cbf	        0x4883f807	                              cmp rax, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cc3	            0x7510	                           jne 0x4010cd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cc5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ccc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cd0	          0x4885c0	                           test rax, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cd3	            0x7563	                           jne 0x4010d38	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cd5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cdc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ce0	          0x4885c0	                           test rax, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ce3	            0x741d	                            je 0x4010d02	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010ce5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cec	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cf0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cf7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cfb	          0x4839c2	                            cmp rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010cfe	            0x7538	                           jne 0x4010d38	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d00	            0xeb1b	                           jmp 0x4010d1d	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d02	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d09	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d0d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d14	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d18	          0x4839c2	                            cmp rdx, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d1b	            0x751b	                           jne 0x4010d38	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d1d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d24	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d27	      0xbe00000000	                              mov esi, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d2c	          0x4889c7	                            mov rdi, rax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d2f	      0xe800000000	                          call 0x4010d34	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d34	            0x85c0	                           test eax, eax	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d36	            0x754b	                           jne 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d38	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d3f	          0x488b00	                    mov rax, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d42	        0x4883f801	                              cmp rax, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d46	            0x7512	                           jne 0x4010d5a	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d48	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d4f	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d53	          0x83e040	                           and eax, 0x40	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d56	            0x84c0	                             test al, al	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d58	            0x7529	                           jne 0x4010d83	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x4010d5a	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x4010d5f	            0x750b	                           jne 0x4010d6c	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x4010d61	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6805	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x4010d68	        0x48894590	             mov qword [rbp - 0x70], rax	      6805	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x4010d6c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6806	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x4010d73	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6806	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x4010d77	          0x4885c0	                           test rax, rax	      6806	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x4010d7a	            0x7407	                            je 0x4010d83	      6806	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x4010d7c	    0x838534ffffff	               add dword [rbp - 0xcc], 1	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x4010d83	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6798	elf.c	FUNCTION_80	FOR_6	FOR_7
0x4010d8a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6798	elf.c	FUNCTION_80	FOR_6	FOR_7
0x4010d8e	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6798	elf.c	FUNCTION_80	FOR_6	FOR_7
0x4010d95	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x4010d9d	     0xf8563fcffff	                           jne 0x4010a06	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x4010da3	    0x48c745c05000	           mov qword [rbp - 0x40], 0x50 	      6813	elf.c	FUNCTION_80	FOR_6
0x4010dab	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      6814	elf.c	FUNCTION_80	FOR_6
0x4010db1	    0x488d14c50000	                        lea rdx, [rax*8]	      6814	elf.c	FUNCTION_80	FOR_6
0x4010db9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6814	elf.c	FUNCTION_80	FOR_6
0x4010dbd	          0x4801d0	                            add rax, rdx	      6814	elf.c	FUNCTION_80	FOR_6
0x4010dc0	        0x4883e808	                              sub rax, 8	      6814	elf.c	FUNCTION_80	FOR_6
0x4010dc4	        0x488945c0	             mov qword [rbp - 0x40], rax	      6814	elf.c	FUNCTION_80	FOR_6
0x4010dc8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x4010dcc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x4010dd3	          0x4889d6	                            mov rsi, rdx	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x4010dd6	          0x4889c7	                            mov rdi, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x4010dd9	      0xe800000000	                          call 0x4010dde	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x4010dde	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x4010de5	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x4010ded	            0x750a	                           jne 0x4010df9	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x4010def	      0xb800000000	                              mov eax, 0	      6817	elf.c	FUNCTION_80	FOR_6	IF_14
0x4010df4	      0xe919130000	                           jmp 0x4012112	      6817	elf.c	FUNCTION_80	FOR_6	IF_14
0x4010df9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6821	elf.c	FUNCTION_80	FOR_6
0x4010e00	    0x48c700000000	                      mov qword [rax], 0	      6821	elf.c	FUNCTION_80	FOR_6
0x4010e07	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6822	elf.c	FUNCTION_80	FOR_6
0x4010e0e	          0x488b10	                    mov rdx, qword [rax]	      6822	elf.c	FUNCTION_80	FOR_6
0x4010e11	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6822	elf.c	FUNCTION_80	FOR_6
0x4010e18	        0x48895008	                mov qword [rax + 8], rdx	      6822	elf.c	FUNCTION_80	FOR_6
0x4010e1c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6823	elf.c	FUNCTION_80	FOR_6
0x4010e23	        0x488b5008	                mov rdx, qword [rax + 8]	      6823	elf.c	FUNCTION_80	FOR_6
0x4010e27	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6823	elf.c	FUNCTION_80	FOR_6
0x4010e2e	        0x48895010	             mov qword [rax + 0x10], rdx	      6823	elf.c	FUNCTION_80	FOR_6
0x4010e32	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6824	elf.c	FUNCTION_80	FOR_6
0x4010e39	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      6824	elf.c	FUNCTION_80	FOR_6
0x4010e3d	          0x83ca01	                               or edx, 1	      6824	elf.c	FUNCTION_80	FOR_6
0x4010e40	          0x885040	               mov byte [rax + 0x40], dl	      6824	elf.c	FUNCTION_80	FOR_6
0x4010e43	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e48	            0x740d	                            je 0x4010e57	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e4a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e4e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e52	          0x4885c0	                           test rax, rax	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e55	            0x743a	                            je 0x4010e91	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e57	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e5e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e62	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e69	        0x48895018	             mov qword [rax + 0x18], rdx	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e6d	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e73	          0x83e001	                              and eax, 1	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e76	            0x89c2	                            mov edx, eax	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e78	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e7f	          0x83e201	                              and edx, 1	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e82	          0x8d0c12	                    lea ecx, [rdx + rdx]	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e85	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e89	          0x83e2fd	                     and edx, 0xfffffffd	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e8c	             0x9ca	                             or edx, ecx	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e8e	          0x885040	               mov byte [rax + 0x40], dl	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x4010e91	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6837	elf.c	FUNCTION_80	FOR_6
0x4010e98	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6837	elf.c	FUNCTION_80	FOR_6
0x4010e9c	          0x4885c0	                           test rax, rax	      6838	elf.c	FUNCTION_80	FOR_6
0x4010e9f	            0x7520	                           jne 0x4010ec1	      6838	elf.c	FUNCTION_80	FOR_6
0x4010ea1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6838	elf.c	FUNCTION_80	FOR_6
0x4010ea8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6838	elf.c	FUNCTION_80	FOR_6
0x4010eac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6838	elf.c	FUNCTION_80	FOR_6
0x4010eb0	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      6838	elf.c	FUNCTION_80	FOR_6
0x4010eb3	            0x89c0	                            mov eax, eax	      6838	elf.c	FUNCTION_80	FOR_6
0x4010eb5	          0x4839c2	                            cmp rdx, rax	      6838	elf.c	FUNCTION_80	FOR_6
0x4010eb8	            0x7207	                            jb 0x4010ec1	      6838	elf.c	FUNCTION_80	FOR_6
0x4010eba	      0xb801000000	                              mov eax, 1	      6838	elf.c	FUNCTION_80	FOR_6
0x4010ebf	            0xeb05	                           jmp 0x4010ec6	      6838	elf.c	FUNCTION_80	FOR_6
0x4010ec1	      0xb800000000	                              mov eax, 0	      6838	elf.c	FUNCTION_80	FOR_6
0x4010ec6	          0x83e001	                              and eax, 1	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ec9	            0x89c2	                            mov edx, eax	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ecb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ed2	          0x83e201	                              and edx, 1	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ed5	            0x89d1	                            mov ecx, edx	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ed7	          0xc1e104	                              shl ecx, 4	      6837	elf.c	FUNCTION_80	FOR_6
0x4010eda	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ede	          0x83e2ef	                     and edx, 0xffffffef	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ee1	             0x9ca	                             or edx, ecx	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ee3	          0x885040	               mov byte [rax + 0x40], dl	      6837	elf.c	FUNCTION_80	FOR_6
0x4010ee6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6839	elf.c	FUNCTION_80	FOR_6
0x4010eed	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      6839	elf.c	FUNCTION_80	FOR_6
0x4010ef1	          0x83e2df	                     and edx, 0xffffffdf	      6839	elf.c	FUNCTION_80	FOR_6
0x4010ef4	          0x885040	               mov byte [rax + 0x40], dl	      6839	elf.c	FUNCTION_80	FOR_6
0x4010ef7	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010efe	            0x7414	                            je 0x4010f14	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f00	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f07	          0x488b00	                    mov rax, qword [rax]	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f0a	        0x4883f801	                              cmp rax, 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f0e	     0xf84ad000000	                            je 0x4010fc1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f14	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f1b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f1f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f23	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f27	          0x4839c2	                            cmp rdx, rax	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f2a	            0x7744	                            ja 0x4010f70	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f2c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f33	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f37	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f3e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f42	        0x488d3402	                    lea rsi, [rdx + rax]	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f46	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6846	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f4a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6846	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f4e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6847	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f52	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      6847	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f55	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6847	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f59	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6847	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f5c	           0xfafc1	                           imul eax, ecx	      6847	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f5f	            0x89c0	                            mov eax, eax	      6847	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f61	          0x4801d0	                            add rax, rdx	      6847	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f64	          0x4839c6	                            cmp rsi, rax	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f67	            0x7207	                            jb 0x4010f70	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f69	      0xb801000000	                              mov eax, 1	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f6e	            0xeb05	                           jmp 0x4010f75	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f70	      0xb800000000	                              mov eax, 0	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f75	          0x83e001	                              and eax, 1	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f78	            0x89c2	                            mov edx, eax	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f7a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f81	          0x83e201	                              and edx, 1	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f84	            0x89d1	                            mov ecx, edx	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f86	          0xc1e105	                              shl ecx, 5	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f89	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f8d	          0x83e2df	                     and edx, 0xffffffdf	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f90	             0x9ca	                             or edx, ecx	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f92	          0x885040	               mov byte [rax + 0x40], dl	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x4010f95	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010f9c	          0x488b00	                    mov rax, qword [rax]	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010f9f	        0x4883f801	                              cmp rax, 1	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fa3	            0x751c	                           jne 0x4010fc1	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fa5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fac	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fb0	          0x83e020	                           and eax, 0x20	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fb3	            0x84c0	                             test al, al	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fb5	            0x740a	                            je 0x4010fc1	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fb7	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x4010fc1	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x4010fc8	     0xf8599000000	                           jne 0x4011067	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x4010fce	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fd5	          0x488b00	                    mov rax, qword [rax]	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fd8	        0x4883f801	                              cmp rax, 1	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fdc	            0x7557	                           jne 0x4011035	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fde	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fe5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fe9	          0x4885c0	                           test rax, rax	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fec	            0x7510	                           jne 0x4010ffe	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010fee	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010ff5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010ff9	          0x4885c0	                           test rax, rax	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010ffc	            0x7537	                           jne 0x4011035	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4010ffe	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6868	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4011005	        0x488b5818	            mov rbx, qword [rax + 0x18] 	      6868	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x4011009	      0xbe00000000	                              mov esi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x401100e	      0xbf00000000	                              mov edi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x4011013	      0xe800000000	                          call 0x4011018	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x4011018	          0x4889c1	                            mov rcx, rax	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x401101b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x4011022	          0x4889da	                            mov rdx, rbx	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x4011025	          0x4889c6	                            mov rsi, rax	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x4011028	          0x4889cf	                            mov rdi, rcx	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x401102b	      0xb800000000	                              mov eax, 0	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x4011030	      0xe800000000	                          call 0x4011035	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x4011035	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6870	elf.c	FUNCTION_80	FOR_6	IF_18
0x401103c	    0xc74044000000	               mov dword [rax + 0x44], 0	      6870	elf.c	FUNCTION_80	FOR_6	IF_18
0x4011043	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x401104a	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x4011051	          0x488910	                    mov qword [rax], rdx	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x4011054	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6872	elf.c	FUNCTION_80	FOR_6	IF_18
0x401105b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      6872	elf.c	FUNCTION_80	FOR_6	IF_18
0x4011062	      0xe95a0f0000	                           jmp 0x4011fc1	      6874	elf.c	FUNCTION_80	FOR_6	IF_18
0x4011067	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x401106d	      0xbe08000000	                              mov esi, 8	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x4011072	          0x4889c7	                            mov rdi, rax	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x4011075	      0xe800000000	                          call 0x401107a	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x401107a	        0x488945c8	             mov qword [rbp - 0x38], rax	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x401107e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x4011083	            0x750a	                           jne 0x401108f	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x4011085	      0xb800000000	                              mov eax, 0	      6907	elf.c	FUNCTION_80	FOR_6	IF_20
0x401108a	      0xe983100000	                           jmp 0x4012112	      6907	elf.c	FUNCTION_80	FOR_6	IF_20
0x401108f	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      6915	elf.c	FUNCTION_80	FOR_6
0x4011099	    0x48c745800000	               mov qword [rbp - 0x80], 0	      6916	elf.c	FUNCTION_80	FOR_6
0x40110a1	    0x48c745880000	               mov qword [rbp - 0x78], 0	      6917	elf.c	FUNCTION_80	FOR_6
0x40110a9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40110ad	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40110b4	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40110be	      0xe91e070000	                           jmp 0x40117e1	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40110c3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110ca	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110ce	          0x4885c0	                           test rax, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110d1	     0xf84ae000000	                            je 0x4011185	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110d7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110de	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110e2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110e9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110ed	          0x4839c2	                            cmp rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110f0	            0x727e	                            jb 0x4011170	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110f2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110f9	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40110fd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011104	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011107	      0x2500050000	                          and eax, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401110c	      0x3d00040000	                          cmp eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011111	            0x7510	                           jne 0x4011123	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011113	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401111a	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401111d	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011121	            0x750d	                           jne 0x4011130	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011123	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401112a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401112e	            0xeb05	                           jmp 0x4011135	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011130	      0xb800000000	                              mov eax, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011135	        0x488d3402	                    lea rsi, [rdx + rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011139	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011140	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011144	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401114b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401114f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011156	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401115a	          0x4839c2	                            cmp rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401115d	        0x480f43c2	                         cmovae rax, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011161	          0x4801c8	                            add rax, rcx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011164	          0x4839c6	                            cmp rsi, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011167	            0x7707	                            ja 0x4011170	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011169	      0xb801000000	                              mov eax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401116e	            0xeb05	                           jmp 0x4011175	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011170	      0xb800000000	                              mov eax, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011175	          0x83e001	                              and eax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011178	            0x84c0	                             test al, al	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401117a	     0xf85aa000000	                           jne 0x401122a	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011180	      0xe9ba000000	                           jmp 0x401123f	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011185	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401118c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011190	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011197	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401119b	          0x4839c2	                            cmp rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401119e	            0x727e	                            jb 0x401121e	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111a0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111a7	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111ab	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111b2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111b5	      0x2500050000	                          and eax, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111ba	      0x3d00040000	                          cmp eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111bf	            0x7510	                           jne 0x40111d1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111c1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111c8	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111cb	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111cf	            0x750d	                           jne 0x40111de	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111d1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111d8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111dc	            0xeb05	                           jmp 0x40111e3	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111de	      0xb800000000	                              mov eax, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111e3	        0x488d3402	                    lea rsi, [rdx + rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111e7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111ee	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111f2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111f9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40111fd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011204	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011208	          0x4839c2	                            cmp rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401120b	        0x480f43c2	                         cmovae rax, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401120f	          0x4801c8	                            add rax, rcx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011212	          0x4839c6	                            cmp rsi, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011215	            0x7707	                            ja 0x401121e	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011217	      0xb801000000	                              mov eax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401121c	            0xeb05	                           jmp 0x4011223	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401121e	      0xb800000000	                              mov eax, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011223	          0x83e001	                              and eax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011226	            0x84c0	                             test al, al	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011228	            0x7415	                            je 0x401123f	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401122a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011231	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011234	          0x83e001	                              and eax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011237	            0x85c0	                           test eax, eax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011239	     0xf8595000000	                           jne 0x40112d4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401123f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011246	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011249	        0x4883f804	                              cmp rax, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401124d	     0xf857c050000	                           jne 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011253	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401125a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011261	          0x8b4004	                mov eax, dword [rax + 4]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011264	          0x83f807	                              cmp eax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011267	     0xf8562050000	                           jne 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401126d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011274	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401127b	          0x4889c2	                            mov rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401127e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011285	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011289	          0x4839c2	                            cmp rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401128c	     0xf823d050000	                            jb 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011292	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011299	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112a0	          0x4889c2	                            mov rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112a3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112aa	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112ae	        0x488d0c02	                    lea rcx, [rdx + rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112b2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112b9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112bd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112c4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112c8	          0x4801d0	                            add rax, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112cb	          0x4839c1	                            cmp rcx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112ce	     0xf87fb040000	                            ja 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112d4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112db	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112de	    0x483d51e57464	                     cmp rax, 0x6474e551	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112e4	     0xf84e5040000	                            je 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112ea	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112f1	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112f4	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112f8	            0x7517	                           jne 0x4011311	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40112fa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011301	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011304	      0x2500040000	                          and eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011309	            0x85c0	                           test eax, eax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401130b	     0xf84be040000	                            je 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011311	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011318	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401131b	        0x4883f801	                              cmp rax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401131f	            0x7427	                            je 0x4011348	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011321	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011328	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401132b	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401132f	            0x7417	                            je 0x4011348	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011331	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011338	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401133b	      0x2500040000	                          and eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011340	            0x85c0	                           test eax, eax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011342	     0xf8587040000	                           jne 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011348	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401134f	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011352	        0x4883f802	                              cmp rax, 2	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011356	     0xf859d000000	                           jne 0x40113f9	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401135c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011363	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011366	      0x2500050000	                          and eax, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401136b	      0x3d00040000	                          cmp eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011370	            0x7510	                           jne 0x4011382	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011372	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011379	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401137c	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011380	            0x7510	                           jne 0x4011392	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011382	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011389	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401138d	          0x4885c0	                           test rax, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011390	            0x7567	                           jne 0x40113f9	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011392	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011399	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401139d	          0x4885c0	                           test rax, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113a0	            0x741d	                            je 0x40113bf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113a2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113a9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113ad	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113b4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113b8	          0x4839c2	                            cmp rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113bb	            0x753c	                           jne 0x40113f9	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113bd	            0xeb1b	                           jmp 0x40113da	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113bf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113c6	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113ca	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113d1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113d5	          0x4839c2	                            cmp rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113d8	            0x751f	                           jne 0x40113f9	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113e1	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113e4	      0xbe00000000	                              mov esi, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113e9	          0x4889c7	                            mov rdi, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113ec	      0xe800000000	                          call 0x40113f1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113f1	            0x85c0	                           test eax, eax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113f3	     0xf85d6030000	                           jne 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x40113f9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011400	          0x488b00	                    mov rax, qword [rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011403	        0x4883f801	                              cmp rax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011407	            0x7516	                           jne 0x401141f	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011409	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011410	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011414	          0x83e040	                           and eax, 0x40	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011417	            0x84c0	                             test al, al	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011419	     0xf85b0030000	                           jne 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401141f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011426	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401142a	          0x4885c0	                           test rax, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401142d	     0xf849c030000	                            je 0x40117cf	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011433	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6925	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401143a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6925	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401143e	        0x488945d0	             mov qword [rbp - 0x30], rax	      6925	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011442	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011448	          0x8d5001	                      lea edx, [rax + 1]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401144b	    0x89953cffffff	             mov dword [rbp - 0xc4], edx	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011451	            0x89c0	                            mov eax, eax	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011453	    0x488d14c50000	                        lea rdx, [rax*8]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401145b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401145f	          0x4801c2	                            add rdx, rax	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011462	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x4011469	          0x488902	                    mov qword [rdx], rax	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x401146c	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011473	     0xf8501010000	                           jne 0x401157a	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011479	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011480	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011484	          0x4885c0	                           test rax, rax	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011487	     0xf84ed000000	                            je 0x401157a	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401148d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6935	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011491	     0xfb6808a0300	          movzx eax, byte [rax + 0x38a] 	      6935	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011498	          0x83e040	                           and eax, 0x40	      6935	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401149b	            0x84c0	                             test al, al	      6935	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401149d	     0xf85d7000000	                           jne 0x401157a	      6935	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114a3	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114aa	     0xf85ca000000	                           jne 0x401157a	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114b4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114b8	          0x4885c0	                           test rax, rax	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114bb	     0xf84b9000000	                            je 0x401157a	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114c1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114c8	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114cc	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114d3	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114d7	          0x83e010	                           and eax, 0x10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114da	            0x84c0	                             test al, al	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114dc	            0x740b	                            je 0x40114e9	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114e2	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114e5	            0x89c0	                            mov eax, eax	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114e7	            0xeb05	                           jmp 0x40114ee	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114e9	      0xb800000000	                              mov eax, 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114ee	        0x488d0c02	                    lea rcx, [rdx + rax]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114f2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114f9	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x40114fd	          0x83e020	                           and eax, 0x20	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011500	            0x84c0	                             test al, al	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011502	            0x7415	                            je 0x4011519	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011504	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011508	          0x8b5044	            mov edx, dword [rax + 0x44] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401150b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401150f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011512	           0xfafc2	                           imul eax, edx	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011515	            0x89c0	                            mov eax, eax	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011517	            0xeb05	                           jmp 0x401151e	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011519	      0xb800000000	                              mov eax, 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401151e	        0x488d1401	                    lea rdx, [rcx + rax]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011522	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011526	          0x8b4070	            mov eax, dword [rax + 0x70] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011529	      0xbe01000000	                              mov esi, 1	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401152e	            0x89c1	                            mov ecx, eax	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011530	          0x48d3e6	                             shl rsi, cl	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011533	          0x4889f0	                            mov rax, rsi	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011536	          0x4801d0	                            add rax, rdx	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011539	        0x488d50ff	                      lea rdx, [rax - 1]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401153d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011541	          0x8b4070	            mov eax, dword [rax + 0x70] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011544	      0xbe01000000	                              mov esi, 1	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011549	            0x89c1	                            mov ecx, eax	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401154b	          0x48d3e6	                             shl rsi, cl	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401154e	          0x4889f0	                            mov rax, rsi	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011551	          0x48f7d8	                                 neg rax	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011554	          0x4821c2	                            and rdx, rax	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011557	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6945	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401155b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6945	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401155f	          0x4839c2	                            cmp rdx, rax	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011562	            0x7516	                           jne 0x401157a	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011564	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401156b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401156f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x4011576	        0x48895018	             mov qword [rax + 0x18], rdx	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x401157a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401157e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011582	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011589	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401158d	          0x4839c2	                            cmp rdx, rax	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011590	            0x7272	                            jb 0x4011604	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011592	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011596	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401159a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401159e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115a1	      0x2500050000	                          and eax, 0x500	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115a6	      0x3d00040000	                          cmp eax, 0x400	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115ab	            0x7510	                           jne 0x40115bd	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115ad	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115b4	          0x488b00	                    mov rax, qword [rax]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115b7	        0x4883f807	                              cmp rax, 7	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115bb	            0x750a	                           jne 0x40115c7	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115c1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115c5	            0xeb05	                           jmp 0x40115cc	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115c7	      0xb800000000	                              mov eax, 0	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115cc	        0x488d3402	                    lea rsi, [rdx + rax]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115d0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115d7	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115db	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115e2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115e6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115ed	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115f1	          0x4839c2	                            cmp rdx, rax	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115f4	        0x480f43c2	                         cmovae rax, rdx	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115f8	          0x4801c8	                            add rax, rcx	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115fb	          0x4839c6	                            cmp rsi, rax	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40115fe	     0xf8663010000	                           jbe 0x4011767	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011604	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401160b	          0x488b00	                    mov rax, qword [rax]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401160e	        0x4883f804	                              cmp rax, 4	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011612	     0xf85af000000	                           jne 0x40116c7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011618	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401161f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011626	          0x8b4004	                mov eax, dword [rax + 4]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011629	          0x83f807	                              cmp eax, 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401162c	     0xf8595000000	                           jne 0x40116c7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011632	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011639	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011640	          0x4889c2	                            mov rdx, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011643	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401164a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401164e	          0x4839c2	                            cmp rdx, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011651	            0x7274	                            jb 0x40116c7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011653	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401165a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011661	          0x4889c2	                            mov rdx, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011664	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401166b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401166f	        0x488d0c02	                    lea rcx, [rdx + rax]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011673	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401167a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401167e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011685	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011689	          0x4801d0	                            add rax, rdx	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401168c	          0x4839c1	                            cmp rcx, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401168f	            0x7736	                            ja 0x40116c7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011691	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011698	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401169c	          0x83e007	                              and eax, 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401169f	            0x3c03	                               cmp al, 3	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116a1	            0x7524	                           jne 0x40116c7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116a3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116aa	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116ae	          0x4885c0	                           test rax, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116b1	            0x7514	                           jne 0x40116c7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116b3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116ba	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116be	          0x4885c0	                           test rax, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116c1	     0xf84a0000000	                            je 0x4011767	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116c7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116cb	     0xfb6808a0300	          movzx eax, byte [rax + 0x38a] 	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116d2	          0x83e040	                           and eax, 0x40	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116d5	            0x84c0	                             test al, al	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116d7	     0xf84d5000000	                            je 0x40117b2	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116e1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116e5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116ec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116f0	          0x4839c2	                            cmp rdx, rax	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116f3	     0xf82b9000000	                            jb 0x40117b2	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40116fd	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011701	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011705	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011708	      0x2500050000	                          and eax, 0x500	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401170d	      0x3d00040000	                          cmp eax, 0x400	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011712	            0x7510	                           jne 0x4011724	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011714	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401171b	          0x488b00	                    mov rax, qword [rax]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401171e	        0x4883f807	                              cmp rax, 7	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011722	            0x750a	                           jne 0x401172e	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011724	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011728	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401172c	            0xeb05	                           jmp 0x4011733	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401172e	      0xb800000000	                              mov eax, 0	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011733	        0x488d3402	                    lea rsi, [rdx + rax]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011737	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401173e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011742	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011749	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401174d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011754	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011758	          0x4839c2	                            cmp rdx, rax	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401175b	        0x480f43c2	                         cmovae rax, rdx	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401175f	          0x4801c8	                            add rax, rcx	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011762	          0x4839c6	                            cmp rsi, rax	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011765	            0x774b	                            ja 0x40117b2	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011767	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x401176c	            0x7415	                            je 0x4011783	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x401176e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x4011772	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x4011776	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x401177a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x401177e	          0x4839c2	                            cmp rdx, rax	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x4011781	            0x7308	                           jae 0x401178b	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x4011783	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6957	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x4011787	        0x48894580	             mov qword [rbp - 0x80], rax	      6957	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x401178b	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011791	          0x8d5001	                      lea edx, [rax + 1]	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x4011794	    0x899538ffffff	             mov dword [rbp - 0xc8], edx	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x401179a	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40117a1	            0x89c0	                            mov eax, eax	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40117a3	        0x488d4808	                      lea rcx, [rax + 8]	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40117a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40117ab	      0x488944ca08	        mov qword [rdx + rcx*8 + 8], rax	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40117b0	            0xeb0f	                           jmp 0x40117c1	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x40117b2	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x40117b7	            0x7508	                           jne 0x40117c1	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x40117b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6965	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x40117bd	        0x48894588	             mov qword [rbp - 0x78], rax	      6965	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x40117c1	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x40117c7	    0x3b8534ffffff	             cmp eax, dword [rbp - 0xcc]	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x40117cd	            0x7422	                            je 0x40117f1	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x40117cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6921	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40117d6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6921	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40117da	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6921	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40117e1	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40117e9	     0xf85d4f8ffff	                           jne 0x40110c3	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40117ef	            0xeb01	                           jmp 0x40117f2	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x40117f1	              0x90	                                     nop	      6968	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x40117f2	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x40117f8	    0x3b8534ffffff	             cmp eax, dword [rbp - 0xcc]	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x40117fe	            0x740f	                            je 0x401180f	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x4011800	      0xbe3c1b0000	                         mov esi, 0x1b3c	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x4011805	      0xbf00000000	                              mov edi, 0	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x401180a	      0xe800000000	                          call 0x401180f	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x401180f	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011815	    0x3b8534ffffff	             cmp eax, dword [rbp - 0xcc]	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x401181b	     0xf85b8000000	                           jne 0x40118d9	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011821	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011828	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x401182e	          0x895044	             mov dword [rax + 0x44], edx	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011831	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011838	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x401183f	          0x488910	                    mov qword [rax], rdx	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011842	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6984	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011849	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      6984	elf.c	FUNCTION_80	FOR_6	IF_27
0x4011850	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011857	            0x746f	                            je 0x40118c8	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011859	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401185d	     0xfb6808a0300	          movzx eax, byte [rax + 0x38a] 	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011864	          0x83e040	                           and eax, 0x40	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011867	            0x84c0	                             test al, al	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011869	            0x755d	                           jne 0x40118c8	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401186b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401186f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011873	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401187a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401187e	          0x4839c2	                            cmp rdx, rax	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011881	            0x7445	                            je 0x40118c8	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011883	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6989	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401188a	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6989	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401188e	          0x83e010	                           and eax, 0x10	      6989	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011891	            0x84c0	                             test al, al	      6989	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011893	            0x7533	                           jne 0x40118c8	      6989	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x4011895	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x401189c	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118a0	          0x83e020	                           and eax, 0x20	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118a3	            0x84c0	                             test al, al	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118a5	            0x7521	                           jne 0x40118c8	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118a7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118ab	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118af	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118b6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118ba	          0x4829c2	                            sub rdx, rax	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118bd	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118c4	        0x48895020	             mov qword [rax + 0x20], rdx	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x40118c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6996	elf.c	FUNCTION_80	FOR_6	IF_27	CALL_15
0x40118cc	          0x4889c7	                            mov rdi, rax	      6996	elf.c	FUNCTION_80	FOR_6	IF_27	CALL_15
0x40118cf	      0xe800000000	                          call 0x40118d4	      6996	elf.c	FUNCTION_80	FOR_6	IF_27	CALL_15
0x40118d4	      0xe9e8060000	                           jmp 0x4011fc1	      6997	elf.c	FUNCTION_80	FOR_6	IF_27
0x40118d9	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x40118de	            0x7508	                           jne 0x40118e8	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x40118e0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7005	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x40118e4	        0x48894580	             mov qword [rbp - 0x80], rax	      7005	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x40118e8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x40118ec	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x40118f0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x40118f7	        0x48895018	             mov qword [rax + 0x18], rdx	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x40118fb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011902	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011906	          0x83e020	                           and eax, 0x20	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011909	            0x84c0	                             test al, al	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401190b	            0x7447	                            je 0x4011954	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401190d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011914	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011918	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401191c	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401191f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011923	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011926	           0xfafc1	                           imul eax, ecx	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011929	            0x89c0	                            mov eax, eax	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401192b	          0x4829c2	                            sub rdx, rax	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401192e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011935	        0x48895018	             mov qword [rax + 0x18], rdx	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011939	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7020	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401193d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7020	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011940	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      7020	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011946	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7021	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x401194d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      7021	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x4011954	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x401195b	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x401195f	          0x83e010	                           and eax, 0x10	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011962	            0x84c0	                             test al, al	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011964	     0xf848a000000	                            je 0x40119f4	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x401196a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x401196e	          0x8b4070	            mov eax, dword [rax + 0x70] 	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011971	      0xba01000000	                              mov edx, 1	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011976	            0x89c1	                            mov ecx, eax	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011978	          0x48d3e2	                             shl rdx, cl	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x401197b	          0x4889d0	                            mov rax, rdx	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x401197e	        0x48894598	             mov qword [rbp - 0x68], rax	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011982	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011989	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x401198d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011991	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011994	            0x89c0	                            mov eax, eax	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011996	          0x4829c2	                            sub rdx, rax	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x4011999	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119a0	        0x48895018	             mov qword [rax + 0x18], rdx	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119a4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119ab	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119af	          0x4885c0	                           test rax, rax	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119b2	            0x7420	                            je 0x40119d4	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119b4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119bb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119bf	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119c3	            0x730f	                           jae 0x40119d4	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119c5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7034	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119cc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7034	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119d0	        0x48894598	             mov qword [rbp - 0x68], rax	      7034	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x40119d4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119db	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119df	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119e3	          0x48f7da	                                 neg rdx	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119e6	          0x4821c2	                            and rdx, rax	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119e9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119f0	        0x48895018	             mov qword [rax + 0x18], rdx	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x40119f4	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      7046	elf.c	FUNCTION_80	FOR_6
0x40119fe	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011a05	    0xc74044000000	               mov dword [rax + 0x44], 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011a0c	    0x48c745880000	               mov qword [rbp - 0x78], 0	      7050	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011a14	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a1e	      0xe918040000	                           jmp 0x4011e3b	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a23	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a29	    0x488d14c50000	                        lea rdx, [rax*8]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a31	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a35	          0x4801d0	                            add rax, rdx	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a38	          0x488b00	                    mov rax, qword [rax]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a3b	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a42	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x4011a4a	     0xf84e0030000	                            je 0x4011e30	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x4011a50	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7060	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a57	        0x488b4068	            mov rax, qword [rax + 0x68] 	      7060	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a5b	        0x488945d0	             mov qword [rbp - 0x30], rax	      7060	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011a5f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x4011a64	            0x750f	                           jne 0x4011a75	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x4011a66	      0xbe961b0000	                         mov esi, 0x1b96	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x4011a6b	      0xbf00000000	                              mov edi, 0	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x4011a70	      0xe800000000	                          call 0x4011a75	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x4011a75	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a79	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a7d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a84	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a88	          0x4839c2	                            cmp rdx, rax	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a8b	            0x7272	                            jb 0x4011aff	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a91	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a95	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a99	          0x8b4020	            mov eax, dword [rax + 0x20] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011a9c	      0x2500050000	                          and eax, 0x500	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011aa1	      0x3d00040000	                          cmp eax, 0x400	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011aa6	            0x7510	                           jne 0x4011ab8	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011aa8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011aaf	          0x488b00	                    mov rax, qword [rax]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ab2	        0x4883f807	                              cmp rax, 7	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ab6	            0x750a	                           jne 0x4011ac2	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ab8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011abc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ac0	            0xeb05	                           jmp 0x4011ac7	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ac2	      0xb800000000	                              mov eax, 0	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ac7	        0x488d3402	                    lea rsi, [rdx + rax]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011acb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ad2	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ad6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011add	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ae1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ae8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011aec	          0x4839c2	                            cmp rdx, rax	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011aef	        0x480f43c2	                         cmovae rax, rdx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011af3	          0x4801c8	                            add rax, rcx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011af6	          0x4839c6	                            cmp rsi, rax	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011af9	     0xf86d3000000	                           jbe 0x4011bd2	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011aff	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b06	          0x488b00	                    mov rax, qword [rax]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b09	        0x4883f804	                              cmp rax, 4	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b0d	     0xf850c030000	                           jne 0x4011e1f	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b13	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b1a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b21	          0x8b4004	                mov eax, dword [rax + 4]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b24	          0x83f807	                              cmp eax, 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b27	     0xf85f2020000	                           jne 0x4011e1f	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b2d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b34	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b3b	          0x4889c2	                            mov rdx, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b3e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b45	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b49	          0x4839c2	                            cmp rdx, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b4c	     0xf82cd020000	                            jb 0x4011e1f	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b52	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b59	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b60	          0x4889c2	                            mov rdx, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b63	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b6a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b6e	        0x488d0c02	                    lea rcx, [rdx + rax]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b72	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b79	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b7d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b84	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b88	          0x4801d0	                            add rax, rdx	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b8b	          0x4839c1	                            cmp rcx, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b8e	     0xf878b020000	                            ja 0x4011e1f	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b94	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b9b	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011b9f	          0x83e007	                              and eax, 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ba2	            0x3c03	                               cmp al, 3	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011ba4	     0xf8575020000	                           jne 0x4011e1f	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011baa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bb1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bb5	          0x4885c0	                           test rax, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bb8	     0xf8561020000	                           jne 0x4011e1f	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bbe	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bc5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bc9	          0x4885c0	                           test rax, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bcc	     0xf854d020000	                           jne 0x4011e1f	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011bd2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x4011bd9	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x4011bdc	            0x85c0	                           test eax, eax	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x4011bde	     0xf85bb000000	                           jne 0x4011c9f	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x4011be4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011beb	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011bef	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011bf6	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011bfa	          0x83e010	                           and eax, 0x10	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011bfd	            0x84c0	                             test al, al	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011bff	            0x740b	                            je 0x4011c0c	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c01	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c05	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c08	            0x89c0	                            mov eax, eax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c0a	            0xeb05	                           jmp 0x4011c11	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c0c	      0xb800000000	                              mov eax, 0	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c11	        0x488d0c02	                    lea rcx, [rdx + rax]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c15	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c1c	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c20	          0x83e020	                           and eax, 0x20	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c23	            0x84c0	                             test al, al	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c25	            0x7415	                            je 0x4011c3c	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c27	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c2b	          0x8b5044	            mov edx, dword [rax + 0x44] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c2e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c32	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c35	           0xfafc2	                           imul eax, edx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c38	            0x89c0	                            mov eax, eax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c3a	            0xeb05	                           jmp 0x4011c41	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c3c	      0xb800000000	                              mov eax, 0	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c41	        0x488d1401	                    lea rdx, [rcx + rax]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c45	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c49	          0x8b4070	            mov eax, dword [rax + 0x70] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c4c	      0xbe01000000	                              mov esi, 1	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c51	            0x89c1	                            mov ecx, eax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c53	          0x48d3e6	                             shl rsi, cl	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c56	          0x4889f0	                            mov rax, rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c59	          0x4801d0	                            add rax, rdx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c5c	        0x488d50ff	                      lea rdx, [rax - 1]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c60	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c64	          0x8b4070	            mov eax, dword [rax + 0x70] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c67	      0xbe01000000	                              mov esi, 1	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c6c	            0x89c1	                            mov ecx, eax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c6e	          0x48d3e6	                             shl rsi, cl	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c71	          0x4889f0	                            mov rax, rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c74	          0x48f7d8	                                 neg rax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c77	          0x4821c2	                            and rdx, rax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c7a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7079	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c7e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7079	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c82	          0x4839c2	                            cmp rdx, rax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c85	     0xf8421010000	                            je 0x4011dac	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x4011c8b	      0xba00000000	                              mov edx, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x4011c90	      0xbea81b0000	                         mov esi, 0x1ba8	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x4011c95	      0xbf00000000	                              mov edi, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x4011c9a	      0xe800000000	                          call 0x4011c9f	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x4011c9f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011ca6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011ca9	          0x8d50ff	                      lea edx, [rax - 1]	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011cac	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011cb3	            0x89d2	                            mov edx, edx	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011cb5	        0x4883c208	                              add rdx, 8	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011cb9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011cbe	        0x488945d8	             mov qword [rbp - 0x28], rax	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x4011cc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cc6	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cce	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cd2	          0x4801c2	                            add rdx, rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cd5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cd9	          0x4801d0	                            add rax, rdx	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cdc	        0x488d48ff	                      lea rcx, [rax - 1]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011ce0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011ce4	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011ce8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cec	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cf0	          0x4801d0	                            add rax, rdx	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cf3	          0x4839c1	                            cmp rcx, rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cf6	            0x722a	                            jb 0x4011d22	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cf8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011cfc	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d00	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d04	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d08	          0x4801c2	                            add rdx, rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d0b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d0f	          0x4801d0	                            add rax, rdx	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d12	        0x488d50ff	                      lea rdx, [rax - 1]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d16	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d1a	          0x48f7d8	                                 neg rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d1d	          0x4821c2	                            and rdx, rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d20	            0xeb07	                           jmp 0x4011d29	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d22	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d2d	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d31	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d35	          0x4801c8	                            add rax, rcx	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d38	        0x488d48ff	                      lea rcx, [rax - 1]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d3c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d40	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d44	          0x4839c1	                            cmp rcx, rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d47	            0x721f	                            jb 0x4011d68	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d49	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d4d	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d51	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d55	          0x4801c8	                            add rax, rcx	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d58	        0x488d48ff	                      lea rcx, [rax - 1]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d5c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d60	          0x48f7d8	                                 neg rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d63	          0x4821c8	                            and rax, rcx	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d66	            0xeb07	                           jmp 0x4011d6f	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d68	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d6f	          0x4839c2	                            cmp rdx, rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d72	            0x7220	                            jb 0x4011d94	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d78	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d80	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d84	          0x4801c2	                            add rdx, rax	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7095	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d8b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7095	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d8f	          0x4839c2	                            cmp rdx, rax	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d92	            0x7618	                           jbe 0x4011dac	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011d94	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      7097	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	IF_38
0x4011d99	     0xf8594000000	                           jne 0x4011e33	      7097	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	IF_38
0x4011d9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7098	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	IF_38
0x4011da3	        0x48894588	             mov qword [rbp - 0x78], rax	      7098	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	IF_38
0x4011da7	      0xe987000000	                           jmp 0x4011e33	      7100	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011dac	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011db3	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011db6	          0x8d4801	                      lea ecx, [rax + 1]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011db9	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dc0	          0x894a44	             mov dword [rdx + 0x44], ecx	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dc3	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dca	            0x89c0	                            mov eax, eax	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dcc	        0x488d4808	                      lea rcx, [rax + 8]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dd0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dd4	      0x488944ca08	        mov qword [rdx + rcx*8 + 8], rax	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dd9	    0x838538ffffff	               add dword [rbp - 0xc8], 1	      7105	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011de0	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011de6	    0x488d14c50000	                        lea rdx, [rax*8]	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011df2	          0x4801d0	                            add rax, rdx	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011df5	    0x48c700000000	                      mov qword [rax], 0	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x4011dfc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e03	          0x488b00	                    mov rax, qword [rax]	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e06	        0x4883f801	                              cmp rax, 1	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e0a	            0x7528	                           jne 0x4011e34	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e0c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e13	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e17	          0x83ca40	                            or edx, 0x40	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e1a	          0x885024	               mov byte [rax + 0x24], dl	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e1d	            0xeb15	                           jmp 0x4011e34	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x4011e1f	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x4011e24	            0x750e	                           jne 0x4011e34	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x4011e26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7111	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x4011e2a	        0x48894588	             mov qword [rbp - 0x78], rax	      7111	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x4011e2e	            0xeb04	                           jmp 0x4011e34	      7111	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x4011e30	              0x90	                                     nop	      7058	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x4011e31	            0xeb01	                           jmp 0x4011e34	      7058	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x4011e33	              0x90	                                     nop	      7100	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x4011e34	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011e3b	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011e41	    0x3b8534ffffff	             cmp eax, dword [rbp - 0xcc]	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011e47	     0xf82d6fbffff	                            jb 0x4011a23	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x4011e4d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x4011e54	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x4011e57	            0x85c0	                           test eax, eax	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x4011e59	            0x750f	                           jne 0x4011e6a	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x4011e5b	      0xbeca1b0000	                         mov esi, 0x1bca	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x4011e60	      0xbf00000000	                              mov edi, 0	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x4011e65	      0xe800000000	                          call 0x4011e6a	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x4011e6a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011e71	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011e78	          0x488910	                    mov qword [rax], rdx	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011e7b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7118	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011e82	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      7118	elf.c	FUNCTION_80	FOR_6	DO_1
0x4011e89	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011e8f	    0x3b8534ffffff	             cmp eax, dword [rbp - 0xcc]	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011e95	     0xf8305010000	                           jae 0x4011fa0	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011e9b	    0x48c745c05000	           mov qword [rbp - 0x40], 0x50 	      7125	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011ea3	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      7126	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011ea9	    0x488d14c50000	                        lea rdx, [rax*8]	      7126	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011eb1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7126	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011eb5	          0x4801d0	                            add rax, rdx	      7126	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011eb8	        0x4883e808	                              sub rax, 8	      7126	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011ebc	        0x488945c0	             mov qword [rbp - 0x40], rax	      7126	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011ec0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x4011ec4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x4011ecb	          0x4889d6	                            mov rsi, rdx	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x4011ece	          0x4889c7	                            mov rdi, rax	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x4011ed1	      0xe800000000	                          call 0x4011ed6	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x4011ed6	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x4011edd	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x4011ee5	            0x7516	                           jne 0x4011efd	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x4011ee7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_20
0x4011eeb	          0x4889c7	                            mov rdi, rax	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_20
0x4011eee	      0xe800000000	                          call 0x4011ef3	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_20
0x4011ef3	      0xb800000000	                              mov eax, 0	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x4011ef8	      0xe915020000	                           jmp 0x4012112	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x4011efd	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7137	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f04	    0x48c700000000	                      mov qword [rax], 0	      7137	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f0b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f12	          0x488b10	                    mov rdx, qword [rax]	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f15	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f1c	        0x48895008	                mov qword [rax + 8], rdx	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f20	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f27	        0x488b5008	                mov rdx, qword [rax + 8]	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f2b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f32	        0x48895010	             mov qword [rax + 0x10], rdx	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f36	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f3d	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f41	          0x83ca01	                               or edx, 1	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f44	          0x885040	               mov byte [rax + 0x40], dl	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f47	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f4b	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f4f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f56	        0x48895018	             mov qword [rax + 0x18], rdx	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f5a	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f60	          0x83e001	                              and eax, 1	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f63	            0x89c2	                            mov edx, eax	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f65	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f6c	          0x83e201	                              and edx, 1	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f6f	          0x8d0c12	                    lea ecx, [rdx + rdx]	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f72	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f76	          0x83e2fd	                     and edx, 0xfffffffd	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f79	             0x9ca	                             or edx, ecx	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f7b	          0x885040	               mov byte [rax + 0x40], dl	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f7e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7143	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f85	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7143	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f89	          0x83e2ef	                     and edx, 0xffffffef	      7143	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f8c	          0x885040	               mov byte [rax + 0x40], dl	      7143	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f8f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f96	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f9a	          0x83e2df	                     and edx, 0xffffffdf	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011f9d	          0x885040	               mov byte [rax + 0x40], dl	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x4011fa0	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      7147	elf.c	FUNCTION_80	FOR_6
0x4011fa6	    0x3b8534ffffff	             cmp eax, dword [rbp - 0xcc]	      7147	elf.c	FUNCTION_80	FOR_6
0x4011fac	     0xf824cfaffff	                            jb 0x40119fe	      7147	elf.c	FUNCTION_80	FOR_6
0x4011fb2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7149	elf.c	FUNCTION_80	FOR_6	CALL_21
0x4011fb6	          0x4889c7	                            mov rdi, rax	      7149	elf.c	FUNCTION_80	FOR_6	CALL_21
0x4011fb9	      0xe800000000	                          call 0x4011fbe	      7149	elf.c	FUNCTION_80	FOR_6	CALL_21
0x4011fbe	            0xeb01	                           jmp 0x4011fc1	      7149	elf.c	FUNCTION_80	FOR_6	CALL_21
0x4011fc0	              0x90	                                     nop	      6792	elf.c	FUNCTION_80	FOR_6	IF_10
0x4011fc1	    0x838520ffffff	               add dword [rbp - 0xe0], 1	      6779	elf.c	FUNCTION_80	FOR_6
0x4011fc8	    0x48838560ffff	           add qword [rbp - 0xa0], 0x40 	      6779	elf.c	FUNCTION_80	FOR_6
0x4011fd0	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x4011fd6	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x4011fdc	     0xf82e5e9ffff	                            jb 0x40109c7	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x4011fe2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7152	elf.c	FUNCTION_80	CALL_22
0x4011fe9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7152	elf.c	FUNCTION_80	CALL_22
0x4011ff0	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7152	elf.c	FUNCTION_80	CALL_22
0x4011ff7	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      7152	elf.c	FUNCTION_80	CALL_22
0x4011ffe	          0x488910	                    mov qword [rax], rdx	      7152	elf.c	FUNCTION_80	CALL_22
0x4012001	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      7157	elf.c	FUNCTION_80	IF_43
0x4012009	     0xf84fe000000	                            je 0x401210d	      7157	elf.c	FUNCTION_80	IF_43
0x401200f	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012019	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012020	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012027	            0xeb18	                           jmp 0x4012041	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012029	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      7162	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012030	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012037	          0x488b00	                    mov rax, qword [rax]	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x401203a	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012041	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x4012049	            0x75de	                           jne 0x4012029	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x401204b	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x4012051	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x4012057	            0x7633	                           jbe 0x401208c	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x4012059	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012060	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012064	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x401206a	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012070	            0x89c1	                            mov ecx, eax	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012072	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012076	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012079	           0xfafc1	                           imul eax, ecx	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x401207c	            0x89c0	                            mov eax, eax	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x401207e	          0x4829c2	                            sub rdx, rax	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012081	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x4012088	        0x48895018	             mov qword [rax + 0x18], rdx	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x401208c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x4012093	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x401209a	            0xeb67	                           jmp 0x4012103	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x401209c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120a3	        0x488b4008	                mov rax, qword [rax + 8]	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120a7	        0x4883f806	                              cmp rax, 6	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120ab	            0x7545	                           jne 0x40120f2	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120ad	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7172	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120b4	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      7172	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120b8	          0x83e010	                           and eax, 0x10	      7172	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120bb	            0x84c0	                             test al, al	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120bd	            0x740b	                            je 0x40120ca	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7172	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120c3	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      7172	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120c6	            0x89c0	                            mov eax, eax	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120c8	            0xeb05	                           jmp 0x40120cf	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120ca	      0xb800000000	                              mov eax, 0	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120cf	        0x488945e0	             mov qword [rbp - 0x20], rax	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120d3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120da	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120e2	          0x4801c2	                            add rdx, rax	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120e5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120ec	        0x48895018	             mov qword [rax + 0x18], rdx	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120f0	            0xeb1b	                           jmp 0x401210d	      7174	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x40120f2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x40120f9	          0x488b00	                    mov rax, qword [rax]	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x40120fc	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x4012103	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x401210b	            0x758f	                           jne 0x401209c	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x401210d	      0xb801000000	                              mov eax, 1	      7189	elf.c	FUNCTION_80
0x4012112	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      7190	elf.c	FUNCTION_80
0x4012116	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7190	elf.c	FUNCTION_80
0x401211f	            0x7405	                            je 0x4012126	      7190	elf.c	FUNCTION_80
0x4012121	      0xe800000000	                          call 0x4012126	      7190	elf.c	FUNCTION_80
0x4012126	    0x4881c4e80000	                           add rsp, 0xe8	      7190	elf.c	FUNCTION_80
0x401212d	              0x5b	                                 pop rbx	      7190	elf.c	FUNCTION_80
0x401212e	              0x5d	                                 pop rbp	      7190	elf.c	FUNCTION_80
0x401212f	              0xc3	                                     ret	      7190	elf.c	FUNCTION_80
_bfd_elf_swap_versym_in	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	18
0x4000d8b	              0x55	                                push rbp	       180	elf.c	FUNCTION_9
0x4000d8c	          0x4889e5	                            mov rbp, rsp	       180	elf.c	FUNCTION_9
0x4000d8f	        0x4883ec20	                           sub rsp, 0x20	       180	elf.c	FUNCTION_9
0x4000d93	        0x48897df8	                mov qword [rbp - 8], rdi	       180	elf.c	FUNCTION_9
0x4000d97	        0x488975f0	             mov qword [rbp - 0x10], rsi	       180	elf.c	FUNCTION_9
0x4000d9b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       180	elf.c	FUNCTION_9
0x4000d9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	elf.c	FUNCTION_9
0x4000da3	        0x488b4008	                mov rax, qword [rax + 8]	       181	elf.c	FUNCTION_9
0x4000da7	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       181	elf.c	FUNCTION_9
0x4000dae	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       181	elf.c	FUNCTION_9
0x4000db2	          0x4889d7	                            mov rdi, rdx	       181	elf.c	FUNCTION_9
0x4000db5	            0xffd0	                                call rax	       181	elf.c	FUNCTION_9
0x4000db7	            0x89c2	                            mov edx, eax	       181	elf.c	FUNCTION_9
0x4000db9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       181	elf.c	FUNCTION_9
0x4000dbd	          0x668910	                      mov word [rax], dx	       181	elf.c	FUNCTION_9
0x4000dc0	              0x90	                                     nop	       182	elf.c	FUNCTION_9
0x4000dc1	              0xc9	                                   leave	       182	elf.c	FUNCTION_9
0x4000dc2	              0xc3	                                     ret	       182	elf.c	FUNCTION_9
elfcore_grok_freebsd_note	ELSE,2:DO,0:CALL,13:WHILE,0:FOR,0:IF,5:SWITCH,1:functions,0	167
0x40184e3	              0x55	                                push rbp	     10069	elf.c	FUNCTION_151
0x40184e4	          0x4889e5	                            mov rbp, rsp	     10069	elf.c	FUNCTION_151
0x40184e7	        0x4883ec20	                           sub rsp, 0x20	     10069	elf.c	FUNCTION_151
0x40184eb	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10069	elf.c	FUNCTION_151
0x40184ef	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10069	elf.c	FUNCTION_151
0x40184f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10070	elf.c	FUNCTION_151	CALL_1
0x40184f7	        0x488b4008	                mov rax, qword [rax + 8]	     10070	elf.c	FUNCTION_151	CALL_1
0x40184fb	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10070	elf.c	FUNCTION_151	CALL_1
0x4018502	        0x488945f0	             mov qword [rbp - 0x10], rax	     10070	elf.c	FUNCTION_151	CALL_1
0x4018506	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401850a	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401850e	        0x4883f809	                              cmp rax, 9	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018512	     0xf8456010000	                            je 0x401866e	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018518	        0x4883f809	                              cmp rax, 9	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401851c	            0x773e	                            ja 0x401855c	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401851e	        0x4883f803	                              cmp rax, 3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018522	     0xf84e3000000	                            je 0x401860b	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018528	        0x4883f803	                              cmp rax, 3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401852c	            0x7715	                            ja 0x4018543	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401852e	        0x4883f801	                              cmp rax, 1	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018532	            0x746e	                            je 0x40185a2	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018534	        0x4883f802	                              cmp rax, 2	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018538	     0xf84b5000000	                            je 0x40185f3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401853e	      0xe937020000	                           jmp 0x401877a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018543	        0x4883f807	                              cmp rax, 7	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018547	     0xf84d6000000	                            je 0x4018623	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401854d	        0x4883f808	                              cmp rax, 8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018551	     0xf84fd000000	                            je 0x4018654	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018557	      0xe91e020000	                           jmp 0x401877a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401855c	        0x4883f811	                           cmp rax, 0x11	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018560	     0xf84e8010000	                            je 0x401874e	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018566	        0x4883f811	                           cmp rax, 0x11	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401856a	            0x7719	                            ja 0x4018585	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401856c	        0x4883f80a	                            cmp rax, 0xa	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018570	     0xf8412010000	                            je 0x4018688	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018576	        0x4883f810	                           cmp rax, 0x10	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401857a	     0xf8422010000	                            je 0x40186a2	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018580	      0xe9f5010000	                           jmp 0x401877a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018585	    0x483d02020000	                          cmp rax, 0x202	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401858b	     0xf8494010000	                            je 0x4018725	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018591	    0x483d00040000	                          cmp rax, 0x400	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4018597	     0xf84c8010000	                            je 0x4018765	     10072	elf.c	FUNCTION_151	SWITCH_1
0x401859d	      0xe9d8010000	                           jmp 0x401877a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x40185a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x40185a6	    0x488b80180200	           mov rax, qword [rax + 0x218] 	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x40185ad	          0x4885c0	                           test rax, rax	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x40185b0	            0x7429	                            je 0x40185db	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x40185b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185b6	    0x488b80180200	           mov rax, qword [rax + 0x218] 	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185bd	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185c1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185c5	          0x4889ce	                            mov rsi, rcx	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185c8	          0x4889d7	                            mov rdi, rdx	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185cb	            0xffd0	                                call rax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185cd	            0x85c0	                           test eax, eax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185cf	            0x740a	                            je 0x40185db	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185d1	      0xb801000000	                              mov eax, 1	     10077	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185d6	      0xe9a4010000	                           jmp 0x401877f	     10077	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x40185db	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10078	elf.c	FUNCTION_151	SWITCH_1	CALL_2
0x40185df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10078	elf.c	FUNCTION_151	SWITCH_1	CALL_2
0x40185e3	          0x4889d6	                            mov rsi, rdx	     10078	elf.c	FUNCTION_151	SWITCH_1	CALL_2
0x40185e6	          0x4889c7	                            mov rdi, rax	     10078	elf.c	FUNCTION_151	SWITCH_1	CALL_2
0x40185e9	      0xe8effcffff	  call sym.elfcore_grok_freebsd_prstatus	     10078	elf.c	FUNCTION_151	SWITCH_1	CALL_2
0x40185ee	      0xe98c010000	                           jmp 0x401877f	     10078	elf.c	FUNCTION_151	SWITCH_1	CALL_2
0x40185f3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10081	elf.c	FUNCTION_151	SWITCH_1	CALL_3
0x40185f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10081	elf.c	FUNCTION_151	SWITCH_1	CALL_3
0x40185fb	          0x4889d6	                            mov rsi, rdx	     10081	elf.c	FUNCTION_151	SWITCH_1	CALL_3
0x40185fe	          0x4889c7	                            mov rdi, rax	     10081	elf.c	FUNCTION_151	SWITCH_1	CALL_3
0x4018601	      0xe829e6ffff	           call sym.elfcore_grok_prfpreg	     10081	elf.c	FUNCTION_151	SWITCH_1	CALL_3
0x4018606	      0xe974010000	                           jmp 0x401877f	     10081	elf.c	FUNCTION_151	SWITCH_1	CALL_3
0x401860b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10084	elf.c	FUNCTION_151	SWITCH_1	CALL_4
0x401860f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10084	elf.c	FUNCTION_151	SWITCH_1	CALL_4
0x4018613	          0x4889d6	                            mov rsi, rdx	     10084	elf.c	FUNCTION_151	SWITCH_1	CALL_4
0x4018616	          0x4889c7	                            mov rdi, rax	     10084	elf.c	FUNCTION_151	SWITCH_1	CALL_4
0x4018619	      0xe817fbffff	    call sym.elfcore_grok_freebsd_psinfo	     10084	elf.c	FUNCTION_151	SWITCH_1	CALL_4
0x401861e	      0xe95c010000	                           jmp 0x401877f	     10084	elf.c	FUNCTION_151	SWITCH_1	CALL_4
0x4018623	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x4018627	          0x488b00	                    mov rax, qword [rax]	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x401862a	        0x4883f808	                              cmp rax, 8	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x401862e	            0x751a	                           jne 0x401864a	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x4018630	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x4018634	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x4018638	      0xbe00000000	                              mov esi, 0	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x401863d	          0x4889c7	                            mov rdi, rax	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x4018640	      0xe8b4e5ffff	call sym.elfcore_make_note_pseudosection	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x4018645	      0xe935010000	                           jmp 0x401877f	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x401864a	      0xb801000000	                              mov eax, 1	     10090	elf.c	FUNCTION_151	SWITCH_1	ELSE_1
0x401864f	      0xe92b010000	                           jmp 0x401877f	     10090	elf.c	FUNCTION_151	SWITCH_1	ELSE_1
0x4018654	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x4018658	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x401865c	      0xbe00000000	                              mov esi, 0	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x4018661	          0x4889c7	                            mov rdi, rax	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x4018664	      0xe890e5ffff	call sym.elfcore_make_note_pseudosection	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x4018669	      0xe911010000	                           jmp 0x401877f	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x401866e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x4018672	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x4018676	      0xbe00000000	                              mov esi, 0	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x401867b	          0x4889c7	                            mov rdi, rax	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x401867e	      0xe876e5ffff	call sym.elfcore_make_note_pseudosection	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x4018683	      0xe9f7000000	                           jmp 0x401877f	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x4018688	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x401868c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x4018690	      0xbe00000000	                              mov esi, 0	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x4018695	          0x4889c7	                            mov rdi, rax	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x4018698	      0xe85ce5ffff	call sym.elfcore_make_note_pseudosection	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x401869d	      0xe9dd000000	                           jmp 0x401877f	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x40186a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x40186a6	      0xba00010000	                          mov edx, 0x100	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x40186ab	      0xbe00000000	                              mov esi, 0	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x40186b0	          0x4889c7	                            mov rdi, rax	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x40186b3	      0xe800000000	                          call 0x40186b8	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x40186b8	        0x488945f8	                mov qword [rbp - 8], rax	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x40186bc	      0x48837df800	                  cmp qword [rbp - 8], 0	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x40186c1	            0x750a	                           jne 0x40186cd	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x40186c3	      0xb800000000	                              mov eax, 0	     10110	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x40186c8	      0xe9b2000000	                           jmp 0x401877f	     10110	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x40186cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10111	elf.c	FUNCTION_151	SWITCH_1
0x40186d1	        0x488b4008	                mov rax, qword [rax + 8]	     10111	elf.c	FUNCTION_151	SWITCH_1
0x40186d5	        0x488d50fc	                      lea rdx, [rax - 4]	     10111	elf.c	FUNCTION_151	SWITCH_1
0x40186d9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10111	elf.c	FUNCTION_151	SWITCH_1
0x40186dd	        0x48895038	             mov qword [rax + 0x38], rdx	     10111	elf.c	FUNCTION_151	SWITCH_1
0x40186e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10112	elf.c	FUNCTION_151	SWITCH_1
0x40186e5	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10112	elf.c	FUNCTION_151	SWITCH_1
0x40186e9	        0x4883c004	                              add rax, 4	     10112	elf.c	FUNCTION_151	SWITCH_1
0x40186ed	          0x4889c2	                            mov rdx, rax	     10112	elf.c	FUNCTION_151	SWITCH_1
0x40186f0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10112	elf.c	FUNCTION_151	SWITCH_1
0x40186f4	    0x488990900000	             mov qword [rax + 0x90], rdx	     10112	elf.c	FUNCTION_151	SWITCH_1
0x40186fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x40186ff	          0x4889c7	                            mov rdi, rax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4018702	      0xe800000000	                          call 0x4018707	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4018707	          0x8d501f	                   lea edx, [rax + 0x1f]	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x401870a	            0x85c0	                           test eax, eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x401870c	           0xf48c2	                          cmovs eax, edx	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x401870f	          0xc1f805	                              sar eax, 5	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4018712	          0x83c001	                              add eax, 1	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4018715	            0x89c2	                            mov edx, eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4018717	        0x488b45f8	                mov rax, qword [rbp - 8]	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x401871b	          0x895070	             mov dword [rax + 0x70], edx	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x401871e	      0xb801000000	                              mov eax, 1	     10115	elf.c	FUNCTION_151	SWITCH_1
0x4018723	            0xeb5a	                           jmp 0x401877f	     10115	elf.c	FUNCTION_151	SWITCH_1
0x4018725	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x4018729	          0x488b00	                    mov rax, qword [rax]	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x401872c	        0x4883f808	                              cmp rax, 8	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x4018730	            0x7515	                           jne 0x4018747	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x4018732	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10120	elf.c	FUNCTION_151	SWITCH_1	CALL_11
0x4018736	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10120	elf.c	FUNCTION_151	SWITCH_1	CALL_11
0x401873a	          0x4889d6	                            mov rsi, rdx	     10120	elf.c	FUNCTION_151	SWITCH_1	CALL_11
0x401873d	          0x4889c7	                            mov rdi, rax	     10120	elf.c	FUNCTION_151	SWITCH_1	CALL_11
0x4018740	      0xe838e5ffff	         call sym.elfcore_grok_xstatereg	     10120	elf.c	FUNCTION_151	SWITCH_1	CALL_11
0x4018745	            0xeb38	                           jmp 0x401877f	     10120	elf.c	FUNCTION_151	SWITCH_1	CALL_11
0x4018747	      0xb801000000	                              mov eax, 1	     10122	elf.c	FUNCTION_151	SWITCH_1	ELSE_2
0x401874c	            0xeb31	                           jmp 0x401877f	     10122	elf.c	FUNCTION_151	SWITCH_1	ELSE_2
0x401874e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x4018752	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x4018756	      0xbe00000000	                              mov esi, 0	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x401875b	          0x4889c7	                            mov rdi, rax	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x401875e	      0xe896e4ffff	call sym.elfcore_make_note_pseudosection	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x4018763	            0xeb1a	                           jmp 0x401877f	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x4018765	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10129	elf.c	FUNCTION_151	SWITCH_1	CALL_13
0x4018769	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10129	elf.c	FUNCTION_151	SWITCH_1	CALL_13
0x401876d	          0x4889d6	                            mov rsi, rdx	     10129	elf.c	FUNCTION_151	SWITCH_1	CALL_13
0x4018770	          0x4889c7	                            mov rdi, rax	     10129	elf.c	FUNCTION_151	SWITCH_1	CALL_13
0x4018773	      0xe875e7ffff	           call sym.elfcore_grok_arm_vfp	     10129	elf.c	FUNCTION_151	SWITCH_1	CALL_13
0x4018778	            0xeb05	                           jmp 0x401877f	     10129	elf.c	FUNCTION_151	SWITCH_1	CALL_13
0x401877a	      0xb801000000	                              mov eax, 1	     10132	elf.c	FUNCTION_151	SWITCH_1
0x401877f	              0xc9	                                   leave	     10134	elf.c	FUNCTION_151
0x4018780	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
_bfd_elf_get_synthetic_symtab	ELSE,0:DO,0:CALL,17:WHILE,0:FOR,3:IF,13:SWITCH,0:functions,0	325
0x401b101	              0x55	                                push rbp	     11388	elf.c	FUNCTION_200
0x401b102	          0x4889e5	                            mov rbp, rsp	     11388	elf.c	FUNCTION_200
0x401b105	    0x4881ece00000	                           sub rsp, 0xe0	     11388	elf.c	FUNCTION_200
0x401b10c	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	     11388	elf.c	FUNCTION_200
0x401b113	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	     11388	elf.c	FUNCTION_200
0x401b11a	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	     11388	elf.c	FUNCTION_200
0x401b121	    0x48898d30ffff	             mov qword [rbp - 0xd0], rcx	     11388	elf.c	FUNCTION_200
0x401b128	    0x4c898528ffff	              mov qword [rbp - 0xd8], r8	     11388	elf.c	FUNCTION_200
0x401b12f	    0x4c898d20ffff	              mov qword [rbp - 0xe0], r9	     11388	elf.c	FUNCTION_200
0x401b136	    0x64488b042528	                mov rax, qword fs:[0x28]	     11388	elf.c	FUNCTION_200
0x401b13f	        0x488945f8	                mov qword [rbp - 8], rax	     11388	elf.c	FUNCTION_200
0x401b143	            0x31c0	                            xor eax, eax	     11388	elf.c	FUNCTION_200
0x401b145	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11389	elf.c	FUNCTION_200	CALL_1
0x401b14c	        0x488b4008	                mov rax, qword [rax + 8]	     11389	elf.c	FUNCTION_200	CALL_1
0x401b150	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11389	elf.c	FUNCTION_200	CALL_1
0x401b157	        0x48894590	             mov qword [rbp - 0x70], rax	     11389	elf.c	FUNCTION_200	CALL_1
0x401b15b	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	     11401	elf.c	FUNCTION_200
0x401b162	    0x48c700000000	                      mov qword [rax], 0	     11401	elf.c	FUNCTION_200
0x401b169	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11403	elf.c	FUNCTION_200	IF_1
0x401b170	          0x8b4044	            mov eax, dword [rax + 0x44] 	     11403	elf.c	FUNCTION_200	IF_1
0x401b173	          0xc1e805	                              shr eax, 5	     11403	elf.c	FUNCTION_200	IF_1
0x401b176	      0x25ffff0f00	                        and eax, 0xfffff	     11403	elf.c	FUNCTION_200	IF_1
0x401b17b	          0x83e042	                           and eax, 0x42	     11403	elf.c	FUNCTION_200	IF_1
0x401b17e	            0x85c0	                           test eax, eax	     11403	elf.c	FUNCTION_200	IF_1
0x401b180	            0x750a	                           jne 0x401b18c	     11403	elf.c	FUNCTION_200	IF_1
0x401b182	      0xb800000000	                              mov eax, 0	     11404	elf.c	FUNCTION_200	IF_1
0x401b187	      0xe92f050000	                           jmp 0x401b6bb	     11404	elf.c	FUNCTION_200	IF_1
0x401b18c	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	     11406	elf.c	FUNCTION_200	IF_2
0x401b194	            0x7f0a	                            jg 0x401b1a0	     11406	elf.c	FUNCTION_200	IF_2
0x401b196	      0xb800000000	                              mov eax, 0	     11407	elf.c	FUNCTION_200	IF_2
0x401b19b	      0xe91b050000	                           jmp 0x401b6bb	     11407	elf.c	FUNCTION_200	IF_2
0x401b1a0	        0x488b4590	             mov rax, qword [rbp - 0x70]	     11409	elf.c	FUNCTION_200	IF_3
0x401b1a4	    0x488b80980200	           mov rax, qword [rax + 0x298] 	     11409	elf.c	FUNCTION_200	IF_3
0x401b1ab	          0x4885c0	                           test rax, rax	     11409	elf.c	FUNCTION_200	IF_3
0x401b1ae	            0x750a	                           jne 0x401b1ba	     11409	elf.c	FUNCTION_200	IF_3
0x401b1b0	      0xb800000000	                              mov eax, 0	     11410	elf.c	FUNCTION_200	IF_3
0x401b1b5	      0xe901050000	                           jmp 0x401b6bb	     11410	elf.c	FUNCTION_200	IF_3
0x401b1ba	        0x488b4590	             mov rax, qword [rbp - 0x70]	     11412	elf.c	FUNCTION_200
0x401b1be	    0x488b80f00200	           mov rax, qword [rax + 0x2f0] 	     11412	elf.c	FUNCTION_200
0x401b1c5	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	     11412	elf.c	FUNCTION_200
0x401b1cc	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	     11413	elf.c	FUNCTION_200	IF_4
0x401b1d4	            0x7525	                           jne 0x401b1fb	     11413	elf.c	FUNCTION_200	IF_4
0x401b1d6	        0x488b4590	             mov rax, qword [rbp - 0x70]	     11414	elf.c	FUNCTION_200	IF_4
0x401b1da	     0xfb680880300	          movzx eax, byte [rax + 0x388] 	     11414	elf.c	FUNCTION_200	IF_4
0x401b1e1	          0x83e020	                           and eax, 0x20	     11414	elf.c	FUNCTION_200	IF_4
0x401b1e4	            0x84c0	                             test al, al	     11414	elf.c	FUNCTION_200	IF_4
0x401b1e6	            0x7407	                            je 0x401b1ef	     11414	elf.c	FUNCTION_200	IF_4
0x401b1e8	      0xb800000000	                              mov eax, 0	     11414	elf.c	FUNCTION_200	IF_4
0x401b1ed	            0xeb05	                           jmp 0x401b1f4	     11414	elf.c	FUNCTION_200	IF_4
0x401b1ef	      0xb800000000	                              mov eax, 0	     11414	elf.c	FUNCTION_200	IF_4
0x401b1f4	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	     11414	elf.c	FUNCTION_200	IF_4
0x401b1fb	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	     11415	elf.c	FUNCTION_200	CALL_3
0x401b202	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11415	elf.c	FUNCTION_200	CALL_3
0x401b209	          0x4889d6	                            mov rsi, rdx	     11415	elf.c	FUNCTION_200	CALL_3
0x401b20c	          0x4889c7	                            mov rdi, rax	     11415	elf.c	FUNCTION_200	CALL_3
0x401b20f	      0xe800000000	                          call 0x401b214	     11415	elf.c	FUNCTION_200	CALL_3
0x401b214	        0x48894598	             mov qword [rbp - 0x68], rax	     11415	elf.c	FUNCTION_200	CALL_3
0x401b218	      0x48837d9800	               cmp qword [rbp - 0x68], 0	     11416	elf.c	FUNCTION_200	IF_5
0x401b21d	            0x750a	                           jne 0x401b229	     11416	elf.c	FUNCTION_200	IF_5
0x401b21f	      0xb800000000	                              mov eax, 0	     11417	elf.c	FUNCTION_200	IF_5
0x401b224	      0xe992040000	                           jmp 0x401b6bb	     11417	elf.c	FUNCTION_200	IF_5
0x401b229	        0x488b4598	             mov rax, qword [rbp - 0x68]	     11419	elf.c	FUNCTION_200	CALL_4
0x401b22d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	     11419	elf.c	FUNCTION_200	CALL_4
0x401b234	        0x488945a0	             mov qword [rbp - 0x60], rax	     11419	elf.c	FUNCTION_200	CALL_4
0x401b238	        0x488b45a0	             mov rax, qword [rbp - 0x60]	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401b23c	          0x8b5028	            mov edx, dword [rax + 0x28] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401b23f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401b246	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401b24d	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401b253	            0x39c2	                            cmp edx, eax	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401b255	            0x7518	                           jne 0x401b26f	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401b257	        0x488b45a0	             mov rax, qword [rbp - 0x60]	     11421	elf.c	FUNCTION_200	IF_6
0x401b25b	          0x8b4004	                mov eax, dword [rax + 4]	     11421	elf.c	FUNCTION_200	IF_6
0x401b25e	          0x83f809	                              cmp eax, 9	     11421	elf.c	FUNCTION_200	IF_6
0x401b261	            0x7416	                            je 0x401b279	     11421	elf.c	FUNCTION_200	IF_6
0x401b263	        0x488b45a0	             mov rax, qword [rbp - 0x60]	     11421	elf.c	FUNCTION_200	IF_6
0x401b267	          0x8b4004	                mov eax, dword [rax + 4]	     11421	elf.c	FUNCTION_200	IF_6
0x401b26a	          0x83f804	                              cmp eax, 4	     11421	elf.c	FUNCTION_200	IF_6
0x401b26d	            0x740a	                            je 0x401b279	     11421	elf.c	FUNCTION_200	IF_6
0x401b26f	      0xb800000000	                              mov eax, 0	     11422	elf.c	FUNCTION_200	IF_6
0x401b274	      0xe942040000	                           jmp 0x401b6bb	     11422	elf.c	FUNCTION_200	IF_6
0x401b279	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11424	elf.c	FUNCTION_200	CALL_6
0x401b280	      0xbe00000000	                              mov esi, 0	     11424	elf.c	FUNCTION_200	CALL_6
0x401b285	          0x4889c7	                            mov rdi, rax	     11424	elf.c	FUNCTION_200	CALL_6
0x401b288	      0xe800000000	                          call 0x401b28d	     11424	elf.c	FUNCTION_200	CALL_6
0x401b28d	        0x488945a8	             mov qword [rbp - 0x58], rax	     11424	elf.c	FUNCTION_200	CALL_6
0x401b291	      0x48837da800	               cmp qword [rbp - 0x58], 0	     11425	elf.c	FUNCTION_200	IF_7
0x401b296	            0x750a	                           jne 0x401b2a2	     11425	elf.c	FUNCTION_200	IF_7
0x401b298	      0xb800000000	                              mov eax, 0	     11426	elf.c	FUNCTION_200	IF_7
0x401b29d	      0xe919040000	                           jmp 0x401b6bb	     11426	elf.c	FUNCTION_200	IF_7
0x401b2a2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11428	elf.c	FUNCTION_200	CALL_7
0x401b2a9	        0x488b4008	                mov rax, qword [rax + 8]	     11428	elf.c	FUNCTION_200	CALL_7
0x401b2ad	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11428	elf.c	FUNCTION_200	CALL_7
0x401b2b4	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11428	elf.c	FUNCTION_200	CALL_7
0x401b2bb	        0x488b4040	            mov rax, qword [rax + 0x40] 	     11428	elf.c	FUNCTION_200	CALL_7
0x401b2bf	        0x488945b0	             mov qword [rbp - 0x50], rax	     11428	elf.c	FUNCTION_200	CALL_7
0x401b2c3	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	     11429	elf.c	FUNCTION_200	IF_8
0x401b2ca	        0x488b7598	             mov rsi, qword [rbp - 0x68]	     11429	elf.c	FUNCTION_200	IF_8
0x401b2ce	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	     11429	elf.c	FUNCTION_200	IF_8
0x401b2d5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     11429	elf.c	FUNCTION_200	IF_8
0x401b2d9	      0xb901000000	                              mov ecx, 1	     11429	elf.c	FUNCTION_200	IF_8
0x401b2de	            0xffd0	                                call rax	     11429	elf.c	FUNCTION_200	IF_8
0x401b2e0	            0x85c0	                           test eax, eax	     11429	elf.c	FUNCTION_200	IF_8
0x401b2e2	            0x750c	                           jne 0x401b2f0	     11429	elf.c	FUNCTION_200	IF_8
0x401b2e4	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11430	elf.c	FUNCTION_200	IF_8
0x401b2eb	      0xe9cb030000	                           jmp 0x401b6bb	     11430	elf.c	FUNCTION_200	IF_8
0x401b2f0	        0x488b4598	             mov rax, qword [rbp - 0x68]	     11432	elf.c	FUNCTION_200
0x401b2f4	        0x488b4038	            mov rax, qword [rax + 0x38] 	     11432	elf.c	FUNCTION_200
0x401b2f8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	     11432	elf.c	FUNCTION_200
0x401b2fc	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	     11432	elf.c	FUNCTION_200
0x401b300	      0xba00000000	                              mov edx, 0	     11432	elf.c	FUNCTION_200
0x401b305	          0x48f7f6	                                 div rsi	     11432	elf.c	FUNCTION_200
0x401b308	        0x488945b8	             mov qword [rbp - 0x48], rax	     11432	elf.c	FUNCTION_200
0x401b30c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	     11433	elf.c	FUNCTION_200
0x401b310	          0x4889d0	                            mov rax, rdx	     11433	elf.c	FUNCTION_200
0x401b313	          0x4801c0	                            add rax, rax	     11433	elf.c	FUNCTION_200
0x401b316	          0x4801d0	                            add rax, rdx	     11433	elf.c	FUNCTION_200
0x401b319	        0x48c1e004	                              shl rax, 4	     11433	elf.c	FUNCTION_200
0x401b31d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	     11433	elf.c	FUNCTION_200
0x401b324	        0x488b4598	             mov rax, qword [rbp - 0x68]	     11434	elf.c	FUNCTION_200
0x401b328	        0x488b4078	            mov rax, qword [rax + 0x78] 	     11434	elf.c	FUNCTION_200
0x401b32c	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	     11434	elf.c	FUNCTION_200
0x401b333	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	     11435	elf.c	FUNCTION_200	FOR_1
0x401b33e	      0xe98c000000	                           jmp 0x401b3cf	     11435	elf.c	FUNCTION_200	FOR_1
0x401b343	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b34a	          0x488b00	                    mov rax, qword [rax]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b34d	          0x488b00	                    mov rax, qword [rax]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b350	        0x488b4008	                mov rax, qword [rax + 8]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b354	          0x4889c7	                            mov rdi, rax	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b357	      0xe800000000	                          call 0x401b35c	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b35c	          0x4889c2	                            mov rdx, rax	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b35f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b366	          0x4801d0	                            add rax, rdx	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b369	        0x4883c005	                              add rax, 5	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b36d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401b374	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b37b	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b37f	          0x4885c0	                           test rax, rax	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b382	            0x7426	                            je 0x401b3aa	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b384	        0x488b4590	             mov rax, qword [rbp - 0x70]	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b388	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b38f	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b393	            0x3c02	                               cmp al, 2	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b395	            0x7507	                           jne 0x401b39e	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b397	      0xb813000000	                           mov eax, 0x13	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b39c	            0xeb05	                           jmp 0x401b3a3	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b39e	      0xb80b000000	                            mov eax, 0xb	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b3a3	    0x48018578ffff	            add qword [rbp - 0x88], rax 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401b3aa	    0x48838568ffff	               add qword [rbp - 0x98], 1	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3b2	        0x488b4590	             mov rax, qword [rbp - 0x70]	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3b6	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3bd	         0xfb64009	               movzx eax, byte [rax + 9]	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3c1	           0xfb6c0	                           movzx eax, al	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3c4	        0x48c1e005	                              shl rax, 5	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3c8	    0x48018560ffff	            add qword [rbp - 0xa0], rax 	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3d6	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3da	     0xf8c63ffffff	                            jl 0x401b343	     11435	elf.c	FUNCTION_200	FOR_1
0x401b3e0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11448	elf.c	FUNCTION_200	CALL_9
0x401b3e7	          0x4889c7	                            mov rdi, rax	     11448	elf.c	FUNCTION_200	CALL_9
0x401b3ea	      0xe800000000	                          call 0x401b3ef	     11448	elf.c	FUNCTION_200	CALL_9
0x401b3ef	          0x4889c2	                            mov rdx, rax	     11448	elf.c	FUNCTION_200	CALL_9
0x401b3f2	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	     11448	elf.c	FUNCTION_200	CALL_9
0x401b3f9	          0x488910	                    mov qword [rax], rdx	     11448	elf.c	FUNCTION_200	CALL_9
0x401b3fc	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	     11448	elf.c	FUNCTION_200	CALL_9
0x401b403	          0x488b00	                    mov rax, qword [rax]	     11448	elf.c	FUNCTION_200	CALL_9
0x401b406	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	     11448	elf.c	FUNCTION_200	CALL_9
0x401b40d	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	     11449	elf.c	FUNCTION_200	IF_10
0x401b415	            0x750c	                           jne 0x401b423	     11449	elf.c	FUNCTION_200	IF_10
0x401b417	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11450	elf.c	FUNCTION_200	IF_10
0x401b41e	      0xe998020000	                           jmp 0x401b6bb	     11450	elf.c	FUNCTION_200	IF_10
0x401b423	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	     11452	elf.c	FUNCTION_200
0x401b427	          0x4889d0	                            mov rax, rdx	     11452	elf.c	FUNCTION_200
0x401b42a	          0x4801c0	                            add rax, rax	     11452	elf.c	FUNCTION_200
0x401b42d	          0x4801d0	                            add rax, rdx	     11452	elf.c	FUNCTION_200
0x401b430	        0x48c1e004	                              shl rax, 4	     11452	elf.c	FUNCTION_200
0x401b434	          0x4889c2	                            mov rdx, rax	     11452	elf.c	FUNCTION_200
0x401b437	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11452	elf.c	FUNCTION_200
0x401b43e	          0x4801d0	                            add rax, rdx	     11452	elf.c	FUNCTION_200
0x401b441	        0x48894580	             mov qword [rbp - 0x80], rax	     11452	elf.c	FUNCTION_200
0x401b445	        0x488b4598	             mov rax, qword [rbp - 0x68]	     11453	elf.c	FUNCTION_200
0x401b449	        0x488b4078	            mov rax, qword [rax + 0x78] 	     11453	elf.c	FUNCTION_200
0x401b44d	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	     11453	elf.c	FUNCTION_200
0x401b454	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	     11454	elf.c	FUNCTION_200
0x401b45f	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	     11455	elf.c	FUNCTION_200	FOR_2
0x401b46a	      0xe934020000	                           jmp 0x401b6a3	     11455	elf.c	FUNCTION_200	FOR_2
0x401b46f	        0x488b4590	             mov rax, qword [rbp - 0x70]	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b473	    0x488b80980200	           mov rax, qword [rax + 0x298] 	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b47a	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b481	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b488	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b48c	          0x4889cf	                            mov rdi, rcx	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b48f	            0xffd0	                                call rax	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b491	        0x488945c0	             mov qword [rbp - 0x40], rax	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401b495	      0x48837dc0ff	cmp qword [rbp - 0x40], 0xffffffffffffffff	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x401b49a	     0xf84dd010000	                            je 0x401b67d	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x401b4a0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4a7	          0x488b00	                    mov rax, qword [rax]	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4aa	          0x488b10	                    mov rdx, qword [rax]	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4ad	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4b4	          0x488b0a	                    mov rcx, qword [rdx]	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4b7	          0x488908	                    mov qword [rax], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4ba	        0x488b4a08	                mov rcx, qword [rdx + 8]	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4be	        0x48894808	                mov qword [rax + 8], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4c2	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4c6	        0x48894810	             mov qword [rax + 0x10], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4ca	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4ce	        0x48894818	             mov qword [rax + 0x18], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4d2	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4d6	        0x48894820	             mov qword [rax + 0x20], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4da	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4de	        0x48895028	             mov qword [rax + 0x28], rdx	     11464	elf.c	FUNCTION_200	FOR_2
0x401b4e2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b4e9	          0x8b4018	            mov eax, dword [rax + 0x18] 	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b4ec	          0x83e001	                              and eax, 1	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b4ef	            0x85c0	                           test eax, eax	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b4f1	            0x7519	                           jne 0x401b50c	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b4f3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b4fa	          0x8b4018	            mov eax, dword [rax + 0x18] 	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b4fd	          0x83c802	                               or eax, 2	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b500	            0x89c2	                            mov edx, eax	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b502	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b509	          0x895018	             mov dword [rax + 0x18], edx	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401b50c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11469	elf.c	FUNCTION_200	FOR_2
0x401b513	          0x8b4018	            mov eax, dword [rax + 0x18] 	     11469	elf.c	FUNCTION_200	FOR_2
0x401b516	       0xd00002000	                        or eax, 0x200000	     11469	elf.c	FUNCTION_200	FOR_2
0x401b51b	            0x89c2	                            mov edx, eax	     11469	elf.c	FUNCTION_200	FOR_2
0x401b51d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11469	elf.c	FUNCTION_200	FOR_2
0x401b524	          0x895018	             mov dword [rax + 0x18], edx	     11469	elf.c	FUNCTION_200	FOR_2
0x401b527	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11470	elf.c	FUNCTION_200	FOR_2
0x401b52e	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	     11470	elf.c	FUNCTION_200	FOR_2
0x401b532	        0x48895020	             mov qword [rax + 0x20], rdx	     11470	elf.c	FUNCTION_200	FOR_2
0x401b536	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     11471	elf.c	FUNCTION_200	FOR_2
0x401b53a	        0x488b4028	            mov rax, qword [rax + 0x28] 	     11471	elf.c	FUNCTION_200	FOR_2
0x401b53e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     11471	elf.c	FUNCTION_200	FOR_2
0x401b542	          0x4829c2	                            sub rdx, rax	     11471	elf.c	FUNCTION_200	FOR_2
0x401b545	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11471	elf.c	FUNCTION_200	FOR_2
0x401b54c	        0x48895010	             mov qword [rax + 0x10], rdx	     11471	elf.c	FUNCTION_200	FOR_2
0x401b550	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11472	elf.c	FUNCTION_200	FOR_2
0x401b557	        0x488b5580	             mov rdx, qword [rbp - 0x80]	     11472	elf.c	FUNCTION_200	FOR_2
0x401b55b	        0x48895008	                mov qword [rax + 8], rdx	     11472	elf.c	FUNCTION_200	FOR_2
0x401b55f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	     11473	elf.c	FUNCTION_200	FOR_2
0x401b566	    0x48c740280000	               mov qword [rax + 0x28], 0	     11473	elf.c	FUNCTION_200	FOR_2
0x401b56e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401b575	          0x488b00	                    mov rax, qword [rax]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401b578	          0x488b00	                    mov rax, qword [rax]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401b57b	        0x488b4008	                mov rax, qword [rax + 8]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401b57f	          0x4889c7	                            mov rdi, rax	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401b582	      0xe800000000	                          call 0x401b587	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401b587	        0x488945c8	             mov qword [rbp - 0x38], rax	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401b58b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b592	          0x488b00	                    mov rax, qword [rax]	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b595	          0x488b00	                    mov rax, qword [rax]	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b598	        0x488b4808	                mov rcx, qword [rax + 8]	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b59c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b5a0	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b5a4	          0x4889ce	                            mov rsi, rcx	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b5a7	          0x4889c7	                            mov rdi, rax	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b5aa	      0xe800000000	                          call 0x401b5af	     11475	elf.c	FUNCTION_200	FOR_2	CALL_12
0x401b5af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11476	elf.c	FUNCTION_200	FOR_2
0x401b5b3	        0x48014580	            add qword [rbp - 0x80], rax 	     11476	elf.c	FUNCTION_200	FOR_2
0x401b5b7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x401b5be	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x401b5c2	          0x4885c0	                           test rax, rax	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x401b5c5	     0xf8485000000	                            je 0x401b650	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x401b5cb	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11481	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_13
0x401b5cf	      0xba03000000	                              mov edx, 3	     11481	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_13
0x401b5d4	      0xbe00000000	                              mov esi, 0	     11481	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_13
0x401b5d9	          0x4889c7	                            mov rdi, rax	     11481	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_13
0x401b5dc	      0xe800000000	                          call 0x401b5e1	     11481	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_13
0x401b5e1	      0x4883458003	               add qword [rbp - 0x80], 3	     11482	elf.c	FUNCTION_200	FOR_2	IF_13
0x401b5e6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401b5ed	        0x488b5010	            mov rdx, qword [rax + 0x10] 	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401b5f1	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401b5f5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401b5fc	          0x4889ce	                            mov rsi, rcx	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401b5ff	          0x4889c7	                            mov rdi, rax	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401b602	      0xe800000000	                          call 0x401b607	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401b607	        0x488d45d0	                   lea rax, [rbp - 0x30]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b60b	        0x48894588	             mov qword [rbp - 0x78], rax	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b60f	            0xeb05	                           jmp 0x401b616	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b611	      0x4883458801	               add qword [rbp - 0x78], 1	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b616	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b61a	           0xfb600	                   movzx eax, byte [rax]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b61d	            0x3c30	                            cmp al, 0x30	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b61f	            0x74f0	                            je 0x401b611	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401b621	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401b625	          0x4889c7	                            mov rdi, rax	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401b628	      0xe800000000	                          call 0x401b62d	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401b62d	        0x488945c8	             mov qword [rbp - 0x38], rax	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401b631	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	     11487	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_16
0x401b635	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	     11487	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_16
0x401b639	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11487	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_16
0x401b63d	          0x4889ce	                            mov rsi, rcx	     11487	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_16
0x401b640	          0x4889c7	                            mov rdi, rax	     11487	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_16
0x401b643	      0xe800000000	                          call 0x401b648	     11487	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_16
0x401b648	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x401b64c	        0x48014580	            add qword [rbp - 0x80], rax 	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x401b650	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11490	elf.c	FUNCTION_200	FOR_2	CALL_17
0x401b654	      0xba05000000	                              mov edx, 5	     11490	elf.c	FUNCTION_200	FOR_2	CALL_17
0x401b659	      0xbe00000000	                              mov esi, 0	     11490	elf.c	FUNCTION_200	FOR_2	CALL_17
0x401b65e	          0x4889c7	                            mov rdi, rax	     11490	elf.c	FUNCTION_200	FOR_2	CALL_17
0x401b661	      0xe800000000	                          call 0x401b666	     11490	elf.c	FUNCTION_200	FOR_2	CALL_17
0x401b666	      0x4883458005	               add qword [rbp - 0x80], 5	     11491	elf.c	FUNCTION_200	FOR_2
0x401b66b	    0x48838550ffff	           add qword [rbp - 0xb0], 0x30 	     11492	elf.c	FUNCTION_200	FOR_2
0x401b673	    0x48838570ffff	               add qword [rbp - 0x90], 1	     11492	elf.c	FUNCTION_200	FOR_2
0x401b67b	            0xeb01	                           jmp 0x401b67e	     11492	elf.c	FUNCTION_200	FOR_2
0x401b67d	              0x90	                                     nop	     11462	elf.c	FUNCTION_200	FOR_2	IF_11
0x401b67e	    0x48838568ffff	               add qword [rbp - 0x98], 1	     11455	elf.c	FUNCTION_200	FOR_2
0x401b686	        0x488b4590	             mov rax, qword [rbp - 0x70]	     11455	elf.c	FUNCTION_200	FOR_2
0x401b68a	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11455	elf.c	FUNCTION_200	FOR_2
0x401b691	         0xfb64009	               movzx eax, byte [rax + 9]	     11455	elf.c	FUNCTION_200	FOR_2
0x401b695	           0xfb6c0	                           movzx eax, al	     11455	elf.c	FUNCTION_200	FOR_2
0x401b698	        0x48c1e005	                              shl rax, 5	     11455	elf.c	FUNCTION_200	FOR_2
0x401b69c	    0x48018560ffff	            add qword [rbp - 0xa0], rax 	     11455	elf.c	FUNCTION_200	FOR_2
0x401b6a3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	     11455	elf.c	FUNCTION_200	FOR_2
0x401b6aa	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	     11455	elf.c	FUNCTION_200	FOR_2
0x401b6ae	     0xf8cbbfdffff	                            jl 0x401b46f	     11455	elf.c	FUNCTION_200	FOR_2
0x401b6b4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11495	elf.c	FUNCTION_200
0x401b6bb	        0x488b75f8	                mov rsi, qword [rbp - 8]	     11496	elf.c	FUNCTION_200
0x401b6bf	    0x644833342528	                xor rsi, qword fs:[0x28]	     11496	elf.c	FUNCTION_200
0x401b6c8	            0x7405	                            je 0x401b6cf	     11496	elf.c	FUNCTION_200
0x401b6ca	      0xe800000000	                          call 0x401b6cf	     11496	elf.c	FUNCTION_200
0x401b6cf	              0xc9	                                   leave	     11496	elf.c	FUNCTION_200
0x401b6d0	              0xc3	                                     ret	     11496	elf.c	FUNCTION_200
elfcore_grok_freebsd_prstatus	ELSE,1:DO,0:CALL,7:WHILE,0:FOR,0:IF,6:SWITCH,1:functions,0	133
0x40182dd	              0x55	                                push rbp	      9997	elf.c	FUNCTION_150
0x40182de	          0x4889e5	                            mov rbp, rsp	      9997	elf.c	FUNCTION_150
0x40182e1	              0x53	                                push rbx	      9997	elf.c	FUNCTION_150
0x40182e2	        0x4883ec38	                           sub rsp, 0x38	      9997	elf.c	FUNCTION_150
0x40182e6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9997	elf.c	FUNCTION_150
0x40182ea	        0x488975c0	             mov qword [rbp - 0x40], rsi	      9997	elf.c	FUNCTION_150
0x40182ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x40182f2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x40182f9	         0xfb64004	               movzx eax, byte [rax + 4]	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x40182fd	           0xfb6c0	                           movzx eax, al	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4018300	          0x83f801	                              cmp eax, 1	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4018303	            0x7407	                            je 0x401830c	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4018305	          0x83f802	                              cmp eax, 2	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4018308	            0x7418	                            je 0x4018322	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x401830a	            0xeb2c	                           jmp 0x4018338	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x401830c	    0x48c745d80800	               mov qword [rbp - 0x28], 8	     10007	elf.c	FUNCTION_150	SWITCH_1
0x4018314	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10008	elf.c	FUNCTION_150	SWITCH_1
0x4018318	        0x4883c014	                           add rax, 0x14	     10008	elf.c	FUNCTION_150	SWITCH_1
0x401831c	        0x488945e8	             mov qword [rbp - 0x18], rax	     10008	elf.c	FUNCTION_150	SWITCH_1
0x4018320	            0xeb20	                           jmp 0x4018342	     10009	elf.c	FUNCTION_150	SWITCH_1
0x4018322	    0x48c745d81000	           mov qword [rbp - 0x28], 0x10 	     10012	elf.c	FUNCTION_150	SWITCH_1
0x401832a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10013	elf.c	FUNCTION_150	SWITCH_1
0x401832e	        0x4883c020	                           add rax, 0x20	     10013	elf.c	FUNCTION_150	SWITCH_1
0x4018332	        0x488945e8	             mov qword [rbp - 0x18], rax	     10013	elf.c	FUNCTION_150	SWITCH_1
0x4018336	            0xeb0a	                           jmp 0x4018342	     10014	elf.c	FUNCTION_150	SWITCH_1
0x4018338	      0xb800000000	                              mov eax, 0	     10017	elf.c	FUNCTION_150	SWITCH_1
0x401833d	      0xe99a010000	                           jmp 0x40184dc	     10017	elf.c	FUNCTION_150	SWITCH_1
0x4018342	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10020	elf.c	FUNCTION_150	IF_1
0x4018346	        0x488b4008	                mov rax, qword [rax + 8]	     10020	elf.c	FUNCTION_150	IF_1
0x401834a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	     10020	elf.c	FUNCTION_150	IF_1
0x401834e	            0x730a	                           jae 0x401835a	     10020	elf.c	FUNCTION_150	IF_1
0x4018350	      0xb800000000	                              mov eax, 0	     10021	elf.c	FUNCTION_150	IF_1
0x4018355	      0xe982010000	                           jmp 0x40184dc	     10021	elf.c	FUNCTION_150	IF_1
0x401835a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10024	elf.c	FUNCTION_150	IF_2
0x401835e	        0x488b4008	                mov rax, qword [rax + 8]	     10024	elf.c	FUNCTION_150	IF_2
0x4018362	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10024	elf.c	FUNCTION_150	IF_2
0x4018369	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     10024	elf.c	FUNCTION_150	IF_2
0x401836d	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	     10024	elf.c	FUNCTION_150	IF_2
0x4018371	          0x4889d7	                            mov rdi, rdx	     10024	elf.c	FUNCTION_150	IF_2
0x4018374	            0xffd0	                                call rax	     10024	elf.c	FUNCTION_150	IF_2
0x4018376	        0x4883f801	                              cmp rax, 1	     10024	elf.c	FUNCTION_150	IF_2
0x401837a	            0x740a	                            je 0x4018386	     10024	elf.c	FUNCTION_150	IF_2
0x401837c	      0xb800000000	                              mov eax, 0	     10025	elf.c	FUNCTION_150	IF_2
0x4018381	      0xe956010000	                           jmp 0x40184dc	     10025	elf.c	FUNCTION_150	IF_2
0x4018386	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x401838a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x4018391	         0xfb64004	               movzx eax, byte [rax + 4]	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x4018395	            0x3c01	                               cmp al, 1	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x4018397	            0x752e	                           jne 0x40183c7	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x4018399	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10031	elf.c	FUNCTION_150	IF_3
0x401839d	        0x488b4008	                mov rax, qword [rax + 8]	     10031	elf.c	FUNCTION_150	IF_3
0x40183a1	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10031	elf.c	FUNCTION_150	IF_3
0x40183a8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     10031	elf.c	FUNCTION_150	IF_3
0x40183ac	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	     10031	elf.c	FUNCTION_150	IF_3
0x40183b0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10031	elf.c	FUNCTION_150	IF_3
0x40183b4	          0x4801ca	                            add rdx, rcx	     10031	elf.c	FUNCTION_150	IF_3
0x40183b7	          0x4889d7	                            mov rdi, rdx	     10031	elf.c	FUNCTION_150	IF_3
0x40183ba	            0xffd0	                                call rax	     10031	elf.c	FUNCTION_150	IF_3
0x40183bc	        0x488945e0	             mov qword [rbp - 0x20], rax	     10031	elf.c	FUNCTION_150	IF_3
0x40183c0	      0x488345d808	               add qword [rbp - 0x28], 8	     10032	elf.c	FUNCTION_150	IF_3
0x40183c5	            0xeb29	                           jmp 0x40183f0	     10032	elf.c	FUNCTION_150	IF_3
0x40183c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183cb	        0x488b4008	                mov rax, qword [rax + 8]	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183cf	        0x488b4068	            mov rax, qword [rax + 0x68] 	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183d3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183d7	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183db	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183df	          0x4801ca	                            add rdx, rcx	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183e2	          0x4889d7	                            mov rdi, rdx	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183e5	            0xffd0	                                call rax	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183e7	        0x488945e0	             mov qword [rbp - 0x20], rax	     10036	elf.c	FUNCTION_150	ELSE_1
0x40183eb	      0x488345d810	            add qword [rbp - 0x28], 0x10	     10037	elf.c	FUNCTION_150	ELSE_1
0x40183f0	      0x488345d804	               add qword [rbp - 0x28], 4	     10041	elf.c	FUNCTION_150
0x40183f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x40183f9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x4018400	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x4018407	            0x8b00	                    mov eax, dword [rax]	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x4018409	            0x85c0	                           test eax, eax	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x401840b	            0x7537	                           jne 0x4018444	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x401840d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10045	elf.c	FUNCTION_150	IF_4	CALL_4
0x4018411	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10045	elf.c	FUNCTION_150	IF_4	CALL_4
0x4018418	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10045	elf.c	FUNCTION_150	IF_4	CALL_4
0x401841f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10046	elf.c	FUNCTION_150	IF_4
0x4018423	        0x488b4008	                mov rax, qword [rax + 8]	     10046	elf.c	FUNCTION_150	IF_4
0x4018427	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10046	elf.c	FUNCTION_150	IF_4
0x401842e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     10046	elf.c	FUNCTION_150	IF_4
0x4018432	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	     10046	elf.c	FUNCTION_150	IF_4
0x4018436	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10046	elf.c	FUNCTION_150	IF_4
0x401843a	          0x4801ca	                            add rdx, rcx	     10046	elf.c	FUNCTION_150	IF_4
0x401843d	          0x4889d7	                            mov rdi, rdx	     10046	elf.c	FUNCTION_150	IF_4
0x4018440	            0xffd0	                                call rax	     10046	elf.c	FUNCTION_150	IF_4
0x4018442	            0x8903	                    mov dword [rbx], eax	     10046	elf.c	FUNCTION_150	IF_4
0x4018444	      0x488345d804	               add qword [rbp - 0x28], 4	     10047	elf.c	FUNCTION_150
0x4018449	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10050	elf.c	FUNCTION_150	CALL_5
0x401844d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10050	elf.c	FUNCTION_150	CALL_5
0x4018454	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	     10050	elf.c	FUNCTION_150	CALL_5
0x401845b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10051	elf.c	FUNCTION_150
0x401845f	        0x488b4008	                mov rax, qword [rax + 8]	     10051	elf.c	FUNCTION_150
0x4018463	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     10051	elf.c	FUNCTION_150
0x401846a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     10051	elf.c	FUNCTION_150
0x401846e	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	     10051	elf.c	FUNCTION_150
0x4018472	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10051	elf.c	FUNCTION_150
0x4018476	          0x4801ca	                            add rdx, rcx	     10051	elf.c	FUNCTION_150
0x4018479	          0x4889d7	                            mov rdi, rdx	     10051	elf.c	FUNCTION_150
0x401847c	            0xffd0	                                call rax	     10051	elf.c	FUNCTION_150
0x401847e	          0x894308	                mov dword [rbx + 8], eax	     10051	elf.c	FUNCTION_150
0x4018481	      0x488345d804	               add qword [rbp - 0x28], 4	     10052	elf.c	FUNCTION_150
0x4018486	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10055	elf.c	FUNCTION_150	IF_5	CALL_6
0x401848a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     10055	elf.c	FUNCTION_150	IF_5	CALL_6
0x4018491	         0xfb64004	               movzx eax, byte [rax + 4]	     10055	elf.c	FUNCTION_150	IF_5	CALL_6
0x4018495	            0x3c02	                               cmp al, 2	     10055	elf.c	FUNCTION_150	IF_5	CALL_6
0x4018497	            0x7505	                           jne 0x401849e	     10055	elf.c	FUNCTION_150	IF_5	CALL_6
0x4018499	      0x488345d804	               add qword [rbp - 0x28], 4	     10056	elf.c	FUNCTION_150	IF_5
0x401849e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10059	elf.c	FUNCTION_150	IF_6
0x40184a2	        0x488b4008	                mov rax, qword [rax + 8]	     10059	elf.c	FUNCTION_150	IF_6
0x40184a6	        0x482b45d8	             sub rax, qword [rbp - 0x28]	     10059	elf.c	FUNCTION_150	IF_6
0x40184aa	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	     10059	elf.c	FUNCTION_150	IF_6
0x40184ae	            0x7307	                           jae 0x40184b7	     10059	elf.c	FUNCTION_150	IF_6
0x40184b0	      0xb800000000	                              mov eax, 0	     10060	elf.c	FUNCTION_150	IF_6
0x40184b5	            0xeb25	                           jmp 0x40184dc	     10060	elf.c	FUNCTION_150	IF_6
0x40184b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10064	elf.c	FUNCTION_150
0x40184bb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     10064	elf.c	FUNCTION_150
0x40184bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10063	elf.c	FUNCTION_150	CALL_7
0x40184c3	        0x488d0c02	                    lea rcx, [rdx + rax]	     10063	elf.c	FUNCTION_150	CALL_7
0x40184c7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10063	elf.c	FUNCTION_150	CALL_7
0x40184cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10063	elf.c	FUNCTION_150	CALL_7
0x40184cf	      0xbe00000000	                              mov esi, 0	     10063	elf.c	FUNCTION_150	CALL_7
0x40184d4	          0x4889c7	                            mov rdi, rax	     10063	elf.c	FUNCTION_150	CALL_7
0x40184d7	      0xe800000000	                          call 0x40184dc	     10063	elf.c	FUNCTION_150	CALL_7
0x40184dc	        0x4883c438	                           add rsp, 0x38	     10065	elf.c	FUNCTION_150
0x40184e0	              0x5b	                                 pop rbx	     10065	elf.c	FUNCTION_150
0x40184e1	              0x5d	                                 pop rbp	     10065	elf.c	FUNCTION_150
0x40184e2	              0xc3	                                     ret	     10065	elf.c	FUNCTION_150
_bfd_elf_single_rel_hdr	ELSE,1:DO,0:CALL,5:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	26
0x4007abb	              0x55	                                push rbp	      3049	elf.c	FUNCTION_44
0x4007abc	          0x4889e5	                            mov rbp, rsp	      3049	elf.c	FUNCTION_44
0x4007abf	        0x4883ec10	                           sub rsp, 0x10	      3049	elf.c	FUNCTION_44
0x4007ac3	        0x48897df8	                mov qword [rbp - 8], rdi	      3049	elf.c	FUNCTION_44
0x4007ac7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4007acb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4007ad2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4007ad6	          0x4885c0	                           test rax, rax	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4007ad9	            0x7434	                            je 0x4007b0f	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4007adb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007adf	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007ae6	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007aea	          0x4885c0	                           test rax, rax	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007aed	            0x740f	                            je 0x4007afe	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007aef	      0xbeec0b0000	                          mov esi, 0xbec	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007af4	      0xbf00000000	                              mov edi, 0	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007af9	      0xe800000000	                          call 0x4007afe	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4007afe	        0x488b45f8	                mov rax, qword [rbp - 8]	      3053	elf.c	FUNCTION_44	IF_1	CALL_4
0x4007b02	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3053	elf.c	FUNCTION_44	IF_1	CALL_4
0x4007b09	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3053	elf.c	FUNCTION_44	IF_1	CALL_4
0x4007b0d	            0xeb0f	                           jmp 0x4007b1e	      3053	elf.c	FUNCTION_44	IF_1	CALL_4
0x4007b0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3056	elf.c	FUNCTION_44	CALL_5
0x4007b13	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3056	elf.c	FUNCTION_44	CALL_5
0x4007b1a	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3056	elf.c	FUNCTION_44	CALL_5
0x4007b1e	              0xc9	                                   leave	      3057	elf.c	FUNCTION_44
0x4007b1f	              0xc3	                                     ret	      3057	elf.c	FUNCTION_44
find_link	ELSE,0:DO,0:CALL,6:WHILE,0:FOR,1:IF,3:SWITCH,0:functions,0	69
0x4003546	              0x55	                                push rbp	      1321	elf.c	FUNCTION_29
0x4003547	          0x4889e5	                            mov rbp, rsp	      1321	elf.c	FUNCTION_29
0x400354a	        0x4883ec40	                           sub rsp, 0x40	      1321	elf.c	FUNCTION_29
0x400354e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1321	elf.c	FUNCTION_29
0x4003552	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1321	elf.c	FUNCTION_29
0x4003556	          0x8955cc	             mov dword [rbp - 0x34], edx	      1321	elf.c	FUNCTION_29
0x4003559	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1322	elf.c	FUNCTION_29	CALL_1
0x400355d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1322	elf.c	FUNCTION_29	CALL_1
0x4003564	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1322	elf.c	FUNCTION_29	CALL_1
0x4003568	        0x488945f0	             mov qword [rbp - 0x10], rax	      1322	elf.c	FUNCTION_29	CALL_1
0x400356c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1325	elf.c	FUNCTION_29	CALL_2
0x4003571	            0x750f	                           jne 0x4003582	      1325	elf.c	FUNCTION_29	CALL_2
0x4003573	      0xbe2d050000	                          mov esi, 0x52d	      1325	elf.c	FUNCTION_29	CALL_2
0x4003578	      0xbf00000000	                              mov edi, 0	      1325	elf.c	FUNCTION_29	CALL_2
0x400357d	      0xe800000000	                          call 0x4003582	      1325	elf.c	FUNCTION_29	CALL_2
0x4003582	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x4003586	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x400358d	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x4003593	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x4003596	            0x7647	                           jbe 0x40035df	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x4003598	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1329	elf.c	FUNCTION_29	IF_1
0x400359b	    0x488d14c50000	                        lea rdx, [rax*8]	      1329	elf.c	FUNCTION_29	IF_1
0x40035a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1329	elf.c	FUNCTION_29	IF_1
0x40035a7	          0x4801d0	                            add rax, rdx	      1329	elf.c	FUNCTION_29	IF_1
0x40035aa	          0x488b00	                    mov rax, qword [rax]	      1329	elf.c	FUNCTION_29	IF_1
0x40035ad	          0x4885c0	                           test rax, rax	      1329	elf.c	FUNCTION_29	IF_1
0x40035b0	            0x742d	                            je 0x40035df	      1329	elf.c	FUNCTION_29	IF_1
0x40035b2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035b5	    0x488d14c50000	                        lea rdx, [rax*8]	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035c1	          0x4801d0	                            add rax, rdx	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035c4	          0x488b00	                    mov rax, qword [rax]	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035c7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035cb	          0x4889d6	                            mov rsi, rdx	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035ce	          0x4889c7	                            mov rdi, rax	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035d1	      0xe8e9feffff	                  call sym.section_match	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035d6	            0x85c0	                           test eax, eax	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035d8	            0x7405	                            je 0x40035df	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x40035da	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1331	elf.c	FUNCTION_29	IF_1
0x40035dd	            0xeb65	                           jmp 0x4003644	      1331	elf.c	FUNCTION_29	IF_1
0x40035df	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x40035e6	            0xeb41	                           jmp 0x4003629	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x40035e8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1335	elf.c	FUNCTION_29	FOR_1
0x40035eb	    0x488d14c50000	                        lea rdx, [rax*8]	      1335	elf.c	FUNCTION_29	FOR_1
0x40035f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1335	elf.c	FUNCTION_29	FOR_1
0x40035f7	          0x4801d0	                            add rax, rdx	      1335	elf.c	FUNCTION_29	FOR_1
0x40035fa	          0x488b00	                    mov rax, qword [rax]	      1335	elf.c	FUNCTION_29	FOR_1
0x40035fd	        0x488945f8	                mov qword [rbp - 8], rax	      1335	elf.c	FUNCTION_29	FOR_1
0x4003601	      0x48837df800	                  cmp qword [rbp - 8], 0	      1337	elf.c	FUNCTION_29	FOR_1	IF_2
0x4003606	            0x741c	                            je 0x4003624	      1337	elf.c	FUNCTION_29	FOR_1	IF_2
0x4003608	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400360c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4003610	          0x4889d6	                            mov rsi, rdx	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4003613	          0x4889c7	                            mov rdi, rax	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4003616	      0xe8a4feffff	                  call sym.section_match	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400361b	            0x85c0	                           test eax, eax	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400361d	            0x7406	                            je 0x4003625	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400361f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1342	elf.c	FUNCTION_29	FOR_1	IF_3
0x4003622	            0xeb20	                           jmp 0x4003644	      1342	elf.c	FUNCTION_29	FOR_1	IF_3
0x4003624	              0x90	                                     nop	      1338	elf.c	FUNCTION_29	FOR_1	IF_2
0x4003625	        0x8345ec01	               add dword [rbp - 0x14], 1	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x4003629	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x400362d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x4003634	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x400363a	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x400363d	            0x77a9	                            ja 0x40035e8	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x400363f	      0xb800000000	                              mov eax, 0	      1345	elf.c	FUNCTION_29
0x4003644	              0xc9	                                   leave	      1346	elf.c	FUNCTION_29
0x4003645	              0xc3	                                     ret	      1346	elf.c	FUNCTION_29
elfcore_write_s390_system_call	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019f59	              0x55	                                push rbp	     10909	elf.c	FUNCTION_180
0x4019f5a	          0x4889e5	                            mov rbp, rsp	     10909	elf.c	FUNCTION_180
0x4019f5d	        0x4883ec40	                           sub rsp, 0x40	     10909	elf.c	FUNCTION_180
0x4019f61	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10909	elf.c	FUNCTION_180
0x4019f65	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10909	elf.c	FUNCTION_180
0x4019f69	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10909	elf.c	FUNCTION_180
0x4019f6d	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10909	elf.c	FUNCTION_180
0x4019f71	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10909	elf.c	FUNCTION_180
0x4019f75	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10910	elf.c	FUNCTION_180
0x4019f7d	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f81	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f85	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f89	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f91	        0x4883ec08	                              sub rsp, 8	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f95	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f98	              0x57	                                push rdi	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f99	          0x4d89c1	                              mov r9, r8	     10911	elf.c	FUNCTION_180	CALL_1
0x4019f9c	    0x41b807030000	                          mov r8d, 0x307	     10911	elf.c	FUNCTION_180	CALL_1
0x4019fa2	          0x4889c7	                            mov rdi, rax	     10911	elf.c	FUNCTION_180	CALL_1
0x4019fa5	      0xe800000000	                          call 0x4019faa	     10911	elf.c	FUNCTION_180	CALL_1
0x4019faa	        0x4883c410	                           add rsp, 0x10	     10911	elf.c	FUNCTION_180	CALL_1
0x4019fae	              0xc9	                                   leave	     10914	elf.c	FUNCTION_180
0x4019faf	              0xc3	                                     ret	     10914	elf.c	FUNCTION_180
_bfd_elf_find_line	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	29
0x40161ae	              0x55	                                push rbp	      8789	elf.c	FUNCTION_104
0x40161af	          0x4889e5	                            mov rbp, rsp	      8789	elf.c	FUNCTION_104
0x40161b2	        0x4883ec30	                           sub rsp, 0x30	      8789	elf.c	FUNCTION_104
0x40161b6	        0x48897df8	                mov qword [rbp - 8], rdi	      8789	elf.c	FUNCTION_104
0x40161ba	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8789	elf.c	FUNCTION_104
0x40161be	        0x488955e8	             mov qword [rbp - 0x18], rdx	      8789	elf.c	FUNCTION_104
0x40161c2	        0x48894de0	             mov qword [rbp - 0x20], rcx	      8789	elf.c	FUNCTION_104
0x40161c6	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      8789	elf.c	FUNCTION_104
0x40161ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      8793	elf.c	FUNCTION_104	CALL_2
0x40161ce	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8793	elf.c	FUNCTION_104	CALL_2
0x40161d5	    0x488db8300300	                  lea rdi, [rax + 0x330]	      8790	elf.c	FUNCTION_104	CALL_1
0x40161dc	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      8790	elf.c	FUNCTION_104	CALL_1
0x40161e0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      8790	elf.c	FUNCTION_104	CALL_1
0x40161e4	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      8790	elf.c	FUNCTION_104	CALL_1
0x40161e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      8790	elf.c	FUNCTION_104	CALL_1
0x40161ec	              0x57	                                push rdi	      8790	elf.c	FUNCTION_104	CALL_1
0x40161ed	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x40161ef	      0x6800000000	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x40161f4	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x40161f6	          0xff75d8	                 push qword [rbp - 0x28]	      8790	elf.c	FUNCTION_104	CALL_1
0x40161f9	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x40161fb	          0x4989c9	                             mov r9, rcx	      8790	elf.c	FUNCTION_104	CALL_1
0x40161fe	    0x41b800000000	                              mov r8d, 0	      8790	elf.c	FUNCTION_104	CALL_1
0x4016204	      0xb900000000	                              mov ecx, 0	      8790	elf.c	FUNCTION_104	CALL_1
0x4016209	          0x4889c7	                            mov rdi, rax	      8790	elf.c	FUNCTION_104	CALL_1
0x401620c	      0xe800000000	                          call 0x4016211	      8790	elf.c	FUNCTION_104	CALL_1
0x4016211	        0x4883c430	                           add rsp, 0x30	      8790	elf.c	FUNCTION_104	CALL_1
0x4016215	              0xc9	                                   leave	      8794	elf.c	FUNCTION_104
0x4016216	              0xc3	                                     ret	      8794	elf.c	FUNCTION_104
_bfd_elf_copy_private_section_data	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	58
0x40135b9	              0x55	                                push rbp	      7568	elf.c	FUNCTION_84
0x40135ba	          0x4889e5	                            mov rbp, rsp	      7568	elf.c	FUNCTION_84
0x40135bd	        0x4883ec30	                           sub rsp, 0x30	      7568	elf.c	FUNCTION_84
0x40135c1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7568	elf.c	FUNCTION_84
0x40135c5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      7568	elf.c	FUNCTION_84
0x40135c9	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7568	elf.c	FUNCTION_84
0x40135cd	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      7568	elf.c	FUNCTION_84
0x40135d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7571	elf.c	FUNCTION_84	IF_1
0x40135d5	        0x488b4008	                mov rax, qword [rax + 8]	      7571	elf.c	FUNCTION_84	IF_1
0x40135d9	          0x8b4008	                mov eax, dword [rax + 8]	      7571	elf.c	FUNCTION_84	IF_1
0x40135dc	          0x83f805	                              cmp eax, 5	      7571	elf.c	FUNCTION_84	IF_1
0x40135df	            0x7510	                           jne 0x40135f1	      7571	elf.c	FUNCTION_84	IF_1
0x40135e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7572	elf.c	FUNCTION_84	IF_1
0x40135e5	        0x488b4008	                mov rax, qword [rax + 8]	      7572	elf.c	FUNCTION_84	IF_1
0x40135e9	          0x8b4008	                mov eax, dword [rax + 8]	      7572	elf.c	FUNCTION_84	IF_1
0x40135ec	          0x83f805	                              cmp eax, 5	      7572	elf.c	FUNCTION_84	IF_1
0x40135ef	            0x740a	                            je 0x40135fb	      7572	elf.c	FUNCTION_84	IF_1
0x40135f1	      0xb801000000	                              mov eax, 1	      7573	elf.c	FUNCTION_84	IF_1
0x40135f6	      0xe98e000000	                           jmp 0x4013689	      7573	elf.c	FUNCTION_84	IF_1
0x40135fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7575	elf.c	FUNCTION_84	CALL_1
0x40135ff	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7575	elf.c	FUNCTION_84	CALL_1
0x4013606	        0x488945f0	             mov qword [rbp - 0x10], rax	      7575	elf.c	FUNCTION_84	CALL_1
0x401360a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7576	elf.c	FUNCTION_84	CALL_2
0x401360e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7576	elf.c	FUNCTION_84	CALL_2
0x4013615	        0x488945f8	                mov qword [rbp - 8], rax	      7576	elf.c	FUNCTION_84	CALL_2
0x4013619	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7578	elf.c	FUNCTION_84
0x401361d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7578	elf.c	FUNCTION_84
0x4013621	        0x488b45f8	                mov rax, qword [rbp - 8]	      7578	elf.c	FUNCTION_84
0x4013625	        0x48895038	             mov qword [rax + 0x38], rdx	      7578	elf.c	FUNCTION_84
0x4013629	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7580	elf.c	FUNCTION_84	IF_2
0x401362d	          0x8b4004	                mov eax, dword [rax + 4]	      7580	elf.c	FUNCTION_84	IF_2
0x4013630	          0x83f802	                              cmp eax, 2	      7580	elf.c	FUNCTION_84	IF_2
0x4013633	            0x7428	                            je 0x401365d	      7580	elf.c	FUNCTION_84	IF_2
0x4013635	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7581	elf.c	FUNCTION_84	IF_2
0x4013639	          0x8b4004	                mov eax, dword [rax + 4]	      7581	elf.c	FUNCTION_84	IF_2
0x401363c	          0x83f80b	                            cmp eax, 0xb	      7581	elf.c	FUNCTION_84	IF_2
0x401363f	            0x741c	                            je 0x401365d	      7581	elf.c	FUNCTION_84	IF_2
0x4013641	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7582	elf.c	FUNCTION_84	IF_2
0x4013645	          0x8b4004	                mov eax, dword [rax + 4]	      7582	elf.c	FUNCTION_84	IF_2
0x4013648	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      7582	elf.c	FUNCTION_84	IF_2
0x401364d	            0x740e	                            je 0x401365d	      7582	elf.c	FUNCTION_84	IF_2
0x401364f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7583	elf.c	FUNCTION_84	IF_2
0x4013653	          0x8b4004	                mov eax, dword [rax + 4]	      7583	elf.c	FUNCTION_84	IF_2
0x4013656	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      7583	elf.c	FUNCTION_84	IF_2
0x401365b	            0x750e	                           jne 0x401366b	      7583	elf.c	FUNCTION_84	IF_2
0x401365d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7584	elf.c	FUNCTION_84	IF_2
0x4013661	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      7584	elf.c	FUNCTION_84	IF_2
0x4013664	        0x488b45f8	                mov rax, qword [rbp - 8]	      7584	elf.c	FUNCTION_84	IF_2
0x4013668	          0x89502c	             mov dword [rax + 0x2c], edx	      7584	elf.c	FUNCTION_84	IF_2
0x401366b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      7586	elf.c	FUNCTION_84	CALL_3
0x401366f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7586	elf.c	FUNCTION_84	CALL_3
0x4013673	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      7586	elf.c	FUNCTION_84	CALL_3
0x4013677	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7586	elf.c	FUNCTION_84	CALL_3
0x401367b	    0x41b800000000	                              mov r8d, 0	      7586	elf.c	FUNCTION_84	CALL_3
0x4013681	          0x4889c7	                            mov rdi, rax	      7586	elf.c	FUNCTION_84	CALL_3
0x4013684	      0xe800000000	                          call 0x4013689	      7586	elf.c	FUNCTION_84	CALL_3
0x4013689	              0xc9	                                   leave	      7588	elf.c	FUNCTION_84
0x401368a	              0xc3	                                     ret	      7588	elf.c	FUNCTION_84
_bfd_elf_assign_file_positions_for_non_load	ELSE,0:DO,0:CALL,22:WHILE,0:FOR,1:IF,9:SWITCH,0:functions,0	232
0x400f9a6	              0x55	                                push rbp	      6286	elf.c	FUNCTION_75
0x400f9a7	          0x4889e5	                            mov rbp, rsp	      6286	elf.c	FUNCTION_75
0x400f9aa	        0x4883ec70	                           sub rsp, 0x70	      6286	elf.c	FUNCTION_75
0x400f9ae	        0x48897d98	             mov qword [rbp - 0x68], rdi	      6286	elf.c	FUNCTION_75
0x400f9b2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6293	elf.c	FUNCTION_75	CALL_1
0x400f9b6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400f9bd	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400f9c4	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400f9c8	        0x488945b0	             mov qword [rbp - 0x50], rax	      6293	elf.c	FUNCTION_75	CALL_1
0x400f9cc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6295	elf.c	FUNCTION_75	CALL_2
0x400f9d0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6295	elf.c	FUNCTION_75	CALL_2
0x400f9d7	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6295	elf.c	FUNCTION_75	CALL_2
0x400f9db	        0x488945b8	             mov qword [rbp - 0x48], rax	      6295	elf.c	FUNCTION_75	CALL_2
0x400f9df	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6296	elf.c	FUNCTION_75	CALL_3
0x400f9e3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6296	elf.c	FUNCTION_75	CALL_3
0x400f9ea	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      6296	elf.c	FUNCTION_75	CALL_3
0x400f9f0	            0x89c0	                            mov eax, eax	      6296	elf.c	FUNCTION_75	CALL_3
0x400f9f2	    0x488d14c50000	                        lea rdx, [rax*8]	      6296	elf.c	FUNCTION_75	CALL_3
0x400f9fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6296	elf.c	FUNCTION_75	CALL_3
0x400f9fe	          0x4801d0	                            add rax, rdx	      6296	elf.c	FUNCTION_75	CALL_3
0x400fa01	        0x488945c8	             mov qword [rbp - 0x38], rax	      6296	elf.c	FUNCTION_75	CALL_3
0x400fa05	      0x488345b808	               add qword [rbp - 0x48], 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400fa0a	      0xe931020000	                           jmp 0x400fc40	      6297	elf.c	FUNCTION_75	FOR_1
0x400fa0f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6299	elf.c	FUNCTION_75	FOR_1
0x400fa13	          0x488b00	                    mov rax, qword [rax]	      6299	elf.c	FUNCTION_75	FOR_1
0x400fa16	        0x488945d0	             mov qword [rbp - 0x30], rax	      6299	elf.c	FUNCTION_75	FOR_1
0x400fa1a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa1e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa22	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa26	     0xf850f020000	                           jne 0x400fc3b	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa2c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6302	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa30	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6302	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa34	        0x488945d8	             mov qword [rbp - 0x28], rax	      6302	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa38	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6303	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa3c	          0x8b4004	                mov eax, dword [rax + 4]	      6303	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa3f	          0x83f809	                              cmp eax, 9	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa42	            0x740c	                            je 0x400fa50	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa48	          0x8b4004	                mov eax, dword [rax + 4]	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa4b	          0x83f804	                              cmp eax, 4	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa4e	            0x7507	                           jne 0x400fa57	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa50	      0xb801000000	                              mov eax, 1	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa55	            0xeb05	                           jmp 0x400fa5c	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa57	      0xb800000000	                              mov eax, 0	      6304	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa5c	          0x8945ac	             mov dword [rbp - 0x54], eax	      6303	elf.c	FUNCTION_75	FOR_1	IF_1
0x400fa5f	        0x837dac00	               cmp dword [rbp - 0x54], 0	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa63	            0x751f	                           jne 0x400fa84	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa65	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa6a	     0xf84cb010000	                            je 0x400fc3b	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa74	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa77	      0x2500000008	                   and eax, section_end.	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa7c	            0x85c0	                           test eax, eax	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa7e	     0xf84b7010000	                            je 0x400fc3b	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400fa84	        0x837dac00	               cmp dword [rbp - 0x54], 0	      6308	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fa88	     0xf8591010000	                           jne 0x400fc1f	      6308	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fa8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fa92	          0x488b00	                    mov rax, qword [rax]	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fa95	        0x488945c0	             mov qword [rbp - 0x40], rax	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fa99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6315	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4
0x400fa9d	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      6315	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4
0x400faa1	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400faa5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400faa9	          0x4889ce	                            mov rsi, rcx	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400faac	          0x4889c7	                            mov rdi, rax	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400faaf	      0xe800000000	                          call 0x400fab4	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400fab4	            0x85c0	                           test eax, eax	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400fab6	            0x750a	                           jne 0x400fac2	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400fab8	      0xb800000000	                              mov eax, 0	      6316	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4
0x400fabd	      0xe995020000	                           jmp 0x400fd57	      6316	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4
0x400fac2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fac6	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400faca	          0x83e030	                           and eax, 0x30	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400facd	            0x3c10	                            cmp al, 0x10	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400facf	            0x7548	                           jne 0x400fb19	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fad1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fad5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fad8	          0xc1e805	                              shr eax, 5	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fadb	      0x25ffff0f00	                        and eax, 0xfffff	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fae0	      0x2500000200	                        and eax, 0x20000	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fae5	            0x85c0	                           test eax, eax	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fae7	            0x7530	                           jne 0x400fb19	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fae9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400faed	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400faf1	          0x4889d6	                            mov rsi, rdx	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400faf4	          0x4889c7	                            mov rdi, rax	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400faf7	      0xe8462cffff	        call sym.convert_debug_to_zdebug	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fafc	        0x488945e0	             mov qword [rbp - 0x20], rax	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fb00	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400fb05	            0x750a	                           jne 0x400fb11	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400fb07	      0xb800000000	                              mov eax, 0	      6326	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400fb0c	      0xe946020000	                           jmp 0x400fd57	      6326	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400fb11	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6327	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fb15	        0x488945c0	             mov qword [rbp - 0x40], rax	      6327	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400fb19	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400fb1d	            0x8b00	                    mov eax, dword [rax]	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400fb1f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400fb22	            0x7414	                            je 0x400fb38	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400fb24	      0xba00000000	                              mov edx, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400fb29	      0xbebb180000	                         mov esi, 0x18bb	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400fb2e	      0xbf00000000	                              mov edi, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400fb33	      0xe800000000	                          call 0x400fb38	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400fb38	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb3c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb43	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb4a	        0x488b4008	                mov rax, qword [rax + 8]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb4e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb52	      0xba00000000	                              mov edx, 0	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb57	          0x4889ce	                            mov rsi, rcx	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb5a	          0x4889c7	                            mov rdi, rax	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb5d	      0xe800000000	                          call 0x400fb62	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb62	            0x89c2	                            mov edx, eax	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb68	            0x8910	                    mov dword [rax], edx	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400fb6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x400fb6e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x400fb75	        0x488945e8	             mov qword [rbp - 0x18], rax	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x400fb79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400fb7d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400fb81	          0x4885c0	                           test rax, rax	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400fb84	            0x742b	                            je 0x400fbb1	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400fb86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fb8a	        0x488b7058	            mov rsi, qword [rax + 0x58] 	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fb8e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fb92	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fb96	      0xb900000000	                              mov ecx, 0	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fb9b	          0x4889c7	                            mov rdi, rax	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fb9e	      0xe87d7fffff	     call sym._bfd_elf_set_reloc_sh_name	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fba3	            0x85c0	                           test eax, eax	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fba5	            0x750a	                           jne 0x400fbb1	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400fba7	      0xb800000000	                              mov eax, 0	      6342	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400fbac	      0xe9a6010000	                           jmp 0x400fd57	      6342	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400fbb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400fbb5	        0x488b4070	            mov rax, qword [rax + 0x70] 	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400fbb9	          0x4885c0	                           test rax, rax	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400fbbc	            0x742b	                            je 0x400fbe9	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400fbbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbc2	        0x488b7070	            mov rsi, qword [rax + 0x70] 	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbc6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbca	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbce	      0xb901000000	                              mov ecx, 1	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbd3	          0x4889c7	                            mov rdi, rax	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbd6	      0xe8457fffff	     call sym._bfd_elf_set_reloc_sh_name	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbdb	            0x85c0	                           test eax, eax	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbdd	            0x750a	                           jne 0x400fbe9	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400fbdf	      0xb800000000	                              mov eax, 0	      6347	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400fbe4	      0xe96e010000	                           jmp 0x400fd57	      6347	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400fbe9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fbed	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fbf1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fbf5	        0x48895020	             mov qword [rax + 0x20], rdx	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fbf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fbfd	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fc04	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fc08	        0x48895048	             mov qword [rax + 0x48], rdx	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fc0c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fc10	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fc14	    0x48c780b00000	               mov qword [rax + 0xb0], 0	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400fc1f	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400fc23	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400fc27	      0xba01000000	                              mov edx, 1	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400fc2c	          0x4889ce	                            mov rsi, rcx	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400fc2f	          0x4889c7	                            mov rdi, rax	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400fc32	      0xe800000000	                          call 0x400fc37	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400fc37	        0x488945b0	             mov qword [rbp - 0x50], rax	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400fc3b	      0x488345b808	               add qword [rbp - 0x48], 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400fc40	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6297	elf.c	FUNCTION_75	FOR_1
0x400fc44	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6297	elf.c	FUNCTION_75	FOR_1
0x400fc48	     0xf82c1fdffff	                            jb 0x400fa0f	      6297	elf.c	FUNCTION_75	FOR_1
0x400fc4e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6363	elf.c	FUNCTION_75	CALL_14
0x400fc52	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6363	elf.c	FUNCTION_75	CALL_14
0x400fc59	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6363	elf.c	FUNCTION_75	CALL_14
0x400fc60	        0x488b4008	                mov rax, qword [rax + 8]	      6363	elf.c	FUNCTION_75	CALL_14
0x400fc64	          0x4889c7	                            mov rdi, rax	      6363	elf.c	FUNCTION_75	CALL_14
0x400fc67	      0xe800000000	                          call 0x400fc6c	      6363	elf.c	FUNCTION_75	CALL_14
0x400fc6c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6364	elf.c	FUNCTION_75	CALL_15
0x400fc70	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6364	elf.c	FUNCTION_75	CALL_15
0x400fc77	    0x4805b8000000	                           add rax, 0xb8	      6364	elf.c	FUNCTION_75	CALL_15
0x400fc7d	        0x488945d0	             mov qword [rbp - 0x30], rax	      6364	elf.c	FUNCTION_75	CALL_15
0x400fc81	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6365	elf.c	FUNCTION_75	CALL_17
0x400fc85	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6365	elf.c	FUNCTION_75	CALL_17
0x400fc8c	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6365	elf.c	FUNCTION_75	CALL_17
0x400fc93	        0x488b4008	                mov rax, qword [rax + 8]	      6365	elf.c	FUNCTION_75	CALL_17
0x400fc97	          0x4889c7	                            mov rdi, rax	      6365	elf.c	FUNCTION_75	CALL_17
0x400fc9a	      0xe800000000	                          call 0x400fc9f	      6365	elf.c	FUNCTION_75	CALL_17
0x400fc9f	          0x4889c2	                            mov rdx, rax	      6365	elf.c	FUNCTION_75	CALL_17
0x400fca2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6365	elf.c	FUNCTION_75	CALL_17
0x400fca6	        0x48895020	             mov qword [rax + 0x20], rdx	      6365	elf.c	FUNCTION_75	CALL_17
0x400fcaa	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      6366	elf.c	FUNCTION_75	CALL_18
0x400fcae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6366	elf.c	FUNCTION_75	CALL_18
0x400fcb2	      0xba01000000	                              mov edx, 1	      6366	elf.c	FUNCTION_75	CALL_18
0x400fcb7	          0x4889ce	                            mov rsi, rcx	      6366	elf.c	FUNCTION_75	CALL_18
0x400fcba	          0x4889c7	                            mov rdi, rax	      6366	elf.c	FUNCTION_75	CALL_18
0x400fcbd	      0xe800000000	                          call 0x400fcc2	      6366	elf.c	FUNCTION_75	CALL_18
0x400fcc2	        0x488945b0	             mov qword [rbp - 0x50], rax	      6366	elf.c	FUNCTION_75	CALL_18
0x400fcc6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6369	elf.c	FUNCTION_75	CALL_19
0x400fcca	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6369	elf.c	FUNCTION_75	CALL_19
0x400fcd1	        0x488945f0	             mov qword [rbp - 0x10], rax	      6369	elf.c	FUNCTION_75	CALL_19
0x400fcd5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6370	elf.c	FUNCTION_75	CALL_20
0x400fcd9	        0x488b4008	                mov rax, qword [rax + 8]	      6370	elf.c	FUNCTION_75	CALL_20
0x400fcdd	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6370	elf.c	FUNCTION_75	CALL_20
0x400fce4	        0x488945f8	                mov qword [rbp - 8], rax	      6370	elf.c	FUNCTION_75	CALL_20
0x400fce8	        0x488b45f8	                mov rax, qword [rbp - 8]	      6371	elf.c	FUNCTION_75	CALL_21
0x400fcec	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400fcf3	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400fcf7	           0xfb6c0	                           movzx eax, al	      6371	elf.c	FUNCTION_75	CALL_21
0x400fcfa	      0xba01000000	                              mov edx, 1	      6371	elf.c	FUNCTION_75	CALL_21
0x400fcff	            0x89c1	                            mov ecx, eax	      6371	elf.c	FUNCTION_75	CALL_21
0x400fd01	            0xd3e2	                             shl edx, cl	      6371	elf.c	FUNCTION_75	CALL_21
0x400fd03	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6371	elf.c	FUNCTION_75	CALL_21
0x400fd07	            0x89d6	                            mov esi, edx	      6371	elf.c	FUNCTION_75	CALL_21
0x400fd09	          0x4889c7	                            mov rdi, rax	      6371	elf.c	FUNCTION_75	CALL_21
0x400fd0c	      0xe8eda7ffff	            call sym.align_file_position	      6371	elf.c	FUNCTION_75	CALL_21
0x400fd11	        0x488945b0	             mov qword [rbp - 0x50], rax	      6371	elf.c	FUNCTION_75	CALL_21
0x400fd15	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      6372	elf.c	FUNCTION_75
0x400fd19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6372	elf.c	FUNCTION_75
0x400fd1d	        0x48895020	             mov qword [rax + 0x20], rdx	      6372	elf.c	FUNCTION_75
0x400fd21	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6373	elf.c	FUNCTION_75
0x400fd25	          0x8b504c	            mov edx, dword [rax + 0x4c] 	      6373	elf.c	FUNCTION_75
0x400fd28	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6373	elf.c	FUNCTION_75
0x400fd2c	          0x8b4048	            mov eax, dword [rax + 0x48] 	      6373	elf.c	FUNCTION_75
0x400fd2f	           0xfafc2	                           imul eax, edx	      6373	elf.c	FUNCTION_75
0x400fd32	            0x89c0	                            mov eax, eax	      6373	elf.c	FUNCTION_75
0x400fd34	        0x480145b0	            add qword [rbp - 0x50], rax 	      6373	elf.c	FUNCTION_75
0x400fd38	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6374	elf.c	FUNCTION_75	CALL_22
0x400fd3c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400fd43	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400fd4a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      6374	elf.c	FUNCTION_75	CALL_22
0x400fd4e	        0x48895040	             mov qword [rax + 0x40], rdx	      6374	elf.c	FUNCTION_75	CALL_22
0x400fd52	      0xb801000000	                              mov eax, 1	      6376	elf.c	FUNCTION_75
0x400fd57	              0xc9	                                   leave	      6377	elf.c	FUNCTION_75
0x400fd58	              0xc3	                                     ret	      6377	elf.c	FUNCTION_75
_bfd_elf_find_nearest_line	ELSE,0:DO,0:CALL,7:WHILE,0:FOR,0:IF,6:SWITCH,0:functions,0	138
0x4015fb9	              0x55	                                push rbp	      8746	elf.c	FUNCTION_103
0x4015fba	          0x4889e5	                            mov rbp, rsp	      8746	elf.c	FUNCTION_103
0x4015fbd	        0x4883ec50	                           sub rsp, 0x50	      8746	elf.c	FUNCTION_103
0x4015fc1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8746	elf.c	FUNCTION_103
0x4015fc5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8746	elf.c	FUNCTION_103
0x4015fc9	        0x488955d8	             mov qword [rbp - 0x28], rdx	      8746	elf.c	FUNCTION_103
0x4015fcd	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      8746	elf.c	FUNCTION_103
0x4015fd1	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      8746	elf.c	FUNCTION_103
0x4015fd5	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      8746	elf.c	FUNCTION_103
0x4015fd9	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      8746	elf.c	FUNCTION_103
0x4015fdd	        0x488945b8	             mov qword [rbp - 0x48], rax	      8746	elf.c	FUNCTION_103
0x4015fe1	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      8746	elf.c	FUNCTION_103
0x4015fe5	        0x488945b0	             mov qword [rbp - 0x50], rax	      8746	elf.c	FUNCTION_103
0x4015fe9	    0x64488b042528	                mov rax, qword fs:[0x28]	      8746	elf.c	FUNCTION_103
0x4015ff2	        0x488945f8	                mov qword [rbp - 8], rax	      8746	elf.c	FUNCTION_103
0x4015ff6	            0x31c0	                            xor eax, eax	      8746	elf.c	FUNCTION_103
0x4015ff8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8753	elf.c	FUNCTION_103	IF_1	CALL_2
0x4015ffc	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8753	elf.c	FUNCTION_103	IF_1	CALL_2
0x4016003	    0x4c8d80300300	                   lea r8, [rax + 0x330]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401600a	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401600e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016012	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016016	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401601a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401601e	            0x4150	                                 push r8	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016020	            0x6a00	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016022	      0x6800000000	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016027	          0xff75b0	                 push qword [rbp - 0x50]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401602a	          0xff75b8	                 push qword [rbp - 0x48]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401602d	          0xff75c0	                 push qword [rbp - 0x40]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016030	          0x4989f9	                             mov r9, rdi	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016033	          0x4989c8	                             mov r8, rcx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016036	          0x4889d1	                            mov rcx, rdx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016039	      0xba00000000	                              mov edx, 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401603e	          0x4889c7	                            mov rdi, rax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016041	      0xe800000000	                          call 0x4016046	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x4016046	        0x4883c430	                           add rsp, 0x30	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401604a	            0x85c0	                           test eax, eax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401604c	            0x7535	                           jne 0x4016083	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x401604e	        0x4c8b45c0	              mov r8, qword [rbp - 0x40]	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016052	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016056	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401605a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401605e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016062	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016066	        0x4883ec08	                              sub rsp, 8	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401606a	          0xff75b8	                 push qword [rbp - 0x48]	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401606d	          0x4d89c1	                              mov r9, r8	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016070	          0x4989f8	                             mov r8, rdi	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016073	          0x4889c7	                            mov rdi, rax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016076	      0xe800000000	                          call 0x401607b	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401607b	        0x4883c410	                           add rsp, 0x10	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401607f	            0x85c0	                           test eax, eax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016081	            0x744f	                            je 0x40160d2	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4016083	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x4016087	          0x488b00	                    mov rax, qword [rax]	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x401608a	          0x4885c0	                           test rax, rax	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x401608d	            0x7539	                           jne 0x40160c8	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x401608f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8760	elf.c	FUNCTION_103	IF_1	IF_2
0x4016093	          0x488b00	                    mov rax, qword [rax]	      8760	elf.c	FUNCTION_103	IF_1	IF_2
0x4016096	          0x4885c0	                           test rax, rax	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x4016099	            0x7506	                           jne 0x40160a1	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x401609b	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x401609f	            0xeb05	                           jmp 0x40160a6	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160a1	      0xbf00000000	                              mov edi, 0	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160a6	        0x4c8b45c0	              mov r8, qword [rbp - 0x40]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160aa	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160ae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160b2	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160ba	          0x4d89c1	                              mov r9, r8	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160bd	          0x4989f8	                             mov r8, rdi	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160c0	          0x4889c7	                            mov rdi, rax	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160c3	      0xe800000000	                          call 0x40160c8	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40160c8	      0xb801000000	                              mov eax, 1	      8762	elf.c	FUNCTION_103	IF_1
0x40160cd	      0xe9c6000000	                           jmp 0x4016198	      8762	elf.c	FUNCTION_103	IF_1
0x40160d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8768	elf.c	FUNCTION_103	IF_3	CALL_6
0x40160d6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8768	elf.c	FUNCTION_103	IF_3	CALL_6
0x40160dd	    0x4c8d88200300	                   lea r9, [rax + 0x320]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40160e4	        0x4c8b45c8	              mov r8, qword [rbp - 0x38]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40160e8	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40160ec	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40160f0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40160f4	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40160f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40160fc	        0x4883ec08	                              sub rsp, 8	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4016100	            0x4151	                                 push r9	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4016102	          0xff75b8	                 push qword [rbp - 0x48]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4016105	          0xff75c0	                 push qword [rbp - 0x40]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4016108	          0x4d89c1	                              mov r9, r8	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401610b	          0x4989f8	                             mov r8, rdi	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401610e	          0x4889c7	                            mov rdi, rax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4016111	      0xe800000000	                          call 0x4016116	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4016116	        0x4883c420	                           add rsp, 0x20	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401611a	            0x85c0	                           test eax, eax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401611c	            0x7507	                           jne 0x4016125	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401611e	      0xb800000000	                              mov eax, 0	      8769	elf.c	FUNCTION_103	IF_3
0x4016123	            0xeb73	                           jmp 0x4016198	      8769	elf.c	FUNCTION_103	IF_3
0x4016125	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8770	elf.c	FUNCTION_103	IF_4
0x4016128	            0x85c0	                           test eax, eax	      8770	elf.c	FUNCTION_103	IF_4
0x401612a	            0x741d	                            je 0x4016149	      8770	elf.c	FUNCTION_103	IF_4
0x401612c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8770	elf.c	FUNCTION_103	IF_4
0x4016130	          0x488b00	                    mov rax, qword [rax]	      8770	elf.c	FUNCTION_103	IF_4
0x4016133	          0x4885c0	                           test rax, rax	      8770	elf.c	FUNCTION_103	IF_4
0x4016136	            0x750a	                           jne 0x4016142	      8770	elf.c	FUNCTION_103	IF_4
0x4016138	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8770	elf.c	FUNCTION_103	IF_4
0x401613c	            0x8b00	                    mov eax, dword [rax]	      8770	elf.c	FUNCTION_103	IF_4
0x401613e	            0x85c0	                           test eax, eax	      8770	elf.c	FUNCTION_103	IF_4
0x4016140	            0x7407	                            je 0x4016149	      8770	elf.c	FUNCTION_103	IF_4
0x4016142	      0xb801000000	                              mov eax, 1	      8771	elf.c	FUNCTION_103	IF_4
0x4016147	            0xeb4f	                           jmp 0x4016198	      8771	elf.c	FUNCTION_103	IF_4
0x4016149	      0x48837de000	               cmp qword [rbp - 0x20], 0	      8773	elf.c	FUNCTION_103	IF_5
0x401614e	            0x7507	                           jne 0x4016157	      8773	elf.c	FUNCTION_103	IF_5
0x4016150	      0xb800000000	                              mov eax, 0	      8774	elf.c	FUNCTION_103	IF_5
0x4016155	            0xeb41	                           jmp 0x4016198	      8774	elf.c	FUNCTION_103	IF_5
0x4016157	        0x4c8b45c0	              mov r8, qword [rbp - 0x40]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x401615b	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x401615f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x4016163	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x4016167	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x401616b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x401616f	          0x4d89c1	                              mov r9, r8	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x4016172	          0x4989f8	                             mov r8, rdi	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x4016175	          0x4889c7	                            mov rdi, rax	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x4016178	      0xe800000000	                          call 0x401617d	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x401617d	          0x4885c0	                           test rax, rax	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x4016180	            0x7507	                           jne 0x4016189	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x4016182	      0xb800000000	                              mov eax, 0	      8778	elf.c	FUNCTION_103	IF_6
0x4016187	            0xeb0f	                           jmp 0x4016198	      8778	elf.c	FUNCTION_103	IF_6
0x4016189	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8780	elf.c	FUNCTION_103
0x401618d	    0xc70000000000	                      mov dword [rax], 0	      8780	elf.c	FUNCTION_103
0x4016193	      0xb801000000	                              mov eax, 1	      8781	elf.c	FUNCTION_103
0x4016198	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8782	elf.c	FUNCTION_103
0x401619c	    0x644833142528	                xor rdx, qword fs:[0x28]	      8782	elf.c	FUNCTION_103
0x40161a5	            0x7405	                            je 0x40161ac	      8782	elf.c	FUNCTION_103
0x40161a7	      0xe800000000	                          call 0x40161ac	      8782	elf.c	FUNCTION_103
0x40161ac	              0xc9	                                   leave	      8782	elf.c	FUNCTION_103
0x40161ad	              0xc3	                                     ret	      8782	elf.c	FUNCTION_103
_bfd_elf_get_dynamic_reloc_upper_bound	ELSE,0:DO,0:CALL,7:WHILE,0:FOR,1:IF,2:SWITCH,0:functions,0	55
0x4014cac	              0x55	                                push rbp	      8208	elf.c	FUNCTION_95
0x4014cad	          0x4889e5	                            mov rbp, rsp	      8208	elf.c	FUNCTION_95
0x4014cb0	        0x4883ec20	                           sub rsp, 0x20	      8208	elf.c	FUNCTION_95
0x4014cb4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8208	elf.c	FUNCTION_95
0x4014cb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x4014cbc	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x4014cc3	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x4014cc9	            0x85c0	                           test eax, eax	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x4014ccb	            0x7516	                           jne 0x4014ce3	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x4014ccd	      0xbf05000000	                              mov edi, 5	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x4014cd2	      0xe800000000	                          call 0x4014cd7	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x4014cd7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8215	elf.c	FUNCTION_95	IF_1
0x4014cde	      0xe9b2000000	                           jmp 0x4014d95	      8215	elf.c	FUNCTION_95	IF_1
0x4014ce3	    0x48c745f00800	               mov qword [rbp - 0x10], 8	      8218	elf.c	FUNCTION_95
0x4014ceb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8219	elf.c	FUNCTION_95	FOR_1
0x4014cef	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      8219	elf.c	FUNCTION_95	FOR_1
0x4014cf6	        0x488945f8	                mov qword [rbp - 8], rax	      8219	elf.c	FUNCTION_95	FOR_1
0x4014cfa	      0xe987000000	                           jmp 0x4014d86	      8219	elf.c	FUNCTION_95	FOR_1
0x4014cff	        0x488b45f8	                mov rax, qword [rbp - 8]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d03	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d0a	          0x8b5028	            mov edx, dword [rax + 0x28] 	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d11	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d18	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d1e	            0x39c2	                            cmp edx, eax	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d20	            0x7558	                           jne 0x4014d7a	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x4014d22	        0x488b45f8	                mov rax, qword [rbp - 8]	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x4014d26	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x4014d2d	          0x8b4004	                mov eax, dword [rax + 4]	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x4014d30	          0x83f809	                              cmp eax, 9	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x4014d33	            0x7413	                            je 0x4014d48	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x4014d35	        0x488b45f8	                mov rax, qword [rbp - 8]	      8222	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_6
0x4014d39	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      8222	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_6
0x4014d40	          0x8b4004	                mov eax, dword [rax + 4]	      8222	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_6
0x4014d43	          0x83f804	                              cmp eax, 4	      8222	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_6
0x4014d46	            0x7532	                           jne 0x4014d7a	      8222	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_6
0x4014d48	        0x488b45f8	                mov rax, qword [rbp - 8]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d4c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d50	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d54	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d5b	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d5f	      0xba00000000	                              mov edx, 0	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d64	          0x48f7f1	                                 div rcx	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d67	    0x488d14c50000	                        lea rdx, [rax*8]	      8224	elf.c	FUNCTION_95	FOR_1	IF_2
0x4014d6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d73	          0x4801d0	                            add rax, rdx	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d76	        0x488945f0	             mov qword [rbp - 0x10], rax	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x4014d7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      8219	elf.c	FUNCTION_95	FOR_1
0x4014d7e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8219	elf.c	FUNCTION_95	FOR_1
0x4014d82	        0x488945f8	                mov qword [rbp - 8], rax	      8219	elf.c	FUNCTION_95	FOR_1
0x4014d86	      0x48837df800	                  cmp qword [rbp - 8], 0	      8219	elf.c	FUNCTION_95	FOR_1
0x4014d8b	     0xf856effffff	                           jne 0x4014cff	      8219	elf.c	FUNCTION_95	FOR_1
0x4014d91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8226	elf.c	FUNCTION_95
0x4014d95	              0xc9	                                   leave	      8227	elf.c	FUNCTION_95
0x4014d96	              0xc3	                                     ret	      8227	elf.c	FUNCTION_95
_bfd_elf_rel_local_sym	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	33
0x401af4d	              0x55	                                push rbp	     11310	elf.c	FUNCTION_197
0x401af4e	          0x4889e5	                            mov rbp, rsp	     11310	elf.c	FUNCTION_197
0x401af51	        0x4883ec30	                           sub rsp, 0x30	     11310	elf.c	FUNCTION_197
0x401af55	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11310	elf.c	FUNCTION_197
0x401af59	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11310	elf.c	FUNCTION_197
0x401af5d	        0x488955d8	             mov qword [rbp - 0x28], rdx	     11310	elf.c	FUNCTION_197
0x401af61	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     11310	elf.c	FUNCTION_197
0x401af65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11311	elf.c	FUNCTION_197
0x401af69	          0x488b00	                    mov rax, qword [rax]	     11311	elf.c	FUNCTION_197
0x401af6c	        0x488945f8	                mov qword [rbp - 8], rax	     11311	elf.c	FUNCTION_197
0x401af70	        0x488b45f8	                mov rax, qword [rbp - 8]	     11313	elf.c	FUNCTION_197	IF_1
0x401af74	         0xfb74024	           movzx eax, word [rax + 0x24] 	     11313	elf.c	FUNCTION_197	IF_1
0x401af78	        0x66258003	                           and ax, 0x380	     11313	elf.c	FUNCTION_197	IF_1
0x401af7c	        0x663d0001	                           cmp ax, 0x100	     11313	elf.c	FUNCTION_197	IF_1
0x401af80	            0x7410	                            je 0x401af92	     11313	elf.c	FUNCTION_197	IF_1
0x401af82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11314	elf.c	FUNCTION_197	IF_1
0x401af86	          0x488b10	                    mov rdx, qword [rax]	     11314	elf.c	FUNCTION_197	IF_1
0x401af89	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11314	elf.c	FUNCTION_197	IF_1
0x401af8d	          0x4801d0	                            add rax, rdx	     11314	elf.c	FUNCTION_197	IF_1
0x401af90	            0xeb31	                           jmp 0x401afc3	     11314	elf.c	FUNCTION_197	IF_1
0x401af92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11318	elf.c	FUNCTION_197
0x401af96	          0x488b10	                    mov rdx, qword [rax]	     11318	elf.c	FUNCTION_197
0x401af99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11316	elf.c	FUNCTION_197	CALL_1
0x401af9d	        0x488d0c02	                    lea rcx, [rdx + rax]	     11316	elf.c	FUNCTION_197	CALL_1
0x401afa1	        0x488b45f8	                mov rax, qword [rbp - 8]	     11317	elf.c	FUNCTION_197	CALL_2
0x401afa5	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	     11317	elf.c	FUNCTION_197	CALL_2
0x401afac	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11316	elf.c	FUNCTION_197	CALL_1
0x401afb3	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	     11316	elf.c	FUNCTION_197	CALL_1
0x401afb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11316	elf.c	FUNCTION_197	CALL_1
0x401afbb	          0x4889c7	                            mov rdi, rax	     11316	elf.c	FUNCTION_197	CALL_1
0x401afbe	      0xe800000000	                          call 0x401afc3	     11316	elf.c	FUNCTION_197	CALL_1
0x401afc3	              0xc9	                                   leave	     11319	elf.c	FUNCTION_197
0x401afc4	              0xc3	                                     ret	     11319	elf.c	FUNCTION_197
_bfd_elf_plt_get_reloc_section	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	37
0x4008cea	              0x55	                                push rbp	      3591	elf.c	FUNCTION_50
0x4008ceb	          0x4889e5	                            mov rbp, rsp	      3591	elf.c	FUNCTION_50
0x4008cee	        0x4883ec20	                           sub rsp, 0x20	      3591	elf.c	FUNCTION_50
0x4008cf2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3591	elf.c	FUNCTION_50
0x4008cf6	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3591	elf.c	FUNCTION_50
0x4008cfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4008cfe	        0x488b4008	                mov rax, qword [rax + 8]	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4008d02	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4008d09	     0xfb680890300	          movzx eax, byte [rax + 0x389] 	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4008d10	          0x83e002	                              and eax, 2	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4008d13	            0x84c0	                             test al, al	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4008d15	            0x7449	                            je 0x4008d60	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4008d17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4008d1b	      0xbe00000000	                              mov esi, 0	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4008d20	          0x4889c7	                            mov rdi, rax	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4008d23	      0xe800000000	                          call 0x4008d28	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4008d28	            0x85c0	                           test eax, eax	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4008d2a	            0x7534	                           jne 0x4008d60	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4008d2c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3599	elf.c	FUNCTION_50	IF_1
0x4008d34	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4008d38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4008d3c	          0x4889d6	                            mov rsi, rdx	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4008d3f	          0x4889c7	                            mov rdi, rax	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4008d42	      0xe800000000	                          call 0x4008d47	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4008d47	        0x488945f8	                mov qword [rbp - 8], rax	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4008d4b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x4008d50	            0x7406	                            je 0x4008d58	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x4008d52	        0x488b45f8	                mov rax, qword [rbp - 8]	      3602	elf.c	FUNCTION_50	IF_1	IF_2
0x4008d56	            0xeb1b	                           jmp 0x4008d73	      3602	elf.c	FUNCTION_50	IF_1	IF_2
0x4008d58	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3603	elf.c	FUNCTION_50	IF_1
0x4008d60	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3606	elf.c	FUNCTION_50	CALL_4
0x4008d64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3606	elf.c	FUNCTION_50	CALL_4
0x4008d68	          0x4889d6	                            mov rsi, rdx	      3606	elf.c	FUNCTION_50	CALL_4
0x4008d6b	          0x4889c7	                            mov rdi, rax	      3606	elf.c	FUNCTION_50	CALL_4
0x4008d6e	      0xe800000000	                          call 0x4008d73	      3606	elf.c	FUNCTION_50	CALL_4
0x4008d73	              0xc9	                                   leave	      3607	elf.c	FUNCTION_50
0x4008d74	              0xc3	                                     ret	      3607	elf.c	FUNCTION_50
_bfd_elf_swap_vernaux_in	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	58
0x4000bdd	              0x55	                                push rbp	       152	elf.c	FUNCTION_7
0x4000bde	          0x4889e5	                            mov rbp, rsp	       152	elf.c	FUNCTION_7
0x4000be1	        0x4883ec20	                           sub rsp, 0x20	       152	elf.c	FUNCTION_7
0x4000be5	        0x48897df8	                mov qword [rbp - 8], rdi	       152	elf.c	FUNCTION_7
0x4000be9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       152	elf.c	FUNCTION_7
0x4000bed	        0x488955e8	             mov qword [rbp - 0x18], rdx	       152	elf.c	FUNCTION_7
0x4000bf1	        0x488b45f8	                mov rax, qword [rbp - 8]	       153	elf.c	FUNCTION_7
0x4000bf5	        0x488b4008	                mov rax, qword [rax + 8]	       153	elf.c	FUNCTION_7
0x4000bf9	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       153	elf.c	FUNCTION_7
0x4000c00	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       153	elf.c	FUNCTION_7
0x4000c04	          0x4889d7	                            mov rdi, rdx	       153	elf.c	FUNCTION_7
0x4000c07	            0xffd0	                                call rax	       153	elf.c	FUNCTION_7
0x4000c09	          0x4889c2	                            mov rdx, rax	       153	elf.c	FUNCTION_7
0x4000c0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	elf.c	FUNCTION_7
0x4000c10	          0x488910	                    mov qword [rax], rdx	       153	elf.c	FUNCTION_7
0x4000c13	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	elf.c	FUNCTION_7
0x4000c17	        0x488b4008	                mov rax, qword [rax + 8]	       154	elf.c	FUNCTION_7
0x4000c1b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       154	elf.c	FUNCTION_7
0x4000c22	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       154	elf.c	FUNCTION_7
0x4000c26	        0x4883c204	                              add rdx, 4	       154	elf.c	FUNCTION_7
0x4000c2a	          0x4889d7	                            mov rdi, rdx	       154	elf.c	FUNCTION_7
0x4000c2d	            0xffd0	                                call rax	       154	elf.c	FUNCTION_7
0x4000c2f	            0x89c2	                            mov edx, eax	       154	elf.c	FUNCTION_7
0x4000c31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	elf.c	FUNCTION_7
0x4000c35	        0x66895008	                  mov word [rax + 8], dx	       154	elf.c	FUNCTION_7
0x4000c39	        0x488b45f8	                mov rax, qword [rbp - 8]	       155	elf.c	FUNCTION_7
0x4000c3d	        0x488b4008	                mov rax, qword [rax + 8]	       155	elf.c	FUNCTION_7
0x4000c41	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       155	elf.c	FUNCTION_7
0x4000c48	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       155	elf.c	FUNCTION_7
0x4000c4c	        0x4883c206	                              add rdx, 6	       155	elf.c	FUNCTION_7
0x4000c50	          0x4889d7	                            mov rdi, rdx	       155	elf.c	FUNCTION_7
0x4000c53	            0xffd0	                                call rax	       155	elf.c	FUNCTION_7
0x4000c55	            0x89c2	                            mov edx, eax	       155	elf.c	FUNCTION_7
0x4000c57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	elf.c	FUNCTION_7
0x4000c5b	        0x6689500a	                mov word [rax + 0xa], dx	       155	elf.c	FUNCTION_7
0x4000c5f	        0x488b45f8	                mov rax, qword [rbp - 8]	       156	elf.c	FUNCTION_7
0x4000c63	        0x488b4008	                mov rax, qword [rax + 8]	       156	elf.c	FUNCTION_7
0x4000c67	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       156	elf.c	FUNCTION_7
0x4000c6e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       156	elf.c	FUNCTION_7
0x4000c72	        0x4883c208	                              add rdx, 8	       156	elf.c	FUNCTION_7
0x4000c76	          0x4889d7	                            mov rdi, rdx	       156	elf.c	FUNCTION_7
0x4000c79	            0xffd0	                                call rax	       156	elf.c	FUNCTION_7
0x4000c7b	          0x4889c2	                            mov rdx, rax	       156	elf.c	FUNCTION_7
0x4000c7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       156	elf.c	FUNCTION_7
0x4000c82	        0x48895010	             mov qword [rax + 0x10], rdx	       156	elf.c	FUNCTION_7
0x4000c86	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	elf.c	FUNCTION_7
0x4000c8a	        0x488b4008	                mov rax, qword [rax + 8]	       157	elf.c	FUNCTION_7
0x4000c8e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       157	elf.c	FUNCTION_7
0x4000c95	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       157	elf.c	FUNCTION_7
0x4000c99	        0x4883c20c	                            add rdx, 0xc	       157	elf.c	FUNCTION_7
0x4000c9d	          0x4889d7	                            mov rdi, rdx	       157	elf.c	FUNCTION_7
0x4000ca0	            0xffd0	                                call rax	       157	elf.c	FUNCTION_7
0x4000ca2	          0x4889c2	                            mov rdx, rax	       157	elf.c	FUNCTION_7
0x4000ca5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	elf.c	FUNCTION_7
0x4000ca9	        0x48895018	             mov qword [rax + 0x18], rdx	       157	elf.c	FUNCTION_7
0x4000cad	              0x90	                                     nop	       158	elf.c	FUNCTION_7
0x4000cae	              0xc9	                                   leave	       158	elf.c	FUNCTION_7
0x4000caf	              0xc3	                                     ret	       158	elf.c	FUNCTION_7
group_signature	ELSE,0:DO,0:CALL,6:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	78
0x400193b	              0x55	                                push rbp	       558	elf.c	FUNCTION_20
0x400193c	          0x4889e5	                            mov rbp, rsp	       558	elf.c	FUNCTION_20
0x400193f	        0x4883ec70	                           sub rsp, 0x70	       558	elf.c	FUNCTION_20
0x4001943	        0x48897d98	             mov qword [rbp - 0x68], rdi	       558	elf.c	FUNCTION_20
0x4001947	        0x48897590	             mov qword [rbp - 0x70], rsi	       558	elf.c	FUNCTION_20
0x400194b	    0x64488b042528	                mov rax, qword fs:[0x28]	       558	elf.c	FUNCTION_20
0x4001954	        0x488945f8	                mov qword [rbp - 8], rax	       558	elf.c	FUNCTION_20
0x4001958	            0x31c0	                            xor eax, eax	       558	elf.c	FUNCTION_20
0x400195a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x400195e	          0x8b5028	            mov edx, dword [rax + 0x28] 	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4001961	        0x488b4598	             mov rax, qword [rbp - 0x68]	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4001965	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x400196c	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4001972	            0x39c2	                            cmp edx, eax	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4001974	            0x720a	                            jb 0x4001980	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4001976	      0xb800000000	                              mov eax, 0	       567	elf.c	FUNCTION_20	IF_1
0x400197b	      0xe9c7000000	                           jmp 0x4001a47	       567	elf.c	FUNCTION_20	IF_1
0x4001980	        0x488b4598	             mov rax, qword [rbp - 0x68]	       568	elf.c	FUNCTION_20	CALL_2
0x4001984	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       568	elf.c	FUNCTION_20	CALL_2
0x400198b	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       568	elf.c	FUNCTION_20	CALL_2
0x400198f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       568	elf.c	FUNCTION_20	CALL_2
0x4001993	          0x8b4028	            mov eax, dword [rax + 0x28] 	       568	elf.c	FUNCTION_20	CALL_2
0x4001996	            0x89c0	                            mov eax, eax	       568	elf.c	FUNCTION_20	CALL_2
0x4001998	        0x48c1e003	                              shl rax, 3	       568	elf.c	FUNCTION_20	CALL_2
0x400199c	          0x4801d0	                            add rax, rdx	       568	elf.c	FUNCTION_20	CALL_2
0x400199f	          0x488b00	                    mov rax, qword [rax]	       568	elf.c	FUNCTION_20	CALL_2
0x40019a2	        0x488945a8	             mov qword [rbp - 0x58], rax	       568	elf.c	FUNCTION_20	CALL_2
0x40019a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       569	elf.c	FUNCTION_20	IF_2
0x40019aa	          0x8b4004	                mov eax, dword [rax + 4]	       569	elf.c	FUNCTION_20	IF_2
0x40019ad	          0x83f802	                              cmp eax, 2	       569	elf.c	FUNCTION_20	IF_2
0x40019b0	            0x7519	                           jne 0x40019cb	       569	elf.c	FUNCTION_20	IF_2
0x40019b2	        0x488b4590	             mov rax, qword [rbp - 0x70]	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019b6	          0x8b5028	            mov edx, dword [rax + 0x28] 	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019b9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019bd	            0x89d6	                            mov esi, edx	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019bf	          0x4889c7	                            mov rdi, rax	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019c2	      0xe800000000	                          call 0x40019c7	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019c7	            0x85c0	                           test eax, eax	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019c9	            0x7507	                           jne 0x40019d2	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x40019cb	      0xb800000000	                              mov eax, 0	       571	elf.c	FUNCTION_20	IF_2
0x40019d0	            0xeb75	                           jmp 0x4001a47	       571	elf.c	FUNCTION_20	IF_2
0x40019d2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       574	elf.c	FUNCTION_20	CALL_4
0x40019d6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       574	elf.c	FUNCTION_20	CALL_4
0x40019dd	        0x4883c068	                           add rax, 0x68	       574	elf.c	FUNCTION_20	CALL_4
0x40019e1	        0x488945a8	             mov qword [rbp - 0x58], rax	       574	elf.c	FUNCTION_20	CALL_4
0x40019e5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40019e9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40019ec	          0x4189c2	                           mov r10d, eax	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40019ef	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40019f3	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40019f7	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40019fb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40019ff	        0x4883ec08	                              sub rsp, 8	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a03	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a07	              0x52	                                push rdx	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a08	          0x4989f9	                             mov r9, rdi	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a0b	          0x4989c8	                             mov r8, rcx	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a0e	          0x4c89d1	                            mov rcx, r10	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a11	      0xba01000000	                              mov edx, 1	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a16	          0x4889c7	                            mov rdi, rax	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a19	      0xe800000000	                          call 0x4001a1e	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a1e	        0x4883c410	                           add rsp, 0x10	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a22	          0x4885c0	                           test rax, rax	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a25	            0x7507	                           jne 0x4001a2e	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4001a27	      0xb800000000	                              mov eax, 0	       577	elf.c	FUNCTION_20	IF_3
0x4001a2c	            0xeb19	                           jmp 0x4001a47	       577	elf.c	FUNCTION_20	IF_3
0x4001a2e	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       579	elf.c	FUNCTION_20	CALL_6
0x4001a32	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       579	elf.c	FUNCTION_20	CALL_6
0x4001a36	        0x488b4598	             mov rax, qword [rbp - 0x68]	       579	elf.c	FUNCTION_20	CALL_6
0x4001a3a	      0xb900000000	                              mov ecx, 0	       579	elf.c	FUNCTION_20	CALL_6
0x4001a3f	          0x4889c7	                            mov rdi, rax	       579	elf.c	FUNCTION_20	CALL_6
0x4001a42	      0xe800000000	                          call 0x4001a47	       579	elf.c	FUNCTION_20	CALL_6
0x4001a47	        0x488b4df8	                mov rcx, qword [rbp - 8]	       580	elf.c	FUNCTION_20
0x4001a4b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       580	elf.c	FUNCTION_20
0x4001a54	            0x7405	                            je 0x4001a5b	       580	elf.c	FUNCTION_20
0x4001a56	      0xe800000000	                          call 0x4001a5b	       580	elf.c	FUNCTION_20
0x4001a5b	              0xc9	                                   leave	       580	elf.c	FUNCTION_20
0x4001a5c	              0xc3	                                     ret	       580	elf.c	FUNCTION_20
elf_modify_segment_map	ELSE,1:DO,0:CALL,2:WHILE,1:FOR,1:IF,4:SWITCH,0:functions,0	111
0x400aeab	              0x55	                                push rbp	      4523	elf.c	FUNCTION_64
0x400aeac	          0x4889e5	                            mov rbp, rsp	      4523	elf.c	FUNCTION_64
0x400aeaf	        0x4883ec40	                           sub rsp, 0x40	      4523	elf.c	FUNCTION_64
0x400aeb3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4523	elf.c	FUNCTION_64
0x400aeb7	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4523	elf.c	FUNCTION_64
0x400aebb	          0x8955cc	             mov dword [rbp - 0x34], edx	      4523	elf.c	FUNCTION_64
0x400aebe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4532	elf.c	FUNCTION_64	CALL_1
0x400aec2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4532	elf.c	FUNCTION_64	CALL_1
0x400aec9	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4532	elf.c	FUNCTION_64	CALL_1
0x400aed0	        0x488945f0	             mov qword [rbp - 0x10], rax	      4532	elf.c	FUNCTION_64	CALL_1
0x400aed4	      0xe900010000	                           jmp 0x400afd9	      4533	elf.c	FUNCTION_64	WHILE_1
0x400aed9	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400aee0	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400aee7	            0xeb7b	                           jmp 0x400af64	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400aee9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400aeed	          0x488b00	                    mov rax, qword [rax]	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400aef0	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400aef3	        0x4883c208	                              add rdx, 8	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400aef7	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400aefc	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400aeff	      0x2500800000	                         and eax, 0x8000	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af04	            0x85c0	                           test eax, eax	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af06	            0x7558	                           jne 0x400af60	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af0c	          0x488b00	                    mov rax, qword [rax]	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af0f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af12	        0x4883c208	                              add rdx, 8	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af16	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af1b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af1e	          0x83e001	                              and eax, 1	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af21	            0x85c0	                           test eax, eax	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af23	            0x7511	                           jne 0x400af36	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af29	          0x488b00	                    mov rax, qword [rax]	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af2c	        0x488b4008	                mov rax, qword [rax + 8]	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af30	        0x4883f801	                              cmp rax, 1	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af34	            0x742a	                            je 0x400af60	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af3a	          0x488b00	                    mov rax, qword [rax]	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af3d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af41	          0x488b12	                    mov rdx, qword [rdx]	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af44	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af47	        0x4883c108	                              add rcx, 8	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af4b	      0x488b54ca08	       mov rdx, qword [rdx + rcx*8 + 8] 	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af50	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af53	        0x4883c108	                              add rcx, 8	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af57	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af5c	        0x8345ec01	               add dword [rbp - 0x14], 1	      4544	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400af60	        0x8345e801	               add dword [rbp - 0x18], 1	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400af64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400af68	          0x488b00	                    mov rax, qword [rax]	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400af6b	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400af6e	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400af71	     0xf8772ffffff	                            ja 0x400aee9	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400af77	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4547	elf.c	FUNCTION_64	WHILE_1
0x400af7b	          0x488b00	                    mov rax, qword [rax]	      4547	elf.c	FUNCTION_64	WHILE_1
0x400af7e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4547	elf.c	FUNCTION_64	WHILE_1
0x400af81	          0x895044	             mov dword [rax + 0x44], edx	      4547	elf.c	FUNCTION_64	WHILE_1
0x400af84	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af88	            0x7444	                            je 0x400afce	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af8a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af8e	          0x488b00	                    mov rax, qword [rax]	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af91	        0x488b4008	                mov rax, qword [rax + 8]	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af95	        0x4883f801	                              cmp rax, 1	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af99	            0x7533	                           jne 0x400afce	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4551	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400af9f	          0x488b00	                    mov rax, qword [rax]	      4551	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afa2	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4551	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afa5	            0x85c0	                           test eax, eax	      4551	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afa7	            0x7525	                           jne 0x400afce	      4551	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afa9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afad	          0x488b00	                    mov rax, qword [rax]	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afb0	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afb4	          0x83e020	                           and eax, 0x20	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afb7	            0x84c0	                             test al, al	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afb9	            0x7513	                           jne 0x400afce	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afbb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afbf	          0x488b00	                    mov rax, qword [rax]	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afc2	          0x488b10	                    mov rdx, qword [rax]	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afc5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afc9	          0x488910	                    mov qword [rax], rdx	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afcc	            0xeb0b	                           jmp 0x400afd9	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400afce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x400afd2	          0x488b00	                    mov rax, qword [rax]	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x400afd5	        0x488945f0	             mov qword [rbp - 0x10], rax	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x400afd9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4533	elf.c	FUNCTION_64	WHILE_1
0x400afdd	          0x488b00	                    mov rax, qword [rax]	      4533	elf.c	FUNCTION_64	WHILE_1
0x400afe0	          0x4885c0	                           test rax, rax	      4533	elf.c	FUNCTION_64	WHILE_1
0x400afe3	     0xf85f0feffff	                           jne 0x400aed9	      4533	elf.c	FUNCTION_64	WHILE_1
0x400afe9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4558	elf.c	FUNCTION_64	CALL_2
0x400afed	        0x488b4008	                mov rax, qword [rax + 8]	      4558	elf.c	FUNCTION_64	CALL_2
0x400aff1	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4558	elf.c	FUNCTION_64	CALL_2
0x400aff8	        0x488945f8	                mov qword [rbp - 8], rax	      4558	elf.c	FUNCTION_64	CALL_2
0x400affc	        0x488b45f8	                mov rax, qword [rbp - 8]	      4559	elf.c	FUNCTION_64	IF_3
0x400b000	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      4559	elf.c	FUNCTION_64	IF_3
0x400b007	          0x4885c0	                           test rax, rax	      4559	elf.c	FUNCTION_64	IF_3
0x400b00a	            0x7426	                            je 0x400b032	      4559	elf.c	FUNCTION_64	IF_3
0x400b00c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b010	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b017	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b01b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b01f	          0x4889ce	                            mov rsi, rcx	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b022	          0x4889d7	                            mov rdi, rdx	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b025	            0xffd0	                                call rax	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b027	            0x85c0	                           test eax, eax	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b029	            0x7507	                           jne 0x400b032	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400b02b	      0xb800000000	                              mov eax, 0	      4562	elf.c	FUNCTION_64	IF_3	IF_4
0x400b030	            0xeb05	                           jmp 0x400b037	      4562	elf.c	FUNCTION_64	IF_3	IF_4
0x400b032	      0xb801000000	                              mov eax, 1	      4565	elf.c	FUNCTION_64
0x400b037	              0xc9	                                   leave	      4566	elf.c	FUNCTION_64
0x400b038	              0xc3	                                     ret	      4566	elf.c	FUNCTION_64
_bfd_elf_filter_global_symbols	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,1:IF,4:SWITCH,0:functions,0	83
0x4009e22	              0x55	                                push rbp	      4003	elf.c	FUNCTION_54
0x4009e23	          0x4889e5	                            mov rbp, rsp	      4003	elf.c	FUNCTION_54
0x4009e26	        0x4883ec50	                           sub rsp, 0x50	      4003	elf.c	FUNCTION_54
0x4009e2a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4003	elf.c	FUNCTION_54
0x4009e2e	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4003	elf.c	FUNCTION_54
0x4009e32	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4003	elf.c	FUNCTION_54
0x4009e36	        0x48894db0	             mov qword [rbp - 0x50], rcx	      4003	elf.c	FUNCTION_54
0x4009e3a	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4004	elf.c	FUNCTION_54
0x4009e42	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4006	elf.c	FUNCTION_54	FOR_1
0x4009e4a	      0xe9d9000000	                           jmp 0x4009f28	      4006	elf.c	FUNCTION_54	FOR_1
0x4009e4f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4008	elf.c	FUNCTION_54	FOR_1
0x4009e53	    0x488d14c50000	                        lea rdx, [rax*8]	      4008	elf.c	FUNCTION_54	FOR_1
0x4009e5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4008	elf.c	FUNCTION_54	FOR_1
0x4009e5f	          0x4801d0	                            add rax, rdx	      4008	elf.c	FUNCTION_54	FOR_1
0x4009e62	          0x488b00	                    mov rax, qword [rax]	      4008	elf.c	FUNCTION_54	FOR_1
0x4009e65	        0x488945e8	             mov qword [rbp - 0x18], rax	      4008	elf.c	FUNCTION_54	FOR_1
0x4009e69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4009	elf.c	FUNCTION_54	FOR_1
0x4009e6d	        0x488b4008	                mov rax, qword [rax + 8]	      4009	elf.c	FUNCTION_54	FOR_1
0x4009e71	        0x488945f0	             mov qword [rbp - 0x10], rax	      4009	elf.c	FUNCTION_54	FOR_1
0x4009e75	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4009e79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4009e7d	          0x4889d6	                            mov rsi, rdx	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4009e80	          0x4889c7	                            mov rdi, rax	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4009e83	      0xe80dffffff	                  call sym.sym_is_global	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4009e88	            0x85c0	                           test eax, eax	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4009e8a	     0xf8489000000	                            je 0x4009f19	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4009e90	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009e94	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009e98	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009e9c	    0x41b800000000	                              mov r8d, 0	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009ea2	      0xb900000000	                              mov ecx, 0	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009ea7	      0xba00000000	                              mov edx, 0	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009eac	          0x4889c7	                            mov rdi, rax	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009eaf	      0xe800000000	                          call 0x4009eb4	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009eb4	        0x488945f8	                mov qword [rbp - 8], rax	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4009eb8	      0x48837df800	                  cmp qword [rbp - 8], 0	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x4009ebd	            0x745d	                            je 0x4009f1c	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x4009ebf	        0x488b45f8	                mov rax, qword [rbp - 8]	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ec3	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ec7	            0x3c03	                               cmp al, 3	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ec9	            0x740c	                            je 0x4009ed7	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ecb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ecf	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ed3	            0x3c04	                               cmp al, 4	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ed5	            0x7548	                           jne 0x4009f1f	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009ed7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009edb	         0xfb64019	           movzx eax, byte [rax + 0x19] 	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009edf	          0x83e004	                              and eax, 4	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009ee2	            0x84c0	                             test al, al	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009ee4	            0x753c	                           jne 0x4009f22	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009ee6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009eea	         0xfb64019	           movzx eax, byte [rax + 0x19] 	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009eee	          0x83e008	                              and eax, 8	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009ef1	            0x84c0	                             test al, al	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009ef3	            0x752d	                           jne 0x4009f22	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009ef5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4023	elf.c	FUNCTION_54	FOR_1
0x4009ef9	        0x488d5001	                      lea rdx, [rax + 1]	      4023	elf.c	FUNCTION_54	FOR_1
0x4009efd	        0x488955e0	             mov qword [rbp - 0x20], rdx	      4023	elf.c	FUNCTION_54	FOR_1
0x4009f01	    0x488d14c50000	                        lea rdx, [rax*8]	      4023	elf.c	FUNCTION_54	FOR_1
0x4009f09	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4023	elf.c	FUNCTION_54	FOR_1
0x4009f0d	          0x4801c2	                            add rdx, rax	      4023	elf.c	FUNCTION_54	FOR_1
0x4009f10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4023	elf.c	FUNCTION_54	FOR_1
0x4009f14	          0x488902	                    mov qword [rdx], rax	      4023	elf.c	FUNCTION_54	FOR_1
0x4009f17	            0xeb0a	                           jmp 0x4009f23	      4023	elf.c	FUNCTION_54	FOR_1
0x4009f19	              0x90	                                     nop	      4013	elf.c	FUNCTION_54	FOR_1	IF_1
0x4009f1a	            0xeb07	                           jmp 0x4009f23	      4013	elf.c	FUNCTION_54	FOR_1	IF_1
0x4009f1c	              0x90	                                     nop	      4017	elf.c	FUNCTION_54	FOR_1	IF_2
0x4009f1d	            0xeb04	                           jmp 0x4009f23	      4017	elf.c	FUNCTION_54	FOR_1	IF_2
0x4009f1f	              0x90	                                     nop	      4019	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009f20	            0xeb01	                           jmp 0x4009f23	      4019	elf.c	FUNCTION_54	FOR_1	IF_3
0x4009f22	              0x90	                                     nop	      4021	elf.c	FUNCTION_54	FOR_1	IF_4
0x4009f23	      0x488345d801	               add qword [rbp - 0x28], 1	      4006	elf.c	FUNCTION_54	FOR_1
0x4009f28	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4006	elf.c	FUNCTION_54	FOR_1
0x4009f2c	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      4006	elf.c	FUNCTION_54	FOR_1
0x4009f30	     0xf8c19ffffff	                            jl 0x4009e4f	      4006	elf.c	FUNCTION_54	FOR_1
0x4009f36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4026	elf.c	FUNCTION_54
0x4009f3a	    0x488d14c50000	                        lea rdx, [rax*8]	      4026	elf.c	FUNCTION_54
0x4009f42	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4026	elf.c	FUNCTION_54
0x4009f46	          0x4801d0	                            add rax, rdx	      4026	elf.c	FUNCTION_54
0x4009f49	    0x48c700000000	                      mov qword [rax], 0	      4026	elf.c	FUNCTION_54
0x4009f50	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4028	elf.c	FUNCTION_54
0x4009f54	              0xc9	                                   leave	      4029	elf.c	FUNCTION_54
0x4009f55	              0xc3	                                     ret	      4029	elf.c	FUNCTION_54
elfcore_make_pid	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	18
0x4016789	              0x55	                                push rbp	      9031	elf.c	FUNCTION_112
0x401678a	          0x4889e5	                            mov rbp, rsp	      9031	elf.c	FUNCTION_112
0x401678d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9031	elf.c	FUNCTION_112
0x4016791	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9034	elf.c	FUNCTION_112	CALL_1
0x4016795	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9034	elf.c	FUNCTION_112	CALL_1
0x401679c	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9034	elf.c	FUNCTION_112	CALL_1
0x40167a3	          0x8b4008	                mov eax, dword [rax + 8]	      9034	elf.c	FUNCTION_112	CALL_1
0x40167a6	          0x8945fc	                mov dword [rbp - 4], eax	      9034	elf.c	FUNCTION_112	CALL_1
0x40167a9	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9035	elf.c	FUNCTION_112	IF_1
0x40167ad	            0x7518	                           jne 0x40167c7	      9035	elf.c	FUNCTION_112	IF_1
0x40167af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9036	elf.c	FUNCTION_112	CALL_2
0x40167b3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9036	elf.c	FUNCTION_112	CALL_2
0x40167ba	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9036	elf.c	FUNCTION_112	CALL_2
0x40167c1	          0x8b4004	                mov eax, dword [rax + 4]	      9036	elf.c	FUNCTION_112	CALL_2
0x40167c4	          0x8945fc	                mov dword [rbp - 4], eax	      9036	elf.c	FUNCTION_112	CALL_2
0x40167c7	          0x8b45fc	                mov eax, dword [rbp - 4]	      9038	elf.c	FUNCTION_112
0x40167ca	              0x5d	                                 pop rbp	      9039	elf.c	FUNCTION_112
0x40167cb	              0xc3	                                     ret	      9039	elf.c	FUNCTION_112
_bfd_elf_slurp_version_tables	ELSE,5:DO,0:CALL,53:WHILE,0:FOR,5:IF,46:SWITCH,0:functions,0	763
0x4014f1b	              0x55	                                push rbp	      8282	elf.c	FUNCTION_97
0x4014f1c	          0x4889e5	                            mov rbp, rsp	      8282	elf.c	FUNCTION_97
0x4014f1f	              0x53	                                push rbx	      8282	elf.c	FUNCTION_97
0x4014f20	    0x4881ec080100	                          sub rsp, 0x108	      8282	elf.c	FUNCTION_97
0x4014f27	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	      8282	elf.c	FUNCTION_97
0x4014f2e	    0x89b5f4feffff	            mov dword [rbp - 0x10c], esi	      8282	elf.c	FUNCTION_97
0x4014f34	    0x64488b042528	                mov rax, qword fs:[0x28]	      8282	elf.c	FUNCTION_97
0x4014f3d	        0x488945e8	             mov qword [rbp - 0x18], rax	      8282	elf.c	FUNCTION_97
0x4014f41	            0x31c0	                            xor eax, eax	      8282	elf.c	FUNCTION_97
0x4014f43	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      8283	elf.c	FUNCTION_97
0x4014f4e	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	      8284	elf.c	FUNCTION_97
0x4014f58	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x4014f5f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x4014f66	    0x8b80880c0000	           mov eax, dword [rax + 0xc88] 	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x4014f6c	            0x85c0	                           test eax, eax	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x4014f6e	     0xf8491050000	                            je 0x4015505	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x4014f74	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8294	elf.c	FUNCTION_97	IF_1	CALL_2
0x4014f7b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8294	elf.c	FUNCTION_97	IF_1	CALL_2
0x4014f82	    0x480548020000	                          add rax, 0x248	      8294	elf.c	FUNCTION_97	IF_1	CALL_2
0x4014f88	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      8294	elf.c	FUNCTION_97	IF_1	CALL_2
0x4014f8f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x4014f96	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x4014f99	            0x85c0	                           test eax, eax	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x4014f9b	            0x7433	                            je 0x4014fd0	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x4014f9d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fa4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fa7	            0x89c2	                            mov edx, eax	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fa9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fb0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fb4	        0x48c1e804	                              shr rax, 4	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fb8	          0x4839c2	                            cmp rdx, rax	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fbb	     0xf8681000000	                           jbe 0x4015042	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fc1	            0xeb0d	                           jmp 0x4014fd0	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x4014fc3	              0x90	                                     nop	      8342	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x4014fc4	            0xeb0a	                           jmp 0x4014fd0	      8342	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x4014fc6	              0x90	                                     nop	      8357	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4014fc7	            0xeb07	                           jmp 0x4014fd0	      8357	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4014fc9	              0x90	                                     nop	      8370	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x4014fca	            0xeb04	                           jmp 0x4014fd0	      8370	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x4014fcc	              0x90	                                     nop	      8386	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x4014fcd	            0xeb01	                           jmp 0x4014fd0	      8386	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x4014fcf	              0x90	                                     nop	      8400	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x4014fd0	      0xbe00000000	                              mov esi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x4014fd5	      0xbf00000000	                              mov edi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x4014fda	      0xe800000000	                          call 0x4014fdf	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x4014fdf	          0x4889c2	                            mov rdx, rax	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x4014fe2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x4014fe9	          0x4889c6	                            mov rsi, rax	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x4014fec	          0x4889d7	                            mov rdi, rdx	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x4014fef	      0xb800000000	                              mov eax, 0	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x4014ff4	      0xe800000000	                          call 0x4014ff9	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x4014ff9	      0xbf11000000	                           mov edi, 0x11	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x4014ffe	      0xe800000000	                          call 0x4015003	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x4015003	            0xeb07	                           jmp 0x401500c	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x4015005	              0x90	                                     nop	      8311	elf.c	FUNCTION_97	IF_1	IF_3
0x4015006	            0xeb04	                           jmp 0x401500c	      8311	elf.c	FUNCTION_97	IF_1	IF_3
0x4015008	              0x90	                                     nop	      8321	elf.c	FUNCTION_97	IF_1	IF_5
0x4015009	            0xeb01	                           jmp 0x401500c	      8321	elf.c	FUNCTION_97	IF_1	IF_5
0x401500b	              0x90	                                     nop	      8352	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x401500c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8304	elf.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x4015013	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8304	elf.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x401501a	    0x48c780500300	              mov qword [rax + 0x350], 0	      8304	elf.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x4015025	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x401502c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x4015033	    0xc78044030000	              mov dword [rax + 0x344], 0	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x401503d	      0xe9f50c0000	                           jmp 0x4015d37	      8306	elf.c	FUNCTION_97	IF_1	IF_2
0x4015042	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x4015049	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x401504d	          0x4889c7	                            mov rdi, rax	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x4015050	      0xe800000000	                          call 0x4015055	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x4015055	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x401505c	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x4015064	            0x749f	                            je 0x4015005	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x4015066	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x401506d	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x4015071	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x4015078	      0xba00000000	                              mov edx, 0	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x401507d	          0x4889ce	                            mov rsi, rcx	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x4015080	          0x4889c7	                            mov rdi, rax	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x4015083	      0xe800000000	                          call 0x4015088	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x4015088	            0x85c0	                           test eax, eax	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x401508a	            0x7580	                           jne 0x401500c	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x401508c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x4015093	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x4015097	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x401509e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150a5	          0x4889ce	                            mov rsi, rcx	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150a8	          0x4889c7	                            mov rdi, rax	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150ab	      0xe800000000	                          call 0x40150b0	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150b0	          0x4889c2	                            mov rdx, rax	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150b3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150ba	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150be	          0x4839c2	                            cmp rdx, rax	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150c1	     0xf8545ffffff	                           jne 0x401500c	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x40150c7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x40150ce	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x40150d5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150dc	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150df	            0x89c1	                            mov ecx, eax	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150e1	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150e8	      0xba40000000	                           mov edx, 0x40	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150ed	          0x4889ce	                            mov rsi, rcx	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150f0	          0x4889c7	                            mov rdi, rax	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150f3	      0xe800000000	                          call 0x40150f8	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x40150f8	    0x488983500300	            mov qword [rbx + 0x350], rax	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x40150ff	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x4015106	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x401510d	    0x488b80500300	           mov rax, qword [rax + 0x350] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x4015114	          0x4885c0	                           test rax, rax	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x4015117	     0xf84ebfeffff	                            je 0x4015008	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x401511d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8325	elf.c	FUNCTION_97	IF_1
0x4015124	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8325	elf.c	FUNCTION_97	IF_1
0x4015128	        0x488d50f0	                   lea rdx, [rax - 0x10]	      8325	elf.c	FUNCTION_97	IF_1
0x401512c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8325	elf.c	FUNCTION_97	IF_1
0x4015133	          0x4801d0	                            add rax, rdx	      8325	elf.c	FUNCTION_97	IF_1
0x4015136	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      8325	elf.c	FUNCTION_97	IF_1
0x401513d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8326	elf.c	FUNCTION_97	IF_1
0x4015144	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      8326	elf.c	FUNCTION_97	IF_1
0x401514b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8327	elf.c	FUNCTION_97	IF_1	CALL_15
0x4015152	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8327	elf.c	FUNCTION_97	IF_1	CALL_15
0x4015159	    0x488b80500300	           mov rax, qword [rax + 0x350] 	      8327	elf.c	FUNCTION_97	IF_1	CALL_15
0x4015160	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      8327	elf.c	FUNCTION_97	IF_1	CALL_15
0x4015167	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x4015171	      0xe942030000	                           jmp 0x40154b8	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x4015176	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x401517d	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x4015184	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x401518b	          0x4889ce	                            mov rsi, rcx	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x401518e	          0x4889c7	                            mov rdi, rax	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x4015191	      0xe800000000	                          call 0x4015196	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x4015196	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8336	elf.c	FUNCTION_97	IF_1	FOR_1
0x401519d	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      8336	elf.c	FUNCTION_97	IF_1	FOR_1
0x40151a4	        0x48895020	             mov qword [rax + 0x20], rdx	      8336	elf.c	FUNCTION_97	IF_1	FOR_1
0x40151a8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8340	elf.c	FUNCTION_97	IF_1	FOR_1
0x40151af	        0x488b4008	                mov rax, qword [rax + 8]	      8340	elf.c	FUNCTION_97	IF_1	FOR_1
0x40151b3	            0x89c2	                            mov edx, eax	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151b5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151bc	          0x8b4828	            mov ecx, dword [rax + 0x28] 	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151bf	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151c6	            0x89ce	                            mov esi, ecx	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151c8	          0x4889c7	                            mov rdi, rax	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151cb	      0xe800000000	                          call 0x40151d0	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151d0	          0x4889c2	                            mov rdx, rax	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x40151d3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8338	elf.c	FUNCTION_97	IF_1	FOR_1
0x40151da	        0x48895028	             mov qword [rax + 0x28], rdx	      8338	elf.c	FUNCTION_97	IF_1	FOR_1
0x40151de	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x40151e5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x40151e9	          0x4885c0	                           test rax, rax	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x40151ec	     0xf84d1fdffff	                            je 0x4014fc3	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x40151f2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x40151f9	         0xfb74002	               movzx eax, word [rax + 2]	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x40151fd	          0x6685c0	                             test ax, ax	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x4015200	            0x7511	                           jne 0x4015213	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x4015202	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8345	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x4015209	    0x48c740300000	               mov qword [rax + 0x30], 0	      8345	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x4015211	            0xeb47	                           jmp 0x401525a	      8345	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x4015213	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x401521a	         0xfb74002	               movzx eax, word [rax + 2]	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x401521e	           0xfb7c8	                           movzx ecx, ax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x4015221	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x4015228	      0xba30000000	                           mov edx, 0x30	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x401522d	          0x4889ce	                            mov rsi, rcx	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x4015230	          0x4889c7	                            mov rdi, rax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x4015233	      0xe800000000	                          call 0x4015238	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x4015238	          0x4889c2	                            mov rdx, rax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x401523b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8348	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1
0x4015242	        0x48895030	             mov qword [rax + 0x30], rdx	      8348	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1
0x4015246	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x401524d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x4015251	          0x4885c0	                           test rax, rax	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x4015254	     0xf84b1fdffff	                            je 0x401500b	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x401525a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4015261	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4015265	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x401526c	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4015273	          0x4829d1	                            sub rcx, rdx	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4015276	          0x4889ca	                            mov rdx, rcx	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4015279	          0x4839d0	                            cmp rax, rdx	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x401527c	     0xf8744fdffff	                            ja 0x4014fc6	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x4015282	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8360	elf.c	FUNCTION_97	IF_1	FOR_1
0x4015289	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8360	elf.c	FUNCTION_97	IF_1	FOR_1
0x401528d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      8359	elf.c	FUNCTION_97	IF_1	FOR_1
0x4015294	          0x4801d0	                            add rax, rdx	      8359	elf.c	FUNCTION_97	IF_1	FOR_1
0x4015297	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      8359	elf.c	FUNCTION_97	IF_1	FOR_1
0x401529e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8361	elf.c	FUNCTION_97	IF_1	FOR_1
0x40152a5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8361	elf.c	FUNCTION_97	IF_1	FOR_1
0x40152a9	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      8361	elf.c	FUNCTION_97	IF_1	FOR_1
0x40152b0	    0xc78508ffffff	               mov dword [rbp - 0xf8], 0	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40152ba	      0xe946010000	                           jmp 0x4015405	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40152bf	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x40152c6	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x40152cd	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x40152d4	          0x4889ce	                            mov rsi, rcx	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x40152d7	          0x4889c7	                            mov rdi, rax	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x40152da	      0xe800000000	                          call 0x40152df	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x40152df	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8368	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40152e6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8368	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40152ea	            0x89c2	                            mov edx, eax	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x40152ec	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x40152f3	          0x8b4828	            mov ecx, dword [rax + 0x28] 	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x40152f6	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x40152fd	            0x89ce	                            mov esi, ecx	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x40152ff	          0x4889c7	                            mov rdi, rax	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x4015302	      0xe800000000	                          call 0x4015307	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x4015307	          0x4889c2	                            mov rdx, rax	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x401530a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8366	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x4015311	        0x48895020	             mov qword [rax + 0x20], rdx	      8366	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x4015315	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x401531c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x4015320	          0x4885c0	                           test rax, rax	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x4015323	     0xf84a0fcffff	                            je 0x4014fc9	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x4015329	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x4015330	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x4015334	           0xfb7c0	                           movzx eax, ax	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x4015337	    0x3b8500ffffff	            cmp eax, dword [rbp - 0x100]	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x401533d	            0x7614	                           jbe 0x4015353	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x401533f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8373	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x4015346	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      8373	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x401534a	           0xfb7c0	                           movzx eax, ax	      8373	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x401534d	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      8373	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x4015353	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x401535a	    0x48c740280000	               mov qword [rax + 0x28], 0	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x4015362	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x4015369	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x401536d	          0x4885c0	                           test rax, rax	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x4015370	            0x7519	                           jne 0x401538b	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x4015372	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x4015378	          0x8d5001	                      lea edx, [rax + 1]	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x401537b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x4015382	        0x66895002	                  mov word [rax + 2], dx	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x4015386	      0xe994000000	                           jmp 0x401541f	      8379	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x401538b	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x4015391	          0x8d5001	                      lea edx, [rax + 1]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x4015394	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x401539b	         0xfb74002	               movzx eax, word [rax + 2]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x401539f	           0xfb7c0	                           movzx eax, ax	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x40153a2	            0x39c2	                            cmp edx, eax	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x40153a4	            0x7316	                           jae 0x40153bc	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x40153a6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x40153ad	        0x488d5030	                   lea rdx, [rax + 0x30]	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x40153b1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x40153b8	        0x48895028	             mov qword [rax + 0x28], rdx	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x40153bc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153c3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153c7	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      8385	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153ce	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      8385	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153d5	          0x4829d1	                            sub rcx, rdx	      8385	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153d8	          0x4889ca	                            mov rdx, rcx	      8385	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153db	          0x4839d0	                            cmp rax, rdx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153de	     0xf87e8fbffff	                            ja 0x4014fcc	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x40153e4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      8389	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40153eb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8389	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40153ef	    0x48018530ffff	            add qword [rbp - 0xd0], rax 	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40153f6	    0x838508ffffff	               add dword [rbp - 0xf8], 1	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x40153fd	    0x48838538ffff	           add qword [rbp - 0xc8], 0x30 	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x4015405	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x401540c	         0xfb74002	               movzx eax, word [rax + 2]	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x4015410	           0xfb7c0	                           movzx eax, ax	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x4015413	    0x3b8508ffffff	             cmp eax, dword [rbp - 0xf8]	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x4015419	     0xf87a0feffff	                            ja 0x40152bf	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x401541f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8392	elf.c	FUNCTION_97	IF_1	FOR_1
0x4015426	    0x48c740380000	               mov qword [rax + 0x38], 0	      8392	elf.c	FUNCTION_97	IF_1	FOR_1
0x401542e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x4015435	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x4015439	          0x4885c0	                           test rax, rax	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x401543c	     0xf848e000000	                            je 0x40154d0	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x4015442	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x4015448	          0x8d5001	                      lea edx, [rax + 1]	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x401544b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x4015452	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x4015455	            0x39c2	                            cmp edx, eax	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x4015457	            0x7316	                           jae 0x401546f	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x4015459	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x4015460	        0x488d5040	                   lea rdx, [rax + 0x40]	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x4015464	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x401546b	        0x48895038	             mov qword [rax + 0x38], rdx	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x401546f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x4015476	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x401547a	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      8399	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x4015481	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      8399	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x4015488	          0x4829d1	                            sub rcx, rdx	      8399	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x401548b	          0x4889ca	                            mov rdx, rcx	      8399	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x401548e	          0x4839d0	                            cmp rax, rdx	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x4015491	     0xf8738fbffff	                            ja 0x4014fcf	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x4015497	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      8403	elf.c	FUNCTION_97	IF_1	FOR_1
0x401549e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8403	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154a2	    0x48018520ffff	            add qword [rbp - 0xe0], rax 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154a9	    0x838504ffffff	               add dword [rbp - 0xfc], 1	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154b0	    0x48838528ffff	           add qword [rbp - 0xd8], 0x40 	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154b8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154bf	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154c2	    0x3b8504ffffff	             cmp eax, dword [rbp - 0xfc]	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154c8	     0xf87a8fcffff	                            ja 0x4015176	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154ce	            0xeb01	                           jmp 0x40154d1	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x40154d0	              0x90	                                     nop	      8394	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x40154d1	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x40154d8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x40154df	    0x8b9504ffffff	             mov edx, dword [rbp - 0xfc]	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x40154e5	    0x899044030000	            mov dword [rax + 0x344], edx	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x40154eb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x40154f2	          0x4889c7	                            mov rdi, rax	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x40154f5	      0xe800000000	                          call 0x40154fa	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x40154fa	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      8408	elf.c	FUNCTION_97	IF_1
0x4015505	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x401550c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x4015513	    0x8b80840c0000	           mov eax, dword [rax + 0xc84] 	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x4015519	            0x85c0	                           test eax, eax	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x401551b	     0xf847a060000	                            je 0x4015b9b	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x4015521	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8422	elf.c	FUNCTION_97	IF_18	CALL_24
0x4015528	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8422	elf.c	FUNCTION_97	IF_18	CALL_24
0x401552f	    0x480598020000	                          add rax, 0x298	      8422	elf.c	FUNCTION_97	IF_18	CALL_24
0x4015535	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      8422	elf.c	FUNCTION_97	IF_18	CALL_24
0x401553c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x4015543	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x4015546	            0x85c0	                           test eax, eax	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x4015548	            0x7427	                            je 0x4015571	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x401554a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x4015551	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x4015555	        0x4883f813	                           cmp rax, 0x13	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x4015559	     0xf878a000000	                            ja 0x40155e9	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x401555f	            0xeb10	                           jmp 0x4015571	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x4015561	              0x90	                                     nop	      8460	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x4015562	            0xeb0d	                           jmp 0x4015571	      8460	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x4015564	              0x90	                                     nop	      8469	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x4015565	            0xeb0a	                           jmp 0x4015571	      8469	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x4015567	              0x90	                                     nop	      8501	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x4015568	            0xeb07	                           jmp 0x4015571	      8501	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x401556a	              0x90	                                     nop	      8521	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x401556b	            0xeb04	                           jmp 0x4015571	      8521	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x401556d	              0x90	                                     nop	      8534	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x401556e	            0xeb01	                           jmp 0x4015571	      8534	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x4015570	              0x90	                                     nop	      8547	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015571	      0xbe00000000	                              mov esi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x4015576	      0xbf00000000	                              mov edi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x401557b	      0xe800000000	                          call 0x4015580	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x4015580	          0x4889c2	                            mov rdx, rax	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x4015583	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x401558a	          0x4889c6	                            mov rsi, rax	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x401558d	          0x4889d7	                            mov rdi, rdx	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x4015590	      0xb800000000	                              mov eax, 0	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x4015595	      0xe800000000	                          call 0x401559a	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x401559a	      0xbf11000000	                           mov edi, 0x11	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x401559f	      0xe800000000	                          call 0x40155a4	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x40155a4	            0xeb0d	                           jmp 0x40155b3	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x40155a6	              0x90	                                     nop	      8438	elf.c	FUNCTION_97	IF_18	IF_20
0x40155a7	            0xeb0a	                           jmp 0x40155b3	      8438	elf.c	FUNCTION_97	IF_18	IF_20
0x40155a9	              0x90	                                     nop	      8486	elf.c	FUNCTION_97	IF_18	IF_28
0x40155aa	            0xeb07	                           jmp 0x40155b3	      8486	elf.c	FUNCTION_97	IF_18	IF_28
0x40155ac	              0x90	                                     nop	      8516	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x40155ad	            0xeb04	                           jmp 0x40155b3	      8516	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x40155af	              0x90	                                     nop	      8602	elf.c	FUNCTION_97	IF_43	IF_44
0x40155b0	            0xeb01	                           jmp 0x40155b3	      8602	elf.c	FUNCTION_97	IF_43	IF_44
0x40155b2	              0x90	                                     nop	      8607	elf.c	FUNCTION_97	IF_43	IF_45
0x40155b3	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8431	elf.c	FUNCTION_97	IF_18	IF_19	CALL_28
0x40155ba	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8431	elf.c	FUNCTION_97	IF_18	IF_19	CALL_28
0x40155c1	    0x48c780480300	              mov qword [rax + 0x348], 0	      8431	elf.c	FUNCTION_97	IF_18	IF_19	CALL_28
0x40155cc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x40155d3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x40155da	    0xc78040030000	              mov dword [rax + 0x340], 0	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x40155e4	      0xe94e070000	                           jmp 0x4015d37	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x40155e9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x40155f0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x40155f4	          0x4889c7	                            mov rdi, rax	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x40155f7	      0xe800000000	                          call 0x40155fc	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x40155fc	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x4015603	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x401560b	            0x7499	                            je 0x40155a6	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x401560d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x4015614	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x4015618	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x401561f	      0xba00000000	                              mov edx, 0	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x4015624	          0x4889ce	                            mov rsi, rcx	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x4015627	          0x4889c7	                            mov rdi, rax	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x401562a	      0xe800000000	                          call 0x401562f	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x401562f	            0x85c0	                           test eax, eax	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x4015631	            0x7580	                           jne 0x40155b3	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x4015633	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x401563a	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x401563e	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x4015645	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x401564c	          0x4889ce	                            mov rsi, rcx	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x401564f	          0x4889c7	                            mov rdi, rax	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x4015652	      0xe800000000	                          call 0x4015657	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x4015657	          0x4889c2	                            mov rdx, rax	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x401565a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x4015661	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x4015665	          0x4839c2	                            cmp rdx, rax	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x4015668	     0xf8545ffffff	                           jne 0x40155b3	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x401566e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8445	elf.c	FUNCTION_97	IF_18
0x4015675	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8445	elf.c	FUNCTION_97	IF_18
0x4015679	        0x488d50ec	                   lea rdx, [rax - 0x14]	      8446	elf.c	FUNCTION_97	IF_18
0x401567d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8445	elf.c	FUNCTION_97	IF_18
0x4015684	          0x4801d0	                            add rax, rdx	      8445	elf.c	FUNCTION_97	IF_18
0x4015687	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      8445	elf.c	FUNCTION_97	IF_18
0x401568e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8447	elf.c	FUNCTION_97	IF_18
0x4015695	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8447	elf.c	FUNCTION_97	IF_18
0x4015699	        0x488d50f8	                      lea rdx, [rax - 8]	      8448	elf.c	FUNCTION_97	IF_18
0x401569d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8447	elf.c	FUNCTION_97	IF_18
0x40156a4	          0x4801d0	                            add rax, rdx	      8447	elf.c	FUNCTION_97	IF_18
0x40156a7	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      8447	elf.c	FUNCTION_97	IF_18
0x40156ae	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8453	elf.c	FUNCTION_97	IF_18
0x40156b5	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      8453	elf.c	FUNCTION_97	IF_18
0x40156bc	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      8454	elf.c	FUNCTION_97	IF_18
0x40156c6	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x40156d0	      0xe993000000	                           jmp 0x4015768	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x40156d5	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x40156d9	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x40156e0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x40156e7	          0x4889ce	                            mov rsi, rcx	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x40156ea	          0x4889c7	                            mov rdi, rax	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x40156ed	      0xe800000000	                          call 0x40156f2	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x40156f2	         0xfb745a4	            movzx eax, word [rbp - 0x5c]	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x40156f6	           0xfb7c0	                           movzx eax, ax	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x40156f9	      0x25ff7f0000	                         and eax, 0x7fff	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x40156fe	            0x85c0	                           test eax, eax	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x4015700	     0xf845bfeffff	                            je 0x4015561	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x4015706	         0xfb745a4	            movzx eax, word [rbp - 0x5c]	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x401570a	           0xfb7c0	                           movzx eax, ax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x401570d	      0x25ff7f0000	                         and eax, 0x7fff	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x4015712	    0x3b8510ffffff	             cmp eax, dword [rbp - 0xf0]	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x4015718	            0x7612	                           jbe 0x401572c	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x401571a	         0xfb745a4	            movzx eax, word [rbp - 0x5c]	      8462	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x401571e	           0xfb7c0	                           movzx eax, ax	      8462	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x4015721	      0x25ff7f0000	                         and eax, 0x7fff	      8462	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x4015726	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      8462	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x401572c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x4015730	          0x4885c0	                           test rax, rax	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x4015733	            0x744b	                            je 0x4015780	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x4015735	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x4015739	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      8468	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x4015740	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      8468	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x4015747	          0x4829d1	                            sub rcx, rdx	      8468	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x401574a	          0x4889ca	                            mov rdx, rcx	      8468	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x401574d	          0x4839d0	                            cmp rax, rdx	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x4015750	     0xf870efeffff	                            ja 0x4015564	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x4015756	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8472	elf.c	FUNCTION_97	IF_18	FOR_3
0x401575a	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	      8471	elf.c	FUNCTION_97	IF_18	FOR_3
0x4015761	    0x83850cffffff	               add dword [rbp - 0xf4], 1	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x4015768	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x401576f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x4015772	    0x3b850cffffff	             cmp eax, dword [rbp - 0xf4]	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x4015778	     0xf8757ffffff	                            ja 0x40156d5	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x401577e	            0xeb01	                           jmp 0x4015781	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x4015780	              0x90	                                     nop	      8465	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x4015781	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x4015788	            0x7436	                            je 0x40157c0	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x401578a	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x4015790	    0x3b8510ffffff	             cmp eax, dword [rbp - 0xf0]	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x4015796	            0x7615	                           jbe 0x40157ad	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x4015798	    0x838500ffffff	              add dword [rbp - 0x100], 1	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x401579f	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x40157a5	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x40157ab	            0xeb13	                           jmp 0x40157c0	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x40157ad	    0x838510ffffff	               add dword [rbp - 0xf0], 1	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x40157b4	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x40157ba	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x40157c0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x40157c7	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x40157ce	    0x8b8d10ffffff	             mov ecx, dword [rbp - 0xf0]	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x40157d4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x40157db	      0xba48000000	                           mov edx, 0x48	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x40157e0	          0x4889ce	                            mov rsi, rcx	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x40157e3	          0x4889c7	                            mov rdi, rax	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x40157e6	      0xe800000000	                          call 0x40157eb	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x40157eb	    0x488983480300	            mov qword [rbx + 0x348], rax	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x40157f2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x40157f9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x4015800	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x4015807	          0x4885c0	                           test rax, rax	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x401580a	     0xf8499fdffff	                            je 0x40155a9	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x4015810	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x4015817	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x401581e	    0x8b9510ffffff	             mov edx, dword [rbp - 0xf0]	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x4015824	    0x899040030000	            mov dword [rax + 0x340], edx	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x401582a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8490	elf.c	FUNCTION_97	IF_18
0x4015831	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      8490	elf.c	FUNCTION_97	IF_18
0x4015838	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x401583f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x4015846	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x401584d	        0x48894580	             mov qword [rbp - 0x80], rax	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x4015851	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x401585b	      0xe903030000	                           jmp 0x4015b63	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015860	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x4015864	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x401586b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x4015872	          0x4889ce	                            mov rsi, rcx	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x4015875	          0x4889c7	                            mov rdi, rax	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x4015878	      0xe800000000	                          call 0x401587d	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x401587d	         0xfb745a4	            movzx eax, word [rbp - 0x5c]	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x4015881	           0xfb7c0	                           movzx eax, ax	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x4015884	      0x25ff7f0000	                         and eax, 0x7fff	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x4015889	            0x85c0	                           test eax, eax	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x401588b	     0xf84d6fcffff	                            je 0x4015567	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x4015891	         0xfb745a4	            movzx eax, word [rbp - 0x5c]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015895	           0xfb7c0	                           movzx eax, ax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015898	      0x25ff7f0000	                         and eax, 0x7fff	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x401589d	          0x4889c2	                            mov rdx, rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158a0	          0x4889d0	                            mov rax, rdx	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158a3	        0x48c1e003	                              shl rax, 3	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158a7	          0x4801d0	                            add rax, rdx	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158aa	        0x48c1e003	                              shl rax, 3	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158ae	        0x488d50b8	                   lea rdx, [rax - 0x48]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158b2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158b6	          0x4801d0	                            add rax, rdx	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158b9	        0x48894588	             mov qword [rbp - 0x78], rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158bd	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      8504	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_41
0x40158c1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8504	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_41
0x40158c5	      0xba20000000	                           mov edx, 0x20	      8504	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_41
0x40158ca	          0x4889ce	                            mov rsi, rcx	      8504	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_41
0x40158cd	          0x4889c7	                            mov rdi, rax	      8504	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_41
0x40158d0	      0xe800000000	                          call 0x40158d5	      8504	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_41
0x40158d5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8506	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158d9	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      8506	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158e0	        0x48895020	             mov qword [rax + 0x20], rdx	      8506	elf.c	FUNCTION_97	IF_18	FOR_4
0x40158e4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x40158e8	         0xfb74006	               movzx eax, word [rax + 6]	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x40158ec	          0x6685c0	                             test ax, ax	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x40158ef	            0x750e	                           jne 0x40158ff	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x40158f1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8509	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x40158f5	    0x48c740380000	               mov qword [rax + 0x38], 0	      8509	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x40158fd	            0xeb3e	                           jmp 0x401593d	      8509	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x40158ff	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x4015903	         0xfb74006	               movzx eax, word [rax + 6]	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x4015907	           0xfb7c8	                           movzx ecx, ax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x401590a	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x4015911	      0xba20000000	                           mov edx, 0x20	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x4015916	          0x4889ce	                            mov rsi, rcx	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x4015919	          0x4889c7	                            mov rdi, rax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x401591c	      0xe800000000	                          call 0x4015921	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x4015921	          0x4889c2	                            mov rdx, rax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x4015924	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8512	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3
0x4015928	        0x48895038	             mov qword [rax + 0x38], rdx	      8512	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3
0x401592c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x4015930	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x4015934	          0x4885c0	                           test rax, rax	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x4015937	     0xf846ffcffff	                            je 0x40155ac	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x401593d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x4015941	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x4015945	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      8520	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x401594c	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      8520	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x4015953	          0x4829d1	                            sub rcx, rdx	      8520	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x4015956	          0x4889ca	                            mov rdx, rcx	      8520	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x4015959	          0x4839d0	                            cmp rax, rdx	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x401595c	     0xf8708fcffff	                            ja 0x401556a	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x4015962	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8524	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015966	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8524	elf.c	FUNCTION_97	IF_18	FOR_4
0x401596a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      8523	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015971	          0x4801d0	                            add rax, rdx	      8523	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015974	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      8523	elf.c	FUNCTION_97	IF_18	FOR_4
0x401597b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8525	elf.c	FUNCTION_97	IF_18	FOR_4
0x401597f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8525	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015983	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      8525	elf.c	FUNCTION_97	IF_18	FOR_4
0x401598a	    0xc78514ffffff	               mov dword [rbp - 0xec], 0	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015994	      0xe915010000	                           jmp 0x4015aae	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015999	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x40159a0	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x40159a7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x40159ae	          0x4889ce	                            mov rsi, rcx	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x40159b1	          0x4889c7	                            mov rdi, rax	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x40159b4	      0xe800000000	                          call 0x40159b9	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x40159b9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8532	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x40159c0	          0x488b00	                    mov rax, qword [rax]	      8532	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x40159c3	            0x89c2	                            mov edx, eax	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159c5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159cc	          0x8b4828	            mov ecx, dword [rax + 0x28] 	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159cf	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159d6	            0x89ce	                            mov esi, ecx	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159d8	          0x4889c7	                            mov rdi, rax	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159db	      0xe800000000	                          call 0x40159e0	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159e0	          0x4889c2	                            mov rdx, rax	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x40159e3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8530	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x40159ea	        0x48895010	             mov qword [rax + 0x10], rdx	      8530	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x40159ee	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x40159f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x40159f9	          0x4885c0	                           test rax, rax	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x40159fc	     0xf846bfbffff	                            je 0x401556d	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x4015a02	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8536	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015a09	    0x48c740180000	               mov qword [rax + 0x18], 0	      8536	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015a11	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a18	        0x488b4008	                mov rax, qword [rax + 8]	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a1c	          0x4885c0	                           test rax, rax	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a1f	            0x7516	                           jne 0x4015a37	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a21	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a27	          0x8d5001	                      lea edx, [rax + 1]	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a2a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a2e	        0x66895006	                  mov word [rax + 6], dx	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a32	      0xe98e000000	                           jmp 0x4015ac5	      8540	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x4015a37	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a3d	          0x8d5001	                      lea edx, [rax + 1]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a40	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a44	         0xfb74006	               movzx eax, word [rax + 6]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a48	           0xfb7c0	                           movzx eax, ax	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a4b	            0x39c2	                            cmp edx, eax	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a4d	            0x7316	                           jae 0x4015a65	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a4f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a56	        0x488d5020	                   lea rdx, [rax + 0x20]	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a5a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a61	        0x48895018	             mov qword [rax + 0x18], rdx	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x4015a65	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a6c	        0x488b4008	                mov rax, qword [rax + 8]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a70	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      8546	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a77	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      8546	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a7e	          0x4829d1	                            sub rcx, rdx	      8546	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a81	          0x4889ca	                            mov rdx, rcx	      8546	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a84	          0x4839d0	                            cmp rax, rdx	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a87	     0xf87e3faffff	                            ja 0x4015570	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x4015a8d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      8550	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015a94	        0x488b4008	                mov rax, qword [rax + 8]	      8550	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015a98	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      8549	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015a9f	    0x838514ffffff	               add dword [rbp - 0xec], 1	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015aa6	    0x48838550ffff	            add qword [rbp - 0xb0], 0x20	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015aae	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015ab2	         0xfb74006	               movzx eax, word [rax + 6]	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015ab6	           0xfb7c0	                           movzx eax, ax	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015ab9	    0x3b8514ffffff	             cmp eax, dword [rbp - 0xec]	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015abf	     0xf87d4feffff	                            ja 0x4015999	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x4015ac5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8553	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015ac9	    0x48c740280000	               mov qword [rax + 0x28], 0	      8553	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015ad1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015ad5	         0xfb74006	               movzx eax, word [rax + 6]	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015ad9	          0x6685c0	                             test ax, ax	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015adc	            0x7414	                            je 0x4015af2	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015ade	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015ae2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015ae6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015aea	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015aee	        0x48895028	             mov qword [rax + 0x28], rdx	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x4015af2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8557	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015af6	    0x48c740300000	               mov qword [rax + 0x30], 0	      8557	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015afe	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x4015b02	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x4015b06	          0x4885c0	                           test rax, rax	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x4015b09	            0x7470	                            je 0x4015b7b	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x4015b0b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b0f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b13	          0x4829c2	                            sub rdx, rax	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b16	          0x4889d0	                            mov rax, rdx	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b19	        0x48c1f803	                              sar rax, 3	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b1d	          0x4889c2	                            mov rdx, rax	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b20	    0x48b8398ee338	          movabs rax, 0x8e38e38e38e38e39	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b2a	        0x480fafc2	                           imul rax, rdx	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b2e	        0x488d5001	                      lea rdx, [rax + 1]	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b32	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b38	          0x4839c2	                            cmp rdx, rax	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b3b	            0x7310	                           jae 0x4015b4d	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b3d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b41	        0x488d5048	                   lea rdx, [rax + 0x48]	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b45	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b49	        0x48895030	             mov qword [rax + 0x30], rdx	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x4015b4d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8564	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b51	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8564	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b55	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	      8563	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b5c	    0x83850cffffff	               add dword [rbp - 0xf4], 1	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b63	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b6a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b6d	    0x3b850cffffff	             cmp eax, dword [rbp - 0xf4]	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b73	     0xf87e7fcffff	                            ja 0x4015860	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b79	            0xeb01	                           jmp 0x4015b7c	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x4015b7b	              0x90	                                     nop	      8559	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x4015b7c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x4015b83	          0x4889c7	                            mov rdi, rax	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x4015b86	      0xe800000000	                          call 0x4015b8b	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x4015b8b	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      8568	elf.c	FUNCTION_97	IF_18
0x4015b96	      0xe993000000	                           jmp 0x4015c2e	      8568	elf.c	FUNCTION_97	IF_18
0x4015b9b	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x4015ba2	     0xf8486000000	                            je 0x4015c2e	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x4015ba8	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 2	      8572	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x4015baf	            0x770c	                            ja 0x4015bbd	      8572	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x4015bb1	    0xc78500ffffff	              mov dword [rbp - 0x100], 3	      8573	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x4015bbb	            0xeb07	                           jmp 0x4015bc4	      8573	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x4015bbd	    0x838500ffffff	              add dword [rbp - 0x100], 1	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x4015bc4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8577	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_46
0x4015bcb	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	      8577	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_46
0x4015bd2	    0x8b8d00ffffff	            mov ecx, dword [rbp - 0x100]	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x4015bd8	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x4015bdf	      0xba48000000	                           mov edx, 0x48	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x4015be4	          0x4889ce	                            mov rsi, rcx	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x4015be7	          0x4889c7	                            mov rdi, rax	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x4015bea	      0xe800000000	                          call 0x4015bef	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x4015bef	    0x488983480300	            mov qword [rbx + 0x348], rax	      8577	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_46
0x4015bf6	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x4015bfd	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x4015c04	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x4015c0b	          0x4885c0	                           test rax, rax	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x4015c0e	     0xf8422010000	                            je 0x4015d36	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x4015c14	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8582	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_49
0x4015c1b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8582	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_49
0x4015c22	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	      8582	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_49
0x4015c28	    0x899040030000	            mov dword [rax + 0x340], edx	      8582	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_49
0x4015c2e	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      8586	elf.c	FUNCTION_97	IF_43
0x4015c35	     0xf84f4000000	                            je 0x4015d2f	      8586	elf.c	FUNCTION_97	IF_43
0x4015c3b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c42	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c49	    0x488b90480300	           mov rdx, qword [rax + 0x348] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c50	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c56	          0x83e801	                              sub eax, 1	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c59	            0x89c1	                            mov ecx, eax	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c5b	          0x4889c8	                            mov rax, rcx	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c5e	        0x48c1e003	                              shl rax, 3	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c62	          0x4801c8	                            add rax, rcx	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c65	        0x48c1e003	                              shl rax, 3	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c69	          0x4801d0	                            add rax, rdx	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c6c	        0x48894590	             mov qword [rbp - 0x70], rax	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x4015c70	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8593	elf.c	FUNCTION_97	IF_43
0x4015c74	      0x66c7000100	                       mov word [rax], 1	      8593	elf.c	FUNCTION_97	IF_43
0x4015c79	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8594	elf.c	FUNCTION_97	IF_43
0x4015c7d	    0x66c740020000	                   mov word [rax + 2], 0	      8594	elf.c	FUNCTION_97	IF_43
0x4015c83	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      8595	elf.c	FUNCTION_97	IF_43
0x4015c89	            0x89c2	                            mov edx, eax	      8595	elf.c	FUNCTION_97	IF_43
0x4015c8b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8595	elf.c	FUNCTION_97	IF_43
0x4015c8f	        0x66895004	                  mov word [rax + 4], dx	      8595	elf.c	FUNCTION_97	IF_43
0x4015c93	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8596	elf.c	FUNCTION_97	IF_43
0x4015c97	    0x66c740060100	                   mov word [rax + 6], 1	      8596	elf.c	FUNCTION_97	IF_43
0x4015c9d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8598	elf.c	FUNCTION_97	IF_43
0x4015ca1	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      8598	elf.c	FUNCTION_97	IF_43
0x4015ca8	        0x48895020	             mov qword [rax + 0x20], rdx	      8598	elf.c	FUNCTION_97	IF_43
0x4015cac	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x4015cb3	          0x4889c7	                            mov rdi, rax	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x4015cb6	      0xe800000000	                          call 0x4015cbb	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x4015cbb	          0x4889c2	                            mov rdx, rax	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x4015cbe	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x4015cc2	        0x48895028	             mov qword [rax + 0x28], rdx	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x4015cc6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x4015cca	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x4015cce	          0x4885c0	                           test rax, rax	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x4015cd1	     0xf84d8f8ffff	                            je 0x40155af	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x4015cd7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8603	elf.c	FUNCTION_97	IF_43
0x4015cdb	    0x48c740300000	               mov qword [rax + 0x30], 0	      8603	elf.c	FUNCTION_97	IF_43
0x4015ce3	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x4015cea	      0xbe20000000	                           mov esi, 0x20	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x4015cef	          0x4889c7	                            mov rdi, rax	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x4015cf2	      0xe800000000	                          call 0x4015cf7	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x4015cf7	          0x4889c2	                            mov rdx, rax	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x4015cfa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8604	elf.c	FUNCTION_97	IF_43
0x4015cfe	        0x48895038	             mov qword [rax + 0x38], rdx	      8604	elf.c	FUNCTION_97	IF_43
0x4015d02	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x4015d06	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x4015d0a	          0x4885c0	                           test rax, rax	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x4015d0d	     0xf849ff8ffff	                            je 0x40155b2	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x4015d13	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8609	elf.c	FUNCTION_97	IF_43
0x4015d17	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8609	elf.c	FUNCTION_97	IF_43
0x4015d1b	        0x48894598	             mov qword [rbp - 0x68], rax	      8609	elf.c	FUNCTION_97	IF_43
0x4015d1f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8610	elf.c	FUNCTION_97	IF_43
0x4015d23	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      8610	elf.c	FUNCTION_97	IF_43
0x4015d27	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8610	elf.c	FUNCTION_97	IF_43
0x4015d2b	        0x48895010	             mov qword [rax + 0x10], rdx	      8610	elf.c	FUNCTION_97	IF_43
0x4015d2f	      0xb801000000	                              mov eax, 1	      8613	elf.c	FUNCTION_97
0x4015d34	            0xeb1f	                           jmp 0x4015d55	      8613	elf.c	FUNCTION_97
0x4015d36	              0x90	                                     nop	      8580	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42
0x4015d37	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      8616	elf.c	FUNCTION_97	IF_46
0x4015d3f	            0x740f	                            je 0x4015d50	      8616	elf.c	FUNCTION_97	IF_46
0x4015d41	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      8617	elf.c	FUNCTION_97	CALL_53
0x4015d48	          0x4889c7	                            mov rdi, rax	      8617	elf.c	FUNCTION_97	CALL_53
0x4015d4b	      0xe800000000	                          call 0x4015d50	      8617	elf.c	FUNCTION_97	CALL_53
0x4015d50	      0xb800000000	                              mov eax, 0	      8618	elf.c	FUNCTION_97
0x4015d55	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      8619	elf.c	FUNCTION_97
0x4015d59	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8619	elf.c	FUNCTION_97
0x4015d62	            0x7405	                            je 0x4015d69	      8619	elf.c	FUNCTION_97
0x4015d64	      0xe800000000	                          call 0x4015d69	      8619	elf.c	FUNCTION_97
0x4015d69	    0x4881c4080100	                          add rsp, 0x108	      8619	elf.c	FUNCTION_97
0x4015d70	              0x5b	                                 pop rbx	      8619	elf.c	FUNCTION_97
0x4015d71	              0x5d	                                 pop rbp	      8619	elf.c	FUNCTION_97
0x4015d72	              0xc3	                                     ret	      8619	elf.c	FUNCTION_97
bfd_elf_get_default_section_type	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	16
0x4007d2d	              0x55	                                push rbp	      3121	elf.c	FUNCTION_47
0x4007d2e	          0x4889e5	                            mov rbp, rsp	      3121	elf.c	FUNCTION_47
0x4007d31	          0x897dfc	                mov dword [rbp - 4], edi	      3121	elf.c	FUNCTION_47
0x4007d34	          0x8b45fc	                mov eax, dword [rbp - 4]	      3122	elf.c	FUNCTION_47	IF_1
0x4007d37	          0x83e001	                              and eax, 1	      3122	elf.c	FUNCTION_47	IF_1
0x4007d3a	            0x85c0	                           test eax, eax	      3122	elf.c	FUNCTION_47	IF_1
0x4007d3c	            0x7413	                            je 0x4007d51	      3122	elf.c	FUNCTION_47	IF_1
0x4007d3e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3123	elf.c	FUNCTION_47	IF_1
0x4007d41	      0x2502010000	                          and eax, 0x102	      3123	elf.c	FUNCTION_47	IF_1
0x4007d46	            0x85c0	                           test eax, eax	      3123	elf.c	FUNCTION_47	IF_1
0x4007d48	            0x7507	                           jne 0x4007d51	      3123	elf.c	FUNCTION_47	IF_1
0x4007d4a	      0xb808000000	                              mov eax, 8	      3124	elf.c	FUNCTION_47	IF_1
0x4007d4f	            0xeb05	                           jmp 0x4007d56	      3124	elf.c	FUNCTION_47	IF_1
0x4007d51	      0xb801000000	                              mov eax, 1	      3125	elf.c	FUNCTION_47
0x4007d56	              0x5d	                                 pop rbp	      3126	elf.c	FUNCTION_47
0x4007d57	              0xc3	                                     ret	      3126	elf.c	FUNCTION_47
_bfd_elf_setup_sections	ELSE,4:DO,0:CALL,22:WHILE,1:FOR,2:IF,11:SWITCH,0:functions,0	231
0x4002371	              0x55	                                push rbp	       845	elf.c	FUNCTION_22
0x4002372	          0x4889e5	                            mov rbp, rsp	       845	elf.c	FUNCTION_22
0x4002375	            0x4155	                                push r13	       845	elf.c	FUNCTION_22
0x4002377	            0x4154	                                push r12	       845	elf.c	FUNCTION_22
0x4002379	              0x53	                                push rbx	       845	elf.c	FUNCTION_22
0x400237a	        0x4883ec68	                           sub rsp, 0x68	       845	elf.c	FUNCTION_22
0x400237e	        0x48897d88	             mov qword [rbp - 0x78], rdi	       845	elf.c	FUNCTION_22
0x4002382	        0x488b4588	             mov rax, qword [rbp - 0x78]	       847	elf.c	FUNCTION_22	CALL_1
0x4002386	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       847	elf.c	FUNCTION_22	CALL_1
0x400238d	    0x8b80700c0000	           mov eax, dword [rax + 0xc70] 	       847	elf.c	FUNCTION_22	CALL_1
0x4002393	          0x8945a8	             mov dword [rbp - 0x58], eax	       847	elf.c	FUNCTION_22	CALL_1
0x4002396	    0xc745a0010000	               mov dword [rbp - 0x60], 1	       848	elf.c	FUNCTION_22
0x400239d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       852	elf.c	FUNCTION_22	FOR_1
0x40023a1	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       852	elf.c	FUNCTION_22	FOR_1
0x40023a8	        0x488945b0	             mov qword [rbp - 0x50], rax	       852	elf.c	FUNCTION_22	FOR_1
0x40023ac	      0xe9a8010000	                           jmp 0x4002559	       852	elf.c	FUNCTION_22	FOR_1
0x40023b1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       854	elf.c	FUNCTION_22	FOR_1	CALL_2
0x40023b5	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       854	elf.c	FUNCTION_22	FOR_1	CALL_2
0x40023bc	        0x488945c8	             mov qword [rbp - 0x38], rax	       854	elf.c	FUNCTION_22	FOR_1	CALL_2
0x40023c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023c4	        0x488b4008	                mov rax, qword [rax + 8]	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023c8	      0x2580000000	                           and eax, 0x80	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023cd	          0x4885c0	                           test rax, rax	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023d0	     0xf8414010000	                            je 0x40024ea	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       857	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023da	          0x8b4028	            mov eax, dword [rax + 0x28] 	       857	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023dd	          0x8945ac	             mov dword [rbp - 0x54], eax	       857	elf.c	FUNCTION_22	FOR_1	IF_1
0x40023e0	        0x837dac00	               cmp dword [rbp - 0x54], 0	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x40023e4	            0x755e	                           jne 0x4002444	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x40023e6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       863	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	CALL_3
0x40023ea	        0x488b4008	                mov rax, qword [rax + 8]	       863	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	CALL_3
0x40023ee	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       863	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	CALL_3
0x40023f5	        0x488945d0	             mov qword [rbp - 0x30], rax	       863	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	CALL_3
0x40023f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x40023fd	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4002404	          0x4885c0	                           test rax, rax	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4002407	     0xf8440010000	                            je 0x400254d	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x400240d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002411	    0x488b98e80200	           mov rbx, qword [rax + 0x2e8] 	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002418	      0xbe00000000	                              mov esi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x400241d	      0xbf00000000	                              mov edi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002422	      0xe800000000	                          call 0x4002427	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002427	          0x4889c1	                            mov rcx, rax	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x400242a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400242e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002432	          0x4889c6	                            mov rsi, rax	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002435	          0x4889cf	                            mov rdi, rcx	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002438	      0xb800000000	                              mov eax, 0	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400243d	            0xffd3	                                call rbx	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400243f	      0xe909010000	                           jmp 0x400254d	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002444	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       872	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1
0x400244c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002450	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002457	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x400245d	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002460	            0x762c	                           jbe 0x400248e	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002462	        0x488b4588	             mov rax, qword [rbp - 0x78]	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002466	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x400246d	        0x488b4058	            mov rax, qword [rax + 0x58] 	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002471	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002474	        0x48c1e203	                              shl rdx, 3	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002478	          0x4801d0	                            add rax, rdx	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x400247b	          0x488b00	                    mov rax, qword [rax]	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x400247e	        0x488945c8	             mov qword [rbp - 0x38], rax	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002482	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x4002486	        0x488b4040	            mov rax, qword [rax + 0x40] 	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x400248a	        0x488945b8	             mov qword [rbp - 0x48], rax	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x400248e	      0x48837db800	               cmp qword [rbp - 0x48], 0	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4002493	            0x753d	                           jne 0x40024d2	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4002495	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002499	    0x488b98f00000	            mov rbx, qword [rax + 0xf0] 	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024a0	      0xbe00000000	                              mov esi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x40024a5	      0xbf00000000	                              mov edi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x40024aa	      0xe800000000	                          call 0x40024af	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x40024af	          0x4889c7	                            mov rdi, rax	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x40024b2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024b6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024b9	          0x4889d1	                            mov rcx, rdx	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024bc	            0x89c2	                            mov edx, eax	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024be	          0x4889de	                            mov rsi, rbx	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024c1	      0xb800000000	                              mov eax, 0	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024c6	      0xe800000000	                          call 0x40024cb	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x40024cb	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       889	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x40024d2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x40024d6	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x40024dd	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x40024e1	    0x488990900000	             mov qword [rax + 0x90], rdx	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x40024e8	            0xeb63	                           jmp 0x400254d	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x40024ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x40024ee	          0x8b4004	                mov eax, dword [rax + 4]	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x40024f1	          0x83f811	                           cmp eax, 0x11	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x40024f4	            0x7557	                           jne 0x400254d	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x40024f6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x40024fa	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x4002501	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x4002508	          0x4885c0	                           test rax, rax	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x400250b	            0x7540	                           jne 0x400254d	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x400250d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       901	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_14
0x4002511	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       901	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_14
0x4002518	    0x8b9888000000	            mov ebx, dword [rax + 0x88] 	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x400251e	      0xbe00000000	                              mov esi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4002523	      0xbf00000000	                              mov edi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4002528	      0xe800000000	                          call 0x400252d	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x400252d	          0x4889c1	                            mov rcx, rax	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4002530	        0x488b4588	             mov rax, qword [rbp - 0x78]	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002534	            0x89da	                            mov edx, ebx	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002536	          0x4889c6	                            mov rsi, rax	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002539	          0x4889cf	                            mov rdi, rcx	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x400253c	      0xb800000000	                              mov eax, 0	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002541	      0xe800000000	                          call 0x4002546	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002546	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       902	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x400254d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       852	elf.c	FUNCTION_22	FOR_1
0x4002551	        0x488b4010	            mov rax, qword [rax + 0x10] 	       852	elf.c	FUNCTION_22	FOR_1
0x4002555	        0x488945b0	             mov qword [rbp - 0x50], rax	       852	elf.c	FUNCTION_22	FOR_1
0x4002559	      0x48837db000	               cmp qword [rbp - 0x50], 0	       852	elf.c	FUNCTION_22	FOR_1
0x400255e	     0xf854dfeffff	                           jne 0x40023b1	       852	elf.c	FUNCTION_22	FOR_1
0x4002564	        0x837da8ff	cmp dword [rbp - 0x58], 0xffffffffffffffff	       907	elf.c	FUNCTION_22	IF_7
0x4002568	            0x7508	                           jne 0x4002572	       907	elf.c	FUNCTION_22	IF_7
0x400256a	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       908	elf.c	FUNCTION_22	IF_7
0x400256d	      0xe99c010000	                           jmp 0x400270e	       908	elf.c	FUNCTION_22	IF_7
0x4002572	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       910	elf.c	FUNCTION_22	FOR_2
0x4002579	      0xe981010000	                           jmp 0x40026ff	       910	elf.c	FUNCTION_22	FOR_2
0x400257e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4002582	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4002589	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4002590	          0x8b559c	             mov edx, dword [rbp - 0x64]	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4002593	        0x48c1e203	                              shl rdx, 3	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4002597	          0x4801d0	                            add rax, rdx	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x400259a	          0x488b00	                    mov rax, qword [rax]	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x400259d	        0x488945d8	             mov qword [rbp - 0x28], rax	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x40025a1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025a6	            0x741a	                            je 0x40025c2	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025ac	        0x488b4040	            mov rax, qword [rax + 0x40] 	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025b0	          0x4885c0	                           test rax, rax	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025b3	            0x740d	                            je 0x40025c2	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025b9	        0x488b4048	            mov rax, qword [rax + 0x48] 	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025bd	          0x4885c0	                           test rax, rax	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025c0	            0x7535	                           jne 0x40025f7	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025c2	      0xbe00000000	                              mov esi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x40025c7	      0xbf00000000	                              mov edi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x40025cc	      0xe800000000	                          call 0x40025d1	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x40025d1	          0x4889c1	                            mov rcx, rax	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x40025d4	          0x8b559c	             mov edx, dword [rbp - 0x64]	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x40025d7	        0x488b4588	             mov rax, qword [rbp - 0x78]	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x40025db	          0x4889c6	                            mov rsi, rax	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x40025de	          0x4889cf	                            mov rdi, rcx	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x40025e1	      0xb800000000	                              mov eax, 0	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x40025e6	      0xe800000000	                          call 0x40025eb	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x40025eb	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       923	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025f2	      0xe904010000	                           jmp 0x40026fb	       924	elf.c	FUNCTION_22	FOR_2	IF_8
0x40025f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       927	elf.c	FUNCTION_22	FOR_2
0x40025fb	        0x488b4048	            mov rax, qword [rax + 0x48] 	       927	elf.c	FUNCTION_22	FOR_2
0x40025ff	        0x488945c0	             mov qword [rbp - 0x40], rax	       927	elf.c	FUNCTION_22	FOR_2
0x4002603	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       928	elf.c	FUNCTION_22	FOR_2
0x4002607	        0x488b4020	            mov rax, qword [rax + 0x20] 	       928	elf.c	FUNCTION_22	FOR_2
0x400260b	        0x48c1e802	                              shr rax, 2	       928	elf.c	FUNCTION_22	FOR_2
0x400260f	          0x8945a4	             mov dword [rbp - 0x5c], eax	       928	elf.c	FUNCTION_22	FOR_2
0x4002612	      0xe9d6000000	                           jmp 0x40026ed	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002617	      0x488345c008	               add qword [rbp - 0x40], 8	       932	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x400261c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002620	          0x488b00	                    mov rax, qword [rax]	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002623	          0x4885c0	                           test rax, rax	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002626	            0x7505	                           jne 0x400262d	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002628	      0xe9c0000000	                           jmp 0x40026ed	       935	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x400262d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002631	          0x488b00	                    mov rax, qword [rax]	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002634	        0x488b4040	            mov rax, qword [rax + 0x40] 	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002638	          0x4885c0	                           test rax, rax	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x400263b	            0x7426	                            je 0x4002663	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x400263d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002641	          0x488b00	                    mov rax, qword [rax]	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002644	        0x488b4040	            mov rax, qword [rax + 0x40] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002648	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x400264f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002653	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002657	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x400265e	      0xe98a000000	                           jmp 0x40026ed	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002663	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002667	          0x488b00	                    mov rax, qword [rax]	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x400266a	          0x8b4004	                mov eax, dword [rax + 4]	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x400266d	          0x83f804	                              cmp eax, 4	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002670	            0x747b	                            je 0x40026ed	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002672	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       939	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002676	          0x488b00	                    mov rax, qword [rax]	       939	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002679	          0x8b4004	                mov eax, dword [rax + 4]	       939	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x400267c	          0x83f809	                              cmp eax, 9	       939	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x400267f	            0x746c	                            je 0x40026ed	       939	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002681	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002685	        0x4c8b6040	            mov r12, qword [rax + 0x40] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002689	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       950	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x400268d	          0x488b00	                    mov rax, qword [rax]	       950	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002690	            0x8b10	                    mov edx, dword [rax]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002692	        0x488b4588	             mov rax, qword [rbp - 0x78]	       948	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_22
0x4002696	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       948	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_22
0x400269d	          0x8b4850	            mov ecx, dword [rax + 0x50] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026a0	        0x488b4588	             mov rax, qword [rbp - 0x78]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026a4	            0x89ce	                            mov esi, ecx	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026a6	          0x4889c7	                            mov rdi, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026a9	      0xe800000000	                          call 0x40026ae	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026ae	          0x4989c5	                            mov r13, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       946	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026b5	          0x488b00	                    mov rax, qword [rax]	       946	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026b8	          0x8b5804	                mov ebx, dword [rax + 4]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026bb	      0xbe00000000	                              mov esi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026c0	      0xbf00000000	                              mov edi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026c5	      0xe800000000	                          call 0x40026ca	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026ca	          0x4889c7	                            mov rdi, rax	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026cd	        0x488b4588	             mov rax, qword [rbp - 0x78]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026d1	          0x4d89e0	                             mov r8, r12	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026d4	          0x4c89e9	                            mov rcx, r13	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026d7	            0x89da	                            mov edx, ebx	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026d9	          0x4889c6	                            mov rsi, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026dc	      0xb800000000	                              mov eax, 0	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026e1	      0xe800000000	                          call 0x40026e6	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026e6	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       952	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026ed	        0x836da401	               sub dword [rbp - 0x5c], 1	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x40026f1	        0x837da400	               cmp dword [rbp - 0x5c], 0	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x40026f5	     0xf851cffffff	                           jne 0x4002617	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x40026fb	        0x83459c01	               add dword [rbp - 0x64], 1	       910	elf.c	FUNCTION_22	FOR_2
0x40026ff	          0x8b459c	             mov eax, dword [rbp - 0x64]	       910	elf.c	FUNCTION_22	FOR_2
0x4002702	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	       910	elf.c	FUNCTION_22	FOR_2
0x4002705	     0xf8273feffff	                            jb 0x400257e	       910	elf.c	FUNCTION_22	FOR_2
0x400270b	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       957	elf.c	FUNCTION_22
0x400270e	        0x4883c468	                           add rsp, 0x68	       958	elf.c	FUNCTION_22
0x4002712	              0x5b	                                 pop rbx	       958	elf.c	FUNCTION_22
0x4002713	            0x415c	                                 pop r12	       958	elf.c	FUNCTION_22
0x4002715	            0x415d	                                 pop r13	       958	elf.c	FUNCTION_22
0x4002717	              0x5d	                                 pop rbp	       958	elf.c	FUNCTION_22
0x4002718	              0xc3	                                     ret	       958	elf.c	FUNCTION_22
elfcore_grok_aarch_hw_break	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016f3b	              0x55	                                push rbp	      9330	elf.c	FUNCTION_137
0x4016f3c	          0x4889e5	                            mov rbp, rsp	      9330	elf.c	FUNCTION_137
0x4016f3f	        0x4883ec10	                           sub rsp, 0x10	      9330	elf.c	FUNCTION_137
0x4016f43	        0x48897df8	                mov qword [rbp - 8], rdi	      9330	elf.c	FUNCTION_137
0x4016f47	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9330	elf.c	FUNCTION_137
0x4016f4b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9331	elf.c	FUNCTION_137	CALL_1
0x4016f4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      9331	elf.c	FUNCTION_137	CALL_1
0x4016f53	      0xbe00000000	                              mov esi, 0	      9331	elf.c	FUNCTION_137	CALL_1
0x4016f58	          0x4889c7	                            mov rdi, rax	      9331	elf.c	FUNCTION_137	CALL_1
0x4016f5b	      0xe899fcffff	call sym.elfcore_make_note_pseudosection	      9331	elf.c	FUNCTION_137	CALL_1
0x4016f60	              0xc9	                                   leave	      9332	elf.c	FUNCTION_137
0x4016f61	              0xc3	                                     ret	      9332	elf.c	FUNCTION_137
prep_headers	ELSE,4:DO,0:CALL,14:WHILE,0:FOR,0:IF,6:SWITCH,1:functions,0	179
0x400f6cf	              0x55	                                push rbp	      6195	elf.c	FUNCTION_74
0x400f6d0	          0x4889e5	                            mov rbp, rsp	      6195	elf.c	FUNCTION_74
0x400f6d3	              0x53	                                push rbx	      6195	elf.c	FUNCTION_74
0x400f6d4	        0x4883ec38	                           sub rsp, 0x38	      6195	elf.c	FUNCTION_74
0x400f6d8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6195	elf.c	FUNCTION_74
0x400f6dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6198	elf.c	FUNCTION_74	CALL_1
0x400f6e0	        0x488b4008	                mov rax, qword [rax + 8]	      6198	elf.c	FUNCTION_74	CALL_1
0x400f6e4	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6198	elf.c	FUNCTION_74	CALL_1
0x400f6eb	        0x488945d8	             mov qword [rbp - 0x28], rax	      6198	elf.c	FUNCTION_74	CALL_1
0x400f6ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6200	elf.c	FUNCTION_74	CALL_2
0x400f6f3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6200	elf.c	FUNCTION_74	CALL_2
0x400f6fa	        0x488945e0	             mov qword [rbp - 0x20], rax	      6200	elf.c	FUNCTION_74	CALL_2
0x400f6fe	      0xe800000000	                          call 0x400f703	      6202	elf.c	FUNCTION_74	CALL_3
0x400f703	        0x488945e8	             mov qword [rbp - 0x18], rax	      6202	elf.c	FUNCTION_74	CALL_3
0x400f707	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6203	elf.c	FUNCTION_74	IF_1
0x400f70c	            0x750a	                           jne 0x400f718	      6203	elf.c	FUNCTION_74	IF_1
0x400f70e	      0xb800000000	                              mov eax, 0	      6204	elf.c	FUNCTION_74	IF_1
0x400f713	      0xe987020000	                           jmp 0x400f99f	      6204	elf.c	FUNCTION_74	IF_1
0x400f718	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6206	elf.c	FUNCTION_74	CALL_4
0x400f71c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6206	elf.c	FUNCTION_74	CALL_4
0x400f723	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6206	elf.c	FUNCTION_74	CALL_4
0x400f72a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6206	elf.c	FUNCTION_74	CALL_4
0x400f72e	        0x48895008	                mov qword [rax + 8], rdx	      6206	elf.c	FUNCTION_74	CALL_4
0x400f732	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6208	elf.c	FUNCTION_74
0x400f736	          0xc6007f	                    mov byte [rax], 0x7f	      6208	elf.c	FUNCTION_74
0x400f739	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6209	elf.c	FUNCTION_74
0x400f73d	        0xc6400145	                mov byte [rax + 1], 0x45	      6209	elf.c	FUNCTION_74
0x400f741	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6210	elf.c	FUNCTION_74
0x400f745	        0xc640024c	                mov byte [rax + 2], 0x4c	      6210	elf.c	FUNCTION_74
0x400f749	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6211	elf.c	FUNCTION_74
0x400f74d	        0xc6400346	                mov byte [rax + 3], 0x46	      6211	elf.c	FUNCTION_74
0x400f751	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6213	elf.c	FUNCTION_74
0x400f755	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6213	elf.c	FUNCTION_74
0x400f75c	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      6213	elf.c	FUNCTION_74
0x400f760	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6213	elf.c	FUNCTION_74
0x400f764	          0x885004	                  mov byte [rax + 4], dl	      6213	elf.c	FUNCTION_74
0x400f767	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6215	elf.c	FUNCTION_74
0x400f76b	        0x488b4008	                mov rax, qword [rax + 8]	      6215	elf.c	FUNCTION_74
0x400f76f	          0x8b400c	              mov eax, dword [rax + 0xc]	      6215	elf.c	FUNCTION_74
0x400f772	            0x85c0	                           test eax, eax	      6214	elf.c	FUNCTION_74
0x400f774	            0x7507	                           jne 0x400f77d	      6214	elf.c	FUNCTION_74
0x400f776	      0xba02000000	                              mov edx, 2	      6214	elf.c	FUNCTION_74
0x400f77b	            0xeb05	                           jmp 0x400f782	      6214	elf.c	FUNCTION_74
0x400f77d	      0xba01000000	                              mov edx, 1	      6214	elf.c	FUNCTION_74
0x400f782	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6214	elf.c	FUNCTION_74
0x400f786	          0x885005	                  mov byte [rax + 5], dl	      6214	elf.c	FUNCTION_74
0x400f789	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6216	elf.c	FUNCTION_74
0x400f78d	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6216	elf.c	FUNCTION_74
0x400f794	         0xfb6500d	            movzx edx, byte [rax + 0xd] 	      6216	elf.c	FUNCTION_74
0x400f798	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6216	elf.c	FUNCTION_74
0x400f79c	          0x885006	                  mov byte [rax + 6], dl	      6216	elf.c	FUNCTION_74
0x400f79f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6218	elf.c	FUNCTION_74	IF_2
0x400f7a3	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6218	elf.c	FUNCTION_74	IF_2
0x400f7a6	          0xc1e805	                              shr eax, 5	      6218	elf.c	FUNCTION_74	IF_2
0x400f7a9	      0x25ffff0f00	                        and eax, 0xfffff	      6218	elf.c	FUNCTION_74	IF_2
0x400f7ae	          0x83e040	                           and eax, 0x40	      6218	elf.c	FUNCTION_74	IF_2
0x400f7b1	            0x85c0	                           test eax, eax	      6218	elf.c	FUNCTION_74	IF_2
0x400f7b3	            0x740c	                            je 0x400f7c1	      6218	elf.c	FUNCTION_74	IF_2
0x400f7b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6219	elf.c	FUNCTION_74	IF_2
0x400f7b9	    0x66c740380300	                mov word [rax + 0x38], 3	      6219	elf.c	FUNCTION_74	IF_2
0x400f7bf	            0xeb47	                           jmp 0x400f808	      6219	elf.c	FUNCTION_74	IF_2
0x400f7c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7c5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7c8	          0xc1e805	                              shr eax, 5	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7cb	      0x25ffff0f00	                        and eax, 0xfffff	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7d0	          0x83e002	                              and eax, 2	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7d3	            0x85c0	                           test eax, eax	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7d5	            0x740c	                            je 0x400f7e3	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7db	    0x66c740380200	                mov word [rax + 0x38], 2	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7e1	            0xeb25	                           jmp 0x400f808	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400f7e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7e7	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7eb	          0x83e007	                              and eax, 7	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7ee	            0x3c03	                               cmp al, 3	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7f0	            0x750c	                           jne 0x400f7fe	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7f6	    0x66c740380400	                mov word [rax + 0x38], 4	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7fc	            0xeb0a	                           jmp 0x400f808	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400f7fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6225	elf.c	FUNCTION_74	ELSE_3
0x400f802	    0x66c740380100	                mov word [rax + 0x38], 1	      6225	elf.c	FUNCTION_74	ELSE_3
0x400f808	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400f80c	          0x4889c7	                            mov rdi, rax	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400f80f	      0xe800000000	                          call 0x400f814	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400f814	            0x85c0	                           test eax, eax	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400f816	            0x750c	                           jne 0x400f824	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400f818	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f81c	    0x66c7403a0000	                mov word [rax + 0x3a], 0	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f822	            0xeb11	                           jmp 0x400f835	      6231	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f824	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f828	          0x8b4008	                mov eax, dword [rax + 8]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f82b	            0x89c2	                            mov edx, eax	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f82d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f831	        0x6689503a	               mov word [rax + 0x3a], dx	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400f835	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6245	elf.c	FUNCTION_74
0x400f839	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6245	elf.c	FUNCTION_74
0x400f840	         0xfb6400d	            movzx eax, byte [rax + 0xd] 	      6245	elf.c	FUNCTION_74
0x400f844	           0xfb6d0	                           movzx edx, al	      6245	elf.c	FUNCTION_74
0x400f847	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6245	elf.c	FUNCTION_74
0x400f84b	        0x48895028	             mov qword [rax + 0x28], rdx	      6245	elf.c	FUNCTION_74
0x400f84f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6246	elf.c	FUNCTION_74
0x400f853	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6246	elf.c	FUNCTION_74
0x400f85a	           0xfb600	                   movzx eax, byte [rax]	      6246	elf.c	FUNCTION_74
0x400f85d	           0xfb6d0	                           movzx edx, al	      6246	elf.c	FUNCTION_74
0x400f860	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6246	elf.c	FUNCTION_74
0x400f864	          0x89503c	             mov dword [rax + 0x3c], edx	      6246	elf.c	FUNCTION_74
0x400f867	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6249	elf.c	FUNCTION_74
0x400f86b	    0x48c740180000	               mov qword [rax + 0x18], 0	      6249	elf.c	FUNCTION_74
0x400f873	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6250	elf.c	FUNCTION_74
0x400f877	    0xc74040000000	               mov dword [rax + 0x40], 0	      6250	elf.c	FUNCTION_74
0x400f87e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6251	elf.c	FUNCTION_74
0x400f882	    0xc74044000000	               mov dword [rax + 0x44], 0	      6251	elf.c	FUNCTION_74
0x400f889	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6254	elf.c	FUNCTION_74
0x400f88d	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      6254	elf.c	FUNCTION_74
0x400f894	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6254	elf.c	FUNCTION_74
0x400f898	        0x48895010	             mov qword [rax + 0x10], rdx	      6254	elf.c	FUNCTION_74
0x400f89c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6255	elf.c	FUNCTION_74
0x400f8a0	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6255	elf.c	FUNCTION_74
0x400f8a7	         0xfb64002	               movzx eax, byte [rax + 2]	      6255	elf.c	FUNCTION_74
0x400f8ab	           0xfb6d0	                           movzx edx, al	      6255	elf.c	FUNCTION_74
0x400f8ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6255	elf.c	FUNCTION_74
0x400f8b2	          0x895048	             mov dword [rax + 0x48], edx	      6255	elf.c	FUNCTION_74
0x400f8b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6258	elf.c	FUNCTION_74	IF_5
0x400f8b9	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6258	elf.c	FUNCTION_74	IF_5
0x400f8bc	          0xc1e805	                              shr eax, 5	      6258	elf.c	FUNCTION_74	IF_5
0x400f8bf	      0x25ffff0f00	                        and eax, 0xfffff	      6258	elf.c	FUNCTION_74	IF_5
0x400f8c4	          0x83e002	                              and eax, 2	      6258	elf.c	FUNCTION_74	IF_5
0x400f8c7	            0x85c0	                           test eax, eax	      6258	elf.c	FUNCTION_74	IF_5
0x400f8c9	            0x7517	                           jne 0x400f8e2	      6258	elf.c	FUNCTION_74	IF_5
0x400f8cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6263	elf.c	FUNCTION_74	ELSE_4
0x400f8cf	    0xc74040000000	               mov dword [rax + 0x40], 0	      6263	elf.c	FUNCTION_74	ELSE_4
0x400f8d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6264	elf.c	FUNCTION_74	ELSE_4
0x400f8da	    0x48c740180000	               mov qword [rax + 0x18], 0	      6264	elf.c	FUNCTION_74	ELSE_4
0x400f8e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6267	elf.c	FUNCTION_74	CALL_6
0x400f8e6	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	      6267	elf.c	FUNCTION_74	CALL_6
0x400f8ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6268	elf.c	FUNCTION_74	CALL_7
0x400f8f1	      0xba00000000	                              mov edx, 0	      6268	elf.c	FUNCTION_74	CALL_7
0x400f8f6	      0xbe00000000	                              mov esi, 0	      6268	elf.c	FUNCTION_74	CALL_7
0x400f8fb	          0x4889c7	                            mov rdi, rax	      6268	elf.c	FUNCTION_74	CALL_7
0x400f8fe	      0xe800000000	                          call 0x400f903	      6268	elf.c	FUNCTION_74	CALL_7
0x400f903	          0x894368	             mov dword [rbx + 0x68], eax	      6267	elf.c	FUNCTION_74	CALL_6
0x400f906	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6269	elf.c	FUNCTION_74	CALL_8
0x400f90a	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	      6269	elf.c	FUNCTION_74	CALL_8
0x400f911	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6270	elf.c	FUNCTION_74	CALL_9
0x400f915	      0xba00000000	                              mov edx, 0	      6270	elf.c	FUNCTION_74	CALL_9
0x400f91a	      0xbe00000000	                              mov esi, 0	      6270	elf.c	FUNCTION_74	CALL_9
0x400f91f	          0x4889c7	                            mov rdi, rax	      6270	elf.c	FUNCTION_74	CALL_9
0x400f922	      0xe800000000	                          call 0x400f927	      6270	elf.c	FUNCTION_74	CALL_9
0x400f927	    0x898308010000	            mov dword [rbx + 0x108], eax	      6269	elf.c	FUNCTION_74	CALL_8
0x400f92d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6271	elf.c	FUNCTION_74	CALL_10
0x400f931	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	      6271	elf.c	FUNCTION_74	CALL_10
0x400f938	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6272	elf.c	FUNCTION_74	CALL_11
0x400f93c	      0xba00000000	                              mov edx, 0	      6272	elf.c	FUNCTION_74	CALL_11
0x400f941	      0xbe00000000	                              mov esi, 0	      6272	elf.c	FUNCTION_74	CALL_11
0x400f946	          0x4889c7	                            mov rdi, rax	      6272	elf.c	FUNCTION_74	CALL_11
0x400f949	      0xe800000000	                          call 0x400f94e	      6272	elf.c	FUNCTION_74	CALL_11
0x400f94e	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      6271	elf.c	FUNCTION_74	CALL_10
0x400f954	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x400f958	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x400f95f	          0x8b4068	            mov eax, dword [rax + 0x68] 	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x400f962	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x400f965	            0x742c	                            je 0x400f993	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x400f967	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6274	elf.c	FUNCTION_74	IF_6	CALL_13
0x400f96b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6274	elf.c	FUNCTION_74	IF_6	CALL_13
0x400f972	    0x8b8008010000	           mov eax, dword [rax + 0x108] 	      6274	elf.c	FUNCTION_74	IF_6	CALL_13
0x400f978	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      6274	elf.c	FUNCTION_74	IF_6	CALL_13
0x400f97b	            0x7416	                            je 0x400f993	      6274	elf.c	FUNCTION_74	IF_6	CALL_13
0x400f97d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6275	elf.c	FUNCTION_74	IF_6	CALL_14
0x400f981	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6275	elf.c	FUNCTION_74	IF_6	CALL_14
0x400f988	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      6275	elf.c	FUNCTION_74	IF_6	CALL_14
0x400f98e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      6275	elf.c	FUNCTION_74	IF_6	CALL_14
0x400f991	            0x7507	                           jne 0x400f99a	      6275	elf.c	FUNCTION_74	IF_6	CALL_14
0x400f993	      0xb800000000	                              mov eax, 0	      6276	elf.c	FUNCTION_74	IF_6
0x400f998	            0xeb05	                           jmp 0x400f99f	      6276	elf.c	FUNCTION_74	IF_6
0x400f99a	      0xb801000000	                              mov eax, 1	      6278	elf.c	FUNCTION_74
0x400f99f	        0x4883c438	                           add rsp, 0x38	      6279	elf.c	FUNCTION_74
0x400f9a3	              0x5b	                                 pop rbx	      6279	elf.c	FUNCTION_74
0x400f9a4	              0x5d	                                 pop rbp	      6279	elf.c	FUNCTION_74
0x400f9a5	              0xc3	                                     ret	      6279	elf.c	FUNCTION_74
_bfd_elf_compute_section_file_positions	ELSE,0:DO,0:CALL,20:WHILE,0:FOR,0:IF,14:SWITCH,0:functions,0	233
0x400a5e4	              0x55	                                push rbp	      4217	elf.c	FUNCTION_59
0x400a5e5	          0x4889e5	                            mov rbp, rsp	      4217	elf.c	FUNCTION_59
0x400a5e8	        0x4883ec70	                           sub rsp, 0x70	      4217	elf.c	FUNCTION_59
0x400a5ec	        0x48897d98	             mov qword [rbp - 0x68], rdi	      4217	elf.c	FUNCTION_59
0x400a5f0	        0x48897590	             mov qword [rbp - 0x70], rsi	      4217	elf.c	FUNCTION_59
0x400a5f4	    0x64488b042528	                mov rax, qword fs:[0x28]	      4217	elf.c	FUNCTION_59
0x400a5fd	        0x488945f8	                mov qword [rbp - 8], rax	      4217	elf.c	FUNCTION_59
0x400a601	            0x31c0	                            xor eax, eax	      4217	elf.c	FUNCTION_59
0x400a603	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4218	elf.c	FUNCTION_59	CALL_1
0x400a607	        0x488b4008	                mov rax, qword [rax + 8]	      4218	elf.c	FUNCTION_59	CALL_1
0x400a60b	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4218	elf.c	FUNCTION_59	CALL_1
0x400a612	        0x488945c8	             mov qword [rbp - 0x38], rax	      4218	elf.c	FUNCTION_59	CALL_1
0x400a616	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      4221	elf.c	FUNCTION_59
0x400a61e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4225	elf.c	FUNCTION_59	IF_1
0x400a622	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      4225	elf.c	FUNCTION_59	IF_1
0x400a626	          0x83e040	                           and eax, 0x40	      4225	elf.c	FUNCTION_59	IF_1
0x400a629	            0x84c0	                             test al, al	      4225	elf.c	FUNCTION_59	IF_1
0x400a62b	            0x740a	                            je 0x400a637	      4225	elf.c	FUNCTION_59	IF_1
0x400a62d	      0xb801000000	                              mov eax, 1	      4226	elf.c	FUNCTION_59	IF_1
0x400a632	      0xe94b030000	                           jmp 0x400a982	      4226	elf.c	FUNCTION_59	IF_1
0x400a637	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4229	elf.c	FUNCTION_59	IF_2
0x400a63b	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      4229	elf.c	FUNCTION_59	IF_2
0x400a642	          0x4885c0	                           test rax, rax	      4229	elf.c	FUNCTION_59	IF_2
0x400a645	            0x741b	                            je 0x400a662	      4229	elf.c	FUNCTION_59	IF_2
0x400a647	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4230	elf.c	FUNCTION_59	IF_2
0x400a64b	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      4230	elf.c	FUNCTION_59	IF_2
0x400a652	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      4230	elf.c	FUNCTION_59	IF_2
0x400a656	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4230	elf.c	FUNCTION_59	IF_2
0x400a65a	          0x4889ce	                            mov rsi, rcx	      4230	elf.c	FUNCTION_59	IF_2
0x400a65d	          0x4889d7	                            mov rdi, rdx	      4230	elf.c	FUNCTION_59	IF_2
0x400a660	            0xffd0	                                call rax	      4230	elf.c	FUNCTION_59	IF_2
0x400a662	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4232	elf.c	FUNCTION_59	IF_3	CALL_2
0x400a666	          0x4889c7	                            mov rdi, rax	      4232	elf.c	FUNCTION_59	IF_3	CALL_2
0x400a669	      0xe861500000	                   call sym.prep_headers	      4232	elf.c	FUNCTION_59	IF_3	CALL_2
0x400a66e	            0x85c0	                           test eax, eax	      4232	elf.c	FUNCTION_59	IF_3	CALL_2
0x400a670	            0x750a	                           jne 0x400a67c	      4232	elf.c	FUNCTION_59	IF_3	CALL_2
0x400a672	      0xb800000000	                              mov eax, 0	      4233	elf.c	FUNCTION_59	IF_3
0x400a677	      0xe906030000	                           jmp 0x400a982	      4233	elf.c	FUNCTION_59	IF_3
0x400a67c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4236	elf.c	FUNCTION_59
0x400a680	    0x488b80880100	           mov rax, qword [rax + 0x188] 	      4236	elf.c	FUNCTION_59
0x400a687	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      4236	elf.c	FUNCTION_59
0x400a68b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4236	elf.c	FUNCTION_59
0x400a68f	          0x4889ce	                            mov rsi, rcx	      4236	elf.c	FUNCTION_59
0x400a692	          0x4889d7	                            mov rdi, rdx	      4236	elf.c	FUNCTION_59
0x400a695	            0xffd0	                                call rax	      4236	elf.c	FUNCTION_59
0x400a697	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      4238	elf.c	FUNCTION_59
0x400a69e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4239	elf.c	FUNCTION_59
0x400a6a2	        0x488945e0	             mov qword [rbp - 0x20], rax	      4239	elf.c	FUNCTION_59
0x400a6a6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      4240	elf.c	FUNCTION_59	CALL_3
0x400a6aa	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4240	elf.c	FUNCTION_59	CALL_3
0x400a6ae	      0xbe00000000	                              mov esi, 0	      4240	elf.c	FUNCTION_59	CALL_3
0x400a6b3	          0x4889c7	                            mov rdi, rax	      4240	elf.c	FUNCTION_59	CALL_3
0x400a6b6	      0xe800000000	                          call 0x400a6bb	      4240	elf.c	FUNCTION_59	CALL_3
0x400a6bb	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4241	elf.c	FUNCTION_59	IF_4
0x400a6be	            0x85c0	                           test eax, eax	      4241	elf.c	FUNCTION_59	IF_4
0x400a6c0	            0x740a	                            je 0x400a6cc	      4241	elf.c	FUNCTION_59	IF_4
0x400a6c2	      0xb800000000	                              mov eax, 0	      4242	elf.c	FUNCTION_59	IF_4
0x400a6c7	      0xe9b6020000	                           jmp 0x400a982	      4242	elf.c	FUNCTION_59	IF_4
0x400a6cc	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400a6d0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400a6d4	          0x4889d6	                            mov rsi, rdx	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400a6d7	          0x4889c7	                            mov rdi, rax	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400a6da	      0xe859e7ffff	         call sym.assign_section_numbers	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400a6df	            0x85c0	                           test eax, eax	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400a6e1	            0x750a	                           jne 0x400a6ed	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400a6e3	      0xb800000000	                              mov eax, 0	      4245	elf.c	FUNCTION_59	IF_5
0x400a6e8	      0xe995020000	                           jmp 0x400a982	      4245	elf.c	FUNCTION_59	IF_5
0x400a6ed	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4249	elf.c	FUNCTION_59
0x400a6f2	            0x752c	                           jne 0x400a720	      4249	elf.c	FUNCTION_59
0x400a6f4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4249	elf.c	FUNCTION_59
0x400a6f8	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4249	elf.c	FUNCTION_59
0x400a6fe	            0x85c0	                           test eax, eax	      4249	elf.c	FUNCTION_59
0x400a700	            0x7517	                           jne 0x400a719	      4249	elf.c	FUNCTION_59
0x400a702	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4250	elf.c	FUNCTION_59
0x400a706	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4250	elf.c	FUNCTION_59
0x400a709	          0xc1e805	                              shr eax, 5	      4250	elf.c	FUNCTION_59
0x400a70c	      0x25ffff0f00	                        and eax, 0xfffff	      4250	elf.c	FUNCTION_59
0x400a711	          0x83e043	                           and eax, 0x43	      4250	elf.c	FUNCTION_59
0x400a714	          0x83f801	                              cmp eax, 1	      4250	elf.c	FUNCTION_59
0x400a717	            0x7507	                           jne 0x400a720	      4250	elf.c	FUNCTION_59
0x400a719	      0xb801000000	                              mov eax, 1	      4249	elf.c	FUNCTION_59
0x400a71e	            0xeb05	                           jmp 0x400a725	      4249	elf.c	FUNCTION_59
0x400a720	      0xb800000000	                              mov eax, 0	      4249	elf.c	FUNCTION_59
0x400a725	          0x8945b0	             mov dword [rbp - 0x50], eax	      4248	elf.c	FUNCTION_59
0x400a728	        0x837db000	               cmp dword [rbp - 0x50], 0	      4252	elf.c	FUNCTION_59	IF_6
0x400a72c	            0x7441	                            je 0x400a76f	      4252	elf.c	FUNCTION_59	IF_6
0x400a72e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4255	elf.c	FUNCTION_59	IF_6
0x400a732	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4255	elf.c	FUNCTION_59	IF_6
0x400a735	          0xc1e805	                              shr eax, 5	      4255	elf.c	FUNCTION_59	IF_6
0x400a738	      0x25ffff0f00	                        and eax, 0xfffff	      4255	elf.c	FUNCTION_59	IF_6
0x400a73d	          0x83e042	                           and eax, 0x42	      4255	elf.c	FUNCTION_59	IF_6
0x400a740	            0x85c0	                           test eax, eax	      4255	elf.c	FUNCTION_59	IF_6
0x400a742	           0xf94c0	                                 sete al	      4255	elf.c	FUNCTION_59	IF_6
0x400a745	           0xfb6c0	                           movzx eax, al	      4255	elf.c	FUNCTION_59	IF_6
0x400a748	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4255	elf.c	FUNCTION_59	IF_6
0x400a74b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a74e	        0x488d4db8	                   lea rcx, [rbp - 0x48]	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a752	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a756	          0x4889ce	                            mov rsi, rcx	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a759	          0x4889c7	                            mov rdi, rax	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a75c	      0xe8e8930000	                  call sym.swap_out_syms	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a761	            0x85c0	                           test eax, eax	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a763	            0x750a	                           jne 0x400a76f	      4257	elf.c	FUNCTION_59	IF_6	IF_7	CALL_5
0x400a765	      0xb800000000	                              mov eax, 0	      4258	elf.c	FUNCTION_59	IF_6	IF_7
0x400a76a	      0xe913020000	                           jmp 0x400a982	      4258	elf.c	FUNCTION_59	IF_6	IF_7
0x400a76f	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      4261	elf.c	FUNCTION_59
0x400a776	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4262	elf.c	FUNCTION_59	IF_8
0x400a77b	            0x7526	                           jne 0x400a7a3	      4262	elf.c	FUNCTION_59	IF_8
0x400a77d	        0x488d55ac	                   lea rdx, [rbp - 0x54]	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x400a781	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x400a785	      0xbe00000000	                              mov esi, 0	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x400a78a	          0x4889c7	                            mov rdi, rax	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x400a78d	      0xe800000000	                          call 0x400a792	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x400a792	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x400a795	            0x85c0	                           test eax, eax	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x400a797	            0x740a	                            je 0x400a7a3	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x400a799	      0xb800000000	                              mov eax, 0	      4266	elf.c	FUNCTION_59	IF_8	IF_9
0x400a79e	      0xe9df010000	                           jmp 0x400a982	      4266	elf.c	FUNCTION_59	IF_8	IF_9
0x400a7a3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4269	elf.c	FUNCTION_59	CALL_7
0x400a7a7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4269	elf.c	FUNCTION_59	CALL_7
0x400a7ae	    0x4805b8000000	                           add rax, 0xb8	      4269	elf.c	FUNCTION_59	CALL_7
0x400a7b4	        0x488945d0	             mov qword [rbp - 0x30], rax	      4269	elf.c	FUNCTION_59	CALL_7
0x400a7b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4271	elf.c	FUNCTION_59
0x400a7bc	    0xc74004030000	                  mov dword [rax + 4], 3	      4271	elf.c	FUNCTION_59
0x400a7c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4272	elf.c	FUNCTION_59
0x400a7c7	    0x488b90800300	           mov rdx, qword [rax + 0x380] 	      4272	elf.c	FUNCTION_59
0x400a7ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4272	elf.c	FUNCTION_59
0x400a7d2	        0x48895008	                mov qword [rax + 8], rdx	      4272	elf.c	FUNCTION_59
0x400a7d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4273	elf.c	FUNCTION_59
0x400a7da	    0x48c740100000	               mov qword [rax + 0x10], 0	      4273	elf.c	FUNCTION_59
0x400a7e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4275	elf.c	FUNCTION_59
0x400a7e6	    0x48c740380000	               mov qword [rax + 0x38], 0	      4275	elf.c	FUNCTION_59
0x400a7ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4276	elf.c	FUNCTION_59
0x400a7f2	    0xc74028000000	               mov dword [rax + 0x28], 0	      4276	elf.c	FUNCTION_59
0x400a7f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4277	elf.c	FUNCTION_59
0x400a7fd	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      4277	elf.c	FUNCTION_59
0x400a804	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4279	elf.c	FUNCTION_59
0x400a808	    0x48c740300100	               mov qword [rax + 0x30], 1	      4279	elf.c	FUNCTION_59
0x400a810	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400a814	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400a818	          0x4889d6	                            mov rsi, rdx	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400a81b	          0x4889c7	                            mov rdi, rax	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400a81e	      0xe8094a0000	call sym.assign_file_positions_except_relocs	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400a823	            0x85c0	                           test eax, eax	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400a825	            0x750a	                           jne 0x400a831	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400a827	      0xb800000000	                              mov eax, 0	      4282	elf.c	FUNCTION_59	IF_10
0x400a82c	      0xe951010000	                           jmp 0x400a982	      4282	elf.c	FUNCTION_59	IF_10
0x400a831	        0x837db000	               cmp dword [rbp - 0x50], 0	      4284	elf.c	FUNCTION_59	IF_11
0x400a835	     0xf8434010000	                            je 0x400a96f	      4284	elf.c	FUNCTION_59	IF_11
0x400a83b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x400a83f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x400a846	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x400a84d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x400a851	        0x488945c0	             mov qword [rbp - 0x40], rax	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x400a855	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4291	elf.c	FUNCTION_59	IF_11	CALL_10
0x400a859	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4291	elf.c	FUNCTION_59	IF_11	CALL_10
0x400a860	        0x4883c068	                           add rax, 0x68	      4291	elf.c	FUNCTION_59	IF_11	CALL_10
0x400a864	        0x488945d8	             mov qword [rbp - 0x28], rax	      4291	elf.c	FUNCTION_59	IF_11	CALL_10
0x400a868	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x400a86c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x400a870	      0xba01000000	                              mov edx, 1	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x400a875	          0x4889ce	                            mov rsi, rcx	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x400a878	          0x4889c7	                            mov rdi, rax	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x400a87b	      0xe800000000	                          call 0x400a880	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x400a880	        0x488945c0	             mov qword [rbp - 0x40], rax	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x400a884	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x400a888	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x400a88f	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x400a896	          0x4885c0	                           test rax, rax	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x400a899	            0x743f	                            je 0x400a8da	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x400a89b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4296	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x400a89f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4296	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x400a8a6	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      4296	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x400a8ad	        0x488945d8	             mov qword [rbp - 0x28], rax	      4296	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x400a8b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x400a8b5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x400a8b9	          0x4885c0	                           test rax, rax	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x400a8bc	            0x741c	                            je 0x400a8da	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x400a8be	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x400a8c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x400a8c6	      0xba01000000	                              mov edx, 1	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x400a8cb	          0x4889ce	                            mov rsi, rcx	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x400a8ce	          0x4889c7	                            mov rdi, rax	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x400a8d1	      0xe800000000	                          call 0x400a8d6	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x400a8d6	        0x488945c0	             mov qword [rbp - 0x40], rax	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x400a8da	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4302	elf.c	FUNCTION_59	IF_11	CALL_15
0x400a8de	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4302	elf.c	FUNCTION_59	IF_11	CALL_15
0x400a8e5	    0x480508010000	                          add rax, 0x108	      4302	elf.c	FUNCTION_59	IF_11	CALL_15
0x400a8eb	        0x488945d8	             mov qword [rbp - 0x28], rax	      4302	elf.c	FUNCTION_59	IF_11	CALL_15
0x400a8ef	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x400a8f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x400a8f7	      0xba01000000	                              mov edx, 1	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x400a8fc	          0x4889ce	                            mov rsi, rcx	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x400a8ff	          0x4889c7	                            mov rdi, rax	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x400a902	      0xe800000000	                          call 0x400a907	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x400a907	        0x488945c0	             mov qword [rbp - 0x40], rax	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x400a90b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x400a90f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x400a916	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x400a91d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x400a921	        0x48895040	             mov qword [rax + 0x40], rdx	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x400a925	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a929	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a92d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a931	      0xba00000000	                              mov edx, 0	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a936	          0x4889ce	                            mov rsi, rcx	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a939	          0x4889c7	                            mov rdi, rax	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a93c	      0xe800000000	                          call 0x400a941	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a941	            0x85c0	                           test eax, eax	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a943	            0x7517	                           jne 0x400a95c	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400a945	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400a949	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400a94d	          0x4889d6	                            mov rsi, rdx	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400a950	          0x4889c7	                            mov rdi, rax	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400a953	      0xe800000000	                          call 0x400a958	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400a958	            0x85c0	                           test eax, eax	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400a95a	            0x7507	                           jne 0x400a963	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400a95c	      0xb800000000	                              mov eax, 0	      4311	elf.c	FUNCTION_59	IF_11	IF_14
0x400a961	            0xeb1f	                           jmp 0x400a982	      4311	elf.c	FUNCTION_59	IF_11	IF_14
0x400a963	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4312	elf.c	FUNCTION_59	IF_11	CALL_20
0x400a967	          0x4889c7	                            mov rdi, rax	      4312	elf.c	FUNCTION_59	IF_11	CALL_20
0x400a96a	      0xe800000000	                          call 0x400a96f	      4312	elf.c	FUNCTION_59	IF_11	CALL_20
0x400a96f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4315	elf.c	FUNCTION_59
0x400a973	         0xfb65047	           movzx edx, byte [rax + 0x47] 	      4315	elf.c	FUNCTION_59
0x400a977	          0x83ca40	                            or edx, 0x40	      4315	elf.c	FUNCTION_59
0x400a97a	          0x885047	               mov byte [rax + 0x47], dl	      4315	elf.c	FUNCTION_59
0x400a97d	      0xb801000000	                              mov eax, 1	      4317	elf.c	FUNCTION_59
0x400a982	        0x488b75f8	                mov rsi, qword [rbp - 8]	      4318	elf.c	FUNCTION_59
0x400a986	    0x644833342528	                xor rsi, qword fs:[0x28]	      4318	elf.c	FUNCTION_59
0x400a98f	            0x7405	                            je 0x400a996	      4318	elf.c	FUNCTION_59
0x400a991	      0xe800000000	                          call 0x400a996	      4318	elf.c	FUNCTION_59
0x400a996	              0xc9	                                   leave	      4318	elf.c	FUNCTION_59
0x400a997	              0xc3	                                     ret	      4318	elf.c	FUNCTION_59
_bfd_elf_rela_local_sym	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	87
0x401ae03	              0x55	                                push rbp	     11273	elf.c	FUNCTION_196
0x401ae04	          0x4889e5	                            mov rbp, rsp	     11273	elf.c	FUNCTION_196
0x401ae07	        0x4883ec30	                           sub rsp, 0x30	     11273	elf.c	FUNCTION_196
0x401ae0b	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11273	elf.c	FUNCTION_196
0x401ae0f	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11273	elf.c	FUNCTION_196
0x401ae13	        0x488955d8	             mov qword [rbp - 0x28], rdx	     11273	elf.c	FUNCTION_196
0x401ae17	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     11273	elf.c	FUNCTION_196
0x401ae1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11274	elf.c	FUNCTION_196
0x401ae1f	          0x488b00	                    mov rax, qword [rax]	     11274	elf.c	FUNCTION_196
0x401ae22	        0x488945f0	             mov qword [rbp - 0x10], rax	     11274	elf.c	FUNCTION_196
0x401ae26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11277	elf.c	FUNCTION_196
0x401ae2a	        0x488b4068	            mov rax, qword [rax + 0x68] 	     11277	elf.c	FUNCTION_196
0x401ae2e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     11277	elf.c	FUNCTION_196
0x401ae32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11278	elf.c	FUNCTION_196
0x401ae36	        0x488b4060	            mov rax, qword [rax + 0x60] 	     11278	elf.c	FUNCTION_196
0x401ae3a	          0x4801c2	                            add rdx, rax	     11278	elf.c	FUNCTION_196
0x401ae3d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11279	elf.c	FUNCTION_196
0x401ae41	          0x488b00	                    mov rax, qword [rax]	     11279	elf.c	FUNCTION_196
0x401ae44	          0x4801d0	                            add rax, rdx	     11277	elf.c	FUNCTION_196
0x401ae47	        0x488945f8	                mov qword [rbp - 8], rax	     11277	elf.c	FUNCTION_196
0x401ae4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11280	elf.c	FUNCTION_196	IF_1
0x401ae4f	          0x8b4020	            mov eax, dword [rax + 0x20] 	     11280	elf.c	FUNCTION_196	IF_1
0x401ae52	      0x2500008000	                       and eax, 0x800000	     11280	elf.c	FUNCTION_196	IF_1
0x401ae57	            0x85c0	                           test eax, eax	     11280	elf.c	FUNCTION_196	IF_1
0x401ae59	     0xf84e8000000	                            je 0x401af47	     11280	elf.c	FUNCTION_196	IF_1
0x401ae5f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x401ae63	         0xfb64018	           movzx eax, byte [rax + 0x18] 	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x401ae67	           0xfb6c0	                           movzx eax, al	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x401ae6a	          0x83e00f	                            and eax, 0xf	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x401ae6d	          0x83f803	                              cmp eax, 3	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x401ae70	     0xf85d1000000	                           jne 0x401af47	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x401ae76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11282	elf.c	FUNCTION_196	IF_1
0x401ae7a	         0xfb74024	           movzx eax, word [rax + 0x24] 	     11282	elf.c	FUNCTION_196	IF_1
0x401ae7e	        0x66258003	                           and ax, 0x380	     11282	elf.c	FUNCTION_196	IF_1
0x401ae82	        0x663d0001	                           cmp ax, 0x100	     11282	elf.c	FUNCTION_196	IF_1
0x401ae86	     0xf85bb000000	                           jne 0x401af47	     11282	elf.c	FUNCTION_196	IF_1
0x401ae8c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11287	elf.c	FUNCTION_196	IF_1
0x401ae90	          0x488b10	                    mov rdx, qword [rax]	     11287	elf.c	FUNCTION_196	IF_1
0x401ae93	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11287	elf.c	FUNCTION_196	IF_1
0x401ae97	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11287	elf.c	FUNCTION_196	IF_1
0x401ae9b	        0x488d0c02	                    lea rcx, [rdx + rax]	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401ae9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11286	elf.c	FUNCTION_196	IF_1	CALL_3
0x401aea3	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	     11286	elf.c	FUNCTION_196	IF_1	CALL_3
0x401aeaa	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401aeb1	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401aeb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401aeb9	          0x4889c7	                            mov rdi, rax	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401aebc	      0xe800000000	                          call 0x401aec1	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401aec1	          0x4889c2	                            mov rdx, rax	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401aec4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11284	elf.c	FUNCTION_196	IF_1
0x401aec8	        0x48895010	             mov qword [rax + 0x10], rdx	     11284	elf.c	FUNCTION_196	IF_1
0x401aecc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x401aed0	          0x488b00	                    mov rax, qword [rax]	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x401aed3	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x401aed7	            0x742d	                            je 0x401af06	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x401aed9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aedd	          0x8b4020	            mov eax, dword [rax + 0x20] 	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aee0	      0x2500800000	                         and eax, 0x8000	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aee5	            0x85c0	                           test eax, eax	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aee7	            0x7412	                            je 0x401aefb	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aee9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aeed	          0x488b10	                    mov rdx, qword [rax]	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aef0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aef4	    0x488990c80000	             mov qword [rax + 0xc8], rdx	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401aefb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11297	elf.c	FUNCTION_196	IF_1	IF_2
0x401aeff	          0x488b00	                    mov rax, qword [rax]	     11297	elf.c	FUNCTION_196	IF_1	IF_2
0x401af02	        0x488945f0	             mov qword [rbp - 0x10], rax	     11297	elf.c	FUNCTION_196	IF_1	IF_2
0x401af06	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11299	elf.c	FUNCTION_196	IF_1
0x401af0a	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11299	elf.c	FUNCTION_196	IF_1
0x401af0e	        0x482b45f8	                sub rax, qword [rbp - 8]	     11299	elf.c	FUNCTION_196	IF_1
0x401af12	          0x4889c2	                            mov rdx, rax	     11299	elf.c	FUNCTION_196	IF_1
0x401af15	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11299	elf.c	FUNCTION_196	IF_1
0x401af19	        0x48895010	             mov qword [rax + 0x10], rdx	     11299	elf.c	FUNCTION_196	IF_1
0x401af1d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11300	elf.c	FUNCTION_196	IF_1
0x401af21	        0x488b5010	            mov rdx, qword [rax + 0x10] 	     11300	elf.c	FUNCTION_196	IF_1
0x401af25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11300	elf.c	FUNCTION_196	IF_1
0x401af29	        0x488b4068	            mov rax, qword [rax + 0x68] 	     11300	elf.c	FUNCTION_196	IF_1
0x401af2d	        0x488b4828	            mov rcx, qword [rax + 0x28] 	     11300	elf.c	FUNCTION_196	IF_1
0x401af31	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11300	elf.c	FUNCTION_196	IF_1
0x401af35	        0x488b4060	            mov rax, qword [rax + 0x60] 	     11300	elf.c	FUNCTION_196	IF_1
0x401af39	          0x4801c8	                            add rax, rcx	     11300	elf.c	FUNCTION_196	IF_1
0x401af3c	          0x4801c2	                            add rdx, rax	     11300	elf.c	FUNCTION_196	IF_1
0x401af3f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     11300	elf.c	FUNCTION_196	IF_1
0x401af43	        0x48895010	             mov qword [rax + 0x10], rdx	     11300	elf.c	FUNCTION_196	IF_1
0x401af47	        0x488b45f8	                mov rax, qword [rbp - 8]	     11302	elf.c	FUNCTION_196
0x401af4b	              0xc9	                                   leave	     11303	elf.c	FUNCTION_196
0x401af4c	              0xc3	                                     ret	     11303	elf.c	FUNCTION_196
_bfd_elf_copy_private_header_data	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	43
0x40138e9	              0x55	                                push rbp	      7674	elf.c	FUNCTION_86
0x40138ea	          0x4889e5	                            mov rbp, rsp	      7674	elf.c	FUNCTION_86
0x40138ed	        0x4883ec10	                           sub rsp, 0x10	      7674	elf.c	FUNCTION_86
0x40138f1	        0x48897df8	                mov qword [rbp - 8], rdi	      7674	elf.c	FUNCTION_86
0x40138f5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      7674	elf.c	FUNCTION_86
0x40138f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7675	elf.c	FUNCTION_86	IF_1
0x40138fd	        0x488b4008	                mov rax, qword [rax + 8]	      7675	elf.c	FUNCTION_86	IF_1
0x4013901	          0x8b4008	                mov eax, dword [rax + 8]	      7675	elf.c	FUNCTION_86	IF_1
0x4013904	          0x83f805	                              cmp eax, 5	      7675	elf.c	FUNCTION_86	IF_1
0x4013907	            0x7510	                           jne 0x4013919	      7675	elf.c	FUNCTION_86	IF_1
0x4013909	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7676	elf.c	FUNCTION_86	IF_1
0x401390d	        0x488b4008	                mov rax, qword [rax + 8]	      7676	elf.c	FUNCTION_86	IF_1
0x4013911	          0x8b4008	                mov eax, dword [rax + 8]	      7676	elf.c	FUNCTION_86	IF_1
0x4013914	          0x83f805	                              cmp eax, 5	      7676	elf.c	FUNCTION_86	IF_1
0x4013917	            0x7407	                            je 0x4013920	      7676	elf.c	FUNCTION_86	IF_1
0x4013919	      0xb801000000	                              mov eax, 1	      7677	elf.c	FUNCTION_86	IF_1
0x401391e	            0xeb5d	                           jmp 0x401397d	      7677	elf.c	FUNCTION_86	IF_1
0x4013920	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x4013924	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x401392b	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x4013932	          0x488b00	                    mov rax, qword [rax]	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x4013935	          0x4885c0	                           test rax, rax	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x4013938	            0x7532	                           jne 0x401396c	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x401393a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x401393e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x4013945	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x4013949	          0x4885c0	                           test rax, rax	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x401394c	            0x741e	                            je 0x401396c	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x401394e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x4013952	        0x488b45f8	                mov rax, qword [rbp - 8]	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x4013956	          0x4889d6	                            mov rsi, rdx	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x4013959	          0x4889c7	                            mov rdi, rax	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x401395c	      0xe8bbf2ffff	          call sym.copy_private_bfd_data	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x4013961	            0x85c0	                           test eax, eax	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x4013963	            0x7507	                           jne 0x401396c	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x4013965	      0xb800000000	                              mov eax, 0	      7687	elf.c	FUNCTION_86	IF_2	IF_3
0x401396a	            0xeb11	                           jmp 0x401397d	      7687	elf.c	FUNCTION_86	IF_2	IF_3
0x401396c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7690	elf.c	FUNCTION_86	CALL_4
0x4013970	      0xbe00000000	                              mov esi, 0	      7690	elf.c	FUNCTION_86	CALL_4
0x4013975	          0x4889c7	                            mov rdi, rax	      7690	elf.c	FUNCTION_86	CALL_4
0x4013978	      0xe800000000	                          call 0x401397d	      7690	elf.c	FUNCTION_86	CALL_4
0x401397d	              0xc9	                                   leave	      7691	elf.c	FUNCTION_86
0x401397e	              0xc3	                                     ret	      7691	elf.c	FUNCTION_86
_bfd_elf_canonicalize_dynamic_reloc	ELSE,0:DO,0:CALL,9:WHILE,0:FOR,2:IF,3:SWITCH,0:functions,0	90
0x4014d97	              0x55	                                push rbp	      8241	elf.c	FUNCTION_96
0x4014d98	          0x4889e5	                            mov rbp, rsp	      8241	elf.c	FUNCTION_96
0x4014d9b	        0x4883ec50	                           sub rsp, 0x50	      8241	elf.c	FUNCTION_96
0x4014d9f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      8241	elf.c	FUNCTION_96
0x4014da3	        0x488975c0	             mov qword [rbp - 0x40], rsi	      8241	elf.c	FUNCTION_96
0x4014da7	        0x488955b8	             mov qword [rbp - 0x48], rdx	      8241	elf.c	FUNCTION_96
0x4014dab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x4014daf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x4014db6	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x4014dbc	            0x85c0	                           test eax, eax	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x4014dbe	            0x7516	                           jne 0x4014dd6	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x4014dc0	      0xbf05000000	                              mov edi, 5	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x4014dc5	      0xe800000000	                          call 0x4014dca	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x4014dca	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8249	elf.c	FUNCTION_96	IF_1
0x4014dd1	      0xe943010000	                           jmp 0x4014f19	      8249	elf.c	FUNCTION_96	IF_1
0x4014dd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8252	elf.c	FUNCTION_96	CALL_4
0x4014dda	        0x488b4008	                mov rax, qword [rax + 8]	      8252	elf.c	FUNCTION_96	CALL_4
0x4014dde	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8252	elf.c	FUNCTION_96	CALL_4
0x4014de5	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8252	elf.c	FUNCTION_96	CALL_4
0x4014dec	        0x488b4040	            mov rax, qword [rax + 0x40] 	      8252	elf.c	FUNCTION_96	CALL_4
0x4014df0	        0x488945f0	             mov qword [rbp - 0x10], rax	      8252	elf.c	FUNCTION_96	CALL_4
0x4014df4	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      8253	elf.c	FUNCTION_96
0x4014dfc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8254	elf.c	FUNCTION_96	FOR_1
0x4014e00	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      8254	elf.c	FUNCTION_96	FOR_1
0x4014e07	        0x488945d0	             mov qword [rbp - 0x30], rax	      8254	elf.c	FUNCTION_96	FOR_1
0x4014e0b	      0xe9ef000000	                           jmp 0x4014eff	      8254	elf.c	FUNCTION_96	FOR_1
0x4014e10	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e14	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e1b	          0x8b5028	            mov edx, dword [rax + 0x28] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e1e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e22	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e29	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e2f	            0x39c2	                            cmp edx, eax	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e31	     0xf85bc000000	                           jne 0x4014ef3	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x4014e37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x4014e3b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x4014e42	          0x8b4004	                mov eax, dword [rax + 4]	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x4014e45	          0x83f809	                              cmp eax, 9	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x4014e48	            0x7417	                            je 0x4014e61	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x4014e4a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8258	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_8
0x4014e4e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      8258	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_8
0x4014e55	          0x8b4004	                mov eax, dword [rax + 4]	      8258	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_8
0x4014e58	          0x83f804	                              cmp eax, 4	      8258	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_8
0x4014e5b	     0xf8592000000	                           jne 0x4014ef3	      8258	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_8
0x4014e61	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e65	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e69	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e71	      0xb901000000	                              mov ecx, 1	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e76	            0xffd0	                                call rax	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e78	            0x85c0	                           test eax, eax	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e7a	            0x750c	                           jne 0x4014e88	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e7c	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8264	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e83	      0xe991000000	                           jmp 0x4014f19	      8264	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x4014e88	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014e8c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014e90	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014e94	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014e9b	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014e9f	      0xba00000000	                              mov edx, 0	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014ea4	          0x48f7f1	                                 div rcx	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014ea7	        0x488945f8	                mov qword [rbp - 8], rax	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x4014eab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8266	elf.c	FUNCTION_96	FOR_1	IF_2
0x4014eaf	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8266	elf.c	FUNCTION_96	FOR_1	IF_2
0x4014eb3	        0x488945e0	             mov qword [rbp - 0x20], rax	      8266	elf.c	FUNCTION_96	FOR_1	IF_2
0x4014eb7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ebf	            0xeb20	                           jmp 0x4014ee1	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ec1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ec5	        0x488d5008	                      lea rdx, [rax + 8]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ec9	        0x488955c0	             mov qword [rbp - 0x40], rdx	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ecd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ed1	        0x488d4a20	                   lea rcx, [rdx + 0x20]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ed5	        0x48894de0	             mov qword [rbp - 0x20], rcx	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ed9	          0x488910	                    mov qword [rax], rdx	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014edc	      0x488345e801	               add qword [rbp - 0x18], 1	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ee1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ee5	        0x483b45f8	                cmp rax, qword [rbp - 8]	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014ee9	            0x7cd6	                            jl 0x4014ec1	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x4014eeb	        0x488b45f8	                mov rax, qword [rbp - 8]	      8269	elf.c	FUNCTION_96	FOR_1	IF_2
0x4014eef	        0x480145d8	            add qword [rbp - 0x28], rax 	      8269	elf.c	FUNCTION_96	FOR_1	IF_2
0x4014ef3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8254	elf.c	FUNCTION_96	FOR_1
0x4014ef7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8254	elf.c	FUNCTION_96	FOR_1
0x4014efb	        0x488945d0	             mov qword [rbp - 0x30], rax	      8254	elf.c	FUNCTION_96	FOR_1
0x4014eff	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      8254	elf.c	FUNCTION_96	FOR_1
0x4014f04	     0xf8506ffffff	                           jne 0x4014e10	      8254	elf.c	FUNCTION_96	FOR_1
0x4014f0a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8273	elf.c	FUNCTION_96
0x4014f0e	    0x48c700000000	                      mov qword [rax], 0	      8273	elf.c	FUNCTION_96
0x4014f15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8275	elf.c	FUNCTION_96
0x4014f19	              0xc9	                                   leave	      8276	elf.c	FUNCTION_96
0x4014f1a	              0xc3	                                     ret	      8276	elf.c	FUNCTION_96
_bfd_elf_copy_private_symbol_data	ELSE,4:DO,0:CALL,8:WHILE,0:FOR,0:IF,7:SWITCH,0:functions,0	118
0x401397f	              0x55	                                push rbp	      7710	elf.c	FUNCTION_87
0x4013980	          0x4889e5	                            mov rbp, rsp	      7710	elf.c	FUNCTION_87
0x4013983	        0x4883ec40	                           sub rsp, 0x40	      7710	elf.c	FUNCTION_87
0x4013987	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7710	elf.c	FUNCTION_87
0x401398b	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7710	elf.c	FUNCTION_87
0x401398f	        0x488955c8	             mov qword [rbp - 0x38], rdx	      7710	elf.c	FUNCTION_87
0x4013993	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      7710	elf.c	FUNCTION_87
0x4013997	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7713	elf.c	FUNCTION_87	IF_1
0x401399b	        0x488b4008	                mov rax, qword [rax + 8]	      7713	elf.c	FUNCTION_87	IF_1
0x401399f	          0x8b4008	                mov eax, dword [rax + 8]	      7713	elf.c	FUNCTION_87	IF_1
0x40139a2	          0x83f805	                              cmp eax, 5	      7713	elf.c	FUNCTION_87	IF_1
0x40139a5	            0x7510	                           jne 0x40139b7	      7713	elf.c	FUNCTION_87	IF_1
0x40139a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7714	elf.c	FUNCTION_87	IF_1
0x40139ab	        0x488b4008	                mov rax, qword [rax + 8]	      7714	elf.c	FUNCTION_87	IF_1
0x40139af	          0x8b4008	                mov eax, dword [rax + 8]	      7714	elf.c	FUNCTION_87	IF_1
0x40139b2	          0x83f805	                              cmp eax, 5	      7714	elf.c	FUNCTION_87	IF_1
0x40139b5	            0x740a	                            je 0x40139c1	      7714	elf.c	FUNCTION_87	IF_1
0x40139b7	      0xb801000000	                              mov eax, 1	      7715	elf.c	FUNCTION_87	IF_1
0x40139bc	      0xe986010000	                           jmp 0x4013b47	      7715	elf.c	FUNCTION_87	IF_1
0x40139c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139c5	          0x488b00	                    mov rax, qword [rax]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139c8	          0x4885c0	                           test rax, rax	      7717	elf.c	FUNCTION_87	CALL_1
0x40139cb	            0x742c	                            je 0x40139f9	      7717	elf.c	FUNCTION_87	CALL_1
0x40139cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139d1	          0x488b00	                    mov rax, qword [rax]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139d4	        0x488b4008	                mov rax, qword [rax + 8]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139d8	          0x8b4008	                mov eax, dword [rax + 8]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139db	          0x83f805	                              cmp eax, 5	      7717	elf.c	FUNCTION_87	CALL_1
0x40139de	            0x7519	                           jne 0x40139f9	      7717	elf.c	FUNCTION_87	CALL_1
0x40139e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139e4	          0x488b00	                    mov rax, qword [rax]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139e7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7717	elf.c	FUNCTION_87	CALL_1
0x40139ee	          0x4885c0	                           test rax, rax	      7717	elf.c	FUNCTION_87	CALL_1
0x40139f1	            0x7406	                            je 0x40139f9	      7717	elf.c	FUNCTION_87	CALL_1
0x40139f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7717	elf.c	FUNCTION_87	CALL_1
0x40139f7	            0xeb05	                           jmp 0x40139fe	      7717	elf.c	FUNCTION_87	CALL_1
0x40139f9	      0xb800000000	                              mov eax, 0	      7717	elf.c	FUNCTION_87	CALL_1
0x40139fe	        0x488945f0	             mov qword [rbp - 0x10], rax	      7717	elf.c	FUNCTION_87	CALL_1
0x4013a02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a06	          0x488b00	                    mov rax, qword [rax]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a09	          0x4885c0	                           test rax, rax	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a0c	            0x742c	                            je 0x4013a3a	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a0e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a12	          0x488b00	                    mov rax, qword [rax]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a15	        0x488b4008	                mov rax, qword [rax + 8]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a19	          0x8b4008	                mov eax, dword [rax + 8]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a1c	          0x83f805	                              cmp eax, 5	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a1f	            0x7519	                           jne 0x4013a3a	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a21	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a25	          0x488b00	                    mov rax, qword [rax]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a28	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a2f	          0x4885c0	                           test rax, rax	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a32	            0x7406	                            je 0x4013a3a	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a34	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a38	            0xeb05	                           jmp 0x4013a3f	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a3a	      0xb800000000	                              mov eax, 0	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a3f	        0x488945f8	                mov qword [rbp - 8], rax	      7718	elf.c	FUNCTION_87	CALL_2
0x4013a43	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7720	elf.c	FUNCTION_87	IF_2
0x4013a48	     0xf84f4000000	                            je 0x4013b42	      7720	elf.c	FUNCTION_87	IF_2
0x4013a4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7721	elf.c	FUNCTION_87	IF_2
0x4013a52	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      7721	elf.c	FUNCTION_87	IF_2
0x4013a55	            0x85c0	                           test eax, eax	      7721	elf.c	FUNCTION_87	IF_2
0x4013a57	     0xf84e5000000	                            je 0x4013b42	      7721	elf.c	FUNCTION_87	IF_2
0x4013a5d	      0x48837df800	                  cmp qword [rbp - 8], 0	      7722	elf.c	FUNCTION_87	IF_2
0x4013a62	     0xf84da000000	                            je 0x4013b42	      7722	elf.c	FUNCTION_87	IF_2
0x4013a68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7723	elf.c	FUNCTION_87	IF_2
0x4013a6c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7723	elf.c	FUNCTION_87	IF_2
0x4013a70	    0x483d00000000	                              cmp rax, 0	      7723	elf.c	FUNCTION_87	IF_2
0x4013a76	     0xf85c6000000	                           jne 0x4013b42	      7723	elf.c	FUNCTION_87	IF_2
0x4013a7c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7727	elf.c	FUNCTION_87	IF_2
0x4013a80	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      7727	elf.c	FUNCTION_87	IF_2
0x4013a83	          0x8945ec	             mov dword [rbp - 0x14], eax	      7727	elf.c	FUNCTION_87	IF_2
0x4013a86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x4013a8a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x4013a91	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x4013a97	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x4013a9a	            0x750c	                           jne 0x4013aa8	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x4013a9c	    0xc745ec40ffff	     mov dword [rbp - 0x14], 0xffffff40 	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x4013aa3	      0xe990000000	                           jmp 0x4013b38	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x4013aa8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_4
0x4013aac	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_4
0x4013ab3	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_4
0x4013ab9	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_4
0x4013abc	            0x7509	                           jne 0x4013ac7	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_4
0x4013abe	    0xc745ec41ffff	     mov dword [rbp - 0x14], 0xffffff41 	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x4013ac5	            0xeb71	                           jmp 0x4013b38	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x4013ac7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x4013acb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x4013ad2	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x4013ad9	          0x8b4050	            mov eax, dword [rax + 0x50] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x4013adc	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x4013adf	            0x7509	                           jne 0x4013aea	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x4013ae1	    0xc745ec42ffff	     mov dword [rbp - 0x14], 0xffffff42 	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x4013ae8	            0xeb4e	                           jmp 0x4013b38	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x4013aea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x4013aee	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x4013af5	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x4013afc	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x4013aff	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x4013b02	            0x7509	                           jne 0x4013b0d	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x4013b04	    0xc745ec43ffff	     mov dword [rbp - 0x14], 0xffffff43 	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
0x4013b0b	            0xeb2b	                           jmp 0x4013b38	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
0x4013b0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b11	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b18	    0x488b90e80200	           mov rdx, qword [rax + 0x2e8] 	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b1f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b22	          0x4889d6	                            mov rsi, rdx	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b25	            0x89c7	                            mov edi, eax	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b27	      0xe8cbb6ffff	           call sym.find_section_in_list	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b2c	          0x4885c0	                           test rax, rax	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b2f	            0x7407	                            je 0x4013b38	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x4013b31	    0xc745ec44ffff	     mov dword [rbp - 0x14], 0xffffff44 	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x4013b38	        0x488b45f8	                mov rax, qword [rbp - 8]	      7738	elf.c	FUNCTION_87	IF_2
0x4013b3c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      7738	elf.c	FUNCTION_87	IF_2
0x4013b3f	          0x89504c	             mov dword [rax + 0x4c], edx	      7738	elf.c	FUNCTION_87	IF_2
0x4013b42	      0xb801000000	                              mov eax, 1	      7741	elf.c	FUNCTION_87
0x4013b47	              0xc9	                                   leave	      7742	elf.c	FUNCTION_87
0x4013b48	              0xc3	                                     ret	      7742	elf.c	FUNCTION_87
_bfd_elfcore_strndup	ELSE,1:DO,0:CALL,3:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	46
0x4016f89	              0x55	                                push rbp	      9360	elf.c	FUNCTION_139
0x4016f8a	          0x4889e5	                            mov rbp, rsp	      9360	elf.c	FUNCTION_139
0x4016f8d	        0x4883ec40	                           sub rsp, 0x40	      9360	elf.c	FUNCTION_139
0x4016f91	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9360	elf.c	FUNCTION_139
0x4016f95	        0x488975d0	             mov qword [rbp - 0x30], rsi	      9360	elf.c	FUNCTION_139
0x4016f99	        0x488955c8	             mov qword [rbp - 0x38], rdx	      9360	elf.c	FUNCTION_139
0x4016f9d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      9362	elf.c	FUNCTION_139	CALL_1
0x4016fa1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9362	elf.c	FUNCTION_139	CALL_1
0x4016fa5	      0xbe00000000	                              mov esi, 0	      9362	elf.c	FUNCTION_139	CALL_1
0x4016faa	          0x4889c7	                            mov rdi, rax	      9362	elf.c	FUNCTION_139	CALL_1
0x4016fad	      0xe800000000	                          call 0x4016fb2	      9362	elf.c	FUNCTION_139	CALL_1
0x4016fb2	        0x488945f0	             mov qword [rbp - 0x10], rax	      9362	elf.c	FUNCTION_139	CALL_1
0x4016fb6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9365	elf.c	FUNCTION_139	IF_1
0x4016fbb	            0x750a	                           jne 0x4016fc7	      9365	elf.c	FUNCTION_139	IF_1
0x4016fbd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9366	elf.c	FUNCTION_139	IF_1
0x4016fc1	        0x488945e8	             mov qword [rbp - 0x18], rax	      9366	elf.c	FUNCTION_139	IF_1
0x4016fc5	            0xeb12	                           jmp 0x4016fd9	      9366	elf.c	FUNCTION_139	IF_1
0x4016fc7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9368	elf.c	FUNCTION_139	ELSE_1
0x4016fcb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9368	elf.c	FUNCTION_139	ELSE_1
0x4016fcf	          0x4829c2	                            sub rdx, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x4016fd2	          0x4889d0	                            mov rax, rdx	      9368	elf.c	FUNCTION_139	ELSE_1
0x4016fd5	        0x488945e8	             mov qword [rbp - 0x18], rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x4016fd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9370	elf.c	FUNCTION_139	CALL_2
0x4016fdd	        0x488d5001	                      lea rdx, [rax + 1]	      9370	elf.c	FUNCTION_139	CALL_2
0x4016fe1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9370	elf.c	FUNCTION_139	CALL_2
0x4016fe5	          0x4889d6	                            mov rsi, rdx	      9370	elf.c	FUNCTION_139	CALL_2
0x4016fe8	          0x4889c7	                            mov rdi, rax	      9370	elf.c	FUNCTION_139	CALL_2
0x4016feb	      0xe800000000	                          call 0x4016ff0	      9370	elf.c	FUNCTION_139	CALL_2
0x4016ff0	        0x488945f8	                mov qword [rbp - 8], rax	      9370	elf.c	FUNCTION_139	CALL_2
0x4016ff4	      0x48837df800	                  cmp qword [rbp - 8], 0	      9371	elf.c	FUNCTION_139	IF_2
0x4016ff9	            0x7507	                           jne 0x4017002	      9371	elf.c	FUNCTION_139	IF_2
0x4016ffb	      0xb800000000	                              mov eax, 0	      9372	elf.c	FUNCTION_139	IF_2
0x4017000	            0xeb29	                           jmp 0x401702b	      9372	elf.c	FUNCTION_139	IF_2
0x4017002	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9374	elf.c	FUNCTION_139	CALL_3
0x4017006	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      9374	elf.c	FUNCTION_139	CALL_3
0x401700a	        0x488b45f8	                mov rax, qword [rbp - 8]	      9374	elf.c	FUNCTION_139	CALL_3
0x401700e	          0x4889ce	                            mov rsi, rcx	      9374	elf.c	FUNCTION_139	CALL_3
0x4017011	          0x4889c7	                            mov rdi, rax	      9374	elf.c	FUNCTION_139	CALL_3
0x4017014	      0xe800000000	                          call 0x4017019	      9374	elf.c	FUNCTION_139	CALL_3
0x4017019	        0x488b55f8	                mov rdx, qword [rbp - 8]	      9375	elf.c	FUNCTION_139
0x401701d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9375	elf.c	FUNCTION_139
0x4017021	          0x4801d0	                            add rax, rdx	      9375	elf.c	FUNCTION_139
0x4017024	          0xc60000	                       mov byte [rax], 0	      9375	elf.c	FUNCTION_139
0x4017027	        0x488b45f8	                mov rax, qword [rbp - 8]	      9377	elf.c	FUNCTION_139
0x401702b	              0xc9	                                   leave	      9378	elf.c	FUNCTION_139
0x401702c	              0xc3	                                     ret	      9378	elf.c	FUNCTION_139
_bfd_elf_assign_file_position_for_section	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	54
0x400a526	              0x55	                                push rbp	      4199	elf.c	FUNCTION_58
0x400a527	          0x4889e5	                            mov rbp, rsp	      4199	elf.c	FUNCTION_58
0x400a52a	        0x48897df8	                mov qword [rbp - 8], rdi	      4199	elf.c	FUNCTION_58
0x400a52e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4199	elf.c	FUNCTION_58
0x400a532	          0x8955ec	             mov dword [rbp - 0x14], edx	      4199	elf.c	FUNCTION_58
0x400a535	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4200	elf.c	FUNCTION_58	IF_1
0x400a539	            0x7458	                            je 0x400a593	      4200	elf.c	FUNCTION_58	IF_1
0x400a53b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4200	elf.c	FUNCTION_58	IF_1
0x400a53f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x400a543	        0x4883f801	                              cmp rax, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400a547	            0x764a	                           jbe 0x400a593	      4200	elf.c	FUNCTION_58	IF_1
0x400a549	        0x488b45f8	                mov rax, qword [rbp - 8]	      4201	elf.c	FUNCTION_58	IF_1
0x400a54d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4201	elf.c	FUNCTION_58	IF_1
0x400a551	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4201	elf.c	FUNCTION_58	IF_1
0x400a555	          0x4801d0	                            add rax, rdx	      4201	elf.c	FUNCTION_58	IF_1
0x400a558	        0x488d50ff	                      lea rdx, [rax - 1]	      4201	elf.c	FUNCTION_58	IF_1
0x400a55c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4201	elf.c	FUNCTION_58	IF_1
0x400a560	          0x4839c2	                            cmp rdx, rax	      4201	elf.c	FUNCTION_58	IF_1
0x400a563	            0x7223	                            jb 0x400a588	      4201	elf.c	FUNCTION_58	IF_1
0x400a565	        0x488b45f8	                mov rax, qword [rbp - 8]	      4201	elf.c	FUNCTION_58	IF_1
0x400a569	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4201	elf.c	FUNCTION_58	IF_1
0x400a56d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4201	elf.c	FUNCTION_58	IF_1
0x400a571	          0x4801d0	                            add rax, rdx	      4201	elf.c	FUNCTION_58	IF_1
0x400a574	        0x488d50ff	                      lea rdx, [rax - 1]	      4201	elf.c	FUNCTION_58	IF_1
0x400a578	        0x488b45f8	                mov rax, qword [rbp - 8]	      4201	elf.c	FUNCTION_58	IF_1
0x400a57c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4201	elf.c	FUNCTION_58	IF_1
0x400a580	          0x48f7d8	                                 neg rax	      4201	elf.c	FUNCTION_58	IF_1
0x400a583	          0x4821d0	                            and rax, rdx	      4201	elf.c	FUNCTION_58	IF_1
0x400a586	            0xeb07	                           jmp 0x400a58f	      4201	elf.c	FUNCTION_58	IF_1
0x400a588	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	IF_1
0x400a58f	        0x488945f0	             mov qword [rbp - 0x10], rax	      4201	elf.c	FUNCTION_58	IF_1
0x400a593	        0x488b45f8	                mov rax, qword [rbp - 8]	      4202	elf.c	FUNCTION_58
0x400a597	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4202	elf.c	FUNCTION_58
0x400a59b	        0x48895018	             mov qword [rax + 0x18], rdx	      4202	elf.c	FUNCTION_58
0x400a59f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4203	elf.c	FUNCTION_58	IF_2
0x400a5a3	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4203	elf.c	FUNCTION_58	IF_2
0x400a5a7	          0x4885c0	                           test rax, rax	      4203	elf.c	FUNCTION_58	IF_2
0x400a5aa	            0x7413	                            je 0x400a5bf	      4203	elf.c	FUNCTION_58	IF_2
0x400a5ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      4204	elf.c	FUNCTION_58	IF_2
0x400a5b0	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4204	elf.c	FUNCTION_58	IF_2
0x400a5b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4204	elf.c	FUNCTION_58	IF_2
0x400a5b8	    0x488990900000	             mov qword [rax + 0x90], rdx	      4204	elf.c	FUNCTION_58	IF_2
0x400a5bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      4205	elf.c	FUNCTION_58	IF_3
0x400a5c3	          0x8b4004	                mov eax, dword [rax + 4]	      4205	elf.c	FUNCTION_58	IF_3
0x400a5c6	          0x83f808	                              cmp eax, 8	      4205	elf.c	FUNCTION_58	IF_3
0x400a5c9	            0x7413	                            je 0x400a5de	      4205	elf.c	FUNCTION_58	IF_3
0x400a5cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4206	elf.c	FUNCTION_58	IF_3
0x400a5cf	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4206	elf.c	FUNCTION_58	IF_3
0x400a5d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4206	elf.c	FUNCTION_58	IF_3
0x400a5d7	          0x4801d0	                            add rax, rdx	      4206	elf.c	FUNCTION_58	IF_3
0x400a5da	        0x488945f0	             mov qword [rbp - 0x10], rax	      4206	elf.c	FUNCTION_58	IF_3
0x400a5de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4207	elf.c	FUNCTION_58
0x400a5e2	              0x5d	                                 pop rbp	      4208	elf.c	FUNCTION_58
0x400a5e3	              0xc3	                                     ret	      4208	elf.c	FUNCTION_58
bfd_elf_hash	ELSE,0:DO,0:CALL,0:WHILE,1:FOR,0:IF,1:SWITCH,0:functions,0	36
0x4000dff	              0x55	                                push rbp	       199	elf.c	FUNCTION_11
0x4000e00	          0x4889e5	                            mov rbp, rsp	       199	elf.c	FUNCTION_11
0x4000e03	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       199	elf.c	FUNCTION_11
0x4000e07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       200	elf.c	FUNCTION_11
0x4000e0b	        0x488945e8	             mov qword [rbp - 0x18], rax	       200	elf.c	FUNCTION_11
0x4000e0f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       201	elf.c	FUNCTION_11
0x4000e17	            0xeb3f	                           jmp 0x4000e58	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       207	elf.c	FUNCTION_11	WHILE_1
0x4000e1d	        0x48c1e004	                              shl rax, 4	       207	elf.c	FUNCTION_11	WHILE_1
0x4000e21	          0x4889c2	                            mov rdx, rax	       207	elf.c	FUNCTION_11	WHILE_1
0x4000e24	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       207	elf.c	FUNCTION_11	WHILE_1
0x4000e27	            0x4898	                                    cdqe	       207	elf.c	FUNCTION_11	WHILE_1
0x4000e29	          0x4801d0	                            add rax, rdx	       207	elf.c	FUNCTION_11	WHILE_1
0x4000e2c	        0x488945f0	             mov qword [rbp - 0x10], rax	       207	elf.c	FUNCTION_11	WHILE_1
0x4000e30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e34	      0x25000000f0	                     and eax, 0xf0000000	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e39	        0x488945f8	                mov qword [rbp - 8], rax	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e3d	      0x48837df800	                  cmp qword [rbp - 8], 0	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e42	            0x7414	                            je 0x4000e58	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e44	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e48	        0x48c1e818	                           shr rax, 0x18	       210	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e4c	        0x483145f0	             xor qword [rbp - 0x10], rax	       210	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e50	        0x488b45f8	                mov rax, qword [rbp - 8]	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e54	        0x483145f0	             xor qword [rbp - 0x10], rax	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4000e58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e5c	        0x488d5001	                      lea rdx, [rax + 1]	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e60	        0x488955e8	             mov qword [rbp - 0x18], rdx	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e64	           0xfb600	                   movzx eax, byte [rax]	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e67	           0xfb6c0	                           movzx eax, al	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e6a	          0x8945e4	             mov dword [rbp - 0x1c], eax	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e6d	        0x837de400	               cmp dword [rbp - 0x1c], 0	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e71	            0x75a6	                           jne 0x4000e19	       205	elf.c	FUNCTION_11	WHILE_1
0x4000e73	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       216	elf.c	FUNCTION_11
0x4000e77	            0x89c0	                            mov eax, eax	       216	elf.c	FUNCTION_11
0x4000e79	              0x5d	                                 pop rbp	       217	elf.c	FUNCTION_11
0x4000e7a	              0xc3	                                     ret	       217	elf.c	FUNCTION_11
elfobj_grok_gnu_build_id	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	42
0x4017f75	              0x55	                                push rbp	      9874	elf.c	FUNCTION_145
0x4017f76	          0x4889e5	                            mov rbp, rsp	      9874	elf.c	FUNCTION_145
0x4017f79	        0x4883ec20	                           sub rsp, 0x20	      9874	elf.c	FUNCTION_145
0x4017f7d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9874	elf.c	FUNCTION_145
0x4017f81	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9874	elf.c	FUNCTION_145
0x4017f85	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9877	elf.c	FUNCTION_145	IF_1
0x4017f89	        0x488b4008	                mov rax, qword [rax + 8]	      9877	elf.c	FUNCTION_145	IF_1
0x4017f8d	          0x4885c0	                           test rax, rax	      9877	elf.c	FUNCTION_145	IF_1
0x4017f90	            0x7507	                           jne 0x4017f99	      9877	elf.c	FUNCTION_145	IF_1
0x4017f92	      0xb800000000	                              mov eax, 0	      9878	elf.c	FUNCTION_145	IF_1
0x4017f97	            0xeb73	                           jmp 0x401800c	      9878	elf.c	FUNCTION_145	IF_1
0x4017f99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9880	elf.c	FUNCTION_145	CALL_1
0x4017f9d	        0x488b4008	                mov rax, qword [rax + 8]	      9880	elf.c	FUNCTION_145	CALL_1
0x4017fa1	        0x488d500f	                    lea rdx, [rax + 0xf]	      9880	elf.c	FUNCTION_145	CALL_1
0x4017fa5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9880	elf.c	FUNCTION_145	CALL_1
0x4017fa9	          0x4889d6	                            mov rsi, rdx	      9880	elf.c	FUNCTION_145	CALL_1
0x4017fac	          0x4889c7	                            mov rdi, rax	      9880	elf.c	FUNCTION_145	CALL_1
0x4017faf	      0xe800000000	                          call 0x4017fb4	      9880	elf.c	FUNCTION_145	CALL_1
0x4017fb4	        0x488945f8	                mov qword [rbp - 8], rax	      9880	elf.c	FUNCTION_145	CALL_1
0x4017fb8	      0x48837df800	                  cmp qword [rbp - 8], 0	      9881	elf.c	FUNCTION_145	IF_2
0x4017fbd	            0x7507	                           jne 0x4017fc6	      9881	elf.c	FUNCTION_145	IF_2
0x4017fbf	      0xb800000000	                              mov eax, 0	      9882	elf.c	FUNCTION_145	IF_2
0x4017fc4	            0xeb46	                           jmp 0x401800c	      9882	elf.c	FUNCTION_145	IF_2
0x4017fc6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9884	elf.c	FUNCTION_145
0x4017fca	        0x488b5008	                mov rdx, qword [rax + 8]	      9884	elf.c	FUNCTION_145
0x4017fce	        0x488b45f8	                mov rax, qword [rbp - 8]	      9884	elf.c	FUNCTION_145
0x4017fd2	          0x488910	                    mov qword [rax], rdx	      9884	elf.c	FUNCTION_145
0x4017fd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9885	elf.c	FUNCTION_145	CALL_2
0x4017fd9	        0x488b5008	                mov rdx, qword [rax + 8]	      9885	elf.c	FUNCTION_145	CALL_2
0x4017fdd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9885	elf.c	FUNCTION_145	CALL_2
0x4017fe1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9885	elf.c	FUNCTION_145	CALL_2
0x4017fe5	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9885	elf.c	FUNCTION_145	CALL_2
0x4017fe9	        0x4883c108	                              add rcx, 8	      9885	elf.c	FUNCTION_145	CALL_2
0x4017fed	          0x4889c6	                            mov rsi, rax	      9885	elf.c	FUNCTION_145	CALL_2
0x4017ff0	          0x4889cf	                            mov rdi, rcx	      9885	elf.c	FUNCTION_145	CALL_2
0x4017ff3	      0xe800000000	                          call 0x4017ff8	      9885	elf.c	FUNCTION_145	CALL_2
0x4017ff8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9886	elf.c	FUNCTION_145
0x4017ffc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      9886	elf.c	FUNCTION_145
0x4018000	    0x488990100100	            mov qword [rax + 0x110], rdx	      9886	elf.c	FUNCTION_145
0x4018007	      0xb801000000	                              mov eax, 1	      9888	elf.c	FUNCTION_145
0x401800c	              0xc9	                                   leave	      9889	elf.c	FUNCTION_145
0x401800d	              0xc3	                                     ret	      9889	elf.c	FUNCTION_145
_bfd_elf_canonicalize_symtab	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	27
0x4014be2	              0x55	                                push rbp	      8180	elf.c	FUNCTION_93
0x4014be3	          0x4889e5	                            mov rbp, rsp	      8180	elf.c	FUNCTION_93
0x4014be6	        0x4883ec20	                           sub rsp, 0x20	      8180	elf.c	FUNCTION_93
0x4014bea	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8180	elf.c	FUNCTION_93
0x4014bee	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8180	elf.c	FUNCTION_93
0x4014bf2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8181	elf.c	FUNCTION_93	CALL_1
0x4014bf6	        0x488b4008	                mov rax, qword [rax + 8]	      8181	elf.c	FUNCTION_93	CALL_1
0x4014bfa	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8181	elf.c	FUNCTION_93	CALL_1
0x4014c01	        0x488945f0	             mov qword [rbp - 0x10], rax	      8181	elf.c	FUNCTION_93	CALL_1
0x4014c05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c09	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c10	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c14	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c18	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c1c	      0xba00000000	                              mov edx, 0	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c21	          0x4889cf	                            mov rdi, rcx	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c24	            0xffd0	                                call rax	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c26	        0x488945f8	                mov qword [rbp - 8], rax	      8182	elf.c	FUNCTION_93	CALL_2
0x4014c2a	      0x48837df800	                  cmp qword [rbp - 8], 0	      8184	elf.c	FUNCTION_93	IF_1
0x4014c2f	            0x7810	                            js 0x4014c41	      8184	elf.c	FUNCTION_93	IF_1
0x4014c31	        0x488b45f8	                mov rax, qword [rbp - 8]	      8185	elf.c	FUNCTION_93	IF_1
0x4014c35	            0x89c2	                            mov edx, eax	      8185	elf.c	FUNCTION_93	IF_1
0x4014c37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8185	elf.c	FUNCTION_93	IF_1
0x4014c3b	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      8185	elf.c	FUNCTION_93	IF_1
0x4014c41	        0x488b45f8	                mov rax, qword [rbp - 8]	      8186	elf.c	FUNCTION_93
0x4014c45	              0xc9	                                   leave	      8187	elf.c	FUNCTION_93
0x4014c46	              0xc3	                                     ret	      8187	elf.c	FUNCTION_93
_bfd_elf_copy_private_bfd_data	ELSE,0:DO,0:CALL,24:WHILE,0:FOR,3:IF,15:SWITCH,0:functions,0	288
0x40038b7	              0x55	                                push rbp	      1460	elf.c	FUNCTION_31
0x40038b8	          0x4889e5	                            mov rbp, rsp	      1460	elf.c	FUNCTION_31
0x40038bb	        0x4883ec50	                           sub rsp, 0x50	      1460	elf.c	FUNCTION_31
0x40038bf	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1460	elf.c	FUNCTION_31
0x40038c3	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1460	elf.c	FUNCTION_31
0x40038c7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1461	elf.c	FUNCTION_31	CALL_1
0x40038cb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1461	elf.c	FUNCTION_31	CALL_1
0x40038d2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1461	elf.c	FUNCTION_31	CALL_1
0x40038d6	        0x488945d0	             mov qword [rbp - 0x30], rax	      1461	elf.c	FUNCTION_31	CALL_1
0x40038da	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1462	elf.c	FUNCTION_31	CALL_2
0x40038de	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1462	elf.c	FUNCTION_31	CALL_2
0x40038e5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1462	elf.c	FUNCTION_31	CALL_2
0x40038e9	        0x488945d8	             mov qword [rbp - 0x28], rax	      1462	elf.c	FUNCTION_31	CALL_2
0x40038ed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1466	elf.c	FUNCTION_31	IF_1
0x40038f1	        0x488b4008	                mov rax, qword [rax + 8]	      1466	elf.c	FUNCTION_31	IF_1
0x40038f5	          0x8b4008	                mov eax, dword [rax + 8]	      1466	elf.c	FUNCTION_31	IF_1
0x40038f8	          0x83f805	                              cmp eax, 5	      1466	elf.c	FUNCTION_31	IF_1
0x40038fb	            0x7510	                           jne 0x400390d	      1466	elf.c	FUNCTION_31	IF_1
0x40038fd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1467	elf.c	FUNCTION_31	IF_1
0x4003901	        0x488b4008	                mov rax, qword [rax + 8]	      1467	elf.c	FUNCTION_31	IF_1
0x4003905	          0x8b4008	                mov eax, dword [rax + 8]	      1467	elf.c	FUNCTION_31	IF_1
0x4003908	          0x83f805	                              cmp eax, 5	      1467	elf.c	FUNCTION_31	IF_1
0x400390b	            0x740a	                            je 0x4003917	      1467	elf.c	FUNCTION_31	IF_1
0x400390d	      0xb801000000	                              mov eax, 1	      1468	elf.c	FUNCTION_31	IF_1
0x4003912	      0xe911040000	                           jmp 0x4003d28	      1468	elf.c	FUNCTION_31	IF_1
0x4003917	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x400391b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x4003922	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x4003929	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x400392c	            0x85c0	                           test eax, eax	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x400392e	            0x7537	                           jne 0x4003967	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x4003930	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x4003934	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x400393b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x400393f	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x4003946	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x400394a	        0x48895030	             mov qword [rax + 0x30], rdx	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x400394e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1473	elf.c	FUNCTION_31	IF_2	CALL_6
0x4003952	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_6
0x4003959	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_6
0x4003960	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1473	elf.c	FUNCTION_31	IF_2	CALL_6
0x4003967	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1476	elf.c	FUNCTION_31	CALL_8
0x400396b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1476	elf.c	FUNCTION_31	CALL_8
0x4003972	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1476	elf.c	FUNCTION_31	CALL_8
0x4003976	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      1476	elf.c	FUNCTION_31	CALL_8
0x400397d	    0x488b92f00200	           mov rdx, qword [rdx + 0x2f0] 	      1476	elf.c	FUNCTION_31	CALL_8
0x4003984	    0x488990f00200	            mov qword [rax + 0x2f0], rdx	      1476	elf.c	FUNCTION_31	CALL_8
0x400398b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1479	elf.c	FUNCTION_31	CALL_9
0x400398f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1479	elf.c	FUNCTION_31	CALL_9
0x4003996	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1480	elf.c	FUNCTION_31	CALL_10
0x400399a	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      1480	elf.c	FUNCTION_31	CALL_10
0x40039a1	         0xfb65207	               movzx edx, byte [rdx + 7]	      1480	elf.c	FUNCTION_31	CALL_10
0x40039a5	          0x885007	                  mov byte [rax + 7], dl	      1479	elf.c	FUNCTION_31	CALL_9
0x40039a8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x40039ac	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x40039b3	         0xfb64008	               movzx eax, byte [rax + 8]	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x40039b7	            0x84c0	                             test al, al	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x40039b9	            0x741d	                            je 0x40039d8	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x40039bb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1484	elf.c	FUNCTION_31	IF_3	CALL_12
0x40039bf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1484	elf.c	FUNCTION_31	IF_3	CALL_12
0x40039c6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1485	elf.c	FUNCTION_31	CALL_13
0x40039ca	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      1485	elf.c	FUNCTION_31	CALL_13
0x40039d1	         0xfb65208	               movzx edx, byte [rdx + 8]	      1485	elf.c	FUNCTION_31	CALL_13
0x40039d5	          0x885008	                  mov byte [rax + 8], dl	      1485	elf.c	FUNCTION_31	CALL_13
0x40039d8	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1488	elf.c	FUNCTION_31	CALL_14
0x40039dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1488	elf.c	FUNCTION_31	CALL_14
0x40039e0	          0x4889d6	                            mov rsi, rdx	      1488	elf.c	FUNCTION_31	CALL_14
0x40039e3	          0x4889c7	                            mov rdi, rax	      1488	elf.c	FUNCTION_31	CALL_14
0x40039e6	      0xe800000000	                          call 0x40039eb	      1488	elf.c	FUNCTION_31	CALL_14
0x40039eb	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1490	elf.c	FUNCTION_31	IF_4
0x40039f0	            0x7407	                            je 0x40039f9	      1490	elf.c	FUNCTION_31	IF_4
0x40039f2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1490	elf.c	FUNCTION_31	IF_4
0x40039f7	            0x750a	                           jne 0x4003a03	      1490	elf.c	FUNCTION_31	IF_4
0x40039f9	      0xb801000000	                              mov eax, 1	      1491	elf.c	FUNCTION_31	IF_4
0x40039fe	      0xe925030000	                           jmp 0x4003d28	      1491	elf.c	FUNCTION_31	IF_4
0x4003a03	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1493	elf.c	FUNCTION_31	CALL_15
0x4003a07	        0x488b4008	                mov rax, qword [rax + 8]	      1493	elf.c	FUNCTION_31	CALL_15
0x4003a0b	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1493	elf.c	FUNCTION_31	CALL_15
0x4003a12	        0x488945e0	             mov qword [rbp - 0x20], rax	      1493	elf.c	FUNCTION_31	CALL_15
0x4003a16	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003a1d	      0xe9e7020000	                           jmp 0x4003d09	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003a22	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1499	elf.c	FUNCTION_31	FOR_1
0x4003a25	    0x488d14c50000	                        lea rdx, [rax*8]	      1499	elf.c	FUNCTION_31	FOR_1
0x4003a2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1499	elf.c	FUNCTION_31	FOR_1
0x4003a31	          0x4801d0	                            add rax, rdx	      1499	elf.c	FUNCTION_31	FOR_1
0x4003a34	          0x488b00	                    mov rax, qword [rax]	      1499	elf.c	FUNCTION_31	FOR_1
0x4003a37	        0x488945e8	             mov qword [rbp - 0x18], rax	      1499	elf.c	FUNCTION_31	FOR_1
0x4003a3b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a40	     0xf84b8020000	                            je 0x4003cfe	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a4a	          0x8b4004	                mov eax, dword [rax + 4]	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a4d	          0x83f808	                              cmp eax, 8	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a50	            0x7412	                            je 0x4003a64	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1506	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a56	          0x8b4004	                mov eax, dword [rax + 4]	      1506	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a59	      0x3dffffff5f	                     cmp eax, 0x5fffffff	      1506	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a5e	     0xf869a020000	                           jbe 0x4003cfe	      1506	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003a64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a68	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a6c	          0x4885c0	                           test rax, rax	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a6f	     0xf848c020000	                            je 0x4003d01	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a79	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a7c	            0x85c0	                           test eax, eax	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a7e	            0x740f	                            je 0x4003a8f	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a84	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a87	            0x85c0	                           test eax, eax	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a89	     0xf8572020000	                           jne 0x4003d01	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003a8f	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003a96	      0xe9a1000000	                           jmp 0x4003b3c	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003a9b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4003a9e	    0x488d14c50000	                        lea rdx, [rax*8]	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4003aa6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4003aaa	          0x4801d0	                            add rax, rdx	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4003aad	          0x488b00	                    mov rax, qword [rax]	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4003ab0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4003ab4	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4003ab9	            0x747c	                            je 0x4003b37	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4003abb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003abf	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ac3	          0x4885c0	                           test rax, rax	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ac6	            0x7470	                            je 0x4003b38	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ac8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003acc	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ad0	          0x4885c0	                           test rax, rax	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ad3	            0x7463	                            je 0x4003b38	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ad5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ad9	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003add	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ae1	          0x4885c0	                           test rax, rax	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ae4	            0x7452	                            je 0x4003b38	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ae6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003aea	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003aee	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003af2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003af6	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003afa	          0x4839c2	                            cmp rdx, rax	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003afd	            0x7539	                           jne 0x4003b38	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003aff	          0x8b7dc8	             mov edi, dword [rbp - 0x38]	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b02	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b06	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b0a	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b0e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b12	          0x4189f8	                            mov r8d, edi	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b15	          0x4889c7	                            mov rdi, rax	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b18	      0xe829fbffff	    call sym.copy_special_section_fields	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b1d	            0x85c0	                           test eax, eax	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b1f	            0x7537	                           jne 0x4003b58	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4003b21	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1534	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	CALL_19
0x4003b25	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1534	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	CALL_19
0x4003b2c	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1534	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	CALL_19
0x4003b32	          0x8945cc	             mov dword [rbp - 0x34], eax	      1534	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	CALL_19
0x4003b35	            0xeb21	                           jmp 0x4003b58	      1535	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003b37	              0x90	                                     nop	      1522	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4003b38	        0x8345cc01	               add dword [rbp - 0x34], 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003b3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003b40	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003b47	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003b4d	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003b50	     0xf8745ffffff	                            ja 0x4003a9b	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003b56	            0xeb01	                           jmp 0x4003b59	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4003b58	              0x90	                                     nop	      1535	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003b59	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4003b5d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4003b64	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4003b6a	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4003b6d	     0xf8791010000	                            ja 0x4003d04	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4003b73	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003b7a	      0xe90b010000	                           jmp 0x4003c8a	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003b7f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4003b82	    0x488d14c50000	                        lea rdx, [rax*8]	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4003b8a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4003b8e	          0x4801d0	                            add rax, rdx	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4003b91	          0x488b00	                    mov rax, qword [rax]	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4003b94	        0x488945f8	                mov qword [rbp - 8], rax	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4003b98	      0x48837df800	                  cmp qword [rbp - 8], 0	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x4003b9d	     0xf84e2000000	                            je 0x4003c85	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x4003ba3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003ba7	          0x8b4004	                mov eax, dword [rax + 4]	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003baa	          0x83f808	                              cmp eax, 8	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bad	            0x7416	                            je 0x4003bc5	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003baf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bb3	          0x8b5004	                mov edx, dword [rax + 4]	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bb6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bba	          0x8b4004	                mov eax, dword [rax + 4]	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bbd	            0x39c2	                            cmp edx, eax	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bbf	     0xf85c1000000	                           jne 0x4003c86	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bc5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bc9	        0x488b5008	                mov rdx, qword [rax + 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bcd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1559	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bd1	        0x488b4008	                mov rax, qword [rax + 8]	      1559	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bd5	          0x4831d0	                            xor rax, rdx	      1559	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bd8	        0x4883e0bf	             and rax, 0xffffffffffffffbf	      1559	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bdc	          0x4885c0	                           test rax, rax	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bdf	     0xf85a1000000	                           jne 0x4003c86	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003be5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003be9	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bf1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bf5	          0x4839c2	                            cmp rdx, rax	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bf8	     0xf8588000000	                           jne 0x4003c86	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003bfe	        0x488b45f8	                mov rax, qword [rbp - 8]	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c02	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c06	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c0a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c0e	          0x4839c2	                            cmp rdx, rax	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c11	            0x7573	                           jne 0x4003c86	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c13	        0x488b45f8	                mov rax, qword [rbp - 8]	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c17	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c1f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c23	          0x4839c2	                            cmp rdx, rax	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c26	            0x755e	                           jne 0x4003c86	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c28	        0x488b45f8	                mov rax, qword [rbp - 8]	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c2c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c34	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c38	          0x4839c2	                            cmp rdx, rax	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c3b	            0x7549	                           jne 0x4003c86	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c41	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c48	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c4b	            0x39c2	                            cmp edx, eax	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c4d	            0x7512	                           jne 0x4003c61	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1565	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c53	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1565	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1565	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c5a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1565	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c5d	            0x39c2	                            cmp edx, eax	      1565	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c5f	            0x7425	                            je 0x4003c86	      1565	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4003c61	          0x8b7dc8	             mov edi, dword [rbp - 0x38]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c64	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c68	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c6c	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c74	          0x4189f8	                            mov r8d, edi	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c77	          0x4889c7	                            mov rdi, rax	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c7a	      0xe8c7f9ffff	    call sym.copy_special_section_fields	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c7f	            0x85c0	                           test eax, eax	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c81	            0x7523	                           jne 0x4003ca6	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c83	            0xeb01	                           jmp 0x4003c86	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x4003c85	              0x90	                                     nop	      1550	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x4003c86	        0x8345cc01	               add dword [rbp - 0x34], 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003c8a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003c8e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003c95	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003c9b	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003c9e	     0xf87dbfeffff	                            ja 0x4003b7f	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003ca4	            0xeb01	                           jmp 0x4003ca7	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4003ca6	              0x90	                                     nop	      1568	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13
0x4003ca7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cab	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cb2	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cb8	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cbb	            0x7548	                           jne 0x4003d05	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cbd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cc1	          0x8b4004	                mov eax, dword [rax + 4]	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cc4	      0x3dffffff5f	                     cmp eax, 0x5fffffff	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003cc9	            0x763a	                           jbe 0x4003d05	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4003ccb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4003ccf	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4003cd6	          0x4885c0	                           test rax, rax	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4003cd9	            0x742a	                            je 0x4003d05	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4003cdb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cdf	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003ce6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cea	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cee	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cf2	          0x4889d1	                            mov rcx, rdx	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cf5	      0xba00000000	                              mov edx, 0	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cfa	            0xffd0	                                call rax	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cfc	            0xeb07	                           jmp 0x4003d05	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4003cfe	              0x90	                                     nop	      1507	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003cff	            0xeb04	                           jmp 0x4003d05	      1507	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003d01	              0x90	                                     nop	      1513	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003d02	            0xeb01	                           jmp 0x4003d05	      1513	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003d04	              0x90	                                     nop	      1540	elf.c	FUNCTION_31	FOR_1	IF_10
0x4003d05	        0x8345c801	               add dword [rbp - 0x38], 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003d09	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003d0d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003d14	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003d1a	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003d1d	     0xf87fffcffff	                            ja 0x4003a22	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4003d23	      0xb801000000	                              mov eax, 1	      1581	elf.c	FUNCTION_31
0x4003d28	              0xc9	                                   leave	      1582	elf.c	FUNCTION_31
0x4003d29	              0xc3	                                     ret	      1582	elf.c	FUNCTION_31
_bfd_elf_print_private_bfd_data	ELSE,1:DO,0:CALL,60:WHILE,0:FOR,6:IF,18:SWITCH,1:functions,0	827
0x4003e10	              0x55	                                push rbp	      1610	elf.c	FUNCTION_33
0x4003e11	          0x4889e5	                            mov rbp, rsp	      1610	elf.c	FUNCTION_33
0x4003e14	              0x53	                                push rbx	      1610	elf.c	FUNCTION_33
0x4003e15	    0x4881ece80000	                           sub rsp, 0xe8	      1610	elf.c	FUNCTION_33
0x4003e1c	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	      1610	elf.c	FUNCTION_33
0x4003e23	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      1610	elf.c	FUNCTION_33
0x4003e2a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	elf.c	FUNCTION_33
0x4003e33	        0x488945e8	             mov qword [rbp - 0x18], rax	      1610	elf.c	FUNCTION_33
0x4003e37	            0x31c0	                            xor eax, eax	      1610	elf.c	FUNCTION_33
0x4003e39	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1611	elf.c	FUNCTION_33
0x4003e40	        0x48894580	             mov qword [rbp - 0x80], rax	      1611	elf.c	FUNCTION_33
0x4003e44	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1614	elf.c	FUNCTION_33
0x4003e4f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1616	elf.c	FUNCTION_33	CALL_1
0x4003e56	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1616	elf.c	FUNCTION_33	CALL_1
0x4003e5d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1616	elf.c	FUNCTION_33	CALL_1
0x4003e61	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1616	elf.c	FUNCTION_33	CALL_1
0x4003e68	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      1617	elf.c	FUNCTION_33	IF_1
0x4003e70	     0xf84d4020000	                            je 0x400414a	      1617	elf.c	FUNCTION_33	IF_1
0x4003e76	      0xbe00000000	                              mov esi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e7b	      0xbf00000000	                              mov edi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e80	      0xe800000000	                          call 0x4003e85	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e85	          0x4889c2	                            mov rdx, rax	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e88	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e8c	          0x4889d6	                            mov rsi, rdx	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e8f	          0x4889c7	                            mov rdi, rax	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e92	      0xb800000000	                              mov eax, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e97	      0xe800000000	                          call 0x4003e9c	      1621	elf.c	FUNCTION_33	IF_1	CALL_3
0x4003e9c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1622	elf.c	FUNCTION_33	IF_1	CALL_4
0x4003ea3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_4
0x4003eaa	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_4
0x4003ead	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      1622	elf.c	FUNCTION_33	IF_1	CALL_4
0x4003eb3	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x4003ebd	      0xe976020000	                           jmp 0x4004138	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x4003ec2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4003ec9	          0x488b00	                    mov rax, qword [rax]	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4003ecc	            0x89c7	                            mov edi, eax	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4003ece	      0xe857feffff	               call sym.get_segment_type	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4003ed3	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4003eda	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1628	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4003ee2	            0x752b	                           jne 0x4003f0f	      1628	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4003ee4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1630	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_6
0x4003eeb	          0x488b10	                    mov rdx, qword [rax]	      1630	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_6
0x4003eee	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1630	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_6
0x4003ef2	      0xbe00000000	                              mov esi, 0	      1630	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_6
0x4003ef7	          0x4889c7	                            mov rdi, rax	      1630	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_6
0x4003efa	      0xb800000000	                              mov eax, 0	      1630	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_6
0x4003eff	      0xe800000000	                          call 0x4003f04	      1630	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_6
0x4003f04	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4003f08	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4003f0f	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1633	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x4003f16	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1633	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x4003f1a	      0xbe00000000	                              mov esi, 0	      1633	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x4003f1f	          0x4889c7	                            mov rdi, rax	      1633	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x4003f22	      0xb800000000	                              mov eax, 0	      1633	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x4003f27	      0xe800000000	                          call 0x4003f2c	      1633	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x4003f2c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x4003f33	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x4003f37	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x4003f3b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x4003f42	          0x4889ce	                            mov rsi, rcx	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x4003f45	          0x4889c7	                            mov rdi, rax	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x4003f48	      0xe800000000	                          call 0x4003f4d	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x4003f4d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1635	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x4003f51	          0x4889c1	                            mov rcx, rax	      1635	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x4003f54	      0xba09000000	                              mov edx, 9	      1635	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x4003f59	      0xbe01000000	                              mov esi, 1	      1635	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x4003f5e	      0xbf00000000	                              mov edi, 0	      1635	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x4003f63	      0xe800000000	                          call 0x4003f68	      1635	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x4003f68	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x4003f6f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x4003f73	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x4003f77	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x4003f7e	          0x4889ce	                            mov rsi, rcx	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x4003f81	          0x4889c7	                            mov rdi, rax	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x4003f84	      0xe800000000	                          call 0x4003f89	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x4003f89	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1637	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_11
0x4003f8d	          0x4889c1	                            mov rcx, rax	      1637	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_11
0x4003f90	      0xba09000000	                              mov edx, 9	      1637	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_11
0x4003f95	      0xbe01000000	                              mov esi, 1	      1637	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_11
0x4003f9a	      0xbf00000000	                              mov edi, 0	      1637	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_11
0x4003f9f	      0xe800000000	                          call 0x4003fa4	      1637	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_11
0x4003fa4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_12
0x4003fab	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_12
0x4003faf	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_12
0x4003fb3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_12
0x4003fba	          0x4889ce	                            mov rsi, rcx	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_12
0x4003fbd	          0x4889c7	                            mov rdi, rax	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_12
0x4003fc0	      0xe800000000	                          call 0x4003fc5	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_12
0x4003fc5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fcc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fd0	          0x4889c7	                            mov rdi, rax	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fd3	      0xe800000000	                          call 0x4003fd8	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fd8	            0x89c2	                            mov edx, eax	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fda	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fde	      0xbe00000000	                              mov esi, 0	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fe3	          0x4889c7	                            mov rdi, rax	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003fe6	      0xb800000000	                              mov eax, 0	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003feb	      0xe800000000	                          call 0x4003ff0	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_14
0x4003ff0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1640	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_15
0x4003ff4	          0x4889c1	                            mov rcx, rax	      1640	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_15
0x4003ff7	      0xba12000000	                           mov edx, 0x12	      1640	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_15
0x4003ffc	      0xbe01000000	                              mov esi, 1	      1640	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_15
0x4004001	      0xbf00000000	                              mov edi, 0	      1640	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_15
0x4004006	      0xe800000000	                          call 0x400400b	      1640	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_15
0x400400b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_16
0x4004012	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_16
0x4004016	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_16
0x400401a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_16
0x4004021	          0x4889ce	                            mov rsi, rcx	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_16
0x4004024	          0x4889c7	                            mov rdi, rax	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_16
0x4004027	      0xe800000000	                          call 0x400402c	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_16
0x400402c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1642	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_17
0x4004030	          0x4889c1	                            mov rcx, rax	      1642	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_17
0x4004033	      0xba09000000	                              mov edx, 9	      1642	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_17
0x4004038	      0xbe01000000	                              mov esi, 1	      1642	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_17
0x400403d	      0xbf00000000	                              mov edi, 0	      1642	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_17
0x4004042	      0xe800000000	                          call 0x4004047	      1642	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_17
0x4004047	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_18
0x400404e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_18
0x4004052	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_18
0x4004056	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_18
0x400405d	          0x4889ce	                            mov rsi, rcx	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_18
0x4004060	          0x4889c7	                            mov rdi, rax	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_18
0x4004063	      0xe800000000	                          call 0x4004068	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_18
0x4004068	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1647	elf.c	FUNCTION_33	IF_1	FOR_1
0x400406f	        0x488b4008	                mov rax, qword [rax + 8]	      1647	elf.c	FUNCTION_33	IF_1	FOR_1
0x4004073	          0x83e001	                              and eax, 1	      1647	elf.c	FUNCTION_33	IF_1	FOR_1
0x4004076	          0x4885c0	                           test rax, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x4004079	            0x7407	                            je 0x4004082	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x400407b	      0xbe78000000	                           mov esi, 0x78	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x4004080	            0xeb05	                           jmp 0x4004087	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x4004082	      0xbe2d000000	                           mov esi, 0x2d	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x4004087	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1646	elf.c	FUNCTION_33	IF_1	FOR_1
0x400408e	        0x488b4008	                mov rax, qword [rax + 8]	      1646	elf.c	FUNCTION_33	IF_1	FOR_1
0x4004092	          0x83e002	                              and eax, 2	      1646	elf.c	FUNCTION_33	IF_1	FOR_1
0x4004095	          0x4885c0	                           test rax, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x4004098	            0x7407	                            je 0x40040a1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x400409a	      0xb977000000	                           mov ecx, 0x77	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x400409f	            0xeb05	                           jmp 0x40040a6	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040a1	      0xb92d000000	                           mov ecx, 0x2d	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040a6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1645	elf.c	FUNCTION_33	IF_1	FOR_1
0x40040ad	        0x488b4008	                mov rax, qword [rax + 8]	      1645	elf.c	FUNCTION_33	IF_1	FOR_1
0x40040b1	          0x83e004	                              and eax, 4	      1645	elf.c	FUNCTION_33	IF_1	FOR_1
0x40040b4	          0x4885c0	                           test rax, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040b7	            0x7407	                            je 0x40040c0	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040b9	      0xba72000000	                           mov edx, 0x72	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040be	            0xeb05	                           jmp 0x40040c5	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040c0	      0xba2d000000	                           mov edx, 0x2d	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040c5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040c9	          0x4189f0	                            mov r8d, esi	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040cc	      0xbe00000000	                              mov esi, 0	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040d1	          0x4889c7	                            mov rdi, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040d4	      0xb800000000	                              mov eax, 0	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040d9	      0xe800000000	                          call 0x40040de	      1644	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_19
0x40040de	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x40040e5	        0x488b4008	                mov rax, qword [rax + 8]	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x40040e9	          0x83e0f8	                     and eax, 0xfffffff8	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x40040ec	          0x4885c0	                           test rax, rax	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x40040ef	            0x7427	                            je 0x4004118	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x40040f1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x40040f8	        0x488b4008	                mov rax, qword [rax + 8]	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x40040fc	          0x83e0f8	                     and eax, 0xfffffff8	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x40040ff	          0x4889c2	                            mov rdx, rax	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x4004102	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x4004106	      0xbe00000000	                              mov esi, 0	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x400410b	          0x4889c7	                            mov rdi, rax	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x400410e	      0xb800000000	                              mov eax, 0	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x4004113	      0xe800000000	                          call 0x4004118	      1649	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_20
0x4004118	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1650	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_21
0x400411c	          0x4889c6	                            mov rsi, rax	      1650	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_21
0x400411f	      0xbf0a000000	                            mov edi, 0xa	      1650	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_21
0x4004124	      0xe800000000	                          call 0x4004129	      1650	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_21
0x4004129	    0x838524ffffff	               add dword [rbp - 0xdc], 1	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x4004130	    0x48838540ffff	           add qword [rbp - 0xc0], 0x40 	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x4004138	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400413e	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x4004144	     0xf8278fdffff	                            jb 0x4003ec2	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400414a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1654	elf.c	FUNCTION_33	CALL_22
0x4004151	      0xbe00000000	                              mov esi, 0	      1654	elf.c	FUNCTION_33	CALL_22
0x4004156	          0x4889c7	                            mov rdi, rax	      1654	elf.c	FUNCTION_33	CALL_22
0x4004159	      0xe800000000	                          call 0x400415e	      1654	elf.c	FUNCTION_33	CALL_22
0x400415e	        0x48894588	             mov qword [rbp - 0x78], rax	      1654	elf.c	FUNCTION_33	CALL_22
0x4004162	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1655	elf.c	FUNCTION_33	IF_4
0x4004167	     0xf84a2090000	                            je 0x4004b0f	      1655	elf.c	FUNCTION_33	IF_4
0x400416d	      0xbe00000000	                              mov esi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x4004172	      0xbf00000000	                              mov edi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x4004177	      0xe800000000	                          call 0x400417c	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x400417c	          0x4889c2	                            mov rdx, rax	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x400417f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x4004183	          0x4889d6	                            mov rsi, rdx	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x4004186	          0x4889c7	                            mov rdi, rax	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x4004189	      0xb800000000	                              mov eax, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x400418e	      0xe800000000	                          call 0x4004193	      1663	elf.c	FUNCTION_33	IF_4	CALL_24
0x4004193	    0x488d9538ffff	                   lea rdx, [rbp - 0xc8]	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x400419a	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x400419e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x40041a5	          0x4889ce	                            mov rsi, rcx	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x40041a8	          0x4889c7	                            mov rdi, rax	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x40041ab	      0xe800000000	                          call 0x40041b0	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x40041b0	            0x85c0	                           test eax, eax	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x40041b2	     0xf84eb0c0000	                            je 0x4004ea3	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_25
0x40041b8	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1668	elf.c	FUNCTION_33	IF_4	CALL_26
0x40041bc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1668	elf.c	FUNCTION_33	IF_4	CALL_26
0x40041c3	          0x4889d6	                            mov rsi, rdx	      1668	elf.c	FUNCTION_33	IF_4	CALL_26
0x40041c6	          0x4889c7	                            mov rdi, rax	      1668	elf.c	FUNCTION_33	IF_4	CALL_26
0x40041c9	      0xe800000000	                          call 0x40041ce	      1668	elf.c	FUNCTION_33	IF_4	CALL_26
0x40041ce	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      1668	elf.c	FUNCTION_33	IF_4	CALL_26
0x40041d4	    0x81bd30ffffff	     cmp dword [rbp - 0xd0], 0xfffffeff 	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x40041de	     0xf84c20c0000	                            je 0x4004ea6	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x40041e4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x40041eb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x40041f2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x40041f6	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x40041fc	        0x48c1e203	                              shl rdx, 3	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x4004200	          0x4801d0	                            add rax, rdx	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x4004203	          0x488b00	                    mov rax, qword [rax]	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x4004206	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x4004209	            0x89c0	                            mov eax, eax	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x400420b	        0x48894590	             mov qword [rbp - 0x70], rax	      1671	elf.c	FUNCTION_33	IF_4	CALL_27
0x400420f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1673	elf.c	FUNCTION_33	IF_4	CALL_28
0x4004216	        0x488b4008	                mov rax, qword [rax + 8]	      1673	elf.c	FUNCTION_33	IF_4	CALL_28
0x400421a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1673	elf.c	FUNCTION_33	IF_4	CALL_28
0x4004221	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      1673	elf.c	FUNCTION_33	IF_4	CALL_28
0x4004228	         0xfb64006	               movzx eax, byte [rax + 6]	      1673	elf.c	FUNCTION_33	IF_4	CALL_28
0x400422c	           0xfb6c0	                           movzx eax, al	      1673	elf.c	FUNCTION_33	IF_4	CALL_28
0x400422f	        0x48894598	             mov qword [rbp - 0x68], rax	      1673	elf.c	FUNCTION_33	IF_4	CALL_28
0x4004233	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1674	elf.c	FUNCTION_33	IF_4	CALL_29
0x400423a	        0x488b4008	                mov rax, qword [rax + 8]	      1674	elf.c	FUNCTION_33	IF_4	CALL_29
0x400423e	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1674	elf.c	FUNCTION_33	IF_4	CALL_29
0x4004245	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      1674	elf.c	FUNCTION_33	IF_4	CALL_29
0x400424c	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1674	elf.c	FUNCTION_33	IF_4	CALL_29
0x4004250	        0x488945a0	             mov qword [rbp - 0x60], rax	      1674	elf.c	FUNCTION_33	IF_4	CALL_29
0x4004254	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1676	elf.c	FUNCTION_33	IF_4
0x400425b	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1676	elf.c	FUNCTION_33	IF_4
0x4004262	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x4004266	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400426a	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400426e	     0xf82350c0000	                            jb 0x4004ea9	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x4004274	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1680	elf.c	FUNCTION_33	IF_4
0x4004278	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1680	elf.c	FUNCTION_33	IF_4
0x400427c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1680	elf.c	FUNCTION_33	IF_4
0x4004283	          0x4801d0	                            add rax, rdx	      1680	elf.c	FUNCTION_33	IF_4
0x4004286	        0x488945a8	             mov qword [rbp - 0x58], rax	      1680	elf.c	FUNCTION_33	IF_4
0x400428a	      0xe945080000	                           jmp 0x4004ad4	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400428f	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1686	elf.c	FUNCTION_33	IF_4	FOR_2
0x400429a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1689	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_30
0x40042a1	        0x488b4008	                mov rax, qword [rax + 8]	      1689	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_30
0x40042a5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1689	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_30
0x40042ac	        0x488945b0	             mov qword [rbp - 0x50], rax	      1689	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_30
0x40042b0	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x40042b4	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x40042bb	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x40042c2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x40042c6	          0x4889cf	                            mov rdi, rcx	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x40042c9	            0xffd0	                                call rax	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x40042cb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x40042cf	          0x4885c0	                           test rax, rax	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x40042d2	     0xf841c080000	                            je 0x4004af4	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x40042d8	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      1696	elf.c	FUNCTION_33	IF_4	FOR_2
0x40042e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40042e6	        0x4883f81d	                           cmp rax, 0x1d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40042ea	     0xf8420050000	                            je 0x4004810	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40042f0	        0x4883f81d	                           cmp rax, 0x1d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40042f4	     0xf873c010000	                            ja 0x4004436	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40042fa	        0x4883f80e	                            cmp rax, 0xe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40042fe	     0xf8408040000	                            je 0x400470c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004304	        0x4883f80e	                            cmp rax, 0xe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004308	     0xf8794000000	                            ja 0x40043a2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400430e	        0x4883f807	                              cmp rax, 7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004312	     0xf8484030000	                            je 0x400469c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004318	        0x4883f807	                              cmp rax, 7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400431c	            0x7742	                            ja 0x4004360	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400431e	        0x4883f803	                              cmp rax, 3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004322	     0xf8434030000	                            je 0x400465c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004328	        0x4883f803	                              cmp rax, 3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400432c	            0x7719	                            ja 0x4004347	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400432e	        0x4883f801	                              cmp rax, 1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004332	     0xf84fa020000	                            je 0x4004632	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004338	        0x4883f802	                              cmp rax, 2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400433c	     0xf840a030000	                            je 0x400464c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004342	      0xe984020000	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004347	        0x4883f805	                              cmp rax, 5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400434b	     0xf842b030000	                            je 0x400467c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004351	        0x4883f805	                              cmp rax, 5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004355	     0xf8731030000	                            ja 0x400468c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400435b	      0xe90c030000	                           jmp 0x400466c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004360	        0x4883f80a	                            cmp rax, 0xa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004364	     0xf8462030000	                            je 0x40046cc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400436a	        0x4883f80a	                            cmp rax, 0xa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400436e	            0x7719	                            ja 0x4004389	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004370	        0x4883f808	                              cmp rax, 8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004374	     0xf8432030000	                            je 0x40046ac	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400437a	        0x4883f809	                              cmp rax, 9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400437e	     0xf8438030000	                            je 0x40046bc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004384	      0xe942020000	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004389	        0x4883f80c	                            cmp rax, 0xc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400438d	     0xf8459030000	                            je 0x40046ec	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004393	        0x4883f80c	                            cmp rax, 0xc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004397	     0xf875f030000	                            ja 0x40046fc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400439d	      0xe93a030000	                           jmp 0x40046dc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043a2	        0x4883f815	                           cmp rax, 0x15	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043a6	     0xf84e4030000	                            je 0x4004790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043ac	        0x4883f815	                           cmp rax, 0x15	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043b0	            0x7742	                            ja 0x40043f4	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043b2	        0x4883f811	                           cmp rax, 0x11	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043b6	     0xf8494030000	                            je 0x4004750	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043bc	        0x4883f811	                           cmp rax, 0x11	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043c0	            0x7719	                            ja 0x40043db	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043c2	        0x4883f80f	                            cmp rax, 0xf	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043c6	     0xf845a030000	                            je 0x4004726	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043cc	        0x4883f810	                           cmp rax, 0x10	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043d0	     0xf846a030000	                            je 0x4004740	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043d6	      0xe9f0010000	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043db	        0x4883f813	                           cmp rax, 0x13	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043df	     0xf848b030000	                            je 0x4004770	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043e5	        0x4883f813	                           cmp rax, 0x13	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043e9	     0xf8791030000	                            ja 0x4004780	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043ef	      0xe96c030000	                           jmp 0x4004760	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043f4	        0x4883f819	                           cmp rax, 0x19	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043f8	     0xf84d2030000	                            je 0x40047d0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40043fe	        0x4883f819	                           cmp rax, 0x19	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004402	            0x7719	                            ja 0x400441d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004404	        0x4883f817	                           cmp rax, 0x17	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004408	     0xf84a2030000	                            je 0x40047b0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400440e	        0x4883f817	                           cmp rax, 0x17	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004412	     0xf87a8030000	                            ja 0x40047c0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004418	      0xe983030000	                           jmp 0x40047a0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400441d	        0x4883f81b	                           cmp rax, 0x1b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004421	     0xf84c9030000	                            je 0x40047f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004427	        0x4883f81b	                           cmp rax, 0x1b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400442b	     0xf87cf030000	                            ja 0x4004800	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004431	      0xe9aa030000	                           jmp 0x40047e0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004436	    0x483dfcfeff6f	                     cmp rax, 0x6ffffefc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400443c	     0xf84cc040000	                            je 0x400490e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004442	    0x483dfcfeff6f	                     cmp rax, 0x6ffffefc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004448	     0xf87c0000000	                            ja 0x400450e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400444e	    0x483dfbfdff6f	                     cmp rax, 0x6ffffdfb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004454	     0xf8430040000	                            je 0x400488a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400445a	    0x483dfbfdff6f	                     cmp rax, 0x6ffffdfb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004460	            0x7752	                            ja 0x40044b4	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004462	        0x4883f821	                           cmp rax, 0x21	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004466	     0xf84de030000	                            je 0x400484a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400446c	        0x4883f821	                           cmp rax, 0x21	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004470	            0x7719	                            ja 0x400448b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004472	        0x4883f81e	                           cmp rax, 0x1e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004476	     0xf84ae030000	                            je 0x400482a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400447c	        0x4883f820	                           cmp rax, 0x20	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004480	     0xf84b4030000	                            je 0x400483a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004486	      0xe940010000	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400448b	    0x483df9fdff6f	                     cmp rax, 0x6ffffdf9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004491	     0xf84d3030000	                            je 0x400486a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004497	    0x483df9fdff6f	                     cmp rax, 0x6ffffdf9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400449d	     0xf87d7030000	                            ja 0x400487a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044a3	    0x483df8fdff6f	                     cmp rax, 0x6ffffdf8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044a9	     0xf84ab030000	                            je 0x400485a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044af	      0xe917010000	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044b4	    0x483dfffdff6f	                     cmp rax, 0x6ffffdff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044ba	     0xf840a040000	                            je 0x40048ca	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044c0	    0x483dfffdff6f	                     cmp rax, 0x6ffffdff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044c6	            0x771d	                            ja 0x40044e5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044c8	    0x483dfdfdff6f	                     cmp rax, 0x6ffffdfd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044ce	     0xf84d6030000	                            je 0x40048aa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044d4	    0x483dfdfdff6f	                     cmp rax, 0x6ffffdfd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044da	     0xf87da030000	                            ja 0x40048ba	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044e0	      0xe9b5030000	                           jmp 0x400489a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044e5	    0x483dfafeff6f	                     cmp rax, 0x6ffffefa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044eb	     0xf84e9030000	                            je 0x40048da	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044f1	    0x483dfafeff6f	                     cmp rax, 0x6ffffefa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044f7	     0xf87f7030000	                            ja 0x40048f4	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40044fd	    0x483df5feff6f	                     cmp rax, 0x6ffffef5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004503	     0xf84fb040000	                            je 0x4004a04	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004509	      0xe9bd000000	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400450e	    0x483dfbffff6f	                     cmp rax, 0x6ffffffb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004514	     0xf845e040000	                            je 0x4004978	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400451a	    0x483dfbffff6f	                     cmp rax, 0x6ffffffb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004520	            0x7754	                            ja 0x4004576	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004522	    0x483dfffeff6f	                     cmp rax, 0x6ffffeff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004528	     0xf841a040000	                            je 0x4004948	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400452e	    0x483dfffeff6f	                     cmp rax, 0x6ffffeff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004534	            0x771a	                            ja 0x4004550	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004536	    0x483dfdfeff6f	                     cmp rax, 0x6ffffefd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400453c	     0xf84e6030000	                            je 0x4004928	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004542	    0x483dfefeff6f	                     cmp rax, 0x6ffffefe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004548	     0xf84ea030000	                            je 0x4004938	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400454e	            0xeb7b	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004550	    0x483df9ffff6f	                     cmp rax, 0x6ffffff9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004556	     0xf84fc030000	                            je 0x4004958	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400455c	    0x483df9ffff6f	                     cmp rax, 0x6ffffff9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004562	     0xf8700040000	                            ja 0x4004968	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004568	    0x483df0ffff6f	                     cmp rax, 0x6ffffff0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400456e	     0xf8414040000	                            je 0x4004988	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004574	            0xeb55	                           jmp 0x40045cb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004576	    0x483dffffff6f	                     cmp rax, 0x6fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400457c	     0xf843a040000	                            je 0x40049bc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004582	    0x483dffffff6f	                     cmp rax, 0x6fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004588	            0x771d	                            ja 0x40045a7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400458a	    0x483dfdffff6f	                     cmp rax, 0x6ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004590	     0xf840c040000	                            je 0x40049a2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004596	    0x483dfdffff6f	                     cmp rax, 0x6ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400459c	     0xf870d040000	                            ja 0x40049af	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045a2	      0xe9ee030000	                           jmp 0x4004995	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045a7	    0x483dfeffff7f	                     cmp rax, 0x7ffffffe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045ad	     0xf842d040000	                            je 0x40049e0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045b3	    0x483dffffff7f	                     cmp rax, 0x7fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045b9	     0xf842e040000	                            je 0x40049ed	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045bf	    0x483dfdffff7f	                     cmp rax, 0x7ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045c5	     0xf84fe030000	                            je 0x40049c9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40045cb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045cf	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045d6	          0x4885c0	                           test rax, rax	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045d9	            0x741b	                            je 0x40045f6	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045df	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045e6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045ea	          0x4889d7	                            mov rdi, rdx	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045ed	            0xffd0	                                call rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045ef	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x40045f6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_31
0x40045fd	           0xfb600	                   movzx eax, byte [rax]	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_31
0x4004600	            0x84c0	                             test al, al	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_31
0x4004602	     0xf8509040000	                           jne 0x4004a11	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_31
0x4004608	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1705	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_32
0x400460c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1705	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_32
0x4004610	      0xbe00000000	                              mov esi, 0	      1705	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_32
0x4004615	          0x4889c7	                            mov rdi, rax	      1705	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_32
0x4004618	      0xb800000000	                              mov eax, 0	      1705	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_32
0x400461d	      0xe800000000	                          call 0x4004622	      1705	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_32
0x4004622	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x4004626	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400462d	      0xe9df030000	                           jmp 0x4004a11	      1708	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004632	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1710	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400463d	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1710	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004647	      0xe9c6030000	                           jmp 0x4004a12	      1710	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400464c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1711	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004657	      0xe9b6030000	                           jmp 0x4004a12	      1711	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400465c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004667	      0xe9a6030000	                           jmp 0x4004a12	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400466c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004677	      0xe996030000	                           jmp 0x4004a12	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400467c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1714	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004687	      0xe986030000	                           jmp 0x4004a12	      1714	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400468c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1715	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004697	      0xe976030000	                           jmp 0x4004a12	      1715	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400469c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046a7	      0xe966030000	                           jmp 0x4004a12	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046ac	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1717	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046b7	      0xe956030000	                           jmp 0x4004a12	      1717	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046bc	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1718	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046c7	      0xe946030000	                           jmp 0x4004a12	      1718	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046cc	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046d7	      0xe936030000	                           jmp 0x4004a12	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046dc	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046e7	      0xe926030000	                           jmp 0x4004a12	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046ec	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1721	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046f7	      0xe916030000	                           jmp 0x4004a12	      1721	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40046fc	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1722	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004707	      0xe906030000	                           jmp 0x4004a12	      1722	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400470c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004717	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004721	      0xe9ec020000	                           jmp 0x4004a12	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004726	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004731	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400473b	      0xe9d2020000	                           jmp 0x4004a12	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004740	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1725	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400474b	      0xe9c2020000	                           jmp 0x4004a12	      1725	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004750	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400475b	      0xe9b2020000	                           jmp 0x4004a12	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004760	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400476b	      0xe9a2020000	                           jmp 0x4004a12	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004770	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1728	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400477b	      0xe992020000	                           jmp 0x4004a12	      1728	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004780	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1729	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400478b	      0xe982020000	                           jmp 0x4004a12	      1729	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004790	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400479b	      0xe972020000	                           jmp 0x4004a12	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047a0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047ab	      0xe962020000	                           jmp 0x4004a12	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047b0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1732	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047bb	      0xe952020000	                           jmp 0x4004a12	      1732	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047c0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1733	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047cb	      0xe942020000	                           jmp 0x4004a12	      1733	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047d0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047db	      0xe932020000	                           jmp 0x4004a12	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047e0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047eb	      0xe922020000	                           jmp 0x4004a12	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047f0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1736	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40047fb	      0xe912020000	                           jmp 0x4004a12	      1736	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004800	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1737	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400480b	      0xe902020000	                           jmp 0x4004a12	      1737	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004810	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400481b	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004825	      0xe9e8010000	                           jmp 0x4004a12	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400482a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1739	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004835	      0xe9d8010000	                           jmp 0x4004a12	      1739	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400483a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1740	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004845	      0xe9c8010000	                           jmp 0x4004a12	      1740	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400484a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004855	      0xe9b8010000	                           jmp 0x4004a12	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400485a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1742	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004865	      0xe9a8010000	                           jmp 0x4004a12	      1742	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400486a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1743	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004875	      0xe998010000	                           jmp 0x4004a12	      1743	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400487a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1744	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004885	      0xe988010000	                           jmp 0x4004a12	      1744	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400488a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004895	      0xe978010000	                           jmp 0x4004a12	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400489a	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048a5	      0xe968010000	                           jmp 0x4004a12	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048aa	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1747	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048b5	      0xe958010000	                           jmp 0x4004a12	      1747	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048ba	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1748	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048c5	      0xe948010000	                           jmp 0x4004a12	      1748	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048ca	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048d5	      0xe938010000	                           jmp 0x4004a12	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048da	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048e5	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048ef	      0xe91e010000	                           jmp 0x4004a12	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048f4	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40048ff	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004909	      0xe904010000	                           jmp 0x4004a12	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400490e	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004919	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004923	      0xe9ea000000	                           jmp 0x4004a12	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004928	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1753	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004933	      0xe9da000000	                           jmp 0x4004a12	      1753	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004938	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1754	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004943	      0xe9ca000000	                           jmp 0x4004a12	      1754	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004948	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004953	      0xe9ba000000	                           jmp 0x4004a12	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004958	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1756	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004963	      0xe9aa000000	                           jmp 0x4004a12	      1756	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004968	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1757	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004973	      0xe99a000000	                           jmp 0x4004a12	      1757	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004978	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004983	      0xe98a000000	                           jmp 0x4004a12	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004988	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1759	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004993	            0xeb7d	                           jmp 0x4004a12	      1759	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004995	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049a0	            0xeb70	                           jmp 0x4004a12	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049a2	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1761	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049ad	            0xeb63	                           jmp 0x4004a12	      1761	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049af	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1762	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049ba	            0xeb56	                           jmp 0x4004a12	      1762	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049bc	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049c7	            0xeb49	                           jmp 0x4004a12	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049c9	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049d4	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049de	            0xeb32	                           jmp 0x4004a12	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049e0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049eb	            0xeb25	                           jmp 0x4004a12	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049ed	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x40049f8	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004a02	            0xeb0e	                           jmp 0x4004a12	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004a04	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1767	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004a0f	            0xeb01	                           jmp 0x4004a12	      1767	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004a11	              0x90	                                     nop	      1708	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x4004a12	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1770	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_33
0x4004a19	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1770	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_33
0x4004a1d	      0xbe00000000	                              mov esi, 0	      1770	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_33
0x4004a22	          0x4889c7	                            mov rdi, rax	      1770	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_33
0x4004a25	      0xb800000000	                              mov eax, 0	      1770	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_33
0x4004a2a	      0xe800000000	                          call 0x4004a2f	      1770	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_33
0x4004a2f	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1771	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11
0x4004a36	            0x7537	                           jne 0x4004a6f	      1771	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11
0x4004a38	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1773	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_34
0x4004a3c	          0x4889c1	                            mov rcx, rax	      1773	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_34
0x4004a3f	      0xba02000000	                              mov edx, 2	      1773	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_34
0x4004a44	      0xbe01000000	                              mov esi, 1	      1773	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_34
0x4004a49	      0xbf00000000	                              mov edi, 0	      1773	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_34
0x4004a4e	      0xe800000000	                          call 0x4004a53	      1773	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_34
0x4004a53	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_35
0x4004a57	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_35
0x4004a5b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_35
0x4004a62	          0x4889ce	                            mov rsi, rcx	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_35
0x4004a65	          0x4889c7	                            mov rdi, rax	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_35
0x4004a68	      0xe800000000	                          call 0x4004a6d	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_35
0x4004a6d	            0xeb49	                           jmp 0x4004ab8	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_35
0x4004a6f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1779	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1
0x4004a73	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1779	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1
0x4004a79	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a7d	            0x89c1	                            mov ecx, eax	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a7f	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a85	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a8c	            0x89ce	                            mov esi, ecx	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a8e	          0x4889c7	                            mov rdi, rax	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a91	      0xe800000000	                          call 0x4004a96	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a96	        0x488945b8	             mov qword [rbp - 0x48], rax	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_36
0x4004a9a	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x4004a9f	     0xf8407040000	                            je 0x4004eac	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x4004aa5	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1784	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_37
0x4004aa9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1784	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_37
0x4004aad	          0x4889d6	                            mov rsi, rdx	      1784	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_37
0x4004ab0	          0x4889c7	                            mov rdi, rax	      1784	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_37
0x4004ab3	      0xe800000000	                          call 0x4004ab8	      1784	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_37
0x4004ab8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1786	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_38
0x4004abc	          0x4889c6	                            mov rsi, rax	      1786	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_38
0x4004abf	      0xbf0a000000	                            mov edi, 0xa	      1786	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_38
0x4004ac4	      0xe800000000	                          call 0x4004ac9	      1786	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_38
0x4004ac9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004acd	    0x48018550ffff	            add qword [rbp - 0xb0], rax 	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004ad4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004ad8	          0x48f7d8	                                 neg rax	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004adb	          0x4889c2	                            mov rdx, rax	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004ade	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004ae2	          0x4801d0	                            add rax, rdx	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004ae5	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004aec	     0xf839df7ffff	                           jae 0x400428f	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004af2	            0xeb01	                           jmp 0x4004af5	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x4004af4	              0x90	                                     nop	      1694	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x4004af5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1789	elf.c	FUNCTION_33	IF_4	CALL_39
0x4004afc	          0x4889c7	                            mov rdi, rax	      1789	elf.c	FUNCTION_33	IF_4	CALL_39
0x4004aff	      0xe800000000	                          call 0x4004b04	      1789	elf.c	FUNCTION_33	IF_4	CALL_39
0x4004b04	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1790	elf.c	FUNCTION_33	IF_4
0x4004b0f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b16	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b1d	    0x8b80840c0000	           mov eax, dword [rax + 0xc84] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b23	            0x85c0	                           test eax, eax	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b25	            0x741a	                            je 0x4004b41	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b27	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b2e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b35	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b3c	          0x4885c0	                           test rax, rax	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b3f	            0x7432	                            je 0x4004b73	      1793	elf.c	FUNCTION_33	IF_13	CALL_41
0x4004b41	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b48	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b4f	    0x8b80880c0000	           mov eax, dword [rax + 0xc88] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b55	            0x85c0	                           test eax, eax	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b57	            0x743c	                            je 0x4004b95	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b59	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b60	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b67	    0x488b80500300	           mov rax, qword [rax + 0x350] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b6e	          0x4885c0	                           test rax, rax	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b71	            0x7522	                           jne 0x4004b95	      1794	elf.c	FUNCTION_33	IF_13	CALL_43
0x4004b73	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_44
0x4004b7a	      0xbe00000000	                              mov esi, 0	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_44
0x4004b7f	          0x4889c7	                            mov rdi, rax	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_44
0x4004b82	      0xe800000000	                          call 0x4004b87	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_44
0x4004b87	            0x85c0	                           test eax, eax	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_44
0x4004b89	            0x750a	                           jne 0x4004b95	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_44
0x4004b8b	      0xb800000000	                              mov eax, 0	      1797	elf.c	FUNCTION_33	IF_13	IF_14
0x4004b90	      0xe938030000	                           jmp 0x4004ecd	      1797	elf.c	FUNCTION_33	IF_13	IF_14
0x4004b95	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1800	elf.c	FUNCTION_33	IF_15	CALL_45
0x4004b9c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1800	elf.c	FUNCTION_33	IF_15	CALL_45
0x4004ba3	    0x8b80840c0000	           mov eax, dword [rax + 0xc84] 	      1800	elf.c	FUNCTION_33	IF_15	CALL_45
0x4004ba9	            0x85c0	                           test eax, eax	      1800	elf.c	FUNCTION_33	IF_15	CALL_45
0x4004bab	     0xf8489010000	                            je 0x4004d3a	      1800	elf.c	FUNCTION_33	IF_15	CALL_45
0x4004bb1	      0xbe00000000	                              mov esi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bb6	      0xbf00000000	                              mov edi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bbb	      0xe800000000	                          call 0x4004bc0	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bc0	          0x4889c2	                            mov rdx, rax	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bc3	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bc7	          0x4889d6	                            mov rsi, rdx	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bca	          0x4889c7	                            mov rdi, rax	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bcd	      0xb800000000	                              mov eax, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bd2	      0xe800000000	                          call 0x4004bd7	      1804	elf.c	FUNCTION_33	IF_15	CALL_47
0x4004bd7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004bde	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004be5	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004bec	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004bf3	      0xe934010000	                           jmp 0x4004d2c	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004bf8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1809	elf.c	FUNCTION_33	IF_15	FOR_3
0x4004bff	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1809	elf.c	FUNCTION_33	IF_15	FOR_3
0x4004c03	          0x4885c0	                           test rax, rax	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c06	            0x740d	                            je 0x4004c15	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c08	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c0f	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c13	            0xeb05	                           jmp 0x4004c1a	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c15	      0xbe00000000	                              mov esi, 0	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c1a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c21	        0x488b7808	                mov rdi, qword [rax + 8]	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c25	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1808	elf.c	FUNCTION_33	IF_15	FOR_3
0x4004c2c	         0xfb74002	               movzx eax, word [rax + 2]	      1808	elf.c	FUNCTION_33	IF_15	FOR_3
0x4004c30	           0xfb7c8	                           movzx ecx, ax	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c33	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c3a	         0xfb74004	               movzx eax, word [rax + 4]	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c3e	           0xfb7d0	                           movzx edx, ax	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c41	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c45	          0x4989f1	                             mov r9, rsi	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c48	          0x4989f8	                             mov r8, rdi	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c4b	      0xbe00000000	                              mov esi, 0	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c50	          0x4889c7	                            mov rdi, rax	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c53	      0xb800000000	                              mov eax, 0	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c58	      0xe800000000	                          call 0x4004c5d	      1807	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_49
0x4004c5d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c64	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c68	          0x4885c0	                           test rax, rax	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c6b	     0xf84a9000000	                            je 0x4004d1a	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c71	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c78	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c7c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c80	          0x4885c0	                           test rax, rax	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c83	     0xf8491000000	                            je 0x4004d1a	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x4004c89	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1814	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_50
0x4004c8d	          0x4889c6	                            mov rsi, rax	      1814	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_50
0x4004c90	      0xbf09000000	                              mov edi, 9	      1814	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_50
0x4004c95	      0xe800000000	                          call 0x4004c9a	      1814	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_50
0x4004c9a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004ca1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004ca5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004ca9	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004cb0	            0xeb4d	                           jmp 0x4004cff	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004cb2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1819	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004cb9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1819	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004cbd	          0x4885c0	                           test rax, rax	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004cc0	            0x740d	                            je 0x4004ccf	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004cc2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004cc9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004ccd	            0xeb05	                           jmp 0x4004cd4	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004ccf	      0xb800000000	                              mov eax, 0	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004cd4	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004cd8	          0x4889c2	                            mov rdx, rax	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004cdb	      0xbe00000000	                              mov esi, 0	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004ce0	          0x4889cf	                            mov rdi, rcx	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004ce3	      0xb800000000	                              mov eax, 0	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004ce8	      0xe800000000	                          call 0x4004ced	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4	CALL_51
0x4004ced	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1817	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004cf4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1817	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004cf8	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1817	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004cff	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004d07	            0x75a9	                           jne 0x4004cb2	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x4004d09	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1820	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_52
0x4004d0d	          0x4889c6	                            mov rsi, rax	      1820	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_52
0x4004d10	      0xbf0a000000	                            mov edi, 0xa	      1820	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_52
0x4004d15	      0xe800000000	                          call 0x4004d1a	      1820	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	CALL_52
0x4004d1a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004d21	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004d25	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004d2c	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004d34	     0xf85befeffff	                           jne 0x4004bf8	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_48
0x4004d3a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1825	elf.c	FUNCTION_33	IF_17	CALL_53
0x4004d41	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1825	elf.c	FUNCTION_33	IF_17	CALL_53
0x4004d48	    0x8b80880c0000	           mov eax, dword [rax + 0xc88] 	      1825	elf.c	FUNCTION_33	IF_17	CALL_53
0x4004d4e	            0x85c0	                           test eax, eax	      1825	elf.c	FUNCTION_33	IF_17	CALL_53
0x4004d50	     0xf8446010000	                            je 0x4004e9c	      1825	elf.c	FUNCTION_33	IF_17	CALL_53
0x4004d56	      0xbe00000000	                              mov esi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d5b	      0xbf00000000	                              mov edi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d60	      0xe800000000	                          call 0x4004d65	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d65	          0x4889c2	                            mov rdx, rax	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d68	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d6c	          0x4889d6	                            mov rsi, rdx	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d6f	          0x4889c7	                            mov rdi, rax	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d72	      0xb800000000	                              mov eax, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d77	      0xe800000000	                          call 0x4004d7c	      1829	elf.c	FUNCTION_33	IF_17	CALL_55
0x4004d7c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004d83	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004d8a	    0x488b80500300	           mov rax, qword [rax + 0x350] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004d91	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004d98	      0xe9f1000000	                           jmp 0x4004e8e	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004d9d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1835	elf.c	FUNCTION_33	IF_17	FOR_5
0x4004da4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1835	elf.c	FUNCTION_33	IF_17	FOR_5
0x4004da8	          0x4885c0	                           test rax, rax	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dab	            0x740d	                            je 0x4004dba	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dad	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004db4	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004db8	            0xeb05	                           jmp 0x4004dbf	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dba	      0xbb00000000	                              mov ebx, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dbf	      0xbe00000000	                              mov esi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dc4	      0xbf00000000	                              mov edi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dc9	      0xe800000000	                          call 0x4004dce	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dce	          0x4889c1	                            mov rcx, rax	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dd1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dd5	          0x4889da	                            mov rdx, rbx	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dd8	          0x4889ce	                            mov rsi, rcx	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004ddb	          0x4889c7	                            mov rdi, rax	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004dde	      0xb800000000	                              mov eax, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004de3	      0xe800000000	                          call 0x4004de8	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_58
0x4004de8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004def	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004df3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004dfa	            0xeb76	                           jmp 0x4004e72	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004dfc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1839	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e03	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1839	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e07	          0x4885c0	                           test rax, rax	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e0a	            0x740d	                            je 0x4004e19	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e0c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e13	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e17	            0xeb05	                           jmp 0x4004e1e	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e19	      0xbe00000000	                              mov esi, 0	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e1e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1838	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e25	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      1838	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e29	           0xfb7f8	                           movzx edi, ax	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e2c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1838	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e33	         0xfb74008	               movzx eax, word [rax + 8]	      1838	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e37	           0xfb7c8	                           movzx ecx, ax	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e3a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e41	          0x488b10	                    mov rdx, qword [rax]	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e44	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e48	          0x4989f1	                             mov r9, rsi	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e4b	          0x4189f8	                            mov r8d, edi	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e4e	      0xbe00000000	                              mov esi, 0	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e53	          0x4889c7	                            mov rdi, rax	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e56	      0xb800000000	                              mov eax, 0	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e5b	      0xe800000000	                          call 0x4004e60	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6	CALL_59
0x4004e60	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e67	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e6b	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e72	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e7a	            0x7580	                           jne 0x4004dfc	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x4004e7c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004e83	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004e87	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004e8e	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004e96	     0xf8501ffffff	                           jne 0x4004d9d	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_56
0x4004e9c	      0xb801000000	                              mov eax, 1	      1843	elf.c	FUNCTION_33
0x4004ea1	            0xeb2a	                           jmp 0x4004ecd	      1843	elf.c	FUNCTION_33
0x4004ea3	              0x90	                                     nop	      1666	elf.c	FUNCTION_33	IF_4	IF_5
0x4004ea4	            0xeb07	                           jmp 0x4004ead	      1666	elf.c	FUNCTION_33	IF_4	IF_5
0x4004ea6	              0x90	                                     nop	      1670	elf.c	FUNCTION_33	IF_4	IF_6
0x4004ea7	            0xeb04	                           jmp 0x4004ead	      1670	elf.c	FUNCTION_33	IF_4	IF_6
0x4004ea9	              0x90	                                     nop	      1679	elf.c	FUNCTION_33	IF_4	IF_7
0x4004eaa	            0xeb01	                           jmp 0x4004ead	      1679	elf.c	FUNCTION_33	IF_4	IF_7
0x4004eac	              0x90	                                     nop	      1783	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x4004ead	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1846	elf.c	FUNCTION_33	IF_18
0x4004eb4	          0x4885c0	                           test rax, rax	      1846	elf.c	FUNCTION_33	IF_18
0x4004eb7	            0x740f	                            je 0x4004ec8	      1846	elf.c	FUNCTION_33	IF_18
0x4004eb9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1847	elf.c	FUNCTION_33	CALL_60
0x4004ec0	          0x4889c7	                            mov rdi, rax	      1847	elf.c	FUNCTION_33	CALL_60
0x4004ec3	      0xe800000000	                          call 0x4004ec8	      1847	elf.c	FUNCTION_33	CALL_60
0x4004ec8	      0xb800000000	                              mov eax, 0	      1848	elf.c	FUNCTION_33
0x4004ecd	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1849	elf.c	FUNCTION_33
0x4004ed1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1849	elf.c	FUNCTION_33
0x4004eda	            0x7405	                            je 0x4004ee1	      1849	elf.c	FUNCTION_33
0x4004edc	      0xe800000000	                          call 0x4004ee1	      1849	elf.c	FUNCTION_33
0x4004ee1	    0x4881c4e80000	                           add rsp, 0xe8	      1849	elf.c	FUNCTION_33
0x4004ee8	              0x5b	                                 pop rbx	      1849	elf.c	FUNCTION_33
0x4004ee9	              0x5d	                                 pop rbp	      1849	elf.c	FUNCTION_33
0x4004eea	              0xc3	                                     ret	      1849	elf.c	FUNCTION_33
_bfd_elf_new_section_hook	ELSE,0:DO,0:CALL,5:WHILE,0:FOR,0:IF,4:SWITCH,0:functions,0	91
0x4007289	              0x55	                                push rbp	      2834	elf.c	FUNCTION_41
0x400728a	          0x4889e5	                            mov rbp, rsp	      2834	elf.c	FUNCTION_41
0x400728d	        0x4883ec30	                           sub rsp, 0x30	      2834	elf.c	FUNCTION_41
0x4007291	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2834	elf.c	FUNCTION_41
0x4007295	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2834	elf.c	FUNCTION_41
0x4007299	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2839	elf.c	FUNCTION_41
0x400729d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2839	elf.c	FUNCTION_41
0x40072a4	        0x488945e8	             mov qword [rbp - 0x18], rax	      2839	elf.c	FUNCTION_41
0x40072a8	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2840	elf.c	FUNCTION_41	IF_1
0x40072ad	            0x7535	                           jne 0x40072e4	      2840	elf.c	FUNCTION_41	IF_1
0x40072af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x40072b3	      0xbee0000000	                           mov esi, 0xe0	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x40072b8	          0x4889c7	                            mov rdi, rax	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x40072bb	      0xe800000000	                          call 0x40072c0	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x40072c0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x40072c4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x40072c9	            0x750a	                           jne 0x40072d5	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x40072cb	      0xb800000000	                              mov eax, 0	      2845	elf.c	FUNCTION_41	IF_1	IF_2
0x40072d0	      0xe908010000	                           jmp 0x40073dd	      2845	elf.c	FUNCTION_41	IF_1	IF_2
0x40072d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2846	elf.c	FUNCTION_41	IF_1
0x40072d9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2846	elf.c	FUNCTION_41	IF_1
0x40072dd	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      2846	elf.c	FUNCTION_41	IF_1
0x40072e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2850	elf.c	FUNCTION_41	CALL_2
0x40072e8	        0x488b4008	                mov rax, qword [rax + 8]	      2850	elf.c	FUNCTION_41	CALL_2
0x40072ec	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2850	elf.c	FUNCTION_41	CALL_2
0x40072f3	        0x488945f0	             mov qword [rbp - 0x10], rax	      2850	elf.c	FUNCTION_41	CALL_2
0x40072f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2851	elf.c	FUNCTION_41
0x40072fb	     0xfb680880300	          movzx eax, byte [rax + 0x388] 	      2851	elf.c	FUNCTION_41
0x4007302	          0xc0e804	                               shr al, 4	      2851	elf.c	FUNCTION_41
0x4007305	          0x83e001	                              and eax, 1	      2851	elf.c	FUNCTION_41
0x4007308	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2851	elf.c	FUNCTION_41
0x400730c	          0x83e001	                              and eax, 1	      2851	elf.c	FUNCTION_41
0x400730f	    0x8d0c85000000	                        lea ecx, [rax*4]	      2851	elf.c	FUNCTION_41
0x4007316	         0xfb64225	           movzx eax, byte [rdx + 0x25] 	      2851	elf.c	FUNCTION_41
0x400731a	          0x83e0fb	                     and eax, 0xfffffffb	      2851	elf.c	FUNCTION_41
0x400731d	             0x9c8	                             or eax, ecx	      2851	elf.c	FUNCTION_41
0x400731f	          0x884225	               mov byte [rdx + 0x25], al	      2851	elf.c	FUNCTION_41
0x4007322	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2862	elf.c	FUNCTION_41	IF_3
0x4007326	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2862	elf.c	FUNCTION_41	IF_3
0x400732a	          0x83e018	                           and eax, 0x18	      2862	elf.c	FUNCTION_41	IF_3
0x400732d	            0x3c08	                               cmp al, 8	      2862	elf.c	FUNCTION_41	IF_3
0x400732f	            0x7514	                           jne 0x4007345	      2862	elf.c	FUNCTION_41	IF_3
0x4007331	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2863	elf.c	FUNCTION_41	IF_3
0x4007335	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2863	elf.c	FUNCTION_41	IF_3
0x4007338	      0x2500001000	                       and eax, 0x100000	      2863	elf.c	FUNCTION_41	IF_3
0x400733d	            0x85c0	                           test eax, eax	      2863	elf.c	FUNCTION_41	IF_3
0x400733f	     0xf8485000000	                            je 0x40073ca	      2863	elf.c	FUNCTION_41	IF_3
0x4007345	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2865	elf.c	FUNCTION_41	IF_3
0x4007349	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2865	elf.c	FUNCTION_41	IF_3
0x4007350	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2865	elf.c	FUNCTION_41	IF_3
0x4007354	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2865	elf.c	FUNCTION_41	IF_3
0x4007358	          0x4889ce	                            mov rsi, rcx	      2865	elf.c	FUNCTION_41	IF_3
0x400735b	          0x4889d7	                            mov rdi, rdx	      2865	elf.c	FUNCTION_41	IF_3
0x400735e	            0xffd0	                                call rax	      2865	elf.c	FUNCTION_41	IF_3
0x4007360	        0x488945f8	                mov qword [rbp - 8], rax	      2865	elf.c	FUNCTION_41	IF_3
0x4007364	      0x48837df800	                  cmp qword [rbp - 8], 0	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x4007369	            0x745f	                            je 0x40073ca	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x400736b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x400736f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4007372	            0x85c0	                           test eax, eax	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4007374	            0x7428	                            je 0x400739e	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4007376	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x400737a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x400737d	      0x2500001000	                       and eax, 0x100000	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x4007382	            0x85c0	                           test eax, eax	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x4007384	            0x7518	                           jne 0x400739e	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x4007386	        0x488b45f8	                mov rax, qword [rbp - 8]	      2869	elf.c	FUNCTION_41	IF_3	IF_4
0x400738a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2869	elf.c	FUNCTION_41	IF_3	IF_4
0x400738d	          0x83f80e	                            cmp eax, 0xe	      2869	elf.c	FUNCTION_41	IF_3	IF_4
0x4007390	            0x740c	                            je 0x400739e	      2869	elf.c	FUNCTION_41	IF_3	IF_4
0x4007392	        0x488b45f8	                mov rax, qword [rbp - 8]	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4007396	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4007399	          0x83f80f	                            cmp eax, 0xf	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x400739c	            0x752c	                           jne 0x40073ca	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x400739e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x40073a2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x40073a9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x40073ad	          0x8b5210	            mov edx, dword [rdx + 0x10] 	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x40073b0	          0x895004	                mov dword [rax + 4], edx	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x40073b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40073b7	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40073be	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40073c2	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40073c6	        0x48895008	                mov qword [rax + 8], rdx	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40073ca	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2877	elf.c	FUNCTION_41	CALL_5
0x40073ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2877	elf.c	FUNCTION_41	CALL_5
0x40073d2	          0x4889d6	                            mov rsi, rdx	      2877	elf.c	FUNCTION_41	CALL_5
0x40073d5	          0x4889c7	                            mov rdi, rax	      2877	elf.c	FUNCTION_41	CALL_5
0x40073d8	      0xe800000000	                          call 0x40073dd	      2877	elf.c	FUNCTION_41	CALL_5
0x40073dd	              0xc9	                                   leave	      2878	elf.c	FUNCTION_41
0x40073de	              0xc3	                                     ret	      2878	elf.c	FUNCTION_41
elfcore_grok_arm_vfp	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016eed	              0x55	                                push rbp	      9318	elf.c	FUNCTION_135
0x4016eee	          0x4889e5	                            mov rbp, rsp	      9318	elf.c	FUNCTION_135
0x4016ef1	        0x4883ec10	                           sub rsp, 0x10	      9318	elf.c	FUNCTION_135
0x4016ef5	        0x48897df8	                mov qword [rbp - 8], rdi	      9318	elf.c	FUNCTION_135
0x4016ef9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9318	elf.c	FUNCTION_135
0x4016efd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9319	elf.c	FUNCTION_135	CALL_1
0x4016f01	        0x488b45f8	                mov rax, qword [rbp - 8]	      9319	elf.c	FUNCTION_135	CALL_1
0x4016f05	      0xbe00000000	                              mov esi, 0	      9319	elf.c	FUNCTION_135	CALL_1
0x4016f0a	          0x4889c7	                            mov rdi, rax	      9319	elf.c	FUNCTION_135	CALL_1
0x4016f0d	      0xe8e7fcffff	call sym.elfcore_make_note_pseudosection	      9319	elf.c	FUNCTION_135	CALL_1
0x4016f12	              0xc9	                                   leave	      9320	elf.c	FUNCTION_135
0x4016f13	              0xc3	                                     ret	      9320	elf.c	FUNCTION_135
align_file_position	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	15
0x400a4fe	              0x55	                                push rbp	      4188	elf.c	FUNCTION_57
0x400a4ff	          0x4889e5	                            mov rbp, rsp	      4188	elf.c	FUNCTION_57
0x400a502	        0x48897df8	                mov qword [rbp - 8], rdi	      4188	elf.c	FUNCTION_57
0x400a506	          0x8975f4	              mov dword [rbp - 0xc], esi	      4188	elf.c	FUNCTION_57
0x400a509	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4189	elf.c	FUNCTION_57
0x400a50c	          0x4863d0	                         movsxd rdx, eax	      4189	elf.c	FUNCTION_57
0x400a50f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4189	elf.c	FUNCTION_57
0x400a513	          0x4801d0	                            add rax, rdx	      4189	elf.c	FUNCTION_57
0x400a516	        0x488d50ff	                      lea rdx, [rax - 1]	      4189	elf.c	FUNCTION_57
0x400a51a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4189	elf.c	FUNCTION_57
0x400a51d	            0xf7d8	                                 neg eax	      4189	elf.c	FUNCTION_57
0x400a51f	            0x4898	                                    cdqe	      4189	elf.c	FUNCTION_57
0x400a521	          0x4821d0	                            and rax, rdx	      4189	elf.c	FUNCTION_57
0x400a524	              0x5d	                                 pop rbp	      4190	elf.c	FUNCTION_57
0x400a525	              0xc3	                                     ret	      4190	elf.c	FUNCTION_57
elfcore_grok_s390_system_call	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016e03	              0x55	                                push rbp	      9282	elf.c	FUNCTION_129
0x4016e04	          0x4889e5	                            mov rbp, rsp	      9282	elf.c	FUNCTION_129
0x4016e07	        0x4883ec10	                           sub rsp, 0x10	      9282	elf.c	FUNCTION_129
0x4016e0b	        0x48897df8	                mov qword [rbp - 8], rdi	      9282	elf.c	FUNCTION_129
0x4016e0f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9282	elf.c	FUNCTION_129
0x4016e13	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9283	elf.c	FUNCTION_129	CALL_1
0x4016e17	        0x488b45f8	                mov rax, qword [rbp - 8]	      9283	elf.c	FUNCTION_129	CALL_1
0x4016e1b	      0xbe00000000	                              mov esi, 0	      9283	elf.c	FUNCTION_129	CALL_1
0x4016e20	          0x4889c7	                            mov rdi, rax	      9283	elf.c	FUNCTION_129	CALL_1
0x4016e23	      0xe8d1fdffff	call sym.elfcore_make_note_pseudosection	      9283	elf.c	FUNCTION_129	CALL_1
0x4016e28	              0xc9	                                   leave	      9284	elf.c	FUNCTION_129
0x4016e29	              0xc3	                                     ret	      9284	elf.c	FUNCTION_129
elfcore_write_s390_tdb	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019fb0	              0x55	                                push rbp	     10922	elf.c	FUNCTION_181
0x4019fb1	          0x4889e5	                            mov rbp, rsp	     10922	elf.c	FUNCTION_181
0x4019fb4	        0x4883ec40	                           sub rsp, 0x40	     10922	elf.c	FUNCTION_181
0x4019fb8	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10922	elf.c	FUNCTION_181
0x4019fbc	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10922	elf.c	FUNCTION_181
0x4019fc0	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10922	elf.c	FUNCTION_181
0x4019fc4	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10922	elf.c	FUNCTION_181
0x4019fc8	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10922	elf.c	FUNCTION_181
0x4019fcc	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10923	elf.c	FUNCTION_181
0x4019fd4	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10924	elf.c	FUNCTION_181	CALL_1
0x4019fd8	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10924	elf.c	FUNCTION_181	CALL_1
0x4019fdc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10924	elf.c	FUNCTION_181	CALL_1
0x4019fe0	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10924	elf.c	FUNCTION_181	CALL_1
0x4019fe4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10924	elf.c	FUNCTION_181	CALL_1
0x4019fe8	        0x4883ec08	                              sub rsp, 8	     10924	elf.c	FUNCTION_181	CALL_1
0x4019fec	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10924	elf.c	FUNCTION_181	CALL_1
0x4019fef	              0x57	                                push rdi	     10924	elf.c	FUNCTION_181	CALL_1
0x4019ff0	          0x4d89c1	                              mov r9, r8	     10924	elf.c	FUNCTION_181	CALL_1
0x4019ff3	    0x41b808030000	                          mov r8d, 0x308	     10924	elf.c	FUNCTION_181	CALL_1
0x4019ff9	          0x4889c7	                            mov rdi, rax	     10924	elf.c	FUNCTION_181	CALL_1
0x4019ffc	      0xe800000000	                          call 0x401a001	     10924	elf.c	FUNCTION_181	CALL_1
0x401a001	        0x4883c410	                           add rsp, 0x10	     10924	elf.c	FUNCTION_181	CALL_1
0x401a005	              0xc9	                                   leave	     10926	elf.c	FUNCTION_181
0x401a006	              0xc3	                                     ret	     10926	elf.c	FUNCTION_181
_bfd_elf_swap_verdef_out	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	82
0x4000840	              0x55	                                push rbp	        86	elf.c	FUNCTION_2
0x4000841	          0x4889e5	                            mov rbp, rsp	        86	elf.c	FUNCTION_2
0x4000844	        0x4883ec20	                           sub rsp, 0x20	        86	elf.c	FUNCTION_2
0x4000848	        0x48897df8	                mov qword [rbp - 8], rdi	        86	elf.c	FUNCTION_2
0x400084c	        0x488975f0	             mov qword [rbp - 0x10], rsi	        86	elf.c	FUNCTION_2
0x4000850	        0x488955e8	             mov qword [rbp - 0x18], rdx	        86	elf.c	FUNCTION_2
0x4000854	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	elf.c	FUNCTION_2
0x4000858	        0x488b4008	                mov rax, qword [rax + 8]	        87	elf.c	FUNCTION_2
0x400085c	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	        87	elf.c	FUNCTION_2
0x4000863	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        87	elf.c	FUNCTION_2
0x4000867	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        87	elf.c	FUNCTION_2
0x400086b	           0xfb712	                   movzx edx, word [rdx]	        87	elf.c	FUNCTION_2
0x400086e	           0xfb7d2	                           movzx edx, dx	        87	elf.c	FUNCTION_2
0x4000871	          0x4889ce	                            mov rsi, rcx	        87	elf.c	FUNCTION_2
0x4000874	          0x4889d7	                            mov rdi, rdx	        87	elf.c	FUNCTION_2
0x4000877	            0xffd0	                                call rax	        87	elf.c	FUNCTION_2
0x4000879	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	elf.c	FUNCTION_2
0x400087d	        0x488b4008	                mov rax, qword [rax + 8]	        88	elf.c	FUNCTION_2
0x4000881	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	        88	elf.c	FUNCTION_2
0x4000888	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        88	elf.c	FUNCTION_2
0x400088c	        0x488d4a02	                      lea rcx, [rdx + 2]	        88	elf.c	FUNCTION_2
0x4000890	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        88	elf.c	FUNCTION_2
0x4000894	         0xfb75202	               movzx edx, word [rdx + 2]	        88	elf.c	FUNCTION_2
0x4000898	           0xfb7d2	                           movzx edx, dx	        88	elf.c	FUNCTION_2
0x400089b	          0x4889ce	                            mov rsi, rcx	        88	elf.c	FUNCTION_2
0x400089e	          0x4889d7	                            mov rdi, rdx	        88	elf.c	FUNCTION_2
0x40008a1	            0xffd0	                                call rax	        88	elf.c	FUNCTION_2
0x40008a3	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	elf.c	FUNCTION_2
0x40008a7	        0x488b4008	                mov rax, qword [rax + 8]	        89	elf.c	FUNCTION_2
0x40008ab	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	        89	elf.c	FUNCTION_2
0x40008b2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        89	elf.c	FUNCTION_2
0x40008b6	        0x488d4a04	                      lea rcx, [rdx + 4]	        89	elf.c	FUNCTION_2
0x40008ba	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        89	elf.c	FUNCTION_2
0x40008be	         0xfb75204	               movzx edx, word [rdx + 4]	        89	elf.c	FUNCTION_2
0x40008c2	           0xfb7d2	                           movzx edx, dx	        89	elf.c	FUNCTION_2
0x40008c5	          0x4889ce	                            mov rsi, rcx	        89	elf.c	FUNCTION_2
0x40008c8	          0x4889d7	                            mov rdi, rdx	        89	elf.c	FUNCTION_2
0x40008cb	            0xffd0	                                call rax	        89	elf.c	FUNCTION_2
0x40008cd	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	elf.c	FUNCTION_2
0x40008d1	        0x488b4008	                mov rax, qword [rax + 8]	        90	elf.c	FUNCTION_2
0x40008d5	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	        90	elf.c	FUNCTION_2
0x40008dc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        90	elf.c	FUNCTION_2
0x40008e0	        0x488d4a06	                      lea rcx, [rdx + 6]	        90	elf.c	FUNCTION_2
0x40008e4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        90	elf.c	FUNCTION_2
0x40008e8	         0xfb75206	               movzx edx, word [rdx + 6]	        90	elf.c	FUNCTION_2
0x40008ec	           0xfb7d2	                           movzx edx, dx	        90	elf.c	FUNCTION_2
0x40008ef	          0x4889ce	                            mov rsi, rcx	        90	elf.c	FUNCTION_2
0x40008f2	          0x4889d7	                            mov rdi, rdx	        90	elf.c	FUNCTION_2
0x40008f5	            0xffd0	                                call rax	        90	elf.c	FUNCTION_2
0x40008f7	        0x488b45f8	                mov rax, qword [rbp - 8]	        91	elf.c	FUNCTION_2
0x40008fb	        0x488b4008	                mov rax, qword [rax + 8]	        91	elf.c	FUNCTION_2
0x40008ff	    0x488b80900000	            mov rax, qword [rax + 0x90] 	        91	elf.c	FUNCTION_2
0x4000906	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        91	elf.c	FUNCTION_2
0x400090a	        0x488d4a08	                      lea rcx, [rdx + 8]	        91	elf.c	FUNCTION_2
0x400090e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        91	elf.c	FUNCTION_2
0x4000912	        0x488b5208	                mov rdx, qword [rdx + 8]	        91	elf.c	FUNCTION_2
0x4000916	          0x4889ce	                            mov rsi, rcx	        91	elf.c	FUNCTION_2
0x4000919	          0x4889d7	                            mov rdi, rdx	        91	elf.c	FUNCTION_2
0x400091c	            0xffd0	                                call rax	        91	elf.c	FUNCTION_2
0x400091e	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	elf.c	FUNCTION_2
0x4000922	        0x488b4008	                mov rax, qword [rax + 8]	        92	elf.c	FUNCTION_2
0x4000926	    0x488b80900000	            mov rax, qword [rax + 0x90] 	        92	elf.c	FUNCTION_2
0x400092d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        92	elf.c	FUNCTION_2
0x4000931	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	        92	elf.c	FUNCTION_2
0x4000935	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        92	elf.c	FUNCTION_2
0x4000939	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	        92	elf.c	FUNCTION_2
0x400093d	          0x4889ce	                            mov rsi, rcx	        92	elf.c	FUNCTION_2
0x4000940	          0x4889d7	                            mov rdi, rdx	        92	elf.c	FUNCTION_2
0x4000943	            0xffd0	                                call rax	        92	elf.c	FUNCTION_2
0x4000945	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	elf.c	FUNCTION_2
0x4000949	        0x488b4008	                mov rax, qword [rax + 8]	        93	elf.c	FUNCTION_2
0x400094d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	        93	elf.c	FUNCTION_2
0x4000954	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        93	elf.c	FUNCTION_2
0x4000958	        0x488d4a10	                   lea rcx, [rdx + 0x10]	        93	elf.c	FUNCTION_2
0x400095c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        93	elf.c	FUNCTION_2
0x4000960	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	        93	elf.c	FUNCTION_2
0x4000964	          0x4889ce	                            mov rsi, rcx	        93	elf.c	FUNCTION_2
0x4000967	          0x4889d7	                            mov rdi, rdx	        93	elf.c	FUNCTION_2
0x400096a	            0xffd0	                                call rax	        93	elf.c	FUNCTION_2
0x400096c	              0x90	                                     nop	        94	elf.c	FUNCTION_2
0x400096d	              0xc9	                                   leave	        94	elf.c	FUNCTION_2
0x400096e	              0xc3	                                     ret	        94	elf.c	FUNCTION_2
bfd_elf_get_str_section	ELSE,2:DO,0:CALL,9:WHILE,0:FOR,0:IF,5:SWITCH,0:functions,0	117
0x4001078	              0x55	                                push rbp	       279	elf.c	FUNCTION_16
0x4001079	          0x4889e5	                            mov rbp, rsp	       279	elf.c	FUNCTION_16
0x400107c	        0x4883ec30	                           sub rsp, 0x30	       279	elf.c	FUNCTION_16
0x4001080	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       279	elf.c	FUNCTION_16
0x4001084	          0x8975d4	             mov dword [rbp - 0x2c], esi	       279	elf.c	FUNCTION_16
0x4001087	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       281	elf.c	FUNCTION_16
0x400108f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       285	elf.c	FUNCTION_16	CALL_1
0x4001093	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       285	elf.c	FUNCTION_16	CALL_1
0x400109a	        0x488b4058	            mov rax, qword [rax + 0x58] 	       285	elf.c	FUNCTION_16	CALL_1
0x400109e	        0x488945e8	             mov qword [rbp - 0x18], rax	       285	elf.c	FUNCTION_16	CALL_1
0x40010a2	      0x48837de800	               cmp qword [rbp - 0x18], 0	       286	elf.c	FUNCTION_16	IF_1
0x40010a7	            0x7430	                            je 0x40010d9	       286	elf.c	FUNCTION_16	IF_1
0x40010a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	elf.c	FUNCTION_16	IF_1	CALL_2
0x40010ad	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       287	elf.c	FUNCTION_16	IF_1	CALL_2
0x40010b4	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	       287	elf.c	FUNCTION_16	IF_1	CALL_2
0x40010ba	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       287	elf.c	FUNCTION_16	IF_1	CALL_2
0x40010bd	            0x761a	                           jbe 0x40010d9	       287	elf.c	FUNCTION_16	IF_1	CALL_2
0x40010bf	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       288	elf.c	FUNCTION_16	IF_1
0x40010c2	    0x488d14c50000	                        lea rdx, [rax*8]	       288	elf.c	FUNCTION_16	IF_1
0x40010ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	elf.c	FUNCTION_16	IF_1
0x40010ce	          0x4801d0	                            add rax, rdx	       288	elf.c	FUNCTION_16	IF_1
0x40010d1	          0x488b00	                    mov rax, qword [rax]	       288	elf.c	FUNCTION_16	IF_1
0x40010d4	          0x4885c0	                           test rax, rax	       288	elf.c	FUNCTION_16	IF_1
0x40010d7	            0x750a	                           jne 0x40010e3	       288	elf.c	FUNCTION_16	IF_1
0x40010d9	      0xb800000000	                              mov eax, 0	       289	elf.c	FUNCTION_16	IF_1
0x40010de	      0xe964010000	                           jmp 0x4001247	       289	elf.c	FUNCTION_16	IF_1
0x40010e3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       291	elf.c	FUNCTION_16
0x40010e6	    0x488d14c50000	                        lea rdx, [rax*8]	       291	elf.c	FUNCTION_16
0x40010ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	elf.c	FUNCTION_16
0x40010f2	          0x4801d0	                            add rax, rdx	       291	elf.c	FUNCTION_16
0x40010f5	          0x488b00	                    mov rax, qword [rax]	       291	elf.c	FUNCTION_16
0x40010f8	        0x488b4048	            mov rax, qword [rax + 0x48] 	       291	elf.c	FUNCTION_16
0x40010fc	        0x488945e0	             mov qword [rbp - 0x20], rax	       291	elf.c	FUNCTION_16
0x4001100	      0x48837de000	               cmp qword [rbp - 0x20], 0	       292	elf.c	FUNCTION_16	IF_2
0x4001105	     0xf8538010000	                           jne 0x4001243	       292	elf.c	FUNCTION_16	IF_2
0x400110b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       295	elf.c	FUNCTION_16	IF_2
0x400110e	    0x488d14c50000	                        lea rdx, [rax*8]	       295	elf.c	FUNCTION_16	IF_2
0x4001116	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       295	elf.c	FUNCTION_16	IF_2
0x400111a	          0x4801d0	                            add rax, rdx	       295	elf.c	FUNCTION_16	IF_2
0x400111d	          0x488b00	                    mov rax, qword [rax]	       295	elf.c	FUNCTION_16	IF_2
0x4001120	        0x488b4018	            mov rax, qword [rax + 0x18] 	       295	elf.c	FUNCTION_16	IF_2
0x4001124	        0x488945f0	             mov qword [rbp - 0x10], rax	       295	elf.c	FUNCTION_16	IF_2
0x4001128	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       296	elf.c	FUNCTION_16	IF_2
0x400112b	    0x488d14c50000	                        lea rdx, [rax*8]	       296	elf.c	FUNCTION_16	IF_2
0x4001133	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       296	elf.c	FUNCTION_16	IF_2
0x4001137	          0x4801d0	                            add rax, rdx	       296	elf.c	FUNCTION_16	IF_2
0x400113a	          0x488b00	                    mov rax, qword [rax]	       296	elf.c	FUNCTION_16	IF_2
0x400113d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       296	elf.c	FUNCTION_16	IF_2
0x4001141	        0x488945f8	                mov qword [rbp - 8], rax	       296	elf.c	FUNCTION_16	IF_2
0x4001145	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x4001149	        0x4883c001	                              add rax, 1	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x400114d	        0x4883f801	                              cmp rax, 1	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x4001151	            0x7650	                           jbe 0x40011a3	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x4001153	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x4001157	          0x4889c7	                            mov rdi, rax	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x400115a	      0xe800000000	                          call 0x400115f	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x400115f	        0x483b45f8	                cmp rax, qword [rbp - 8]	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x4001163	            0x723e	                            jb 0x40011a3	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x4001165	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001169	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x400116d	      0xba00000000	                              mov edx, 0	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001172	          0x4889ce	                            mov rsi, rcx	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001175	          0x4889c7	                            mov rdi, rax	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001178	      0xe800000000	                          call 0x400117d	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x400117d	            0x85c0	                           test eax, eax	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x400117f	            0x7522	                           jne 0x40011a3	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001181	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001185	        0x488d5001	                      lea rdx, [rax + 1]	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001189	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x400118d	          0x4889d6	                            mov rsi, rdx	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001190	          0x4889c7	                            mov rdi, rax	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001193	      0xe800000000	                          call 0x4001198	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001198	        0x488945e0	             mov qword [rbp - 0x20], rax	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x400119c	      0x48837de000	               cmp qword [rbp - 0x20], 0	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x40011a1	            0x750a	                           jne 0x40011ad	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x40011a3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       304	elf.c	FUNCTION_16	IF_2	IF_3
0x40011ab	            0xeb79	                           jmp 0x4001226	       304	elf.c	FUNCTION_16	IF_2	IF_3
0x40011ad	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011b1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011b9	          0x4889ce	                            mov rsi, rcx	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011bc	          0x4889c7	                            mov rdi, rax	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011bf	      0xe800000000	                          call 0x40011c4	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011c4	        0x483b45f8	                cmp rax, qword [rbp - 8]	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011c8	            0x744e	                            je 0x4001218	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x40011ca	      0xe800000000	                          call 0x40011cf	       307	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	IF_5	CALL_7
0x40011cf	          0x83f801	                              cmp eax, 1	       307	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	IF_5	CALL_7
0x40011d2	            0x740a	                            je 0x40011de	       307	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	IF_5	CALL_7
0x40011d4	      0xbf12000000	                           mov edi, 0x12	       308	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_8
0x40011d9	      0xe800000000	                          call 0x40011de	       308	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_8
0x40011de	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x40011e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x40011e6	          0x4889d6	                            mov rsi, rdx	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x40011e9	          0x4889c7	                            mov rdi, rax	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x40011ec	      0xe800000000	                          call 0x40011f1	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x40011f1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       310	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x40011f9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x40011fc	    0x488d14c50000	                        lea rdx, [rax*8]	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x4001204	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x4001208	          0x4801d0	                            add rax, rdx	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x400120b	          0x488b00	                    mov rax, qword [rax]	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x400120e	    0x48c740200000	               mov qword [rax + 0x20], 0	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x4001216	            0xeb0e	                           jmp 0x4001226	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x4001218	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       317	elf.c	FUNCTION_16	IF_2	ELSE_2
0x400121c	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	elf.c	FUNCTION_16	IF_2	ELSE_2
0x4001220	          0x4801d0	                            add rax, rdx	       317	elf.c	FUNCTION_16	IF_2	ELSE_2
0x4001223	          0xc60000	                       mov byte [rax], 0	       317	elf.c	FUNCTION_16	IF_2	ELSE_2
0x4001226	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       318	elf.c	FUNCTION_16	IF_2
0x4001229	    0x488d14c50000	                        lea rdx, [rax*8]	       318	elf.c	FUNCTION_16	IF_2
0x4001231	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	elf.c	FUNCTION_16	IF_2
0x4001235	          0x4801d0	                            add rax, rdx	       318	elf.c	FUNCTION_16	IF_2
0x4001238	          0x488b00	                    mov rax, qword [rax]	       318	elf.c	FUNCTION_16	IF_2
0x400123b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       318	elf.c	FUNCTION_16	IF_2
0x400123f	        0x48895048	             mov qword [rax + 0x48], rdx	       318	elf.c	FUNCTION_16	IF_2
0x4001243	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       320	elf.c	FUNCTION_16
0x4001247	              0xc9	                                   leave	       321	elf.c	FUNCTION_16
0x4001248	              0xc3	                                     ret	       321	elf.c	FUNCTION_16
bfd_elf_allocate_object	ELSE,0:DO,0:CALL,6:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	60
0x4000ed2	              0x55	                                push rbp	       240	elf.c	FUNCTION_13
0x4000ed3	          0x4889e5	                            mov rbp, rsp	       240	elf.c	FUNCTION_13
0x4000ed6	        0x4883ec30	                           sub rsp, 0x30	       240	elf.c	FUNCTION_13
0x4000eda	        0x48897de8	             mov qword [rbp - 0x18], rdi	       240	elf.c	FUNCTION_13
0x4000ede	        0x488975e0	             mov qword [rbp - 0x20], rsi	       240	elf.c	FUNCTION_13
0x4000ee2	          0x8955dc	             mov dword [rbp - 0x24], edx	       240	elf.c	FUNCTION_13
0x4000ee5	    0x48817de09f0c	          cmp qword [rbp - 0x20], 0xc9f 	       241	elf.c	FUNCTION_13	CALL_1
0x4000eed	            0x770f	                            ja 0x4000efe	       241	elf.c	FUNCTION_13	CALL_1
0x4000eef	      0xbef1000000	                           mov esi, 0xf1	       241	elf.c	FUNCTION_13	CALL_1
0x4000ef4	      0xbf00000000	                              mov edi, 0	       241	elf.c	FUNCTION_13	CALL_1
0x4000ef9	      0xe800000000	                          call 0x4000efe	       241	elf.c	FUNCTION_13	CALL_1
0x4000efe	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       242	elf.c	FUNCTION_13	CALL_2
0x4000f02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       242	elf.c	FUNCTION_13	CALL_2
0x4000f06	          0x4889d6	                            mov rsi, rdx	       242	elf.c	FUNCTION_13	CALL_2
0x4000f09	          0x4889c7	                            mov rdi, rax	       242	elf.c	FUNCTION_13	CALL_2
0x4000f0c	      0xe800000000	                          call 0x4000f11	       242	elf.c	FUNCTION_13	CALL_2
0x4000f11	          0x4889c2	                            mov rdx, rax	       242	elf.c	FUNCTION_13	CALL_2
0x4000f14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       242	elf.c	FUNCTION_13	CALL_2
0x4000f18	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       242	elf.c	FUNCTION_13	CALL_2
0x4000f1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	elf.c	FUNCTION_13	IF_1
0x4000f23	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       243	elf.c	FUNCTION_13	IF_1
0x4000f2a	          0x4885c0	                           test rax, rax	       243	elf.c	FUNCTION_13	IF_1
0x4000f2d	            0x750a	                           jne 0x4000f39	       243	elf.c	FUNCTION_13	IF_1
0x4000f2f	      0xb800000000	                              mov eax, 0	       244	elf.c	FUNCTION_13	IF_1
0x4000f34	      0xe98f000000	                           jmp 0x4000fc8	       244	elf.c	FUNCTION_13	IF_1
0x4000f39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	elf.c	FUNCTION_13	CALL_3
0x4000f3d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       246	elf.c	FUNCTION_13	CALL_3
0x4000f44	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       246	elf.c	FUNCTION_13	CALL_3
0x4000f47	          0x83e23f	                           and edx, 0x3f	       246	elf.c	FUNCTION_13	CALL_3
0x4000f4a	            0x89d1	                            mov ecx, edx	       246	elf.c	FUNCTION_13	CALL_3
0x4000f4c	          0x83e13f	                           and ecx, 0x3f	       246	elf.c	FUNCTION_13	CALL_3
0x4000f4f	     0xfb6908c0c00	          movzx edx, byte [rax + 0xc8c] 	       246	elf.c	FUNCTION_13	CALL_3
0x4000f56	          0x83e2c0	                     and edx, 0xffffffc0	       246	elf.c	FUNCTION_13	CALL_3
0x4000f59	             0x9ca	                             or edx, ecx	       246	elf.c	FUNCTION_13	CALL_3
0x4000f5b	    0x88908c0c0000	              mov byte [rax + 0xc8c], dl	       246	elf.c	FUNCTION_13	CALL_3
0x4000f61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	elf.c	FUNCTION_13	IF_2
0x4000f65	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       247	elf.c	FUNCTION_13	IF_2
0x4000f69	          0x83e018	                           and eax, 0x18	       247	elf.c	FUNCTION_13	IF_2
0x4000f6c	            0x3c08	                               cmp al, 8	       247	elf.c	FUNCTION_13	IF_2
0x4000f6e	            0x7453	                            je 0x4000fc3	       247	elf.c	FUNCTION_13	IF_2
0x4000f70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4000f74	      0xbe60000000	                           mov esi, 0x60	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4000f79	          0x4889c7	                            mov rdi, rax	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4000f7c	      0xe800000000	                          call 0x4000f81	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4000f81	        0x488945f8	                mov qword [rbp - 8], rax	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4000f85	      0x48837df800	                  cmp qword [rbp - 8], 0	       250	elf.c	FUNCTION_13	IF_2	IF_3
0x4000f8a	            0x7507	                           jne 0x4000f93	       250	elf.c	FUNCTION_13	IF_2	IF_3
0x4000f8c	      0xb800000000	                              mov eax, 0	       251	elf.c	FUNCTION_13	IF_2	IF_3
0x4000f91	            0xeb35	                           jmp 0x4000fc8	       251	elf.c	FUNCTION_13	IF_2	IF_3
0x4000f93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x4000f97	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x4000f9e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x4000fa2	    0x488990980c00	            mov qword [rax + 0xc98], rdx	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x4000fa9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x4000fad	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x4000fb4	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x4000fbb	    0x48c74038ffff	mov qword [rax + 0x38], 0xffffffffffffffff	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x4000fc3	      0xb801000000	                              mov eax, 1	       255	elf.c	FUNCTION_13
0x4000fc8	              0xc9	                                   leave	       256	elf.c	FUNCTION_13
0x4000fc9	              0xc3	                                     ret	       256	elf.c	FUNCTION_13
_bfd_elf_make_section_from_phdr	ELSE,0:DO,0:CALL,12:WHILE,0:FOR,0:IF,14:SWITCH,0:functions,0	291
0x40073df	              0x55	                                push rbp	      2907	elf.c	FUNCTION_42
0x40073e0	          0x4889e5	                            mov rbp, rsp	      2907	elf.c	FUNCTION_42
0x40073e3	    0x4881eca00000	                           sub rsp, 0xa0	      2907	elf.c	FUNCTION_42
0x40073ea	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      2907	elf.c	FUNCTION_42
0x40073f1	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      2907	elf.c	FUNCTION_42
0x40073f8	    0x89956cffffff	             mov dword [rbp - 0x94], edx	      2907	elf.c	FUNCTION_42
0x40073fe	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	      2907	elf.c	FUNCTION_42
0x4007405	    0x64488b042528	                mov rax, qword fs:[0x28]	      2907	elf.c	FUNCTION_42
0x400740e	        0x488945f8	                mov qword [rbp - 8], rax	      2907	elf.c	FUNCTION_42
0x4007412	            0x31c0	                            xor eax, eax	      2907	elf.c	FUNCTION_42
0x4007414	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2914	elf.c	FUNCTION_42
0x400741b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2914	elf.c	FUNCTION_42
0x400741f	          0x4885c0	                           test rax, rax	      2916	elf.c	FUNCTION_42
0x4007422	            0x7432	                            je 0x4007456	      2916	elf.c	FUNCTION_42
0x4007424	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2915	elf.c	FUNCTION_42
0x400742b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2915	elf.c	FUNCTION_42
0x400742f	          0x4885c0	                           test rax, rax	      2915	elf.c	FUNCTION_42
0x4007432	            0x7422	                            je 0x4007456	      2915	elf.c	FUNCTION_42
0x4007434	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2916	elf.c	FUNCTION_42
0x400743b	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2916	elf.c	FUNCTION_42
0x400743f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2916	elf.c	FUNCTION_42
0x4007446	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2916	elf.c	FUNCTION_42
0x400744a	          0x4839c2	                            cmp rdx, rax	      2916	elf.c	FUNCTION_42
0x400744d	            0x7607	                           jbe 0x4007456	      2916	elf.c	FUNCTION_42
0x400744f	      0xb801000000	                              mov eax, 1	      2916	elf.c	FUNCTION_42
0x4007454	            0xeb05	                           jmp 0x400745b	      2916	elf.c	FUNCTION_42
0x4007456	      0xb800000000	                              mov eax, 0	      2916	elf.c	FUNCTION_42
0x400745b	          0x89458c	             mov dword [rbp - 0x74], eax	      2914	elf.c	FUNCTION_42
0x400745e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2918	elf.c	FUNCTION_42	IF_1
0x4007465	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2918	elf.c	FUNCTION_42	IF_1
0x4007469	          0x4885c0	                           test rax, rax	      2918	elf.c	FUNCTION_42	IF_1
0x400746c	     0xf84bc010000	                            je 0x400762e	      2918	elf.c	FUNCTION_42	IF_1
0x4007472	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x4007476	            0x7407	                            je 0x400747f	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x4007478	      0xbe00000000	                              mov esi, 0	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x400747d	            0xeb05	                           jmp 0x4007484	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x400747f	      0xbe00000000	                              mov esi, 0	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x4007484	    0x8b8d6cffffff	             mov ecx, dword [rbp - 0x94]	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x400748a	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x4007491	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x4007495	          0x4989f0	                             mov r8, rsi	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x4007498	      0xbe00000000	                              mov esi, 0	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x400749d	          0x4889c7	                            mov rdi, rax	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x40074a0	      0xb800000000	                              mov eax, 0	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x40074a5	      0xe800000000	                          call 0x40074aa	      2920	elf.c	FUNCTION_42	IF_1	CALL_1
0x40074aa	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2921	elf.c	FUNCTION_42	IF_1	CALL_2
0x40074ae	          0x4889c7	                            mov rdi, rax	      2921	elf.c	FUNCTION_42	IF_1	CALL_2
0x40074b1	      0xe800000000	                          call 0x40074b6	      2921	elf.c	FUNCTION_42	IF_1	CALL_2
0x40074b6	        0x4883c001	                              add rax, 1	      2921	elf.c	FUNCTION_42	IF_1	CALL_2
0x40074ba	        0x48894598	             mov qword [rbp - 0x68], rax	      2921	elf.c	FUNCTION_42	IF_1	CALL_2
0x40074be	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2922	elf.c	FUNCTION_42	IF_1	CALL_3
0x40074c2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2922	elf.c	FUNCTION_42	IF_1	CALL_3
0x40074c9	          0x4889d6	                            mov rsi, rdx	      2922	elf.c	FUNCTION_42	IF_1	CALL_3
0x40074cc	          0x4889c7	                            mov rdi, rax	      2922	elf.c	FUNCTION_42	IF_1	CALL_3
0x40074cf	      0xe800000000	                          call 0x40074d4	      2922	elf.c	FUNCTION_42	IF_1	CALL_3
0x40074d4	        0x488945a0	             mov qword [rbp - 0x60], rax	      2922	elf.c	FUNCTION_42	IF_1	CALL_3
0x40074d8	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x40074dd	            0x750a	                           jne 0x40074e9	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x40074df	      0xb800000000	                              mov eax, 0	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x40074e4	      0xe98f030000	                           jmp 0x4007878	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x40074e9	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2925	elf.c	FUNCTION_42	IF_1	CALL_4
0x40074ed	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2925	elf.c	FUNCTION_42	IF_1	CALL_4
0x40074f1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2925	elf.c	FUNCTION_42	IF_1	CALL_4
0x40074f5	          0x4889ce	                            mov rsi, rcx	      2925	elf.c	FUNCTION_42	IF_1	CALL_4
0x40074f8	          0x4889c7	                            mov rdi, rax	      2925	elf.c	FUNCTION_42	IF_1	CALL_4
0x40074fb	      0xe800000000	                          call 0x4007500	      2925	elf.c	FUNCTION_42	IF_1	CALL_4
0x4007500	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2926	elf.c	FUNCTION_42	IF_1	CALL_5
0x4007504	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2926	elf.c	FUNCTION_42	IF_1	CALL_5
0x400750b	          0x4889d6	                            mov rsi, rdx	      2926	elf.c	FUNCTION_42	IF_1	CALL_5
0x400750e	          0x4889c7	                            mov rdi, rax	      2926	elf.c	FUNCTION_42	IF_1	CALL_5
0x4007511	      0xe800000000	                          call 0x4007516	      2926	elf.c	FUNCTION_42	IF_1	CALL_5
0x4007516	        0x488945a8	             mov qword [rbp - 0x58], rax	      2926	elf.c	FUNCTION_42	IF_1	CALL_5
0x400751a	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x400751f	            0x750a	                           jne 0x400752b	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x4007521	      0xb800000000	                              mov eax, 0	      2928	elf.c	FUNCTION_42	IF_1	IF_3
0x4007526	      0xe94d030000	                           jmp 0x4007878	      2928	elf.c	FUNCTION_42	IF_1	IF_3
0x400752b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2929	elf.c	FUNCTION_42	IF_1
0x4007532	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2929	elf.c	FUNCTION_42	IF_1
0x4007536	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2929	elf.c	FUNCTION_42	IF_1
0x400753a	        0x48895028	             mov qword [rax + 0x28], rdx	      2929	elf.c	FUNCTION_42	IF_1
0x400753e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2930	elf.c	FUNCTION_42	IF_1
0x4007545	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2930	elf.c	FUNCTION_42	IF_1
0x4007549	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2930	elf.c	FUNCTION_42	IF_1
0x400754d	        0x48895030	             mov qword [rax + 0x30], rdx	      2930	elf.c	FUNCTION_42	IF_1
0x4007551	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2931	elf.c	FUNCTION_42	IF_1
0x4007558	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2931	elf.c	FUNCTION_42	IF_1
0x400755c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2931	elf.c	FUNCTION_42	IF_1
0x4007560	        0x48895038	             mov qword [rax + 0x38], rdx	      2931	elf.c	FUNCTION_42	IF_1
0x4007564	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2932	elf.c	FUNCTION_42	IF_1
0x400756b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2932	elf.c	FUNCTION_42	IF_1
0x400756f	          0x4889c2	                            mov rdx, rax	      2932	elf.c	FUNCTION_42	IF_1
0x4007572	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2932	elf.c	FUNCTION_42	IF_1
0x4007576	    0x488990900000	             mov qword [rax + 0x90], rdx	      2932	elf.c	FUNCTION_42	IF_1
0x400757d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2933	elf.c	FUNCTION_42	IF_1
0x4007581	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2933	elf.c	FUNCTION_42	IF_1
0x4007584	          0x80cc01	                                or ah, 1	      2933	elf.c	FUNCTION_42	IF_1
0x4007587	            0x89c2	                            mov edx, eax	      2933	elf.c	FUNCTION_42	IF_1
0x4007589	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2933	elf.c	FUNCTION_42	IF_1
0x400758d	          0x895020	             mov dword [rax + 0x20], edx	      2933	elf.c	FUNCTION_42	IF_1
0x4007590	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2934	elf.c	FUNCTION_42	IF_1	CALL_6
0x4007597	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2934	elf.c	FUNCTION_42	IF_1	CALL_6
0x400759b	          0x4889c7	                            mov rdi, rax	      2934	elf.c	FUNCTION_42	IF_1	CALL_6
0x400759e	      0xe800000000	                          call 0x40075a3	      2934	elf.c	FUNCTION_42	IF_1	CALL_6
0x40075a3	            0x89c2	                            mov edx, eax	      2934	elf.c	FUNCTION_42	IF_1	CALL_6
0x40075a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2934	elf.c	FUNCTION_42	IF_1	CALL_6
0x40075a9	          0x895070	             mov dword [rax + 0x70], edx	      2934	elf.c	FUNCTION_42	IF_1	CALL_6
0x40075ac	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x40075b3	          0x488b00	                    mov rax, qword [rax]	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x40075b6	        0x4883f801	                              cmp rax, 1	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x40075ba	            0x754c	                           jne 0x4007608	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x40075bc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x40075c0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x40075c3	          0x83c801	                               or eax, 1	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x40075c6	            0x89c2	                            mov edx, eax	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x40075c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x40075cc	          0x895020	             mov dword [rax + 0x20], edx	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x40075cf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x40075d3	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x40075d6	          0x83c802	                               or eax, 2	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x40075d9	            0x89c2	                            mov edx, eax	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x40075db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x40075df	          0x895020	             mov dword [rax + 0x20], edx	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x40075e2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075e9	        0x488b4008	                mov rax, qword [rax + 8]	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075ed	          0x83e001	                              and eax, 1	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075f0	          0x4885c0	                           test rax, rax	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075f3	            0x7413	                            je 0x4007608	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075f9	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075fc	          0x83c810	                            or eax, 0x10	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x40075ff	            0x89c2	                            mov edx, eax	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4007601	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4007605	          0x895020	             mov dword [rax + 0x20], edx	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4007608	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x400760f	        0x488b4008	                mov rax, qword [rax + 8]	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x4007613	          0x83e002	                              and eax, 2	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x4007616	          0x4885c0	                           test rax, rax	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x4007619	            0x7513	                           jne 0x400762e	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x400761b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x400761f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4007622	          0x83c808	                               or eax, 8	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4007625	            0x89c2	                            mov edx, eax	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4007627	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x400762b	          0x895020	             mov dword [rax + 0x20], edx	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x400762e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2952	elf.c	FUNCTION_42	IF_7
0x4007635	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2952	elf.c	FUNCTION_42	IF_7
0x4007639	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2952	elf.c	FUNCTION_42	IF_7
0x4007640	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2952	elf.c	FUNCTION_42	IF_7
0x4007644	          0x4839c2	                            cmp rdx, rax	      2952	elf.c	FUNCTION_42	IF_7
0x4007647	     0xf8626020000	                           jbe 0x4007873	      2952	elf.c	FUNCTION_42	IF_7
0x400764d	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007651	            0x7407	                            je 0x400765a	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007653	      0xbe00000000	                              mov esi, 0	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007658	            0xeb05	                           jmp 0x400765f	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x400765a	      0xbe00000000	                              mov esi, 0	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x400765f	    0x8b8d6cffffff	             mov ecx, dword [rbp - 0x94]	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007665	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x400766c	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007670	          0x4989f0	                             mov r8, rsi	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007673	      0xbe00000000	                              mov esi, 0	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007678	          0x4889c7	                            mov rdi, rax	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x400767b	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007680	      0xe800000000	                          call 0x4007685	      2956	elf.c	FUNCTION_42	IF_7	CALL_7
0x4007685	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2957	elf.c	FUNCTION_42	IF_7	CALL_8
0x4007689	          0x4889c7	                            mov rdi, rax	      2957	elf.c	FUNCTION_42	IF_7	CALL_8
0x400768c	      0xe800000000	                          call 0x4007691	      2957	elf.c	FUNCTION_42	IF_7	CALL_8
0x4007691	        0x4883c001	                              add rax, 1	      2957	elf.c	FUNCTION_42	IF_7	CALL_8
0x4007695	        0x48894598	             mov qword [rbp - 0x68], rax	      2957	elf.c	FUNCTION_42	IF_7	CALL_8
0x4007699	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2958	elf.c	FUNCTION_42	IF_7	CALL_9
0x400769d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2958	elf.c	FUNCTION_42	IF_7	CALL_9
0x40076a4	          0x4889d6	                            mov rsi, rdx	      2958	elf.c	FUNCTION_42	IF_7	CALL_9
0x40076a7	          0x4889c7	                            mov rdi, rax	      2958	elf.c	FUNCTION_42	IF_7	CALL_9
0x40076aa	      0xe800000000	                          call 0x40076af	      2958	elf.c	FUNCTION_42	IF_7	CALL_9
0x40076af	        0x488945a0	             mov qword [rbp - 0x60], rax	      2958	elf.c	FUNCTION_42	IF_7	CALL_9
0x40076b3	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x40076b8	            0x750a	                           jne 0x40076c4	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x40076ba	      0xb800000000	                              mov eax, 0	      2960	elf.c	FUNCTION_42	IF_7	IF_8
0x40076bf	      0xe9b4010000	                           jmp 0x4007878	      2960	elf.c	FUNCTION_42	IF_7	IF_8
0x40076c4	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2961	elf.c	FUNCTION_42	IF_7	CALL_10
0x40076c8	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2961	elf.c	FUNCTION_42	IF_7	CALL_10
0x40076cc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2961	elf.c	FUNCTION_42	IF_7	CALL_10
0x40076d0	          0x4889ce	                            mov rsi, rcx	      2961	elf.c	FUNCTION_42	IF_7	CALL_10
0x40076d3	          0x4889c7	                            mov rdi, rax	      2961	elf.c	FUNCTION_42	IF_7	CALL_10
0x40076d6	      0xe800000000	                          call 0x40076db	      2961	elf.c	FUNCTION_42	IF_7	CALL_10
0x40076db	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2962	elf.c	FUNCTION_42	IF_7	CALL_11
0x40076df	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2962	elf.c	FUNCTION_42	IF_7	CALL_11
0x40076e6	          0x4889d6	                            mov rsi, rdx	      2962	elf.c	FUNCTION_42	IF_7	CALL_11
0x40076e9	          0x4889c7	                            mov rdi, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_11
0x40076ec	      0xe800000000	                          call 0x40076f1	      2962	elf.c	FUNCTION_42	IF_7	CALL_11
0x40076f1	        0x488945a8	             mov qword [rbp - 0x58], rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_11
0x40076f5	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x40076fa	            0x750a	                           jne 0x4007706	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x40076fc	      0xb800000000	                              mov eax, 0	      2964	elf.c	FUNCTION_42	IF_7	IF_9
0x4007701	      0xe972010000	                           jmp 0x4007878	      2964	elf.c	FUNCTION_42	IF_7	IF_9
0x4007706	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2965	elf.c	FUNCTION_42	IF_7
0x400770d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2965	elf.c	FUNCTION_42	IF_7
0x4007711	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2965	elf.c	FUNCTION_42	IF_7
0x4007718	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2965	elf.c	FUNCTION_42	IF_7
0x400771c	          0x4801c2	                            add rdx, rax	      2965	elf.c	FUNCTION_42	IF_7
0x400771f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2965	elf.c	FUNCTION_42	IF_7
0x4007723	        0x48895028	             mov qword [rax + 0x28], rdx	      2965	elf.c	FUNCTION_42	IF_7
0x4007727	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2966	elf.c	FUNCTION_42	IF_7
0x400772e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2966	elf.c	FUNCTION_42	IF_7
0x4007732	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2966	elf.c	FUNCTION_42	IF_7
0x4007739	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2966	elf.c	FUNCTION_42	IF_7
0x400773d	          0x4801c2	                            add rdx, rax	      2966	elf.c	FUNCTION_42	IF_7
0x4007740	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2966	elf.c	FUNCTION_42	IF_7
0x4007744	        0x48895030	             mov qword [rax + 0x30], rdx	      2966	elf.c	FUNCTION_42	IF_7
0x4007748	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2967	elf.c	FUNCTION_42	IF_7
0x400774f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2967	elf.c	FUNCTION_42	IF_7
0x4007753	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2967	elf.c	FUNCTION_42	IF_7
0x400775a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2967	elf.c	FUNCTION_42	IF_7
0x400775e	          0x4829c2	                            sub rdx, rax	      2967	elf.c	FUNCTION_42	IF_7
0x4007761	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2967	elf.c	FUNCTION_42	IF_7
0x4007765	        0x48895038	             mov qword [rax + 0x38], rdx	      2967	elf.c	FUNCTION_42	IF_7
0x4007769	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2968	elf.c	FUNCTION_42	IF_7
0x4007770	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2968	elf.c	FUNCTION_42	IF_7
0x4007774	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2968	elf.c	FUNCTION_42	IF_7
0x400777b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2968	elf.c	FUNCTION_42	IF_7
0x400777f	          0x4801d0	                            add rax, rdx	      2968	elf.c	FUNCTION_42	IF_7
0x4007782	          0x4889c2	                            mov rdx, rax	      2968	elf.c	FUNCTION_42	IF_7
0x4007785	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2968	elf.c	FUNCTION_42	IF_7
0x4007789	    0x488990900000	             mov qword [rax + 0x90], rdx	      2968	elf.c	FUNCTION_42	IF_7
0x4007790	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2969	elf.c	FUNCTION_42	IF_7
0x4007794	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2969	elf.c	FUNCTION_42	IF_7
0x4007798	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2969	elf.c	FUNCTION_42	IF_7
0x400779c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2969	elf.c	FUNCTION_42	IF_7
0x40077a0	          0x48f7d8	                                 neg rax	      2969	elf.c	FUNCTION_42	IF_7
0x40077a3	          0x4821d0	                            and rax, rdx	      2969	elf.c	FUNCTION_42	IF_7
0x40077a6	        0x48894590	             mov qword [rbp - 0x70], rax	      2969	elf.c	FUNCTION_42	IF_7
0x40077aa	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40077af	            0x7411	                            je 0x40077c2	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40077b1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40077b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40077bc	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40077c0	            0x730f	                           jae 0x40077d1	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40077c2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2971	elf.c	FUNCTION_42	IF_7	IF_10
0x40077c9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2971	elf.c	FUNCTION_42	IF_7	IF_10
0x40077cd	        0x48894590	             mov qword [rbp - 0x70], rax	      2971	elf.c	FUNCTION_42	IF_7	IF_10
0x40077d1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2972	elf.c	FUNCTION_42	IF_7	CALL_12
0x40077d5	          0x4889c7	                            mov rdi, rax	      2972	elf.c	FUNCTION_42	IF_7	CALL_12
0x40077d8	      0xe800000000	                          call 0x40077dd	      2972	elf.c	FUNCTION_42	IF_7	CALL_12
0x40077dd	            0x89c2	                            mov edx, eax	      2972	elf.c	FUNCTION_42	IF_7	CALL_12
0x40077df	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2972	elf.c	FUNCTION_42	IF_7	CALL_12
0x40077e3	          0x895070	             mov dword [rax + 0x70], edx	      2972	elf.c	FUNCTION_42	IF_7	CALL_12
0x40077e6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40077ed	          0x488b00	                    mov rax, qword [rax]	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40077f0	        0x4883f801	                              cmp rax, 1	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40077f4	            0x7557	                           jne 0x400784d	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40077f6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40077fd	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x4007801	          0x83e007	                              and eax, 7	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x4007804	            0x3c03	                               cmp al, 3	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x4007806	            0x750c	                           jne 0x4007814	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x4007808	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2982	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x400780c	    0x48c740380000	               mov qword [rax + 0x38], 0	      2982	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x4007814	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4007818	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x400781b	          0x83c801	                               or eax, 1	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x400781e	            0x89c2	                            mov edx, eax	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4007820	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4007824	          0x895020	             mov dword [rax + 0x20], edx	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4007827	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x400782e	        0x488b4008	                mov rax, qword [rax + 8]	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4007832	          0x83e001	                              and eax, 1	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4007835	          0x4885c0	                           test rax, rax	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4007838	            0x7413	                            je 0x400784d	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x400783a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x400783e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4007841	          0x83c810	                            or eax, 0x10	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4007844	            0x89c2	                            mov edx, eax	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4007846	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x400784a	          0x895020	             mov dword [rax + 0x20], edx	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x400784d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x4007854	        0x488b4008	                mov rax, qword [rax + 8]	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x4007858	          0x83e002	                              and eax, 2	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x400785b	          0x4885c0	                           test rax, rax	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x400785e	            0x7513	                           jne 0x4007873	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x4007860	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4007864	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4007867	          0x83c808	                               or eax, 8	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x400786a	            0x89c2	                            mov edx, eax	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x400786c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4007870	          0x895020	             mov dword [rax + 0x20], edx	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4007873	      0xb801000000	                              mov eax, 1	      2991	elf.c	FUNCTION_42
0x4007878	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2992	elf.c	FUNCTION_42
0x400787c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2992	elf.c	FUNCTION_42
0x4007885	            0x7405	                            je 0x400788c	      2992	elf.c	FUNCTION_42
0x4007887	      0xe800000000	                          call 0x400788c	      2992	elf.c	FUNCTION_42
0x400788c	              0xc9	                                   leave	      2992	elf.c	FUNCTION_42
0x400788d	              0xc3	                                     ret	      2992	elf.c	FUNCTION_42
_bfd_elf_get_lineno	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	9
0x4015f33	              0x55	                                push rbp	      8714	elf.c	FUNCTION_101
0x4015f34	          0x4889e5	                            mov rbp, rsp	      8714	elf.c	FUNCTION_101
0x4015f37	        0x4883ec10	                           sub rsp, 0x10	      8714	elf.c	FUNCTION_101
0x4015f3b	        0x48897df8	                mov qword [rbp - 8], rdi	      8714	elf.c	FUNCTION_101
0x4015f3f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8714	elf.c	FUNCTION_101
0x4015f43	      0xba00000000	                              mov edx, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x4015f48	      0xbe0b220000	                         mov esi, 0x220b	      8715	elf.c	FUNCTION_101	CALL_1
0x4015f4d	      0xbf00000000	                              mov edi, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x4015f52	      0xe800000000	         call sym._bfd_elf_set_arch_mach	      8715	elf.c	FUNCTION_101	CALL_1
_bfd_elf_is_local_label_name	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,1:IF,7:SWITCH,0:functions,0	101
0x4015ddd	              0x55	                                push rbp	      8648	elf.c	FUNCTION_100
0x4015dde	          0x4889e5	                            mov rbp, rsp	      8648	elf.c	FUNCTION_100
0x4015de1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8648	elf.c	FUNCTION_100
0x4015de5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8648	elf.c	FUNCTION_100
0x4015de9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8650	elf.c	FUNCTION_100	IF_1
0x4015ded	           0xfb600	                   movzx eax, byte [rax]	      8650	elf.c	FUNCTION_100	IF_1
0x4015df0	            0x3c2e	                            cmp al, 0x2e	      8650	elf.c	FUNCTION_100	IF_1
0x4015df2	            0x7519	                           jne 0x4015e0d	      8650	elf.c	FUNCTION_100	IF_1
0x4015df4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8650	elf.c	FUNCTION_100	IF_1
0x4015df8	        0x4883c001	                              add rax, 1	      8650	elf.c	FUNCTION_100	IF_1
0x4015dfc	           0xfb600	                   movzx eax, byte [rax]	      8650	elf.c	FUNCTION_100	IF_1
0x4015dff	            0x3c4c	                            cmp al, 0x4c	      8650	elf.c	FUNCTION_100	IF_1
0x4015e01	            0x750a	                           jne 0x4015e0d	      8650	elf.c	FUNCTION_100	IF_1
0x4015e03	      0xb801000000	                              mov eax, 1	      8651	elf.c	FUNCTION_100	IF_1
0x4015e08	      0xe924010000	                           jmp 0x4015f31	      8651	elf.c	FUNCTION_100	IF_1
0x4015e0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8655	elf.c	FUNCTION_100	IF_2
0x4015e11	           0xfb600	                   movzx eax, byte [rax]	      8655	elf.c	FUNCTION_100	IF_2
0x4015e14	            0x3c2e	                            cmp al, 0x2e	      8655	elf.c	FUNCTION_100	IF_2
0x4015e16	            0x7519	                           jne 0x4015e31	      8655	elf.c	FUNCTION_100	IF_2
0x4015e18	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8655	elf.c	FUNCTION_100	IF_2
0x4015e1c	        0x4883c001	                              add rax, 1	      8655	elf.c	FUNCTION_100	IF_2
0x4015e20	           0xfb600	                   movzx eax, byte [rax]	      8655	elf.c	FUNCTION_100	IF_2
0x4015e23	            0x3c2e	                            cmp al, 0x2e	      8655	elf.c	FUNCTION_100	IF_2
0x4015e25	            0x750a	                           jne 0x4015e31	      8655	elf.c	FUNCTION_100	IF_2
0x4015e27	      0xb801000000	                              mov eax, 1	      8656	elf.c	FUNCTION_100	IF_2
0x4015e2c	      0xe900010000	                           jmp 0x4015f31	      8656	elf.c	FUNCTION_100	IF_2
0x4015e31	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e35	           0xfb600	                   movzx eax, byte [rax]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e38	            0x3c5f	                            cmp al, 0x5f	      8664	elf.c	FUNCTION_100	IF_3
0x4015e3a	            0x7537	                           jne 0x4015e73	      8664	elf.c	FUNCTION_100	IF_3
0x4015e3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e40	        0x4883c001	                              add rax, 1	      8664	elf.c	FUNCTION_100	IF_3
0x4015e44	           0xfb600	                   movzx eax, byte [rax]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e47	            0x3c2e	                            cmp al, 0x2e	      8664	elf.c	FUNCTION_100	IF_3
0x4015e49	            0x7528	                           jne 0x4015e73	      8664	elf.c	FUNCTION_100	IF_3
0x4015e4b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e4f	        0x4883c002	                              add rax, 2	      8664	elf.c	FUNCTION_100	IF_3
0x4015e53	           0xfb600	                   movzx eax, byte [rax]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e56	            0x3c4c	                            cmp al, 0x4c	      8664	elf.c	FUNCTION_100	IF_3
0x4015e58	            0x7519	                           jne 0x4015e73	      8664	elf.c	FUNCTION_100	IF_3
0x4015e5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e5e	        0x4883c003	                              add rax, 3	      8664	elf.c	FUNCTION_100	IF_3
0x4015e62	           0xfb600	                   movzx eax, byte [rax]	      8664	elf.c	FUNCTION_100	IF_3
0x4015e65	            0x3c5f	                            cmp al, 0x5f	      8664	elf.c	FUNCTION_100	IF_3
0x4015e67	            0x750a	                           jne 0x4015e73	      8664	elf.c	FUNCTION_100	IF_3
0x4015e69	      0xb801000000	                              mov eax, 1	      8665	elf.c	FUNCTION_100	IF_3
0x4015e6e	      0xe9be000000	                           jmp 0x4015f31	      8665	elf.c	FUNCTION_100	IF_3
0x4015e73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e77	           0xfb600	                   movzx eax, byte [rax]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e7a	            0x3c4c	                            cmp al, 0x4c	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e7c	     0xf85aa000000	                           jne 0x4015f2c	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e86	        0x4883c001	                              add rax, 1	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e8a	           0xfb600	                   movzx eax, byte [rax]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e8d	           0xfbec0	                           movsx eax, al	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e90	           0xfb6c0	                           movzx eax, al	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e93	            0x4898	                                    cdqe	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e95	     0xfb784000000	             movzx eax, word [rax + rax]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015e9d	           0xfb7c0	                           movzx eax, ax	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015ea0	          0x83e004	                              and eax, 4	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015ea3	            0x85c0	                           test eax, eax	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015ea5	     0xf8481000000	                            je 0x4015f2c	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x4015eab	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8679	elf.c	FUNCTION_100	IF_4
0x4015eb2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015eb6	        0x4883c002	                              add rax, 2	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015eba	        0x488945f8	                mov qword [rbp - 8], rax	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015ebe	            0xeb57	                           jmp 0x4015f17	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015ec0	        0x807df301	                 cmp byte [rbp - 0xd], 1	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x4015ec4	            0x7406	                            je 0x4015ecc	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x4015ec6	        0x807df302	                 cmp byte [rbp - 0xd], 2	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x4015eca	            0x7522	                           jne 0x4015eee	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x4015ecc	        0x807df301	                 cmp byte [rbp - 0xd], 1	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015ed0	            0x7515	                           jne 0x4015ee7	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015ed2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015ed6	        0x4883c002	                              add rax, 2	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015eda	        0x483b45f8	                cmp rax, qword [rbp - 8]	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015ede	            0x7507	                           jne 0x4015ee7	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015ee0	      0xb801000000	                              mov eax, 1	      8689	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015ee5	            0xeb4a	                           jmp 0x4015f31	      8689	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x4015ee7	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8696	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x4015eee	         0xfbe45f3	             movsx eax, byte [rbp - 0xd]	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015ef2	           0xfb6c0	                           movzx eax, al	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015ef5	            0x4898	                                    cdqe	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015ef7	     0xfb784000000	             movzx eax, word [rax + rax]	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015eff	           0xfb7c0	                           movzx eax, ax	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015f02	          0x83e004	                              and eax, 4	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015f05	            0x85c0	                           test eax, eax	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015f07	            0x7509	                           jne 0x4015f12	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x4015f09	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8701	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7
0x4015f10	            0xeb15	                           jmp 0x4015f27	      8702	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7
0x4015f12	      0x488345f801	                  add qword [rbp - 8], 1	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015f17	        0x488b45f8	                mov rax, qword [rbp - 8]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015f1b	           0xfb600	                   movzx eax, byte [rax]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015f1e	          0x8845f3	                mov byte [rbp - 0xd], al	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015f21	        0x807df300	                 cmp byte [rbp - 0xd], 0	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015f25	            0x7599	                           jne 0x4015ec0	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x4015f27	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8705	elf.c	FUNCTION_100	IF_4
0x4015f2a	            0xeb05	                           jmp 0x4015f31	      8705	elf.c	FUNCTION_100	IF_4
0x4015f2c	      0xb800000000	                              mov eax, 0	      8708	elf.c	FUNCTION_100
0x4015f31	              0x5d	                                 pop rbp	      8709	elf.c	FUNCTION_100
0x4015f32	              0xc3	                                     ret	      8709	elf.c	FUNCTION_100
ignore_section_sym	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,3:SWITCH,0:functions,0	81
0x4009f56	              0x55	                                push rbp	      4036	elf.c	FUNCTION_55
0x4009f57	          0x4889e5	                            mov rbp, rsp	      4036	elf.c	FUNCTION_55
0x4009f5a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4036	elf.c	FUNCTION_55
0x4009f5e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4036	elf.c	FUNCTION_55
0x4009f62	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4039	elf.c	FUNCTION_55	IF_1
0x4009f67	            0x750a	                           jne 0x4009f73	      4039	elf.c	FUNCTION_55	IF_1
0x4009f69	      0xb800000000	                              mov eax, 0	      4040	elf.c	FUNCTION_55	IF_1
0x4009f6e	      0xe901010000	                           jmp 0x400a074	      4040	elf.c	FUNCTION_55	IF_1
0x4009f73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4042	elf.c	FUNCTION_55	IF_2
0x4009f77	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4042	elf.c	FUNCTION_55	IF_2
0x4009f7a	      0x2500010000	                          and eax, 0x100	      4042	elf.c	FUNCTION_55	IF_2
0x4009f7f	            0x85c0	                           test eax, eax	      4042	elf.c	FUNCTION_55	IF_2
0x4009f81	            0x750a	                           jne 0x4009f8d	      4042	elf.c	FUNCTION_55	IF_2
0x4009f83	      0xb800000000	                              mov eax, 0	      4043	elf.c	FUNCTION_55	IF_2
0x4009f88	      0xe9e7000000	                           jmp 0x400a074	      4043	elf.c	FUNCTION_55	IF_2
0x4009f8d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4045	elf.c	FUNCTION_55	IF_3
0x4009f91	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4045	elf.c	FUNCTION_55	IF_3
0x4009f95	          0x4885c0	                           test rax, rax	      4045	elf.c	FUNCTION_55	IF_3
0x4009f98	            0x750a	                           jne 0x4009fa4	      4045	elf.c	FUNCTION_55	IF_3
0x4009f9a	      0xb801000000	                              mov eax, 1	      4046	elf.c	FUNCTION_55	IF_3
0x4009f9f	      0xe9d0000000	                           jmp 0x400a074	      4046	elf.c	FUNCTION_55	IF_3
0x4009fa4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fa8	          0x488b00	                    mov rax, qword [rax]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fab	          0x4885c0	                           test rax, rax	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fae	            0x742c	                            je 0x4009fdc	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fb0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fb4	          0x488b00	                    mov rax, qword [rax]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fb7	        0x488b4008	                mov rax, qword [rax + 8]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fbb	          0x8b4008	                mov eax, dword [rax + 8]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fbe	          0x83f805	                              cmp eax, 5	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fc1	            0x7519	                           jne 0x4009fdc	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fc3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fc7	          0x488b00	                    mov rax, qword [rax]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fca	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fd1	          0x4885c0	                           test rax, rax	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fd4	            0x7406	                            je 0x4009fdc	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fd6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fda	            0xeb05	                           jmp 0x4009fe1	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fdc	      0xb800000000	                              mov eax, 0	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fe1	        0x488945f8	                mov qword [rbp - 8], rax	      4048	elf.c	FUNCTION_55	CALL_1
0x4009fe5	      0x48837df800	                  cmp qword [rbp - 8], 0	      4052	elf.c	FUNCTION_55
0x4009fea	            0x741b	                            je 0x400a007	      4052	elf.c	FUNCTION_55
0x4009fec	        0x488b45f8	                mov rax, qword [rbp - 8]	      4050	elf.c	FUNCTION_55
0x4009ff0	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      4050	elf.c	FUNCTION_55
0x4009ff3	            0x85c0	                           test eax, eax	      4050	elf.c	FUNCTION_55
0x4009ff5	            0x7410	                            je 0x400a007	      4050	elf.c	FUNCTION_55
0x4009ff7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4051	elf.c	FUNCTION_55
0x4009ffb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4051	elf.c	FUNCTION_55
0x4009fff	    0x483d00000000	                              cmp rax, 0	      4051	elf.c	FUNCTION_55
0x400a005	            0x7460	                            je 0x400a067	      4051	elf.c	FUNCTION_55
0x400a007	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4052	elf.c	FUNCTION_55
0x400a00b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4052	elf.c	FUNCTION_55
0x400a00f	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      4052	elf.c	FUNCTION_55
0x400a016	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4052	elf.c	FUNCTION_55
0x400a01a	            0x7452	                            je 0x400a06e	      4052	elf.c	FUNCTION_55
0x400a01c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4053	elf.c	FUNCTION_55
0x400a020	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4053	elf.c	FUNCTION_55
0x400a024	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4053	elf.c	FUNCTION_55
0x400a028	          0x4885c0	                           test rax, rax	      4053	elf.c	FUNCTION_55
0x400a02b	            0x742a	                            je 0x400a057	      4053	elf.c	FUNCTION_55
0x400a02d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4054	elf.c	FUNCTION_55
0x400a031	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4054	elf.c	FUNCTION_55
0x400a035	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4054	elf.c	FUNCTION_55
0x400a039	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      4054	elf.c	FUNCTION_55
0x400a040	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4054	elf.c	FUNCTION_55
0x400a044	            0x7511	                           jne 0x400a057	      4054	elf.c	FUNCTION_55
0x400a046	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4055	elf.c	FUNCTION_55
0x400a04a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4055	elf.c	FUNCTION_55
0x400a04e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4055	elf.c	FUNCTION_55
0x400a052	          0x4885c0	                           test rax, rax	      4055	elf.c	FUNCTION_55
0x400a055	            0x7417	                            je 0x400a06e	      4055	elf.c	FUNCTION_55
0x400a057	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4056	elf.c	FUNCTION_55
0x400a05b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4056	elf.c	FUNCTION_55
0x400a05f	    0x483d00000000	                              cmp rax, 0	      4052	elf.c	FUNCTION_55
0x400a065	            0x7407	                            je 0x400a06e	      4052	elf.c	FUNCTION_55
0x400a067	      0xb801000000	                              mov eax, 1	      4052	elf.c	FUNCTION_55
0x400a06c	            0xeb05	                           jmp 0x400a073	      4049	elf.c	FUNCTION_55
0x400a06e	      0xb800000000	                              mov eax, 0	      4052	elf.c	FUNCTION_55
0x400a073	              0x90	                                     nop	      4049	elf.c	FUNCTION_55
0x400a074	              0x5d	                                 pop rbp	      4057	elf.c	FUNCTION_55
0x400a075	              0xc3	                                     ret	      4057	elf.c	FUNCTION_55
assign_section_numbers	ELSE,5:DO,0:CALL,82:WHILE,0:FOR,3:IF,38:SWITCH,1:functions,0	871
0x4008e38	              0x55	                                push rbp	      3642	elf.c	FUNCTION_52
0x4008e39	          0x4889e5	                            mov rbp, rsp	      3642	elf.c	FUNCTION_52
0x4008e3c	            0x4154	                                push r12	      3642	elf.c	FUNCTION_52
0x4008e3e	              0x53	                                push rbx	      3642	elf.c	FUNCTION_52
0x4008e3f	    0x4881ec900000	                           sub rsp, 0x90	      3642	elf.c	FUNCTION_52
0x4008e46	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      3642	elf.c	FUNCTION_52
0x4008e4d	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      3642	elf.c	FUNCTION_52
0x4008e54	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3643	elf.c	FUNCTION_52	CALL_1
0x4008e5b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3643	elf.c	FUNCTION_52	CALL_1
0x4008e62	        0x48894590	             mov qword [rbp - 0x70], rax	      3643	elf.c	FUNCTION_52	CALL_1
0x4008e66	    0xc78570ffffff	               mov dword [rbp - 0x90], 1	      3650	elf.c	FUNCTION_52
0x4008e70	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3652	elf.c	FUNCTION_52	CALL_3
0x4008e77	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3652	elf.c	FUNCTION_52	CALL_3
0x4008e7e	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3652	elf.c	FUNCTION_52	CALL_3
0x4008e85	        0x488b4008	                mov rax, qword [rax + 8]	      3652	elf.c	FUNCTION_52	CALL_3
0x4008e89	          0x4889c7	                            mov rdi, rax	      3652	elf.c	FUNCTION_52	CALL_3
0x4008e8c	      0xe800000000	                          call 0x4008e91	      3652	elf.c	FUNCTION_52	CALL_3
0x4008e91	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      3655	elf.c	FUNCTION_52	IF_1
0x4008e99	            0x7416	                            je 0x4008eb1	      3655	elf.c	FUNCTION_52	IF_1
0x4008e9b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3655	elf.c	FUNCTION_52	IF_1
0x4008ea2	         0xfb64001	               movzx eax, byte [rax + 1]	      3655	elf.c	FUNCTION_52	IF_1
0x4008ea6	          0x83e010	                           and eax, 0x10	      3655	elf.c	FUNCTION_52	IF_1
0x4008ea9	            0x84c0	                             test al, al	      3655	elf.c	FUNCTION_52	IF_1
0x4008eab	     0xf8579010000	                           jne 0x400902a	      3655	elf.c	FUNCTION_52	IF_1
0x4008eb1	    0x48c745800000	               mov qword [rbp - 0x80], 0	      3657	elf.c	FUNCTION_52	IF_1
0x4008eb9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008ec0	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008ec7	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008ece	      0xe909010000	                           jmp 0x4008fdc	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008ed3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3662	elf.c	FUNCTION_52	IF_1	FOR_1	CALL_4
0x4008eda	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3662	elf.c	FUNCTION_52	IF_1	FOR_1	CALL_4
0x4008ee1	        0x48894598	             mov qword [rbp - 0x68], rax	      3662	elf.c	FUNCTION_52	IF_1	FOR_1	CALL_4
0x4008ee5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4008ee9	          0x8b4004	                mov eax, dword [rax + 4]	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4008eec	          0x83f811	                           cmp eax, 0x11	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4008eef	     0xf85c2000000	                           jne 0x4008fb7	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4008ef5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008efc	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008eff	      0x2500001000	                       and eax, 0x100000	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f04	            0x85c0	                           test eax, eax	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f06	     0xf8490000000	                            je 0x4008f9c	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f0c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f13	        0x488945a0	             mov qword [rbp - 0x60], rax	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f17	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f1b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f1f	        0x488945a8	             mov qword [rbp - 0x58], rax	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f23	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f27	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f2b	        0x488945b0	             mov qword [rbp - 0x50], rax	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f2f	      0x48837db000	               cmp qword [rbp - 0x50], 0	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f34	            0x740e	                            je 0x4008f44	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f36	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f3a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f3e	        0x48895010	             mov qword [rax + 0x10], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f42	            0xeb12	                           jmp 0x4008f56	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f44	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f4b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f4f	    0x488990900000	             mov qword [rax + 0x90], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f56	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f5b	            0x740e	                            je 0x4008f6b	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f5d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f61	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f65	        0x48895018	             mov qword [rax + 0x18], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f69	            0xeb12	                           jmp 0x4008f7d	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f6b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f72	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f76	    0x488990980000	             mov qword [rax + 0x98], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f7d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f84	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f8a	          0x8d50ff	                      lea edx, [rax - 1]	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f8d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f94	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f9a	            0xeb1b	                           jmp 0x4008fb7	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4008f9c	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4008fa2	          0x8d5001	                      lea edx, [rax + 1]	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4008fa5	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4008fab	            0x89c2	                            mov edx, eax	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4008fad	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4008fb1	    0x899088000000	             mov dword [rax + 0x88], edx	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4008fb7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fbe	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fc4	            0x89c0	                            mov eax, eax	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fc6	        0x48014580	            add qword [rbp - 0x80], rax 	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fca	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fd1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fd5	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fdc	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fe4	     0xf85e9feffff	                           jne 0x4008ed3	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4008fea	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x4008fef	            0x7539	                           jne 0x400902a	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x4008ff1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4008ff8	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4008ffb	          0xc1e805	                              shr eax, 5	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4008ffe	      0x25ffff0f00	                        and eax, 0xfffff	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4009003	      0x25feff0f00	                        and eax, 0xffffe	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4009008	            0x89c2	                            mov edx, eax	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x400900a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4009011	    0x81e2ffff0f00	                        and edx, 0xfffff	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4009017	            0x89d1	                            mov ecx, edx	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4009019	          0xc1e105	                              shl ecx, 5	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x400901c	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x400901f	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4009025	             0x9ca	                             or edx, ecx	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4009027	          0x895044	             mov dword [rax + 0x44], edx	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x400902a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3685	elf.c	FUNCTION_52	FOR_2
0x4009031	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3685	elf.c	FUNCTION_52	FOR_2
0x4009038	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3685	elf.c	FUNCTION_52	FOR_2
0x400903f	      0xe964010000	                           jmp 0x40091a8	      3685	elf.c	FUNCTION_52	FOR_2
0x4009044	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3687	elf.c	FUNCTION_52	FOR_2	CALL_5
0x400904b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3687	elf.c	FUNCTION_52	FOR_2	CALL_5
0x4009052	        0x48894598	             mov qword [rbp - 0x68], rax	      3687	elf.c	FUNCTION_52	FOR_2	CALL_5
0x4009056	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x400905a	          0x8b4004	                mov eax, dword [rax + 4]	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x400905d	          0x83f811	                           cmp eax, 0x11	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x4009060	            0x741b	                            je 0x400907d	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x4009062	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4009068	          0x8d5001	                      lea edx, [rax + 1]	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x400906b	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4009071	            0x89c2	                            mov edx, eax	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4009073	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4009077	    0x899088000000	             mov dword [rax + 0x88], edx	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x400907d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4009081	            0x8b00	                    mov eax, dword [rax]	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4009083	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4009086	            0x742c	                            je 0x40090b4	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4009088	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x400908c	            0x8b00	                    mov eax, dword [rax]	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x400908e	            0x89c2	                            mov edx, eax	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x4009090	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x4009097	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x400909e	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40090a5	        0x488b4008	                mov rax, qword [rax + 8]	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40090a9	          0x4889d6	                            mov rsi, rdx	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40090ac	          0x4889c7	                            mov rdi, rax	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40090af	      0xe800000000	                          call 0x40090b4	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40090b4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090b8	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090bc	          0x4885c0	                           test rax, rax	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090bf	            0x7459	                            je 0x400911a	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090c1	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090c7	          0x8d5001	                      lea edx, [rax + 1]	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090ca	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090d0	            0x89c2	                            mov edx, eax	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090d2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090d6	          0x895064	             mov dword [rax + 0x64], edx	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40090d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40090dd	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40090e1	            0x8b00	                    mov eax, dword [rax]	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40090e3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40090e6	            0x743d	                            je 0x4009125	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40090e8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x40090ec	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x40090f0	            0x8b00	                    mov eax, dword [rax]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x40090f2	            0x89c2	                            mov edx, eax	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x40090f4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x40090fb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4009102	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4009109	        0x488b4008	                mov rax, qword [rax + 8]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x400910d	          0x4889d6	                            mov rsi, rdx	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4009110	          0x4889c7	                            mov rdi, rax	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4009113	      0xe800000000	                          call 0x4009118	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4009118	            0xeb0b	                           jmp 0x4009125	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x400911a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x400911e	    0xc74064000000	               mov dword [rax + 0x64], 0	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x4009125	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4009129	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x400912d	          0x4885c0	                           test rax, rax	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4009130	            0x7459	                            je 0x400918b	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4009132	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4009138	          0x8d5001	                      lea edx, [rax + 1]	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x400913b	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4009141	            0x89c2	                            mov edx, eax	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4009143	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4009147	          0x89507c	             mov dword [rax + 0x7c], edx	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x400914a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x400914e	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4009152	            0x8b00	                    mov eax, dword [rax]	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4009154	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4009157	            0x743d	                            je 0x4009196	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4009159	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x400915d	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4009161	            0x8b00	                    mov eax, dword [rax]	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4009163	            0x89c2	                            mov edx, eax	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4009165	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x400916c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4009173	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x400917a	        0x488b4008	                mov rax, qword [rax + 8]	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x400917e	          0x4889d6	                            mov rsi, rdx	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4009181	          0x4889c7	                            mov rdi, rax	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4009184	      0xe800000000	                          call 0x4009189	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4009189	            0xeb0b	                           jmp 0x4009196	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x400918b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x400918f	    0xc7407c000000	               mov dword [rax + 0x7c], 0	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x4009196	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3685	elf.c	FUNCTION_52	FOR_2
0x400919d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3685	elf.c	FUNCTION_52	FOR_2
0x40091a1	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3685	elf.c	FUNCTION_52	FOR_2
0x40091a8	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3685	elf.c	FUNCTION_52	FOR_2
0x40091b0	     0xf858efeffff	                           jne 0x4009044	      3685	elf.c	FUNCTION_52	FOR_2
0x40091b6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3712	elf.c	FUNCTION_52
0x40091bd	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3712	elf.c	FUNCTION_52
0x40091c3	            0x85c0	                           test eax, eax	      3713	elf.c	FUNCTION_52
0x40091c5	            0x7524	                           jne 0x40091eb	      3713	elf.c	FUNCTION_52
0x40091c7	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      3713	elf.c	FUNCTION_52
0x40091cf	            0x7521	                           jne 0x40091f2	      3713	elf.c	FUNCTION_52
0x40091d1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3714	elf.c	FUNCTION_52
0x40091d8	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3714	elf.c	FUNCTION_52
0x40091db	          0xc1e805	                              shr eax, 5	      3714	elf.c	FUNCTION_52
0x40091de	      0x25ffff0f00	                        and eax, 0xfffff	      3714	elf.c	FUNCTION_52
0x40091e3	          0x83e043	                           and eax, 0x43	      3714	elf.c	FUNCTION_52
0x40091e6	          0x83f801	                              cmp eax, 1	      3714	elf.c	FUNCTION_52
0x40091e9	            0x7507	                           jne 0x40091f2	      3714	elf.c	FUNCTION_52
0x40091eb	      0xb801000000	                              mov eax, 1	      3713	elf.c	FUNCTION_52
0x40091f0	            0xeb05	                           jmp 0x40091f7	      3713	elf.c	FUNCTION_52
0x40091f2	      0xb800000000	                              mov eax, 0	      3713	elf.c	FUNCTION_52
0x40091f7	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      3712	elf.c	FUNCTION_52
0x40091fd	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      3716	elf.c	FUNCTION_52	IF_11
0x4009204	     0xf846f010000	                            je 0x4009379	      3716	elf.c	FUNCTION_52	IF_11
0x400920a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x4009211	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x4009218	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x400921e	          0x8d4801	                      lea ecx, [rax + 1]	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x4009221	    0x898d70ffffff	             mov dword [rbp - 0x90], ecx	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x4009227	    0x8982780c0000	            mov dword [rdx + 0xc78], eax	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x400922d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x4009231	          0x8b4068	            mov eax, dword [rax + 0x68] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x4009234	            0x89c2	                            mov edx, eax	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x4009236	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x400923d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x4009244	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x400924b	        0x488b4008	                mov rax, qword [rax + 8]	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x400924f	          0x4889d6	                            mov rsi, rdx	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x4009252	          0x4889c7	                            mov rdi, rax	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x4009255	      0xe800000000	                          call 0x400925a	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x400925a	    0x81bd70ffffff	         cmp dword [rbp - 0x90], 0xfefe 	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x4009264	     0xf86b8000000	                           jbe 0x4009322	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x400926a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x4009271	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x4009278	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x400927f	          0x4885c0	                           test rax, rax	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x4009282	            0x740f	                            je 0x4009293	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x4009284	      0xbe8c0e0000	                          mov esi, 0xe8c	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x4009289	      0xbf00000000	                              mov edi, 0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x400928e	      0xe800000000	                          call 0x4009293	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x4009293	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x400929a	      0xbe60000000	                           mov esi, 0x60	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x400929f	          0x4889c7	                            mov rdi, rax	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x40092a2	      0xe800000000	                          call 0x40092a7	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x40092a7	        0x488945b8	             mov qword [rbp - 0x48], rax	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x40092ab	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40092b1	          0x8d5001	                      lea edx, [rax + 1]	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40092b4	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40092ba	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40092be	          0x894250	             mov dword [rdx + 0x50], eax	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40092c1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40092c8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40092cf	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40092d3	    0x488990e80200	            mov qword [rax + 0x2e8], rdx	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40092da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40092e1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40092e8	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40092ef	        0x488b4008	                mov rax, qword [rax + 8]	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40092f3	      0xba00000000	                              mov edx, 0	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40092f8	      0xbe00000000	                              mov esi, 0	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40092fd	          0x4889c7	                            mov rdi, rax	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4009300	      0xe800000000	                          call 0x4009305	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4009305	            0x89c2	                            mov edx, eax	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4009307	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x400930b	            0x8910	                    mov dword [rax], edx	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x400930d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4009311	            0x8b00	                    mov eax, dword [rax]	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4009313	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4009316	            0x750a	                           jne 0x4009322	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4009318	      0xb800000000	                              mov eax, 0	      3733	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x400931d	      0xe9670a0000	                           jmp 0x4009d89	      3733	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4009322	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4009329	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4009330	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4009337	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x400933d	          0x8d4801	                      lea ecx, [rax + 1]	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4009340	    0x898d70ffffff	             mov dword [rbp - 0x90], ecx	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4009346	          0x894250	             mov dword [rdx + 0x50], eax	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4009349	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x400934d	    0x8b8008010000	           mov eax, dword [rax + 0x108] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4009353	            0x89c2	                            mov edx, eax	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4009355	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x400935c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4009363	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x400936a	        0x488b4008	                mov rax, qword [rax + 8]	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x400936e	          0x4889d6	                            mov rsi, rdx	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4009371	          0x4889c7	                            mov rdi, rax	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4009374	      0xe800000000	                          call 0x4009379	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4009379	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3739	elf.c	FUNCTION_52	CALL_24
0x4009380	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3739	elf.c	FUNCTION_52	CALL_24
0x4009387	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      3739	elf.c	FUNCTION_52	CALL_24
0x400938e	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3739	elf.c	FUNCTION_52	CALL_24
0x4009394	          0x8d4801	                      lea ecx, [rax + 1]	      3739	elf.c	FUNCTION_52	CALL_24
0x4009397	    0x898d70ffffff	             mov dword [rbp - 0x90], ecx	      3739	elf.c	FUNCTION_52	CALL_24
0x400939d	          0x89424c	             mov dword [rdx + 0x4c], eax	      3739	elf.c	FUNCTION_52	CALL_24
0x40093a0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3740	elf.c	FUNCTION_52	CALL_26
0x40093a4	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3740	elf.c	FUNCTION_52	CALL_26
0x40093aa	            0x89c2	                            mov edx, eax	      3740	elf.c	FUNCTION_52	CALL_26
0x40093ac	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3740	elf.c	FUNCTION_52	CALL_26
0x40093b3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3740	elf.c	FUNCTION_52	CALL_26
0x40093ba	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3740	elf.c	FUNCTION_52	CALL_26
0x40093c1	        0x488b4008	                mov rax, qword [rax + 8]	      3740	elf.c	FUNCTION_52	CALL_26
0x40093c5	          0x4889d6	                            mov rsi, rdx	      3740	elf.c	FUNCTION_52	CALL_26
0x40093c8	          0x4889c7	                            mov rdi, rax	      3740	elf.c	FUNCTION_52	CALL_26
0x40093cb	      0xe800000000	                          call 0x40093d0	      3740	elf.c	FUNCTION_52	CALL_26
0x40093d0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3741	elf.c	FUNCTION_52	CALL_28
0x40093d7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3741	elf.c	FUNCTION_52	CALL_28
0x40093de	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3741	elf.c	FUNCTION_52	CALL_28
0x40093e5	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      3741	elf.c	FUNCTION_52	CALL_28
0x40093ec	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      3741	elf.c	FUNCTION_52	CALL_28
0x40093f3	          0x8b524c	            mov edx, dword [rdx + 0x4c] 	      3741	elf.c	FUNCTION_52	CALL_28
0x40093f6	          0x895050	             mov dword [rax + 0x50], edx	      3741	elf.c	FUNCTION_52	CALL_28
0x40093f9	    0x81bd70ffffff	     cmp dword [rbp - 0x90], 0xfffffeff 	      3743	elf.c	FUNCTION_52	IF_14
0x4009403	            0x7639	                           jbe 0x400943e	      3743	elf.c	FUNCTION_52	IF_14
0x4009405	      0xbe00000000	                              mov esi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x400940a	      0xbf00000000	                              mov edi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x400940f	      0xe800000000	                          call 0x4009414	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4009414	          0x4889c1	                            mov rcx, rax	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4009417	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x400941d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4009424	          0x4889c6	                            mov rsi, rax	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4009427	          0x4889cf	                            mov rdi, rcx	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x400942a	      0xb800000000	                              mov eax, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x400942f	      0xe800000000	                          call 0x4009434	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4009434	      0xb800000000	                              mov eax, 0	      3748	elf.c	FUNCTION_52	IF_14
0x4009439	      0xe94b090000	                           jmp 0x4009d89	      3748	elf.c	FUNCTION_52	IF_14
0x400943e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3751	elf.c	FUNCTION_52	CALL_31
0x4009445	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3751	elf.c	FUNCTION_52	CALL_31
0x400944c	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      3751	elf.c	FUNCTION_52	CALL_31
0x4009452	    0x8990fc020000	            mov dword [rax + 0x2fc], edx	      3751	elf.c	FUNCTION_52	CALL_31
0x4009458	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3752	elf.c	FUNCTION_52	CALL_32
0x400945f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3752	elf.c	FUNCTION_52	CALL_32
0x4009466	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      3752	elf.c	FUNCTION_52	CALL_32
0x400946c	          0x89504c	             mov dword [rax + 0x4c], edx	      3752	elf.c	FUNCTION_52	CALL_32
0x400946f	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      3756	elf.c	FUNCTION_52	CALL_33
0x4009475	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3756	elf.c	FUNCTION_52	CALL_33
0x400947c	      0xba08000000	                              mov edx, 8	      3756	elf.c	FUNCTION_52	CALL_33
0x4009481	          0x4889ce	                            mov rsi, rcx	      3756	elf.c	FUNCTION_52	CALL_33
0x4009484	          0x4889c7	                            mov rdi, rax	      3756	elf.c	FUNCTION_52	CALL_33
0x4009487	      0xe800000000	                          call 0x400948c	      3756	elf.c	FUNCTION_52	CALL_33
0x400948c	        0x488945c0	             mov qword [rbp - 0x40], rax	      3756	elf.c	FUNCTION_52	CALL_33
0x4009490	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3758	elf.c	FUNCTION_52	IF_15
0x4009495	            0x750a	                           jne 0x40094a1	      3758	elf.c	FUNCTION_52	IF_15
0x4009497	      0xb800000000	                              mov eax, 0	      3759	elf.c	FUNCTION_52	IF_15
0x400949c	      0xe9e8080000	                           jmp 0x4009d89	      3759	elf.c	FUNCTION_52	IF_15
0x40094a1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3761	elf.c	FUNCTION_52	CALL_34
0x40094a8	      0xbe50000000	                           mov esi, 0x50	      3761	elf.c	FUNCTION_52	CALL_34
0x40094ad	          0x4889c7	                            mov rdi, rax	      3761	elf.c	FUNCTION_52	CALL_34
0x40094b0	      0xe800000000	                          call 0x40094b5	      3761	elf.c	FUNCTION_52	CALL_34
0x40094b5	          0x4889c2	                            mov rdx, rax	      3761	elf.c	FUNCTION_52	CALL_34
0x40094b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3761	elf.c	FUNCTION_52	CALL_34
0x40094bc	          0x488910	                    mov qword [rax], rdx	      3761	elf.c	FUNCTION_52	CALL_34
0x40094bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3763	elf.c	FUNCTION_52	IF_16
0x40094c3	          0x488b00	                    mov rax, qword [rax]	      3763	elf.c	FUNCTION_52	IF_16
0x40094c6	          0x4885c0	                           test rax, rax	      3763	elf.c	FUNCTION_52	IF_16
0x40094c9	            0x7520	                           jne 0x40094eb	      3763	elf.c	FUNCTION_52	IF_16
0x40094cb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x40094cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x40094d6	          0x4889d6	                            mov rsi, rdx	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x40094d9	          0x4889c7	                            mov rdi, rax	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x40094dc	      0xe800000000	                          call 0x40094e1	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x40094e1	      0xb800000000	                              mov eax, 0	      3766	elf.c	FUNCTION_52	IF_16
0x40094e6	      0xe99e080000	                           jmp 0x4009d89	      3766	elf.c	FUNCTION_52	IF_16
0x40094eb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3769	elf.c	FUNCTION_52	CALL_36
0x40094f2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3769	elf.c	FUNCTION_52	CALL_36
0x40094f9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3769	elf.c	FUNCTION_52	CALL_36
0x40094fd	        0x48895058	             mov qword [rax + 0x58], rdx	      3769	elf.c	FUNCTION_52	CALL_36
0x4009501	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3771	elf.c	FUNCTION_52	CALL_37
0x4009508	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3771	elf.c	FUNCTION_52	CALL_37
0x400950f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3771	elf.c	FUNCTION_52	CALL_37
0x4009516	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      3771	elf.c	FUNCTION_52	CALL_37
0x4009519	            0x89c0	                            mov eax, eax	      3771	elf.c	FUNCTION_52	CALL_37
0x400951b	    0x488d14c50000	                        lea rdx, [rax*8]	      3771	elf.c	FUNCTION_52	CALL_37
0x4009523	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3771	elf.c	FUNCTION_52	CALL_37
0x4009527	          0x4801d0	                            add rax, rdx	      3771	elf.c	FUNCTION_52	CALL_37
0x400952a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3771	elf.c	FUNCTION_52	CALL_37
0x400952e	    0x4881c2b80000	                           add rdx, 0xb8	      3771	elf.c	FUNCTION_52	CALL_37
0x4009535	          0x488910	                    mov qword [rax], rdx	      3771	elf.c	FUNCTION_52	CALL_37
0x4009538	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      3772	elf.c	FUNCTION_52	IF_17
0x400953f	     0xf840d010000	                            je 0x4009652	      3772	elf.c	FUNCTION_52	IF_17
0x4009545	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x400954c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4009553	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4009559	            0x89c0	                            mov eax, eax	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x400955b	    0x488d14c50000	                        lea rdx, [rax*8]	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4009563	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4009567	          0x4801d0	                            add rax, rdx	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x400956a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x400956e	        0x4883c268	                           add rdx, 0x68	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4009572	          0x488910	                    mov qword [rax], rdx	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4009575	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x400957c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x4009583	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x4009589	      0x3d00ff0000	                         cmp eax, 0xff00	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x400958e	            0x7669	                           jbe 0x40095f9	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x4009590	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3777	elf.c	FUNCTION_52	IF_17	IF_18	CALL_40
0x4009597	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3777	elf.c	FUNCTION_52	IF_17	IF_18	CALL_40
0x400959e	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3777	elf.c	FUNCTION_52	IF_17	IF_18	CALL_40
0x40095a5	        0x488945c8	             mov qword [rbp - 0x38], rax	      3777	elf.c	FUNCTION_52	IF_17	IF_18	CALL_40
0x40095a9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40095ae	            0x750f	                           jne 0x40095bf	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40095b0	      0xbec20e0000	                          mov esi, 0xec2	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40095b5	      0xbf00000000	                              mov edi, 0	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40095ba	      0xe800000000	                          call 0x40095bf	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40095bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095c3	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095c6	            0x89c0	                            mov eax, eax	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095c8	    0x488d14c50000	                        lea rdx, [rax*8]	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095d0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095d4	          0x4801c2	                            add rdx, rax	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095db	          0x488902	                    mov qword [rdx], rax	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x40095de	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x40095e5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x40095ec	    0x8b90780c0000	           mov edx, dword [rax + 0xc78] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x40095f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x40095f6	          0x895028	             mov dword [rax + 0x28], edx	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x40095f9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4009600	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4009607	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x400960e	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4009611	            0x89c0	                            mov eax, eax	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4009613	    0x488d14c50000	                        lea rdx, [rax*8]	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x400961b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x400961f	          0x4801d0	                            add rax, rdx	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4009622	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4009626	    0x4881c2080100	                          add rdx, 0x108	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x400962d	          0x488910	                    mov qword [rax], rdx	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4009630	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4009637	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x400963e	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4009645	          0x8b5050	            mov edx, dword [rax + 0x50] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4009648	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x400964c	    0x899090000000	             mov dword [rax + 0x90], edx	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4009652	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3786	elf.c	FUNCTION_52	FOR_3
0x4009659	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4009660	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3786	elf.c	FUNCTION_52	FOR_3
0x4009667	      0xe90a070000	                           jmp 0x4009d76	      3786	elf.c	FUNCTION_52	FOR_3
0x400966c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3790	elf.c	FUNCTION_52	FOR_3	CALL_45
0x4009673	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3790	elf.c	FUNCTION_52	FOR_3	CALL_45
0x400967a	        0x48894598	             mov qword [rbp - 0x68], rax	      3790	elf.c	FUNCTION_52	FOR_3	CALL_45
0x400967e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3792	elf.c	FUNCTION_52	FOR_3
0x4009682	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3792	elf.c	FUNCTION_52	FOR_3
0x4009688	            0x4898	                                    cdqe	      3792	elf.c	FUNCTION_52	FOR_3
0x400968a	    0x488d14c50000	                        lea rdx, [rax*8]	      3792	elf.c	FUNCTION_52	FOR_3
0x4009692	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3792	elf.c	FUNCTION_52	FOR_3
0x4009696	          0x4801c2	                            add rdx, rax	      3792	elf.c	FUNCTION_52	FOR_3
0x4009699	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3792	elf.c	FUNCTION_52	FOR_3
0x400969d	          0x488902	                    mov qword [rdx], rax	      3792	elf.c	FUNCTION_52	FOR_3
0x40096a0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096a4	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096a7	            0x85c0	                           test eax, eax	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096a9	            0x7423	                            je 0x40096ce	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096ab	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096af	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096b2	            0x4898	                                    cdqe	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096b4	    0x488d14c50000	                        lea rdx, [rax*8]	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096bc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096c0	          0x4801c2	                            add rdx, rax	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096c3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096c7	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096cb	          0x488902	                    mov qword [rdx], rax	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40096ce	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096d2	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096d5	            0x85c0	                           test eax, eax	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096d7	            0x7423	                            je 0x40096fc	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096dd	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096e0	            0x4898	                                    cdqe	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096e2	    0x488d14c50000	                        lea rdx, [rax*8]	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096ea	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096ee	          0x4801c2	                            add rdx, rax	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096f1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096f5	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096f9	          0x488902	                    mov qword [rdx], rax	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40096fc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3803	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009700	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3803	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009703	            0x85c0	                           test eax, eax	      3803	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009705	            0x7450	                            je 0x4009757	      3803	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009707	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x400970b	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x400970f	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x4009716	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x400971d	    0x8b92780c0000	           mov edx, dword [rdx + 0xc78] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x4009723	          0x895028	             mov dword [rax + 0x28], edx	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x4009726	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x400972a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x400972e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009732	    0x8b9288000000	            mov edx, dword [rdx + 0x88] 	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009738	          0x89502c	             mov dword [rax + 0x2c], edx	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x400973b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x400973f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009743	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009747	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x400974b	        0x488b5208	                mov rdx, qword [rdx + 8]	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x400974f	        0x4883ca40	                            or rdx, 0x40	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009753	        0x48895008	                mov qword [rax + 8], rdx	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4009757	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3809	elf.c	FUNCTION_52	FOR_3	IF_22
0x400975b	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3809	elf.c	FUNCTION_52	FOR_3	IF_22
0x400975e	            0x85c0	                           test eax, eax	      3809	elf.c	FUNCTION_52	FOR_3	IF_22
0x4009760	            0x7450	                            je 0x40097b2	      3809	elf.c	FUNCTION_52	FOR_3	IF_22
0x4009762	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4009766	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x400976a	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4009771	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4009778	    0x8b92780c0000	           mov edx, dword [rdx + 0xc78] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x400977e	          0x895028	             mov dword [rax + 0x28], edx	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4009781	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x4009785	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x4009789	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x400978d	    0x8b9288000000	            mov edx, dword [rdx + 0x88] 	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x4009793	          0x89502c	             mov dword [rax + 0x2c], edx	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x4009796	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x400979a	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x400979e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x40097a2	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x40097a6	        0x488b5208	                mov rdx, qword [rdx + 8]	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x40097aa	        0x4883ca40	                            or rdx, 0x40	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x40097ae	        0x48895008	                mov qword [rax + 8], rdx	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x40097b2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x40097b6	        0x488b4008	                mov rax, qword [rax + 8]	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x40097ba	      0x2580000000	                           and eax, 0x80	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x40097bf	          0x4885c0	                           test rax, rax	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x40097c2	     0xf8418020000	                            je 0x40099e0	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x40097c8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_48
0x40097cf	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_48
0x40097d6	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_48
0x40097dd	        0x48894588	             mov qword [rbp - 0x78], rax	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_48
0x40097e1	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x40097e6	     0xf8496010000	                            je 0x4009982	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x40097ec	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x40097f4	     0xf84f9000000	                            je 0x40098f3	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x40097fa	    0x48817d880000	               cmp qword [rbp - 0x78], 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009802	     0xf84c3000000	                            je 0x40098cb	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009808	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x400980c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009810	    0x483d00000000	                              cmp rax, 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009816	     0xf85af000000	                           jne 0x40098cb	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x400981c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009820	         0xfb74024	           movzx eax, word [rax + 0x24] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009824	        0x66258003	                           and ax, 0x380	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009828	        0x663d0001	                           cmp ax, 0x100	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x400982c	     0xf8499000000	                            je 0x40098cb	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009832	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009836	         0xfb74024	           movzx eax, word [rax + 0x24] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x400983a	        0x66258003	                           and ax, 0x380	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x400983e	        0x663d0002	                           cmp ax, 0x200	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009842	     0xf8483000000	                            je 0x40098cb	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4009848	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x400984c	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4009853	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4009857	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x400985b	      0xbe00000000	                              mov esi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x4009860	      0xbf00000000	                              mov edi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x4009865	      0xe800000000	                          call 0x400986a	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x400986a	          0x4889c7	                            mov rdi, rax	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x400986d	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4009871	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4009878	          0x4d89e0	                             mov r8, r12	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x400987b	          0x4889d1	                            mov rcx, rdx	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x400987e	          0x4889da	                            mov rdx, rbx	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4009881	          0x4889c6	                            mov rsi, rax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4009884	      0xb800000000	                              mov eax, 0	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4009889	      0xe800000000	                          call 0x400988e	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x400988e	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4009895	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4009899	          0x4889d6	                            mov rsi, rdx	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400989c	          0x4889c7	                            mov rdi, rax	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400989f	      0xe800000000	                          call 0x40098a4	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x40098a4	        0x488945e8	             mov qword [rbp - 0x18], rax	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x40098a8	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x40098ad	            0x7514	                           jne 0x40098c3	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x40098af	      0xbf11000000	                           mov edi, 0x11	      3840	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27	CALL_52
0x40098b4	      0xe800000000	                          call 0x40098b9	      3840	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27	CALL_52
0x40098b9	      0xb800000000	                              mov eax, 0	      3841	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x40098be	      0xe9c6040000	                           jmp 0x4009d89	      3841	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x40098c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3843	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x40098c7	        0x48894588	             mov qword [rbp - 0x78], rax	      3843	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x40098cb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3846	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x40098cf	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3846	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x40098d3	        0x48894588	             mov qword [rbp - 0x78], rax	      3846	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x40098d7	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x40098dc	     0xf8584000000	                           jne 0x4009966	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x40098e2	      0xbe070f0000	                          mov esi, 0xf07	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x40098e7	      0xbf00000000	                              mov edi, 0	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x40098ec	      0xe800000000	                          call 0x40098f1	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x40098f1	            0xeb73	                           jmp 0x4009966	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x40098f3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x40098f7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x40098fb	          0x4885c0	                           test rax, rax	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x40098fe	            0x755a	                           jne 0x400995a	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4009900	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009904	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x400990b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x400990f	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009913	      0xbe00000000	                              mov esi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x4009918	      0xbf00000000	                              mov edi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x400991d	      0xe800000000	                          call 0x4009922	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x4009922	          0x4889c7	                            mov rdi, rax	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x4009925	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009929	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009930	          0x4d89e0	                             mov r8, r12	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009933	          0x4889d1	                            mov rcx, rdx	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009936	          0x4889da	                            mov rdx, rbx	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009939	          0x4889c6	                            mov rsi, rax	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x400993c	      0xb800000000	                              mov eax, 0	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009941	      0xe800000000	                          call 0x4009946	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4009946	      0xbf11000000	                           mov edi, 0x11	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_56
0x400994b	      0xe800000000	                          call 0x4009950	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_56
0x4009950	      0xb800000000	                              mov eax, 0	      3860	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4009955	      0xe92f040000	                           jmp 0x4009d89	      3860	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x400995a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3862	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4
0x400995e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3862	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4
0x4009962	        0x48894588	             mov qword [rbp - 0x78], rax	      3862	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4
0x4009966	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x400996a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4009971	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4009977	            0x89c2	                            mov edx, eax	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4009979	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x400997d	          0x895028	             mov dword [rax + 0x28], edx	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4009980	            0xeb5e	                           jmp 0x40099e0	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4009982	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3874	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	CALL_58
0x4009989	        0x488b4008	                mov rax, qword [rax + 8]	      3874	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	CALL_58
0x400998d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3873	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5
0x4009994	        0x488945e0	             mov qword [rbp - 0x20], rax	      3873	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5
0x4009998	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x400999c	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x40099a3	          0x4885c0	                           test rax, rax	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x40099a6	            0x7438	                            je 0x40099e0	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x40099a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099ac	    0x488b98e80200	           mov rbx, qword [rax + 0x2e8] 	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099b3	      0xbe00000000	                              mov esi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x40099b8	      0xbf00000000	                              mov edi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x40099bd	      0xe800000000	                          call 0x40099c2	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x40099c2	          0x4889c1	                            mov rcx, rax	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x40099c5	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099cc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099d3	          0x4889c6	                            mov rsi, rax	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099d6	          0x4889cf	                            mov rdi, rcx	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099d9	      0xb800000000	                              mov eax, 0	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099de	            0xffd3	                                call rbx	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x40099e0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099e4	          0x8b4004	                mov eax, dword [rax + 4]	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099e7	          0x83f80b	                            cmp eax, 0xb	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099ea	     0xf8477020000	                            je 0x4009c67	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099f0	          0x83f80b	                            cmp eax, 0xb	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099f3	            0x7734	                            ja 0x4009a29	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099f5	          0x83f805	                              cmp eax, 5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099f8	     0xf8401030000	                            je 0x4009cff	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40099fe	          0x83f805	                              cmp eax, 5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a01	            0x7713	                            ja 0x4009a16	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a03	          0x83f803	                              cmp eax, 3	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a06	     0xf84fb000000	                            je 0x4009b07	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a0c	          0x83f804	                              cmp eax, 4	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a0f	            0x7469	                            je 0x4009a7a	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a11	      0xe94e030000	                           jmp 0x4009d64	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a16	          0x83f806	                              cmp eax, 6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a19	     0xf8448020000	                            je 0x4009c67	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a1f	          0x83f809	                              cmp eax, 9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a22	            0x7456	                            je 0x4009a7a	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a24	      0xe93b030000	                           jmp 0x4009d64	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a29	      0x3df7ffff6f	                     cmp eax, 0x6ffffff7	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a2e	     0xf8475020000	                            je 0x4009ca9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a34	      0x3df7ffff6f	                     cmp eax, 0x6ffffff7	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a39	            0x7719	                            ja 0x4009a54	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a3b	          0x83f811	                           cmp eax, 0x11	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a3e	     0xf84f6020000	                            je 0x4009d3a	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a44	      0x3df6ffff6f	                     cmp eax, 0x6ffffff6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a49	     0xf84b0020000	                            je 0x4009cff	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a4f	      0xe910030000	                           jmp 0x4009d64	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a54	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a59	     0xf8205030000	                            jb 0x4009d64	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a5f	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a64	     0xf86fd010000	                           jbe 0x4009c67	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a6a	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a6f	     0xf848a020000	                            je 0x4009cff	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a75	      0xe9ea020000	                           jmp 0x4009d64	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009a7a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4009a81	      0xbe00000000	                              mov esi, 0	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4009a86	          0x4889c7	                            mov rdi, rax	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4009a89	      0xe800000000	                          call 0x4009a8e	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4009a8e	        0x48894588	             mov qword [rbp - 0x78], rax	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4009a92	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4009a97	            0x741a	                            je 0x4009ab3	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4009a99	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4009a9d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4009aa4	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4009aaa	            0x89c2	                            mov edx, eax	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4009aac	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4009ab0	          0x895028	             mov dword [rax + 0x28], edx	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4009ab3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3897	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_63
0x4009aba	          0x4889c7	                            mov rdi, rax	      3897	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_63
0x4009abd	      0xe8b3f2ffff	          call sym.elf_get_reloc_section	      3897	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_63
0x4009ac2	        0x48894588	             mov qword [rbp - 0x78], rax	      3897	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_63
0x4009ac6	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009acb	     0xf8486020000	                            je 0x4009d57	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009ad1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4009ad5	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4009adc	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4009ae2	            0x89c2	                            mov edx, eax	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4009ae4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4009ae8	          0x89502c	             mov dword [rax + 0x2c], edx	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4009aeb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009aef	        0x488b4008	                mov rax, qword [rax + 8]	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009af3	        0x4883c840	                            or rax, 0x40	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009af7	          0x4889c2	                            mov rdx, rax	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009afa	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009afe	        0x48895008	                mov qword [rax + 8], rdx	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4009b02	      0xe950020000	                           jmp 0x4009d57	      3903	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009b07	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b0e	          0x488b00	                    mov rax, qword [rax]	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b11	      0xba05000000	                              mov edx, 5	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b16	      0xbe00000000	                              mov esi, 0	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b1b	          0x4889c7	                            mov rdi, rax	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b1e	      0xe800000000	                          call 0x4009b23	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b23	            0x85c0	                           test eax, eax	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b25	     0xf852f020000	                           jne 0x4009d5a	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009b2b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b32	          0x488b18	                    mov rbx, qword [rax]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b35	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b3c	          0x488b00	                    mov rax, qword [rax]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b3f	          0x4889c7	                            mov rdi, rax	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b42	      0xe800000000	                          call 0x4009b47	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b47	        0x4883e803	                              sub rax, 3	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b4b	          0x4801d8	                            add rax, rbx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b4e	      0xbe00000000	                              mov esi, 0	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b53	          0x4889c7	                            mov rdi, rax	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b56	      0xe800000000	                          call 0x4009b5b	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b5b	            0x85c0	                           test eax, eax	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b5d	     0xf85f7010000	                           jne 0x4009d5a	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4009b63	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3916	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_67
0x4009b6a	          0x488b00	                    mov rax, qword [rax]	      3916	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_67
0x4009b6d	          0x4889c7	                            mov rdi, rax	      3916	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_67
0x4009b70	      0xe800000000	                          call 0x4009b75	      3916	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_67
0x4009b75	        0x488945d0	             mov qword [rbp - 0x30], rax	      3916	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_67
0x4009b79	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4009b7d	        0x4883e802	                              sub rax, 2	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4009b81	          0x4889c7	                            mov rdi, rax	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4009b84	      0xe800000000	                          call 0x4009b89	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4009b89	        0x488945d8	             mov qword [rbp - 0x28], rax	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4009b8d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x4009b92	            0x750a	                           jne 0x4009b9e	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x4009b94	      0xb800000000	                              mov eax, 0	      3919	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x4009b99	      0xe9eb010000	                           jmp 0x4009d89	      3919	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x4009b9e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009ba2	        0x488d50fd	                      lea rdx, [rax - 3]	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009ba6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009bad	          0x488b08	                    mov rcx, qword [rax]	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009bb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009bb4	          0x4889ce	                            mov rsi, rcx	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009bb7	          0x4889c7	                            mov rdi, rax	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009bba	      0xe800000000	                          call 0x4009bbf	      3920	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_69
0x4009bbf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009bc3	        0x488d50fd	                      lea rdx, [rax - 3]	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009bc7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009bcb	          0x4801d0	                            add rax, rdx	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009bce	          0xc60000	                       mov byte [rax], 0	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4009bd1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4009bd5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4009bdc	          0x4889d6	                            mov rsi, rdx	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4009bdf	          0x4889c7	                            mov rdi, rax	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4009be2	      0xe800000000	                          call 0x4009be7	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4009be7	        0x48894588	             mov qword [rbp - 0x78], rax	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4009beb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_71
0x4009bef	          0x4889c7	                            mov rdi, rax	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_71
0x4009bf2	      0xe800000000	                          call 0x4009bf7	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_71
0x4009bf7	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x4009bfc	     0xf8458010000	                            je 0x4009d5a	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x4009c02	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x4009c06	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x4009c0d	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x4009c11	    0x8b9288000000	            mov edx, dword [rdx + 0x88] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x4009c17	          0x895028	             mov dword [rax + 0x28], edx	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x4009c1a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x4009c1e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x4009c25	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x4009c29	          0x4885c0	                           test rax, rax	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x4009c2c	     0xf8528010000	                           jne 0x4009d5a	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x4009c32	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3930	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_74
0x4009c36	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      3930	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_74
0x4009c3d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c44	          0x4889c7	                            mov rdi, rax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c47	      0xe800000000	                          call 0x4009c4c	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c4c	             0x1c0	                            add eax, eax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c4e	          0x8d5007	                      lea edx, [rax + 7]	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c51	            0x85c0	                           test eax, eax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c53	           0xf48c2	                          cmovs eax, edx	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c56	          0xc1f803	                              sar eax, 3	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c59	          0x83c004	                              add eax, 4	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c5c	            0x4898	                                    cdqe	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c5e	        0x48894338	             mov qword [rbx + 0x38], rax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4009c62	      0xe9f3000000	                           jmp 0x4009d5a	      3934	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009c67	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x4009c6e	      0xbe00000000	                              mov esi, 0	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x4009c73	          0x4889c7	                            mov rdi, rax	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x4009c76	      0xe800000000	                          call 0x4009c7b	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x4009c7b	        0x48894588	             mov qword [rbp - 0x78], rax	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x4009c7f	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x4009c84	     0xf84d3000000	                            je 0x4009d5d	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x4009c8a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4009c8e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4009c95	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4009c9b	            0x89c2	                            mov edx, eax	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4009c9d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4009ca1	          0x895028	             mov dword [rax + 0x28], edx	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4009ca4	      0xe9b4000000	                           jmp 0x4009d5d	      3946	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009ca9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cb0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cb3	          0x83e001	                              and eax, 1	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cb6	            0x85c0	                           test eax, eax	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cb8	            0x7407	                            je 0x4009cc1	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cba	      0xba00000000	                              mov edx, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cbf	            0xeb05	                           jmp 0x4009cc6	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cc1	      0xba00000000	                              mov edx, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cc6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009ccd	          0x4889d6	                            mov rsi, rdx	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cd0	          0x4889c7	                            mov rdi, rax	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cd3	      0xe800000000	                          call 0x4009cd8	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cd8	        0x48894588	             mov qword [rbp - 0x78], rax	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4009cdc	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4009ce1	            0x747d	                            je 0x4009d60	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4009ce3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x4009ce7	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x4009cee	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x4009cf4	            0x89c2	                            mov edx, eax	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x4009cf6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x4009cfa	          0x895028	             mov dword [rax + 0x28], edx	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x4009cfd	            0xeb61	                           jmp 0x4009d60	      3956	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009cff	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4009d06	      0xbe00000000	                              mov esi, 0	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4009d0b	          0x4889c7	                            mov rdi, rax	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4009d0e	      0xe800000000	                          call 0x4009d13	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4009d13	        0x48894588	             mov qword [rbp - 0x78], rax	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4009d17	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x4009d1c	            0x7445	                            je 0x4009d63	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x4009d1e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x4009d22	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x4009d29	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x4009d2f	            0x89c2	                            mov edx, eax	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x4009d31	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x4009d35	          0x895028	             mov dword [rax + 0x28], edx	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x4009d38	            0xeb29	                           jmp 0x4009d63	      3966	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d3a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4009d41	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4009d48	    0x8b90780c0000	           mov edx, dword [rax + 0xc78] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4009d4e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4009d52	          0x895028	             mov dword [rax + 0x28], edx	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4009d55	            0xeb0d	                           jmp 0x4009d64	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4009d57	              0x90	                                     nop	      3903	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d58	            0xeb0a	                           jmp 0x4009d64	      3903	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d5a	              0x90	                                     nop	      3934	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d5b	            0xeb07	                           jmp 0x4009d64	      3934	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d5d	              0x90	                                     nop	      3946	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d5e	            0xeb04	                           jmp 0x4009d64	      3946	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d60	              0x90	                                     nop	      3956	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d61	            0xeb01	                           jmp 0x4009d64	      3956	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d63	              0x90	                                     nop	      3966	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4009d64	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3786	elf.c	FUNCTION_52	FOR_3
0x4009d6b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4009d6f	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3786	elf.c	FUNCTION_52	FOR_3
0x4009d76	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3786	elf.c	FUNCTION_52	FOR_3
0x4009d7e	     0xf85e8f8ffff	                           jne 0x400966c	      3786	elf.c	FUNCTION_52	FOR_3
0x4009d84	      0xb801000000	                              mov eax, 1	      3977	elf.c	FUNCTION_52
0x4009d89	    0x4881c4900000	                           add rsp, 0x90	      3978	elf.c	FUNCTION_52
0x4009d90	              0x5b	                                 pop rbx	      3978	elf.c	FUNCTION_52
0x4009d91	            0x415c	                                 pop r12	      3978	elf.c	FUNCTION_52
0x4009d93	              0x5d	                                 pop rbp	      3978	elf.c	FUNCTION_52
0x4009d94	              0xc3	                                     ret	      3978	elf.c	FUNCTION_52
write_zeros	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	40
0x400ca73	              0x55	                                push rbp	      5229	elf.c	FUNCTION_69
0x400ca74	          0x4889e5	                            mov rbp, rsp	      5229	elf.c	FUNCTION_69
0x400ca77	        0x4883ec30	                           sub rsp, 0x30	      5229	elf.c	FUNCTION_69
0x400ca7b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5229	elf.c	FUNCTION_69
0x400ca7f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5229	elf.c	FUNCTION_69
0x400ca83	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5229	elf.c	FUNCTION_69
0x400ca87	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400ca8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400ca8f	      0xba00000000	                              mov edx, 0	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400ca94	          0x4889ce	                            mov rsi, rcx	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400ca97	          0x4889c7	                            mov rdi, rax	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400ca9a	      0xe800000000	                          call 0x400ca9f	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400ca9f	            0x85c0	                           test eax, eax	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400caa1	            0x7407	                            je 0x400caaa	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400caa3	      0xb800000000	                              mov eax, 0	      5234	elf.c	FUNCTION_69	IF_1
0x400caa8	            0xeb51	                           jmp 0x400cafb	      5234	elf.c	FUNCTION_69	IF_1
0x400caaa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5235	elf.c	FUNCTION_69	CALL_2
0x400caae	          0x4889c7	                            mov rdi, rax	      5235	elf.c	FUNCTION_69	CALL_2
0x400cab1	      0xe800000000	                          call 0x400cab6	      5235	elf.c	FUNCTION_69	CALL_2
0x400cab6	        0x488945f8	                mov qword [rbp - 8], rax	      5235	elf.c	FUNCTION_69	CALL_2
0x400caba	      0x48837df800	                  cmp qword [rbp - 8], 0	      5236	elf.c	FUNCTION_69	IF_2
0x400cabf	            0x7507	                           jne 0x400cac8	      5236	elf.c	FUNCTION_69	IF_2
0x400cac1	      0xb800000000	                              mov eax, 0	      5237	elf.c	FUNCTION_69	IF_2
0x400cac6	            0xeb33	                           jmp 0x400cafb	      5237	elf.c	FUNCTION_69	IF_2
0x400cac8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5238	elf.c	FUNCTION_69	CALL_3
0x400cacc	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      5238	elf.c	FUNCTION_69	CALL_3
0x400cad0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5238	elf.c	FUNCTION_69	CALL_3
0x400cad4	          0x4889ce	                            mov rsi, rcx	      5238	elf.c	FUNCTION_69	CALL_3
0x400cad7	          0x4889c7	                            mov rdi, rax	      5238	elf.c	FUNCTION_69	CALL_3
0x400cada	      0xe800000000	                          call 0x400cadf	      5238	elf.c	FUNCTION_69	CALL_3
0x400cadf	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5238	elf.c	FUNCTION_69	CALL_3
0x400cae3	           0xf94c0	                                 sete al	      5238	elf.c	FUNCTION_69	CALL_3
0x400cae6	           0xfb6c0	                           movzx eax, al	      5238	elf.c	FUNCTION_69	CALL_3
0x400cae9	          0x8945f4	              mov dword [rbp - 0xc], eax	      5238	elf.c	FUNCTION_69	CALL_3
0x400caec	        0x488b45f8	                mov rax, qword [rbp - 8]	      5239	elf.c	FUNCTION_69	CALL_4
0x400caf0	          0x4889c7	                            mov rdi, rax	      5239	elf.c	FUNCTION_69	CALL_4
0x400caf3	      0xe800000000	                          call 0x400caf8	      5239	elf.c	FUNCTION_69	CALL_4
0x400caf8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5240	elf.c	FUNCTION_69
0x400cafb	              0xc9	                                   leave	      5241	elf.c	FUNCTION_69
0x400cafc	              0xc3	                                     ret	      5241	elf.c	FUNCTION_69
elfcore_grok_prxfpreg	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016c56	              0x55	                                push rbp	      9212	elf.c	FUNCTION_118
0x4016c57	          0x4889e5	                            mov rbp, rsp	      9212	elf.c	FUNCTION_118
0x4016c5a	        0x4883ec10	                           sub rsp, 0x10	      9212	elf.c	FUNCTION_118
0x4016c5e	        0x48897df8	                mov qword [rbp - 8], rdi	      9212	elf.c	FUNCTION_118
0x4016c62	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9212	elf.c	FUNCTION_118
0x4016c66	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9213	elf.c	FUNCTION_118	CALL_1
0x4016c6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      9213	elf.c	FUNCTION_118	CALL_1
0x4016c6e	      0xbe00000000	                              mov esi, 0	      9213	elf.c	FUNCTION_118	CALL_1
0x4016c73	          0x4889c7	                            mov rdi, rax	      9213	elf.c	FUNCTION_118	CALL_1
0x4016c76	      0xe87effffff	call sym.elfcore_make_note_pseudosection	      9213	elf.c	FUNCTION_118	CALL_1
0x4016c7b	              0xc9	                                   leave	      9214	elf.c	FUNCTION_118
0x4016c7c	              0xc3	                                     ret	      9214	elf.c	FUNCTION_118
swap_linux_prpsinfo64_ugid32_out	ELSE,0:DO,0:CALL,2:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	120
0x40003e1	              0x55	                                push rbp	       165	elf-linux-core.h	FUNCTION_206
0x40003e2	          0x4889e5	                            mov rbp, rsp	       165	elf-linux-core.h	FUNCTION_206
0x40003e5	        0x4883ec20	                           sub rsp, 0x20	       165	elf-linux-core.h	FUNCTION_206
0x40003e9	        0x48897df8	                mov qword [rbp - 8], rdi	       165	elf-linux-core.h	FUNCTION_206
0x40003ed	        0x488975f0	             mov qword [rbp - 0x10], rsi	       165	elf-linux-core.h	FUNCTION_206
0x40003f1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       165	elf-linux-core.h	FUNCTION_206
0x40003f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	elf-linux-core.h	FUNCTION_206
0x40003f9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       166	elf-linux-core.h	FUNCTION_206
0x40003fd	           0xfb612	                   movzx edx, byte [rdx]	       166	elf-linux-core.h	FUNCTION_206
0x4000400	            0x8810	                      mov byte [rax], dl	       166	elf-linux-core.h	FUNCTION_206
0x4000402	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       167	elf-linux-core.h	FUNCTION_206
0x4000406	        0x488d5001	                      lea rdx, [rax + 1]	       167	elf-linux-core.h	FUNCTION_206
0x400040a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	elf-linux-core.h	FUNCTION_206
0x400040e	         0xfb64001	               movzx eax, byte [rax + 1]	       167	elf-linux-core.h	FUNCTION_206
0x4000412	            0x8802	                      mov byte [rdx], al	       167	elf-linux-core.h	FUNCTION_206
0x4000414	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	elf-linux-core.h	FUNCTION_206
0x4000418	        0x488d5002	                      lea rdx, [rax + 2]	       168	elf-linux-core.h	FUNCTION_206
0x400041c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	elf-linux-core.h	FUNCTION_206
0x4000420	         0xfb64002	               movzx eax, byte [rax + 2]	       168	elf-linux-core.h	FUNCTION_206
0x4000424	            0x8802	                      mov byte [rdx], al	       168	elf-linux-core.h	FUNCTION_206
0x4000426	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       169	elf-linux-core.h	FUNCTION_206
0x400042a	        0x488d5003	                      lea rdx, [rax + 3]	       169	elf-linux-core.h	FUNCTION_206
0x400042e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	elf-linux-core.h	FUNCTION_206
0x4000432	         0xfb64003	               movzx eax, byte [rax + 3]	       169	elf-linux-core.h	FUNCTION_206
0x4000436	            0x8802	                      mov byte [rdx], al	       169	elf-linux-core.h	FUNCTION_206
0x4000438	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	elf-linux-core.h	FUNCTION_206
0x400043c	        0x488b4008	                mov rax, qword [rax + 8]	       170	elf-linux-core.h	FUNCTION_206
0x4000440	        0x488b4030	            mov rax, qword [rax + 0x30] 	       170	elf-linux-core.h	FUNCTION_206
0x4000444	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       170	elf-linux-core.h	FUNCTION_206
0x4000448	        0x488d4a08	                      lea rcx, [rdx + 8]	       170	elf-linux-core.h	FUNCTION_206
0x400044c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       170	elf-linux-core.h	FUNCTION_206
0x4000450	        0x488b5208	                mov rdx, qword [rdx + 8]	       170	elf-linux-core.h	FUNCTION_206
0x4000454	          0x4889ce	                            mov rsi, rcx	       170	elf-linux-core.h	FUNCTION_206
0x4000457	          0x4889d7	                            mov rdi, rdx	       170	elf-linux-core.h	FUNCTION_206
0x400045a	            0xffd0	                                call rax	       170	elf-linux-core.h	FUNCTION_206
0x400045c	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	elf-linux-core.h	FUNCTION_206
0x4000460	        0x488b4008	                mov rax, qword [rax + 8]	       171	elf-linux-core.h	FUNCTION_206
0x4000464	        0x488b4048	            mov rax, qword [rax + 0x48] 	       171	elf-linux-core.h	FUNCTION_206
0x4000468	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       171	elf-linux-core.h	FUNCTION_206
0x400046c	        0x488d4a10	                   lea rcx, [rdx + 0x10]	       171	elf-linux-core.h	FUNCTION_206
0x4000470	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       171	elf-linux-core.h	FUNCTION_206
0x4000474	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       171	elf-linux-core.h	FUNCTION_206
0x4000477	            0x89d2	                            mov edx, edx	       171	elf-linux-core.h	FUNCTION_206
0x4000479	          0x4889ce	                            mov rsi, rcx	       171	elf-linux-core.h	FUNCTION_206
0x400047c	          0x4889d7	                            mov rdi, rdx	       171	elf-linux-core.h	FUNCTION_206
0x400047f	            0xffd0	                                call rax	       171	elf-linux-core.h	FUNCTION_206
0x4000481	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	elf-linux-core.h	FUNCTION_206
0x4000485	        0x488b4008	                mov rax, qword [rax + 8]	       172	elf-linux-core.h	FUNCTION_206
0x4000489	        0x488b4048	            mov rax, qword [rax + 0x48] 	       172	elf-linux-core.h	FUNCTION_206
0x400048d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       172	elf-linux-core.h	FUNCTION_206
0x4000491	        0x488d4a14	                   lea rcx, [rdx + 0x14]	       172	elf-linux-core.h	FUNCTION_206
0x4000495	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       172	elf-linux-core.h	FUNCTION_206
0x4000499	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       172	elf-linux-core.h	FUNCTION_206
0x400049c	            0x89d2	                            mov edx, edx	       172	elf-linux-core.h	FUNCTION_206
0x400049e	          0x4889ce	                            mov rsi, rcx	       172	elf-linux-core.h	FUNCTION_206
0x40004a1	          0x4889d7	                            mov rdi, rdx	       172	elf-linux-core.h	FUNCTION_206
0x40004a4	            0xffd0	                                call rax	       172	elf-linux-core.h	FUNCTION_206
0x40004a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	elf-linux-core.h	FUNCTION_206
0x40004aa	        0x488b4008	                mov rax, qword [rax + 8]	       173	elf-linux-core.h	FUNCTION_206
0x40004ae	        0x488b4048	            mov rax, qword [rax + 0x48] 	       173	elf-linux-core.h	FUNCTION_206
0x40004b2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       173	elf-linux-core.h	FUNCTION_206
0x40004b6	        0x488d4a18	                   lea rcx, [rdx + 0x18]	       173	elf-linux-core.h	FUNCTION_206
0x40004ba	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       173	elf-linux-core.h	FUNCTION_206
0x40004be	          0x8b5218	            mov edx, dword [rdx + 0x18] 	       173	elf-linux-core.h	FUNCTION_206
0x40004c1	          0x4863d2	                         movsxd rdx, edx	       173	elf-linux-core.h	FUNCTION_206
0x40004c4	          0x4889ce	                            mov rsi, rcx	       173	elf-linux-core.h	FUNCTION_206
0x40004c7	          0x4889d7	                            mov rdi, rdx	       173	elf-linux-core.h	FUNCTION_206
0x40004ca	            0xffd0	                                call rax	       173	elf-linux-core.h	FUNCTION_206
0x40004cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	elf-linux-core.h	FUNCTION_206
0x40004d0	        0x488b4008	                mov rax, qword [rax + 8]	       174	elf-linux-core.h	FUNCTION_206
0x40004d4	        0x488b4048	            mov rax, qword [rax + 0x48] 	       174	elf-linux-core.h	FUNCTION_206
0x40004d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	elf-linux-core.h	FUNCTION_206
0x40004dc	        0x488d4a1c	                   lea rcx, [rdx + 0x1c]	       174	elf-linux-core.h	FUNCTION_206
0x40004e0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       174	elf-linux-core.h	FUNCTION_206
0x40004e4	          0x8b521c	            mov edx, dword [rdx + 0x1c] 	       174	elf-linux-core.h	FUNCTION_206
0x40004e7	          0x4863d2	                         movsxd rdx, edx	       174	elf-linux-core.h	FUNCTION_206
0x40004ea	          0x4889ce	                            mov rsi, rcx	       174	elf-linux-core.h	FUNCTION_206
0x40004ed	          0x4889d7	                            mov rdi, rdx	       174	elf-linux-core.h	FUNCTION_206
0x40004f0	            0xffd0	                                call rax	       174	elf-linux-core.h	FUNCTION_206
0x40004f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	elf-linux-core.h	FUNCTION_206
0x40004f6	        0x488b4008	                mov rax, qword [rax + 8]	       175	elf-linux-core.h	FUNCTION_206
0x40004fa	        0x488b4048	            mov rax, qword [rax + 0x48] 	       175	elf-linux-core.h	FUNCTION_206
0x40004fe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       175	elf-linux-core.h	FUNCTION_206
0x4000502	        0x488d4a20	                   lea rcx, [rdx + 0x20]	       175	elf-linux-core.h	FUNCTION_206
0x4000506	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       175	elf-linux-core.h	FUNCTION_206
0x400050a	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       175	elf-linux-core.h	FUNCTION_206
0x400050d	          0x4863d2	                         movsxd rdx, edx	       175	elf-linux-core.h	FUNCTION_206
0x4000510	          0x4889ce	                            mov rsi, rcx	       175	elf-linux-core.h	FUNCTION_206
0x4000513	          0x4889d7	                            mov rdi, rdx	       175	elf-linux-core.h	FUNCTION_206
0x4000516	            0xffd0	                                call rax	       175	elf-linux-core.h	FUNCTION_206
0x4000518	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	elf-linux-core.h	FUNCTION_206
0x400051c	        0x488b4008	                mov rax, qword [rax + 8]	       176	elf-linux-core.h	FUNCTION_206
0x4000520	        0x488b4048	            mov rax, qword [rax + 0x48] 	       176	elf-linux-core.h	FUNCTION_206
0x4000524	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       176	elf-linux-core.h	FUNCTION_206
0x4000528	        0x488d4a24	                   lea rcx, [rdx + 0x24]	       176	elf-linux-core.h	FUNCTION_206
0x400052c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       176	elf-linux-core.h	FUNCTION_206
0x4000530	          0x8b5224	            mov edx, dword [rdx + 0x24] 	       176	elf-linux-core.h	FUNCTION_206
0x4000533	          0x4863d2	                         movsxd rdx, edx	       176	elf-linux-core.h	FUNCTION_206
0x4000536	          0x4889ce	                            mov rsi, rcx	       176	elf-linux-core.h	FUNCTION_206
0x4000539	          0x4889d7	                            mov rdi, rdx	       176	elf-linux-core.h	FUNCTION_206
0x400053c	            0xffd0	                                call rax	       176	elf-linux-core.h	FUNCTION_206
0x400053e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x4000542	        0x488d4828	                   lea rcx, [rax + 0x28]	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x4000546	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x400054a	        0x4883c028	                           add rax, 0x28	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x400054e	      0xba10000000	                           mov edx, 0x10	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x4000553	          0x4889ce	                            mov rsi, rcx	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x4000556	          0x4889c7	                            mov rdi, rax	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x4000559	      0xe800000000	                          call 0x400055e	       177	elf-linux-core.h	FUNCTION_206	CALL_1
0x400055e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x4000562	        0x488d4839	                   lea rcx, [rax + 0x39]	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x4000566	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x400056a	        0x4883c038	                           add rax, 0x38	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x400056e	      0xba50000000	                           mov edx, 0x50	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x4000573	          0x4889ce	                            mov rsi, rcx	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x4000576	          0x4889c7	                            mov rdi, rax	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x4000579	      0xe800000000	                          call 0x400057e	       178	elf-linux-core.h	FUNCTION_206	CALL_2
0x400057e	              0x90	                                     nop	       179	elf-linux-core.h	FUNCTION_206
0x400057f	              0xc9	                                   leave	       179	elf-linux-core.h	FUNCTION_206
0x4000580	              0xc3	                                     ret	       179	elf-linux-core.h	FUNCTION_206
elfcore_write_s390_vxrs_high	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a05e	              0x55	                                push rbp	     10946	elf.c	FUNCTION_183
0x401a05f	          0x4889e5	                            mov rbp, rsp	     10946	elf.c	FUNCTION_183
0x401a062	        0x4883ec40	                           sub rsp, 0x40	     10946	elf.c	FUNCTION_183
0x401a066	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10946	elf.c	FUNCTION_183
0x401a06a	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10946	elf.c	FUNCTION_183
0x401a06e	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10946	elf.c	FUNCTION_183
0x401a072	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10946	elf.c	FUNCTION_183
0x401a076	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10946	elf.c	FUNCTION_183
0x401a07a	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10947	elf.c	FUNCTION_183
0x401a082	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10948	elf.c	FUNCTION_183	CALL_1
0x401a086	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10948	elf.c	FUNCTION_183	CALL_1
0x401a08a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10948	elf.c	FUNCTION_183	CALL_1
0x401a08e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10948	elf.c	FUNCTION_183	CALL_1
0x401a092	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10948	elf.c	FUNCTION_183	CALL_1
0x401a096	        0x4883ec08	                              sub rsp, 8	     10948	elf.c	FUNCTION_183	CALL_1
0x401a09a	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10948	elf.c	FUNCTION_183	CALL_1
0x401a09d	              0x57	                                push rdi	     10948	elf.c	FUNCTION_183	CALL_1
0x401a09e	          0x4d89c1	                              mov r9, r8	     10948	elf.c	FUNCTION_183	CALL_1
0x401a0a1	    0x41b80a030000	                          mov r8d, 0x30a	     10948	elf.c	FUNCTION_183	CALL_1
0x401a0a7	          0x4889c7	                            mov rdi, rax	     10948	elf.c	FUNCTION_183	CALL_1
0x401a0aa	      0xe800000000	                          call 0x401a0af	     10948	elf.c	FUNCTION_183	CALL_1
0x401a0af	        0x4883c410	                           add rsp, 0x10	     10948	elf.c	FUNCTION_183	CALL_1
0x401a0b3	              0xc9	                                   leave	     10951	elf.c	FUNCTION_183
0x401a0b4	              0xc3	                                     ret	     10951	elf.c	FUNCTION_183
elfcore_grok_aarch_hw_watch	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016f62	              0x55	                                push rbp	      9336	elf.c	FUNCTION_138
0x4016f63	          0x4889e5	                            mov rbp, rsp	      9336	elf.c	FUNCTION_138
0x4016f66	        0x4883ec10	                           sub rsp, 0x10	      9336	elf.c	FUNCTION_138
0x4016f6a	        0x48897df8	                mov qword [rbp - 8], rdi	      9336	elf.c	FUNCTION_138
0x4016f6e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9336	elf.c	FUNCTION_138
0x4016f72	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9337	elf.c	FUNCTION_138	CALL_1
0x4016f76	        0x488b45f8	                mov rax, qword [rbp - 8]	      9337	elf.c	FUNCTION_138	CALL_1
0x4016f7a	      0xbe00000000	                              mov esi, 0	      9337	elf.c	FUNCTION_138	CALL_1
0x4016f7f	          0x4889c7	                            mov rdi, rax	      9337	elf.c	FUNCTION_138	CALL_1
0x4016f82	      0xe872fcffff	call sym.elfcore_make_note_pseudosection	      9337	elf.c	FUNCTION_138	CALL_1
0x4016f87	              0xc9	                                   leave	      9338	elf.c	FUNCTION_138
0x4016f88	              0xc3	                                     ret	      9338	elf.c	FUNCTION_138
elfcore_grok_freebsd_psinfo	ELSE,1:DO,0:CALL,7:WHILE,0:FOR,0:IF,5:SWITCH,1:functions,0	108
0x4018135	              0x55	                                push rbp	      9938	elf.c	FUNCTION_149
0x4018136	          0x4889e5	                            mov rbp, rsp	      9938	elf.c	FUNCTION_149
0x4018139	              0x53	                                push rbx	      9938	elf.c	FUNCTION_149
0x401813a	        0x4883ec28	                           sub rsp, 0x28	      9938	elf.c	FUNCTION_149
0x401813e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9938	elf.c	FUNCTION_149
0x4018142	        0x488975d0	             mov qword [rbp - 0x30], rsi	      9938	elf.c	FUNCTION_149
0x4018146	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x401814a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4018151	         0xfb64004	               movzx eax, byte [rax + 4]	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4018155	           0xfb6c0	                           movzx eax, al	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4018158	          0x83f801	                              cmp eax, 1	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x401815b	            0x7407	                            je 0x4018164	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x401815d	          0x83f802	                              cmp eax, 2	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4018160	            0x741a	                            je 0x401817c	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4018162	            0xeb30	                           jmp 0x4018194	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4018164	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x4018168	        0x488b4008	                mov rax, qword [rax + 8]	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x401816c	        0x4883f86b	                           cmp rax, 0x6b	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x4018170	            0x772c	                            ja 0x401819e	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x4018172	      0xb800000000	                              mov eax, 0	      9945	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x4018177	      0xe95a010000	                           jmp 0x40182d6	      9945	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x401817c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x4018180	        0x488b4008	                mov rax, qword [rax + 8]	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x4018184	        0x4883f877	                           cmp rax, 0x77	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x4018188	            0x7717	                            ja 0x40181a1	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x401818a	      0xb800000000	                              mov eax, 0	      9950	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x401818f	      0xe942010000	                           jmp 0x40182d6	      9950	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x4018194	      0xb800000000	                              mov eax, 0	      9954	elf.c	FUNCTION_149	SWITCH_1
0x4018199	      0xe938010000	                           jmp 0x40182d6	      9954	elf.c	FUNCTION_149	SWITCH_1
0x401819e	              0x90	                                     nop	      9946	elf.c	FUNCTION_149	SWITCH_1
0x401819f	            0xeb01	                           jmp 0x40181a2	      9946	elf.c	FUNCTION_149	SWITCH_1
0x40181a1	              0x90	                                     nop	      9951	elf.c	FUNCTION_149	SWITCH_1
0x40181a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9958	elf.c	FUNCTION_149	IF_3
0x40181a6	        0x488b4008	                mov rax, qword [rax + 8]	      9958	elf.c	FUNCTION_149	IF_3
0x40181aa	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9958	elf.c	FUNCTION_149	IF_3
0x40181b1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      9958	elf.c	FUNCTION_149	IF_3
0x40181b5	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9958	elf.c	FUNCTION_149	IF_3
0x40181b9	          0x4889d7	                            mov rdi, rdx	      9958	elf.c	FUNCTION_149	IF_3
0x40181bc	            0xffd0	                                call rax	      9958	elf.c	FUNCTION_149	IF_3
0x40181be	        0x4883f801	                              cmp rax, 1	      9958	elf.c	FUNCTION_149	IF_3
0x40181c2	            0x740a	                            je 0x40181ce	      9958	elf.c	FUNCTION_149	IF_3
0x40181c4	      0xb800000000	                              mov eax, 0	      9959	elf.c	FUNCTION_149	IF_3
0x40181c9	      0xe908010000	                           jmp 0x40182d6	      9959	elf.c	FUNCTION_149	IF_3
0x40181ce	    0x48c745e80400	               mov qword [rbp - 0x18], 4	      9961	elf.c	FUNCTION_149
0x40181d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9964	elf.c	FUNCTION_149	IF_4	CALL_2
0x40181da	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9964	elf.c	FUNCTION_149	IF_4	CALL_2
0x40181e1	         0xfb64004	               movzx eax, byte [rax + 4]	      9964	elf.c	FUNCTION_149	IF_4	CALL_2
0x40181e5	            0x3c01	                               cmp al, 1	      9964	elf.c	FUNCTION_149	IF_4	CALL_2
0x40181e7	            0x7507	                           jne 0x40181f0	      9964	elf.c	FUNCTION_149	IF_4	CALL_2
0x40181e9	      0x488345e804	               add qword [rbp - 0x18], 4	      9965	elf.c	FUNCTION_149	IF_4
0x40181ee	            0xeb0a	                           jmp 0x40181fa	      9965	elf.c	FUNCTION_149	IF_4
0x40181f0	      0x488345e804	               add qword [rbp - 0x18], 4	      9968	elf.c	FUNCTION_149	ELSE_1
0x40181f5	      0x488345e808	               add qword [rbp - 0x18], 8	      9969	elf.c	FUNCTION_149	ELSE_1
0x40181fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9973	elf.c	FUNCTION_149	CALL_3
0x40181fe	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9973	elf.c	FUNCTION_149	CALL_3
0x4018205	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9973	elf.c	FUNCTION_149	CALL_3
0x401820c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9974	elf.c	FUNCTION_149	CALL_4
0x4018210	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9974	elf.c	FUNCTION_149	CALL_4
0x4018214	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9974	elf.c	FUNCTION_149	CALL_4
0x4018218	        0x488d0c02	                    lea rcx, [rdx + rax]	      9974	elf.c	FUNCTION_149	CALL_4
0x401821c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9974	elf.c	FUNCTION_149	CALL_4
0x4018220	      0xba11000000	                           mov edx, 0x11	      9974	elf.c	FUNCTION_149	CALL_4
0x4018225	          0x4889ce	                            mov rsi, rcx	      9974	elf.c	FUNCTION_149	CALL_4
0x4018228	          0x4889c7	                            mov rdi, rax	      9974	elf.c	FUNCTION_149	CALL_4
0x401822b	      0xe800000000	                          call 0x4018230	      9974	elf.c	FUNCTION_149	CALL_4
0x4018230	        0x48894310	             mov qword [rbx + 0x10], rax	      9974	elf.c	FUNCTION_149	CALL_4
0x4018234	      0x488345e811	            add qword [rbp - 0x18], 0x11	      9975	elf.c	FUNCTION_149
0x4018239	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9978	elf.c	FUNCTION_149	CALL_5
0x401823d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9978	elf.c	FUNCTION_149	CALL_5
0x4018244	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9978	elf.c	FUNCTION_149	CALL_5
0x401824b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9979	elf.c	FUNCTION_149	CALL_6
0x401824f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9979	elf.c	FUNCTION_149	CALL_6
0x4018253	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9979	elf.c	FUNCTION_149	CALL_6
0x4018257	        0x488d0c02	                    lea rcx, [rdx + rax]	      9979	elf.c	FUNCTION_149	CALL_6
0x401825b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9979	elf.c	FUNCTION_149	CALL_6
0x401825f	      0xba51000000	                           mov edx, 0x51	      9979	elf.c	FUNCTION_149	CALL_6
0x4018264	          0x4889ce	                            mov rsi, rcx	      9979	elf.c	FUNCTION_149	CALL_6
0x4018267	          0x4889c7	                            mov rdi, rax	      9979	elf.c	FUNCTION_149	CALL_6
0x401826a	      0xe800000000	                          call 0x401826f	      9979	elf.c	FUNCTION_149	CALL_6
0x401826f	        0x48894318	             mov qword [rbx + 0x18], rax	      9979	elf.c	FUNCTION_149	CALL_6
0x4018273	      0x488345e851	           add qword [rbp - 0x18], 0x51 	      9980	elf.c	FUNCTION_149
0x4018278	      0x488345e802	               add qword [rbp - 0x18], 2	      9983	elf.c	FUNCTION_149
0x401827d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9986	elf.c	FUNCTION_149	IF_5
0x4018281	        0x488b4008	                mov rax, qword [rax + 8]	      9986	elf.c	FUNCTION_149	IF_5
0x4018285	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9986	elf.c	FUNCTION_149	IF_5
0x4018289	        0x4883c204	                              add rdx, 4	      9986	elf.c	FUNCTION_149	IF_5
0x401828d	          0x4839d0	                            cmp rax, rdx	      9986	elf.c	FUNCTION_149	IF_5
0x4018290	            0x7307	                           jae 0x4018299	      9986	elf.c	FUNCTION_149	IF_5
0x4018292	      0xb801000000	                              mov eax, 1	      9987	elf.c	FUNCTION_149	IF_5
0x4018297	            0xeb3d	                           jmp 0x40182d6	      9987	elf.c	FUNCTION_149	IF_5
0x4018299	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9989	elf.c	FUNCTION_149	CALL_7
0x401829d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9989	elf.c	FUNCTION_149	CALL_7
0x40182a4	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9989	elf.c	FUNCTION_149	CALL_7
0x40182ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9990	elf.c	FUNCTION_149
0x40182af	        0x488b4008	                mov rax, qword [rax + 8]	      9990	elf.c	FUNCTION_149
0x40182b3	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9990	elf.c	FUNCTION_149
0x40182ba	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      9990	elf.c	FUNCTION_149
0x40182be	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      9990	elf.c	FUNCTION_149
0x40182c2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9990	elf.c	FUNCTION_149
0x40182c6	          0x4801ca	                            add rdx, rcx	      9990	elf.c	FUNCTION_149
0x40182c9	          0x4889d7	                            mov rdi, rdx	      9990	elf.c	FUNCTION_149
0x40182cc	            0xffd0	                                call rax	      9990	elf.c	FUNCTION_149
0x40182ce	          0x894304	                mov dword [rbx + 4], eax	      9990	elf.c	FUNCTION_149
0x40182d1	      0xb801000000	                              mov eax, 1	      9992	elf.c	FUNCTION_149
0x40182d6	        0x4883c428	                           add rsp, 0x28	      9993	elf.c	FUNCTION_149
0x40182da	              0x5b	                                 pop rbx	      9993	elf.c	FUNCTION_149
0x40182db	              0x5d	                                 pop rbp	      9993	elf.c	FUNCTION_149
0x40182dc	              0xc3	                                     ret	      9993	elf.c	FUNCTION_149
assign_file_positions_for_non_load_sections	ELSE,12:DO,0:CALL,30:WHILE,0:FOR,7:IF,39:SWITCH,0:functions,0	762
0x400e45b	              0x55	                                push rbp	      5738	elf.c	FUNCTION_71
0x400e45c	          0x4889e5	                            mov rbp, rsp	      5738	elf.c	FUNCTION_71
0x400e45f	              0x53	                                push rbx	      5738	elf.c	FUNCTION_71
0x400e460	    0x4881ece80000	                           sub rsp, 0xe8	      5738	elf.c	FUNCTION_71
0x400e467	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	      5738	elf.c	FUNCTION_71
0x400e46e	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      5738	elf.c	FUNCTION_71
0x400e475	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5739	elf.c	FUNCTION_71	CALL_1
0x400e47c	        0x488b4008	                mov rax, qword [rax + 8]	      5739	elf.c	FUNCTION_71	CALL_1
0x400e480	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      5739	elf.c	FUNCTION_71	CALL_1
0x400e487	        0x488945a8	             mov qword [rbp - 0x58], rax	      5739	elf.c	FUNCTION_71	CALL_1
0x400e48b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5751	elf.c	FUNCTION_71	CALL_2
0x400e492	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5751	elf.c	FUNCTION_71	CALL_2
0x400e499	        0x488b4058	            mov rax, qword [rax + 0x58] 	      5751	elf.c	FUNCTION_71	CALL_2
0x400e49d	        0x488945b0	             mov qword [rbp - 0x50], rax	      5751	elf.c	FUNCTION_71	CALL_2
0x400e4a1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4a8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4af	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4b5	            0x89c0	                            mov eax, eax	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4b7	    0x488d14c50000	                        lea rdx, [rax*8]	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4bf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4c3	          0x4801d0	                            add rax, rdx	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4c6	        0x488945b8	             mov qword [rbp - 0x48], rax	      5752	elf.c	FUNCTION_71	CALL_3
0x400e4ca	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5753	elf.c	FUNCTION_71	CALL_4
0x400e4d1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5753	elf.c	FUNCTION_71	CALL_4
0x400e4d8	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5753	elf.c	FUNCTION_71	CALL_4
0x400e4df	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5753	elf.c	FUNCTION_71	CALL_4
0x400e4e3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5753	elf.c	FUNCTION_71	CALL_4
0x400e4ea	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5754	elf.c	FUNCTION_71	FOR_1
0x400e4ee	        0x4883c008	                              add rax, 8	      5754	elf.c	FUNCTION_71	FOR_1
0x400e4f2	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      5754	elf.c	FUNCTION_71	FOR_1
0x400e4f9	      0xe9f3020000	                           jmp 0x400e7f1	      5754	elf.c	FUNCTION_71	FOR_1
0x400e4fe	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5758	elf.c	FUNCTION_71	FOR_1
0x400e505	          0x488b00	                    mov rax, qword [rax]	      5758	elf.c	FUNCTION_71	FOR_1
0x400e508	        0x488945c0	             mov qword [rbp - 0x40], rax	      5758	elf.c	FUNCTION_71	FOR_1
0x400e50c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e510	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e514	          0x4885c0	                           test rax, rax	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e517	            0x7461	                            je 0x400e57a	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e519	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e51d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e521	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e528	          0x4885c0	                           test rax, rax	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e52b	            0x7519	                           jne 0x400e546	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e52d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e531	          0x8b4004	                mov eax, dword [rax + 4]	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e534	          0x83f808	                              cmp eax, 8	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e537	            0x7541	                           jne 0x400e57a	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e539	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e53d	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e541	          0x4885c0	                           test rax, rax	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e544	            0x7534	                           jne 0x400e57a	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x400e546	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e54a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e54e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e552	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e556	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e55d	          0x4839c2	                            cmp rdx, rax	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e560	     0xf8483020000	                            je 0x400e7e9	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e566	      0xbe83160000	                         mov esi, 0x1683	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e56b	      0xbf00000000	                              mov edi, 0	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e570	      0xe800000000	                          call 0x400e575	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e575	      0xe96f020000	                           jmp 0x400e7e9	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400e57a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400e57e	        0x488b4008	                mov rax, qword [rax + 8]	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400e582	          0x83e002	                              and eax, 2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400e585	          0x4885c0	                           test rax, rax	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400e588	     0xf84fb000000	                            je 0x400e689	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400e58e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e592	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e596	          0x4885c0	                           test rax, rax	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e599	            0x744b	                            je 0x400e5e6	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e59b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5771	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e59f	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5771	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e5a3	          0x4885c0	                           test rax, rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5a6	            0x740d	                            je 0x400e5b5	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5a8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5773	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e5ac	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5773	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400e5b0	          0x488b18	                    mov rbx, qword [rax]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5b3	            0xeb05	                           jmp 0x400e5ba	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5b5	      0xbb00000000	                              mov ebx, 0	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5ba	      0xbe00000000	                              mov esi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400e5bf	      0xbf00000000	                              mov edi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400e5c4	      0xe800000000	                          call 0x400e5c9	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400e5c9	          0x4889c1	                            mov rcx, rax	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400e5cc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5d3	          0x4889da	                            mov rdx, rbx	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5d6	          0x4889c6	                            mov rsi, rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5d9	          0x4889cf	                            mov rdi, rcx	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5dc	      0xb800000000	                              mov eax, 0	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5e1	      0xe800000000	                          call 0x400e5e6	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400e5e6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e5ed	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e5f0	          0xc1e805	                              shr eax, 5	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e5f3	      0x25ffff0f00	                        and eax, 0xfffff	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e5f8	      0x2500010000	                          and eax, 0x100	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e5fd	            0x85c0	                           test eax, eax	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e5ff	            0x7438	                            je 0x400e639	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e601	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e605	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e609	          0x4885c0	                           test rax, rax	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e60c	            0x742b	                            je 0x400e639	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e60e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e612	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e616	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e61d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e621	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e625	          0x4889ce	                            mov rsi, rcx	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e628	          0x4889c7	                            mov rdi, rax	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e62b	      0xe86fe2ffff	          call sym.vma_page_aligned_bias	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e630	    0x48018578ffff	            add qword [rbp - 0x88], rax 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400e637	            0xeb29	                           jmp 0x400e662	      5777	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400e639	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e63d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e641	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e648	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e64c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e650	          0x4889ce	                            mov rsi, rcx	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e653	          0x4889c7	                            mov rdi, rax	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e656	      0xe844e2ffff	          call sym.vma_page_aligned_bias	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e65b	    0x48018578ffff	            add qword [rbp - 0x88], rax 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400e662	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e669	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e66d	      0xba00000000	                              mov edx, 0	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e672	          0x4889ce	                            mov rsi, rcx	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e675	          0x4889c7	                            mov rdi, rax	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e678	      0xe800000000	                          call 0x400e67d	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e67d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e684	      0xe960010000	                           jmp 0x400e7e9	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x400e689	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e68d	          0x8b4004	                mov eax, dword [rax + 4]	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e690	          0x83f809	                              cmp eax, 9	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e693	            0x740c	                            je 0x400e6a1	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e695	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e699	          0x8b4004	                mov eax, dword [rax + 4]	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e69c	          0x83f804	                              cmp eax, 4	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e69f	            0x7511	                           jne 0x400e6b2	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6a5	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6a9	          0x4885c0	                           test rax, rax	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6ac	     0xf8407010000	                            je 0x400e7b9	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6b2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6b6	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6ba	          0x4885c0	                           test rax, rax	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6bd	            0x7418	                            je 0x400e6d7	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6c3	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6c7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6ca	      0x2500000008	                   and eax, section_end.	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6cf	            0x85c0	                           test eax, eax	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6d1	     0xf85e2000000	                           jne 0x400e7b9	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e6d7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6de	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6e5	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6eb	            0x89c0	                            mov eax, eax	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6ed	    0x488d14c50000	                        lea rdx, [rax*8]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6f5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6f9	          0x4801d0	                            add rax, rdx	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6fc	          0x488b00	                    mov rax, qword [rax]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e6ff	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e703	     0xf84b0000000	                            je 0x400e7b9	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400e709	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x400e710	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x400e717	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x400e71e	          0x4885c0	                           test rax, rax	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x400e721	            0x7432	                            je 0x400e755	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x400e723	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e72a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e731	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e738	          0x8b4050	            mov eax, dword [rax + 0x50] 	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e73b	            0x89c0	                            mov eax, eax	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e73d	    0x488d14c50000	                        lea rdx, [rax*8]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e745	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e749	          0x4801d0	                            add rax, rdx	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e74c	          0x488b00	                    mov rax, qword [rax]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e74f	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e753	            0x7464	                            je 0x400e7b9	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400e755	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e75c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e763	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e76a	          0x8b4050	            mov eax, dword [rax + 0x50] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e76d	            0x89c0	                            mov eax, eax	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e76f	    0x488d14c50000	                        lea rdx, [rax*8]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e777	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e77b	          0x4801d0	                            add rax, rdx	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e77e	          0x488b00	                    mov rax, qword [rax]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e781	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e785	            0x7432	                            je 0x400e7b9	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400e787	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e78e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e795	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e79c	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e79f	            0x89c0	                            mov eax, eax	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e7a1	    0x488d14c50000	                        lea rdx, [rax*8]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e7a9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e7ad	          0x4801d0	                            add rax, rdx	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e7b0	          0x488b00	                    mov rax, qword [rax]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e7b3	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e7b7	            0x750e	                           jne 0x400e7c7	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400e7b9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e7bd	    0x48c74018ffff	mov qword [rax + 0x18], 0xffffffffffffffff	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e7c5	            0xeb22	                           jmp 0x400e7e9	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400e7c7	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x400e7ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x400e7d2	      0xba01000000	                              mov edx, 1	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x400e7d7	          0x4889ce	                            mov rsi, rcx	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x400e7da	          0x4889c7	                            mov rdi, rax	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x400e7dd	      0xe800000000	                          call 0x400e7e2	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x400e7e2	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x400e7e9	    0x48838538ffff	               add qword [rbp - 0xc8], 8	      5754	elf.c	FUNCTION_71	FOR_1
0x400e7f1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5754	elf.c	FUNCTION_71	FOR_1
0x400e7f8	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      5754	elf.c	FUNCTION_71	FOR_1
0x400e7fc	     0xf82fcfcffff	                            jb 0x400e4fe	      5754	elf.c	FUNCTION_71	FOR_1
0x400e802	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      5801	elf.c	FUNCTION_71
0x400e80c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      5802	elf.c	FUNCTION_71
0x400e817	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      5803	elf.c	FUNCTION_71
0x400e822	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5804	elf.c	FUNCTION_71
0x400e826	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5804	elf.c	FUNCTION_71
0x400e82a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5804	elf.c	FUNCTION_71
0x400e82e	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5804	elf.c	FUNCTION_71
0x400e835	           0xfb600	                   movzx eax, byte [rax]	      5804	elf.c	FUNCTION_71
0x400e838	           0xfb6c0	                           movzx eax, al	      5804	elf.c	FUNCTION_71
0x400e83b	          0x4801d0	                            add rax, rdx	      5804	elf.c	FUNCTION_71
0x400e83e	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5804	elf.c	FUNCTION_71
0x400e845	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      5805	elf.c	FUNCTION_71
0x400e850	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      5806	elf.c	FUNCTION_71
0x400e85b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5807	elf.c	FUNCTION_71	CALL_17
0x400e862	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5807	elf.c	FUNCTION_71	CALL_17
0x400e869	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5807	elf.c	FUNCTION_71	CALL_17
0x400e86d	        0x488945c8	             mov qword [rbp - 0x38], rax	      5807	elf.c	FUNCTION_71	CALL_17
0x400e871	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e878	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e87f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e886	          0x488b00	                    mov rax, qword [rax]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e889	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e890	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e894	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e89b	      0xe9f3000000	                           jmp 0x400e993	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e8a0	    0x838528ffffff	               add dword [rbp - 0xd8], 1	      5810	elf.c	FUNCTION_71	FOR_2
0x400e8a7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x400e8ae	          0x488b00	                    mov rax, qword [rax]	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x400e8b1	        0x4883f801	                              cmp rax, 1	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x400e8b5	     0xf85be000000	                           jne 0x400e979	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x400e8bb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8c2	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8c6	          0x83e010	                           and eax, 0x10	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8c9	            0x84c0	                             test al, al	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8cb	            0x7424	                            je 0x400e8f1	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8cd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5816	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8d4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5816	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8d8	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5816	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8df	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5817	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8e6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5817	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8ea	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      5817	elf.c	FUNCTION_71	FOR_2	IF_7
0x400e8f1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e8f8	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e8fc	          0x83e020	                           and eax, 0x20	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e8ff	            0x84c0	                             test al, al	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e901	            0x7477	                            je 0x400e97a	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e903	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e90a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e90e	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e915	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e91c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e920	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x400e927	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5823	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e92e	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5823	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e932	          0x83e010	                           and eax, 0x10	      5823	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e935	            0x84c0	                             test al, al	      5823	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e937	            0x7441	                            je 0x400e97a	      5823	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e939	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5825	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e940	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5825	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e947	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e94b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e952	           0xfb600	                   movzx eax, byte [rax]	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e955	           0xfb6c0	                           movzx eax, al	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e958	    0x48018568ffff	            add qword [rbp - 0x98], rax 	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e95f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e963	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e96a	           0xfb600	                   movzx eax, byte [rax]	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e96d	           0xfb6c0	                           movzx eax, al	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e970	    0x48018570ffff	            add qword [rbp - 0x90], rax 	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e977	            0xeb01	                           jmp 0x400e97a	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400e979	              0x90	                                     nop	      5812	elf.c	FUNCTION_71	FOR_2	IF_6
0x400e97a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e981	          0x488b00	                    mov rax, qword [rax]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e984	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e98b	    0x48838540ffff	           add qword [rbp - 0xc0], 0x40 	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e993	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e99b	     0xf85fffeffff	                           jne 0x400e8a0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400e9a1	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      5832	elf.c	FUNCTION_71	IF_10
0x400e9a9	     0xf8469010000	                            je 0x400eb18	      5832	elf.c	FUNCTION_71	IF_10
0x400e9af	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5832	elf.c	FUNCTION_71	IF_10
0x400e9b7	     0xf845b010000	                            je 0x400eb18	      5832	elf.c	FUNCTION_71	IF_10
0x400e9bd	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5839	elf.c	FUNCTION_71	IF_10	CALL_20
0x400e9c4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5839	elf.c	FUNCTION_71	IF_10	CALL_20
0x400e9c8	    0x41b801000000	                              mov r8d, 1	      5838	elf.c	FUNCTION_71	IF_10
0x400e9ce	      0xb900000000	                              mov ecx, 0	      5838	elf.c	FUNCTION_71	IF_10
0x400e9d3	      0xba00000000	                              mov edx, 0	      5838	elf.c	FUNCTION_71	IF_10
0x400e9d8	      0xbe00000000	                              mov esi, 0	      5838	elf.c	FUNCTION_71	IF_10
0x400e9dd	          0x4889c7	                            mov rdi, rax	      5838	elf.c	FUNCTION_71	IF_10
0x400e9e0	      0xe800000000	                          call 0x400e9e5	      5838	elf.c	FUNCTION_71	IF_10
0x400e9e5	        0x488945d0	             mov qword [rbp - 0x30], rax	      5838	elf.c	FUNCTION_71	IF_10
0x400e9e9	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x400e9ee	     0xf8424010000	                            je 0x400eb18	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x400e9f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400e9f8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400e9fc	            0x84c0	                             test al, al	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400e9fe	            0x7428	                            je 0x400ea28	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea00	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5844	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea04	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      5844	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea08	            0x3c01	                               cmp al, 1	      5844	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea0a	            0x741c	                            je 0x400ea28	      5844	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea0c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5845	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea10	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      5845	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea14	            0x3c02	                               cmp al, 2	      5845	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea16	            0x7410	                            je 0x400ea28	      5845	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea18	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5846	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea1c	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      5846	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea20	            0x3c05	                               cmp al, 5	      5846	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea22	     0xf85f0000000	                           jne 0x400eb18	      5846	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea28	    0x48c745800000	               mov qword [rbp - 0x80], 0	      5848	elf.c	FUNCTION_71	IF_10	IF_11
0x400ea30	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea37	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea3a	            0x85c0	                           test eax, eax	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea3c	            0x7411	                            je 0x400ea4f	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea3e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea45	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea49	        0x48894580	             mov qword [rbp - 0x80], rax	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea4d	            0xeb5b	                           jmp 0x400eaaa	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400ea4f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea56	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea5d	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea64	          0x488b00	                    mov rax, qword [rax]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea67	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea6e	            0xeb30	                           jmp 0x400eaa0	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea70	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea77	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea7a	            0x85c0	                           test eax, eax	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea7c	            0x7411	                            je 0x400ea8f	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea7e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea85	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea89	        0x48894580	             mov qword [rbp - 0x80], rax	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea8d	            0xeb1b	                           jmp 0x400eaaa	      5858	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400ea8f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea96	          0x488b00	                    mov rax, qword [rax]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400ea99	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400eaa0	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400eaa8	            0x75c6	                           jne 0x400ea70	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400eaaa	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eaaf	            0x7428	                            je 0x400ead9	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eab1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eab5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eab9	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eac0	          0x4829c2	                            sub rdx, rax	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eac3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eac7	        0x48895030	             mov qword [rax + 0x30], rdx	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eacb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5864	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400eacf	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      5864	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400ead3	        0x48895028	             mov qword [rax + 0x28], rdx	      5864	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400ead7	            0xeb1b	                           jmp 0x400eaf4	      5864	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400ead9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5868	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400eadd	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5868	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400eae4	        0x48895030	             mov qword [rax + 0x30], rdx	      5868	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400eae8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400eaec	    0x48c740280000	               mov qword [rax + 0x28], 0	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400eaf4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5872	elf.c	FUNCTION_71	IF_10	IF_11
0x400eaf8	        0xc6401803	                mov byte [rax + 0x18], 3	      5872	elf.c	FUNCTION_71	IF_10	IF_11
0x400eafc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5873	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb00	         0xfb65063	           movzx edx, byte [rax + 0x63] 	      5873	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb04	          0x83ca02	                               or edx, 2	      5873	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb07	          0x885063	               mov byte [rax + 0x63], dl	      5873	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb0a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb0e	         0xfb65064	           movzx edx, byte [rax + 0x64] 	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb12	          0x83e2fe	                     and edx, 0xfffffffe	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb15	          0x885064	               mov byte [rax + 0x64], dl	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x400eb18	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb1f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb26	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb2d	          0x488b00	                    mov rax, qword [rax]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb30	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb37	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb3b	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb42	      0xe973060000	                           jmp 0x400f1ba	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400eb47	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x400eb4e	          0x488b00	                    mov rax, qword [rax]	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x400eb51	    0x483d52e57464	                     cmp rax, 0x6474e552	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x400eb57	     0xf85bd030000	                           jne 0x400ef1a	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x400eb5d	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb65	            0x7426	                            je 0x400eb8d	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb67	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5890	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb6e	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	      5890	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb75	        0x48894588	             mov qword [rbp - 0x78], rax	      5890	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb79	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5891	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb80	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      5891	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb87	        0x48894590	             mov qword [rbp - 0x70], rax	      5891	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb8b	            0xeb6f	                           jmp 0x400ebfc	      5891	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400eb8d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400eb94	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400eb97	            0x85c0	                           test eax, eax	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400eb99	            0x7451	                            je 0x400ebec	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400eb9b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x400eba2	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x400eba6	          0x83e008	                              and eax, 8	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x400eba9	            0x84c0	                             test al, al	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x400ebab	            0x7514	                           jne 0x400ebc1	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x400ebad	      0xba00000000	                              mov edx, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400ebb2	      0xbe08170000	                         mov esi, 0x1708	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400ebb7	      0xbf00000000	                              mov edi, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400ebbc	      0xe800000000	                          call 0x400ebc1	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400ebc1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebc8	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebcc	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebd0	        0x48894588	             mov qword [rbp - 0x78], rax	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebd4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebdb	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebdf	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebe3	          0x4801d0	                            add rax, rdx	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebe6	        0x48894590	             mov qword [rbp - 0x70], rax	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebea	            0xeb10	                           jmp 0x400ebfc	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400ebec	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5902	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_8
0x400ebf4	    0x48c745900000	               mov qword [rbp - 0x70], 0	      5903	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_8
0x400ebfc	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      5906	elf.c	FUNCTION_71	FOR_4	IF_15
0x400ec06	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400ec0a	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400ec0e	     0xf83b9020000	                           jae 0x400eecd	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400ec14	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec1b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec22	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec29	          0x488b00	                    mov rax, qword [rax]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec2c	        0x48894598	             mov qword [rbp - 0x68], rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec30	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec34	        0x488945a0	             mov qword [rbp - 0x60], rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec38	      0xe9b4000000	                           jmp 0x400ecf1	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ec3d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec41	          0x488b00	                    mov rax, qword [rax]	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec44	        0x4883f801	                              cmp rax, 1	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec48	     0xf8593000000	                           jne 0x400ece1	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec4e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec52	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec55	            0x85c0	                           test eax, eax	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec57	     0xf8484000000	                            je 0x400ece1	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec5d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec61	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec64	          0x8d50ff	                      lea edx, [rax - 1]	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec67	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec6b	            0x89d2	                            mov edx, edx	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec6d	        0x4883c208	                              add rdx, 8	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec71	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec76	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec7a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec7e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec81	          0x8d48ff	                      lea ecx, [rax - 1]	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec84	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec88	            0x89c9	                            mov ecx, ecx	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec8a	        0x4883c108	                              add rcx, 8	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec8e	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec93	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec96	      0x2502040000	                          and eax, 0x402	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ec9b	      0x3d00040000	                          cmp eax, 0x400	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400eca0	            0x741f	                            je 0x400ecc1	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400eca2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5923	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400eca6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5923	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400eca9	          0x8d48ff	                      lea ecx, [rax - 1]	      5923	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecac	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5923	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecb0	            0x89c9	                            mov ecx, ecx	      5923	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecb2	        0x4883c108	                              add rcx, 8	      5923	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecb6	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      5923	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecbb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecbf	            0xeb05	                           jmp 0x400ecc6	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecc1	      0xb800000000	                              mov eax, 0	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecc6	          0x4801d0	                            add rax, rdx	      5922	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecc9	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400eccd	            0x7612	                           jbe 0x400ece1	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400eccf	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecd3	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecd7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecdb	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecdf	            0x721d	                            jb 0x400ecfe	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ece1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400ece5	          0x488b00	                    mov rax, qword [rax]	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400ece8	        0x48894598	             mov qword [rbp - 0x68], rax	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400ecec	      0x488345a040	           add qword [rbp - 0x60], 0x40 	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400ecf1	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ecf6	     0xf8541ffffff	                           jne 0x400ec3d	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ecfc	            0xeb01	                           jmp 0x400ecff	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400ecfe	              0x90	                                     nop	      5926	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400ecff	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      5929	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21
0x400ed04	     0xf84c3010000	                            je 0x400eecd	      5929	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21
0x400ed0a	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed14	            0xeb47	                           jmp 0x400ed5d	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed16	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5934	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed1a	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      5934	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed20	        0x4883c208	                              add rdx, 8	      5934	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed24	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5934	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed29	        0x488945d8	             mov qword [rbp - 0x28], rax	      5934	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5935	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed31	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5935	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed35	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      5935	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed39	            0x721b	                            jb 0x400ed56	      5935	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed3b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed3f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed43	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed47	            0x730d	                           jae 0x400ed56	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed4d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed51	          0x4885c0	                           test rax, rax	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed54	            0x7518	                           jne 0x400ed6e	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed56	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed5d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed61	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed64	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed6a	            0x77aa	                            ja 0x400ed16	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed6c	            0xeb01	                           jmp 0x400ed6f	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400ed6e	              0x90	                                     nop	      5938	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400ed6f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed73	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed76	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed7c	     0xf864b010000	                           jbe 0x400eecd	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed82	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed86	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed8c	        0x4883c208	                              add rdx, 8	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed90	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed95	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ed99	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400eda0	        0x48895018	             mov qword [rax + 0x18], rdx	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400eda4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400eda8	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edae	        0x4883c208	                              add rdx, 8	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edb2	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edb7	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edbb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edc2	        0x48895020	             mov qword [rax + 0x20], rdx	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edc6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edca	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edd0	        0x4883c208	                              add rdx, 8	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edd4	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edd9	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ede0	          0x4889c2	                            mov rdx, rax	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ede3	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edea	        0x48895010	             mov qword [rax + 0x10], rdx	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edee	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edf5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edf9	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400edfd	          0x4829c2	                            sub rdx, rax	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ee00	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ee07	        0x48895030	             mov qword [rax + 0x30], rdx	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ee0b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5947	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ee12	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5947	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ee16	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5947	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ee1d	        0x48895028	             mov qword [rax + 0x28], rdx	      5947	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ee21	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee28	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee2c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee30	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee34	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee38	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee3c	          0x4801c1	                            add rcx, rax	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee3f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee46	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee4a	          0x4829c1	                            sub rcx, rax	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee4d	          0x4889c8	                            mov rax, rcx	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee50	          0x4839c2	                            cmp rdx, rax	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee53	            0x762c	                           jbe 0x400ee81	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee55	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee59	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee5d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee61	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee65	          0x4801c2	                            add rdx, rax	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee68	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee6f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee73	          0x4829c2	                            sub rdx, rax	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee76	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee7d	        0x48895028	             mov qword [rax + 0x28], rdx	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ee81	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ee88	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ee8c	          0x83e004	                              and eax, 4	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ee8f	            0x84c0	                             test al, al	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ee91	            0x750f	                           jne 0x400eea2	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ee93	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5965	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ee9a	    0x48c740380100	               mov qword [rax + 0x38], 1	      5965	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400eea2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400eea9	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400eead	          0x83e001	                              and eax, 1	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400eeb0	            0x84c0	                             test al, al	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400eeb2	            0x750f	                           jne 0x400eec3	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400eeb4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400eebb	    0x48c740080400	                  mov qword [rax + 8], 4	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400eec3	    0xc7852cffffff	               mov dword [rbp - 0xd4], 1	      5968	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400eecd	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400eed5	            0x7418	                            je 0x400eeef	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400eed7	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400eede	            0x750f	                           jne 0x400eeef	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400eee0	      0xbe55170000	                         mov esi, 0x1755	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400eee5	      0xbf00000000	                              mov edi, 0	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400eeea	      0xe800000000	                          call 0x400eeef	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400eeef	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      5974	elf.c	FUNCTION_71	FOR_4	IF_15	IF_28
0x400eef6	     0xf85a5020000	                           jne 0x400f1a1	      5974	elf.c	FUNCTION_71	FOR_4	IF_15	IF_28
0x400eefc	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5975	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_26
0x400ef03	      0xba40000000	                           mov edx, 0x40	      5975	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_26
0x400ef08	      0xbe00000000	                              mov esi, 0	      5975	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_26
0x400ef0d	          0x4889c7	                            mov rdi, rax	      5975	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_26
0x400ef10	      0xe800000000	                          call 0x400ef15	      5975	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_26
0x400ef15	      0xe987020000	                           jmp 0x400f1a1	      5975	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_26
0x400ef1a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x400ef21	          0x488b00	                    mov rax, qword [rax]	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x400ef24	    0x483d51e57464	                     cmp rax, 0x6474e551	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x400ef2a	            0x7531	                           jne 0x400ef5d	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x400ef2c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef33	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef37	          0x83e008	                              and eax, 8	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef3a	            0x84c0	                             test al, al	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef3c	     0xf845f020000	                            je 0x400f1a1	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef42	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef49	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef4d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef54	        0x48895030	             mov qword [rax + 0x30], rdx	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef58	      0xe944020000	                           jmp 0x400f1a1	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400ef5d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400ef64	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400ef67	            0x85c0	                           test eax, eax	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400ef69	     0xf84a0010000	                            je 0x400f10f	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400ef6f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef76	          0x488b00	                    mov rax, qword [rax]	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef79	        0x4883f801	                              cmp rax, 1	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef7d	     0xf841e020000	                            je 0x400f1a1	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef83	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef8a	          0x488b00	                    mov rax, qword [rax]	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef8d	        0x4883f804	                              cmp rax, 4	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef91	            0x7516	                           jne 0x400efa9	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef93	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef9a	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400ef9e	          0x83e007	                              and eax, 7	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400efa1	            0x3c03	                               cmp al, 3	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400efa3	     0xf84f8010000	                            je 0x400f1a1	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400efa9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400efb0	          0x488b00	                    mov rax, qword [rax]	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400efb3	        0x4883f806	                              cmp rax, 6	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400efb7	            0x7513	                           jne 0x400efcc	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400efb9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400efc0	    0xc74044000000	               mov dword [rax + 0x44], 0	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400efc7	      0xe9d5010000	                           jmp 0x400f1a1	      5995	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400efcc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efd3	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efd7	          0x83e010	                           and eax, 0x10	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efda	            0x84c0	                             test al, al	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efdc	            0x7512	                           jne 0x400eff0	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efde	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efe5	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efe9	          0x83e020	                           and eax, 0x20	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efec	            0x84c0	                             test al, al	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400efee	            0x744c	                            je 0x400f03c	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400eff0	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      6004	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400eff7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6004	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400effb	          0x4829c2	                            sub rdx, rax	      6004	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400effe	          0x4889d0	                            mov rax, rdx	      6004	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400f001	        0x48c1f806	                              sar rax, 6	      6004	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400f005	            0x89c3	                            mov ebx, eax	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400f007	      0xbe00000000	                              mov esi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400f00c	      0xbf00000000	                              mov edi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400f011	      0xe800000000	                          call 0x400f016	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400f016	          0x4889c1	                            mov rcx, rax	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400f019	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400f020	            0x89da	                            mov edx, ebx	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400f022	          0x4889c6	                            mov rsi, rax	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400f025	          0x4889cf	                            mov rdi, rcx	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400f028	      0xb800000000	                              mov eax, 0	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400f02d	      0xe800000000	                          call 0x400f032	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400f032	      0xb800000000	                              mov eax, 0	      6005	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400f037	      0xe9b1010000	                           jmp 0x400f1ed	      6005	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400f03c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6008	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f043	    0x48c740280000	               mov qword [rax + 0x28], 0	      6008	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f04b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f052	        0x488b4048	            mov rax, qword [rax + 0x48] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f056	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f05d	          0x4889c2	                            mov rdx, rax	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f060	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f067	        0x48895010	             mov qword [rax + 0x10], rdx	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400f06b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f072	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f075	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f07b	            0xeb76	                           jmp 0x400f0f3	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f07d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f084	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f08a	        0x4883c208	                              add rdx, 8	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f08e	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f093	        0x488945e0	             mov qword [rbp - 0x20], rax	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f097	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6013	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	CALL_29
0x400f09b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6013	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	CALL_29
0x400f0a2	        0x488945e8	             mov qword [rbp - 0x18], rax	      6013	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	CALL_29
0x400f0a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0aa	          0x8b4004	                mov eax, dword [rax + 4]	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0ad	          0x83f808	                              cmp eax, 8	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0b0	            0x7441	                            je 0x400f0f3	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0b6	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0bd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0c4	        0x488b4048	            mov rax, qword [rax + 0x48] 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0c8	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0cf	          0x4829c2	                            sub rdx, rax	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0d2	          0x4889d0	                            mov rax, rdx	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0d5	          0x4889c2	                            mov rdx, rax	      6017	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6017	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0dc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6017	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0e0	          0x4801c2	                            add rdx, rax	      6017	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0e3	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0ea	        0x48895028	             mov qword [rax + 0x28], rdx	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0ee	      0xe9ae000000	                           jmp 0x400f1a1	      6018	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400f0f3	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f0f9	          0x8d50ff	                      lea edx, [rax - 1]	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f0fc	    0x899534ffffff	             mov dword [rbp - 0xcc], edx	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f102	            0x85c0	                           test eax, eax	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f104	     0xf8573ffffff	                           jne 0x400f07d	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f10a	      0xe992000000	                           jmp 0x400f1a1	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400f10f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f116	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f11a	          0x83e010	                           and eax, 0x10	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f11d	            0x84c0	                             test al, al	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f11f	            0x7438	                            je 0x400f159	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f121	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6025	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f128	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      6025	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f12f	        0x48895018	             mov qword [rax + 0x18], rdx	      6025	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400f133	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f13a	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f13e	          0x83e002	                              and eax, 2	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f141	            0x84c0	                             test al, al	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f143	            0x755c	                           jne 0x400f1a1	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f145	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f14c	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f153	        0x48895020	             mov qword [rax + 0x20], rdx	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f157	            0xeb48	                           jmp 0x400f1a1	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400f159	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f160	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f164	          0x83e020	                           and eax, 0x20	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f167	            0x84c0	                             test al, al	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f169	            0x7436	                            je 0x400f1a1	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f16b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f172	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f179	        0x48895018	             mov qword [rax + 0x18], rdx	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400f17d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f184	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f188	          0x83e002	                              and eax, 2	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f18b	            0x84c0	                             test al, al	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f18d	            0x7512	                           jne 0x400f1a1	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f18f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f196	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f19d	        0x48895020	             mov qword [rax + 0x20], rdx	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400f1a1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400f1a8	          0x488b00	                    mov rax, qword [rax]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400f1ab	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400f1b2	    0x48838540ffff	           add qword [rbp - 0xc0], 0x40 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400f1ba	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400f1c2	     0xf857ff9ffff	                           jne 0x400eb47	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400f1c8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6037	elf.c	FUNCTION_71	CALL_30
0x400f1cf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6037	elf.c	FUNCTION_71	CALL_30
0x400f1d6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6037	elf.c	FUNCTION_71	CALL_30
0x400f1dd	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      6037	elf.c	FUNCTION_71	CALL_30
0x400f1e4	        0x48895040	             mov qword [rax + 0x40], rdx	      6037	elf.c	FUNCTION_71	CALL_30
0x400f1e8	      0xb801000000	                              mov eax, 1	      6039	elf.c	FUNCTION_71
0x400f1ed	    0x4881c4e80000	                           add rsp, 0xe8	      6040	elf.c	FUNCTION_71
0x400f1f4	              0x5b	                                 pop rbx	      6040	elf.c	FUNCTION_71
0x400f1f5	              0x5d	                                 pop rbp	      6040	elf.c	FUNCTION_71
0x400f1f6	              0xc3	                                     ret	      6040	elf.c	FUNCTION_71
elfcore_grok_spu_note	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,2:SWITCH,0:functions,0	55
0x401915b	              0x55	                                push rbp	     10421	elf.c	FUNCTION_160
0x401915c	          0x4889e5	                            mov rbp, rsp	     10421	elf.c	FUNCTION_160
0x401915f	        0x4883ec30	                           sub rsp, 0x30	     10421	elf.c	FUNCTION_160
0x4019163	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     10421	elf.c	FUNCTION_160
0x4019167	        0x488975d0	             mov qword [rbp - 0x30], rsi	     10421	elf.c	FUNCTION_160
0x401916b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10427	elf.c	FUNCTION_160
0x401916f	          0x488b00	                    mov rax, qword [rax]	     10427	elf.c	FUNCTION_160
0x4019172	        0x488945e8	             mov qword [rbp - 0x18], rax	     10427	elf.c	FUNCTION_160
0x4019176	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10428	elf.c	FUNCTION_160	CALL_1
0x401917a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10428	elf.c	FUNCTION_160	CALL_1
0x401917e	          0x4889d6	                            mov rsi, rdx	     10428	elf.c	FUNCTION_160	CALL_1
0x4019181	          0x4889c7	                            mov rdi, rax	     10428	elf.c	FUNCTION_160	CALL_1
0x4019184	      0xe800000000	                          call 0x4019189	     10428	elf.c	FUNCTION_160	CALL_1
0x4019189	        0x488945f0	             mov qword [rbp - 0x10], rax	     10428	elf.c	FUNCTION_160	CALL_1
0x401918d	      0x48837df000	               cmp qword [rbp - 0x10], 0	     10429	elf.c	FUNCTION_160	IF_1
0x4019192	            0x750a	                           jne 0x401919e	     10429	elf.c	FUNCTION_160	IF_1
0x4019194	      0xb800000000	                              mov eax, 0	     10430	elf.c	FUNCTION_160	IF_1
0x4019199	      0xe98d000000	                           jmp 0x401922b	     10430	elf.c	FUNCTION_160	IF_1
0x401919e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10431	elf.c	FUNCTION_160	CALL_2
0x40191a2	        0x488b4818	            mov rcx, qword [rax + 0x18] 	     10431	elf.c	FUNCTION_160	CALL_2
0x40191a6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10431	elf.c	FUNCTION_160	CALL_2
0x40191aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10431	elf.c	FUNCTION_160	CALL_2
0x40191ae	          0x4889ce	                            mov rsi, rcx	     10431	elf.c	FUNCTION_160	CALL_2
0x40191b1	          0x4889c7	                            mov rdi, rax	     10431	elf.c	FUNCTION_160	CALL_2
0x40191b4	      0xe800000000	                          call 0x40191b9	     10431	elf.c	FUNCTION_160	CALL_2
0x40191b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10432	elf.c	FUNCTION_160
0x40191bd	        0x488d50ff	                      lea rdx, [rax - 1]	     10432	elf.c	FUNCTION_160
0x40191c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10432	elf.c	FUNCTION_160
0x40191c5	          0x4801d0	                            add rax, rdx	     10432	elf.c	FUNCTION_160
0x40191c8	          0xc60000	                       mov byte [rax], 0	     10432	elf.c	FUNCTION_160
0x40191cb	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	     10434	elf.c	FUNCTION_160	CALL_3
0x40191cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10434	elf.c	FUNCTION_160	CALL_3
0x40191d3	      0xba00010000	                          mov edx, 0x100	     10434	elf.c	FUNCTION_160	CALL_3
0x40191d8	          0x4889ce	                            mov rsi, rcx	     10434	elf.c	FUNCTION_160	CALL_3
0x40191db	          0x4889c7	                            mov rdi, rax	     10434	elf.c	FUNCTION_160	CALL_3
0x40191de	      0xe800000000	                          call 0x40191e3	     10434	elf.c	FUNCTION_160	CALL_3
0x40191e3	        0x488945f8	                mov qword [rbp - 8], rax	     10434	elf.c	FUNCTION_160	CALL_3
0x40191e7	      0x48837df800	                  cmp qword [rbp - 8], 0	     10435	elf.c	FUNCTION_160	IF_2
0x40191ec	            0x7507	                           jne 0x40191f5	     10435	elf.c	FUNCTION_160	IF_2
0x40191ee	      0xb800000000	                              mov eax, 0	     10436	elf.c	FUNCTION_160	IF_2
0x40191f3	            0xeb36	                           jmp 0x401922b	     10436	elf.c	FUNCTION_160	IF_2
0x40191f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10438	elf.c	FUNCTION_160
0x40191f9	        0x488b5008	                mov rdx, qword [rax + 8]	     10438	elf.c	FUNCTION_160
0x40191fd	        0x488b45f8	                mov rax, qword [rbp - 8]	     10438	elf.c	FUNCTION_160
0x4019201	        0x48895038	             mov qword [rax + 0x38], rdx	     10438	elf.c	FUNCTION_160
0x4019205	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10439	elf.c	FUNCTION_160
0x4019209	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10439	elf.c	FUNCTION_160
0x401920d	          0x4889c2	                            mov rdx, rax	     10439	elf.c	FUNCTION_160
0x4019210	        0x488b45f8	                mov rax, qword [rbp - 8]	     10439	elf.c	FUNCTION_160
0x4019214	    0x488990900000	             mov qword [rax + 0x90], rdx	     10439	elf.c	FUNCTION_160
0x401921b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10440	elf.c	FUNCTION_160
0x401921f	    0xc74070010000	               mov dword [rax + 0x70], 1	     10440	elf.c	FUNCTION_160
0x4019226	      0xb801000000	                              mov eax, 1	     10442	elf.c	FUNCTION_160
0x401922b	              0xc9	                                   leave	     10443	elf.c	FUNCTION_160
0x401922c	              0xc3	                                     ret	     10443	elf.c	FUNCTION_160
_bfd_elf_post_process_headers	ELSE,0:DO,0:CALL,3:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	29
0x401b6d1	              0x55	                                push rbp	     11510	elf.c	FUNCTION_201
0x401b6d2	          0x4889e5	                            mov rbp, rsp	     11510	elf.c	FUNCTION_201
0x401b6d5	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11510	elf.c	FUNCTION_201
0x401b6d9	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11510	elf.c	FUNCTION_201
0x401b6dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11513	elf.c	FUNCTION_201	CALL_1
0x401b6e1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     11513	elf.c	FUNCTION_201	CALL_1
0x401b6e8	        0x488945f8	                mov qword [rbp - 8], rax	     11513	elf.c	FUNCTION_201	CALL_1
0x401b6ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11515	elf.c	FUNCTION_201	CALL_2
0x401b6f0	        0x488b4008	                mov rax, qword [rax + 8]	     11515	elf.c	FUNCTION_201	CALL_2
0x401b6f4	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11515	elf.c	FUNCTION_201	CALL_2
0x401b6fb	          0x8b400c	              mov eax, dword [rax + 0xc]	     11515	elf.c	FUNCTION_201	CALL_2
0x401b6fe	            0x89c2	                            mov edx, eax	     11515	elf.c	FUNCTION_201	CALL_2
0x401b700	        0x488b45f8	                mov rax, qword [rbp - 8]	     11515	elf.c	FUNCTION_201	CALL_2
0x401b704	          0x885007	                  mov byte [rax + 7], dl	     11515	elf.c	FUNCTION_201	CALL_2
0x401b707	        0x488b45f8	                mov rax, qword [rbp - 8]	     11520	elf.c	FUNCTION_201	IF_1
0x401b70b	         0xfb64007	               movzx eax, byte [rax + 7]	     11520	elf.c	FUNCTION_201	IF_1
0x401b70f	            0x84c0	                             test al, al	     11520	elf.c	FUNCTION_201	IF_1
0x401b711	            0x7521	                           jne 0x401b734	     11520	elf.c	FUNCTION_201	IF_1
0x401b713	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401b717	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401b71e	     0xfb6808d0c00	          movzx eax, byte [rax + 0xc8d] 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401b725	          0x83e01c	                           and eax, 0x1c	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401b728	            0x84c0	                             test al, al	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401b72a	            0x7408	                            je 0x401b734	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401b72c	        0x488b45f8	                mov rax, qword [rbp - 8]	     11522	elf.c	FUNCTION_201	IF_1
0x401b730	        0xc6400703	                   mov byte [rax + 7], 3	     11522	elf.c	FUNCTION_201	IF_1
0x401b734	              0x90	                                     nop	     11523	elf.c	FUNCTION_201
0x401b735	              0x5d	                                 pop rbp	     11523	elf.c	FUNCTION_201
0x401b736	              0xc3	                                     ret	     11523	elf.c	FUNCTION_201
elfcore_grok_s390_timer	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016d19	              0x55	                                push rbp	      9246	elf.c	FUNCTION_123
0x4016d1a	          0x4889e5	                            mov rbp, rsp	      9246	elf.c	FUNCTION_123
0x4016d1d	        0x4883ec10	                           sub rsp, 0x10	      9246	elf.c	FUNCTION_123
0x4016d21	        0x48897df8	                mov qword [rbp - 8], rdi	      9246	elf.c	FUNCTION_123
0x4016d25	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9246	elf.c	FUNCTION_123
0x4016d29	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9247	elf.c	FUNCTION_123	CALL_1
0x4016d2d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9247	elf.c	FUNCTION_123	CALL_1
0x4016d31	      0xbe00000000	                              mov esi, 0	      9247	elf.c	FUNCTION_123	CALL_1
0x4016d36	          0x4889c7	                            mov rdi, rax	      9247	elf.c	FUNCTION_123	CALL_1
0x4016d39	      0xe8bbfeffff	call sym.elfcore_make_note_pseudosection	      9247	elf.c	FUNCTION_123	CALL_1
0x4016d3e	              0xc9	                                   leave	      9248	elf.c	FUNCTION_123
0x4016d3f	              0xc3	                                     ret	      9248	elf.c	FUNCTION_123
get_segment_type	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,1:functions,0	63
0x4003d2a	              0x55	                                push rbp	      1586	elf.c	FUNCTION_32
0x4003d2b	          0x4889e5	                            mov rbp, rsp	      1586	elf.c	FUNCTION_32
0x4003d2e	          0x897dec	             mov dword [rbp - 0x14], edi	      1586	elf.c	FUNCTION_32
0x4003d31	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d34	          0x83f805	                              cmp eax, 5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d37	     0xf8488000000	                            je 0x4003dc5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d3d	          0x83f805	                              cmp eax, 5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d40	            0x7727	                            ja 0x4003d69	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d42	          0x83f802	                              cmp eax, 2	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d45	            0x7460	                            je 0x4003da7	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d47	          0x83f802	                              cmp eax, 2	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d4a	            0x770e	                            ja 0x4003d5a	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d4c	            0x85c0	                           test eax, eax	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d4e	            0x7443	                            je 0x4003d93	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d50	          0x83f801	                              cmp eax, 1	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d53	            0x7448	                            je 0x4003d9d	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d55	      0xe9a7000000	                           jmp 0x4003e01	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d5a	          0x83f803	                              cmp eax, 3	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d5d	            0x7452	                            je 0x4003db1	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d5f	          0x83f804	                              cmp eax, 4	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d62	            0x7457	                            je 0x4003dbb	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d64	      0xe998000000	                           jmp 0x4003e01	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d69	      0x3d50e57464	                     cmp eax, 0x6474e550	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d6e	            0x7473	                            je 0x4003de3	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d70	      0x3d50e57464	                     cmp eax, 0x6474e550	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d75	            0x770c	                            ja 0x4003d83	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d77	          0x83f806	                              cmp eax, 6	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d7a	            0x7453	                            je 0x4003dcf	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d7c	          0x83f807	                              cmp eax, 7	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d7f	            0x7458	                            je 0x4003dd9	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d81	            0xeb7e	                           jmp 0x4003e01	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d83	      0x3d51e57464	                     cmp eax, 0x6474e551	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d88	            0x7463	                            je 0x4003ded	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d8a	      0x3d52e57464	                     cmp eax, 0x6474e552	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d8f	            0x7466	                            je 0x4003df7	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d91	            0xeb6e	                           jmp 0x4003e01	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4003d93	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1590	elf.c	FUNCTION_32	SWITCH_1
0x4003d9b	            0xeb6d	                           jmp 0x4003e0a	      1590	elf.c	FUNCTION_32	SWITCH_1
0x4003d9d	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1591	elf.c	FUNCTION_32	SWITCH_1
0x4003da5	            0xeb63	                           jmp 0x4003e0a	      1591	elf.c	FUNCTION_32	SWITCH_1
0x4003da7	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1592	elf.c	FUNCTION_32	SWITCH_1
0x4003daf	            0xeb59	                           jmp 0x4003e0a	      1592	elf.c	FUNCTION_32	SWITCH_1
0x4003db1	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1593	elf.c	FUNCTION_32	SWITCH_1
0x4003db9	            0xeb4f	                           jmp 0x4003e0a	      1593	elf.c	FUNCTION_32	SWITCH_1
0x4003dbb	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1594	elf.c	FUNCTION_32	SWITCH_1
0x4003dc3	            0xeb45	                           jmp 0x4003e0a	      1594	elf.c	FUNCTION_32	SWITCH_1
0x4003dc5	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4003dcd	            0xeb3b	                           jmp 0x4003e0a	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4003dcf	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1596	elf.c	FUNCTION_32	SWITCH_1
0x4003dd7	            0xeb31	                           jmp 0x4003e0a	      1596	elf.c	FUNCTION_32	SWITCH_1
0x4003dd9	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1597	elf.c	FUNCTION_32	SWITCH_1
0x4003de1	            0xeb27	                           jmp 0x4003e0a	      1597	elf.c	FUNCTION_32	SWITCH_1
0x4003de3	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1598	elf.c	FUNCTION_32	SWITCH_1
0x4003deb	            0xeb1d	                           jmp 0x4003e0a	      1598	elf.c	FUNCTION_32	SWITCH_1
0x4003ded	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1599	elf.c	FUNCTION_32	SWITCH_1
0x4003df5	            0xeb13	                           jmp 0x4003e0a	      1599	elf.c	FUNCTION_32	SWITCH_1
0x4003df7	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1600	elf.c	FUNCTION_32	SWITCH_1
0x4003dff	            0xeb09	                           jmp 0x4003e0a	      1600	elf.c	FUNCTION_32	SWITCH_1
0x4003e01	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1601	elf.c	FUNCTION_32	SWITCH_1
0x4003e09	              0x90	                                     nop	      1601	elf.c	FUNCTION_32	SWITCH_1
0x4003e0a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	elf.c	FUNCTION_32
0x4003e0e	              0x5d	                                 pop rbp	      1604	elf.c	FUNCTION_32
0x4003e0f	              0xc3	                                     ret	      1604	elf.c	FUNCTION_32
elfcore_write_s390_gs_bc	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a10c	              0x55	                                push rbp	     10972	elf.c	FUNCTION_185
0x401a10d	          0x4889e5	                            mov rbp, rsp	     10972	elf.c	FUNCTION_185
0x401a110	        0x4883ec40	                           sub rsp, 0x40	     10972	elf.c	FUNCTION_185
0x401a114	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10972	elf.c	FUNCTION_185
0x401a118	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10972	elf.c	FUNCTION_185
0x401a11c	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10972	elf.c	FUNCTION_185
0x401a120	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10972	elf.c	FUNCTION_185
0x401a124	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10972	elf.c	FUNCTION_185
0x401a128	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10973	elf.c	FUNCTION_185
0x401a130	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10974	elf.c	FUNCTION_185	CALL_1
0x401a134	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10974	elf.c	FUNCTION_185	CALL_1
0x401a138	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10974	elf.c	FUNCTION_185	CALL_1
0x401a13c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10974	elf.c	FUNCTION_185	CALL_1
0x401a140	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10974	elf.c	FUNCTION_185	CALL_1
0x401a144	        0x4883ec08	                              sub rsp, 8	     10974	elf.c	FUNCTION_185	CALL_1
0x401a148	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10974	elf.c	FUNCTION_185	CALL_1
0x401a14b	              0x57	                                push rdi	     10974	elf.c	FUNCTION_185	CALL_1
0x401a14c	          0x4d89c1	                              mov r9, r8	     10974	elf.c	FUNCTION_185	CALL_1
0x401a14f	    0x41b80c030000	                          mov r8d, 0x30c	     10974	elf.c	FUNCTION_185	CALL_1
0x401a155	          0x4889c7	                            mov rdi, rax	     10974	elf.c	FUNCTION_185	CALL_1
0x401a158	      0xe800000000	                          call 0x401a15d	     10974	elf.c	FUNCTION_185	CALL_1
0x401a15d	        0x4883c410	                           add rsp, 0x10	     10974	elf.c	FUNCTION_185	CALL_1
0x401a161	              0xc9	                                   leave	     10977	elf.c	FUNCTION_185
0x401a162	              0xc3	                                     ret	     10977	elf.c	FUNCTION_185
elfcore_grok_s390_vxrs_low	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016e51	              0x55	                                push rbp	      9294	elf.c	FUNCTION_131
0x4016e52	          0x4889e5	                            mov rbp, rsp	      9294	elf.c	FUNCTION_131
0x4016e55	        0x4883ec10	                           sub rsp, 0x10	      9294	elf.c	FUNCTION_131
0x4016e59	        0x48897df8	                mov qword [rbp - 8], rdi	      9294	elf.c	FUNCTION_131
0x4016e5d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9294	elf.c	FUNCTION_131
0x4016e61	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9295	elf.c	FUNCTION_131	CALL_1
0x4016e65	        0x488b45f8	                mov rax, qword [rbp - 8]	      9295	elf.c	FUNCTION_131	CALL_1
0x4016e69	      0xbe00000000	                              mov esi, 0	      9295	elf.c	FUNCTION_131	CALL_1
0x4016e6e	          0x4889c7	                            mov rdi, rax	      9295	elf.c	FUNCTION_131	CALL_1
0x4016e71	      0xe883fdffff	call sym.elfcore_make_note_pseudosection	      9295	elf.c	FUNCTION_131	CALL_1
0x4016e76	              0xc9	                                   leave	      9296	elf.c	FUNCTION_131
0x4016e77	              0xc3	                                     ret	      9296	elf.c	FUNCTION_131
_bfd_elf_map_sections_to_segments	ELSE,14:DO,0:CALL,44:WHILE,3:FOR,8:IF,63:SWITCH,0:functions,0	1195
0x400b039	              0x55	                                push rbp	      4575	elf.c	FUNCTION_65
0x400b03a	          0x4889e5	                            mov rbp, rsp	      4575	elf.c	FUNCTION_65
0x400b03d	    0x4881ecf00000	                           sub rsp, 0xf0	      4575	elf.c	FUNCTION_65
0x400b044	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	      4575	elf.c	FUNCTION_65
0x400b04b	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      4575	elf.c	FUNCTION_65
0x400b052	    0x64488b042528	                mov rax, qword fs:[0x28]	      4575	elf.c	FUNCTION_65
0x400b05b	        0x488945f8	                mov qword [rbp - 8], rax	      4575	elf.c	FUNCTION_65
0x400b05f	            0x31c0	                            xor eax, eax	      4575	elf.c	FUNCTION_65
0x400b061	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      4578	elf.c	FUNCTION_65
0x400b069	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4579	elf.c	FUNCTION_65	CALL_1
0x400b070	        0x488b4008	                mov rax, qword [rax + 8]	      4579	elf.c	FUNCTION_65	CALL_1
0x400b074	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4579	elf.c	FUNCTION_65	CALL_1
0x400b07b	        0x488945d0	             mov qword [rbp - 0x30], rax	      4579	elf.c	FUNCTION_65	CALL_1
0x400b07f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4582	elf.c	FUNCTION_65	CALL_2
0x400b086	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4582	elf.c	FUNCTION_65	CALL_2
0x400b08d	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4582	elf.c	FUNCTION_65	CALL_2
0x400b094	          0x488b00	                    mov rax, qword [rax]	      4582	elf.c	FUNCTION_65	CALL_2
0x400b097	          0x4885c0	                           test rax, rax	      4582	elf.c	FUNCTION_65	CALL_2
0x400b09a	           0xf94c0	                                 sete al	      4582	elf.c	FUNCTION_65	CALL_2
0x400b09d	           0xfb6c0	                           movzx eax, al	      4582	elf.c	FUNCTION_65	CALL_2
0x400b0a0	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      4582	elf.c	FUNCTION_65	CALL_2
0x400b0a6	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      4584	elf.c	FUNCTION_65	IF_1
0x400b0ae	            0x7425	                            je 0x400b0d5	      4584	elf.c	FUNCTION_65	IF_1
0x400b0b0	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	      4585	elf.c	FUNCTION_65	IF_1
0x400b0b7	           0xf94c2	                                 sete dl	      4585	elf.c	FUNCTION_65	IF_1
0x400b0ba	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4585	elf.c	FUNCTION_65	IF_1
0x400b0c1	          0x83e201	                              and edx, 1	      4585	elf.c	FUNCTION_65	IF_1
0x400b0c4	            0x89d1	                            mov ecx, edx	      4585	elf.c	FUNCTION_65	IF_1
0x400b0c6	          0xc1e104	                              shl ecx, 4	      4585	elf.c	FUNCTION_65	IF_1
0x400b0c9	         0xfb65006	               movzx edx, byte [rax + 6]	      4585	elf.c	FUNCTION_65	IF_1
0x400b0cd	          0x83e2ef	                     and edx, 0xffffffef	      4585	elf.c	FUNCTION_65	IF_1
0x400b0d0	             0x9ca	                             or edx, ecx	      4585	elf.c	FUNCTION_65	IF_1
0x400b0d2	          0x885006	                  mov byte [rax + 6], dl	      4585	elf.c	FUNCTION_65	IF_1
0x400b0d5	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	      4587	elf.c	FUNCTION_65	IF_2
0x400b0dc	     0xf8426150000	                            je 0x400c608	      4587	elf.c	FUNCTION_65	IF_2
0x400b0e2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4587	elf.c	FUNCTION_65	IF_2
0x400b0e9	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4587	elf.c	FUNCTION_65	IF_2
0x400b0ef	            0x85c0	                           test eax, eax	      4587	elf.c	FUNCTION_65	IF_2
0x400b0f1	     0xf8411150000	                            je 0x400c608	      4587	elf.c	FUNCTION_65	IF_2
0x400b0f7	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	      4598	elf.c	FUNCTION_65	IF_2
0x400b101	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      4601	elf.c	FUNCTION_65	IF_2
0x400b10b	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4602	elf.c	FUNCTION_65	IF_2
0x400b113	    0x48c745980000	               mov qword [rbp - 0x68], 0	      4603	elf.c	FUNCTION_65	IF_2
0x400b11b	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      4606	elf.c	FUNCTION_65	IF_2
0x400b123	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      4607	elf.c	FUNCTION_65	IF_2
0x400b12d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400b134	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400b13a	            0x89c0	                            mov eax, eax	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400b13c	      0xbe08000000	                              mov esi, 8	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400b141	          0x4889c7	                            mov rdi, rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400b144	      0xe800000000	                          call 0x400b149	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400b149	        0x488945c8	             mov qword [rbp - 0x38], rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400b14d	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x400b152	     0xf8465150000	                            je 0x400c6bd	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x400b158	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b15f	          0x4889c7	                            mov rdi, rax	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b162	      0xe800000000	                          call 0x400b167	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b167	          0x83e801	                              sub eax, 1	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b16a	      0xba01000000	                              mov edx, 1	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b16f	            0x89c1	                            mov ecx, eax	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b171	          0x48d3e2	                             shl rdx, cl	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b174	          0x4889d0	                            mov rax, rdx	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b177	        0x4883e801	                              sub rax, 1	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b17b	        0x488945d8	             mov qword [rbp - 0x28], rax	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x400b17f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4620	elf.c	FUNCTION_65	IF_2
0x400b183	          0x4801c0	                            add rax, rax	      4620	elf.c	FUNCTION_65	IF_2
0x400b186	        0x4883c001	                              add rax, 1	      4620	elf.c	FUNCTION_65	IF_2
0x400b18a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4620	elf.c	FUNCTION_65	IF_2
0x400b18e	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      4622	elf.c	FUNCTION_65	IF_2
0x400b198	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b19f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b1a6	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b1ad	      0xe99e000000	                           jmp 0x400b250	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b1b2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1b9	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1bc	          0x83e001	                              and eax, 1	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1bf	            0x85c0	                           test eax, eax	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1c1	            0x747b	                            je 0x400b23e	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1c3	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1c9	    0x488d14c50000	                        lea rdx, [rax*8]	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1d5	          0x4801c2	                            add rdx, rax	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1d8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1df	          0x488902	                    mov qword [rdx], rax	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1e2	    0x83852cffffff	               add dword [rbp - 0xd4], 1	      4628	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400b1e9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b1f0	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b1f4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b1fb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b1ff	          0x4801d0	                            add rax, rdx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b202	        0x482345d8	             and rax, qword [rbp - 0x28]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b206	          0x4889c2	                            mov rdx, rax	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b209	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b210	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b214	        0x482345d8	             and rax, qword [rbp - 0x28]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b218	          0x4839c2	                            cmp rdx, rax	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b21b	            0x7321	                           jae 0x400b23e	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b21d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b224	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b228	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b22f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b233	          0x4801d0	                            add rax, rdx	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b236	        0x482345d8	             and rax, qword [rbp - 0x28]	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b23a	        0x488945a8	             mov qword [rbp - 0x58], rax	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400b23e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b245	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b249	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b250	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b258	     0xf8554ffffff	                           jne 0x400b1b2	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400b25e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400b265	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400b26b	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400b271	            0x730f	                           jae 0x400b282	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400b273	      0xbe1a120000	                         mov esi, 0x121a	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400b278	      0xbf00000000	                              mov edi, 0	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400b27d	      0xe800000000	                          call 0x400b282	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400b282	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4635	elf.c	FUNCTION_65	IF_2
0x400b288	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      4635	elf.c	FUNCTION_65	IF_2
0x400b28e	    0x8bb528ffffff	             mov esi, dword [rbp - 0xd8]	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x400b294	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x400b298	      0xb900000000	                              mov ecx, 0	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x400b29d	      0xba08000000	                              mov edx, 8	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x400b2a2	          0x4889c7	                            mov rdi, rax	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x400b2a5	      0xe800000000	                          call 0x400b2aa	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x400b2aa	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4641	elf.c	FUNCTION_65	IF_2
0x400b2b5	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4642	elf.c	FUNCTION_65	IF_2
0x400b2bc	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4642	elf.c	FUNCTION_65	IF_2
0x400b2c3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x400b2ca	      0xbe00000000	                              mov esi, 0	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x400b2cf	          0x4889c7	                            mov rdi, rax	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x400b2d2	      0xe800000000	                          call 0x400b2d7	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x400b2d7	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x400b2de	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x400b2e6	     0xf844e010000	                            je 0x400b43a	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x400b2ec	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x400b2f3	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x400b2f6	          0x83e002	                              and eax, 2	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x400b2f9	            0x85c0	                           test eax, eax	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x400b2fb	     0xf8439010000	                            je 0x400b43a	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x400b301	    0x48c745e05000	           mov qword [rbp - 0x20], 0x50 	      4650	elf.c	FUNCTION_65	IF_2	IF_6
0x400b309	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x400b30d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x400b314	          0x4889d6	                            mov rsi, rdx	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x400b317	          0x4889c7	                            mov rdi, rax	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x400b31a	      0xe800000000	                          call 0x400b31f	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x400b31f	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x400b326	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x400b32e	     0xf848c130000	                            je 0x400c6c0	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x400b334	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4654	elf.c	FUNCTION_65	IF_2	IF_6
0x400b33b	    0x48c700000000	                      mov qword [rax], 0	      4654	elf.c	FUNCTION_65	IF_2	IF_6
0x400b342	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4655	elf.c	FUNCTION_65	IF_2	IF_6
0x400b349	    0x48c740080600	                  mov qword [rax + 8], 6	      4655	elf.c	FUNCTION_65	IF_2	IF_6
0x400b351	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4656	elf.c	FUNCTION_65	IF_2	IF_6
0x400b358	    0x48c740100400	               mov qword [rax + 0x10], 4	      4656	elf.c	FUNCTION_65	IF_2	IF_6
0x400b360	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4657	elf.c	FUNCTION_65	IF_2	IF_6
0x400b367	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      4657	elf.c	FUNCTION_65	IF_2	IF_6
0x400b36b	          0x83ca01	                               or edx, 1	      4657	elf.c	FUNCTION_65	IF_2	IF_6
0x400b36e	          0x885040	               mov byte [rax + 0x40], dl	      4657	elf.c	FUNCTION_65	IF_2	IF_6
0x400b371	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4658	elf.c	FUNCTION_65	IF_2	IF_6
0x400b378	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      4658	elf.c	FUNCTION_65	IF_2	IF_6
0x400b37c	          0x83ca20	                            or edx, 0x20	      4658	elf.c	FUNCTION_65	IF_2	IF_6
0x400b37f	          0x885040	               mov byte [rax + 0x40], dl	      4658	elf.c	FUNCTION_65	IF_2	IF_6
0x400b382	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	      4659	elf.c	FUNCTION_65	IF_2	IF_6
0x400b38c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4660	elf.c	FUNCTION_65	IF_2	IF_6
0x400b393	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4660	elf.c	FUNCTION_65	IF_2	IF_6
0x400b39a	          0x488910	                    mov qword [rax], rdx	      4660	elf.c	FUNCTION_65	IF_2	IF_6
0x400b39d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4661	elf.c	FUNCTION_65	IF_2	IF_6
0x400b3a4	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4661	elf.c	FUNCTION_65	IF_2	IF_6
0x400b3ab	    0x48c745e05000	           mov qword [rbp - 0x20], 0x50 	      4663	elf.c	FUNCTION_65	IF_2	IF_6
0x400b3b3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x400b3b7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x400b3be	          0x4889d6	                            mov rsi, rdx	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x400b3c1	          0x4889c7	                            mov rdi, rax	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x400b3c4	      0xe800000000	                          call 0x400b3c9	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x400b3c9	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x400b3d0	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x400b3d8	     0xf84e5120000	                            je 0x400c6c3	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x400b3de	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4667	elf.c	FUNCTION_65	IF_2	IF_6
0x400b3e5	    0x48c700000000	                      mov qword [rax], 0	      4667	elf.c	FUNCTION_65	IF_2	IF_6
0x400b3ec	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4668	elf.c	FUNCTION_65	IF_2	IF_6
0x400b3f3	    0x48c740080300	                  mov qword [rax + 8], 3	      4668	elf.c	FUNCTION_65	IF_2	IF_6
0x400b3fb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4669	elf.c	FUNCTION_65	IF_2	IF_6
0x400b402	    0xc74044010000	               mov dword [rax + 0x44], 1	      4669	elf.c	FUNCTION_65	IF_2	IF_6
0x400b409	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x400b410	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x400b417	        0x48895048	             mov qword [rax + 0x48], rdx	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x400b41b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x400b422	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x400b429	          0x488910	                    mov qword [rax], rdx	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x400b42c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4673	elf.c	FUNCTION_65	IF_2	IF_6
0x400b433	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4673	elf.c	FUNCTION_65	IF_2	IF_6
0x400b43a	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      4679	elf.c	FUNCTION_65	IF_2
0x400b445	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      4680	elf.c	FUNCTION_65	IF_2
0x400b450	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      4681	elf.c	FUNCTION_65	IF_2
0x400b45a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4682	elf.c	FUNCTION_65	IF_2
0x400b45e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4682	elf.c	FUNCTION_65	IF_2
0x400b462	        0x48894580	             mov qword [rbp - 0x80], rax	      4682	elf.c	FUNCTION_65	IF_2
0x400b466	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      4686	elf.c	FUNCTION_65	IF_2	IF_9
0x400b46b	            0x7508	                           jne 0x400b475	      4686	elf.c	FUNCTION_65	IF_2	IF_9
0x400b46d	    0x48c745800100	               mov qword [rbp - 0x80], 1	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x400b475	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      4688	elf.c	FUNCTION_65	IF_2
0x400b47f	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      4689	elf.c	FUNCTION_65	IF_2
0x400b489	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x400b490	      0xbe00000000	                              mov esi, 0	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x400b495	          0x4889c7	                            mov rdi, rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x400b498	      0xe800000000	                          call 0x400b49d	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x400b49d	        0x488945a0	             mov qword [rbp - 0x60], rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x400b4a1	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4a6	            0x7416	                            je 0x400b4be	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4a8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4692	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4ac	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4692	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4af	          0x83e002	                              and eax, 2	      4692	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4b2	            0x85c0	                           test eax, eax	      4692	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4b4	            0x7508	                           jne 0x400b4be	      4692	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4b6	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400b4be	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x400b4c5	     0xf840f010000	                            je 0x400b5da	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x400b4cb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x400b4d2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x400b4d9	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x400b4e0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x400b4e4	        0x488945b0	             mov qword [rbp - 0x50], rax	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x400b4e8	      0x48837db0ff	cmp qword [rbp - 0x50], 0xffffffffffffffff	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x400b4ed	            0x751d	                           jne 0x400b50c	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x400b4ef	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x400b4f6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x400b4fd	          0x4889d6	                            mov rsi, rdx	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x400b500	          0x4889c7	                            mov rdi, rax	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x400b503	      0xe890f4ffff	        call sym.get_program_header_size	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x400b508	        0x488945b0	             mov qword [rbp - 0x50], rax	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x400b50c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x400b510	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x400b517	           0xfb600	                   movzx eax, byte [rax]	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x400b51a	           0xfb6c0	                           movzx eax, al	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x400b51d	        0x480145b0	            add qword [rbp - 0x50], rax 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x400b521	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b528	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b52b	          0xc1e805	                              shr eax, 5	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b52e	      0x25ffff0f00	                        and eax, 0xfffff	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b533	      0x2500010000	                          and eax, 0x100	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b538	            0x85c0	                           test eax, eax	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b53a	            0x7464	                            je 0x400b5a0	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b53c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b540	          0x488b00	                    mov rax, qword [rax]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b543	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b547	        0x482345d8	             and rax, qword [rbp - 0x28]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b54b	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b54f	            0x724f	                            jb 0x400b5a0	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b551	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b555	          0x488b00	                    mov rax, qword [rax]	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b558	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b55c	        0x482345d8	             and rax, qword [rbp - 0x28]	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b560	      0xba00000000	                              mov edx, 0	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b565	        0x48f77580	                  div qword [rbp - 0x80]	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b569	          0x4889d1	                            mov rcx, rdx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b56c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4709	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b570	      0xba00000000	                              mov edx, 0	      4709	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b575	        0x48f77580	                  div qword [rbp - 0x80]	      4709	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b579	          0x4889d0	                            mov rax, rdx	      4709	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b57c	          0x4839c1	                            cmp rcx, rax	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b57f	            0x721f	                            jb 0x400b5a0	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b581	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b585	          0x488b00	                    mov rax, qword [rax]	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b588	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b58c	        0x482345d8	             and rax, qword [rbp - 0x28]	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b590	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b594	          0x48f7da	                                 neg rdx	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b597	          0x4821d0	                            and rax, rdx	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b59a	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b59e	            0x733a	                           jae 0x400b5da	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400b5a0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4718	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5a7	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4718	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5aa	          0xc1e805	                              shr eax, 5	      4718	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5ad	      0x25ffff0f00	                        and eax, 0xfffff	      4718	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5b2	      0x2500010000	                          and eax, 0x100	      4718	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5b7	            0x85c0	                           test eax, eax	      4718	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5b9	            0x7415	                            je 0x400b5d0	      4718	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5bb	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4719	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5c2	            0x740c	                            je 0x400b5d0	      4719	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5c4	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5ce	            0xeb0a	                           jmp 0x400b5da	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x400b5d0	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      4722	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	ELSE_1
0x400b5da	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400b5e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400b5e8	        0x48894588	             mov qword [rbp - 0x78], rax	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400b5ec	      0xe9c8040000	                           jmp 0x400bab9	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400b5f1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400b5f5	          0x488b00	                    mov rax, qword [rax]	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400b5f8	        0x488945e8	             mov qword [rbp - 0x18], rax	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400b5fc	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x400b604	            0x750f	                           jne 0x400b615	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x400b606	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      4740	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x400b610	      0xe9d9020000	                           jmp 0x400b8ee	      4740	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x400b615	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b61c	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b620	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b627	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b62b	          0x4889d1	                            mov rcx, rdx	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b62e	          0x4829c1	                            sub rcx, rax	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b631	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b635	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b639	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b63d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b641	          0x4829c2	                            sub rdx, rax	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b644	          0x4889d0	                            mov rax, rdx	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b647	          0x4839c1	                            cmp rcx, rax	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b64a	            0x740f	                            je 0x400b65b	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b64c	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      4747	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b656	      0xe993020000	                           jmp 0x400b8ee	      4747	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400b65b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b65f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b663	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b66a	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b66e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b675	          0x4801c8	                            add rax, rcx	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b678	          0x4839c2	                            cmp rdx, rax	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b67b	            0x7225	                            jb 0x400b6a2	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b67d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b684	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b688	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b68f	          0x4801c2	                            add rdx, rax	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b692	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b699	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b69d	          0x4839c2	                            cmp rdx, rax	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b6a0	            0x730f	                           jae 0x400b6b1	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b6a2	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      4754	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b6ac	      0xe93d020000	                           jmp 0x400b8ee	      4754	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400b6b1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6b8	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6bb	          0xc1e805	                              shr eax, 5	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6be	      0x25ffff0f00	                        and eax, 0xfffff	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6c3	      0x2500010000	                          and eax, 0x100	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6c8	            0x85c0	                           test eax, eax	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6ca	            0x7442	                            je 0x400b70e	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6cc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6d3	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6de	          0x4801d0	                            add rax, rdx	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6e1	        0x488d50ff	                      lea rdx, [rax - 1]	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4758	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6e9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4758	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6ed	          0x4831c2	                            xor rdx, rax	      4758	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6f0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6f4	          0x48f7d8	                                 neg rax	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6f7	          0x4821d0	                            and rax, rdx	      4758	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6fa	          0x4885c0	                           test rax, rax	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6fd	            0x750f	                           jne 0x400b70e	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b6ff	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      4762	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b709	      0xe9e0010000	                           jmp 0x400b8ee	      4762	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400b70e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b715	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b719	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b720	          0x4801c2	                            add rdx, rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b723	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b727	          0x4801d0	                            add rax, rdx	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b72a	        0x488d48ff	                      lea rcx, [rax - 1]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b72e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b735	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b739	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b740	          0x4801d0	                            add rax, rdx	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b743	          0x4839c1	                            cmp rcx, rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b746	            0x722c	                            jb 0x400b774	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b748	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b74f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b753	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b75a	          0x4801c2	                            add rdx, rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b75d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b761	          0x4801d0	                            add rax, rdx	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b764	        0x488d50ff	                      lea rdx, [rax - 1]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b768	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b76c	          0x48f7d8	                                 neg rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b76f	          0x4821c2	                            and rdx, rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b772	            0xeb07	                           jmp 0x400b77b	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b774	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b77b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b77f	          0x4801c2	                            add rdx, rax	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b782	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b789	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b78d	          0x4839c2	                            cmp rdx, rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b790	     0xf8690000000	                           jbe 0x400b826	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b796	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b79d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7a1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7a8	          0x4801c2	                            add rdx, rax	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7ab	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7af	          0x4801d0	                            add rax, rdx	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7b2	        0x488d48ff	                      lea rcx, [rax - 1]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7b6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7bd	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7c1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7c8	          0x4801d0	                            add rax, rdx	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7cb	          0x4839c1	                            cmp rcx, rax	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7ce	            0x722c	                            jb 0x400b7fc	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7d0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7d7	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7db	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7e2	          0x4801c2	                            add rdx, rax	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7e5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7e9	          0x4801d0	                            add rax, rdx	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7ec	        0x488d50ff	                      lea rdx, [rax - 1]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7f0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7f4	          0x48f7d8	                                 neg rax	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7f7	          0x4821c2	                            and rdx, rax	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7fa	            0xeb07	                           jmp 0x400b803	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b7fc	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b803	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4772	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b807	          0x4801c2	                            add rdx, rax	      4772	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b80a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4772	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b80e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4772	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b812	          0x4839c2	                            cmp rdx, rax	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b815	            0x770f	                            ja 0x400b826	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b817	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      4776	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b821	      0xe9c8000000	                           jmp 0x400b8ee	      4776	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400b826	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b82d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b830	      0x2502040000	                          and eax, 0x402	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b835	            0x85c0	                           test eax, eax	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b837	            0x751f	                           jne 0x400b858	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b839	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b83d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b840	      0x2502040000	                          and eax, 0x402	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b845	            0x85c0	                           test eax, eax	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b847	            0x740f	                            je 0x400b858	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b849	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      4785	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b853	      0xe996000000	                           jmp 0x400b8ee	      4785	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x400b858	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b85f	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b862	          0xc1e805	                              shr eax, 5	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b865	      0x25ffff0f00	                        and eax, 0xfffff	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b86a	      0x2500010000	                          and eax, 0x100	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b86f	            0x85c0	                           test eax, eax	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b871	            0x750c	                           jne 0x400b87f	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b873	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      4792	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b87d	            0xeb6f	                           jmp 0x400b8ee	      4792	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400b87f	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b887	            0x7438	                            je 0x400b8c1	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b889	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b890	         0xfb64003	               movzx eax, byte [rax + 3]	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b894	          0x83e020	                           and eax, 0x20	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b897	            0x84c0	                             test al, al	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b899	            0x7426	                            je 0x400b8c1	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b89b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b89f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8a2	          0x83e010	                           and eax, 0x10	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8a5	            0x85c0	                           test eax, eax	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8a7	           0xf95c0	                                setne al	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8aa	           0xfb6c0	                           movzx eax, al	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8ad	    0x3b853cffffff	             cmp eax, dword [rbp - 0xc4]	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8b3	            0x740c	                            je 0x400b8c1	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8b5	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      4798	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8bf	            0xeb2d	                           jmp 0x400b8ee	      4798	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400b8c1	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8c8	            0x751a	                           jne 0x400b8e4	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8ce	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8d1	          0x83e008	                              and eax, 8	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8d4	            0x85c0	                           test eax, eax	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8d6	            0x750c	                           jne 0x400b8e4	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8d8	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      4805	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8e2	            0xeb0a	                           jmp 0x400b8ee	      4805	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400b8e4	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      4810	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_10
0x400b8ee	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b8f6	            0x7455	                            je 0x400b94d	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b8f8	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      4815	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b900	            0x744b	                            je 0x400b94d	      4815	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b902	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b909	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b90d	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b911	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b914	            0x7437	                            je 0x400b94d	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400b916	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b91d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b921	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b925	    0x448b8548ffff	             mov r8d, dword [rbp - 0xb8]	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b92c	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b933	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b937	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b93e	    0x488bbd10ffff	             mov rdi, qword [rbp - 0xf0]	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b945	            0xffd0	                                call rax	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b947	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x400b94d	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b954	            0x7569	                           jne 0x400b9bf	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b956	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400b95a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400b95d	          0x83e008	                              and eax, 8	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400b960	            0x85c0	                           test eax, eax	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400b962	            0x750a	                           jne 0x400b96e	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400b964	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400b96e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4826	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400b972	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4826	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400b975	          0x83e010	                           and eax, 0x10	      4826	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400b978	            0x85c0	                           test eax, eax	      4826	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400b97a	            0x740a	                            je 0x400b986	      4826	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400b97c	    0xc7853cffffff	               mov dword [rbp - 0xc4], 1	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400b986	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4828	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b98a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4828	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b991	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b995	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b998	      0x2502040000	                          and eax, 0x402	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b99d	      0x3d00040000	                          cmp eax, 0x400	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9a2	            0x740a	                            je 0x400b9ae	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9a8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9ac	            0xeb05	                           jmp 0x400b9b3	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9ae	      0xb800000000	                              mov eax, 0	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9b3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9ba	      0xe9ee000000	                           jmp 0x400baad	      4831	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400b9bf	    0x8bbd34ffffff	             mov edi, dword [rbp - 0xcc]	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9c5	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9cb	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9d1	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9d5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9dc	          0x4189f8	                            mov r8d, edi	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9df	          0x4889c7	                            mov rdi, rax	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9e2	      0xe85ff3ffff	                   call sym.make_mapping	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9e7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x400b9ee	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4838	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x400b9f6	     0xf84ca0c0000	                            je 0x400c6c6	      4838	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x400b9fc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba03	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba0a	          0x488910	                    mov qword [rax], rdx	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba0d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4842	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba14	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4842	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400ba1f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400ba22	          0x83e008	                              and eax, 8	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400ba25	            0x85c0	                           test eax, eax	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400ba27	            0x750c	                           jne 0x400ba35	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400ba29	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400ba33	            0xeb0a	                           jmp 0x400ba3f	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400ba35	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      4847	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_11
0x400ba3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4849	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400ba43	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4849	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400ba46	          0x83e010	                           and eax, 0x10	      4849	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400ba49	            0x85c0	                           test eax, eax	      4849	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400ba4b	            0x750c	                           jne 0x400ba59	      4849	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400ba4d	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400ba57	            0xeb0a	                           jmp 0x400ba63	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400ba59	    0xc7853cffffff	               mov dword [rbp - 0xc4], 1	      4852	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_12
0x400ba63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4854	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba67	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4854	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba72	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba75	      0x2502040000	                          and eax, 0x402	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba7a	      0x3d00040000	                          cmp eax, 0x400	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba7f	            0x740a	                            je 0x400ba8b	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba85	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba89	            0xeb05	                           jmp 0x400ba90	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba8b	      0xb800000000	                              mov eax, 0	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba90	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba97	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4857	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400ba9d	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      4857	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400baa3	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400baad	    0x83852cffffff	               add dword [rbp - 0xd4], 1	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400bab4	      0x4883458808	               add qword [rbp - 0x78], 8	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400bab9	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400babf	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400bac5	     0xf8226fbffff	                            jb 0x400b5f1	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400bacb	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x400bad3	     0xf8483000000	                            je 0x400bb5c	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x400bad9	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x400badf	    0x2b8530ffffff	             sub eax, dword [rbp - 0xd0]	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x400bae5	          0x83f801	                              cmp eax, 1	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x400bae8	            0x7516	                           jne 0x400bb00	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x400baea	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x400baf1	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x400baf4	      0x2502040000	                          and eax, 0x402	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x400baf9	      0x3d00040000	                          cmp eax, 0x400	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x400bafe	            0x745c	                            je 0x400bb5c	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x400bb00	    0x8bbd34ffffff	             mov edi, dword [rbp - 0xcc]	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb06	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb0c	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb12	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb16	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb1d	          0x4189f8	                            mov r8d, edi	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb20	          0x4889c7	                            mov rdi, rax	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb23	      0xe81ef2ffff	                   call sym.make_mapping	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb28	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x400bb2f	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4868	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x400bb37	     0xf848c0b0000	                            je 0x400c6c9	      4868	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x400bb3d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x400bb44	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x400bb4b	          0x488910	                    mov qword [rax], rdx	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x400bb4e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4872	elf.c	FUNCTION_65	IF_2	IF_31
0x400bb55	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4872	elf.c	FUNCTION_65	IF_2	IF_31
0x400bb5c	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x400bb61	            0x744a	                            je 0x400bbad	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x400bb63	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x400bb67	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x400bb6e	          0x4889d6	                            mov rsi, rdx	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x400bb71	          0x4889c7	                            mov rdi, rax	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x400bb74	      0xe800000000	                          call 0x400bb79	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x400bb79	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x400bb80	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4879	elf.c	FUNCTION_65	IF_2	IF_33	IF_34
0x400bb88	     0xf843e0b0000	                            je 0x400c6cc	      4879	elf.c	FUNCTION_65	IF_2	IF_33	IF_34
0x400bb8e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x400bb95	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x400bb9c	          0x488910	                    mov qword [rax], rdx	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x400bb9f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4882	elf.c	FUNCTION_65	IF_2	IF_33
0x400bba6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4882	elf.c	FUNCTION_65	IF_2	IF_33
0x400bbad	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400bbb4	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400bbbb	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400bbc2	      0xe9bd020000	                           jmp 0x400be84	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400bbc7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbce	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbd1	          0x83e002	                              and eax, 2	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbd4	            0x85c0	                           test eax, eax	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbd6	     0xf843a020000	                            je 0x400be16	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbdc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbe3	          0x488b00	                    mov rax, qword [rax]	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbe6	      0xba05000000	                              mov edx, 5	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbeb	      0xbe00000000	                              mov esi, 0	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbf0	          0x4889c7	                            mov rdi, rax	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbf3	      0xe800000000	                          call 0x400bbf8	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbf8	            0x85c0	                           test eax, eax	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bbfa	     0xf8516020000	                           jne 0x400be16	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bc00	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      4898	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bc0a	    0x48c745e05000	           mov qword [rbp - 0x20], 0x50 	      4899	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bc12	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x400bc19	          0x8b4070	            mov eax, dword [rax + 0x70] 	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x400bc1c	          0x83f802	                              cmp eax, 2	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x400bc1f	     0xf85aa000000	                           jne 0x400bccf	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x400bc25	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bc2c	        0x488945b8	             mov qword [rbp - 0x48], rax	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bc30	      0xe989000000	                           jmp 0x400bcbe	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bc35	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc39	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc3d	          0x8b4070	            mov eax, dword [rax + 0x70] 	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc40	          0x83f802	                              cmp eax, 2	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc43	     0xf8586000000	                           jne 0x400bccf	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc49	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc4d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc51	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc54	          0x83e002	                              and eax, 2	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc57	            0x85c0	                           test eax, eax	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc59	            0x7474	                            je 0x400bccf	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc5f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc63	          0x488b00	                    mov rax, qword [rax]	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc66	      0xba05000000	                              mov edx, 5	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc6b	      0xbe00000000	                              mov esi, 0	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc70	          0x4889c7	                            mov rdi, rax	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc73	      0xe800000000	                          call 0x400bc78	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc78	            0x85c0	                           test eax, eax	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc7a	            0x7553	                           jne 0x400bccf	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc7c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc80	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc84	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc88	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc8c	          0x4801d0	                            add rax, rdx	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc8f	        0x4883c003	                              add rax, 3	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc93	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc97	          0x4889c2	                            mov rdx, rax	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc9a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4907	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bc9e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4907	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bca2	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4907	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bca6	          0x4839c2	                            cmp rdx, rax	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bca9	            0x7524	                           jne 0x400bccf	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bcab	    0x838528ffffff	               add dword [rbp - 0xd8], 1	      4908	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400bcb2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bcb6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bcba	        0x488945b8	             mov qword [rbp - 0x48], rax	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bcbe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bcc2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bcc6	          0x4885c0	                           test rax, rax	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bcc9	     0xf8566ffffff	                           jne 0x400bc35	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400bccf	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bcd5	          0x83e801	                              sub eax, 1	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bcd8	            0x89c0	                            mov eax, eax	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bcda	        0x48c1e003	                              shl rax, 3	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bcde	        0x480145e0	            add qword [rbp - 0x20], rax 	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bce2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x400bce6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x400bced	          0x4889d6	                            mov rsi, rdx	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x400bcf0	          0x4889c7	                            mov rdi, rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x400bcf3	      0xe800000000	                          call 0x400bcf8	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x400bcf8	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x400bcff	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x400bd07	     0xf84c2090000	                            je 0x400c6cf	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x400bd0d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bd14	    0x48c700000000	                      mov qword [rax], 0	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bd1b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bd22	    0x48c740080400	                  mov qword [rax + 8], 4	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bd2a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bd31	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bd37	          0x895044	             mov dword [rax + 0x44], edx	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bd3a	            0xeb6a	                           jmp 0x400bda6	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd3c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd43	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd46	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd4c	          0x8d50ff	                      lea edx, [rax - 1]	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd4f	    0x899528ffffff	             mov dword [rbp - 0xd8], edx	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd55	            0x29c1	                            sub ecx, eax	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd57	            0x89ca	                            mov edx, ecx	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd59	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd60	            0x89d2	                            mov edx, edx	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd62	        0x488d4a08	                      lea rcx, [rdx + 8]	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd66	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd6d	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd72	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd79	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd7c	      0x2500040000	                          and eax, 0x400	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd81	            0x85c0	                           test eax, eax	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd83	            0x740f	                            je 0x400bd94	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd85	      0xbe3a130000	                         mov esi, 0x133a	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd8a	      0xbf00000000	                              mov edi, 0	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd8f	      0xe800000000	                          call 0x400bd94	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x400bd94	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd9b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bd9f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bda6	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bdad	            0x778d	                            ja 0x400bd3c	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x400bdaf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdb6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdb9	          0x8d50ff	                      lea edx, [rax - 1]	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdbc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdc3	            0x89d2	                            mov edx, edx	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdc5	        0x488d4a08	                      lea rcx, [rdx + 8]	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdc9	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdd0	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdd5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bddc	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bddf	      0x2500040000	                          and eax, 0x400	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bde4	            0x85c0	                           test eax, eax	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bde6	            0x740f	                            je 0x400bdf7	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bde8	      0xbe3e130000	                         mov esi, 0x133e	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bded	      0xbf00000000	                              mov edi, 0	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bdf2	      0xe800000000	                          call 0x400bdf7	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x400bdf7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400bdfe	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400be05	          0x488910	                    mov qword [rax], rdx	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400be08	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4928	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400be0f	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4928	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400be16	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400be1d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400be20	      0x2500040000	                          and eax, 0x400	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400be25	            0x85c0	                           test eax, eax	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400be27	            0x741b	                            je 0x400be44	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400be29	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      4932	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x400be30	            0x750b	                           jne 0x400be3d	      4932	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x400be32	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4933	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x400be39	        0x48894590	             mov qword [rbp - 0x70], rax	      4933	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x400be3d	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      4934	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400be44	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x400be49	            0x7527	                           jne 0x400be72	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x400be4b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_20
0x400be52	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_20
0x400be59	        0x488b4008	                mov rax, qword [rax + 8]	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_20
0x400be5d	      0x2500000001	                      and eax, 0x1000000	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_20
0x400be62	          0x4885c0	                           test rax, rax	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_20
0x400be65	            0x740b	                            je 0x400be72	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_20
0x400be67	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4938	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x400be6e	        0x48894598	             mov qword [rbp - 0x68], rax	      4938	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x400be72	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400be79	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400be7d	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400be84	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400be8c	     0xf8535fdffff	                           jne 0x400bbc7	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400be92	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x400be99	     0xf8e0f020000	                           jle 0x400c0ae	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x400be9f	    0x48c745e05000	           mov qword [rbp - 0x20], 0x50 	      4944	elf.c	FUNCTION_65	IF_2	IF_42
0x400bea7	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      4945	elf.c	FUNCTION_65	IF_2	IF_42
0x400bead	          0x83e801	                              sub eax, 1	      4945	elf.c	FUNCTION_65	IF_2	IF_42
0x400beb0	            0x4898	                                    cdqe	      4945	elf.c	FUNCTION_65	IF_2	IF_42
0x400beb2	        0x48c1e003	                              shl rax, 3	      4945	elf.c	FUNCTION_65	IF_2	IF_42
0x400beb6	        0x480145e0	            add qword [rbp - 0x20], rax 	      4945	elf.c	FUNCTION_65	IF_2	IF_42
0x400beba	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x400bebe	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x400bec5	          0x4889d6	                            mov rsi, rdx	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x400bec8	          0x4889c7	                            mov rdi, rax	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x400becb	      0xe800000000	                          call 0x400bed0	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x400bed0	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x400bed7	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x400bedf	     0xf84ed070000	                            je 0x400c6d2	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x400bee5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4949	elf.c	FUNCTION_65	IF_2	IF_42
0x400beec	    0x48c700000000	                      mov qword [rax], 0	      4949	elf.c	FUNCTION_65	IF_2	IF_42
0x400bef3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4950	elf.c	FUNCTION_65	IF_2	IF_42
0x400befa	    0x48c740080700	                  mov qword [rax + 8], 7	      4950	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf02	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      4951	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf08	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4951	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf0f	          0x895044	             mov dword [rax + 0x44], edx	      4951	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf12	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4953	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf19	    0x48c740100400	               mov qword [rax + 0x10], 4	      4953	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf21	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf28	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf2c	          0x83ca01	                               or edx, 1	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf2f	          0x885040	               mov byte [rax + 0x40], dl	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf32	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4955	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf36	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4955	elf.c	FUNCTION_65	IF_2	IF_42
0x400bf3d	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400bf47	      0xe931010000	                           jmp 0x400c07d	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400bf4c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bf53	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bf56	      0x2500040000	                          and eax, 0x400	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bf5b	            0x85c0	                           test eax, eax	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bf5d	     0xf85e4000000	                           jne 0x400c047	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bf63	      0xbe00000000	                              mov esi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x400bf68	      0xbf00000000	                              mov edi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x400bf6d	      0xe800000000	                          call 0x400bf72	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x400bf72	          0x4889c2	                            mov rdx, rax	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x400bf75	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x400bf7c	          0x4889c6	                            mov rsi, rax	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x400bf7f	          0x4889d7	                            mov rdi, rdx	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x400bf82	      0xb800000000	                              mov eax, 0	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x400bf87	      0xe800000000	                          call 0x400bf8c	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x400bf8c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4962	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bf90	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4962	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bf97	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      4963	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400bfa1	      0xe980000000	                           jmp 0x400c026	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400bfa6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400bfad	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400bfb0	      0x2500040000	                          and eax, 0x400	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400bfb5	            0x85c0	                           test eax, eax	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400bfb7	            0x7432	                            je 0x400bfeb	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400bfb9	      0xbe00000000	                              mov esi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfbe	      0xbf00000000	                              mov edi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfc3	      0xe800000000	                          call 0x400bfc8	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfc8	          0x4889c2	                            mov rdx, rax	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfcb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfd2	          0x4889c6	                            mov rsi, rax	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfd5	          0x4889d7	                            mov rdi, rdx	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfd8	      0xb800000000	                              mov eax, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfdd	      0xe800000000	                          call 0x400bfe2	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x400bfe2	    0x83852cffffff	               add dword [rbp - 0xd4], 1	      4969	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400bfe9	            0xeb29	                           jmp 0x400c014	      4969	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400bfeb	      0xbe00000000	                              mov esi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400bff0	      0xbf00000000	                              mov edi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400bff5	      0xe800000000	                          call 0x400bffa	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400bffa	          0x4889c2	                            mov rdx, rax	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400bffd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400c004	          0x4889c6	                            mov rsi, rax	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400c007	          0x4889d7	                            mov rdi, rdx	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400c00a	      0xb800000000	                              mov eax, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400c00f	      0xe800000000	                          call 0x400c014	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x400c014	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4973	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400c01b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4973	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400c01f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4973	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400c026	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400c02c	    0x39852cffffff	            cmp dword [rbp - 0xd4], eax 	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400c032	     0xf826effffff	                            jb 0x400bfa6	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400c038	      0xbf11000000	                           mov edi, 0x11	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_28
0x400c03d	      0xe800000000	                          call 0x400c042	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_28
0x400c042	      0xe998060000	                           jmp 0x400c6df	      4976	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400c047	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c04e	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c054	        0x488d4a08	                      lea rcx, [rdx + 8]	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c058	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c05f	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c064	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4979	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c06b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4979	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c06f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4979	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c076	    0x83852cffffff	               add dword [rbp - 0xd4], 1	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c07d	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c083	    0x39852cffffff	            cmp dword [rbp - 0xd4], eax 	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c089	     0xf82bdfeffff	                            jb 0x400bf4c	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x400c08f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x400c096	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x400c09d	          0x488910	                    mov qword [rax], rdx	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x400c0a0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4983	elf.c	FUNCTION_65	IF_2	IF_42
0x400c0a7	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4983	elf.c	FUNCTION_65	IF_2	IF_42
0x400c0ae	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0b3	     0xf8482010000	                            je 0x400c23b	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0b9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0c0	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0c3	          0xc1e805	                              shr eax, 5	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0c6	      0x25ffff0f00	                        and eax, 0xfffff	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0cb	      0x2500010000	                          and eax, 0x100	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0d0	            0x85c0	                           test eax, eax	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0d2	     0xf8463010000	                            je 0x400c23b	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400c0d8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c0dc	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c0e3	      0xe945010000	                           jmp 0x400c22d	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c0e8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x400c0ef	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x400c0f6	        0x488b4008	                mov rax, qword [rax + 8]	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x400c0fa	      0x2500000001	                      and eax, 0x1000000	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x400c0ff	          0x4885c0	                           test rax, rax	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x400c102	     0xf8413010000	                            je 0x400c21b	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x400c108	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_30
0x400c10f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_30
0x400c116	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_30
0x400c119	      0x3d00100000	                         cmp eax, 0x1000	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_30
0x400c11e	     0xf87f7000000	                            ja 0x400c21b	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_30
0x400c124	    0x48c745c00400	               mov qword [rbp - 0x40], 4	      4993	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c12c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400c133	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400c136	          0x83e008	                              and eax, 8	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400c139	            0x85c0	                           test eax, eax	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400c13b	            0x7505	                           jne 0x400c142	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400c13d	      0x48834dc002	                or qword [rbp - 0x40], 2	      4995	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400c142	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4996	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400c149	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4996	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400c14c	          0x83e010	                           and eax, 0x10	      4996	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400c14f	            0x85c0	                           test eax, eax	      4996	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400c151	            0x7405	                            je 0x400c158	      4996	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400c153	      0x48834dc001	                or qword [rbp - 0x40], 1	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400c158	    0x48c745e05800	           mov qword [rbp - 0x20], 0x58 	      4999	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c160	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x400c164	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x400c16b	          0x4889d6	                            mov rsi, rdx	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x400c16e	          0x4889c7	                            mov rdi, rax	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x400c171	      0xe800000000	                          call 0x400c176	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x400c176	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x400c17d	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x400c185	     0xf844a050000	                            je 0x400c6d5	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x400c18b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5003	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c192	    0x48c700000000	                      mov qword [rax], 0	      5003	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c199	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5005	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_32
0x400c1a0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5005	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_32
0x400c1a7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      5005	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_32
0x400c1aa	       0x555e57464	                     add eax, 0x6474e555	      5005	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_32
0x400c1af	            0x89c2	                            mov edx, eax	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1b1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1b8	        0x48895008	                mov qword [rax + 8], rdx	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1bc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5006	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1c3	    0xc74044010000	               mov dword [rax + 0x44], 1	      5006	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1ca	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5007	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1d1	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      5007	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1d5	          0x83ca01	                               or edx, 1	      5007	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1d8	          0x885040	               mov byte [rax + 0x40], dl	      5007	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1db	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5008	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1e2	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      5008	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1e9	        0x48895048	             mov qword [rax + 0x48], rdx	      5008	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1ed	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5009	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1f4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      5009	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1f8	        0x48895010	             mov qword [rax + 0x10], rdx	      5009	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c1fc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5011	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c203	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5011	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c20a	          0x488910	                    mov qword [rax], rdx	      5011	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c20d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5012	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c214	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5012	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400c21b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c222	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c226	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c22d	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c235	     0xf85adfeffff	                           jne 0x400c0e8	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400c23b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x400c242	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x400c249	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x400c250	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x400c254	        0x488945f0	             mov qword [rbp - 0x10], rax	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x400c258	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x400c25d	     0xf84a6000000	                            je 0x400c309	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x400c263	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x400c267	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x400c26b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x400c26e	          0x83e002	                              and eax, 2	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x400c271	            0x85c0	                           test eax, eax	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x400c273	     0xf8490000000	                            je 0x400c309	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x400c279	    0x48c745e05000	           mov qword [rbp - 0x20], 0x50 	      5021	elf.c	FUNCTION_65	IF_2	IF_51
0x400c281	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x400c285	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x400c28c	          0x4889d6	                            mov rsi, rdx	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x400c28f	          0x4889c7	                            mov rdi, rax	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x400c292	      0xe800000000	                          call 0x400c297	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x400c297	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x400c29e	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x400c2a6	     0xf842c040000	                            je 0x400c6d8	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x400c2ac	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5025	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2b3	    0x48c700000000	                      mov qword [rax], 0	      5025	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2ba	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5026	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2c1	    0x48c7400850e5	        mov qword [rax + 8], 0x6474e550 	      5026	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2c9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5027	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2d0	    0xc74044010000	               mov dword [rax + 0x44], 1	      5027	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2db	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2df	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2e6	        0x48895048	             mov qword [rax + 0x48], rdx	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2ea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2f1	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2f8	          0x488910	                    mov qword [rax], rdx	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x400c2fb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5031	elf.c	FUNCTION_65	IF_2	IF_51
0x400c302	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5031	elf.c	FUNCTION_65	IF_2	IF_51
0x400c309	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x400c310	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x400c317	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x400c31e	          0x8b4054	            mov eax, dword [rax + 0x54] 	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x400c321	            0x85c0	                           test eax, eax	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x400c323	     0xf8424010000	                            je 0x400c44d	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x400c329	    0x48c745e05000	           mov qword [rbp - 0x20], 0x50 	      5036	elf.c	FUNCTION_65	IF_2	IF_53
0x400c331	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x400c335	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x400c33c	          0x4889d6	                            mov rsi, rdx	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x400c33f	          0x4889c7	                            mov rdi, rax	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x400c342	      0xe800000000	                          call 0x400c347	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x400c347	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x400c34e	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x400c356	     0xf847f030000	                            je 0x400c6db	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x400c35c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5040	elf.c	FUNCTION_65	IF_2	IF_53
0x400c363	    0x48c700000000	                      mov qword [rax], 0	      5040	elf.c	FUNCTION_65	IF_2	IF_53
0x400c36a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5041	elf.c	FUNCTION_65	IF_2	IF_53
0x400c371	    0x48c7400851e5	        mov qword [rax + 8], 0x6474e551 	      5041	elf.c	FUNCTION_65	IF_2	IF_53
0x400c379	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400c380	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400c387	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400c38e	          0x8b4054	            mov eax, dword [rax + 0x54] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400c391	            0x89c2	                            mov edx, eax	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400c393	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400c39a	        0x48895010	             mov qword [rax + 0x10], rdx	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400c39e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3a2	    0x8b807c030000	           mov eax, dword [rax + 0x37c] 	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3a8	            0x89c2	                            mov edx, eax	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3aa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3b1	        0x48895028	             mov qword [rax + 0x28], rdx	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3b5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3bc	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3c0	          0x83ca01	                               or edx, 1	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3c3	          0x885040	               mov byte [rax + 0x40], dl	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3c6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3cd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3d1	          0x4885c0	                           test rax, rax	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3d4	           0xf95c2	                                setne dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3d7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3de	          0x83e201	                              and edx, 1	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3e1	    0x8d0c95000000	                        lea ecx, [rdx*4]	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3e8	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3ec	          0x83e2fb	                     and edx, 0xfffffffb	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3ef	             0x9ca	                             or edx, ecx	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3f1	          0x885040	               mov byte [rax + 0x40], dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400c3f4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c3fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c3ff	          0x4885c0	                           test rax, rax	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c402	            0x7e2a	                           jle 0x400c42e	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c404	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c40b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c40f	          0x4889c2	                            mov rdx, rax	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c412	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c419	        0x48895030	             mov qword [rax + 0x30], rdx	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c41d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c424	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c428	          0x83ca08	                               or edx, 8	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c42b	          0x885040	               mov byte [rax + 0x40], dl	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400c42e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x400c435	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x400c43c	          0x488910	                    mov qword [rax], rdx	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x400c43f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5053	elf.c	FUNCTION_65	IF_2	IF_53
0x400c446	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5053	elf.c	FUNCTION_65	IF_2	IF_53
0x400c44d	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400c455	     0xf8482010000	                            je 0x400c5dd	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400c45b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400c462	         0xfb64003	               movzx eax, byte [rax + 3]	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400c466	          0x83e010	                           and eax, 0x10	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400c469	            0x84c0	                             test al, al	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400c46b	     0xf846c010000	                            je 0x400c5dd	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400c471	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c478	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c47f	      0xe9cf000000	                           jmp 0x400c553	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c484	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c48b	        0x488b4008	                mov rax, qword [rax + 8]	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c48f	        0x4883f801	                              cmp rax, 1	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c493	     0xf85a9000000	                           jne 0x400c542	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c499	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4a0	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4a3	            0x85c0	                           test eax, eax	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4a5	     0xf8497000000	                            je 0x400c542	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4ab	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4b2	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4b6	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4ba	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4c1	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4c8	          0x4839c2	                            cmp rdx, rax	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4cb	            0x7275	                            jb 0x400c542	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4cd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4d4	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4d8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4dc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4e3	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4ea	          0x4839c2	                            cmp rdx, rax	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4ed	            0x7353	                           jae 0x400c542	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4ef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5065	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4f6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5065	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4f9	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      5065	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400c4ff	            0xeb25	                           jmp 0x400c526	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x400c501	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c508	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c50e	        0x4883c208	                              add rdx, 8	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c512	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c517	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c51a	      0x2502010000	                          and eax, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c51f	      0x3d02010000	                          cmp eax, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c524	            0x7412	                            je 0x400c538	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c526	    0x83ad2cffffff	               sub dword [rbp - 0xd4], 1	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x400c52d	    0x83bd2cffffff	cmp dword [rbp - 0xd4], 0xffffffffffffffff	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x400c534	            0x75cb	                           jne 0x400c501	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x400c536	            0xeb01	                           jmp 0x400c539	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x400c538	              0x90	                                     nop	      5069	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400c539	    0x83bd2cffffff	cmp dword [rbp - 0xd4], 0xffffffffffffffff	      5071	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	IF_59
0x400c540	            0x7521	                           jne 0x400c563	      5071	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	IF_59
0x400c542	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c549	          0x488b00	                    mov rax, qword [rax]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c54c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c553	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c55b	     0xf8523ffffff	                           jne 0x400c484	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c561	            0xeb01	                           jmp 0x400c564	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400c563	              0x90	                                     nop	      5072	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	IF_59
0x400c564	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5077	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c56c	            0x746f	                            je 0x400c5dd	      5077	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c56e	    0x48c745e05000	           mov qword [rbp - 0x20], 0x50 	      5079	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c576	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x400c57a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x400c581	          0x4889d6	                            mov rsi, rdx	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x400c584	          0x4889c7	                            mov rdi, rax	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x400c587	      0xe800000000	                          call 0x400c58c	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x400c58c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x400c593	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x400c59b	     0xf843d010000	                            je 0x400c6de	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x400c5a1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5083	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5a8	    0x48c700000000	                      mov qword [rax], 0	      5083	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5af	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5084	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5b6	    0x48c7400852e5	        mov qword [rax + 8], 0x6474e552 	      5084	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5be	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5c5	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5cc	          0x488910	                    mov qword [rax], rdx	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5cf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5086	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5d6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5086	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400c5dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5090	elf.c	FUNCTION_65	IF_2	CALL_39
0x400c5e1	          0x4889c7	                            mov rdi, rax	      5090	elf.c	FUNCTION_65	IF_2	CALL_39
0x400c5e4	      0xe800000000	                          call 0x400c5e9	      5090	elf.c	FUNCTION_65	IF_2	CALL_39
0x400c5e9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400c5f0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400c5f7	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400c5fe	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400c605	          0x488910	                    mov qword [rax], rdx	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400c608	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c60e	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c615	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c61c	          0x4889ce	                            mov rsi, rcx	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c61f	          0x4889c7	                            mov rdi, rax	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c622	      0xe884e8ffff	         call sym.elf_modify_segment_map	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c627	            0x85c0	                           test eax, eax	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c629	            0x750a	                           jne 0x400c635	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x400c62b	      0xb800000000	                              mov eax, 0	      5095	elf.c	FUNCTION_65	IF_62
0x400c630	      0xe9c2000000	                           jmp 0x400c6f7	      5095	elf.c	FUNCTION_65	IF_62
0x400c635	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c63f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c646	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c64d	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c654	          0x488b00	                    mov rax, qword [rax]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c657	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c65e	            0xeb18	                           jmp 0x400c678	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c660	    0x838528ffffff	               add dword [rbp - 0xd8], 1	      5098	elf.c	FUNCTION_65	FOR_8
0x400c667	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c66e	          0x488b00	                    mov rax, qword [rax]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c671	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c678	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c680	            0x75de	                           jne 0x400c660	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400c682	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5099	elf.c	FUNCTION_65	CALL_43
0x400c689	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5099	elf.c	FUNCTION_65	CALL_43
0x400c690	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5099	elf.c	FUNCTION_65	CALL_43
0x400c697	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5099	elf.c	FUNCTION_65	CALL_43
0x400c69b	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      5099	elf.c	FUNCTION_65	CALL_43
0x400c6a2	         0xfb65201	               movzx edx, byte [rdx + 1]	      5099	elf.c	FUNCTION_65	CALL_43
0x400c6a6	           0xfb6d2	                           movzx edx, dl	      5099	elf.c	FUNCTION_65	CALL_43
0x400c6a9	     0xfaf9528ffff	            imul edx, dword [rbp - 0xd8]	      5099	elf.c	FUNCTION_65	CALL_43
0x400c6b0	            0x89d2	                            mov edx, edx	      5099	elf.c	FUNCTION_65	CALL_43
0x400c6b2	        0x48895038	             mov qword [rax + 0x38], rdx	      5099	elf.c	FUNCTION_65	CALL_43
0x400c6b6	      0xb801000000	                              mov eax, 1	      5101	elf.c	FUNCTION_65
0x400c6bb	            0xeb3a	                           jmp 0x400c6f7	      5101	elf.c	FUNCTION_65
0x400c6bd	              0x90	                                     nop	      4614	elf.c	FUNCTION_65	IF_2	IF_3
0x400c6be	            0xeb1f	                           jmp 0x400c6df	      4614	elf.c	FUNCTION_65	IF_2	IF_3
0x400c6c0	              0x90	                                     nop	      4653	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x400c6c1	            0xeb1c	                           jmp 0x400c6df	      4653	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x400c6c3	              0x90	                                     nop	      4666	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x400c6c4	            0xeb19	                           jmp 0x400c6df	      4666	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x400c6c6	              0x90	                                     nop	      4839	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x400c6c7	            0xeb16	                           jmp 0x400c6df	      4839	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x400c6c9	              0x90	                                     nop	      4869	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x400c6ca	            0xeb13	                           jmp 0x400c6df	      4869	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x400c6cc	              0x90	                                     nop	      4880	elf.c	FUNCTION_65	IF_2	IF_33	IF_34
0x400c6cd	            0xeb10	                           jmp 0x400c6df	      4880	elf.c	FUNCTION_65	IF_2	IF_33	IF_34
0x400c6cf	              0x90	                                     nop	      4915	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x400c6d0	            0xeb0d	                           jmp 0x400c6df	      4915	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x400c6d2	              0x90	                                     nop	      4948	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x400c6d3	            0xeb0a	                           jmp 0x400c6df	      4948	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x400c6d5	              0x90	                                     nop	      5002	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x400c6d6	            0xeb07	                           jmp 0x400c6df	      5002	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x400c6d8	              0x90	                                     nop	      5024	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x400c6d9	            0xeb04	                           jmp 0x400c6df	      5024	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x400c6db	              0x90	                                     nop	      5039	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x400c6dc	            0xeb01	                           jmp 0x400c6df	      5039	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x400c6de	              0x90	                                     nop	      5082	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x400c6df	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5104	elf.c	FUNCTION_65	IF_63
0x400c6e4	            0x740c	                            je 0x400c6f2	      5104	elf.c	FUNCTION_65	IF_63
0x400c6e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5105	elf.c	FUNCTION_65	CALL_44
0x400c6ea	          0x4889c7	                            mov rdi, rax	      5105	elf.c	FUNCTION_65	CALL_44
0x400c6ed	      0xe800000000	                          call 0x400c6f2	      5105	elf.c	FUNCTION_65	CALL_44
0x400c6f2	      0xb800000000	                              mov eax, 0	      5106	elf.c	FUNCTION_65
0x400c6f7	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5107	elf.c	FUNCTION_65
0x400c6fb	    0x644833342528	                xor rsi, qword fs:[0x28]	      5107	elf.c	FUNCTION_65
0x400c704	            0x7405	                            je 0x400c70b	      5107	elf.c	FUNCTION_65
0x400c706	      0xe800000000	                          call 0x400c70b	      5107	elf.c	FUNCTION_65
0x400c70b	              0xc9	                                   leave	      5107	elf.c	FUNCTION_65
0x400c70c	              0xc3	                                     ret	      5107	elf.c	FUNCTION_65
elfcore_write_aarch_tls	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x401a1ba	              0x55	                                push rbp	     10997	elf.c	FUNCTION_187
0x401a1bb	          0x4889e5	                            mov rbp, rsp	     10997	elf.c	FUNCTION_187
0x401a1be	        0x4883ec40	                           sub rsp, 0x40	     10997	elf.c	FUNCTION_187
0x401a1c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10997	elf.c	FUNCTION_187
0x401a1c6	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10997	elf.c	FUNCTION_187
0x401a1ca	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10997	elf.c	FUNCTION_187
0x401a1ce	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10997	elf.c	FUNCTION_187
0x401a1d2	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10997	elf.c	FUNCTION_187
0x401a1d6	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10998	elf.c	FUNCTION_187
0x401a1de	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1e2	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1e6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1ea	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1f2	        0x4883ec08	                              sub rsp, 8	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1f6	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1f9	              0x57	                                push rdi	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1fa	          0x4d89c1	                              mov r9, r8	     10999	elf.c	FUNCTION_187	CALL_1
0x401a1fd	    0x41b801040000	                          mov r8d, 0x401	     10999	elf.c	FUNCTION_187	CALL_1
0x401a203	          0x4889c7	                            mov rdi, rax	     10999	elf.c	FUNCTION_187	CALL_1
0x401a206	      0xe800000000	                          call 0x401a20b	     10999	elf.c	FUNCTION_187	CALL_1
0x401a20b	        0x4883c410	                           add rsp, 0x10	     10999	elf.c	FUNCTION_187	CALL_1
0x401a20f	              0xc9	                                   leave	     11001	elf.c	FUNCTION_187
0x401a210	              0xc3	                                     ret	     11001	elf.c	FUNCTION_187
elfcore_grok_win32pstatus	ELSE,0:DO,0:CALL,13:WHILE,0:FOR,0:IF,8:SWITCH,1:functions,0	212
0x4017306	              0x55	                                push rbp	      9566	elf.c	FUNCTION_143
0x4017307	          0x4889e5	                            mov rbp, rsp	      9566	elf.c	FUNCTION_143
0x401730a	              0x53	                                push rbx	      9566	elf.c	FUNCTION_143
0x401730b	        0x4883ec78	                           sub rsp, 0x78	      9566	elf.c	FUNCTION_143
0x401730f	        0x48897d88	             mov qword [rbp - 0x78], rdi	      9566	elf.c	FUNCTION_143
0x4017313	        0x48897580	             mov qword [rbp - 0x80], rsi	      9566	elf.c	FUNCTION_143
0x4017317	    0x64488b042528	                mov rax, qword fs:[0x28]	      9566	elf.c	FUNCTION_143
0x4017320	        0x488945e8	             mov qword [rbp - 0x18], rax	      9566	elf.c	FUNCTION_143
0x4017324	            0x31c0	                            xor eax, eax	      9566	elf.c	FUNCTION_143
0x4017326	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9575	elf.c	FUNCTION_143	IF_1
0x401732a	        0x488b4008	                mov rax, qword [rax + 8]	      9575	elf.c	FUNCTION_143	IF_1
0x401732e	    0x483dd7020000	                          cmp rax, 0x2d7	      9575	elf.c	FUNCTION_143	IF_1
0x4017334	            0x770a	                            ja 0x4017340	      9575	elf.c	FUNCTION_143	IF_1
0x4017336	      0xb801000000	                              mov eax, 1	      9576	elf.c	FUNCTION_143	IF_1
0x401733b	      0xe9f6020000	                           jmp 0x4017636	      9576	elf.c	FUNCTION_143	IF_1
0x4017340	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9578	elf.c	FUNCTION_143	IF_2
0x4017344	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9578	elf.c	FUNCTION_143	IF_2
0x4017348	      0xba05000000	                              mov edx, 5	      9578	elf.c	FUNCTION_143	IF_2
0x401734d	      0xbe00000000	                              mov esi, 0	      9578	elf.c	FUNCTION_143	IF_2
0x4017352	          0x4889c7	                            mov rdi, rax	      9578	elf.c	FUNCTION_143	IF_2
0x4017355	      0xe800000000	                          call 0x401735a	      9578	elf.c	FUNCTION_143	IF_2
0x401735a	            0x85c0	                           test eax, eax	      9578	elf.c	FUNCTION_143	IF_2
0x401735c	            0x740a	                            je 0x4017368	      9578	elf.c	FUNCTION_143	IF_2
0x401735e	      0xb801000000	                              mov eax, 1	      9579	elf.c	FUNCTION_143	IF_2
0x4017363	      0xe9ce020000	                           jmp 0x4017636	      9579	elf.c	FUNCTION_143	IF_2
0x4017368	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9581	elf.c	FUNCTION_143
0x401736c	        0x488b4008	                mov rax, qword [rax + 8]	      9581	elf.c	FUNCTION_143
0x4017370	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9581	elf.c	FUNCTION_143
0x4017374	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      9581	elf.c	FUNCTION_143
0x4017378	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9581	elf.c	FUNCTION_143
0x401737c	          0x4889d7	                            mov rdi, rdx	      9581	elf.c	FUNCTION_143
0x401737f	            0xffd0	                                call rax	      9581	elf.c	FUNCTION_143
0x4017381	          0x894598	             mov dword [rbp - 0x68], eax	      9581	elf.c	FUNCTION_143
0x4017384	          0x8b4598	             mov eax, dword [rbp - 0x68]	      9583	elf.c	FUNCTION_143	SWITCH_1
0x4017387	          0x83f802	                              cmp eax, 2	      9583	elf.c	FUNCTION_143	SWITCH_1
0x401738a	            0x747a	                            je 0x4017406	      9583	elf.c	FUNCTION_143	SWITCH_1
0x401738c	          0x83f803	                              cmp eax, 3	      9583	elf.c	FUNCTION_143	SWITCH_1
0x401738f	     0xf84a9010000	                            je 0x401753e	      9583	elf.c	FUNCTION_143	SWITCH_1
0x4017395	          0x83f801	                              cmp eax, 1	      9583	elf.c	FUNCTION_143	SWITCH_1
0x4017398	     0xf858b020000	                           jne 0x4017629	      9583	elf.c	FUNCTION_143	SWITCH_1
0x401739e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173a2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173a9	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173b0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173b4	        0x488b4008	                mov rax, qword [rax + 8]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173bc	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173c0	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173c4	        0x4883c208	                              add rdx, 8	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173c8	          0x4889d7	                            mov rdi, rdx	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173cb	            0xffd0	                                call rax	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173cd	          0x894304	                mov dword [rbx + 4], eax	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x40173d0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173d4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173db	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173e2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173e6	        0x488b4008	                mov rax, qword [rax + 8]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173ea	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173ee	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173f2	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173f6	        0x4883c20c	                            add rdx, 0xc	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173fa	          0x4889d7	                            mov rdi, rdx	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173fd	            0xffd0	                                call rax	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x40173ff	            0x8903	                    mov dword [rbx], eax	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x4017401	      0xe92b020000	                           jmp 0x4017631	      9591	elf.c	FUNCTION_143	SWITCH_1
0x4017406	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x401740a	        0x488b4008	                mov rax, qword [rax + 8]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x401740e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x4017412	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x4017416	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x401741a	        0x4883c208	                              add rdx, 8	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x401741e	          0x4889d7	                            mov rdi, rdx	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x4017421	            0xffd0	                                call rax	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x4017423	          0x4889c2	                            mov rdx, rax	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x4017426	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x401742a	      0xbe00000000	                              mov esi, 0	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x401742f	          0x4889c7	                            mov rdi, rax	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x4017432	      0xb800000000	                              mov eax, 0	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x4017437	      0xe800000000	                          call 0x401743c	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x401743c	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x4017440	          0x4889c7	                            mov rdi, rax	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x4017443	      0xe800000000	                          call 0x4017448	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x4017448	        0x4883c001	                              add rax, 1	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x401744c	        0x488945a0	             mov qword [rbp - 0x60], rax	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x4017450	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_5
0x4017454	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_5
0x4017458	          0x4889d6	                            mov rsi, rdx	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_5
0x401745b	          0x4889c7	                            mov rdi, rax	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_5
0x401745e	      0xe800000000	                          call 0x4017463	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_5
0x4017463	        0x488945a8	             mov qword [rbp - 0x58], rax	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_5
0x4017467	      0x48837da800	               cmp qword [rbp - 0x58], 0	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x401746c	            0x750a	                           jne 0x4017478	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x401746e	      0xb800000000	                              mov eax, 0	      9601	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x4017473	      0xe9be010000	                           jmp 0x4017636	      9601	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x4017478	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      9603	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x401747c	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      9603	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x4017480	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9603	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x4017484	          0x4889ce	                            mov rsi, rcx	      9603	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x4017487	          0x4889c7	                            mov rdi, rax	      9603	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x401748a	      0xe800000000	                          call 0x401748f	      9603	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x401748f	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x4017493	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x4017497	      0xba00010000	                          mov edx, 0x100	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x401749c	          0x4889ce	                            mov rsi, rcx	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x401749f	          0x4889c7	                            mov rdi, rax	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x40174a2	      0xe800000000	                          call 0x40174a7	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x40174a7	        0x488945b0	             mov qword [rbp - 0x50], rax	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x40174ab	      0x48837db000	               cmp qword [rbp - 0x50], 0	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x40174b0	            0x750a	                           jne 0x40174bc	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x40174b2	      0xb800000000	                              mov eax, 0	      9607	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x40174b7	      0xe97a010000	                           jmp 0x4017636	      9607	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x40174bc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      9610	elf.c	FUNCTION_143	SWITCH_1
0x40174c0	    0x48c74038cc02	          mov qword [rax + 0x38], 0x2cc 	      9610	elf.c	FUNCTION_143	SWITCH_1
0x40174c8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9612	elf.c	FUNCTION_143	SWITCH_1
0x40174cc	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9612	elf.c	FUNCTION_143	SWITCH_1
0x40174d0	        0x4883c00c	                            add rax, 0xc	      9612	elf.c	FUNCTION_143	SWITCH_1
0x40174d4	          0x4889c2	                            mov rdx, rax	      9612	elf.c	FUNCTION_143	SWITCH_1
0x40174d7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      9612	elf.c	FUNCTION_143	SWITCH_1
0x40174db	    0x488990900000	             mov qword [rax + 0x90], rdx	      9612	elf.c	FUNCTION_143	SWITCH_1
0x40174e2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      9613	elf.c	FUNCTION_143	SWITCH_1
0x40174e6	    0xc74070020000	               mov dword [rax + 0x70], 2	      9613	elf.c	FUNCTION_143	SWITCH_1
0x40174ed	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9616	elf.c	FUNCTION_143	SWITCH_1
0x40174f1	        0x488b4008	                mov rax, qword [rax + 8]	      9616	elf.c	FUNCTION_143	SWITCH_1
0x40174f5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9616	elf.c	FUNCTION_143	SWITCH_1
0x40174f9	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      9616	elf.c	FUNCTION_143	SWITCH_1
0x40174fd	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9616	elf.c	FUNCTION_143	SWITCH_1
0x4017501	        0x4883c208	                              add rdx, 8	      9616	elf.c	FUNCTION_143	SWITCH_1
0x4017505	          0x4889d7	                            mov rdi, rdx	      9616	elf.c	FUNCTION_143	SWITCH_1
0x4017508	            0xffd0	                                call rax	      9616	elf.c	FUNCTION_143	SWITCH_1
0x401750a	          0x89459c	             mov dword [rbp - 0x64], eax	      9616	elf.c	FUNCTION_143	SWITCH_1
0x401750d	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x4017511	     0xf8419010000	                            je 0x4017630	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x4017517	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_8
0x401751b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_8
0x401751f	      0xbe00000000	                              mov esi, 0	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_8
0x4017524	          0x4889c7	                            mov rdi, rax	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_8
0x4017527	      0xe8a0f2ffff	        call sym.elfcore_maybe_make_sect	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_8
0x401752c	            0x85c0	                           test eax, eax	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_8
0x401752e	     0xf85fc000000	                           jne 0x4017630	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_8
0x4017534	      0xb800000000	                              mov eax, 0	      9620	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6
0x4017539	      0xe9f8000000	                           jmp 0x4017636	      9620	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6
0x401753e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9626	elf.c	FUNCTION_143	SWITCH_1
0x4017542	        0x488b4008	                mov rax, qword [rax + 8]	      9626	elf.c	FUNCTION_143	SWITCH_1
0x4017546	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9626	elf.c	FUNCTION_143	SWITCH_1
0x401754a	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      9626	elf.c	FUNCTION_143	SWITCH_1
0x401754e	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9626	elf.c	FUNCTION_143	SWITCH_1
0x4017552	        0x4883c204	                              add rdx, 4	      9626	elf.c	FUNCTION_143	SWITCH_1
0x4017556	          0x4889d7	                            mov rdi, rdx	      9626	elf.c	FUNCTION_143	SWITCH_1
0x4017559	            0xffd0	                                call rax	      9626	elf.c	FUNCTION_143	SWITCH_1
0x401755b	        0x488945b8	             mov qword [rbp - 0x48], rax	      9626	elf.c	FUNCTION_143	SWITCH_1
0x401755f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      9627	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x4017563	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9627	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x4017567	      0xbe00000000	                              mov esi, 0	      9627	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x401756c	          0x4889c7	                            mov rdi, rax	      9627	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x401756f	      0xb800000000	                              mov eax, 0	      9627	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x4017574	      0xe800000000	                          call 0x4017579	      9627	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x4017579	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_10
0x401757d	          0x4889c7	                            mov rdi, rax	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_10
0x4017580	      0xe800000000	                          call 0x4017585	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_10
0x4017585	        0x4883c001	                              add rax, 1	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_10
0x4017589	        0x488945a0	             mov qword [rbp - 0x60], rax	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_10
0x401758d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4017591	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4017595	          0x4889d6	                            mov rsi, rdx	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4017598	          0x4889c7	                            mov rdi, rax	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x401759b	      0xe800000000	                          call 0x40175a0	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x40175a0	        0x488945a8	             mov qword [rbp - 0x58], rax	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x40175a4	      0x48837da800	               cmp qword [rbp - 0x58], 0	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x40175a9	            0x750a	                           jne 0x40175b5	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x40175ab	      0xb800000000	                              mov eax, 0	      9632	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x40175b0	      0xe981000000	                           jmp 0x4017636	      9632	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x40175b5	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      9634	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x40175b9	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      9634	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x40175bd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9634	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x40175c1	          0x4889ce	                            mov rsi, rcx	      9634	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x40175c4	          0x4889c7	                            mov rdi, rax	      9634	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x40175c7	      0xe800000000	                          call 0x40175cc	      9634	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x40175cc	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_13
0x40175d0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_13
0x40175d4	      0xba00010000	                          mov edx, 0x100	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_13
0x40175d9	          0x4889ce	                            mov rsi, rcx	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_13
0x40175dc	          0x4889c7	                            mov rdi, rax	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_13
0x40175df	      0xe800000000	                          call 0x40175e4	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_13
0x40175e4	        0x488945b0	             mov qword [rbp - 0x50], rax	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_13
0x40175e8	      0x48837db000	               cmp qword [rbp - 0x50], 0	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x40175ed	            0x7507	                           jne 0x40175f6	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x40175ef	      0xb800000000	                              mov eax, 0	      9639	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x40175f4	            0xeb40	                           jmp 0x4017636	      9639	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x40175f6	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9641	elf.c	FUNCTION_143	SWITCH_1
0x40175fa	        0x488b5008	                mov rdx, qword [rax + 8]	      9641	elf.c	FUNCTION_143	SWITCH_1
0x40175fe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      9641	elf.c	FUNCTION_143	SWITCH_1
0x4017602	        0x48895038	             mov qword [rax + 0x38], rdx	      9641	elf.c	FUNCTION_143	SWITCH_1
0x4017606	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9642	elf.c	FUNCTION_143	SWITCH_1
0x401760a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9642	elf.c	FUNCTION_143	SWITCH_1
0x401760e	          0x4889c2	                            mov rdx, rax	      9642	elf.c	FUNCTION_143	SWITCH_1
0x4017611	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      9642	elf.c	FUNCTION_143	SWITCH_1
0x4017615	    0x488990900000	             mov qword [rax + 0x90], rdx	      9642	elf.c	FUNCTION_143	SWITCH_1
0x401761c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      9643	elf.c	FUNCTION_143	SWITCH_1
0x4017620	    0xc74070020000	               mov dword [rax + 0x70], 2	      9643	elf.c	FUNCTION_143	SWITCH_1
0x4017627	            0xeb08	                           jmp 0x4017631	      9644	elf.c	FUNCTION_143	SWITCH_1
0x4017629	      0xb801000000	                              mov eax, 1	      9647	elf.c	FUNCTION_143	SWITCH_1
0x401762e	            0xeb06	                           jmp 0x4017636	      9647	elf.c	FUNCTION_143	SWITCH_1
0x4017630	              0x90	                                     nop	      9621	elf.c	FUNCTION_143	SWITCH_1
0x4017631	      0xb801000000	                              mov eax, 1	      9650	elf.c	FUNCTION_143
0x4017636	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      9651	elf.c	FUNCTION_143
0x401763a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9651	elf.c	FUNCTION_143
0x4017643	            0x7405	                            je 0x401764a	      9651	elf.c	FUNCTION_143
0x4017645	      0xe800000000	                          call 0x401764a	      9651	elf.c	FUNCTION_143
0x401764a	        0x4883c478	                           add rsp, 0x78	      9651	elf.c	FUNCTION_143
0x401764e	              0x5b	                                 pop rbx	      9651	elf.c	FUNCTION_143
0x401764f	              0x5d	                                 pop rbp	      9651	elf.c	FUNCTION_143
0x4017650	              0xc3	                                     ret	      9651	elf.c	FUNCTION_143
elfcore_write_s390_ctrs	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	24
0x4019e54	              0x55	                                push rbp	     10872	elf.c	FUNCTION_177
0x4019e55	          0x4889e5	                            mov rbp, rsp	     10872	elf.c	FUNCTION_177
0x4019e58	        0x4883ec40	                           sub rsp, 0x40	     10872	elf.c	FUNCTION_177
0x4019e5c	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10872	elf.c	FUNCTION_177
0x4019e60	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10872	elf.c	FUNCTION_177
0x4019e64	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10872	elf.c	FUNCTION_177
0x4019e68	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10872	elf.c	FUNCTION_177
0x4019e6c	        0x448945cc	             mov dword [rbp - 0x34], r8d	     10872	elf.c	FUNCTION_177
0x4019e70	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10873	elf.c	FUNCTION_177
0x4019e78	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e7c	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e80	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e84	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e8c	        0x4883ec08	                              sub rsp, 8	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e90	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e93	              0x57	                                push rdi	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e94	          0x4d89c1	                              mov r9, r8	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e97	    0x41b804030000	                          mov r8d, 0x304	     10874	elf.c	FUNCTION_177	CALL_1
0x4019e9d	          0x4889c7	                            mov rdi, rax	     10874	elf.c	FUNCTION_177	CALL_1
0x4019ea0	      0xe800000000	                          call 0x4019ea5	     10874	elf.c	FUNCTION_177	CALL_1
0x4019ea5	        0x4883c410	                           add rsp, 0x10	     10874	elf.c	FUNCTION_177	CALL_1
0x4019ea9	              0xc9	                                   leave	     10876	elf.c	FUNCTION_177
0x4019eaa	              0xc3	                                     ret	     10876	elf.c	FUNCTION_177
elfcore_grok_s390_tdb	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016e2a	              0x55	                                push rbp	      9288	elf.c	FUNCTION_130
0x4016e2b	          0x4889e5	                            mov rbp, rsp	      9288	elf.c	FUNCTION_130
0x4016e2e	        0x4883ec10	                           sub rsp, 0x10	      9288	elf.c	FUNCTION_130
0x4016e32	        0x48897df8	                mov qword [rbp - 8], rdi	      9288	elf.c	FUNCTION_130
0x4016e36	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9288	elf.c	FUNCTION_130
0x4016e3a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9289	elf.c	FUNCTION_130	CALL_1
0x4016e3e	        0x488b45f8	                mov rax, qword [rbp - 8]	      9289	elf.c	FUNCTION_130	CALL_1
0x4016e42	      0xbe00000000	                              mov esi, 0	      9289	elf.c	FUNCTION_130	CALL_1
0x4016e47	          0x4889c7	                            mov rdi, rax	      9289	elf.c	FUNCTION_130	CALL_1
0x4016e4a	      0xe8aafdffff	call sym.elfcore_make_note_pseudosection	      9289	elf.c	FUNCTION_130	CALL_1
0x4016e4f	              0xc9	                                   leave	      9290	elf.c	FUNCTION_130
0x4016e50	              0xc3	                                     ret	      9290	elf.c	FUNCTION_130
elfcore_grok_s390_last_break	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016ddc	              0x55	                                push rbp	      9276	elf.c	FUNCTION_128
0x4016ddd	          0x4889e5	                            mov rbp, rsp	      9276	elf.c	FUNCTION_128
0x4016de0	        0x4883ec10	                           sub rsp, 0x10	      9276	elf.c	FUNCTION_128
0x4016de4	        0x48897df8	                mov qword [rbp - 8], rdi	      9276	elf.c	FUNCTION_128
0x4016de8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9276	elf.c	FUNCTION_128
0x4016dec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9277	elf.c	FUNCTION_128	CALL_1
0x4016df0	        0x488b45f8	                mov rax, qword [rbp - 8]	      9277	elf.c	FUNCTION_128	CALL_1
0x4016df4	      0xbe00000000	                              mov esi, 0	      9277	elf.c	FUNCTION_128	CALL_1
0x4016df9	          0x4889c7	                            mov rdi, rax	      9277	elf.c	FUNCTION_128	CALL_1
0x4016dfc	      0xe8f8fdffff	call sym.elfcore_make_note_pseudosection	      9277	elf.c	FUNCTION_128	CALL_1
0x4016e01	              0xc9	                                   leave	      9278	elf.c	FUNCTION_128
0x4016e02	              0xc3	                                     ret	      9278	elf.c	FUNCTION_128
_bfd_elf_make_empty_symbol	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	19
0x4015d73	              0x55	                                push rbp	      8623	elf.c	FUNCTION_98
0x4015d74	          0x4889e5	                            mov rbp, rsp	      8623	elf.c	FUNCTION_98
0x4015d77	        0x4883ec20	                           sub rsp, 0x20	      8623	elf.c	FUNCTION_98
0x4015d7b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8623	elf.c	FUNCTION_98
0x4015d7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8626	elf.c	FUNCTION_98	CALL_1
0x4015d83	      0xbe60000000	                           mov esi, 0x60	      8626	elf.c	FUNCTION_98	CALL_1
0x4015d88	          0x4889c7	                            mov rdi, rax	      8626	elf.c	FUNCTION_98	CALL_1
0x4015d8b	      0xe800000000	                          call 0x4015d90	      8626	elf.c	FUNCTION_98	CALL_1
0x4015d90	        0x488945f8	                mov qword [rbp - 8], rax	      8626	elf.c	FUNCTION_98	CALL_1
0x4015d94	      0x48837df800	                  cmp qword [rbp - 8], 0	      8627	elf.c	FUNCTION_98	IF_1
0x4015d99	            0x7507	                           jne 0x4015da2	      8627	elf.c	FUNCTION_98	IF_1
0x4015d9b	      0xb800000000	                              mov eax, 0	      8628	elf.c	FUNCTION_98	IF_1
0x4015da0	            0xeb0f	                           jmp 0x4015db1	      8628	elf.c	FUNCTION_98	IF_1
0x4015da2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8629	elf.c	FUNCTION_98
0x4015da6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      8629	elf.c	FUNCTION_98
0x4015daa	          0x488910	                    mov qword [rax], rdx	      8629	elf.c	FUNCTION_98
0x4015dad	        0x488b45f8	                mov rax, qword [rbp - 8]	      8630	elf.c	FUNCTION_98
0x4015db1	              0xc9	                                   leave	      8631	elf.c	FUNCTION_98
0x4015db2	              0xc3	                                     ret	      8631	elf.c	FUNCTION_98
bfd_elf_string_from_elf_section	ELSE,0:DO,0:CALL,10:WHILE,0:FOR,0:IF,6:SWITCH,0:functions,0	115
0x4001249	              0x55	                                push rbp	       327	elf.c	FUNCTION_17
0x400124a	          0x4889e5	                            mov rbp, rsp	       327	elf.c	FUNCTION_17
0x400124d	            0x4154	                                push r12	       327	elf.c	FUNCTION_17
0x400124f	              0x53	                                push rbx	       327	elf.c	FUNCTION_17
0x4001250	        0x4883ec20	                           sub rsp, 0x20	       327	elf.c	FUNCTION_17
0x4001254	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       327	elf.c	FUNCTION_17
0x4001258	          0x8975d4	             mov dword [rbp - 0x2c], esi	       327	elf.c	FUNCTION_17
0x400125b	          0x8955d0	             mov dword [rbp - 0x30], edx	       327	elf.c	FUNCTION_17
0x400125e	        0x837dd000	               cmp dword [rbp - 0x30], 0	       330	elf.c	FUNCTION_17	IF_1
0x4001262	            0x750a	                           jne 0x400126e	       330	elf.c	FUNCTION_17	IF_1
0x4001264	      0xb800000000	                              mov eax, 0	       331	elf.c	FUNCTION_17	IF_1
0x4001269	      0xe971010000	                           jmp 0x40013df	       331	elf.c	FUNCTION_17	IF_1
0x400126e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001272	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001279	        0x488b4058	            mov rax, qword [rax + 0x58] 	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x400127d	          0x4885c0	                           test rax, rax	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001280	            0x7416	                            je 0x4001298	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001282	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001286	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x400128d	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001293	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001296	            0x770a	                            ja 0x40012a2	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001298	      0xb800000000	                              mov eax, 0	       334	elf.c	FUNCTION_17	IF_2
0x400129d	      0xe93d010000	                           jmp 0x40013df	       334	elf.c	FUNCTION_17	IF_2
0x40012a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       336	elf.c	FUNCTION_17	CALL_3
0x40012a6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       336	elf.c	FUNCTION_17	CALL_3
0x40012ad	        0x488b4058	            mov rax, qword [rax + 0x58] 	       336	elf.c	FUNCTION_17	CALL_3
0x40012b1	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       336	elf.c	FUNCTION_17	CALL_3
0x40012b4	        0x48c1e203	                              shl rdx, 3	       336	elf.c	FUNCTION_17	CALL_3
0x40012b8	          0x4801d0	                            add rax, rdx	       336	elf.c	FUNCTION_17	CALL_3
0x40012bb	          0x488b00	                    mov rax, qword [rax]	       336	elf.c	FUNCTION_17	CALL_3
0x40012be	        0x488945e8	             mov qword [rbp - 0x18], rax	       336	elf.c	FUNCTION_17	CALL_3
0x40012c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	elf.c	FUNCTION_17	IF_3
0x40012c6	        0x488b4048	            mov rax, qword [rax + 0x48] 	       338	elf.c	FUNCTION_17	IF_3
0x40012ca	          0x4885c0	                           test rax, rax	       338	elf.c	FUNCTION_17	IF_3
0x40012cd	            0x756d	                           jne 0x400133c	       338	elf.c	FUNCTION_17	IF_3
0x40012cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012d3	          0x8b4004	                mov eax, dword [rax + 4]	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012d6	          0x83f803	                              cmp eax, 3	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012d9	            0x7441	                            je 0x400131c	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012df	          0x8b4004	                mov eax, dword [rax + 4]	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012e2	      0x3dffffff5f	                     cmp eax, 0x5fffffff	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012e7	            0x7733	                            ja 0x400131c	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x40012e9	      0xbe00000000	                              mov esi, 0	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012ee	      0xbf00000000	                              mov edi, 0	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012f3	      0xe800000000	                          call 0x40012f8	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012f8	          0x4889c1	                            mov rcx, rax	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012fb	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001302	          0x4889c6	                            mov rsi, rax	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001305	          0x4889cf	                            mov rdi, rcx	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001308	      0xb800000000	                              mov eax, 0	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x400130d	      0xe800000000	                          call 0x4001312	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001312	      0xb800000000	                              mov eax, 0	       347	elf.c	FUNCTION_17	IF_3	IF_4
0x4001317	      0xe9c3000000	                           jmp 0x40013df	       347	elf.c	FUNCTION_17	IF_3	IF_4
0x400131c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       350	elf.c	FUNCTION_17	IF_3	IF_5	CALL_6
0x400131f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       350	elf.c	FUNCTION_17	IF_3	IF_5	CALL_6
0x4001323	            0x89d6	                            mov esi, edx	       350	elf.c	FUNCTION_17	IF_3	IF_5	CALL_6
0x4001325	          0x4889c7	                            mov rdi, rax	       350	elf.c	FUNCTION_17	IF_3	IF_5	CALL_6
0x4001328	      0xe84bfdffff	        call sym.bfd_elf_get_str_section	       350	elf.c	FUNCTION_17	IF_3	IF_5	CALL_6
0x400132d	          0x4885c0	                           test rax, rax	       350	elf.c	FUNCTION_17	IF_3	IF_5	CALL_6
0x4001330	            0x750a	                           jne 0x400133c	       350	elf.c	FUNCTION_17	IF_3	IF_5	CALL_6
0x4001332	      0xb800000000	                              mov eax, 0	       351	elf.c	FUNCTION_17	IF_3	IF_5
0x4001337	      0xe9a3000000	                           jmp 0x40013df	       351	elf.c	FUNCTION_17	IF_3	IF_5
0x400133c	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       354	elf.c	FUNCTION_17	IF_6
0x400133f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       354	elf.c	FUNCTION_17	IF_6
0x4001343	        0x488b4020	            mov rax, qword [rax + 0x20] 	       354	elf.c	FUNCTION_17	IF_6
0x4001347	          0x4839c2	                            cmp rdx, rax	       354	elf.c	FUNCTION_17	IF_6
0x400134a	     0xf8281000000	                            jb 0x40013d1	       354	elf.c	FUNCTION_17	IF_6
0x4001350	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       356	elf.c	FUNCTION_17	IF_6	CALL_7
0x4001354	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       356	elf.c	FUNCTION_17	IF_6	CALL_7
0x400135b	          0x8b4050	            mov eax, dword [rax + 0x50] 	       356	elf.c	FUNCTION_17	IF_6	CALL_7
0x400135e	          0x8945e4	             mov dword [rbp - 0x1c], eax	       356	elf.c	FUNCTION_17	IF_6	CALL_7
0x4001361	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001364	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001367	            0x750b	                           jne 0x4001374	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001369	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	elf.c	FUNCTION_17	IF_6
0x400136d	            0x8b00	                    mov eax, dword [rax]	       361	elf.c	FUNCTION_17	IF_6
0x400136f	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	       361	elf.c	FUNCTION_17	IF_6
0x4001372	            0x741c	                            je 0x4001390	       361	elf.c	FUNCTION_17	IF_6
0x4001374	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       363	elf.c	FUNCTION_17	IF_6	CALL_10
0x4001378	            0x8b10	                    mov edx, dword [rax]	       363	elf.c	FUNCTION_17	IF_6	CALL_10
0x400137a	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x400137d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001381	            0x89ce	                            mov esi, ecx	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001383	          0x4889c7	                            mov rdi, rax	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001386	      0xe800000000	                          call 0x400138b	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x400138b	          0x4989c4	                            mov r12, rax	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x400138e	            0xeb06	                           jmp 0x4001396	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001390	    0x41bc00000000	                             mov r12d, 0	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001396	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	elf.c	FUNCTION_17	IF_6
0x400139a	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       360	elf.c	FUNCTION_17	IF_6
0x400139e	      0xbe00000000	                              mov esi, 0	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x40013a3	      0xbf00000000	                              mov edi, 0	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x40013a8	      0xe800000000	                          call 0x40013ad	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x40013ad	          0x4889c7	                            mov rdi, rax	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x40013b0	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x40013b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x40013b7	          0x4d89e0	                             mov r8, r12	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x40013ba	          0x4889d9	                            mov rcx, rbx	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x40013bd	          0x4889c6	                            mov rsi, rax	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x40013c0	      0xb800000000	                              mov eax, 0	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x40013c5	      0xe800000000	                          call 0x40013ca	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x40013ca	      0xb800000000	                              mov eax, 0	       364	elf.c	FUNCTION_17	IF_6
0x40013cf	            0xeb0e	                           jmp 0x40013df	       364	elf.c	FUNCTION_17	IF_6
0x40013d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       367	elf.c	FUNCTION_17
0x40013d5	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       367	elf.c	FUNCTION_17
0x40013d9	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       367	elf.c	FUNCTION_17
0x40013dc	          0x4801d0	                            add rax, rdx	       367	elf.c	FUNCTION_17
0x40013df	        0x4883c420	                           add rsp, 0x20	       368	elf.c	FUNCTION_17
0x40013e3	              0x5b	                                 pop rbx	       368	elf.c	FUNCTION_17
0x40013e4	            0x415c	                                 pop r12	       368	elf.c	FUNCTION_17
0x40013e6	              0x5d	                                 pop rbp	       368	elf.c	FUNCTION_17
0x40013e7	              0xc3	                                     ret	       368	elf.c	FUNCTION_17
elfcore_grok_s390_ctrs	ELSE,0:DO,0:CALL,1:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	12
0x4016d8e	              0x55	                                push rbp	      9264	elf.c	FUNCTION_126
0x4016d8f	          0x4889e5	                            mov rbp, rsp	      9264	elf.c	FUNCTION_126
0x4016d92	        0x4883ec10	                           sub rsp, 0x10	      9264	elf.c	FUNCTION_126
0x4016d96	        0x48897df8	                mov qword [rbp - 8], rdi	      9264	elf.c	FUNCTION_126
0x4016d9a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9264	elf.c	FUNCTION_126
0x4016d9e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9265	elf.c	FUNCTION_126	CALL_1
0x4016da2	        0x488b45f8	                mov rax, qword [rbp - 8]	      9265	elf.c	FUNCTION_126	CALL_1
0x4016da6	      0xbe00000000	                              mov esi, 0	      9265	elf.c	FUNCTION_126	CALL_1
0x4016dab	          0x4889c7	                            mov rdi, rax	      9265	elf.c	FUNCTION_126	CALL_1
0x4016dae	      0xe846feffff	call sym.elfcore_make_note_pseudosection	      9265	elf.c	FUNCTION_126	CALL_1
0x4016db3	              0xc9	                                   leave	      9266	elf.c	FUNCTION_126
0x4016db4	              0xc3	                                     ret	      9266	elf.c	FUNCTION_126
bfd_get_elf_phdrs	ELSE,0:DO,0:CALL,4:WHILE,0:FOR,0:IF,1:SWITCH,0:functions,0	32
0x401ad7b	              0x55	                                push rbp	     11241	elf.c	FUNCTION_194
0x401ad7c	          0x4889e5	                            mov rbp, rsp	     11241	elf.c	FUNCTION_194
0x401ad7f	        0x4883ec20	                           sub rsp, 0x20	     11241	elf.c	FUNCTION_194
0x401ad83	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11241	elf.c	FUNCTION_194
0x401ad87	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11241	elf.c	FUNCTION_194
0x401ad8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11244	elf.c	FUNCTION_194	IF_1
0x401ad8f	        0x488b4008	                mov rax, qword [rax + 8]	     11244	elf.c	FUNCTION_194	IF_1
0x401ad93	          0x8b4008	                mov eax, dword [rax + 8]	     11244	elf.c	FUNCTION_194	IF_1
0x401ad96	          0x83f805	                              cmp eax, 5	     11244	elf.c	FUNCTION_194	IF_1
0x401ad99	            0x7411	                            je 0x401adac	     11244	elf.c	FUNCTION_194	IF_1
0x401ad9b	      0xbf03000000	                              mov edi, 3	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x401ada0	      0xe800000000	                          call 0x401ada5	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x401ada5	      0xb8ffffffff	                     mov eax, 0xffffffff	     11247	elf.c	FUNCTION_194	IF_1
0x401adaa	            0xeb3e	                           jmp 0x401adea	     11247	elf.c	FUNCTION_194	IF_1
0x401adac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11250	elf.c	FUNCTION_194	CALL_2
0x401adb0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     11250	elf.c	FUNCTION_194	CALL_2
0x401adb7	          0x8b4044	            mov eax, dword [rax + 0x44] 	     11250	elf.c	FUNCTION_194	CALL_2
0x401adba	          0x8945fc	                mov dword [rbp - 4], eax	     11250	elf.c	FUNCTION_194	CALL_2
0x401adbd	          0x8b45fc	                mov eax, dword [rbp - 4]	     11251	elf.c	FUNCTION_194	CALL_4
0x401adc0	            0x4898	                                    cdqe	     11251	elf.c	FUNCTION_194	CALL_4
0x401adc2	        0x48c1e006	                              shl rax, 6	     11251	elf.c	FUNCTION_194	CALL_4
0x401adc6	          0x4889c2	                            mov rdx, rax	     11251	elf.c	FUNCTION_194	CALL_4
0x401adc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11251	elf.c	FUNCTION_194	CALL_4
0x401adcd	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	     11251	elf.c	FUNCTION_194	CALL_4
0x401add4	        0x488b4860	            mov rcx, qword [rax + 0x60] 	     11251	elf.c	FUNCTION_194	CALL_4
0x401add8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11251	elf.c	FUNCTION_194	CALL_4
0x401addc	          0x4889ce	                            mov rsi, rcx	     11251	elf.c	FUNCTION_194	CALL_4
0x401addf	          0x4889c7	                            mov rdi, rax	     11251	elf.c	FUNCTION_194	CALL_4
0x401ade2	      0xe800000000	                          call 0x401ade7	     11251	elf.c	FUNCTION_194	CALL_4
0x401ade7	          0x8b45fc	                mov eax, dword [rbp - 4]	     11254	elf.c	FUNCTION_194
0x401adea	              0xc9	                                   leave	     11255	elf.c	FUNCTION_194
0x401adeb	              0xc3	                                     ret	     11255	elf.c	FUNCTION_194
bfd_set_section_vma	ELSE,0:DO,0:CALL,0:WHILE,0:FOR,0:IF,0:SWITCH,0:functions,0	19
0x4000040	              0x55	                                push rbp	      1686	bfd.h	FUNCTION_209
0x4000041	          0x4889e5	                            mov rbp, rsp	      1686	bfd.h	FUNCTION_209
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	      1686	bfd.h	FUNCTION_209
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1686	bfd.h	FUNCTION_209
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1686	bfd.h	FUNCTION_209
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_209
0x4000054	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1687	bfd.h	FUNCTION_209
0x4000058	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_209
0x400005c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_209
0x4000060	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1687	bfd.h	FUNCTION_209
0x4000064	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_209
0x4000068	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_209
0x400006c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1688	bfd.h	FUNCTION_209
0x4000070	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1688	bfd.h	FUNCTION_209
0x4000074	          0x83ca01	                               or edx, 1	      1688	bfd.h	FUNCTION_209
0x4000077	          0x885024	               mov byte [rax + 0x24], dl	      1688	bfd.h	FUNCTION_209
0x400007a	      0xb801000000	                              mov eax, 1	      1689	bfd.h	FUNCTION_209
0x400007f	              0x5d	                                 pop rbp	      1690	bfd.h	FUNCTION_209
0x4000080	              0xc3	                                     ret	      1690	bfd.h	FUNCTION_209
