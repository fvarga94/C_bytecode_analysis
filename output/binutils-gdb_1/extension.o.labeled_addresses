ext_lang_objfile_script_sourcer	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0	20
0x4000300	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       282	extension.c	FUNCTION_14	IF_1
0x4000304	          0x4885c0	                           test rax, rax	       282	extension.c	FUNCTION_14	IF_1
0x4000307	            0x7437	                            je 0x4000340	       282	extension.c	FUNCTION_14	IF_1
0x4000309	          0x488b00	                    mov rax, qword [rax]	       286	extension.c	FUNCTION_14	CALL_1
0x400030c	          0x4885c0	                           test rax, rax	       286	extension.c	FUNCTION_14	CALL_1
0x400030f	            0x7402	                            je 0x4000313	       286	extension.c	FUNCTION_14	CALL_1
0x4000311	            0xf3c3	                                     ret	       286	extension.c	FUNCTION_14	CALL_1
0x4000313	              0x50	                                push rax	       289	extension.c	FUNCTION_14
0x4000314	      0xbf00000000	                              mov edi, 0	       281	extension.c	FUNCTION_14
0x4000319	      0xe800000000	                          call 0x400031e	       286	extension.c	FUNCTION_14	CALL_1
0x400031e	    0x41b800000000	                              mov r8d, 0	       286	extension.c	FUNCTION_14	CALL_1
0x4000324	          0x4889c2	                            mov rdx, rax	       286	extension.c	FUNCTION_14	CALL_1
0x4000327	      0xb900000000	                              mov ecx, 0	       286	extension.c	FUNCTION_14	CALL_1
0x400032c	      0xbe0d010000	                          mov esi, 0x10d	       286	extension.c	FUNCTION_14	CALL_1
0x4000331	      0xbf00000000	                              mov edi, 0	       286	extension.c	FUNCTION_14	CALL_1
0x4000336	            0x31c0	                            xor eax, eax	       286	extension.c	FUNCTION_14	CALL_1
0x4000338	      0xe800000000	                          call 0x400033d	       286	extension.c	FUNCTION_14	CALL_1
0x400033d	           0xf1f00	                         nop dword [rax]	       286	extension.c	FUNCTION_14	CALL_1
0x4000340	            0x31c0	                            xor eax, eax	       283	extension.c	FUNCTION_14	IF_1
0x4000342	              0xc3	                                     ret	       289	extension.c	FUNCTION_14
ext_lang_name	DO,0:SWITCH,0:IF,0:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0	3
0x4000270	              0xe8	                              add al, ch	       229	extension.c	FUNCTION_9
0x4000272	               0x0	                      add byte [rax], al	       229	extension.c	FUNCTION_9
0x4000274	               0x0	                                 invalid	       230	extension.c	FUNCTION_9
apply_ext_lang_frame_filter	DO,0:SWITCH,0:IF,2:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0	39
0x40007a0	      0xbf00000000	                              mov edi, 0	       550	extension.c	FUNCTION_24
0x40007a5	      0xe800000000	                          call 0x40007aa	       550	extension.c	FUNCTION_24
0x40007aa	      0xb900000000	                              mov ecx, 0	       550	extension.c	FUNCTION_24
0x40007af	          0x4989c0	                             mov r8, rax	       550	extension.c	FUNCTION_24
0x40007b2	      0xba00000000	                              mov edx, 0	       550	extension.c	FUNCTION_24
0x40007b7	      0xbe05020000	                          mov esi, 0x205	       550	extension.c	FUNCTION_24
0x40007bc	      0xbf00000000	                              mov edi, 0	       550	extension.c	FUNCTION_24
0x40007c1	            0x31c0	                            xor eax, eax	       550	extension.c	FUNCTION_24
0x40007c3	      0xe800000000	                          call 0x40007c8	       554	extension.c	FUNCTION_24
0x40007c8	     0xf1f84000000	                   nop dword [rax + rax]	       550	extension.c	FUNCTION_24
0x40007d0	        0x4883c418	                           add rsp, 0x18	       554	extension.c	FUNCTION_24
0x40007d4	      0xb801000000	                              mov eax, 1	       554	extension.c	FUNCTION_24
0x40007d9	              0x5b	                                 pop rbx	       558	extension.c	FUNCTION_24	IF_1
0x40007da	              0x5d	                                 pop rbp	       558	extension.c	FUNCTION_24	IF_1
0x40007db	            0x415c	                                 pop r12	       558	extension.c	FUNCTION_24	IF_1
0x40007dd	            0x415d	                                 pop r13	       558	extension.c	FUNCTION_24	IF_1
0x40007df	            0x415e	                                 pop r14	       558	extension.c	FUNCTION_24	IF_1
0x40007e1	            0x415f	                                 pop r15	       558	extension.c	FUNCTION_24	IF_1
0x40007e3	              0xc3	                                     ret	       562	extension.c	FUNCTION_24
0x40007e4	            0x6690	                                     nop	       562	extension.c	FUNCTION_24
0x40007e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       562	extension.c	FUNCTION_24
0x40007f0	            0x4157	                                push r15	       562	extension.c	FUNCTION_24
0x40007f2	            0x4156	                                push r14	       562	extension.c	FUNCTION_24
0x40007f4	          0x4989ff	                            mov r15, rdi	       562	extension.c	FUNCTION_24
0x40007f7	            0x4155	                                push r13	       562	extension.c	FUNCTION_24
0x40007f9	            0x4154	                                push r12	       562	extension.c	FUNCTION_24
0x40007fb	          0x4189f6	                           mov r14d, esi	       566	extension.c	FUNCTION_24	IF_2
0x40007fe	              0x55	                                push rbp	       566	extension.c	FUNCTION_24	IF_2
0x40007ff	              0x53	                                push rbx	       566	extension.c	FUNCTION_24	IF_2
0x4000800	          0x4189d5	                           mov r13d, edx	       566	extension.c	FUNCTION_24	IF_2
0x4000803	          0x4989cc	                            mov r12, rcx	       566	extension.c	FUNCTION_24	IF_2
0x4000806	          0x4489cb	                            mov ebx, r9d	       554	extension.c	FUNCTION_24
0x4000809	      0xbd00000000	                              mov ebp, 0	       554	extension.c	FUNCTION_24
0x400080e	        0x4883ec18	                           sub rsp, 0x18	       570	extension.c	FUNCTION_24
0x4000812	      0xbf00000000	                              mov edi, 0	       570	extension.c	FUNCTION_24
0x4000817	      0x448944240c	              mov dword [rsp + 0xc], r8d	       571	extension.c	FUNCTION_24
0x400081c	         0xf1f4000	                         nop dword [rax]	       571	extension.c	FUNCTION_24
0x4000820	              0x48	                                 invalid	       571	extension.c	FUNCTION_24
0x4000821	              0x8b	                                 invalid	       571	extension.c	FUNCTION_24
check_quit_flag	DO,0:SWITCH,0:IF,3:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0	33
0x40009d0	               0x0	                      add byte [rax], al	       823	extension.c	FUNCTION_34
0x40009d2	               0x0	                      add byte [rax], al	       823	extension.c	FUNCTION_34
0x40009d4	            0x31c0	                            xor eax, eax	       823	extension.c	FUNCTION_34
0x40009d6	      0xe800000000	                          call 0x40009db	       823	extension.c	FUNCTION_34
0x40009db	       0xf1f440000	                   nop dword [rax + rax]	       823	extension.c	FUNCTION_34
0x40009e0	    0x488b05000000	            mov rax, qword [0x040009e7] 	       825	extension.c	FUNCTION_34	IF_1
0x40009e7	              0xc3	                                     ret	       825	extension.c	FUNCTION_34	IF_1
0x40009e8	     0xf1f84000000	                   nop dword [rax + rax]	       820	extension.c	FUNCTION_34
0x40009f0	    0x488b3d000000	            mov rdi, qword [0x040009f7] 	       826	extension.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x40009f7	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       823	extension.c	FUNCTION_34
0x40009fb	          0x4885c0	                           test rax, rax	       823	extension.c	FUNCTION_34
0x40009fe	            0x7410	                            je 0x4000a10	       823	extension.c	FUNCTION_34
0x4000a00	        0x488b4058	            mov rax, qword [rax + 0x58] 	       823	extension.c	FUNCTION_34
0x4000a04	          0x4885c0	                           test rax, rax	       825	extension.c	FUNCTION_34	IF_1
0x4000a07	            0x7407	                            je 0x4000a10	       825	extension.c	FUNCTION_34	IF_1
0x4000a09	            0xffe0	                                 jmp rax	       825	extension.c	FUNCTION_34	IF_1
0x4000a0b	       0xf1f440000	                   nop dword [rax + rax]	       826	extension.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x4000a10	    0xc70500000000	               mov dword [0x04000a1a], 1	       826	extension.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x4000a1a	      0xe900000000	                           jmp 0x4000a1f	       827	extension.c	FUNCTION_34	IF_1	IF_2
0x4000a1f	              0x90	                                     nop	       831	extension.c	FUNCTION_34	IF_3
0x4000a20	    0x488b05000000	            mov rax, qword [0x04000a27] 	       831	extension.c	FUNCTION_34	IF_3
0x4000a27	              0x53	                                push rbx	       836	extension.c	FUNCTION_34	IF_3	CALL_2
0x4000a28	          0x4885c0	                           test rax, rax	       836	extension.c	FUNCTION_34	IF_3	CALL_2
0x4000a2b	            0x7463	                            je 0x4000a90	       838	extension.c	FUNCTION_34	IF_3
0x4000a2d	        0x488b4060	            mov rax, qword [rax + 0x60] 	       838	extension.c	FUNCTION_34	IF_3
0x4000a31	            0x31db	                            xor ebx, ebx	       837	extension.c	FUNCTION_34	IF_3
0x4000a33	          0x4885c0	                           test rax, rax	       837	extension.c	FUNCTION_34	IF_3
0x4000a36	            0x740e	                            je 0x4000a46	       837	extension.c	FUNCTION_34	IF_3
0x4000a38	            0x31db	                            xor ebx, ebx	       837	extension.c	FUNCTION_34	IF_3
0x4000a3a	      0xbf00000000	                              mov edi, 0	       842	extension.c	FUNCTION_34
0x4000a3f	            0xffd0	                                call rax	       842	extension.c	FUNCTION_34
0x4000a41	            0x85c0	                           test eax, eax	       820	extension.c	FUNCTION_34
0x4000a43	               0xf	                                 invalid	       820	extension.c	FUNCTION_34
ext_lang_script_sourcer	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0	20
0x40002b0	            0x89de	                            mov esi, ebx	       265	extension.c	FUNCTION_13	IF_1
0x40002b2	          0x4889c7	                            mov rdi, rax	       265	extension.c	FUNCTION_13	IF_1
0x40002b5	            0x31c0	                            xor eax, eax	       265	extension.c	FUNCTION_13	IF_1
0x40002b7	      0xe800000000	                          call 0x40002bc	       265	extension.c	FUNCTION_13	IF_1
0x40002bc	         0xf1f4000	                         nop dword [rax]	       269	extension.c	FUNCTION_13	CALL_1
0x40002c0	        0x488b4708	                mov rax, qword [rdi + 8]	       269	extension.c	FUNCTION_13	CALL_1
0x40002c4	              0xc3	                                     ret	       269	extension.c	FUNCTION_13	CALL_1
0x40002c5	              0x90	                                     nop	       269	extension.c	FUNCTION_13	CALL_1
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       269	extension.c	FUNCTION_13	CALL_1
0x40002d0	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       269	extension.c	FUNCTION_13	CALL_1
0x40002d4	              0xc3	                                     ret	       269	extension.c	FUNCTION_13	CALL_1
0x40002d5	              0x90	                                     nop	       269	extension.c	FUNCTION_13	CALL_1
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       269	extension.c	FUNCTION_13	CALL_1
0x40002e0	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       269	extension.c	FUNCTION_13	CALL_1
0x40002e4	              0xc3	                                     ret	       269	extension.c	FUNCTION_13	CALL_1
0x40002e5	              0x90	                                     nop	       269	extension.c	FUNCTION_13	CALL_1
0x40002e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       269	extension.c	FUNCTION_13	CALL_1
0x40002f0	              0x48	                                 invalid	       266	extension.c	FUNCTION_13	IF_1
0x40002f1	              0x8b	                                 invalid	       266	extension.c	FUNCTION_13	IF_1
0x40002f2	              0x47	                                 invalid	       272	extension.c	FUNCTION_13
apply_ext_lang_type_printers	DO,0:SWITCH,1:IF,1:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0	72
0x4000570	               0x0	                      add byte [rax], al	       428	extension.c	FUNCTION_21
0x4000572	          0x4885c0	                           test rax, rax	       428	extension.c	FUNCTION_21
0x4000575	            0x7413	                            je 0x400058a	       428	extension.c	FUNCTION_21
0x4000577	        0x488b4018	            mov rax, qword [rax + 0x18] 	       428	extension.c	FUNCTION_21
0x400057b	          0x4885c0	                           test rax, rax	       428	extension.c	FUNCTION_21
0x400057e	            0x740a	                            je 0x400058a	       428	extension.c	FUNCTION_21
0x4000580	          0x4889fe	                            mov rsi, rdi	       432	extension.c	FUNCTION_21
0x4000583	      0xbf00000000	                              mov edi, 0	       432	extension.c	FUNCTION_21
0x4000588	            0xffd0	                                call rax	       428	extension.c	FUNCTION_21
0x400058a	    0x488b05000000	            mov rax, qword [0x04000591] 	       428	extension.c	FUNCTION_21
0x4000591	          0x4885c0	                           test rax, rax	       428	extension.c	FUNCTION_21
0x4000594	            0x741a	                            je 0x40005b0	       428	extension.c	FUNCTION_21
0x4000596	        0x488b4018	            mov rax, qword [rax + 0x18] 	       428	extension.c	FUNCTION_21
0x400059a	          0x4885c0	                           test rax, rax	       432	extension.c	FUNCTION_21
0x400059d	            0x7411	                            je 0x40005b0	       432	extension.c	FUNCTION_21
0x400059f	          0x4889de	                            mov rsi, rbx	       432	extension.c	FUNCTION_21
0x40005a2	      0xbf00000000	                              mov edi, 0	       437	extension.c	FUNCTION_21	IF_1
0x40005a7	              0x5b	                                 pop rbx	       434	extension.c	FUNCTION_21
0x40005a8	            0xffe0	                                 jmp rax	       434	extension.c	FUNCTION_21
0x40005aa	    0x660f1f440000	                    nop word [rax + rax]	       434	extension.c	FUNCTION_21
0x40005b0	              0x5b	                                 pop rbx	       437	extension.c	FUNCTION_21	IF_1
0x40005b1	              0xc3	                                     ret	       437	extension.c	FUNCTION_21	IF_1
0x40005b2	         0xf1f4000	                         nop dword [rax]	       440	extension.c	FUNCTION_21
0x40005b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       440	extension.c	FUNCTION_21
0x40005c0	            0x4154	                                push r12	       441	extension.c	FUNCTION_21	SWITCH_1
0x40005c2	              0x55	                                push rbp	       441	extension.c	FUNCTION_21	SWITCH_1
0x40005c3	          0x4989fc	                            mov r12, rdi	       441	extension.c	FUNCTION_21	SWITCH_1
0x40005c6	              0x53	                                push rbx	       441	extension.c	FUNCTION_21	SWITCH_1
0x40005c7	          0x4889f5	                            mov rbp, rsi	       441	extension.c	FUNCTION_21	SWITCH_1
0x40005ca	      0xbb00000000	                              mov ebx, 0	       455	extension.c	FUNCTION_21
0x40005cf	      0xbf00000000	                              mov edi, 0	       456	extension.c	FUNCTION_21
0x40005d4	        0x4883ec10	                           sub rsp, 0x10	       456	extension.c	FUNCTION_21
0x40005d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       456	extension.c	FUNCTION_21
0x40005e1	      0x4889442408	                mov qword [rsp + 8], rax	       456	extension.c	FUNCTION_21
0x40005e6	            0x31c0	                            xor eax, eax	       456	extension.c	FUNCTION_21
0x40005e8	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       456	extension.c	FUNCTION_21
0x40005ec	          0x4885c0	                           test rax, rax	       456	extension.c	FUNCTION_21
0x40005ef	            0x744f	                            je 0x4000640	       456	extension.c	FUNCTION_21
0x40005f1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       456	extension.c	FUNCTION_21
0x40005f5	    0x48c704240000	                      mov qword [rsp], 0	       432	extension.c	FUNCTION_21
0x40005fd	          0x4885c0	                           test rax, rax	       432	extension.c	FUNCTION_21
0x4000600	            0x743e	                            je 0x4000640	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000602	          0x4889e1	                            mov rcx, rsp	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000605	          0x4889ea	                            mov rdx, rbp	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000608	          0x4c89e6	                            mov rsi, r12	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x400060b	            0xffd0	                                call rax	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x400060d	          0x83f801	                              cmp eax, 1	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000610	            0x742e	                            je 0x4000640	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000612	            0x726c	                            jb 0x4000680	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000614	          0x83f802	                              cmp eax, 2	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000617	            0x7537	                           jne 0x4000650	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000619	            0x31c0	                            xor eax, eax	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x400061b	      0x488b542408	                mov rdx, qword [rsp + 8]	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000620	    0x644833142528	                xor rdx, qword fs:[0x28]	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000629	     0xf8583000000	                           jne 0x40006b2	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x400062f	        0x4883c410	                           add rsp, 0x10	       451	extension.c	FUNCTION_21	SWITCH_1	CALL_3
0x4000633	              0x5b	                                 pop rbx	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000634	              0x5d	                                 pop rbp	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000635	            0x415c	                                 pop r12	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000637	              0xc3	                                     ret	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000638	     0xf1f84000000	                   nop dword [rax + rax]	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000640	        0x4883c308	                              add rbx, 8	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000644	          0x488b3b	                    mov rdi, qword [rbx]	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000647	          0x4885ff	                           test rdi, rdi	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x400064a	            0x759c	                           jne 0x40005e8	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x400064c	            0xebcb	                           jmp 0x4000619	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x400064e	            0x6690	                                     nop	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000650	      0xbf00000000	                              mov edi, 0	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000655	      0xe800000000	                          call 0x400065a	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x400065a	      0xb900000000	                              mov ecx, 0	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x400065f	          0x4989c0	                             mov r8, rax	       444	extension.c	FUNCTION_21	SWITCH_1	CALL_2
0x4000662	      0xba00000000	                              mov edx, 0	       456	extension.c	FUNCTION_21
eval_ext_lang_from_control_command	DO,0:SWITCH,0:IF,2:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0	32
0x4000410	        0x4883ec08	                              sub rsp, 8	       354	extension.c	FUNCTION_18
0x4000414	    0x488b05000000	            mov rax, qword [0x0400041b] 	       354	extension.c	FUNCTION_18
0x400041b	          0x4885c0	                           test rax, rax	       360	extension.c	FUNCTION_18	IF_1
0x400041e	            0x740f	                            je 0x400042f	       354	extension.c	FUNCTION_18
0x4000420	          0x488b00	                    mov rax, qword [rax]	       360	extension.c	FUNCTION_18	IF_1
0x4000423	          0x4885c0	                           test rax, rax	       360	extension.c	FUNCTION_18	IF_1
0x4000426	            0x7407	                            je 0x400042f	       360	extension.c	FUNCTION_18	IF_1
0x4000428	      0xbf00000000	                              mov edi, 0	       360	extension.c	FUNCTION_18	IF_1
0x400042d	            0xffd0	                                call rax	       373	extension.c	FUNCTION_18	CALL_3
0x400042f	    0x488b05000000	            mov rax, qword [0x04000436] 	       373	extension.c	FUNCTION_18	CALL_3
0x4000436	          0x4885c0	                           test rax, rax	       373	extension.c	FUNCTION_18	CALL_3
0x4000439	            0x7415	                            je 0x4000450	       373	extension.c	FUNCTION_18	CALL_3
0x400043b	          0x488b00	                    mov rax, qword [rax]	       373	extension.c	FUNCTION_18	CALL_3
0x400043e	          0x4885c0	                           test rax, rax	       373	extension.c	FUNCTION_18	CALL_3
0x4000441	            0x740d	                            je 0x4000450	       373	extension.c	FUNCTION_18	CALL_3
0x4000443	      0xbf00000000	                              mov edi, 0	       373	extension.c	FUNCTION_18	CALL_3
0x4000448	        0x4883c408	                              add rsp, 8	       373	extension.c	FUNCTION_18	CALL_3
0x400044c	            0xffe0	                                 jmp rax	       373	extension.c	FUNCTION_18	CALL_3
0x400044e	            0x6690	                                     nop	       373	extension.c	FUNCTION_18	CALL_3
0x4000450	        0x4883c408	                              add rsp, 8	       373	extension.c	FUNCTION_18	CALL_3
0x4000454	              0xc3	                                     ret	       373	extension.c	FUNCTION_18	CALL_3
0x4000455	              0x90	                                     nop	       373	extension.c	FUNCTION_18	CALL_3
0x4000456	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       373	extension.c	FUNCTION_18	CALL_3
0x4000460	        0x4883ec08	                              sub rsp, 8	       362	extension.c	FUNCTION_18	IF_1	IF_2
0x4000464	          0x8b4710	            mov eax, dword [rdi + 0x10] 	       362	extension.c	FUNCTION_18	IF_1	IF_2
0x4000467	    0x390500000000	            cmp dword [0x0400046d], eax 	       363	extension.c	FUNCTION_18	IF_1	IF_2
0x400046d	          0x4889fe	                            mov rsi, rdi	       363	extension.c	FUNCTION_18	IF_1	IF_2
0x4000470	            0x7436	                            je 0x40004a8	       374	extension.c	FUNCTION_18
0x4000472	    0x3b0500000000	            cmp eax, dword [0x04000478] 	       374	extension.c	FUNCTION_18
0x4000478	            0x744e	                            je 0x40004c8	       358	extension.c	FUNCTION_18
0x400047a	      0xbf00000000	                              mov edi, 0	       358	extension.c	FUNCTION_18
0x400047f	      0xe800000000	                          call 0x4000484	       369	extension.c	FUNCTION_18	IF_1	CALL_2
apply_ext_lang_val_pretty_printer	DO,0:SWITCH,1:IF,1:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0	73
0x40006c0	    0x488b05000000	            mov rax, qword [0x040006c7] 	       494	extension.c	FUNCTION_23
0x40006c7	              0x53	                                push rbx	       494	extension.c	FUNCTION_23
0x40006c8	          0x4889fb	                            mov rbx, rdi	       494	extension.c	FUNCTION_23
0x40006cb	          0x4885c0	                           test rax, rax	       494	extension.c	FUNCTION_23
0x40006ce	            0x7413	                            je 0x40006e3	       494	extension.c	FUNCTION_23
0x40006d0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       494	extension.c	FUNCTION_23
0x40006d4	          0x4885c0	                           test rax, rax	       494	extension.c	FUNCTION_23
0x40006d7	            0x740a	                            je 0x40006e3	       494	extension.c	FUNCTION_23
0x40006d9	          0x4889fe	                            mov rsi, rdi	       494	extension.c	FUNCTION_23
0x40006dc	      0xbf00000000	                              mov edi, 0	       494	extension.c	FUNCTION_23
0x40006e1	            0xffd0	                                call rax	       494	extension.c	FUNCTION_23
0x40006e3	    0x488b05000000	            mov rax, qword [0x040006ea] 	       498	extension.c	FUNCTION_23
0x40006ea	          0x4885c0	                           test rax, rax	       494	extension.c	FUNCTION_23
0x40006ed	            0x7419	                            je 0x4000708	       498	extension.c	FUNCTION_23
0x40006ef	        0x488b4028	            mov rax, qword [rax + 0x28] 	       498	extension.c	FUNCTION_23
0x40006f3	          0x4885c0	                           test rax, rax	       498	extension.c	FUNCTION_23
0x40006f6	            0x7410	                            je 0x4000708	       502	extension.c	FUNCTION_23	IF_1
0x40006f8	          0x4889de	                            mov rsi, rbx	       502	extension.c	FUNCTION_23	IF_1
0x40006fb	      0xbf00000000	                              mov edi, 0	       502	extension.c	FUNCTION_23	IF_1
0x4000700	              0x5b	                                 pop rbx	       507	extension.c	FUNCTION_23
0x4000701	            0xffe0	                                 jmp rax	       507	extension.c	FUNCTION_23
0x4000703	       0xf1f440000	                   nop dword [rax + rax]	       507	extension.c	FUNCTION_23
0x4000708	              0x5b	                                 pop rbx	       507	extension.c	FUNCTION_23
0x4000709	              0xc3	                                     ret	       507	extension.c	FUNCTION_23
0x400070a	    0x660f1f440000	                    nop word [rax + rax]	       507	extension.c	FUNCTION_23
0x4000710	            0x4157	                                push r15	       507	extension.c	FUNCTION_23
0x4000712	            0x4156	                                push r14	       507	extension.c	FUNCTION_23
0x4000714	          0x4989ff	                            mov r15, rdi	       507	extension.c	FUNCTION_23
0x4000717	            0x4155	                                push r13	       507	extension.c	FUNCTION_23
0x4000719	            0x4154	                                push r12	       507	extension.c	FUNCTION_23
0x400071b	          0x4989f6	                            mov r14, rsi	       507	extension.c	FUNCTION_23
0x400071e	              0x55	                                push rbp	       508	extension.c	FUNCTION_23	SWITCH_1
0x400071f	              0x53	                                push rbx	       508	extension.c	FUNCTION_23	SWITCH_1
0x4000720	          0x4989d5	                            mov r13, rdx	       508	extension.c	FUNCTION_23	SWITCH_1
0x4000723	          0x4989cc	                            mov r12, rcx	       508	extension.c	FUNCTION_23	SWITCH_1
0x4000726	          0x4c89cb	                             mov rbx, r9	       508	extension.c	FUNCTION_23	SWITCH_1
0x4000729	      0xbd00000000	                              mov ebp, 0	       508	extension.c	FUNCTION_23	SWITCH_1
0x400072e	        0x4883ec18	                           sub rsp, 0x18	       522	extension.c	FUNCTION_23
0x4000732	      0xbf00000000	                              mov edi, 0	       521	extension.c	FUNCTION_23
0x4000737	      0x448944240c	              mov dword [rsp + 0xc], r8d	       522	extension.c	FUNCTION_23
0x400073c	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       522	extension.c	FUNCTION_23
0x4000740	          0x4885c0	                           test rax, rax	       522	extension.c	FUNCTION_23
0x4000743	            0x744b	                            je 0x4000790	       522	extension.c	FUNCTION_23
0x4000745	        0x488b4030	            mov rax, qword [rax + 0x30] 	       498	extension.c	FUNCTION_23
0x4000749	          0x4885c0	                           test rax, rax	       498	extension.c	FUNCTION_23
0x400074c	            0x7442	                            je 0x4000790	       498	extension.c	FUNCTION_23
0x400074e	        0x4883ec08	                              sub rsp, 8	       498	extension.c	FUNCTION_23
0x4000752	          0x4d89e0	                             mov r8, r12	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000755	          0x4c89e9	                            mov rcx, r13	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000758	        0xff742460	                 push qword [rsp + 0x60]	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x400075c	        0xff742460	                 push qword [rsp + 0x60]	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000760	          0x4c89f2	                            mov rdx, r14	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000763	              0x53	                                push rbx	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000764	          0x4c89fe	                            mov rsi, r15	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000767	      0x448b4c242c	            mov r9d, dword [rsp + 0x2c] 	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x400076c	            0xffd0	                                call rax	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x400076e	        0x4883c420	                           add rsp, 0x20	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000772	          0x83f801	                              cmp eax, 1	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000775	            0x7419	                            je 0x4000790	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000777	            0x7257	                            jb 0x40007d0	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000779	          0x83f802	                              cmp eax, 2	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x400077c	            0x7522	                           jne 0x40007a0	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x400077e	        0x4883c418	                           add rsp, 0x18	       517	extension.c	FUNCTION_23	SWITCH_1	CALL_2
0x4000782	            0x31c0	                            xor eax, eax	       522	extension.c	FUNCTION_23
0x4000784	              0x5b	                                 pop rbx	       511	extension.c	FUNCTION_23	SWITCH_1
0x4000785	              0x5d	                                 pop rbp	       511	extension.c	FUNCTION_23	SWITCH_1
0x4000786	            0x415c	                                 pop r12	       511	extension.c	FUNCTION_23	SWITCH_1
0x4000788	            0x415d	                                 pop r13	       511	extension.c	FUNCTION_23	SWITCH_1
0x400078a	            0x415e	                                 pop r14	       522	extension.c	FUNCTION_23
0x400078c	            0x415f	                                 pop r15	       522	extension.c	FUNCTION_23
0x400078e	              0xc3	                                     ret	       522	extension.c	FUNCTION_23
0x400078f	              0x90	                                     nop	       522	extension.c	FUNCTION_23
0x4000790	        0x4883c508	                              add rbp, 8	       522	extension.c	FUNCTION_23
get_ext_lang_of_file	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0	35
0x4000170	      0xe800000000	                          call 0x4000175	       153	extension.c	FUNCTION_3
0x4000175	           0xf1f00	                         nop dword [rax]	       153	extension.c	FUNCTION_3
0x4000178	      0xb800000000	                              mov eax, 0	       153	extension.c	FUNCTION_3
0x400017d	        0x4883c408	                              add rsp, 8	       153	extension.c	FUNCTION_3
0x4000181	              0xc3	                                     ret	       157	extension.c	FUNCTION_3
0x4000182	    0x660f1f440000	                    nop word [rax + rax]	       157	extension.c	FUNCTION_3
0x4000188	      0xb800000000	                              mov eax, 0	       157	extension.c	FUNCTION_3
0x400018d	            0xebee	                           jmp 0x400017d	       157	extension.c	FUNCTION_3
0x400018f	              0x90	                                     nop	       157	extension.c	FUNCTION_3
0x4000190	      0xb800000000	                              mov eax, 0	       157	extension.c	FUNCTION_3
0x4000195	            0xebe6	                           jmp 0x400017d	       157	extension.c	FUNCTION_3
0x4000197	      0xbf00000000	                              mov edi, 0	       157	extension.c	FUNCTION_3
0x400019c	      0xe800000000	                          call 0x40001a1	       157	extension.c	FUNCTION_3
0x40001a1	    0x41b800000000	                              mov r8d, 0	       141	extension.c	FUNCTION_2	CALL_2
0x40001a7	          0x4889c2	                            mov rdx, rax	       141	extension.c	FUNCTION_2	CALL_2
0x40001aa	      0xb900000000	                              mov ecx, 0	       144	extension.c	FUNCTION_2	CALL_3
0x40001af	      0xbe79000000	                           mov esi, 0x79	       144	extension.c	FUNCTION_2	CALL_3
0x40001b4	      0xbf00000000	                              mov edi, 0	       144	extension.c	FUNCTION_2	CALL_3
0x40001b9	            0x31c0	                            xor eax, eax	       144	extension.c	FUNCTION_2	CALL_3
0x40001bb	      0xe800000000	 call sym.get_ext_lang_of_file_charconst	       144	extension.c	FUNCTION_2	CALL_3
0x40001c0	            0x4156	                                push r14	       144	extension.c	FUNCTION_2	CALL_3
0x40001c2	            0x4155	                                push r13	       144	extension.c	FUNCTION_2	CALL_3
0x40001c4	          0x4989fd	                            mov r13, rdi	       144	extension.c	FUNCTION_2	CALL_3
0x40001c7	            0x4154	                                push r12	       144	extension.c	FUNCTION_2	CALL_3
0x40001c9	              0x55	                                push rbp	       164	extension.c	FUNCTION_3
0x40001ca	      0xbd00000000	                              mov ebp, 0	       164	extension.c	FUNCTION_3
0x40001cf	              0x53	                                push rbx	       164	extension.c	FUNCTION_3
0x40001d0	      0xbb00000000	                              mov ebx, 0	       164	extension.c	FUNCTION_3
0x40001d5	      0xe800000000	                          call 0x40001da	       164	extension.c	FUNCTION_3
0x40001da	          0x4189c4	                           mov r12d, eax	       163	extension.c	FUNCTION_3
0x40001dd	            0xeb0e	                           jmp 0x40001ed	       164	extension.c	FUNCTION_3
0x40001df	              0x90	                                     nop	       164	extension.c	FUNCTION_3
0x40001e0	              0x48	                                 invalid	       164	extension.c	FUNCTION_3
0x40001e1	              0x83	                                 invalid	       164	extension.c	FUNCTION_3
0x40001e2	              0xc5	                                 invalid	       164	extension.c	FUNCTION_3
ext_lang_initialized_p	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0	29
0x4000200	            0xe74c	                           out 0x4c, eax	       181	extension.c	FUNCTION_5	IF_1
0x4000202	            0x89f6	                            mov esi, esi	       181	extension.c	FUNCTION_5	IF_1
0x4000204	            0x29c7	                            sub edi, eax	       181	extension.c	FUNCTION_5	IF_1
0x4000206	          0x4863ff	                         movsxd rdi, edi	       181	extension.c	FUNCTION_5	IF_1
0x4000209	          0x4c01ef	                            add rdi, r13	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x400020c	      0xe800000000	                          call 0x4000211	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000211	            0x85c0	                           test eax, eax	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000213	            0x75cb	                           jne 0x40001e0	       185	extension.c	FUNCTION_5	IF_1	CALL_2
0x4000215	          0x4889d8	                            mov rax, rbx	       185	extension.c	FUNCTION_5	IF_1	CALL_2
0x4000218	              0x5b	                                 pop rbx	       189	extension.c	FUNCTION_5
0x4000219	              0x5d	                                 pop rbp	       189	extension.c	FUNCTION_5
0x400021a	            0x415c	                                 pop r12	       189	extension.c	FUNCTION_5
0x400021c	            0x415d	                                 pop r13	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x400021e	            0x415e	                                 pop r14	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000220	              0xc3	                                     ret	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000221	     0xf1f80000000	                         nop dword [rax]	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000228	              0x5b	                                 pop rbx	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000229	            0x31c0	                            xor eax, eax	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x400022b	              0x5d	                                 pop rbp	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x400022c	            0x415c	                                 pop r12	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x400022e	            0x415d	                                 pop r13	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000230	            0x415e	                                 pop r14	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000232	              0xc3	                                     ret	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000233	           0xf1f00	                         nop dword [rax]	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000240	            0x31c0	                            xor eax, eax	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000242	              0x48	                                 invalid	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000243	              0x83	                                 invalid	       184	extension.c	FUNCTION_5	IF_1	CALL_1
0x4000244	              0x7f	                                 invalid	       184	extension.c	FUNCTION_5	IF_1	CALL_1
breakpoint_ext_lang_cond_says_stop	DO,0:SWITCH,0:IF,2:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0	48
0x4000910	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       626	extension.c	FUNCTION_27
0x4000914	          0x4885c0	                           test rax, rax	       626	extension.c	FUNCTION_27
0x4000917	            0x741a	                            je 0x4000933	       631	extension.c	FUNCTION_27
0x4000919	          0x443923	                   cmp dword [rbx], r12d	       631	extension.c	FUNCTION_27
0x400091c	            0x7415	                            je 0x4000933	       629	extension.c	FUNCTION_27
0x400091e	        0x488b4048	            mov rax, qword [rax + 0x48] 	       629	extension.c	FUNCTION_27
0x4000922	          0x4885c0	                           test rax, rax	       629	extension.c	FUNCTION_27
0x4000925	            0x740c	                            je 0x4000933	       629	extension.c	FUNCTION_27
0x4000927	          0x4c89ee	                            mov rsi, r13	       629	extension.c	FUNCTION_27
0x400092a	          0x4889df	                            mov rdi, rbx	       631	extension.c	FUNCTION_27
0x400092d	            0xffd0	                                call rax	       631	extension.c	FUNCTION_27
0x400092f	            0x85c0	                           test eax, eax	       631	extension.c	FUNCTION_27
0x4000931	            0x751d	                           jne 0x4000950	       638	extension.c	FUNCTION_27	IF_1
0x4000933	        0x4883c508	                              add rbp, 8	       638	extension.c	FUNCTION_27	IF_1
0x4000937	        0x488b5d00	                    mov rbx, qword [rbp]	       638	extension.c	FUNCTION_27	IF_1
0x400093b	          0x4885db	                           test rbx, rbx	       641	extension.c	FUNCTION_27	IF_1	CALL_1
0x400093e	            0x75d0	                           jne 0x4000910	       641	extension.c	FUNCTION_27	IF_1	CALL_1
0x4000940	        0x4883c408	                              add rsp, 8	       643	extension.c	FUNCTION_27	IF_1	IF_2
0x4000944	            0x31c0	                            xor eax, eax	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000946	              0x5b	                                 pop rbx	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000947	              0x5d	                                 pop rbp	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000948	            0x415c	                                 pop r12	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400094a	            0x415d	                                 pop r13	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400094c	              0xc3	                                     ret	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400094d	           0xf1f00	                         nop dword [rax]	       631	extension.c	FUNCTION_27
0x4000950	        0x4883c408	                              add rsp, 8	       631	extension.c	FUNCTION_27
0x4000954	          0x4889d8	                            mov rax, rbx	       631	extension.c	FUNCTION_27
0x4000957	              0x5b	                                 pop rbx	       654	extension.c	FUNCTION_27
0x4000958	              0x5d	                                 pop rbp	       654	extension.c	FUNCTION_27
0x4000959	            0x415c	                                 pop r12	       654	extension.c	FUNCTION_27
0x400095b	            0x415d	                                 pop r13	       654	extension.c	FUNCTION_27
0x400095d	              0xc3	                                     ret	       654	extension.c	FUNCTION_27
0x400095e	            0x6690	                                     nop	       655	extension.c	FUNCTION_27
0x4000960	            0x4154	                                push r12	       655	extension.c	FUNCTION_27
0x4000962	          0x4989fc	                            mov r12, rdi	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000965	              0x55	                                push rbp	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000966	      0xbf00000000	                              mov edi, 0	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400096b	              0x53	                                push rbx	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400096c	            0x31ed	                            xor ebp, ebp	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400096e	      0xbb00000000	                              mov ebx, 0	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000973	       0xf1f440000	                   nop dword [rax + rax]	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000978	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400097c	          0x4885c0	                           test rax, rax	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400097f	            0x7418	                            je 0x4000999	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000981	        0x488b4050	            mov rax, qword [rax + 0x50] 	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000985	          0x4885c0	                           test rax, rax	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x4000988	            0x740f	                            je 0x4000999	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
0x400098a	              0x4c	                                 invalid	       648	extension.c	FUNCTION_27	IF_1	IF_2	CALL_2
get_active_ext_lang	DO,0:SWITCH,0:IF,0:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0	3
0x4000990	      0xc0740685ed	       sal byte [rsi + rax - 0x7b], 0xed	       680	extension.c	FUNCTION_28
0x4000995	            0x751b	                           jne 0x40009b2	       680	extension.c	FUNCTION_28
0x4000997	              0x89	                                 invalid	       680	extension.c	FUNCTION_28
set_quit_flag	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,2:ELSE,1:functions,0	15
0x40009a0	          0x4885ff	                           test rdi, rdi	       796	extension.c	FUNCTION_33	IF_1
0x40009a3	            0x75d3	                           jne 0x4000978	       796	extension.c	FUNCTION_33	IF_1
0x40009a5	            0x31c0	                            xor eax, eax	       796	extension.c	FUNCTION_33	IF_1
0x40009a7	          0x83fd01	                              cmp ebp, 1	       796	extension.c	FUNCTION_33	IF_1
0x40009aa	              0x5b	                                 pop rbx	       796	extension.c	FUNCTION_33	IF_1
0x40009ab	           0xf95c0	                                setne al	       796	extension.c	FUNCTION_33	IF_1
0x40009ae	              0x5d	                                 pop rbp	       796	extension.c	FUNCTION_33	IF_1
0x40009af	            0x415c	                                 pop r12	       796	extension.c	FUNCTION_33	IF_1
0x40009b1	              0xc3	                                     ret	       797	extension.c	FUNCTION_33	IF_1
0x40009b2	      0xbf00000000	                              mov edi, 0	       797	extension.c	FUNCTION_33	IF_1
0x40009b7	      0xe800000000	                          call 0x40009bc	       797	extension.c	FUNCTION_33	IF_1
0x40009bc	    0x41b800000000	                              mov r8d, 0	       798	extension.c	FUNCTION_33	CALL_1
0x40009c2	          0x4889c2	                            mov rdx, rax	       801	extension.c	FUNCTION_33	ELSE_1
0x40009c5	      0xb900000000	                              mov ecx, 0	       801	extension.c	FUNCTION_33	ELSE_1
0x40009ca	      0xbe88020000	                          mov esi, 0x288	       808	extension.c	FUNCTION_33	ELSE_1	CALL_2
get_breakpoint_cond_ext_lang	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0	36
0x40008a0	       0xd4889f248	                      or eax, 0x48f28948	       606	extension.c	FUNCTION_26
0x40008a5	            0x89fe	                            mov esi, edi	       606	extension.c	FUNCTION_26
0x40008a7	      0xbf00000000	                              mov edi, 0	       606	extension.c	FUNCTION_26
0x40008ac	            0xffd0	                                call rax	       606	extension.c	FUNCTION_26
0x40008ae	    0x488b05000000	            mov rax, qword [0x040008b5] 	       606	extension.c	FUNCTION_26
0x40008b5	          0x4885c0	                           test rax, rax	       610	extension.c	FUNCTION_26
0x40008b8	            0x7426	                            je 0x40008e0	       606	extension.c	FUNCTION_26
0x40008ba	        0x488b4040	            mov rax, qword [rax + 0x40] 	       606	extension.c	FUNCTION_26
0x40008be	          0x4885c0	                           test rax, rax	       606	extension.c	FUNCTION_26
0x40008c1	            0x741d	                            je 0x40008e0	       610	extension.c	FUNCTION_26
0x40008c3	        0x4883c408	                              add rsp, 8	       610	extension.c	FUNCTION_26
0x40008c7	          0x4889ea	                            mov rdx, rbp	       610	extension.c	FUNCTION_26
0x40008ca	          0x4889de	                            mov rsi, rbx	       614	extension.c	FUNCTION_26	IF_1	CALL_1
0x40008cd	              0x5b	                                 pop rbx	       614	extension.c	FUNCTION_26	IF_1	CALL_1
0x40008ce	              0x5d	                                 pop rbp	       613	extension.c	FUNCTION_26	IF_1
0x40008cf	      0xbf00000000	                              mov edi, 0	       613	extension.c	FUNCTION_26	IF_1
0x40008d4	            0xffe0	                                 jmp rax	       613	extension.c	FUNCTION_26	IF_1
0x40008d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       613	extension.c	FUNCTION_26	IF_1
0x40008e0	        0x4883c408	                              add rsp, 8	       614	extension.c	FUNCTION_26	IF_1	CALL_1
0x40008e4	              0x5b	                                 pop rbx	       614	extension.c	FUNCTION_26	IF_1	CALL_1
0x40008e5	              0x5d	                                 pop rbp	       614	extension.c	FUNCTION_26	IF_1	CALL_1
0x40008e6	              0xc3	                                     ret	       614	extension.c	FUNCTION_26	IF_1	CALL_1
0x40008e7	    0x660f1f840000	                    nop word [rax + rax]	       610	extension.c	FUNCTION_26
0x40008f0	            0x4155	                                push r13	       619	extension.c	FUNCTION_26
0x40008f2	            0x4154	                                push r12	       619	extension.c	FUNCTION_26
0x40008f4	          0x4989fd	                            mov r13, rdi	       618	extension.c	FUNCTION_26
0x40008f7	              0x55	                                push rbp	       619	extension.c	FUNCTION_26
0x40008f8	              0x53	                                push rbx	       619	extension.c	FUNCTION_26
0x40008f9	          0x4189f4	                           mov r12d, esi	       619	extension.c	FUNCTION_26
0x40008fc	      0xbd00000000	                              mov ebp, 0	       619	extension.c	FUNCTION_26
0x4000901	      0xbb00000000	                              mov ebx, 0	       619	extension.c	FUNCTION_26
0x4000906	        0x4883ec08	                              sub rsp, 8	       619	extension.c	FUNCTION_26
0x400090a	              0x66	                                 invalid	       619	extension.c	FUNCTION_26
0x400090b	               0xf	                                 invalid	       619	extension.c	FUNCTION_26
0x400090c	              0x1f	                                 invalid	       619	extension.c	FUNCTION_26
0x400090d	              0x44	                                 invalid	       619	extension.c	FUNCTION_26
set_active_ext_lang	DO,0:SWITCH,0:IF,3:FOR,0:WHILE,0:CALL,4:ELSE,0:functions,0	47
0x4000a50	            0x741a	                            je 0x4000a6c	       735	extension.c	ELSE_1	FUNCTION_31
0x4000a52	        0x488b4060	            mov rax, qword [rax + 0x60] 	       735	extension.c	ELSE_1	FUNCTION_31
0x4000a56	          0x4885c0	                           test rax, rax	       122	poison.h	
0x4000a59	            0x7411	                            je 0x4000a6c	       122	poison.h	
0x4000a5b	      0xbf00000000	                              mov edi, 0	       122	poison.h	
0x4000a60	            0xffd0	                                call rax	       735	extension.c	ELSE_1	FUNCTION_31
0x4000a62	            0x85c0	                           test eax, eax	       735	extension.c	ELSE_1	FUNCTION_31
0x4000a64	      0xb801000000	                              mov eax, 1	       122	poison.h	
0x4000a69	           0xf45d8	                         cmovne ebx, eax	       743	extension.c	ELSE_1	FUNCTION_31	IF_1	CALL_1
0x4000a6c	    0x8b0500000000	            mov eax, dword [0x04000a72] 	       743	extension.c	ELSE_1	FUNCTION_31	IF_1	CALL_1
0x4000a72	            0x85c0	                           test eax, eax	       739	extension.c	ELSE_1	FUNCTION_31
0x4000a74	            0x7414	                            je 0x4000a8a	       739	extension.c	ELSE_1	FUNCTION_31
0x4000a76	      0xe800000000	                          call 0x4000a7b	       739	extension.c	ELSE_1	FUNCTION_31
0x4000a7b	      0xbb01000000	                              mov ebx, 1	       740	extension.c	ELSE_1	FUNCTION_31
0x4000a80	    0xc70500000000	               mov dword [0x04000a8a], 0	       741	extension.c	ELSE_1	FUNCTION_31
0x4000a8a	            0x89d8	                            mov eax, ebx	       743	extension.c	ELSE_1	FUNCTION_31	IF_1	CALL_1
0x4000a8c	              0x5b	                                 pop rbx	       760	extension.c	ELSE_1	FUNCTION_31
0x4000a8d	              0xc3	                                     ret	       760	extension.c	ELSE_1	FUNCTION_31
0x4000a8e	            0x6690	                                     nop	       760	extension.c	ELSE_1	FUNCTION_31
0x4000a90	            0x31db	                            xor ebx, ebx	       760	extension.c	ELSE_1	FUNCTION_31
0x4000a92	            0xebb2	                           jmp 0x4000a46	       760	extension.c	ELSE_1	FUNCTION_31
0x4000a94	            0x6690	                                     nop	       760	extension.c	ELSE_1	FUNCTION_31
0x4000a96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       760	extension.c	ELSE_1	FUNCTION_31
0x4000aa0	              0x55	                                push rbp	       747	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_2
0x4000aa1	              0x53	                                push rbx	       747	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_2
0x4000aa2	          0x4889fd	                            mov rbp, rdi	       747	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_2
0x4000aa5	      0xbe18000000	                           mov esi, 0x18	       747	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_2
0x4000aaa	      0xbf01000000	                              mov edi, 1	       748	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_2
0x4000aaf	        0x4883ec08	                              sub rsp, 8	       748	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_2
0x4000ab3	      0xe800000000	                          call 0x4000ab8	       703	extension.c	FUNCTION_30	CALL_1
0x4000ab8	    0x833d00000000	               cmp dword [0x04000abf], 2	       703	extension.c	FUNCTION_30	CALL_1
0x4000abf	          0x4889c3	                            mov rbx, rax	       703	extension.c	FUNCTION_30	CALL_1
0x4000ac2	    0x488b05000000	            mov rax, qword [0x04000ac9] 	       705	extension.c	FUNCTION_30	IF_1
0x4000ac9	    0xc74308000000	                  mov dword [rbx + 8], 0	       703	extension.c	FUNCTION_30	CALL_1
0x4000ad0	    0x48892d000000	            mov qword [0x04000ad7], rbp 	       705	extension.c	FUNCTION_30	IF_1
0x4000ad7	          0x488903	                    mov qword [rbx], rax	       755	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_3	CALL_3
0x4000ada	            0x7414	                            je 0x4000af0	       755	extension.c	ELSE_1	FUNCTION_31	IF_1	IF_3	CALL_3
0x4000adc	        0x4883c408	                              add rsp, 8	       756	extension.c	ELSE_1	FUNCTION_31	IF_1	CALL_4
0x4000ae0	          0x4889d8	                            mov rax, rbx	       756	extension.c	ELSE_1	FUNCTION_31	IF_1	CALL_4
0x4000ae3	              0x5b	                                 pop rbx	       760	extension.c	ELSE_1	FUNCTION_31
0x4000ae4	              0x5d	                                 pop rbp	       760	extension.c	ELSE_1	FUNCTION_31
0x4000ae5	              0xc3	                                     ret	       760	extension.c	ELSE_1	FUNCTION_31
0x4000ae6	              0x66	                                 invalid	       760	extension.c	ELSE_1	FUNCTION_31
0x4000ae7	              0x2e	                                 invalid	       760	extension.c	ELSE_1	FUNCTION_31
0x4000ae8	               0xf	                                 invalid	       760	extension.c	ELSE_1	FUNCTION_31
0x4000ae9	              0x1f	                                 invalid	       760	extension.c	ELSE_1	FUNCTION_31
0x4000aea	              0x84	                                 invalid	       760	extension.c	ELSE_1	FUNCTION_31
ext_lang_present_p	DO,0:SWITCH,0:IF,0:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0	4
0x40001f0	        0x184c89f7	          sbb byte [rcx + rcx*4 - 9], cl	       172	extension.c	FUNCTION_4
0x40001f4	      0xe800000000	                          call 0x40001f9	       172	extension.c	FUNCTION_4
0x40001f9	              0x44	                                 invalid	       172	extension.c	FUNCTION_4
0x40001fa	              0x39	                                 invalid	       173	extension.c	FUNCTION_4
ext_lang_auto_load_suffix	DO,0:SWITCH,0:IF,0:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0	2
0x40002a0	              0x53	                                push rbx	       253	extension.c	FUNCTION_12
0x40002a1	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       253	extension.c	FUNCTION_12
preserve_ext_lang_values	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0	36
0x4000830	            0x741f	                            je 0x4000851	       583	extension.c	FUNCTION_25
0x4000832	        0x4883ec08	                              sub rsp, 8	       583	extension.c	FUNCTION_25
0x4000836	          0x4489e9	                           mov ecx, r13d	       583	extension.c	FUNCTION_25
0x4000839	          0x4489f2	                           mov edx, r14d	       583	extension.c	FUNCTION_25
0x400083c	              0x53	                                push rbx	       587	extension.c	FUNCTION_25
0x400083d	          0x4d89e0	                             mov r8, r12	       587	extension.c	FUNCTION_25
0x4000840	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	       587	extension.c	FUNCTION_25
0x4000845	          0x4c89fe	                            mov rsi, r15	       587	extension.c	FUNCTION_25
0x4000848	            0xffd0	                                call rax	       589	extension.c	FUNCTION_25	IF_1
0x400084a	          0x83f802	                              cmp eax, 2	       589	extension.c	FUNCTION_25	IF_1
0x400084d	              0x5a	                                 pop rdx	       589	extension.c	FUNCTION_25	IF_1
0x400084e	              0x59	                                 pop rcx	       589	extension.c	FUNCTION_25	IF_1
0x400084f	            0x7512	                           jne 0x4000863	       589	extension.c	FUNCTION_25	IF_1
0x4000851	        0x4883c508	                              add rbp, 8	       590	extension.c	FUNCTION_25	CALL_1
0x4000855	        0x488b7d00	                    mov rdi, qword [rbp]	       590	extension.c	FUNCTION_25	CALL_1
0x4000859	          0x4885ff	                           test rdi, rdi	       590	extension.c	FUNCTION_25	CALL_1
0x400085c	            0x75c2	                           jne 0x4000820	       590	extension.c	FUNCTION_25	CALL_1
0x400085e	      0xb802000000	                              mov eax, 2	       587	extension.c	FUNCTION_25
0x4000863	        0x4883c418	                           add rsp, 0x18	       587	extension.c	FUNCTION_25
0x4000867	              0x5b	                                 pop rbx	       587	extension.c	FUNCTION_25
0x4000868	              0x5d	                                 pop rbp	       587	extension.c	FUNCTION_25
0x4000869	            0x415c	                                 pop r12	       587	extension.c	FUNCTION_25
0x400086b	            0x415d	                                 pop r13	       589	extension.c	FUNCTION_25	IF_1
0x400086d	            0x415e	                                 pop r14	       589	extension.c	FUNCTION_25	IF_1
0x400086f	            0x415f	                                 pop r15	       589	extension.c	FUNCTION_25	IF_1
0x4000871	              0xc3	                                     ret	       589	extension.c	FUNCTION_25	IF_1
0x4000872	         0xf1f4000	                         nop dword [rax]	       589	extension.c	FUNCTION_25	IF_1
0x4000876	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       592	extension.c	FUNCTION_25
0x4000880	              0x55	                                push rbp	       590	extension.c	FUNCTION_25	CALL_1
0x4000881	              0x53	                                push rbx	       590	extension.c	FUNCTION_25	CALL_1
0x4000882	          0x4889f5	                            mov rbp, rsi	       590	extension.c	FUNCTION_25	CALL_1
0x4000885	          0x4889fb	                            mov rbx, rdi	       590	extension.c	FUNCTION_25	CALL_1
0x4000888	        0x4883ec08	                              sub rsp, 8	       590	extension.c	FUNCTION_25	CALL_1
0x400088c	    0x488b05000000	            mov rax, qword [0x04000893] 	       590	extension.c	FUNCTION_25	CALL_1
0x4000893	          0x4885c0	                           test rax, rax	       592	extension.c	FUNCTION_25
0x4000896	              0x74	                                 invalid	       592	extension.c	FUNCTION_25
get_ext_lang_defn	DO,0:SWITCH,0:IF,2:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0	38
0x40000e0	    0x3b83f8027436	      cmp eax, dword [rbx + 0x367402f8] 	       117	extension.c	FUNCTION_1
0x40000e6	      0xbf00000000	                              mov edi, 0	       121	extension.c	FUNCTION_1	CALL_1
0x40000eb	      0xe800000000	                          call 0x40000f0	       123	extension.c	FUNCTION_1	IF_1
0x40000f0	      0xb900000000	                              mov ecx, 0	       128	extension.c	FUNCTION_1	IF_2
0x40000f5	          0x4989c0	                             mov r8, rax	       128	extension.c	FUNCTION_1	IF_2
0x40000f8	      0xba00000000	                              mov edx, 0	       128	extension.c	FUNCTION_1	IF_2
0x40000fd	      0xbea1030000	                          mov esi, 0x3a1	       132	extension.c	FUNCTION_1	CALL_2
0x4000102	      0xbf00000000	                              mov edi, 0	       132	extension.c	FUNCTION_1	CALL_2
0x4000107	            0x31c0	                            xor eax, eax	       132	extension.c	FUNCTION_1	CALL_2
0x4000109	      0xe800000000	                          call 0x400010e	       132	extension.c	FUNCTION_1	CALL_2
0x400010e	            0x6690	                                     nop	       132	extension.c	FUNCTION_1	CALL_2
0x4000110	        0x4883c308	                              add rbx, 8	       132	extension.c	FUNCTION_1	CALL_2
0x4000114	          0x488b3b	                    mov rdi, qword [rbx]	       132	extension.c	FUNCTION_1	CALL_2
0x4000117	          0x4885ff	                           test rdi, rdi	       132	extension.c	FUNCTION_1	CALL_2
0x400011a	            0x75a7	                           jne 0x40000c3	       132	extension.c	FUNCTION_1	CALL_2
0x400011c	        0x4883c408	                              add rsp, 8	       132	extension.c	FUNCTION_1	CALL_2
0x4000120	              0x5b	                                 pop rbx	       132	extension.c	FUNCTION_1	CALL_2
0x4000121	              0x5d	                                 pop rbp	       132	extension.c	FUNCTION_1	CALL_2
0x4000122	              0xc3	                                     ret	       132	extension.c	FUNCTION_1	CALL_2
0x4000123	           0xf1f00	                         nop dword [rax]	       132	extension.c	FUNCTION_1	CALL_2
0x4000126	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       132	extension.c	FUNCTION_1	CALL_2
0x4000130	        0x4883ec08	                              sub rsp, 8	       133	extension.c	FUNCTION_1
0x4000134	            0x85ff	                           test edi, edi	       133	extension.c	FUNCTION_1
0x4000136	            0x745f	                            je 0x4000197	       133	extension.c	FUNCTION_1
0x4000138	          0x83ff01	                              cmp edi, 1	       126	extension.c	FUNCTION_1
0x400013b	            0x743b	                            je 0x4000178	       126	extension.c	FUNCTION_1
0x400013d	    0x3b3d00000000	            cmp edi, dword [0x04000143] 	       126	extension.c	FUNCTION_1
0x4000143	            0x744b	                            je 0x4000190	       128	extension.c	FUNCTION_1	IF_2
0x4000145	    0x3b3d00000000	            cmp edi, dword [0x0400014b] 	       128	extension.c	FUNCTION_1	IF_2
0x400014b	            0x743b	                            je 0x4000188	       121	extension.c	FUNCTION_1	CALL_1
0x400014d	      0xbf00000000	                              mov edi, 0	       121	extension.c	FUNCTION_1	CALL_1
0x4000152	      0xe800000000	                          call 0x4000157	       121	extension.c	FUNCTION_1	CALL_1
0x4000157	      0xb900000000	                              mov ecx, 0	       121	extension.c	FUNCTION_1	CALL_1
0x400015c	          0x4989c0	                             mov r8, rax	       121	extension.c	FUNCTION_1	CALL_1
0x400015f	      0xba00000000	                              mov edx, 0	       121	extension.c	FUNCTION_1	CALL_1
0x4000164	      0xbe84000000	                           mov esi, 0x84	       121	extension.c	FUNCTION_1	CALL_1
0x4000169	      0xbf00000000	                              mov edi, 0	       121	extension.c	FUNCTION_1	CALL_1
0x400016e	            0x31c0	                            xor eax, eax	       121	extension.c	FUNCTION_1	CALL_1
finish_ext_lang_initialization	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0	20
0x40003c0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       330	extension.c	FUNCTION_17
0x40003c4	          0x4885c0	                           test rax, rax	       334	extension.c	FUNCTION_17
0x40003c7	            0x740f	                            je 0x40003d8	       334	extension.c	FUNCTION_17
0x40003c9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       334	extension.c	FUNCTION_17
0x40003cd	          0x4885c0	                           test rax, rax	       334	extension.c	FUNCTION_17
0x40003d0	            0x7409	                            je 0x40003db	       336	extension.c	FUNCTION_17	IF_1
0x40003d2	            0xffe0	                                 jmp rax	       336	extension.c	FUNCTION_17	IF_1
0x40003d4	         0xf1f4000	                         nop dword [rax]	       336	extension.c	FUNCTION_17	IF_1
0x40003d8	            0x31c0	                            xor eax, eax	       337	extension.c	FUNCTION_17	CALL_1
0x40003da	              0xc3	                                     ret	       337	extension.c	FUNCTION_17	CALL_1
0x40003db	              0x50	                                push rax	       337	extension.c	FUNCTION_17	CALL_1
0x40003dc	      0xbf00000000	                              mov edi, 0	       337	extension.c	FUNCTION_17	CALL_1
0x40003e1	      0xe800000000	                          call 0x40003e6	       334	extension.c	FUNCTION_17
0x40003e6	    0x41b800000000	                              mov r8d, 0	       334	extension.c	FUNCTION_17
0x40003ec	          0x4889c2	                            mov rdx, rax	       336	extension.c	FUNCTION_17	IF_1
0x40003ef	      0xb900000000	                              mov ecx, 0	       336	extension.c	FUNCTION_17	IF_1
0x40003f4	      0xbe3c010000	                          mov esi, 0x13c	       337	extension.c	FUNCTION_17	CALL_1
0x40003f9	      0xbf00000000	                              mov edi, 0	       339	extension.c	FUNCTION_17
0x40003fe	            0x31c0	                            xor eax, eax	       337	extension.c	FUNCTION_17	CALL_1
0x4000400	      0xe800000000	                          call 0x4000405	       339	extension.c	FUNCTION_17
auto_load_ext_lang_scripts_for_objfile	DO,0:SWITCH,0:IF,2:FOR,0:WHILE,0:CALL,4:ELSE,0:functions,0	36
0x4000490	      0xbe75010000	              add byte [rsi + 0x175], bh	       384	extension.c	FUNCTION_19
0x4000496	      0xbf00000000	                              mov edi, 0	       389	extension.c	FUNCTION_19	IF_1	CALL_1
0x400049b	            0x31c0	                            xor eax, eax	       389	extension.c	FUNCTION_19	IF_1	CALL_1
0x400049d	      0xe800000000	                          call 0x40004a2	       389	extension.c	FUNCTION_19	IF_1	CALL_1
0x40004a2	    0x660f1f440000	                    nop word [rax + rax]	       392	extension.c	FUNCTION_19
0x40004a8	      0xbf00000000	                              mov edi, 0	       392	extension.c	FUNCTION_19
0x40004ad	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004b1	          0x4885c0	                           test rax, rax	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004b4	            0x7419	                            je 0x40004cf	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004b6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004ba	          0x4885c0	                           test rax, rax	       392	extension.c	FUNCTION_19
0x40004bd	            0x7410	                            je 0x40004cf	       392	extension.c	FUNCTION_19
0x40004bf	        0x4883c408	                              add rsp, 8	       392	extension.c	FUNCTION_19
0x40004c3	            0xffe0	                                 jmp rax	       392	extension.c	FUNCTION_19
0x40004c5	           0xf1f00	                         nop dword [rax]	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004c8	      0xbf00000000	                              mov edi, 0	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004cd	            0xebde	                           jmp 0x40004ad	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004cf	      0xe800000000	                          call 0x40004d4	       394	extension.c	FUNCTION_19	IF_2	CALL_3
0x40004d4	            0x6690	                                     nop	       397	extension.c	FUNCTION_19
0x40004d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       397	extension.c	FUNCTION_19
0x40004e0	              0x53	                                push rbx	       397	extension.c	FUNCTION_19
0x40004e1	          0x4889fb	                            mov rbx, rdi	       395	extension.c	FUNCTION_19	CALL_4
0x40004e4	      0xbf00000000	                              mov edi, 0	       395	extension.c	FUNCTION_19	CALL_4
0x40004e9	      0xe800000000	                          call 0x40004ee	       395	extension.c	FUNCTION_19	CALL_4
0x40004ee	            0x85c0	                           test eax, eax	       395	extension.c	FUNCTION_19	CALL_4
0x40004f0	            0x755e	                           jne 0x4000550	       395	extension.c	FUNCTION_19	CALL_4
0x40004f2	    0x48833d000000	               cmp qword [0x040004fa], 0	       395	extension.c	FUNCTION_19	CALL_4
0x40004fa	            0x740e	                            je 0x400050a	       395	extension.c	FUNCTION_19	CALL_4
0x40004fc	      0xbf00000000	                              mov edi, 0	       395	extension.c	FUNCTION_19	CALL_4
0x4000501	      0xe800000000	                          call 0x4000506	       390	extension.c	FUNCTION_19	CALL_2
0x4000506	            0x85c0	                           test eax, eax	       390	extension.c	FUNCTION_19	CALL_2
0x4000508	            0x7536	                           jne 0x4000540	       390	extension.c	FUNCTION_19	CALL_2
0x400050a	              0x48	                                 invalid	       390	extension.c	FUNCTION_19	CALL_2
0x400050b	              0x83	                                 invalid	       390	extension.c	FUNCTION_19	CALL_2
0x400050c	              0x3d	                                 invalid	       390	extension.c	FUNCTION_19	CALL_2
0x400050d	               0x0	                      add byte [rax], al	       390	extension.c	FUNCTION_19	CALL_2
get_matching_xmethod_workers	DO,0:SWITCH,0:IF,2:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0	36
0x4000b40	    0x833d00000000	               cmp dword [0x04000b47], 2	       849	extension.c	FUNCTION_35
0x4000b47	              0x53	                                push rbx	       849	extension.c	FUNCTION_35
0x4000b48	          0x4889fb	                            mov rbx, rdi	       849	extension.c	FUNCTION_35
0x4000b4b	          0x488b07	                    mov rax, qword [rdi]	       849	extension.c	FUNCTION_35
0x4000b4e	    0x488905000000	            mov qword [0x04000b55], rax 	       849	extension.c	FUNCTION_35
0x4000b55	            0x7409	                            je 0x4000b60	       849	extension.c	FUNCTION_35
0x4000b57	          0x4889df	                            mov rdi, rbx	       853	extension.c	FUNCTION_35
0x4000b5a	              0x5b	                                 pop rbx	       853	extension.c	FUNCTION_35
0x4000b5b	      0xe900000000	                           jmp 0x4000b60	       853	extension.c	FUNCTION_35
0x4000b60	          0x8b4708	                mov eax, dword [rdi + 8]	       853	extension.c	FUNCTION_35
0x4000b63	            0x85c0	                           test eax, eax	       853	extension.c	FUNCTION_35
0x4000b65	            0x7519	                           jne 0x4000b80	       853	extension.c	FUNCTION_35
0x4000b67	      0xe800000000	                          call 0x4000b6c	       853	extension.c	FUNCTION_35
0x4000b6c	            0x85c0	                           test eax, eax	       859	extension.c	FUNCTION_35	IF_1
0x4000b6e	            0x74e7	                            je 0x4000b57	       859	extension.c	FUNCTION_35	IF_1
0x4000b70	      0xe800000000	                          call 0x4000b75	       859	extension.c	FUNCTION_35	IF_1
0x4000b75	            0xebe0	                           jmp 0x4000b57	       864	extension.c	FUNCTION_35
0x4000b77	    0x660f1f840000	                    nop word [rax + rax]	       864	extension.c	FUNCTION_35
0x4000b80	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	       865	extension.c	FUNCTION_35	IF_2
0x4000b84	      0xbf02000000	                              mov edi, 2	       865	extension.c	FUNCTION_35	IF_2
0x4000b89	      0xe800000000	                          call 0x4000b8e	       853	extension.c	FUNCTION_35
0x4000b8e	            0xebd7	                           jmp 0x4000b67	       853	extension.c	FUNCTION_35
0x4000b90	            0x4156	                                push r14	       853	extension.c	FUNCTION_35
0x4000b92	          0x4989fe	                            mov r14, rdi	       869	extension.c	FUNCTION_35
0x4000b95	            0x4155	                                push r13	       869	extension.c	FUNCTION_35
0x4000b97	          0x4989f5	                            mov r13, rsi	       869	extension.c	FUNCTION_35
0x4000b9a	            0x4154	                                push r12	       869	extension.c	FUNCTION_35
0x4000b9c	          0x4989d4	                            mov r12, rdx	       867	extension.c	FUNCTION_35	IF_2
0x4000b9f	              0x55	                                push rbp	       866	extension.c	FUNCTION_35	IF_2	CALL_3
0x4000ba0	      0xbd00000000	                              mov ebp, 0	       866	extension.c	FUNCTION_35	IF_2	CALL_3
0x4000ba5	              0x53	                                push rbx	       866	extension.c	FUNCTION_35	IF_2	CALL_3
0x4000ba6	      0xbb00000000	                              mov ebx, 0	       866	extension.c	FUNCTION_35	IF_2	CALL_3
0x4000bab	       0xf1f440000	                   nop dword [rax + rax]	       867	extension.c	FUNCTION_35	IF_2
0x4000bb0	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       867	extension.c	FUNCTION_35	IF_2
0x4000bb4	              0x48	                                 invalid	       867	extension.c	FUNCTION_35	IF_2
0x4000bb5	              0x85	                                 invalid	       867	extension.c	FUNCTION_35	IF_2
throw_ext_lang_unsupported	DO,0:SWITCH,0:IF,0:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0	11
0x4000250	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       195	extension.c	FUNCTION_6
0x4000254	          0x4885c0	                           test rax, rax	       237	extension.c	FUNCTION_10
0x4000257	            0x740f	                            je 0x4000268	       196	extension.c	FUNCTION_6	CALL_2
0x4000259	        0x488b4008	                mov rax, qword [rax + 8]	       196	extension.c	FUNCTION_6	CALL_2
0x400025d	          0x4885c0	                           test rax, rax	       196	extension.c	FUNCTION_6	CALL_2
0x4000260	            0x7409	                            je 0x400026b	       198	extension.c	FUNCTION_6	CALL_3
0x4000262	            0xffe0	                                 jmp rax	       198	extension.c	FUNCTION_6	CALL_3
0x4000264	         0xf1f4000	                         nop dword [rax]	       198	extension.c	FUNCTION_6	CALL_3
0x4000268	            0x31c0	                            xor eax, eax	       198	extension.c	FUNCTION_6	CALL_3
0x400026a	              0xc3	                                     ret	       198	extension.c	FUNCTION_6	CALL_3
0x400026b	              0x50	                                push rax	       198	extension.c	FUNCTION_6	CALL_3
restore_active_ext_lang	DO,0:SWITCH,0:IF,3:FOR,0:WHILE,0:CALL,5:ELSE,0:functions,0	23
0x4000af0	        0x837d0001	                      cmp dword [rbp], 1	       769	extension.c	FUNCTION_32	IF_1	CALL_1
0x4000af4	            0x740b	                            je 0x4000b01	       769	extension.c	FUNCTION_32	IF_1	CALL_1
0x4000af6	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       769	extension.c	FUNCTION_32	IF_1	CALL_1
0x4000afa	      0x4883786000	               cmp qword [rax + 0x60], 0	       766	extension.c	FUNCTION_32
0x4000aff	            0x7422	                            je 0x4000b23	       767	extension.c	FUNCTION_32
0x4000b01	      0xbe00000000	                              mov esi, 0	       767	extension.c	FUNCTION_32
0x4000b06	      0xbf02000000	                              mov edi, 2	       769	extension.c	FUNCTION_32	IF_1	CALL_1
0x4000b0b	      0xe800000000	                          call 0x4000b10	        60	common-utils.h	FUNCTION_56
0x4000b10	    0x483d00000000	                              cmp rax, 0	       772	extension.c	FUNCTION_32	IF_1	IF_2
0x4000b16	        0x48894310	             mov qword [rbx + 0x10], rax	       772	extension.c	FUNCTION_32	IF_1	IF_2
0x4000b1a	           0xf95c0	                                setne al	       779	extension.c	FUNCTION_32	IF_1	IF_3	CALL_3
0x4000b1d	           0xfb6c0	                           movzx eax, al	       779	extension.c	FUNCTION_32	IF_1	IF_3	CALL_3
0x4000b20	          0x894308	                mov dword [rbx + 8], eax	       780	extension.c	FUNCTION_32	IF_1	CALL_4
0x4000b23	      0xe800000000	                          call 0x4000b28	       780	extension.c	FUNCTION_32	IF_1	CALL_4
0x4000b28	            0x85c0	                           test eax, eax	       780	extension.c	FUNCTION_32	IF_1	CALL_4
0x4000b2a	            0x74b0	                            je 0x4000adc	       780	extension.c	FUNCTION_32	IF_1	CALL_4
0x4000b2c	      0xe800000000	                          call 0x4000b31	       780	extension.c	FUNCTION_32	IF_1	CALL_4
0x4000b31	        0x4883c408	                              add rsp, 8	       689	extension.c	FUNCTION_29	CALL_2
0x4000b35	          0x4889d8	                            mov rax, rbx	       689	extension.c	FUNCTION_29	CALL_2
0x4000b38	              0x5b	                                 pop rbx	       689	extension.c	FUNCTION_29	CALL_2
0x4000b39	              0x5d	                                 pop rbp	       689	extension.c	FUNCTION_29	CALL_2
0x4000b3a	              0xc3	                                     ret	       689	extension.c	FUNCTION_29	CALL_2
0x4000b3b	       0xf1f440000	                   nop dword [rax + rax]	       689	extension.c	FUNCTION_29	CALL_2
ext_lang_suffix	DO,0:SWITCH,0:IF,0:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0	1
0x4000290	      0xe800000000	                          call 0x4000295	       245	extension.c	FUNCTION_11
ext_lang_objfile_script_executor	DO,0:SWITCH,0:IF,1:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0	7
0x4000350	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       300	extension.c	FUNCTION_15	IF_1
0x4000354	          0x4885c0	                           test rax, rax	       300	extension.c	FUNCTION_15	IF_1
0x4000357	            0x7437	                            je 0x4000390	       300	extension.c	FUNCTION_15	IF_1
0x4000359	        0x488b4008	                mov rax, qword [rax + 8]	       303	extension.c	FUNCTION_15
0x400035d	          0x4885c0	                           test rax, rax	       303	extension.c	FUNCTION_15
0x4000360	            0x7402	                            je 0x4000364	       301	extension.c	FUNCTION_15	IF_1
0x4000362	              0xf3	                                 invalid	       304	extension.c	FUNCTION_15
