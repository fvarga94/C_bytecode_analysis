xmemdup	DO,0:WHILE,0:ELSE,0:FOR,0:functions,0:CALL,3:SWITCH,0:IF,1	30
0x4000040	              0x55	                                push rbp	        36	xmemdup.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        36	xmemdup.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	        36	xmemdup.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        36	xmemdup.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        36	xmemdup.c	FUNCTION_1
0x4000050	        0x488955d8	             mov qword [rbp - 0x28], rdx	        36	xmemdup.c	FUNCTION_1
0x4000054	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        37	xmemdup.c	FUNCTION_1	CALL_1
0x4000058	          0x4889c7	                            mov rdi, rax	        37	xmemdup.c	FUNCTION_1	CALL_1
0x400005b	      0xe800000000	                          call 0x4000060	        37	xmemdup.c	FUNCTION_1	CALL_1
0x4000060	        0x488945f8	                mov qword [rbp - 8], rax	        37	xmemdup.c	FUNCTION_1	CALL_1
0x4000064	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        38	xmemdup.c	FUNCTION_1	IF_1
0x4000068	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        38	xmemdup.c	FUNCTION_1	IF_1
0x400006c	            0x7623	                           jbe 0x4000091	        38	xmemdup.c	FUNCTION_1	IF_1
0x400006e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        39	xmemdup.c	FUNCTION_1	CALL_2
0x4000072	        0x482b45e0	             sub rax, qword [rbp - 0x20]	        39	xmemdup.c	FUNCTION_1	CALL_2
0x4000076	        0x488b4df8	                mov rcx, qword [rbp - 8]	        39	xmemdup.c	FUNCTION_1	CALL_2
0x400007a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        39	xmemdup.c	FUNCTION_1	CALL_2
0x400007e	          0x4801d1	                            add rcx, rdx	        39	xmemdup.c	FUNCTION_1	CALL_2
0x4000081	          0x4889c2	                            mov rdx, rax	        39	xmemdup.c	FUNCTION_1	CALL_2
0x4000084	      0xbe00000000	                              mov esi, 0	        39	xmemdup.c	FUNCTION_1	CALL_2
0x4000089	          0x4889cf	                            mov rdi, rcx	        39	xmemdup.c	FUNCTION_1	CALL_2
0x400008c	      0xe800000000	                          call 0x4000091	        39	xmemdup.c	FUNCTION_1	CALL_2
0x4000091	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        40	xmemdup.c	FUNCTION_1	CALL_3
0x4000095	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        40	xmemdup.c	FUNCTION_1	CALL_3
0x4000099	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	xmemdup.c	FUNCTION_1	CALL_3
0x400009d	          0x4889ce	                            mov rsi, rcx	        40	xmemdup.c	FUNCTION_1	CALL_3
0x40000a0	          0x4889c7	                            mov rdi, rax	        40	xmemdup.c	FUNCTION_1	CALL_3
0x40000a3	      0xe800000000	                          call 0x40000a8	        40	xmemdup.c	FUNCTION_1	CALL_3
0x40000a8	              0xc9	                                   leave	        41	xmemdup.c	FUNCTION_1
0x40000a9	              0xc3	                                     ret	        41	xmemdup.c	FUNCTION_1
