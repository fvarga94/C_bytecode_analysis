ax_reg_mask	SWITCH,0:WHILE,0:CALL,11:FOR,0:IF,4:DO,0:ELSE,1:functions,0	85
0x4000930	            0x4156	                                push r14	       426	ax-general.c	FUNCTION_21
0x4000932	            0x4155	                                push r13	       426	ax-general.c	FUNCTION_21
0x4000934	            0x4154	                                push r12	       426	ax-general.c	FUNCTION_21
0x4000936	              0x55	                                push rbp	       426	ax-general.c	FUNCTION_21
0x4000937	          0x4889fd	                            mov rbp, rdi	       426	ax-general.c	FUNCTION_21
0x400093a	              0x53	                                push rbx	       426	ax-general.c	FUNCTION_21
0x400093b	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       427	ax-general.c	FUNCTION_21	IF_1	CALL_1
0x400093f	            0x89f3	                            mov ebx, esi	       426	ax-general.c	FUNCTION_21
0x4000941	      0xe800000000	                          call 0x4000946	       427	ax-general.c	FUNCTION_21	IF_1	CALL_1
0x4000946	            0x39d8	                            cmp eax, ebx	       427	ax-general.c	FUNCTION_21	IF_1	CALL_1
0x4000948	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       430	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400094c	            0x7f32	                            jg 0x4000980	       427	ax-general.c	FUNCTION_21	IF_1	CALL_1
0x400094e	      0xe800000000	                          call 0x4000953	       430	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4000953	            0x85c0	                           test eax, eax	       430	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4000955	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       431	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4000959	     0xf84a5000000	                            je 0x4000a04	       430	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400095f	            0x89da	                            mov edx, ebx	       434	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_6
0x4000961	          0x4889ee	                            mov rsi, rbp	       434	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_6
0x4000964	      0xe800000000	                          call 0x4000969	       434	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_6
0x4000969	            0x85c0	                           test eax, eax	       434	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_6
0x400096b	     0xf85b4000000	                           jne 0x4000a25	       434	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_6
0x4000971	              0x5b	                                 pop rbx	       463	ax-general.c	FUNCTION_21
0x4000972	              0x5d	                                 pop rbp	       463	ax-general.c	FUNCTION_21
0x4000973	            0x415c	                                 pop r12	       463	ax-general.c	FUNCTION_21
0x4000975	            0x415d	                                 pop r13	       463	ax-general.c	FUNCTION_21
0x4000977	            0x415e	                                 pop r14	       463	ax-general.c	FUNCTION_21
0x4000979	              0xc3	                                     ret	       463	ax-general.c	FUNCTION_21
0x400097a	    0x660f1f440000	                    nop word [rax + rax]	       463	ax-general.c	FUNCTION_21
0x4000980	            0x89de	                            mov esi, ebx	       443	ax-general.c	FUNCTION_21	ELSE_1	CALL_10
0x4000982	      0xe800000000	                          call 0x4000987	       443	ax-general.c	FUNCTION_21	ELSE_1	CALL_10
0x4000987	        0x448d6007	                     lea r12d, [rax + 7]	       444	ax-general.c	FUNCTION_21	ELSE_1
0x400098b	            0x85c0	                           test eax, eax	       444	ax-general.c	FUNCTION_21	ELSE_1
0x400098d	            0x89c3	                            mov ebx, eax	       443	ax-general.c	FUNCTION_21	ELSE_1	CALL_10
0x400098f	        0x440f49e0	                        cmovns r12d, eax	       444	ax-general.c	FUNCTION_21	ELSE_1
0x4000993	        0x41c1fc03	                             sar r12d, 3	       444	ax-general.c	FUNCTION_21	ELSE_1
0x4000997	        0x443b6534	           cmp r12d, dword [rbp + 0x34] 	       447	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x400099b	            0x7d33	                           jge 0x40009d0	       447	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x400099d	        0x4c8b6d38	            mov r13, qword [rbp + 0x38] 	       447	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x40009a1	            0x89d8	                            mov eax, ebx	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009a3	          0x4d63e4	                        movsxd r12, r12d	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009a6	          0xc1f81f	                           sar eax, 0x1f	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009a9	          0xc1e81d	                           shr eax, 0x1d	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009ac	          0x8d0c03	                    lea ecx, [rbx + rax]	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009af	          0x83e107	                              and ecx, 7	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009b2	            0x29c1	                            sub ecx, eax	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009b4	      0xb801000000	                              mov eax, 1	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009b9	            0xd3e0	                             shl eax, cl	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009bb	      0x4308442500	                 or byte [r13 + r12], al	       461	ax-general.c	FUNCTION_21	ELSE_1
0x40009c0	              0x5b	                                 pop rbx	       463	ax-general.c	FUNCTION_21
0x40009c1	              0x5d	                                 pop rbp	       463	ax-general.c	FUNCTION_21
0x40009c2	            0x415c	                                 pop r12	       463	ax-general.c	FUNCTION_21
0x40009c4	            0x415d	                                 pop r13	       463	ax-general.c	FUNCTION_21
0x40009c6	            0x415e	                                 pop r14	       463	ax-general.c	FUNCTION_21
0x40009c8	              0xc3	                                     ret	       463	ax-general.c	FUNCTION_21
0x40009c9	     0xf1f80000000	                         nop dword [rax]	       463	ax-general.c	FUNCTION_21
0x40009d0	      0x458d742401	                     lea r14d, [r12 + 1]	       451	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x40009d5	        0x488b7d38	            mov rdi, qword [rbp + 0x38] 	       170	poison.h	
0x40009d9	          0x4963f6	                        movsxd rsi, r14d	       170	poison.h	
0x40009dc	      0xe800000000	                          call 0x40009e1	       170	poison.h	
0x40009e1	        0x48637d34	         movsxd rdi, dword [rbp + 0x34] 	       456	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x40009e5	          0x4489f2	                           mov edx, r14d	        90	string3.h	FUNCTION_38	CALL_6
0x40009e8	          0x4989c5	                            mov r13, rax	       170	poison.h	
0x40009eb	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_38	CALL_6
0x40009ed	            0x29fa	                            sub edx, edi	        90	string3.h	FUNCTION_38	CALL_6
0x40009ef	          0x4801c7	                            add rdi, rax	        90	string3.h	FUNCTION_38	CALL_6
0x40009f2	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_38	CALL_6
0x40009f5	      0xe800000000	                          call 0x40009fa	        90	string3.h	FUNCTION_38	CALL_6
0x40009fa	        0x44897534	           mov dword [rbp + 0x34], r14d 	       457	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x40009fe	        0x4c896d38	            mov qword [rbp + 0x38], r13 	       458	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x4000a02	            0xeb9d	                           jmp 0x40009a1	       458	ax-general.c	FUNCTION_21	ELSE_1	IF_4
0x4000a04	            0x89de	                            mov esi, ebx	       431	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4000a06	      0xe800000000	                          call 0x4000a0b	       431	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4000a0b	      0xbf00000000	                              mov edi, 0	       431	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4000a10	          0x4889c3	                            mov rbx, rax	       431	ax-general.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4000a13	      0xe800000000	                          call 0x4000a18	       435	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_8
0x4000a18	          0x4889de	                            mov rsi, rbx	       436	ax-general.c	FUNCTION_21	IF_1	CALL_9
0x4000a1b	          0x4889c7	                            mov rdi, rax	       436	ax-general.c	FUNCTION_21	IF_1	CALL_9
0x4000a1e	            0x31c0	                            xor eax, eax	       436	ax-general.c	FUNCTION_21	IF_1	CALL_9
0x4000a20	      0xe800000000	                          call 0x4000a25	       436	ax-general.c	FUNCTION_21	IF_1	CALL_9
0x4000a25	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       435	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_8
0x4000a29	            0x89de	                            mov esi, ebx	       435	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_8
0x4000a2b	      0xe800000000	                          call 0x4000a30	       435	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_8
0x4000a30	      0xbf00000000	                              mov edi, 0	       435	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_8
0x4000a35	          0x4889c3	                            mov rbx, rax	       435	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_8
0x4000a38	            0xebd9	                           jmp 0x4000a13	       435	ax-general.c	FUNCTION_21	IF_1	IF_3	CALL_8
ax_reg	SWITCH,0:WHILE,0:CALL,13:FOR,0:IF,4:DO,0:ELSE,1:functions,0	63
0x4000480	              0x55	                                push rbp	       275	ax-general.c	FUNCTION_17
0x4000481	              0x53	                                push rbx	       275	ax-general.c	FUNCTION_17
0x4000482	          0x4889fb	                            mov rbx, rdi	       275	ax-general.c	FUNCTION_17
0x4000485	            0x89f5	                            mov ebp, esi	       275	ax-general.c	FUNCTION_17
0x4000487	        0x4883ec08	                              sub rsp, 8	       275	ax-general.c	FUNCTION_17
0x400048b	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       276	ax-general.c	FUNCTION_17	IF_1	CALL_1
0x400048f	      0xe800000000	                          call 0x4000494	       276	ax-general.c	FUNCTION_17	IF_1	CALL_1
0x4000494	            0x39e8	                            cmp eax, ebp	       276	ax-general.c	FUNCTION_17	IF_1	CALL_1
0x4000496	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       279	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_2
0x400049a	            0x7f44	                            jg 0x40004e0	       276	ax-general.c	FUNCTION_17	IF_1	CALL_1
0x400049c	      0xe800000000	                          call 0x40004a1	       279	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_2
0x40004a1	            0x85c0	                           test eax, eax	       279	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_2
0x40004a3	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       280	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x40004a7	     0xf8496000000	                            je 0x4000543	       279	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_2
0x40004ad	            0x89ea	                            mov edx, ebp	       283	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_6
0x40004af	          0x4889de	                            mov rsi, rbx	       283	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_6
0x40004b2	      0xe800000000	                          call 0x40004b7	       283	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_6
0x40004b7	            0x85c0	                           test eax, eax	       283	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_6
0x40004b9	            0x746d	                            je 0x4000528	       283	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_6
0x40004bb	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       284	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_8
0x40004bf	            0x89ee	                            mov esi, ebp	       284	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_8
0x40004c1	      0xe800000000	                          call 0x40004c6	       284	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_8
0x40004c6	      0xbf00000000	                              mov edi, 0	       284	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_8
0x40004cb	          0x4889c3	                            mov rbx, rax	       284	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_8
0x40004ce	      0xe800000000	                          call 0x40004d3	       284	ax-general.c	FUNCTION_17	IF_1	IF_3	CALL_8
0x40004d3	          0x4889de	                            mov rsi, rbx	       285	ax-general.c	FUNCTION_17	IF_1	CALL_9
0x40004d6	          0x4889c7	                            mov rdi, rax	       285	ax-general.c	FUNCTION_17	IF_1	CALL_9
0x40004d9	            0x31c0	                            xor eax, eax	       285	ax-general.c	FUNCTION_17	IF_1	CALL_9
0x40004db	      0xe800000000	                          call 0x40004e0	       285	ax-general.c	FUNCTION_17	IF_1	CALL_9
0x40004e0	            0x89ee	                            mov esi, ebp	       290	ax-general.c	FUNCTION_17	ELSE_1	CALL_10
0x40004e2	      0xe800000000	                          call 0x40004e7	       290	ax-general.c	FUNCTION_17	ELSE_1	CALL_10
0x40004e7	      0x3dffff0000	                         cmp eax, 0xffff	       293	ax-general.c	FUNCTION_17	ELSE_1	IF_4
0x40004ec	            0x89c5	                            mov ebp, eax	       290	ax-general.c	FUNCTION_17	ELSE_1	CALL_10
0x40004ee	            0x773f	                            ja 0x400052f	       293	ax-general.c	FUNCTION_17	ELSE_1	IF_4
0x40004f0	      0xbe03000000	                              mov esi, 3	       296	ax-general.c	FUNCTION_17	ELSE_1	CALL_13
0x40004f5	          0x4889df	                            mov rdi, rbx	       296	ax-general.c	FUNCTION_17	ELSE_1	CALL_13
0x40004f8	      0xe843fbffff	      call sym.grow_expr_agent_expr__int	       296	ax-general.c	FUNCTION_17	ELSE_1	CALL_13
0x40004fd	        0x48634308	            movsxd rax, dword [rbx + 8] 	       297	ax-general.c	FUNCTION_17	ELSE_1
0x4000501	          0x488b13	                    mov rdx, qword [rbx]	       297	ax-general.c	FUNCTION_17	ELSE_1
0x4000504	            0x89e9	                            mov ecx, ebp	       298	ax-general.c	FUNCTION_17	ELSE_1
0x4000506	          0xc1f908	                              sar ecx, 8	       298	ax-general.c	FUNCTION_17	ELSE_1
0x4000509	        0xc6040226	              mov byte [rdx + rax], 0x26	       297	ax-general.c	FUNCTION_17	ELSE_1
0x400050d	        0x48634308	            movsxd rax, dword [rbx + 8] 	       298	ax-general.c	FUNCTION_17	ELSE_1
0x4000511	          0x488b13	                    mov rdx, qword [rbx]	       298	ax-general.c	FUNCTION_17	ELSE_1
0x4000514	        0x884c0201	            mov byte [rdx + rax + 1], cl	       298	ax-general.c	FUNCTION_17	ELSE_1
0x4000518	        0x48634308	            movsxd rax, dword [rbx + 8] 	       299	ax-general.c	FUNCTION_17	ELSE_1
0x400051c	          0x488b13	                    mov rdx, qword [rbx]	       299	ax-general.c	FUNCTION_17	ELSE_1
0x400051f	      0x40886c0202	           mov byte [rdx + rax + 2], bpl	       299	ax-general.c	FUNCTION_17	ELSE_1
0x4000524	        0x83430803	                  add dword [rbx + 8], 3	       300	ax-general.c	FUNCTION_17	ELSE_1
0x4000528	        0x4883c408	                              add rsp, 8	       302	ax-general.c	FUNCTION_17
0x400052c	              0x5b	                                 pop rbx	       302	ax-general.c	FUNCTION_17
0x400052d	              0x5d	                                 pop rbp	       302	ax-general.c	FUNCTION_17
0x400052e	              0xc3	                                     ret	       302	ax-general.c	FUNCTION_17
0x400052f	      0xbf00000000	                              mov edi, 0	       294	ax-general.c	FUNCTION_17	ELSE_1	IF_4	CALL_12
0x4000534	      0xe800000000	                          call 0x4000539	       294	ax-general.c	FUNCTION_17	ELSE_1	IF_4	CALL_12
0x4000539	          0x4889c7	                            mov rdi, rax	       295	ax-general.c	FUNCTION_17	ELSE_1	IF_4
0x400053c	            0x31c0	                            xor eax, eax	       295	ax-general.c	FUNCTION_17	ELSE_1	IF_4
0x400053e	      0xe800000000	                          call 0x4000543	       295	ax-general.c	FUNCTION_17	ELSE_1	IF_4
0x4000543	            0x89ee	                            mov esi, ebp	       280	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000545	      0xe800000000	                          call 0x400054a	       280	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x400054a	      0xbf00000000	                              mov edi, 0	       280	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x400054f	          0x4889c3	                            mov rbx, rax	       280	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000552	      0xe977ffffff	                           jmp 0x40004ce	       280	ax-general.c	FUNCTION_17	IF_1	IF_2	CALL_4
ax_string	SWITCH,0:WHILE,0:CALL,3:FOR,1:IF,1:DO,0:ELSE,0:functions,0	55
0x40005d0	    0x81faffff0000	                         cmp edx, 0xffff	       333	ax-general.c	FUNCTION_19	IF_1
0x40005d6	            0x4154	                                push r12	       329	ax-general.c	FUNCTION_19
0x40005d8	          0x4189d4	                           mov r12d, edx	       329	ax-general.c	FUNCTION_19
0x40005db	              0x55	                                push rbp	       329	ax-general.c	FUNCTION_19
0x40005dc	              0x53	                                push rbx	       329	ax-general.c	FUNCTION_19
0x40005dd	     0xf878a000000	                            ja 0x400066d	       333	ax-general.c	FUNCTION_19	IF_1
0x40005e3	          0x4889f3	                            mov rbx, rsi	       333	ax-general.c	FUNCTION_19	IF_1
0x40005e6	          0x8d7203	                      lea esi, [rdx + 3]	       338	ax-general.c	FUNCTION_19	CALL_3
0x40005e9	          0x4889fd	                            mov rbp, rdi	       338	ax-general.c	FUNCTION_19	CALL_3
0x40005ec	      0xe84ffaffff	      call sym.grow_expr_agent_expr__int	       338	ax-general.c	FUNCTION_19	CALL_3
0x40005f1	        0x48634508	            movsxd rax, dword [rbp + 8] 	       339	ax-general.c	FUNCTION_19
0x40005f5	        0x488b4d00	                    mov rcx, qword [rbp]	       339	ax-general.c	FUNCTION_19
0x40005f9	          0x8d5001	                      lea edx, [rax + 1]	       339	ax-general.c	FUNCTION_19
0x40005fc	          0x895508	                mov dword [rbp + 8], edx	       339	ax-general.c	FUNCTION_19
0x40005ff	      0x418d542401	                      lea edx, [r12 + 1]	       339	ax-general.c	FUNCTION_19
0x4000604	          0xc1fa08	                              sar edx, 8	       339	ax-general.c	FUNCTION_19
0x4000607	          0x4585e4	                         test r12d, r12d	       341	ax-general.c	FUNCTION_19	FOR_1
0x400060a	          0x881401	                mov byte [rcx + rax], dl	       339	ax-general.c	FUNCTION_19
0x400060d	        0x48634508	            movsxd rax, dword [rbp + 8] 	       340	ax-general.c	FUNCTION_19
0x4000611	        0x488b5500	                    mov rdx, qword [rbp]	       340	ax-general.c	FUNCTION_19
0x4000615	          0x8d4801	                      lea ecx, [rax + 1]	       340	ax-general.c	FUNCTION_19
0x4000618	          0x894d08	                mov dword [rbp + 8], ecx	       340	ax-general.c	FUNCTION_19
0x400061b	      0x418d4c2401	                      lea ecx, [r12 + 1]	       340	ax-general.c	FUNCTION_19
0x4000620	          0x880c02	                mov byte [rdx + rax], cl	       340	ax-general.c	FUNCTION_19
0x4000623	            0x7431	                            je 0x4000656	       341	ax-general.c	FUNCTION_19	FOR_1
0x4000625	      0x418d4424ff	                      lea eax, [r12 - 1]	       341	ax-general.c	FUNCTION_19	FOR_1
0x400062a	          0x4889de	                            mov rsi, rbx	       341	ax-general.c	FUNCTION_19	FOR_1
0x400062d	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	       341	ax-general.c	FUNCTION_19	FOR_1
0x4000632	    0x660f1f440000	                    nop word [rax + rax]	       341	ax-general.c	FUNCTION_19	FOR_1
0x4000638	        0x48634508	            movsxd rax, dword [rbp + 8] 	       342	ax-general.c	FUNCTION_19	FOR_1
0x400063c	        0x488b5500	                    mov rdx, qword [rbp]	       342	ax-general.c	FUNCTION_19	FOR_1
0x4000640	        0x4883c601	                              add rsi, 1	       342	ax-general.c	FUNCTION_19	FOR_1
0x4000644	          0x8d4801	                      lea ecx, [rax + 1]	       342	ax-general.c	FUNCTION_19	FOR_1
0x4000647	          0x894d08	                mov dword [rbp + 8], ecx	       342	ax-general.c	FUNCTION_19	FOR_1
0x400064a	         0xfb64eff	               movzx ecx, byte [rsi - 1]	       342	ax-general.c	FUNCTION_19	FOR_1
0x400064e	          0x4839fe	                            cmp rsi, rdi	       341	ax-general.c	FUNCTION_19	FOR_1
0x4000651	          0x880c02	                mov byte [rdx + rax], cl	       342	ax-general.c	FUNCTION_19	FOR_1
0x4000654	            0x75e2	                           jne 0x4000638	       341	ax-general.c	FUNCTION_19	FOR_1
0x4000656	        0x48634508	            movsxd rax, dword [rbp + 8] 	       343	ax-general.c	FUNCTION_19
0x400065a	        0x488b5500	                    mov rdx, qword [rbp]	       343	ax-general.c	FUNCTION_19
0x400065e	          0x8d4801	                      lea ecx, [rax + 1]	       343	ax-general.c	FUNCTION_19
0x4000661	          0x894d08	                mov dword [rbp + 8], ecx	       343	ax-general.c	FUNCTION_19
0x4000664	        0xc6040200	                 mov byte [rdx + rax], 0	       343	ax-general.c	FUNCTION_19
0x4000668	              0x5b	                                 pop rbx	       344	ax-general.c	FUNCTION_19
0x4000669	              0x5d	                                 pop rbp	       344	ax-general.c	FUNCTION_19
0x400066a	            0x415c	                                 pop r12	       344	ax-general.c	FUNCTION_19
0x400066c	              0xc3	                                     ret	       344	ax-general.c	FUNCTION_19
0x400066d	      0xbf00000000	                              mov edi, 0	       335	ax-general.c	FUNCTION_19	IF_1	CALL_2
0x4000672	      0xe800000000	                          call 0x4000677	       335	ax-general.c	FUNCTION_19	IF_1	CALL_2
0x4000677	          0x4489e1	                           mov ecx, r12d	       336	ax-general.c	FUNCTION_19	IF_1
0x400067a	          0x4889c2	                            mov rdx, rax	       336	ax-general.c	FUNCTION_19	IF_1
0x400067d	      0xbe4e010000	                          mov esi, 0x14e	       336	ax-general.c	FUNCTION_19	IF_1
0x4000682	      0xbf00000000	                              mov edi, 0	       336	ax-general.c	FUNCTION_19	IF_1
0x4000687	            0x31c0	                            xor eax, eax	       336	ax-general.c	FUNCTION_19	IF_1
0x4000689	      0xe800000000	                          call 0x400068e	       336	ax-general.c	FUNCTION_19	IF_1
ax_pick	SWITCH,0:WHILE,0:CALL,4:FOR,0:IF,1:DO,0:ELSE,0:functions,0	26
0x4000230	              0x55	                                push rbp	       135	ax-general.c	FUNCTION_8
0x4000231	              0x53	                                push rbx	       135	ax-general.c	FUNCTION_8
0x4000232	        0x4883ec08	                              sub rsp, 8	       135	ax-general.c	FUNCTION_8
0x4000236	    0x81feff000000	                           cmp esi, 0xff	       136	ax-general.c	FUNCTION_8	IF_1
0x400023c	            0x7735	                            ja 0x4000273	       136	ax-general.c	FUNCTION_8	IF_1
0x400023e	          0x4889fb	                            mov rbx, rdi	       136	ax-general.c	FUNCTION_8	IF_1
0x4000241	            0x89f5	                            mov ebp, esi	       136	ax-general.c	FUNCTION_8	IF_1
0x4000243	      0xbe01000000	                              mov esi, 1	       119	ax-general.c	FUNCTION_6	CALL_1
0x4000248	      0xe8f3fdffff	      call sym.grow_expr_agent_expr__int	       119	ax-general.c	FUNCTION_6	CALL_1
0x400024d	        0x48634308	            movsxd rax, dword [rbx + 8] 	       120	ax-general.c	FUNCTION_6
0x4000251	          0x488b13	                    mov rdx, qword [rbx]	       120	ax-general.c	FUNCTION_6
0x4000254	          0x4889df	                            mov rdi, rbx	       139	ax-general.c	FUNCTION_8	CALL_4
0x4000257	      0xbe01000000	                              mov esi, 1	       139	ax-general.c	FUNCTION_8	CALL_4
0x400025c	          0x8d4801	                      lea ecx, [rax + 1]	       120	ax-general.c	FUNCTION_6
0x400025f	          0x894b08	                mov dword [rbx + 8], ecx	       120	ax-general.c	FUNCTION_6
0x4000262	        0xc6040232	              mov byte [rdx + rax], 0x32	       120	ax-general.c	FUNCTION_6
0x4000266	        0x4883c408	                              add rsp, 8	       140	ax-general.c	FUNCTION_8
0x400026a	            0x89ea	                            mov edx, ebp	       139	ax-general.c	FUNCTION_8	CALL_4
0x400026c	              0x5b	                                 pop rbx	       140	ax-general.c	FUNCTION_8
0x400026d	              0x5d	                                 pop rbp	       140	ax-general.c	FUNCTION_8
0x400026e	      0xe9fdfdffff	jmp sym.append_const_agent_expr__long_int	       139	ax-general.c	FUNCTION_8	CALL_4
0x4000273	      0xbf00000000	                              mov edi, 0	       137	ax-general.c	FUNCTION_8	CALL_2
0x4000278	      0xe800000000	                          call 0x400027d	       137	ax-general.c	FUNCTION_8	CALL_2
0x400027d	          0x4889c7	                            mov rdi, rax	       137	ax-general.c	FUNCTION_8	CALL_2
0x4000280	            0x31c0	                            xor eax, eax	       137	ax-general.c	FUNCTION_8	CALL_2
0x4000282	      0xe800000000	                          call 0x4000287	       137	ax-general.c	FUNCTION_8	CALL_2
ax_goto	SWITCH,0:WHILE,0:CALL,1:FOR,0:IF,0:DO,0:ELSE,0:functions,0	24
0x4000310	              0x55	                                push rbp	       201	ax-general.c	FUNCTION_13
0x4000311	              0x53	                                push rbx	       201	ax-general.c	FUNCTION_13
0x4000312	            0x89f5	                            mov ebp, esi	       201	ax-general.c	FUNCTION_13
0x4000314	          0x4889fb	                            mov rbx, rdi	       201	ax-general.c	FUNCTION_13
0x4000317	      0xbe03000000	                              mov esi, 3	       202	ax-general.c	FUNCTION_13	CALL_1
0x400031c	        0x4883ec08	                              sub rsp, 8	       201	ax-general.c	FUNCTION_13
0x4000320	      0xe81bfdffff	      call sym.grow_expr_agent_expr__int	       202	ax-general.c	FUNCTION_13	CALL_1
0x4000325	        0x48634308	            movsxd rax, dword [rbx + 8] 	       203	ax-general.c	FUNCTION_13
0x4000329	          0x488b13	                    mov rdx, qword [rbx]	       203	ax-general.c	FUNCTION_13
0x400032c	        0x40882c02	               mov byte [rdx + rax], bpl	       203	ax-general.c	FUNCTION_13
0x4000330	        0x48634308	            movsxd rax, dword [rbx + 8] 	       204	ax-general.c	FUNCTION_13
0x4000334	          0x488b13	                    mov rdx, qword [rbx]	       204	ax-general.c	FUNCTION_13
0x4000337	      0xc6440201ff	         mov byte [rdx + rax + 1], 0xff 	       204	ax-general.c	FUNCTION_13
0x400033c	        0x48634308	            movsxd rax, dword [rbx + 8] 	       205	ax-general.c	FUNCTION_13
0x4000340	          0x488b13	                    mov rdx, qword [rbx]	       205	ax-general.c	FUNCTION_13
0x4000343	      0xc6440202ff	         mov byte [rdx + rax + 2], 0xff 	       205	ax-general.c	FUNCTION_13
0x4000348	          0x8b4308	                mov eax, dword [rbx + 8]	       206	ax-general.c	FUNCTION_13
0x400034b	          0x8d5003	                      lea edx, [rax + 3]	       206	ax-general.c	FUNCTION_13
0x400034e	          0x83c001	                              add eax, 1	       207	ax-general.c	FUNCTION_13
0x4000351	          0x895308	                mov dword [rbx + 8], edx	       206	ax-general.c	FUNCTION_13
0x4000354	        0x4883c408	                              add rsp, 8	       208	ax-general.c	FUNCTION_13
0x4000358	              0x5b	                                 pop rbx	       208	ax-general.c	FUNCTION_13
0x4000359	              0x5d	                                 pop rbp	       208	ax-general.c	FUNCTION_13
0x400035a	              0xc3	                                     ret	       208	ax-general.c	FUNCTION_13
append_const	SWITCH,0:WHILE,0:CALL,1:FOR,1:IF,0:DO,0:ELSE,0:functions,0	26
0x4000070	            0x4154	                                push r12	        83	ax-general.c	FUNCTION_4
0x4000072	              0x55	                                push rbp	        83	ax-general.c	FUNCTION_4
0x4000073	          0x4189d4	                           mov r12d, edx	        83	ax-general.c	FUNCTION_4
0x4000076	              0x53	                                push rbx	        83	ax-general.c	FUNCTION_4
0x4000077	          0x4889f3	                            mov rbx, rsi	        83	ax-general.c	FUNCTION_4
0x400007a	            0x89d6	                            mov esi, edx	        86	ax-general.c	FUNCTION_4	CALL_1
0x400007c	          0x4889fd	                            mov rbp, rdi	        83	ax-general.c	FUNCTION_4
0x400007f	      0xe8bcffffff	      call sym.grow_expr_agent_expr__int	        86	ax-general.c	FUNCTION_4	CALL_1
0x4000084	          0x4489e0	                           mov eax, r12d	        87	ax-general.c	FUNCTION_4	FOR_1
0x4000087	          0x83e801	                              sub eax, 1	        87	ax-general.c	FUNCTION_4	FOR_1
0x400008a	            0x781f	                            js 0x40000ab	        87	ax-general.c	FUNCTION_4	FOR_1
0x400008c	         0xf1f4000	                         nop dword [rax]	        87	ax-general.c	FUNCTION_4	FOR_1
0x4000090	          0x8b4d08	                mov ecx, dword [rbp + 8]	        89	ax-general.c	FUNCTION_4	FOR_1
0x4000093	        0x488b7500	                    mov rsi, qword [rbp]	        89	ax-general.c	FUNCTION_4	FOR_1
0x4000097	             0x1c1	                            add ecx, eax	        89	ax-general.c	FUNCTION_4	FOR_1
0x4000099	          0x83e801	                              sub eax, 1	        87	ax-general.c	FUNCTION_4	FOR_1
0x400009c	          0x4863c9	                         movsxd rcx, ecx	        89	ax-general.c	FUNCTION_4	FOR_1
0x400009f	          0x881c0e	                mov byte [rsi + rcx], bl	        89	ax-general.c	FUNCTION_4	FOR_1
0x40000a2	        0x48c1fb08	                              sar rbx, 8	        90	ax-general.c	FUNCTION_4	FOR_1
0x40000a6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        87	ax-general.c	FUNCTION_4	FOR_1
0x40000a9	            0x75e5	                           jne 0x4000090	        87	ax-general.c	FUNCTION_4	FOR_1
0x40000ab	        0x44016508	               add dword [rbp + 8], r12d	        92	ax-general.c	FUNCTION_4
0x40000af	              0x5b	                                 pop rbx	        93	ax-general.c	FUNCTION_4
0x40000b0	              0x5d	                                 pop rbp	        93	ax-general.c	FUNCTION_4
0x40000b1	            0x415c	                                 pop r12	        93	ax-general.c	FUNCTION_4
0x40000b3	              0xc3	                                     ret	        93	ax-general.c	FUNCTION_4
ax_const_l	SWITCH,0:WHILE,0:CALL,3:FOR,1:IF,2:DO,0:ELSE,0:functions,0	59
0x40003a0	            0x4155	                                push r13	       230	ax-general.c	FUNCTION_15
0x40003a2	            0x4154	                                push r12	       230	ax-general.c	FUNCTION_15
0x40003a4	            0x31c0	                            xor eax, eax	       241	ax-general.c	FUNCTION_15	FOR_1
0x40003a6	              0x55	                                push rbp	       230	ax-general.c	FUNCTION_15
0x40003a7	              0x53	                                push rbx	       230	ax-general.c	FUNCTION_15
0x40003a8	          0x4889f5	                            mov rbp, rsi	       230	ax-general.c	FUNCTION_15
0x40003ab	          0x4989fc	                            mov r12, rdi	       230	ax-general.c	FUNCTION_15
0x40003ae	      0xbb08000000	                              mov ebx, 8	       241	ax-general.c	FUNCTION_15	FOR_1
0x40003b3	      0xbe01000000	                              mov esi, 1	       243	ax-general.c	FUNCTION_15	FOR_1
0x40003b8	        0x4883ec08	                              sub rsp, 8	       230	ax-general.c	FUNCTION_15
0x40003bc	          0x8d4bff	                      lea ecx, [rbx - 1]	       243	ax-general.c	FUNCTION_15	FOR_1
0x40003bf	          0x4889f2	                            mov rdx, rsi	       243	ax-general.c	FUNCTION_15	FOR_1
0x40003c2	          0x48d3e2	                             shl rdx, cl	       243	ax-general.c	FUNCTION_15	FOR_1
0x40003c5	          0x4889d1	                            mov rcx, rdx	       245	ax-general.c	FUNCTION_15	FOR_1	IF_1
0x40003c8	          0x48f7d9	                                 neg rcx	       245	ax-general.c	FUNCTION_15	FOR_1	IF_1
0x40003cb	          0x4839e9	                            cmp rcx, rbp	       245	ax-general.c	FUNCTION_15	FOR_1	IF_1
0x40003ce	            0x7f05	                            jg 0x40003d5	       245	ax-general.c	FUNCTION_15	FOR_1	IF_1
0x40003d0	          0x4839ea	                            cmp rdx, rbp	       245	ax-general.c	FUNCTION_15	FOR_1	IF_1
0x40003d3	            0x7f0a	                            jg 0x40003df	       245	ax-general.c	FUNCTION_15	FOR_1	IF_1
0x40003d5	          0x83c001	                              add eax, 1	       241	ax-general.c	FUNCTION_15	FOR_1
0x40003d8	             0x1db	                            add ebx, ebx	       241	ax-general.c	FUNCTION_15	FOR_1
0x40003da	          0x83f803	                              cmp eax, 3	       241	ax-general.c	FUNCTION_15	FOR_1
0x40003dd	            0x75dd	                           jne 0x40003bc	       241	ax-general.c	FUNCTION_15	FOR_1
0x40003df	            0x4898	                                    cdqe	       250	ax-general.c	FUNCTION_15	CALL_1
0x40003e1	      0xbe01000000	                              mov esi, 1	       119	ax-general.c	FUNCTION_6	CALL_1
0x40003e6	          0x4c89e7	                            mov rdi, r12	       119	ax-general.c	FUNCTION_6	CALL_1
0x40003e9	    0x448b2c850000	                 mov r13d, dword [rax*4]	       119	ax-general.c	FUNCTION_6	CALL_1
0x40003f1	      0xe84afcffff	      call sym.grow_expr_agent_expr__int	       119	ax-general.c	FUNCTION_6	CALL_1
0x40003f6	      0x4963442408	            movsxd rax, dword [r12 + 8] 	       120	ax-general.c	FUNCTION_6
0x40003fb	        0x498b1424	                    mov rdx, qword [r12]	       120	ax-general.c	FUNCTION_6
0x40003ff	          0x4889ee	                            mov rsi, rbp	       254	ax-general.c	FUNCTION_15	CALL_2
0x4000402	          0x4c89e7	                            mov rdi, r12	       254	ax-general.c	FUNCTION_15	CALL_2
0x4000405	        0x48c1ed3f	                           shr rbp, 0x3f	       257	ax-general.c	FUNCTION_15	IF_2
0x4000409	          0x8d4801	                      lea ecx, [rax + 1]	       120	ax-general.c	FUNCTION_6
0x400040c	      0x41894c2408	                mov dword [r12 + 8], ecx	       120	ax-general.c	FUNCTION_6
0x4000411	        0x44882c02	              mov byte [rdx + rax], r13b	       120	ax-general.c	FUNCTION_6
0x4000415	            0x89da	                            mov edx, ebx	       254	ax-general.c	FUNCTION_15	CALL_2
0x4000417	          0xc1fa03	                              sar edx, 3	       254	ax-general.c	FUNCTION_15	CALL_2
0x400041a	      0xe851fcffff	call sym.append_const_agent_expr__long_int	       254	ax-general.c	FUNCTION_15	CALL_2
0x400041f	          0x4084ed	                           test bpl, bpl	       257	ax-general.c	FUNCTION_15	IF_2
0x4000422	            0x7424	                            je 0x4000448	       257	ax-general.c	FUNCTION_15	IF_2
0x4000424	          0x83fb3f	                           cmp ebx, 0x3f	       257	ax-general.c	FUNCTION_15	IF_2
0x4000427	            0x7f1f	                            jg 0x4000448	       257	ax-general.c	FUNCTION_15	IF_2
0x4000429	        0x4883c408	                              add rsp, 8	       259	ax-general.c	FUNCTION_15
0x400042d	            0x89da	                            mov edx, ebx	       166	ax-general.c	FUNCTION_10	CALL_1
0x400042f	          0x4c89e7	                            mov rdi, r12	       166	ax-general.c	FUNCTION_10	CALL_1
0x4000432	              0x5b	                                 pop rbx	       259	ax-general.c	FUNCTION_15
0x4000433	              0x5d	                                 pop rbp	       259	ax-general.c	FUNCTION_15
0x4000434	            0x415c	                                 pop r12	       259	ax-general.c	FUNCTION_15
0x4000436	            0x415d	                                 pop r13	       259	ax-general.c	FUNCTION_15
0x4000438	      0xbe16000000	                           mov esi, 0x16	       166	ax-general.c	FUNCTION_10	CALL_1
0x400043d	      0xe97efcffff	jmp sym.generic_ext_agent_expr__agent_op_int	       166	ax-general.c	FUNCTION_10	CALL_1
0x4000442	    0x660f1f440000	                    nop word [rax + rax]	       166	ax-general.c	FUNCTION_10	CALL_1
0x4000448	        0x4883c408	                              add rsp, 8	       259	ax-general.c	FUNCTION_15
0x400044c	              0x5b	                                 pop rbx	       259	ax-general.c	FUNCTION_15
0x400044d	              0x5d	                                 pop rbp	       259	ax-general.c	FUNCTION_15
0x400044e	            0x415c	                                 pop r12	       259	ax-general.c	FUNCTION_15
0x4000450	            0x415d	                                 pop r13	       259	ax-general.c	FUNCTION_15
0x4000452	              0xc3	                                     ret	       259	ax-general.c	FUNCTION_15
ax_label	SWITCH,0:WHILE,0:CALL,2:FOR,0:IF,1:DO,0:ELSE,0:functions,0	16
0x4000360	    0x81fafeff0000	                         cmp edx, 0xfffe	       219	ax-general.c	FUNCTION_14	IF_1
0x4000366	            0x7716	                            ja 0x400037e	       219	ax-general.c	FUNCTION_14	IF_1
0x4000368	          0x488b07	                    mov rax, qword [rdi]	       222	ax-general.c	FUNCTION_14
0x400036b	            0x89d1	                            mov ecx, edx	       222	ax-general.c	FUNCTION_14
0x400036d	          0x4863f6	                         movsxd rsi, esi	       222	ax-general.c	FUNCTION_14
0x4000370	          0xc1f908	                              sar ecx, 8	       222	ax-general.c	FUNCTION_14
0x4000373	          0x880c30	                mov byte [rax + rsi], cl	       222	ax-general.c	FUNCTION_14
0x4000376	          0x488b07	                    mov rax, qword [rdi]	       223	ax-general.c	FUNCTION_14
0x4000379	        0x88543001	            mov byte [rax + rsi + 1], dl	       223	ax-general.c	FUNCTION_14
0x400037d	              0xc3	                                     ret	       223	ax-general.c	FUNCTION_14
0x400037e	              0x50	                                push rax	       216	ax-general.c	FUNCTION_14
0x400037f	      0xbf00000000	                              mov edi, 0	       220	ax-general.c	FUNCTION_14	CALL_2
0x4000384	      0xe800000000	                          call 0x4000389	       220	ax-general.c	FUNCTION_14	CALL_2
0x4000389	          0x4889c7	                            mov rdi, rax	       220	ax-general.c	FUNCTION_14	CALL_2
0x400038c	            0x31c0	                            xor eax, eax	       220	ax-general.c	FUNCTION_14	CALL_2
0x400038e	      0xe800000000	                          call 0x4000393	       220	ax-general.c	FUNCTION_14	CALL_2
ax_const_d	SWITCH,0:WHILE,0:CALL,2:FOR,0:IF,0:DO,0:ELSE,0:functions,0	6
0x4000460	      0xbf00000000	                              mov edi, 0	       266	ax-general.c	FUNCTION_16	CALL_2
0x4000465	        0x4883ec08	                              sub rsp, 8	       264	ax-general.c	FUNCTION_16
0x4000469	      0xe800000000	                          call 0x400046e	       266	ax-general.c	FUNCTION_16	CALL_2
0x400046e	          0x4889c7	                            mov rdi, rax	       267	ax-general.c	FUNCTION_16
0x4000471	            0x31c0	                            xor eax, eax	       267	ax-general.c	FUNCTION_16
0x4000473	      0xe800000000	                          call 0x4000478	       267	ax-general.c	FUNCTION_16
ax_reqs	SWITCH,0:WHILE,0:CALL,8:FOR,2:IF,15:DO,0:ELSE,0:functions,0	216
0x4000a40	              0x55	                                push rbp	       469	ax-general.c	FUNCTION_22
0x4000a41	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_38	CALL_6
0x4000a43	          0x4889e5	                            mov rbp, rsp	       469	ax-general.c	FUNCTION_22
0x4000a46	            0x4157	                                push r15	       469	ax-general.c	FUNCTION_22
0x4000a48	            0x4156	                                push r14	       469	ax-general.c	FUNCTION_22
0x4000a4a	            0x4155	                                push r13	       469	ax-general.c	FUNCTION_22
0x4000a4c	            0x4154	                                push r12	       469	ax-general.c	FUNCTION_22
0x4000a4e	          0x4989fd	                            mov r13, rdi	       469	ax-general.c	FUNCTION_22
0x4000a51	              0x53	                                push rbx	       469	ax-general.c	FUNCTION_22
0x4000a52	        0x4883ec38	                           sub rsp, 0x38	       469	ax-general.c	FUNCTION_22
0x4000a56	        0x48635f08	            movsxd rbx, dword [rdi + 8] 	       475	ax-general.c	FUNCTION_22	CALL_1
0x4000a5a	    0x64488b042528	                mov rax, qword fs:[0x28]	       469	ax-general.c	FUNCTION_22
0x4000a63	        0x488945c8	             mov qword [rbp - 0x38], rax	       469	ax-general.c	FUNCTION_22
0x4000a67	            0x31c0	                            xor eax, eax	       469	ax-general.c	FUNCTION_22
0x4000a69	        0x488d431e	                   lea rax, [rbx + 0x1e]	       475	ax-general.c	FUNCTION_22	CALL_1
0x4000a6d	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_38	CALL_6
0x4000a70	        0x48c1e804	                              shr rax, 4	       475	ax-general.c	FUNCTION_22	CALL_1
0x4000a74	        0x48c1e004	                              shl rax, 4	       475	ax-general.c	FUNCTION_22	CALL_1
0x4000a78	          0x4829c4	                            sub rsp, rax	       475	ax-general.c	FUNCTION_22	CALL_1
0x4000a7b	      0x488d4c240f	                    lea rcx, [rsp + 0xf]	       475	ax-general.c	FUNCTION_22	CALL_1
0x4000a80	          0x4829c4	                            sub rsp, rax	       479	ax-general.c	FUNCTION_22	CALL_2
0x4000a83	    0x488d049d1e00	                 lea rax, [rbx*4 + 0x1e]	       484	ax-general.c	FUNCTION_22	CALL_3
0x4000a8b	      0x4c8d4c240f	                     lea r9, [rsp + 0xf]	       479	ax-general.c	FUNCTION_22	CALL_2
0x4000a90	        0x4883e0f0	             and rax, 0xfffffffffffffff0	       484	ax-general.c	FUNCTION_22	CALL_3
0x4000a94	        0x4883e1f0	             and rcx, 0xfffffffffffffff0	       475	ax-general.c	FUNCTION_22	CALL_1
0x4000a98	          0x4829c4	                            sub rsp, rax	       484	ax-general.c	FUNCTION_22	CALL_3
0x4000a9b	        0x4983e1f0	              and r9, 0xfffffffffffffff0	       479	ax-general.c	FUNCTION_22	CALL_2
0x4000a9f	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_38	CALL_6
0x4000aa2	      0x4c8d44240f	                     lea r8, [rsp + 0xf]	       484	ax-general.c	FUNCTION_22	CALL_3
0x4000aa7	          0x4d89ce	                             mov r14, r9	       479	ax-general.c	FUNCTION_22	CALL_2
0x4000aaa	        0x4c894db8	              mov qword [rbp - 0x48], r9	       479	ax-general.c	FUNCTION_22	CALL_2
0x4000aae	        0x48894db0	             mov qword [rbp - 0x50], rcx	        90	string3.h	FUNCTION_38	CALL_6
0x4000ab2	        0x4983e0f0	              and r8, 0xfffffffffffffff0	       484	ax-general.c	FUNCTION_22	CALL_3
0x4000ab6	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       484	ax-general.c	FUNCTION_22	CALL_3
0x4000aba	      0xe800000000	                          call 0x4000abf	        90	string3.h	FUNCTION_38	CALL_6
0x4000abf	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_38	CALL_6
0x4000ac1	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_38	CALL_6
0x4000ac4	          0x4c89f7	                            mov rdi, r14	        90	string3.h	FUNCTION_38	CALL_6
0x4000ac7	      0xe800000000	                          call 0x4000acc	        90	string3.h	FUNCTION_38	CALL_6
0x4000acc	            0x85db	                           test ebx, ebx	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000ace	    0x41c7452c0000	               mov dword [r13 + 0x2c], 0	       492	ax-general.c	FUNCTION_22
0x4000ad6	    0x41c745280000	               mov dword [r13 + 0x28], 0	       492	ax-general.c	FUNCTION_22
0x4000ade	    0x41c745200000	               mov dword [r13 + 0x20], 0	       493	ax-general.c	FUNCTION_22
0x4000ae6	    0x41c745300000	               mov dword [r13 + 0x30], 0	       494	ax-general.c	FUNCTION_22
0x4000aee	     0xf8eb8020000	                           jle 0x4000dac	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000af4	        0x4d8b5500	                    mov r10, qword [r13]	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000af8	          0x4989df	                            mov r15, rbx	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000afb	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000aff	        0x4c8b45a8	              mov r8, qword [rbp - 0x58]	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000b03	        0x410fb61a	                   movzx ebx, byte [r10]	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000b07	          0x80fb35	                            cmp bl, 0x35	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000b0a	     0xf8718020000	                            ja 0x4000d28	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000b10	        0x488d145b	                  lea rdx, [rbx + rbx*2]	       504	ax-general.c	FUNCTION_22	FOR_1
0x4000b14	        0x48c1e203	                              shl rdx, 3	       504	ax-general.c	FUNCTION_22	FOR_1
0x4000b18	    0x4883ba000000	                      cmp qword [rdx], 0	       506	ax-general.c	FUNCTION_22	FOR_1	IF_2
0x4000b20	    0x488d82000000	                          lea rax, [rdx]	       504	ax-general.c	FUNCTION_22	FOR_1
0x4000b27	     0xf84fb010000	                            je 0x4000d28	       506	ax-general.c	FUNCTION_22	FOR_1	IF_2
0x4000b2d	        0x443b7808	               cmp r15d, dword [rax + 8]	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b31	     0xf8e29020000	                           jle 0x4000d60	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b37	      0xbe01000000	                              mov esi, 1	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b3c	            0x31d2	                            xor edx, edx	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b3e	          0x4531e4	                          xor r12d, r12d	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b41	          0x4531f6	                          xor r14d, r14d	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b44	      0xe9c4000000	                           jmp 0x4000c0d	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b49	     0xf1f80000000	                         nop dword [rax]	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000b50	          0x4989c3	                            mov r11, rax	       544	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000b53	    0x4981eb000000	                              sub r11, 0	       544	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000b5a	        0x4983fb17	                           cmp r11, 0x17	       544	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000b5e	     0xf861d010000	                           jbe 0x4000c81	       544	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000b64	    0x482d00000000	                              sub rax, 0	       584	ax-general.c	FUNCTION_22	FOR_1	IF_14
0x4000b6a	        0x4883f817	                           cmp rax, 0x17	       584	ax-general.c	FUNCTION_22	FOR_1	IF_14
0x4000b6e	            0x773e	                            ja 0x4000bae	       584	ax-general.c	FUNCTION_22	FOR_1	IF_14
0x4000b70	        0x418d4603	                      lea eax, [r14 + 3]	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b74	          0x4439f8	                           cmp eax, r15d	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b77	     0xf8f34020000	                            jg 0x4000db1	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b7d	        0x418d4602	                      lea eax, [r14 + 2]	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b81	          0x4863f6	                         movsxd rsi, esi	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b84	      0x410fb63432	             movzx esi, byte [r10 + rsi]	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b89	            0x4898	                                    cdqe	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b8b	      0x410fb60402	             movzx eax, byte [r10 + rax]	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b90	        0x48c1e608	                              shl rsi, 8	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b94	             0x9c6	                             or esi, eax	       105	ax-general.c	FUNCTION_5	IF_1
0x4000b96	          0x4c89ef	                            mov rdi, r13	       588	ax-general.c	FUNCTION_22	FOR_1	IF_14	CALL_8
0x4000b99	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       588	ax-general.c	FUNCTION_22	FOR_1	IF_14	CALL_8
0x4000b9d	        0x48894db0	             mov qword [rbp - 0x50], rcx	       588	ax-general.c	FUNCTION_22	FOR_1	IF_14	CALL_8
0x4000ba1	      0xe800000000	                          call 0x4000ba6	       588	ax-general.c	FUNCTION_22	FOR_1	IF_14	CALL_8
0x4000ba6	        0x4c8b45a8	              mov r8, qword [rbp - 0x58]	       588	ax-general.c	FUNCTION_22	FOR_1	IF_14	CALL_8
0x4000baa	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       588	ax-general.c	FUNCTION_22	FOR_1	IF_14	CALL_8
0x4000bae	        0x488d045b	                  lea rax, [rbx + rbx*2]	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000bb2	        0x458b7d08	               mov r15d, dword [r13 + 8]	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000bb6	    0x8b04c5000000	                  mov eax, dword [rax*8]	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000bbd	      0x458d740601	               lea r14d, [r14 + rax + 1]	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000bc2	          0x4539f7	                          cmp r15d, r14d	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000bc5	     0xf8ea5010000	                           jle 0x4000d70	       496	ax-general.c	FUNCTION_22	FOR_1
0x4000bcb	        0x4d8b5500	                    mov r10, qword [r13]	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000bcf	          0x4963d6	                        movsxd rdx, r14d	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000bd2	      0x410fb61c12	             movzx ebx, byte [r10 + rdx]	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000bd7	          0x80fb35	                            cmp bl, 0x35	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000bda	     0xf8748010000	                            ja 0x4000d28	       498	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000be0	        0x488d345b	                  lea rsi, [rbx + rbx*2]	       504	ax-general.c	FUNCTION_22	FOR_1
0x4000be4	    0x48833cf50000	                    cmp qword [rsi*8], 0	       506	ax-general.c	FUNCTION_22	FOR_1	IF_2
0x4000bed	    0x488d04f50000	                        lea rax, [rsi*8]	       504	ax-general.c	FUNCTION_22	FOR_1
0x4000bf5	     0xf842d010000	                            je 0x4000d28	       506	ax-general.c	FUNCTION_22	FOR_1	IF_2
0x4000bfb	          0x8b7808	                mov edi, dword [rax + 8]	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000bfe	        0x418d7601	                      lea esi, [r14 + 1]	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000c02	             0x1f7	                            add edi, esi	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000c04	          0x4139ff	                           cmp r15d, edi	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000c07	     0xf8c53010000	                            jl 0x4000d60	       512	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000c0d	        0x803c1100	                 cmp byte [rcx + rdx], 0	       521	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000c11	        0x498d3c90	                   lea rdi, [r8 + rdx*4]	       521	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000c15	            0x7409	                            je 0x4000c20	       521	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000c17	          0x443927	                   cmp dword [rdi], r12d	       521	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000c1a	     0xf85f9000000	                           jne 0x4000d19	       521	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000c20	          0x448927	                   mov dword [rdi], r12d	       528	ax-general.c	FUNCTION_22	FOR_1
0x4000c23	        0x488d3c5b	                  lea rdi, [rbx + rbx*2]	       530	ax-general.c	FUNCTION_22	FOR_1
0x4000c27	        0x4c8b4db8	              mov r9, qword [rbp - 0x48]	       527	ax-general.c	FUNCTION_22	FOR_1
0x4000c2b	    0x442b24fd0000	                 sub r12d, dword [rdi*8]	       530	ax-general.c	FUNCTION_22	FOR_1
0x4000c33	        0x453b652c	           cmp r12d, dword [r13 + 0x2c] 	       531	ax-general.c	FUNCTION_22	FOR_1	IF_5
0x4000c37	      0x41c6041101	                  mov byte [r9 + rdx], 1	       527	ax-general.c	FUNCTION_22	FOR_1
0x4000c3c	            0x7d04	                           jge 0x4000c42	       531	ax-general.c	FUNCTION_22	FOR_1	IF_5
0x4000c3e	        0x4589652c	            mov dword [r13 + 0x2c], r12d	       532	ax-general.c	FUNCTION_22	FOR_1	IF_5
0x4000c42	        0x488d3c5b	                  lea rdi, [rbx + rbx*2]	       533	ax-general.c	FUNCTION_22	FOR_1
0x4000c46	    0x440324fd0000	                 add r12d, dword [rdi*8]	       533	ax-general.c	FUNCTION_22	FOR_1
0x4000c4e	        0x453b6528	           cmp r12d, dword [r13 + 0x28] 	       534	ax-general.c	FUNCTION_22	FOR_1	IF_6
0x4000c52	            0x7e04	                           jle 0x4000c58	       534	ax-general.c	FUNCTION_22	FOR_1	IF_6
0x4000c54	        0x45896528	            mov dword [r13 + 0x28], r12d	       535	ax-general.c	FUNCTION_22	FOR_1	IF_6
0x4000c58	        0x488d3c5b	                  lea rdi, [rbx + rbx*2]	       537	ax-general.c	FUNCTION_22	FOR_1	IF_7
0x4000c5c	    0x8b3cfd000000	                  mov edi, dword [rdi*8]	       537	ax-general.c	FUNCTION_22	FOR_1	IF_7
0x4000c63	        0x413b7d30	            cmp edi, dword [r13 + 0x30] 	       537	ax-general.c	FUNCTION_22	FOR_1	IF_7
0x4000c67	            0x7e04	                           jle 0x4000c6d	       537	ax-general.c	FUNCTION_22	FOR_1	IF_7
0x4000c69	        0x41897d30	             mov dword [r13 + 0x30], edi	       538	ax-general.c	FUNCTION_22	FOR_1	IF_7
0x4000c6d	          0x4889c7	                            mov rdi, rax	       543	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000c70	    0x4881ef000000	                              sub rdi, 0	       543	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000c77	        0x4883ff17	                           cmp rdi, 0x17	       543	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000c7b	     0xf87cffeffff	                            ja 0x4000b50	       543	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000c81	        0x458d4e03	                      lea r9d, [r14 + 3]	       105	ax-general.c	FUNCTION_5	IF_1
0x4000c85	          0x4539f9	                           cmp r9d, r15d	       105	ax-general.c	FUNCTION_5	IF_1
0x4000c88	        0x44894db0	             mov dword [rbp - 0x50], r9d	       105	ax-general.c	FUNCTION_5	IF_1
0x4000c8c	     0xf8f1f010000	                            jg 0x4000db1	       105	ax-general.c	FUNCTION_5	IF_1
0x4000c92	          0x4863f6	                         movsxd rsi, esi	       109	ax-general.c	FUNCTION_5	FOR_1
0x4000c95	      0x410fb63432	             movzx esi, byte [r10 + rsi]	       546	ax-general.c	FUNCTION_22	FOR_1	IF_8	CALL_6
0x4000c9a	        0x48c1e608	                              shl rsi, 8	       546	ax-general.c	FUNCTION_22	FOR_1	IF_8	CALL_6
0x4000c9e	          0x4989f3	                            mov r11, rsi	       546	ax-general.c	FUNCTION_22	FOR_1	IF_8	CALL_6
0x4000ca1	        0x418d7602	                      lea esi, [r14 + 2]	       109	ax-general.c	FUNCTION_5	FOR_1
0x4000ca5	          0x4863f6	                         movsxd rsi, esi	       109	ax-general.c	FUNCTION_5	FOR_1
0x4000ca8	      0x410fb63432	             movzx esi, byte [r10 + rsi]	       546	ax-general.c	FUNCTION_22	FOR_1	IF_8	CALL_6
0x4000cad	          0x4c09de	                             or rsi, r11	       546	ax-general.c	FUNCTION_22	FOR_1	IF_8	CALL_6
0x4000cb0	          0x4439fe	                           cmp esi, r15d	       547	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_9
0x4000cb3	     0xf8d97000000	                           jge 0x4000d50	       547	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_9
0x4000cb9	          0x4c63d6	                         movsxd r10, esi	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000cbc	        0x4e8d1c11	                    lea r11, [rcx + r10]	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000cc0	        0x41803b00	                       cmp byte [r11], 0	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000cc4	            0x754a	                           jne 0x4000d10	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000cc6	        0x4c8b4db8	              mov r9, qword [rbp - 0x48]	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000cca	      0x43803c1100	                  cmp byte [r9 + r10], 0	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000ccf	            0x753f	                           jne 0x4000d10	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000cd1	        0x4f8d1490	                   lea r10, [r8 + r10*4]	       555	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10
0x4000cd5	        0x4883ff17	                           cmp rdi, 0x17	       571	ax-general.c	FUNCTION_22	FOR_1	IF_12
0x4000cd9	        0x41c60301	                       mov byte [r11], 1	       565	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000cdd	          0x458922	                   mov dword [r10], r12d	       566	ax-general.c	FUNCTION_22	FOR_1	IF_8
0x4000ce0	            0x7719	                            ja 0x4000cfb	       571	ax-general.c	FUNCTION_22	FOR_1	IF_12
0x4000ce2	        0x44397db0	           cmp dword [rbp - 0x50], r15d 	       572	ax-general.c	FUNCTION_22	FOR_1	IF_12
0x4000ce6	            0x7d13	                           jge 0x4000cfb	       572	ax-general.c	FUNCTION_22	FOR_1	IF_12
0x4000ce8	      0x807c110300	             cmp byte [rcx + rdx + 3], 0	       574	ax-general.c	FUNCTION_22	FOR_1	IF_12	IF_13
0x4000ced	        0x488d7a03	                      lea rdi, [rdx + 3]	       574	ax-general.c	FUNCTION_22	FOR_1	IF_12	IF_13
0x4000cf1	     0xf84a8000000	                            je 0x4000d9f	       574	ax-general.c	FUNCTION_22	FOR_1	IF_12	IF_13
0x4000cf7	        0x458b24b8	            mov r12d, dword [r8 + rdi*4]	       580	ax-general.c	FUNCTION_22	FOR_1	IF_12
0x4000cfb	    0x482d00000000	                              sub rax, 0	       584	ax-general.c	FUNCTION_22	FOR_1	IF_14
0x4000d01	        0x4883f817	                           cmp rax, 0x17	       584	ax-general.c	FUNCTION_22	FOR_1	IF_14
0x4000d05	     0xf868bfeffff	                           jbe 0x4000b96	       584	ax-general.c	FUNCTION_22	FOR_1	IF_14
0x4000d0b	      0xe99efeffff	                           jmp 0x4000bae	       584	ax-general.c	FUNCTION_22	FOR_1	IF_14
0x4000d10	        0x4f8d1490	                   lea r10, [r8 + r10*4]	       557	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10	IF_11
0x4000d14	          0x453b22	                   cmp r12d, dword [r10]	       557	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10	IF_11
0x4000d17	            0x74bc	                            je 0x4000cd5	       557	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_10	IF_11
0x4000d19	    0x41c745200400	               mov dword [r13 + 0x20], 4	       523	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000d21	            0xeb0d	                           jmp 0x4000d30	       524	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000d23	       0xf1f440000	                   nop dword [rax + rax]	       524	ax-general.c	FUNCTION_22	FOR_1	IF_4
0x4000d28	    0x41c745200100	               mov dword [r13 + 0x20], 1	       500	ax-general.c	FUNCTION_22	FOR_1	IF_1
0x4000d30	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       601	ax-general.c	FUNCTION_22
0x4000d34	    0x644833042528	                xor rax, qword fs:[0x28]	       601	ax-general.c	FUNCTION_22
0x4000d3d	            0x7577	                           jne 0x4000db6	       601	ax-general.c	FUNCTION_22
0x4000d3f	        0x488d65d8	                   lea rsp, [rbp - 0x28]	       601	ax-general.c	FUNCTION_22
0x4000d43	              0x5b	                                 pop rbx	       601	ax-general.c	FUNCTION_22
0x4000d44	            0x415c	                                 pop r12	       601	ax-general.c	FUNCTION_22
0x4000d46	            0x415d	                                 pop r13	       601	ax-general.c	FUNCTION_22
0x4000d48	            0x415e	                                 pop r14	       601	ax-general.c	FUNCTION_22
0x4000d4a	            0x415f	                                 pop r15	       601	ax-general.c	FUNCTION_22
0x4000d4c	              0x5d	                                 pop rbp	       601	ax-general.c	FUNCTION_22
0x4000d4d	              0xc3	                                     ret	       601	ax-general.c	FUNCTION_22
0x4000d4e	            0x6690	                                     nop	       601	ax-general.c	FUNCTION_22
0x4000d50	    0x41c745200300	               mov dword [r13 + 0x20], 3	       549	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_9
0x4000d58	            0xebd6	                           jmp 0x4000d30	       550	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_9
0x4000d5a	    0x660f1f440000	                    nop word [rax + rax]	       550	ax-general.c	FUNCTION_22	FOR_1	IF_8	IF_9
0x4000d60	    0x41c745200200	               mov dword [r13 + 0x20], 2	       514	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000d68	            0xebc6	                           jmp 0x4000d30	       515	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000d6a	    0x660f1f440000	                    nop word [rax + rax]	       515	ax-general.c	FUNCTION_22	FOR_1	IF_3
0x4000d70	          0x4585ff	                         test r15d, r15d	       593	ax-general.c	FUNCTION_22	FOR_2
0x4000d73	            0x7e24	                           jle 0x4000d99	       593	ax-general.c	FUNCTION_22	FOR_2
0x4000d75	            0x31c0	                            xor eax, eax	       593	ax-general.c	FUNCTION_22	FOR_2
0x4000d77	    0x660f1f840000	                    nop word [rax + rax]	       593	ax-general.c	FUNCTION_22	FOR_2
0x4000d80	        0x803c0100	                 cmp byte [rcx + rax], 0	       594	ax-general.c	FUNCTION_22	FOR_2	IF_15
0x4000d84	            0x740a	                            je 0x4000d90	       594	ax-general.c	FUNCTION_22	FOR_2	IF_15
0x4000d86	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       594	ax-general.c	FUNCTION_22	FOR_2	IF_15
0x4000d8a	        0x803c0200	                 cmp byte [rdx + rax], 0	       594	ax-general.c	FUNCTION_22	FOR_2	IF_15
0x4000d8e	            0x74c0	                            je 0x4000d50	       594	ax-general.c	FUNCTION_22	FOR_2	IF_15
0x4000d90	        0x4883c001	                              add rax, 1	       594	ax-general.c	FUNCTION_22	FOR_2	IF_15
0x4000d94	          0x4139c7	                           cmp r15d, eax	       593	ax-general.c	FUNCTION_22	FOR_2
0x4000d97	            0x7fe7	                            jg 0x4000d80	       593	ax-general.c	FUNCTION_22	FOR_2
0x4000d99	        0x45896524	            mov dword [r13 + 0x24], r12d	       600	ax-general.c	FUNCTION_22
0x4000d9d	            0xeb91	                           jmp 0x4000d30	       600	ax-general.c	FUNCTION_22
0x4000d9f	    0x41c745200500	               mov dword [r13 + 0x20], 5	       576	ax-general.c	FUNCTION_22	FOR_1	IF_12	IF_13
0x4000da7	      0xe984ffffff	                           jmp 0x4000d30	       577	ax-general.c	FUNCTION_22	FOR_1	IF_12	IF_13
0x4000dac	          0x4531e4	                          xor r12d, r12d	       492	ax-general.c	FUNCTION_22
0x4000daf	            0xebe8	                           jmp 0x4000d99	       492	ax-general.c	FUNCTION_22
0x4000db1	      0xe86af3ffff	call sym.read_const_agent_expr__int_int__clone.isra.2__clone.part.3	       492	ax-general.c	FUNCTION_22
0x4000db6	      0xe800000000	                  call section_end..text	       601	ax-general.c	FUNCTION_22
ax_print	SWITCH,0:WHILE,0:CALL,22:FOR,2:IF,5:DO,0:ELSE,1:functions,0	184
0x4000690	            0x4157	                                push r15	       364	ax-general.c	FUNCTION_20
0x4000692	            0x4156	                                push r14	       364	ax-general.c	FUNCTION_20
0x4000694	            0x4155	                                push r13	       364	ax-general.c	FUNCTION_20
0x4000696	            0x4154	                                push r12	       364	ax-general.c	FUNCTION_20
0x4000698	          0x4989fd	                            mov r13, rdi	       364	ax-general.c	FUNCTION_20
0x400069b	              0x55	                                push rbp	       364	ax-general.c	FUNCTION_20
0x400069c	              0x53	                                push rbx	       364	ax-general.c	FUNCTION_20
0x400069d	          0x4889f5	                            mov rbp, rsi	       364	ax-general.c	FUNCTION_20
0x40006a0	        0x4883ec18	                           sub rsp, 0x18	       364	ax-general.c	FUNCTION_20
0x40006a4	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006a8	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006ac	      0xe800000000	                          call 0x40006b1	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006b1	      0xbf00000000	                              mov edi, 0	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006b6	          0x4889c3	                            mov rbx, rax	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006b9	      0xe800000000	                          call 0x40006be	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006be	          0x4889da	                            mov rdx, rbx	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006c1	          0x4889c6	                            mov rsi, rax	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006c4	          0x4c89ef	                            mov rdi, r13	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006c7	            0x31c0	                            xor eax, eax	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006c9	            0x31db	                            xor ebx, ebx	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006cb	      0xe800000000	                          call 0x40006d0	       367	ax-general.c	FUNCTION_20	CALL_3
0x40006d0	      0xbf00000000	                              mov edi, 0	       368	ax-general.c	FUNCTION_20	CALL_5
0x40006d5	      0xe800000000	                          call 0x40006da	       368	ax-general.c	FUNCTION_20	CALL_5
0x40006da	          0x4c89ef	                            mov rdi, r13	       368	ax-general.c	FUNCTION_20	CALL_5
0x40006dd	          0x4889c6	                            mov rsi, rax	       368	ax-general.c	FUNCTION_20	CALL_5
0x40006e0	            0x31c0	                            xor eax, eax	       368	ax-general.c	FUNCTION_20	CALL_5
0x40006e2	      0xe800000000	                          call 0x40006e7	       368	ax-general.c	FUNCTION_20	CALL_5
0x40006e7	          0x8b5534	            mov edx, dword [rbp + 0x34] 	       369	ax-general.c	FUNCTION_20	FOR_1
0x40006ea	            0x85d2	                           test edx, edx	       369	ax-general.c	FUNCTION_20	FOR_1
0x40006ec	            0x7e31	                           jle 0x400071f	       369	ax-general.c	FUNCTION_20	FOR_1
0x40006ee	            0x6690	                                     nop	       369	ax-general.c	FUNCTION_20	FOR_1
0x40006f0	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       370	ax-general.c	FUNCTION_20	CALL_7
0x40006f4	      0xbf00000000	                              mov edi, 0	       370	ax-general.c	FUNCTION_20	CALL_7
0x40006f9	      0x440fb62418	            movzx r12d, byte [rax + rbx]	       370	ax-general.c	FUNCTION_20	CALL_7
0x40006fe	      0xe800000000	                          call 0x4000703	       370	ax-general.c	FUNCTION_20	CALL_7
0x4000703	          0x4c89ef	                            mov rdi, r13	       370	ax-general.c	FUNCTION_20	CALL_7
0x4000706	          0x4889c6	                            mov rsi, rax	       370	ax-general.c	FUNCTION_20	CALL_7
0x4000709	            0x31c0	                            xor eax, eax	       370	ax-general.c	FUNCTION_20	CALL_7
0x400070b	          0x4489e2	                           mov edx, r12d	       370	ax-general.c	FUNCTION_20	CALL_7
0x400070e	      0xe800000000	                          call 0x4000713	       370	ax-general.c	FUNCTION_20	CALL_7
0x4000713	          0x8d4301	                      lea eax, [rbx + 1]	       370	ax-general.c	FUNCTION_20	CALL_7
0x4000716	        0x4883c301	                              add rbx, 1	       370	ax-general.c	FUNCTION_20	CALL_7
0x400071a	          0x394534	            cmp dword [rbp + 0x34], eax 	       369	ax-general.c	FUNCTION_20	FOR_1
0x400071d	            0x7fd1	                            jg 0x40006f0	       369	ax-general.c	FUNCTION_20	FOR_1
0x400071f	      0xbf00000000	                              mov edi, 0	       371	ax-general.c	FUNCTION_20	CALL_9
0x4000724	            0x31db	                            xor ebx, ebx	       379	ax-general.c	FUNCTION_20	FOR_2
0x4000726	      0xe800000000	                          call 0x400072b	       371	ax-general.c	FUNCTION_20	CALL_9
0x400072b	          0x4c89ef	                            mov rdi, r13	       371	ax-general.c	FUNCTION_20	CALL_9
0x400072e	          0x4889c6	                            mov rsi, rax	       371	ax-general.c	FUNCTION_20	CALL_9
0x4000731	            0x31c0	                            xor eax, eax	       371	ax-general.c	FUNCTION_20	CALL_9
0x4000733	      0xe800000000	                          call 0x4000738	       371	ax-general.c	FUNCTION_20	CALL_9
0x4000738	     0xf1f84000000	                   nop dword [rax + rax]	       371	ax-general.c	FUNCTION_20	CALL_9
0x4000740	          0x8b5508	                mov edx, dword [rbp + 8]	       379	ax-general.c	FUNCTION_20	FOR_2
0x4000743	            0x39d3	                            cmp ebx, edx	       379	ax-general.c	FUNCTION_20	FOR_2
0x4000745	     0xf8d01010000	                           jge 0x400084c	       379	ax-general.c	FUNCTION_20	FOR_2
0x400074b	        0x488b4d00	                    mov rcx, qword [rbp]	       381	ax-general.c	FUNCTION_20	FOR_2
0x400074f	          0x4863c3	                         movsxd rax, ebx	       381	ax-general.c	FUNCTION_20	FOR_2
0x4000752	      0x440fb63c01	            movzx r15d, byte [rcx + rax]	       381	ax-general.c	FUNCTION_20	FOR_2
0x4000757	        0x4180ff34	                          cmp r15b, 0x34	       383	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x400075b	        0x450fb6f7	                        movzx r14d, r15b	       383	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x400075f	     0xf87fb000000	                            ja 0x4000860	       383	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000765	        0x450fb6e7	                        movzx r12d, r15b	       384	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000769	        0x4b8d0464	                  lea rax, [r12 + r12*2]	       384	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x400076d	          0x4d89e6	                            mov r14, r12	       384	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000770	    0x488b0cc50000	                  mov rcx, qword [rax*8]	       384	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000778	    0x4c8d04c50000	                         lea r8, [rax*8]	       384	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000780	          0x4885c9	                           test rcx, rcx	       384	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000783	     0xf84d7000000	                            je 0x4000860	       384	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000789	        0x418b4008	                 mov eax, dword [r8 + 8]	       390	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x400078d	        0x448d7301	                     lea r14d, [rbx + 1]	       390	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x4000791	          0x4401f0	                           add eax, r14d	       390	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x4000794	            0x39c2	                            cmp edx, eax	       390	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x4000796	     0xf8c53010000	                            jl 0x40008ef	       390	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x400079c	            0x31c0	                            xor eax, eax	       397	ax-general.c	FUNCTION_20	FOR_2	CALL_16
0x400079e	            0x89da	                            mov edx, ebx	       397	ax-general.c	FUNCTION_20	FOR_2	CALL_16
0x40007a0	      0xbe00000000	                              mov esi, 0	       397	ax-general.c	FUNCTION_20	FOR_2	CALL_16
0x40007a5	          0x4c89ef	                            mov rdi, r13	       397	ax-general.c	FUNCTION_20	FOR_2	CALL_16
0x40007a8	      0x4c89442408	                 mov qword [rsp + 8], r8	       397	ax-general.c	FUNCTION_20	FOR_2	CALL_16
0x40007ad	      0xe800000000	                          call 0x40007b2	       397	ax-general.c	FUNCTION_20	FOR_2	CALL_16
0x40007b2	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       398	ax-general.c	FUNCTION_20	FOR_2	IF_4
0x40007b7	        0x418b4008	                 mov eax, dword [r8 + 8]	       398	ax-general.c	FUNCTION_20	FOR_2	IF_4
0x40007bb	            0x85c0	                           test eax, eax	       398	ax-general.c	FUNCTION_20	FOR_2	IF_4
0x40007bd	     0xf8ec5000000	                           jle 0x4000888	       398	ax-general.c	FUNCTION_20	FOR_2	IF_4
0x40007c3	          0x4c89ee	                            mov rsi, r13	       400	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_17
0x40007c6	      0xbf00000000	                              mov edi, 0	       400	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_17
0x40007cb	      0xe800000000	                          call 0x40007d0	       400	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_17
0x40007d0	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       402	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_18
0x40007d5	        0x488b5500	                    mov rdx, qword [rbp]	       402	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_18
0x40007d9	        0x418b7008	                 mov esi, dword [r8 + 8]	       402	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_18
0x40007dd	        0x418d0436	                    lea eax, [r14 + rsi]	       105	ax-general.c	FUNCTION_5	IF_1
0x40007e1	          0x394508	                cmp dword [rbp + 8], eax	       105	ax-general.c	FUNCTION_5	IF_1
0x40007e4	     0xf8c36010000	                            jl 0x4000920	       105	ax-general.c	FUNCTION_5	IF_1
0x40007ea	            0x85f6	                           test esi, esi	       108	ax-general.c	FUNCTION_5	FOR_1
0x40007ec	     0xf8ef6000000	                           jle 0x40008e8	       108	ax-general.c	FUNCTION_5	FOR_1
0x40007f2	          0x4d63f6	                        movsxd r14, r14d	       108	ax-general.c	FUNCTION_5	FOR_1
0x40007f5	            0x31c0	                            xor eax, eax	       108	ax-general.c	FUNCTION_5	FOR_1
0x40007f7	            0x31c9	                            xor ecx, ecx	       108	ax-general.c	FUNCTION_5	FOR_1
0x40007f9	          0x4901d6	                            add r14, rdx	       109	ax-general.c	FUNCTION_5	FOR_1
0x40007fc	         0xf1f4000	                         nop dword [rax]	       109	ax-general.c	FUNCTION_5	FOR_1
0x4000800	      0x410fb61406	             movzx edx, byte [r14 + rax]	       109	ax-general.c	FUNCTION_5	FOR_1
0x4000805	        0x48c1e108	                              shl rcx, 8	       109	ax-general.c	FUNCTION_5	FOR_1
0x4000809	        0x4883c001	                              add rax, 1	       109	ax-general.c	FUNCTION_5	FOR_1
0x400080d	          0x4809d1	                             or rcx, rdx	       109	ax-general.c	FUNCTION_5	FOR_1
0x4000810	            0x39c6	                            cmp esi, eax	       108	ax-general.c	FUNCTION_5	FOR_1
0x4000812	            0x7fec	                            jg 0x4000800	       108	ax-general.c	FUNCTION_5	FOR_1
0x4000814	            0x31d2	                            xor edx, edx	       403	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_19
0x4000816	      0xbe64000000	                           mov esi, 0x64	       403	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_19
0x400081b	          0x4c89ef	                            mov rdi, r13	       403	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_19
0x400081e	      0xe800000000	                          call 0x4000823	       403	ax-general.c	FUNCTION_20	FOR_2	IF_4	CALL_19
0x4000823	            0x31c0	                            xor eax, eax	       418	ax-general.c	FUNCTION_20	FOR_2	CALL_22
0x4000825	      0xbe00000000	                              mov esi, 0	       418	ax-general.c	FUNCTION_20	FOR_2	CALL_22
0x400082a	          0x4c89ef	                            mov rdi, r13	       418	ax-general.c	FUNCTION_20	FOR_2	CALL_22
0x400082d	      0xe800000000	                          call 0x4000832	       418	ax-general.c	FUNCTION_20	FOR_2	CALL_22
0x4000832	        0x4b8d0464	                  lea rax, [r12 + r12*2]	       419	ax-general.c	FUNCTION_20	FOR_2
0x4000836	          0x8b5508	                mov edx, dword [rbp + 8]	       379	ax-general.c	FUNCTION_20	FOR_2
0x4000839	    0x8b04c5000000	                  mov eax, dword [rax*8]	       419	ax-general.c	FUNCTION_20	FOR_2
0x4000840	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	       419	ax-general.c	FUNCTION_20	FOR_2
0x4000844	            0x39d3	                            cmp ebx, edx	       379	ax-general.c	FUNCTION_20	FOR_2
0x4000846	     0xf8cfffeffff	                            jl 0x400074b	       379	ax-general.c	FUNCTION_20	FOR_2
0x400084c	        0x4883c418	                           add rsp, 0x18	       421	ax-general.c	FUNCTION_20
0x4000850	              0x5b	                                 pop rbx	       421	ax-general.c	FUNCTION_20
0x4000851	              0x5d	                                 pop rbp	       421	ax-general.c	FUNCTION_20
0x4000852	            0x415c	                                 pop r12	       421	ax-general.c	FUNCTION_20
0x4000854	            0x415d	                                 pop r13	       421	ax-general.c	FUNCTION_20
0x4000856	            0x415e	                                 pop r14	       421	ax-general.c	FUNCTION_20
0x4000858	            0x415f	                                 pop r15	       421	ax-general.c	FUNCTION_20
0x400085a	              0xc3	                                     ret	       421	ax-general.c	FUNCTION_20
0x400085b	       0xf1f440000	                   nop dword [rax + rax]	       421	ax-general.c	FUNCTION_20
0x4000860	      0xbf00000000	                              mov edi, 0	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x4000865	      0xe800000000	                          call 0x400086a	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x400086a	            0x89da	                            mov edx, ebx	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x400086c	          0x4889c6	                            mov rsi, rax	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x400086f	          0x4489f1	                           mov ecx, r14d	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x4000872	          0x4c89ef	                            mov rdi, r13	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x4000875	            0x31c0	                            xor eax, eax	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x4000877	          0x83c301	                              add ebx, 1	       387	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x400087a	      0xe800000000	                          call 0x400087f	       386	ax-general.c	FUNCTION_20	FOR_2	IF_2	CALL_13
0x400087f	      0xe9bcfeffff	                           jmp 0x4000740	       388	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000884	         0xf1f4000	                         nop dword [rax]	       388	ax-general.c	FUNCTION_20	FOR_2	IF_2
0x4000888	        0x4180ff34	                          cmp r15b, 0x34	       406	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x400088c	            0x7595	                           jne 0x4000823	       406	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x400088e	        0x4c8b7d00	                    mov r15, qword [rbp]	       411	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x4000892	          0x4d63f6	                        movsxd r14, r14d	       411	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x4000895	          0x8d4b03	                      lea ecx, [rbx + 3]	       413	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x4000898	      0xbf00000000	                              mov edi, 0	       414	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5	CALL_21
0x400089d	          0x4863c9	                         movsxd rcx, ecx	       413	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008a0	      0x430fb60437	             movzx eax, byte [r15 + r14]	       411	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008a5	        0x448d7304	                     lea r14d, [rbx + 4]	       413	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008a9	        0x89442408	                mov dword [rsp + 8], eax	       411	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008ad	          0x8d4302	                      lea eax, [rbx + 2]	       412	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008b0	      0x410fb61c0f	             movzx ebx, byte [r15 + rcx]	       413	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008b5	            0x4898	                                    cdqe	       412	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008b7	      0x410fb60407	             movzx eax, byte [r15 + rax]	       413	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008bc	          0xc1e008	                              shl eax, 8	       413	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008bf	             0x1c3	                            add ebx, eax	       413	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008c1	      0xe800000000	                          call 0x40008c6	       414	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5	CALL_21
0x40008c6	          0x4963ce	                        movsxd rcx, r14d	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008c9	          0x4889c6	                            mov rsi, rax	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008cc	          0x4c89ef	                            mov rdi, r13	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008cf	        0x498d140f	                    lea rdx, [r15 + rcx]	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008d3	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008d7	            0x31c0	                            xor eax, eax	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008d9	      0x418d5c1eff	                lea ebx, [r14 + rbx - 1]	       416	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008de	      0xe800000000	                          call 0x40008e3	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008e3	      0xe93bffffff	                           jmp 0x4000823	       415	ax-general.c	FUNCTION_20	FOR_2	ELSE_1	IF_5
0x40008e8	            0x31c9	                            xor ecx, ecx	       108	ax-general.c	FUNCTION_5	FOR_1
0x40008ea	      0xe925ffffff	                           jmp 0x4000814	       108	ax-general.c	FUNCTION_5	FOR_1
0x40008ef	      0xbf00000000	                              mov edi, 0	       392	ax-general.c	FUNCTION_20	FOR_2	IF_3	CALL_15
0x40008f4	      0x48894c2408	                mov qword [rsp + 8], rcx	       392	ax-general.c	FUNCTION_20	FOR_2	IF_3	CALL_15
0x40008f9	      0xe800000000	                          call 0x40008fe	       392	ax-general.c	FUNCTION_20	FOR_2	IF_3	CALL_15
0x40008fe	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       393	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x4000903	        0x4883c418	                           add rsp, 0x18	       421	ax-general.c	FUNCTION_20
0x4000907	            0x89da	                            mov edx, ebx	       393	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x4000909	          0x4c89ef	                            mov rdi, r13	       393	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x400090c	          0x4889c6	                            mov rsi, rax	       393	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x400090f	            0x31c0	                            xor eax, eax	       393	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x4000911	              0x5b	                                 pop rbx	       421	ax-general.c	FUNCTION_20
0x4000912	              0x5d	                                 pop rbp	       421	ax-general.c	FUNCTION_20
0x4000913	            0x415c	                                 pop r12	       421	ax-general.c	FUNCTION_20
0x4000915	            0x415d	                                 pop r13	       421	ax-general.c	FUNCTION_20
0x4000917	            0x415e	                                 pop r14	       421	ax-general.c	FUNCTION_20
0x4000919	            0x415f	                                 pop r15	       421	ax-general.c	FUNCTION_20
0x400091b	      0xe900000000	                           jmp 0x4000920	       393	ax-general.c	FUNCTION_20	FOR_2	IF_3
0x4000920	      0xe8fbf7ffff	call sym.read_const_agent_expr__int_int__clone.isra.2__clone.part.3	       393	ax-general.c	FUNCTION_20	FOR_2	IF_3
ax_trace_quick	SWITCH,0:WHILE,0:CALL,3:FOR,0:IF,1:DO,0:ELSE,0:functions,0	28
0x40002b0	              0x55	                                push rbp	       181	ax-general.c	FUNCTION_12
0x40002b1	              0x53	                                push rbx	       181	ax-general.c	FUNCTION_12
0x40002b2	        0x4883ec08	                              sub rsp, 8	       181	ax-general.c	FUNCTION_12
0x40002b6	    0x81feff000000	                           cmp esi, 0xff	       183	ax-general.c	FUNCTION_12	IF_1
0x40002bc	            0x7738	                            ja 0x40002f6	       183	ax-general.c	FUNCTION_12	IF_1
0x40002be	          0x4889fb	                            mov rbx, rdi	       183	ax-general.c	FUNCTION_12	IF_1
0x40002c1	            0x89f5	                            mov ebp, esi	       183	ax-general.c	FUNCTION_12	IF_1
0x40002c3	      0xbe02000000	                              mov esi, 2	       187	ax-general.c	FUNCTION_12	CALL_3
0x40002c8	      0xe873fdffff	      call sym.grow_expr_agent_expr__int	       187	ax-general.c	FUNCTION_12	CALL_3
0x40002cd	        0x48634308	            movsxd rax, dword [rbx + 8] 	       188	ax-general.c	FUNCTION_12
0x40002d1	          0x488b13	                    mov rdx, qword [rbx]	       188	ax-general.c	FUNCTION_12
0x40002d4	          0x8d4801	                      lea ecx, [rax + 1]	       188	ax-general.c	FUNCTION_12
0x40002d7	          0x894b08	                mov dword [rbx + 8], ecx	       188	ax-general.c	FUNCTION_12
0x40002da	        0xc604020d	               mov byte [rdx + rax], 0xd	       188	ax-general.c	FUNCTION_12
0x40002de	        0x48634308	            movsxd rax, dword [rbx + 8] 	       189	ax-general.c	FUNCTION_12
0x40002e2	          0x488b13	                    mov rdx, qword [rbx]	       189	ax-general.c	FUNCTION_12
0x40002e5	          0x8d4801	                      lea ecx, [rax + 1]	       189	ax-general.c	FUNCTION_12
0x40002e8	          0x894b08	                mov dword [rbx + 8], ecx	       189	ax-general.c	FUNCTION_12
0x40002eb	        0x40882c02	               mov byte [rdx + rax], bpl	       189	ax-general.c	FUNCTION_12
0x40002ef	        0x4883c408	                              add rsp, 8	       190	ax-general.c	FUNCTION_12
0x40002f3	              0x5b	                                 pop rbx	       190	ax-general.c	FUNCTION_12
0x40002f4	              0x5d	                                 pop rbp	       190	ax-general.c	FUNCTION_12
0x40002f5	              0xc3	                                     ret	       190	ax-general.c	FUNCTION_12
0x40002f6	      0xbf00000000	                              mov edi, 0	       184	ax-general.c	FUNCTION_12	IF_1	CALL_2
0x40002fb	      0xe800000000	                          call 0x4000300	       184	ax-general.c	FUNCTION_12	IF_1	CALL_2
0x4000300	          0x4889c7	                            mov rdi, rax	       185	ax-general.c	FUNCTION_12	IF_1
0x4000303	            0x31c0	                            xor eax, eax	       185	ax-general.c	FUNCTION_12	IF_1
0x4000305	      0xe800000000	                          call 0x400030a	       185	ax-general.c	FUNCTION_12	IF_1
ax_zero_ext	SWITCH,0:WHILE,0:CALL,1:FOR,0:IF,0:DO,0:ELSE,0:functions,0	3
0x40002a0	            0x89f2	                            mov edx, esi	       173	ax-general.c	FUNCTION_11
0x40002a2	      0xbe2a000000	                           mov esi, 0x2a	       174	ax-general.c	FUNCTION_11	CALL_1
0x40002a7	      0xe914feffff	jmp sym.generic_ext_agent_expr__agent_op_int	       174	ax-general.c	FUNCTION_11	CALL_1
ax_tsv	SWITCH,0:WHILE,0:CALL,3:FOR,0:IF,1:DO,0:ELSE,0:functions,0	34
0x4000560	    0x81faffff0000	                         cmp edx, 0xffff	       310	ax-general.c	FUNCTION_18	IF_1
0x4000566	            0x4154	                                push r12	       308	ax-general.c	FUNCTION_18
0x4000568	              0x55	                                push rbp	       308	ax-general.c	FUNCTION_18
0x4000569	            0x89d5	                            mov ebp, edx	       308	ax-general.c	FUNCTION_18
0x400056b	              0x53	                                push rbx	       308	ax-general.c	FUNCTION_18
0x400056c	            0x7740	                            ja 0x40005ae	       310	ax-general.c	FUNCTION_18	IF_1
0x400056e	          0x4889fb	                            mov rbx, rdi	       310	ax-general.c	FUNCTION_18	IF_1
0x4000571	          0x4189f4	                           mov r12d, esi	       310	ax-general.c	FUNCTION_18	IF_1
0x4000574	      0xbe03000000	                              mov esi, 3	       315	ax-general.c	FUNCTION_18	CALL_3
0x4000579	      0xe8c2faffff	      call sym.grow_expr_agent_expr__int	       315	ax-general.c	FUNCTION_18	CALL_3
0x400057e	        0x48634308	            movsxd rax, dword [rbx + 8] 	       316	ax-general.c	FUNCTION_18
0x4000582	          0x488b13	                    mov rdx, qword [rbx]	       316	ax-general.c	FUNCTION_18
0x4000585	            0x89e9	                            mov ecx, ebp	       317	ax-general.c	FUNCTION_18
0x4000587	          0xc1f908	                              sar ecx, 8	       317	ax-general.c	FUNCTION_18
0x400058a	        0x44882402	              mov byte [rdx + rax], r12b	       316	ax-general.c	FUNCTION_18
0x400058e	        0x48634308	            movsxd rax, dword [rbx + 8] 	       317	ax-general.c	FUNCTION_18
0x4000592	          0x488b13	                    mov rdx, qword [rbx]	       317	ax-general.c	FUNCTION_18
0x4000595	        0x884c0201	            mov byte [rdx + rax + 1], cl	       317	ax-general.c	FUNCTION_18
0x4000599	        0x48634308	            movsxd rax, dword [rbx + 8] 	       318	ax-general.c	FUNCTION_18
0x400059d	          0x488b13	                    mov rdx, qword [rbx]	       318	ax-general.c	FUNCTION_18
0x40005a0	      0x40886c0202	           mov byte [rdx + rax + 2], bpl	       318	ax-general.c	FUNCTION_18
0x40005a5	        0x83430803	                  add dword [rbx + 8], 3	       319	ax-general.c	FUNCTION_18
0x40005a9	              0x5b	                                 pop rbx	       320	ax-general.c	FUNCTION_18
0x40005aa	              0x5d	                                 pop rbp	       320	ax-general.c	FUNCTION_18
0x40005ab	            0x415c	                                 pop r12	       320	ax-general.c	FUNCTION_18
0x40005ad	              0xc3	                                     ret	       320	ax-general.c	FUNCTION_18
0x40005ae	      0xbf00000000	                              mov edi, 0	       312	ax-general.c	FUNCTION_18	IF_1	CALL_2
0x40005b3	      0xe800000000	                          call 0x40005b8	       312	ax-general.c	FUNCTION_18	IF_1	CALL_2
0x40005b8	            0x89e9	                            mov ecx, ebp	       313	ax-general.c	FUNCTION_18	IF_1
0x40005ba	          0x4889c2	                            mov rdx, rax	       313	ax-general.c	FUNCTION_18	IF_1
0x40005bd	      0xbe37010000	                          mov esi, 0x137	       313	ax-general.c	FUNCTION_18	IF_1
0x40005c2	      0xbf00000000	                              mov edi, 0	       313	ax-general.c	FUNCTION_18	IF_1
0x40005c7	            0x31c0	                            xor eax, eax	       313	ax-general.c	FUNCTION_18	IF_1
0x40005c9	      0xe800000000	                          call 0x40005ce	       313	ax-general.c	FUNCTION_18	IF_1
