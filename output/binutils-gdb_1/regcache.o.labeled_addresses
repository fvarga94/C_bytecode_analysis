collect_register	FOR,0:SWITCH,0:CALL,3:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	20
0x40008b0	          0x488b07	                    mov rax, qword [rdi]	       412	regcache.c	FUNCTION_25
0x40008b3	          0x4863f6	                         movsxd rsi, esi	       795	stl_vector.h	FUNCTION_31
0x40008b6	          0x4889d1	                            mov rcx, rdx	       412	regcache.c	FUNCTION_25
0x40008b9	        0x48c1e604	                              shl rsi, 4	       795	stl_vector.h	FUNCTION_31
0x40008bd	        0x48037008	                add rsi, qword [rax + 8]	       795	stl_vector.h	FUNCTION_31
0x40008c1	          0x8b560c	              mov edx, dword [rsi + 0xc]	        53	string3.h	FUNCTION_32	CALL_3
0x40008c4	          0x8b7608	                mov esi, dword [rsi + 8]	        53	string3.h	FUNCTION_32	CALL_3
0x40008c7	          0x8d4207	                      lea eax, [rdx + 7]	        53	string3.h	FUNCTION_32	CALL_3
0x40008ca	            0x85d2	                           test edx, edx	        53	string3.h	FUNCTION_32	CALL_3
0x40008cc	           0xf48d0	                          cmovs edx, eax	        53	string3.h	FUNCTION_32	CALL_3
0x40008cf	          0x8d4607	                      lea eax, [rsi + 7]	        53	string3.h	FUNCTION_32	CALL_3
0x40008d2	          0xc1fa03	                              sar edx, 3	        53	string3.h	FUNCTION_32	CALL_3
0x40008d5	            0x85f6	                           test esi, esi	        53	string3.h	FUNCTION_32	CALL_3
0x40008d7	           0xf48f0	                          cmovs esi, eax	        53	string3.h	FUNCTION_32	CALL_3
0x40008da	          0x4863d2	                         movsxd rdx, edx	        53	string3.h	FUNCTION_32	CALL_3
0x40008dd	          0xc1fe03	                              sar esi, 3	        53	string3.h	FUNCTION_32	CALL_3
0x40008e0	          0x4863f6	                         movsxd rsi, esi	        53	string3.h	FUNCTION_32	CALL_3
0x40008e3	        0x48037710	             add rsi, qword [rdi + 0x10]	        53	string3.h	FUNCTION_32	CALL_3
0x40008e7	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_32	CALL_3
0x40008ea	      0xe900000000	                           jmp 0x40008ef	        53	string3.h	FUNCTION_32	CALL_3
regcache_cpy	FOR,0:SWITCH,0:CALL,6:functions,0:ELSE,0:IF,1:WHILE,0:DO,0	56
0x4000350	              0x55	                                push rbp	       185	regcache.c	FUNCTION_9
0x4000351	              0x53	                                push rbx	       185	regcache.c	FUNCTION_9
0x4000352	        0x4883ec08	                              sub rsp, 8	       185	regcache.c	FUNCTION_9
0x4000356	          0x4885f6	                           test rsi, rsi	       186	regcache.c	FUNCTION_9	CALL_1
0x4000359	            0x7460	                            je 0x40003bb	       186	regcache.c	FUNCTION_9	CALL_1
0x400035b	          0x4885ff	                           test rdi, rdi	       186	regcache.c	FUNCTION_9	CALL_1
0x400035e	          0x4889fd	                            mov rbp, rdi	       186	regcache.c	FUNCTION_9	CALL_1
0x4000361	            0x7458	                            je 0x40003bb	       186	regcache.c	FUNCTION_9	CALL_1
0x4000363	          0x488b06	                    mov rax, qword [rsi]	       187	regcache.c	FUNCTION_9	CALL_2
0x4000366	          0x483b07	                    cmp rax, qword [rdi]	       187	regcache.c	FUNCTION_9	CALL_2
0x4000369	          0x4889f3	                            mov rbx, rsi	       187	regcache.c	FUNCTION_9	CALL_2
0x400036c	     0xf858b000000	                           jne 0x40003fd	       187	regcache.c	FUNCTION_9	CALL_2
0x4000372	          0x4839fe	                            cmp rsi, rdi	       188	regcache.c	FUNCTION_9	CALL_3
0x4000375	            0x7465	                            je 0x40003dc	       188	regcache.c	FUNCTION_9	CALL_3
0x4000377	        0x48635020	         movsxd rdx, dword [rax + 0x20] 	        53	string3.h	FUNCTION_32	CALL_3
0x400037b	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        53	string3.h	FUNCTION_32	CALL_3
0x400037f	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	        53	string3.h	FUNCTION_32	CALL_3
0x4000383	      0xe800000000	                          call 0x4000388	        53	string3.h	FUNCTION_32	CALL_3
0x4000388	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       192	regcache.c	FUNCTION_9	IF_1
0x400038c	          0x4885ff	                           test rdi, rdi	       192	regcache.c	FUNCTION_9	IF_1
0x400038f	            0x741d	                            je 0x40003ae	       192	regcache.c	FUNCTION_9	IF_1
0x4000391	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       192	regcache.c	FUNCTION_9	IF_1
0x4000395	          0x4885f6	                           test rsi, rsi	       192	regcache.c	FUNCTION_9	IF_1
0x4000398	            0x7414	                            je 0x40003ae	       192	regcache.c	FUNCTION_9	IF_1
0x400039a	          0x488b03	                    mov rax, qword [rbx]	       194	regcache.c	FUNCTION_9	CALL_6
0x400039d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        53	string3.h	FUNCTION_32	CALL_3
0x40003a1	        0x482b5008	                sub rdx, qword [rax + 8]	        53	string3.h	FUNCTION_32	CALL_3
0x40003a5	        0x48c1fa04	                              sar rdx, 4	        53	string3.h	FUNCTION_32	CALL_3
0x40003a9	      0xe800000000	                          call 0x40003ae	        53	string3.h	FUNCTION_32	CALL_3
0x40003ae	          0x8b4308	                mov eax, dword [rbx + 8]	       196	regcache.c	FUNCTION_9
0x40003b1	          0x894508	                mov dword [rbp + 8], eax	       196	regcache.c	FUNCTION_9
0x40003b4	        0x4883c408	                              add rsp, 8	       197	regcache.c	FUNCTION_9
0x40003b8	              0x5b	                                 pop rbx	       197	regcache.c	FUNCTION_9
0x40003b9	              0x5d	                                 pop rbp	       197	regcache.c	FUNCTION_9
0x40003ba	              0xc3	                                     ret	       197	regcache.c	FUNCTION_9
0x40003bb	    0x41b800000000	                              mov r8d, 0	       186	regcache.c	FUNCTION_9	CALL_1
0x40003c1	      0xb900000000	                              mov ecx, 0	       186	regcache.c	FUNCTION_9	CALL_1
0x40003c6	      0xba00000000	                              mov edx, 0	       186	regcache.c	FUNCTION_9	CALL_1
0x40003cb	      0xbeba000000	                           mov esi, 0xba	       186	regcache.c	FUNCTION_9	CALL_1
0x40003d0	      0xbf00000000	                              mov edi, 0	       186	regcache.c	FUNCTION_9	CALL_1
0x40003d5	            0x31c0	                            xor eax, eax	       186	regcache.c	FUNCTION_9	CALL_1
0x40003d7	      0xe800000000	                          call 0x40003dc	       186	regcache.c	FUNCTION_9	CALL_1
0x40003dc	    0x41b800000000	                              mov r8d, 0	       188	regcache.c	FUNCTION_9	CALL_3
0x40003e2	      0xb900000000	                              mov ecx, 0	       188	regcache.c	FUNCTION_9	CALL_3
0x40003e7	      0xba00000000	                              mov edx, 0	       188	regcache.c	FUNCTION_9	CALL_3
0x40003ec	      0xbebc000000	                           mov esi, 0xbc	       188	regcache.c	FUNCTION_9	CALL_3
0x40003f1	      0xbf00000000	                              mov edi, 0	       188	regcache.c	FUNCTION_9	CALL_3
0x40003f6	            0x31c0	                            xor eax, eax	       188	regcache.c	FUNCTION_9	CALL_3
0x40003f8	      0xe800000000	                          call 0x40003fd	       188	regcache.c	FUNCTION_9	CALL_3
0x40003fd	    0x41b800000000	                              mov r8d, 0	       187	regcache.c	FUNCTION_9	CALL_2
0x4000403	      0xb900000000	                              mov ecx, 0	       187	regcache.c	FUNCTION_9	CALL_2
0x4000408	      0xba00000000	                              mov edx, 0	       187	regcache.c	FUNCTION_9	CALL_2
0x400040d	      0xbebb000000	                           mov esi, 0xbb	       187	regcache.c	FUNCTION_9	CALL_2
0x4000412	      0xbf00000000	                              mov edi, 0	       187	regcache.c	FUNCTION_9	CALL_2
0x4000417	            0x31c0	                            xor eax, eax	       187	regcache.c	FUNCTION_9	CALL_2
0x4000419	      0xe800000000	                          call 0x400041e	       187	regcache.c	FUNCTION_9	CALL_2
regcache_release	FOR,0:SWITCH,0:CALL,1:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	29
0x40005e0	    0x488b05000000	            mov rax, qword [0x040005e7] 	       276	regcache.c	FUNCTION_15
0x40005e7	    0x483d00000000	                              cmp rax, 0	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40005ed	            0x744b	                            je 0x400063a	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40005ef	            0x4154	                                push r12	       276	regcache.c	FUNCTION_15
0x40005f1	              0x55	                                push rbp	       276	regcache.c	FUNCTION_15
0x40005f2	              0x53	                                push rbx	       276	regcache.c	FUNCTION_15
0x40005f3	       0xf1f440000	                   nop dword [rax + rax]	       276	regcache.c	FUNCTION_15
0x40005f8	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       150	gdbthread.h	FUNCTION_47	WHILE_1	CALL_3
0x40005fc	          0x4c8b20	                    mov r12, qword [rax]	       167	stl_list.h	FUNCTION_53
0x40005ff	          0x4889df	                            mov rdi, rbx	       264	regcache.c	FUNCTION_14	CALL_1
0x4000602	      0xe800000000	                          call 0x4000607	       264	regcache.c	FUNCTION_14	CALL_1
0x4000607	          0x4885c0	                           test rax, rax	       266	regcache.c	FUNCTION_14	IF_1
0x400060a	          0x4889c5	                            mov rbp, rax	       264	regcache.c	FUNCTION_14	CALL_1
0x400060d	            0x741a	                            je 0x4000629	       266	regcache.c	FUNCTION_14	IF_1
0x400060f	          0x4889df	                            mov rdi, rbx	       268	regcache.c	FUNCTION_14	IF_1	CALL_2
0x4000612	      0xe800000000	                          call 0x4000617	       268	regcache.c	FUNCTION_14	IF_1	CALL_2
0x4000617	          0x4889ef	                            mov rdi, rbp	       269	regcache.c	FUNCTION_14	IF_1	CALL_3
0x400061a	      0xe800000000	                          call 0x400061f	       269	regcache.c	FUNCTION_14	IF_1	CALL_3
0x400061f	            0x31f6	                            xor esi, esi	       270	regcache.c	FUNCTION_14	IF_1	CALL_4
0x4000621	          0x4889df	                            mov rdi, rbx	       270	regcache.c	FUNCTION_14	IF_1	CALL_4
0x4000624	      0xe800000000	                          call 0x4000629	       270	regcache.c	FUNCTION_14	IF_1	CALL_4
0x4000629	    0x4981fc000000	                              cmp r12, 0	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x4000630	          0x4c89e0	                            mov rax, r12	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x4000633	            0x75c3	                           jne 0x40005f8	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x4000635	              0x5b	                                 pop rbx	       279	regcache.c	FUNCTION_15
0x4000636	              0x5d	                                 pop rbp	       279	regcache.c	FUNCTION_15
0x4000637	            0x415c	                                 pop r12	       279	regcache.c	FUNCTION_15
0x4000639	              0xc3	                                     ret	       279	regcache.c	FUNCTION_15
0x400063a	            0xf3c3	                                     ret	       279	regcache.c	FUNCTION_15
register_cache_size	FOR,0:SWITCH,0:CALL,0:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	2
0x4000640	          0x8b4720	            mov eax, dword [rdi + 0x20] 	       285	regcache.c	FUNCTION_16
0x4000643	              0xc3	                                     ret	       286	regcache.c	FUNCTION_16
regcache_invalidate_pid	FOR,0:SWITCH,0:CALL,1:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	25
0x40000b0	    0x488b05000000	            mov rax, qword [0x040000b7] 	       100	regcache.c	FUNCTION_4
0x40000b7	    0x483d00000000	                              cmp rax, 0	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000bd	            0x7440	                            je 0x40000ff	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000bf	              0x55	                                push rbp	       100	regcache.c	FUNCTION_4
0x40000c0	              0x53	                                push rbx	       100	regcache.c	FUNCTION_4
0x40000c1	            0x89fd	                            mov ebp, edi	       100	regcache.c	FUNCTION_4
0x40000c3	        0x4883ec08	                              sub rsp, 8	       100	regcache.c	FUNCTION_4
0x40000c7	            0xeb13	                           jmp 0x40000dc	       100	regcache.c	FUNCTION_4
0x40000c9	     0xf1f80000000	                         nop dword [rax]	       100	regcache.c	FUNCTION_4
0x40000d0	    0x4881fb000000	                              cmp rbx, 0	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000d7	          0x4889d8	                            mov rax, rbx	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000da	            0x741c	                            je 0x40000f8	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000dc	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       150	gdbthread.h	FUNCTION_47	WHILE_1	CALL_3
0x40000e0	          0x488b18	                    mov rbx, qword [rax]	       167	stl_list.h	FUNCTION_53
0x40000e3	            0x3b2f	                    cmp ebp, dword [rdi]	       163	gdbthread.h	FUNCTION_48	IF_1	CALL_2
0x40000e5	            0x75e9	                           jne 0x40000d0	       163	gdbthread.h	FUNCTION_48	IF_1	CALL_2
0x40000e7	      0xe800000000	                          call 0x40000ec	       164	gdbthread.h	FUNCTION_48	CALL_3
0x40000ec	    0x4881fb000000	                              cmp rbx, 0	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000f3	          0x4889d8	                            mov rax, rbx	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000f6	            0x75e4	                           jne 0x40000dc	       146	gdbthread.h	FUNCTION_47	WHILE_1	CALL_2
0x40000f8	        0x4883c408	                              add rsp, 8	       103	regcache.c	FUNCTION_4
0x40000fc	              0x5b	                                 pop rbx	       103	regcache.c	FUNCTION_4
0x40000fd	              0x5d	                                 pop rbp	       103	regcache.c	FUNCTION_4
0x40000fe	              0xc3	                                     ret	       103	regcache.c	FUNCTION_4
0x40000ff	            0xf3c3	                                     ret	       103	regcache.c	FUNCTION_4
regcache_invalidate_thread	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,0:IF,2:WHILE,0:DO,0	26
0x4000040	              0x55	                                push rbp	        76	regcache.c	FUNCTION_3
0x4000041	              0x53	                                push rbx	        76	regcache.c	FUNCTION_3
0x4000042	          0x4889fb	                            mov rbx, rdi	        76	regcache.c	FUNCTION_3
0x4000045	        0x4883ec18	                           sub rsp, 0x18	        76	regcache.c	FUNCTION_3
0x4000049	      0xe800000000	                          call 0x400004e	        79	regcache.c	FUNCTION_3	CALL_1
0x400004e	          0x4885c0	                           test rax, rax	        81	regcache.c	FUNCTION_3	IF_1
0x4000051	            0x740e	                            je 0x4000061	        81	regcache.c	FUNCTION_3	IF_1
0x4000053	          0x8b5008	                mov edx, dword [rax + 8]	        84	regcache.c	FUNCTION_3	IF_2
0x4000056	            0x85d2	                           test edx, edx	        84	regcache.c	FUNCTION_3	IF_2
0x4000058	            0x7516	                           jne 0x4000070	        84	regcache.c	FUNCTION_3	IF_2
0x400005a	    0xc74008000000	                  mov dword [rax + 8], 0	        93	regcache.c	FUNCTION_3
0x4000061	        0x4883c418	                           add rsp, 0x18	        94	regcache.c	FUNCTION_3
0x4000065	              0x5b	                                 pop rbx	        94	regcache.c	FUNCTION_3
0x4000066	              0x5d	                                 pop rbp	        94	regcache.c	FUNCTION_3
0x4000067	              0xc3	                                     ret	        94	regcache.c	FUNCTION_3
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	        94	regcache.c	FUNCTION_3
0x4000070	    0x488b2d000000	            mov rbp, qword [0x04000077] 	        86	regcache.c	FUNCTION_3	IF_2
0x4000077	    0x488b15000000	            mov rdx, qword [0x0400007e] 	        89	regcache.c	FUNCTION_3	IF_2	CALL_2
0x400007e	          0x4889c7	                            mov rdi, rax	        89	regcache.c	FUNCTION_3	IF_2	CALL_2
0x4000081	      0x4889442408	                mov qword [rsp + 8], rax	        89	regcache.c	FUNCTION_3	IF_2	CALL_2
0x4000086	    0x48891d000000	            mov qword [0x0400008d], rbx 	        88	regcache.c	FUNCTION_3	IF_2
0x400008d	      0xbeffffffff	                     mov esi, 0xffffffff	        89	regcache.c	FUNCTION_3	IF_2	CALL_2
0x4000092	          0xff5258	                 call qword [rdx + 0x58]	        89	regcache.c	FUNCTION_3	IF_2	CALL_2
0x4000095	    0x48892d000000	            mov qword [0x0400009c], rbp 	        90	regcache.c	FUNCTION_3	IF_2
0x400009c	      0x488b442408	                mov rax, qword [rsp + 8]	        90	regcache.c	FUNCTION_3	IF_2
0x40000a1	            0xebb7	                           jmp 0x400005a	        90	regcache.c	FUNCTION_3	IF_2
regcache_read_pc	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,1:IF,1:WHILE,0:DO,0	11
0x4000a00	    0x488b05000000	            mov rax, qword [0x04000a07] 	       463	regcache.c	FUNCTION_29	IF_1
0x4000a07	    0x488b80800100	           mov rax, qword [rax + 0x180] 	       463	regcache.c	FUNCTION_29	IF_1
0x4000a0e	          0x4885c0	                           test rax, rax	       463	regcache.c	FUNCTION_29	IF_1
0x4000a11	            0x7402	                            je 0x4000a15	       463	regcache.c	FUNCTION_29	IF_1
0x4000a13	            0xffe0	                                 jmp rax	       464	regcache.c	FUNCTION_29	CALL_1
0x4000a15	              0x50	                                push rax	       460	regcache.c	FUNCTION_29
0x4000a16	      0xba00000000	                              mov edx, 0	       467	regcache.c	FUNCTION_29	ELSE_1
0x4000a1b	      0xbed2010000	                          mov esi, 0x1d2	       467	regcache.c	FUNCTION_29	ELSE_1
0x4000a20	      0xbf00000000	                              mov edi, 0	       467	regcache.c	FUNCTION_29	ELSE_1
0x4000a25	            0x31c0	                            xor eax, eax	       467	regcache.c	FUNCTION_29	ELSE_1
0x4000a27	      0xe800000000	                          call 0x4000a2c	       467	regcache.c	FUNCTION_29	ELSE_1
collect_register_as_string	FOR,0:SWITCH,0:CALL,3:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	20
0x4000990	          0x4889d1	                            mov rcx, rdx	       444	regcache.c	FUNCTION_27
0x4000993	          0x488b17	                    mov rdx, qword [rdi]	       444	regcache.c	FUNCTION_27
0x4000996	          0x4863c6	                         movsxd rax, esi	       795	stl_vector.h	FUNCTION_31
0x4000999	        0x48c1e004	                              shl rax, 4	       795	stl_vector.h	FUNCTION_31
0x400099d	        0x48034208	                add rax, qword [rdx + 8]	       795	stl_vector.h	FUNCTION_31
0x40009a1	          0x8b700c	              mov esi, dword [rax + 0xc]	       446	regcache.c	FUNCTION_27	CALL_3
0x40009a4	          0x8d5607	                      lea edx, [rsi + 7]	       446	regcache.c	FUNCTION_27	CALL_3
0x40009a7	            0x85f6	                           test esi, esi	       446	regcache.c	FUNCTION_27	CALL_3
0x40009a9	           0xf49d6	                         cmovns edx, esi	       446	regcache.c	FUNCTION_27	CALL_3
0x40009ac	          0x8b7008	                mov esi, dword [rax + 8]	       446	regcache.c	FUNCTION_27	CALL_3
0x40009af	          0xc1fa03	                              sar edx, 3	       446	regcache.c	FUNCTION_27	CALL_3
0x40009b2	          0x8d4607	                      lea eax, [rsi + 7]	       446	regcache.c	FUNCTION_27	CALL_3
0x40009b5	            0x85f6	                           test esi, esi	       446	regcache.c	FUNCTION_27	CALL_3
0x40009b7	           0xf49c6	                         cmovns eax, esi	       446	regcache.c	FUNCTION_27	CALL_3
0x40009ba	          0x4889ce	                            mov rsi, rcx	       446	regcache.c	FUNCTION_27	CALL_3
0x40009bd	          0xc1f803	                              sar eax, 3	       446	regcache.c	FUNCTION_27	CALL_3
0x40009c0	            0x4898	                                    cdqe	       446	regcache.c	FUNCTION_27	CALL_3
0x40009c2	        0x48034710	             add rax, qword [rdi + 0x10]	       446	regcache.c	FUNCTION_27	CALL_3
0x40009c6	          0x4889c7	                            mov rdi, rax	       446	regcache.c	FUNCTION_27	CALL_3
0x40009c9	      0xe900000000	                           jmp 0x40009ce	       446	regcache.c	FUNCTION_27	CALL_3
get_thread_regcache	FOR,0:SWITCH,0:CALL,8:functions,0:ELSE,0:IF,2:WHILE,0:DO,0	59
0x4000200	            0x4154	                                push r12	        28	regcache.c	FUNCTION_1
0x4000202	              0x55	                                push rbp	        28	regcache.c	FUNCTION_1
0x4000203	          0x4189f4	                           mov r12d, esi	        28	regcache.c	FUNCTION_1
0x4000206	              0x53	                                push rbx	        28	regcache.c	FUNCTION_1
0x4000207	          0x4889fd	                            mov rbp, rdi	        28	regcache.c	FUNCTION_1
0x400020a	      0xe800000000	                          call 0x400020f	        31	regcache.c	FUNCTION_1	CALL_1
0x400020f	          0x4885c0	                           test rax, rax	        40	regcache.c	FUNCTION_1	IF_1
0x4000212	          0x4889c3	                            mov rbx, rax	        40	regcache.c	FUNCTION_1	IF_1
0x4000215	            0x7471	                            je 0x4000288	        40	regcache.c	FUNCTION_1	IF_1
0x4000217	          0x4585e4	                         test r12d, r12d	        50	regcache.c	FUNCTION_1	IF_2
0x400021a	            0x7407	                            je 0x4000223	        50	regcache.c	FUNCTION_1	IF_2
0x400021c	          0x8b4308	                mov eax, dword [rbx + 8]	        50	regcache.c	FUNCTION_1	IF_2
0x400021f	            0x85c0	                           test eax, eax	        50	regcache.c	FUNCTION_1	IF_2
0x4000221	            0x740d	                            je 0x4000230	        50	regcache.c	FUNCTION_1	IF_2
0x4000223	          0x4889d8	                            mov rax, rbx	        64	regcache.c	FUNCTION_1
0x4000226	              0x5b	                                 pop rbx	        64	regcache.c	FUNCTION_1
0x4000227	              0x5d	                                 pop rbp	        64	regcache.c	FUNCTION_1
0x4000228	            0x415c	                                 pop r12	        64	regcache.c	FUNCTION_1
0x400022a	              0xc3	                                     ret	        64	regcache.c	FUNCTION_1
0x400022b	       0xf1f440000	                   nop dword [rax + rax]	        64	regcache.c	FUNCTION_1
0x4000230	          0x488b03	                    mov rax, qword [rbx]	        57	regcache.c	FUNCTION_1	IF_2	CALL_7
0x4000233	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	        90	string3.h	FUNCTION_35	CALL_6
0x4000237	      0xbeffffffff	                     mov esi, 0xffffffff	        90	string3.h	FUNCTION_35	CALL_6
0x400023c	    0x4c8b25000000	            mov r12, qword [0x04000243] 	        52	regcache.c	FUNCTION_1	IF_2
0x4000243	    0x48892d000000	            mov qword [0x0400024a], rbp 	        54	regcache.c	FUNCTION_1	IF_2
0x400024a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        90	string3.h	FUNCTION_35	CALL_6
0x400024e	        0x482b5008	                sub rdx, qword [rax + 8]	        90	string3.h	FUNCTION_35	CALL_6
0x4000252	        0x48c1fa04	                              sar rdx, 4	        90	string3.h	FUNCTION_35	CALL_6
0x4000256	      0xe800000000	                          call 0x400025b	        90	string3.h	FUNCTION_35	CALL_6
0x400025b	    0x488b05000000	            mov rax, qword [0x04000262] 	        58	regcache.c	FUNCTION_1	IF_2	CALL_8
0x4000262	          0x4889df	                            mov rdi, rbx	        58	regcache.c	FUNCTION_1	IF_2	CALL_8
0x4000265	      0xbeffffffff	                     mov esi, 0xffffffff	        58	regcache.c	FUNCTION_1	IF_2	CALL_8
0x400026a	          0xff5050	                 call qword [rax + 0x50]	        58	regcache.c	FUNCTION_1	IF_2	CALL_8
0x400026d	    0xc74308010000	                  mov dword [rbx + 8], 1	        60	regcache.c	FUNCTION_1	IF_2
0x4000274	          0x4889d8	                            mov rax, rbx	        64	regcache.c	FUNCTION_1
0x4000277	    0x4c8925000000	            mov qword [0x0400027e], r12 	        59	regcache.c	FUNCTION_1	IF_2
0x400027e	              0x5b	                                 pop rbx	        64	regcache.c	FUNCTION_1
0x400027f	              0x5d	                                 pop rbp	        64	regcache.c	FUNCTION_1
0x4000280	            0x415c	                                 pop r12	        64	regcache.c	FUNCTION_1
0x4000282	              0xc3	                                     ret	        64	regcache.c	FUNCTION_1
0x4000283	       0xf1f440000	                   nop dword [rax + rax]	        64	regcache.c	FUNCTION_1
0x4000288	          0x4889ef	                            mov rdi, rbp	        42	regcache.c	FUNCTION_1	IF_1	CALL_2
0x400028b	      0xe800000000	                          call 0x4000290	        42	regcache.c	FUNCTION_1	IF_1	CALL_2
0x4000290	        0x488b7848	            mov rdi, qword [rax + 0x48] 	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x4000294	          0x4885ff	                           test rdi, rdi	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x4000297	            0x7418	                            je 0x40002b1	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x4000299	      0xe800000000	                          call 0x400029e	        46	regcache.c	FUNCTION_1	IF_1	CALL_4
0x400029e	          0x4889ef	                            mov rdi, rbp	        47	regcache.c	FUNCTION_1	IF_1	CALL_5
0x40002a1	          0x4889c6	                            mov rsi, rax	        47	regcache.c	FUNCTION_1	IF_1	CALL_5
0x40002a4	          0x4889c3	                            mov rbx, rax	        46	regcache.c	FUNCTION_1	IF_1	CALL_4
0x40002a7	      0xe800000000	                          call 0x40002ac	        47	regcache.c	FUNCTION_1	IF_1	CALL_5
0x40002ac	      0xe966ffffff	                           jmp 0x4000217	        47	regcache.c	FUNCTION_1	IF_1	CALL_5
0x40002b1	    0x41b800000000	                              mov r8d, 0	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x40002b7	      0xb900000000	                              mov ecx, 0	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x40002bc	      0xba00000000	                              mov edx, 0	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x40002c1	      0xbe2c000000	                           mov esi, 0x2c	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x40002c6	      0xbf00000000	                              mov edi, 0	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x40002cb	            0x31c0	                            xor eax, eax	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
0x40002cd	      0xe800000000	                          call 0x40002d2	        44	regcache.c	FUNCTION_1	IF_1	CALL_3
init_register_cache	FOR,0:SWITCH,0:CALL,6:functions,0:ELSE,1:IF,1:WHILE,0:DO,0	35
0x4000120	              0x55	                                push rbp	       122	regcache.c	FUNCTION_6
0x4000121	              0x53	                                push rbx	       122	regcache.c	FUNCTION_6
0x4000122	          0x4889fb	                            mov rbx, rdi	       122	regcache.c	FUNCTION_6
0x4000125	          0x4889f5	                            mov rbp, rsi	       122	regcache.c	FUNCTION_6
0x4000128	        0x4883ec08	                              sub rsp, 8	       122	regcache.c	FUNCTION_6
0x400012c	          0x4885d2	                           test rdx, rdx	       123	regcache.c	FUNCTION_6	IF_1
0x400012f	          0x488933	                    mov qword [rbx], rsi	       130	regcache.c	FUNCTION_6	IF_1
0x4000132	            0x742c	                            je 0x4000160	       123	regcache.c	FUNCTION_6	IF_1
0x4000134	        0x48895710	             mov qword [rdi + 0x10], rdx	       145	regcache.c	FUNCTION_6	ELSE_1
0x4000138	    0xc7470c000000	                mov dword [rdi + 0xc], 0	       146	regcache.c	FUNCTION_6	ELSE_1
0x400013f	    0x48c747180000	               mov qword [rdi + 0x18], 0	       148	regcache.c	FUNCTION_6	ELSE_1
0x4000147	    0xc74308000000	                  mov dword [rbx + 8], 0	       152	regcache.c	FUNCTION_6
0x400014e	        0x4883c408	                              add rsp, 8	       155	regcache.c	FUNCTION_6
0x4000152	          0x4889d8	                            mov rax, rbx	       155	regcache.c	FUNCTION_6
0x4000155	              0x5b	                                 pop rbx	       155	regcache.c	FUNCTION_6
0x4000156	              0x5d	                                 pop rbp	       155	regcache.c	FUNCTION_6
0x4000157	              0xc3	                                     ret	       155	regcache.c	FUNCTION_6
0x4000158	     0xf1f84000000	                   nop dword [rax + rax]	       155	regcache.c	FUNCTION_6
0x4000160	        0x48637620	         movsxd rsi, dword [rsi + 0x20] 	       132	regcache.c	FUNCTION_6	IF_1	CALL_1
0x4000164	      0xbf01000000	                              mov edi, 1	       132	regcache.c	FUNCTION_6	IF_1	CALL_1
0x4000169	      0xe800000000	                          call 0x400016e	       132	regcache.c	FUNCTION_6	IF_1	CALL_1
0x400016e	        0x48894310	             mov qword [rbx + 0x10], rax	       132	regcache.c	FUNCTION_6	IF_1	CALL_1
0x4000172	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       135	regcache.c	FUNCTION_6	IF_1	CALL_3
0x4000176	        0x482b7d08	                sub rdi, qword [rbp + 8]	       135	regcache.c	FUNCTION_6	IF_1	CALL_3
0x400017a	    0xc7430c010000	                mov dword [rbx + 0xc], 1	       133	regcache.c	FUNCTION_6	IF_1
0x4000181	        0x48c1ff04	                              sar rdi, 4	       135	regcache.c	FUNCTION_6	IF_1	CALL_3
0x4000185	      0xe800000000	                          call 0x400018a	       135	regcache.c	FUNCTION_6	IF_1	CALL_3
0x400018a	        0x48894318	             mov qword [rbx + 0x18], rax	       135	regcache.c	FUNCTION_6	IF_1	CALL_3
0x400018e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	        90	string3.h	FUNCTION_35	CALL_6
0x4000192	      0xbeffffffff	                     mov esi, 0xffffffff	        90	string3.h	FUNCTION_35	CALL_6
0x4000197	        0x482b5508	                sub rdx, qword [rbp + 8]	        90	string3.h	FUNCTION_35	CALL_6
0x400019b	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_35	CALL_6
0x400019e	        0x48c1fa04	                              sar rdx, 4	        90	string3.h	FUNCTION_35	CALL_6
0x40001a2	      0xe800000000	                          call 0x40001a7	        90	string3.h	FUNCTION_35	CALL_6
0x40001a7	            0xeb9e	                           jmp 0x4000147	        90	string3.h	FUNCTION_35	CALL_6
free_register_cache	FOR,0:SWITCH,0:CALL,3:functions,0:ELSE,0:IF,2:WHILE,0:DO,0	18
0x4000310	          0x4885ff	                           test rdi, rdi	       172	regcache.c	FUNCTION_8	IF_1
0x4000313	            0x7433	                            je 0x4000348	       172	regcache.c	FUNCTION_8	IF_1
0x4000315	              0x53	                                push rbx	       171	regcache.c	FUNCTION_8
0x4000316	          0x8b470c	              mov eax, dword [rdi + 0xc]	       174	regcache.c	FUNCTION_8	IF_1	IF_2
0x4000319	          0x4889fb	                            mov rbx, rdi	       174	regcache.c	FUNCTION_8	IF_1	IF_2
0x400031c	            0x85c0	                           test eax, eax	       174	regcache.c	FUNCTION_8	IF_1	IF_2
0x400031e	            0x7518	                           jne 0x4000338	       174	regcache.c	FUNCTION_8	IF_1	IF_2
0x4000320	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       176	regcache.c	FUNCTION_8	IF_1	CALL_2
0x4000324	      0xe800000000	                          call 0x4000329	       176	regcache.c	FUNCTION_8	IF_1	CALL_2
0x4000329	          0x4889df	                            mov rdi, rbx	       177	regcache.c	FUNCTION_8	IF_1	CALL_3
0x400032c	              0x5b	                                 pop rbx	       179	regcache.c	FUNCTION_8
0x400032d	      0xe900000000	                           jmp 0x4000332	       177	regcache.c	FUNCTION_8	IF_1	CALL_3
0x4000332	    0x660f1f440000	                    nop word [rax + rax]	       177	regcache.c	FUNCTION_8	IF_1	CALL_3
0x4000338	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       175	regcache.c	FUNCTION_8	IF_1	CALL_1
0x400033c	      0xe800000000	                          call 0x4000341	       175	regcache.c	FUNCTION_8	IF_1	CALL_1
0x4000341	            0xebdd	                           jmp 0x4000320	       175	regcache.c	FUNCTION_8	IF_1	CALL_1
0x4000343	       0xf1f440000	                   nop dword [rax + rax]	       175	regcache.c	FUNCTION_8	IF_1	CALL_1
0x4000348	            0xf3c3	                                     ret	       175	regcache.c	FUNCTION_8	IF_1	CALL_1
supply_regblock	FOR,2:SWITCH,0:CALL,4:functions,0:ELSE,1:IF,1:WHILE,0:DO,0	53
0x40007d0	              0x55	                                push rbp	       368	regcache.c	FUNCTION_23
0x40007d1	              0x53	                                push rbx	       368	regcache.c	FUNCTION_23
0x40007d2	          0x4889fd	                            mov rbp, rdi	       368	regcache.c	FUNCTION_23
0x40007d5	        0x4883ec08	                              sub rsp, 8	       368	regcache.c	FUNCTION_23
0x40007d9	          0x4885f6	                           test rsi, rsi	       369	regcache.c	FUNCTION_23	IF_1
0x40007dc	          0x488b1f	                    mov rbx, qword [rdi]	       371	regcache.c	FUNCTION_23	IF_1
0x40007df	            0x744f	                            je 0x4000830	       369	regcache.c	FUNCTION_23	IF_1
0x40007e1	        0x48635320	         movsxd rdx, dword [rbx + 0x20] 	        53	string3.h	FUNCTION_32	CALL_3
0x40007e5	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        53	string3.h	FUNCTION_32	CALL_3
0x40007e9	      0xe800000000	                          call 0x40007ee	        53	string3.h	FUNCTION_32	CALL_3
0x40007ee	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x40007f2	        0x482b4308	                sub rax, qword [rbx + 8]	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x40007f6	            0x31d2	                            xor edx, edx	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x40007f8	        0x48c1f804	                              sar rax, 4	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x40007fc	          0x4885c0	                           test rax, rax	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x40007ff	            0x7424	                            je 0x4000825	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x4000801	     0xf1f80000000	                         nop dword [rax]	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x4000808	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       379	regcache.c	FUNCTION_23	IF_1	FOR_1
0x400080c	        0xc6041001	                 mov byte [rax + rdx], 1	       379	regcache.c	FUNCTION_23	IF_1	FOR_1
0x4000810	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x4000814	        0x4883c201	                              add rdx, 1	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x4000818	        0x482b4308	                sub rax, qword [rbx + 8]	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x400081c	        0x48c1f804	                              sar rax, 4	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x4000820	          0x4839c2	                            cmp rdx, rax	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x4000823	            0x72e3	                            jb 0x4000808	       378	regcache.c	FUNCTION_23	IF_1	FOR_1	CALL_2
0x4000825	        0x4883c408	                              add rsp, 8	       397	regcache.c	FUNCTION_23
0x4000829	              0x5b	                                 pop rbx	       397	regcache.c	FUNCTION_23
0x400082a	              0x5d	                                 pop rbp	       397	regcache.c	FUNCTION_23
0x400082b	              0xc3	                                     ret	       397	regcache.c	FUNCTION_23
0x400082c	         0xf1f4000	                         nop dword [rax]	       397	regcache.c	FUNCTION_23
0x4000830	        0x48635320	         movsxd rdx, dword [rbx + 0x20] 	        90	string3.h	FUNCTION_35	CALL_6
0x4000834	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        90	string3.h	FUNCTION_35	CALL_6
0x4000838	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_35	CALL_6
0x400083a	      0xe800000000	                          call 0x400083f	        90	string3.h	FUNCTION_35	CALL_6
0x400083f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000843	        0x482b4308	                sub rax, qword [rbx + 8]	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000847	        0x48c1f804	                              sar rax, 4	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x400084b	          0x4885c0	                           test rax, rax	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x400084e	            0x74d5	                            je 0x4000825	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000850	            0x31d2	                            xor edx, edx	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000852	    0x660f1f440000	                    nop word [rax + rax]	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000858	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       393	regcache.c	FUNCTION_23	ELSE_1	FOR_2
0x400085c	        0xc60410ff	              mov byte [rax + rdx], 0xff	       393	regcache.c	FUNCTION_23	ELSE_1	FOR_2
0x4000860	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000864	        0x4883c201	                              add rdx, 1	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000868	        0x482b4308	                sub rax, qword [rbx + 8]	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x400086c	        0x48c1f804	                              sar rax, 4	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000870	          0x4839d0	                            cmp rax, rdx	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000873	            0x77e3	                            ja 0x4000858	       392	regcache.c	FUNCTION_23	ELSE_1	FOR_2	CALL_4
0x4000875	        0x4883c408	                              add rsp, 8	       397	regcache.c	FUNCTION_23
0x4000879	              0x5b	                                 pop rbx	       397	regcache.c	FUNCTION_23
0x400087a	              0x5d	                                 pop rbp	       397	regcache.c	FUNCTION_23
0x400087b	              0xc3	                                     ret	       397	regcache.c	FUNCTION_23
regcache_invalidate	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	3
0x4000110	    0x488b05000000	            mov rax, qword [0x04000117] 	       109	regcache.c	FUNCTION_5
0x4000117	            0x8b38	                    mov edi, dword [rax]	       113	regcache.c	FUNCTION_5	CALL_2
0x4000119	            0xeb95	     jmp sym.regcache_invalidate_pid_int	       113	regcache.c	FUNCTION_5	CALL_2
registers_from_string	FOR,0:SWITCH,0:CALL,3:functions,0:ELSE,0:IF,2:WHILE,0:DO,0	36
0x4000500	            0x4155	                                push r13	       234	regcache.c	FUNCTION_12
0x4000502	            0x4154	                                push r12	       234	regcache.c	FUNCTION_12
0x4000504	          0x4989fc	                            mov r12, rdi	       234	regcache.c	FUNCTION_12
0x4000507	              0x55	                                push rbp	       234	regcache.c	FUNCTION_12
0x4000508	              0x53	                                push rbx	       234	regcache.c	FUNCTION_12
0x4000509	          0x4889f7	                            mov rdi, rsi	       235	regcache.c	FUNCTION_12	CALL_1
0x400050c	          0x4889f3	                            mov rbx, rsi	       234	regcache.c	FUNCTION_12
0x400050f	        0x4883ec08	                              sub rsp, 8	       234	regcache.c	FUNCTION_12
0x4000513	      0xe800000000	                          call 0x4000518	       235	regcache.c	FUNCTION_12	CALL_1
0x4000518	      0x4d8b6c2410	            mov r13, qword [r12 + 0x10] 	       236	regcache.c	FUNCTION_12
0x400051d	        0x4d8b2424	                    mov r12, qword [r12]	       237	regcache.c	FUNCTION_12
0x4000521	          0x4889c5	                            mov rbp, rax	       235	regcache.c	FUNCTION_12	CALL_1
0x4000524	      0x418b442420	            mov eax, dword [r12 + 0x20] 	       239	regcache.c	FUNCTION_12	IF_1
0x4000529	          0x8d3400	                    lea esi, [rax + rax]	       239	regcache.c	FUNCTION_12	IF_1
0x400052c	            0x39f5	                            cmp ebp, esi	       239	regcache.c	FUNCTION_12	IF_1
0x400052e	            0x741a	                            je 0x400054a	       239	regcache.c	FUNCTION_12	IF_1
0x4000530	            0x31c0	                            xor eax, eax	       242	regcache.c	FUNCTION_12	IF_1
0x4000532	            0x89ea	                            mov edx, ebp	       242	regcache.c	FUNCTION_12	IF_1
0x4000534	      0xbf00000000	                              mov edi, 0	       242	regcache.c	FUNCTION_12	IF_1
0x4000539	      0xe800000000	                          call 0x400053e	       242	regcache.c	FUNCTION_12	IF_1
0x400053e	      0x418b742420	            mov esi, dword [r12 + 0x20] 	       243	regcache.c	FUNCTION_12	IF_1	IF_2
0x4000543	             0x1f6	                            add esi, esi	       243	regcache.c	FUNCTION_12	IF_1	IF_2
0x4000545	            0x39f5	                            cmp ebp, esi	       243	regcache.c	FUNCTION_12	IF_1	IF_2
0x4000547	           0xf4ef5	                         cmovle esi, ebp	       243	regcache.c	FUNCTION_12	IF_1	IF_2
0x400054a	            0x89f2	                            mov edx, esi	       246	regcache.c	FUNCTION_12	CALL_3
0x400054c	        0x4883c408	                              add rsp, 8	       247	regcache.c	FUNCTION_12
0x4000550	          0x4889df	                            mov rdi, rbx	       246	regcache.c	FUNCTION_12	CALL_3
0x4000553	          0xc1ea1f	                           shr edx, 0x1f	       246	regcache.c	FUNCTION_12	CALL_3
0x4000556	              0x5b	                                 pop rbx	       247	regcache.c	FUNCTION_12
0x4000557	             0x1f2	                            add edx, esi	       246	regcache.c	FUNCTION_12	CALL_3
0x4000559	          0x4c89ee	                            mov rsi, r13	       246	regcache.c	FUNCTION_12	CALL_3
0x400055c	              0x5d	                                 pop rbp	       247	regcache.c	FUNCTION_12
0x400055d	            0x415c	                                 pop r12	       247	regcache.c	FUNCTION_12
0x400055f	            0x415d	                                 pop r13	       247	regcache.c	FUNCTION_12
0x4000561	            0xd1fa	                              sar edx, 1	       246	regcache.c	FUNCTION_12	CALL_3
0x4000563	      0xe900000000	                           jmp 0x4000568	       246	regcache.c	FUNCTION_12	CALL_3
supply_register_by_name_zeroed	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	8
0x40007b0	              0x53	                                push rbx	       356	regcache.c	FUNCTION_22
0x40007b1	          0x4889fb	                            mov rbx, rdi	       356	regcache.c	FUNCTION_22
0x40007b4	          0x488b3f	                    mov rdi, qword [rdi]	       357	regcache.c	FUNCTION_22	CALL_2
0x40007b7	      0xe800000000	                          call 0x40007bc	       357	regcache.c	FUNCTION_22	CALL_2
0x40007bc	          0x4889df	                            mov rdi, rbx	       357	regcache.c	FUNCTION_22	CALL_2
0x40007bf	            0x89c6	                            mov esi, eax	       357	regcache.c	FUNCTION_22	CALL_2
0x40007c1	              0x5b	                                 pop rbx	       358	regcache.c	FUNCTION_22
0x40007c2	            0xeb8c	jmp sym.supply_register_zeroed_regcache__int	       357	regcache.c	FUNCTION_22	CALL_2
registers_to_string	FOR,1:SWITCH,0:CALL,8:functions,0:ELSE,1:IF,1:WHILE,0:DO,0	69
0x4000420	            0x4157	                                push r15	       211	regcache.c	FUNCTION_11
0x4000422	            0x4156	                                push r14	       211	regcache.c	FUNCTION_11
0x4000424	            0x4155	                                push r13	       211	regcache.c	FUNCTION_11
0x4000426	            0x4154	                                push r12	       211	regcache.c	FUNCTION_11
0x4000428	          0x4989f4	                            mov r12, rsi	       211	regcache.c	FUNCTION_11
0x400042b	              0x55	                                push rbp	       211	regcache.c	FUNCTION_11
0x400042c	              0x53	                                push rbx	       211	regcache.c	FUNCTION_11
0x400042d	        0x4883ec08	                              sub rsp, 8	       211	regcache.c	FUNCTION_11
0x4000431	          0x4c8b2f	                    mov r13, qword [rdi]	       213	regcache.c	FUNCTION_11
0x4000434	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       212	regcache.c	FUNCTION_11
0x4000438	        0x498b5508	                mov rdx, qword [r13 + 8]	       212	regcache.c	FUNCTION_11
0x400043c	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000440	          0x4829d0	                            sub rax, rdx	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000443	        0x48c1f804	                              sar rax, 4	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000447	          0x4885c0	                           test rax, rax	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x400044a	     0xf8490000000	                            je 0x40004e0	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000450	          0x4989fe	                            mov r14, rdi	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000453	            0x31ed	                            xor ebp, ebp	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000455	            0xeb59	                           jmp 0x40004b0	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000457	    0x660f1f840000	                    nop word [rax + rax]	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x4000460	            0x85d2	                           test edx, edx	        90	string3.h	FUNCTION_35	CALL_6
0x4000462	      0xbe78000000	                           mov esi, 0x78	        90	string3.h	FUNCTION_35	CALL_6
0x4000467	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_35	CALL_6
0x400046a	           0xf48d0	                          cmovs edx, eax	        90	string3.h	FUNCTION_35	CALL_6
0x400046d	          0xc1fa03	                              sar edx, 3	        90	string3.h	FUNCTION_35	CALL_6
0x4000470	             0x1d2	                            add edx, edx	        90	string3.h	FUNCTION_35	CALL_6
0x4000472	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_35	CALL_6
0x4000475	      0xe800000000	                          call 0x400047a	        90	string3.h	FUNCTION_35	CALL_6
0x400047a	        0x498b5508	                mov rdx, qword [r13 + 8]	        90	string3.h	FUNCTION_35	CALL_6
0x400047e	      0x428b4c3a0c	       mov ecx, dword [rdx + r15 + 0xc] 	       291	regcache.c	FUNCTION_17	CALL_1
0x4000483	          0x8d4107	                      lea eax, [rcx + 7]	       291	regcache.c	FUNCTION_17	CALL_1
0x4000486	            0x85c9	                           test ecx, ecx	       291	regcache.c	FUNCTION_17	CALL_1
0x4000488	           0xf49c1	                         cmovns eax, ecx	       291	regcache.c	FUNCTION_17	CALL_1
0x400048b	        0x4883c501	                              add rbp, 1	       291	regcache.c	FUNCTION_17	CALL_1
0x400048f	          0xc1f803	                              sar eax, 3	       291	regcache.c	FUNCTION_17	CALL_1
0x4000492	          0x8d0c00	                    lea ecx, [rax + rax]	       225	regcache.c	FUNCTION_11	FOR_1	ELSE_1	CALL_7
0x4000495	            0x4898	                                    cdqe	       227	regcache.c	FUNCTION_11	FOR_1	CALL_8
0x4000497	          0x4801c3	                            add rbx, rax	       227	regcache.c	FUNCTION_11	FOR_1	CALL_8
0x400049a	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x400049e	          0x4863c9	                         movsxd rcx, ecx	       225	regcache.c	FUNCTION_11	FOR_1	ELSE_1	CALL_7
0x40004a1	          0x4901cc	                            add r12, rcx	       225	regcache.c	FUNCTION_11	FOR_1	ELSE_1	CALL_7
0x40004a4	          0x4829d0	                            sub rax, rdx	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x40004a7	        0x48c1f804	                              sar rax, 4	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x40004ab	          0x4839e8	                            cmp rax, rbp	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x40004ae	            0x7630	                           jbe 0x40004e0	       215	regcache.c	FUNCTION_11	FOR_1	CALL_1
0x40004b0	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       217	regcache.c	FUNCTION_11	FOR_1	IF_1
0x40004b4	          0x4989ef	                            mov r15, rbp	       795	stl_vector.h	FUNCTION_31
0x40004b7	        0x49c1e704	                              shl r15, 4	       795	stl_vector.h	FUNCTION_31
0x40004bb	      0x428b543a0c	       mov edx, dword [rdx + r15 + 0xc] 	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004c0	        0x803c2801	                 cmp byte [rax + rbp], 1	       217	regcache.c	FUNCTION_11	FOR_1	IF_1
0x40004c4	          0x8d4207	                      lea eax, [rdx + 7]	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004c7	            0x7597	                           jne 0x4000460	       217	regcache.c	FUNCTION_11	FOR_1	IF_1
0x40004c9	            0x85d2	                           test edx, edx	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004cb	          0x4c89e6	                            mov rsi, r12	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004ce	          0x4889df	                            mov rdi, rbx	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004d1	           0xf48d0	                          cmovs edx, eax	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004d4	          0xc1fa03	                              sar edx, 3	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004d7	      0xe800000000	                          call 0x40004dc	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004dc	            0xeb9c	                           jmp 0x400047a	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004de	            0x6690	                                     nop	       219	regcache.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40004e0	      0x41c6042400	                       mov byte [r12], 0	       229	regcache.c	FUNCTION_11
0x40004e5	        0x4883c408	                              add rsp, 8	       230	regcache.c	FUNCTION_11
0x40004e9	              0x5b	                                 pop rbx	       230	regcache.c	FUNCTION_11
0x40004ea	              0x5d	                                 pop rbp	       230	regcache.c	FUNCTION_11
0x40004eb	            0x415c	                                 pop r12	       230	regcache.c	FUNCTION_11
0x40004ed	            0x415d	                                 pop r13	       230	regcache.c	FUNCTION_11
0x40004ef	            0x415e	                                 pop r14	       230	regcache.c	FUNCTION_11
0x40004f1	            0x415f	                                 pop r15	       230	regcache.c	FUNCTION_11
0x40004f3	              0xc3	                                     ret	       230	regcache.c	FUNCTION_11
regcache_register_size	FOR,0:SWITCH,0:CALL,1:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	10
0x4000670	          0x488b07	                    mov rax, qword [rdi]	       298	regcache.c	FUNCTION_18
0x4000673	          0x4863f6	                         movsxd rsi, esi	       291	regcache.c	FUNCTION_17	CALL_1
0x4000676	        0x48c1e604	                              shl rsi, 4	       291	regcache.c	FUNCTION_17	CALL_1
0x400067a	        0x48037008	                add rsi, qword [rax + 8]	       291	regcache.c	FUNCTION_17	CALL_1
0x400067e	          0x8b560c	              mov edx, dword [rsi + 0xc]	       299	regcache.c	FUNCTION_18	CALL_1
0x4000681	          0x8d4207	                      lea eax, [rdx + 7]	       299	regcache.c	FUNCTION_18	CALL_1
0x4000684	            0x85d2	                           test edx, edx	       299	regcache.c	FUNCTION_18	CALL_1
0x4000686	           0xf49c2	                         cmovns eax, edx	       299	regcache.c	FUNCTION_18	CALL_1
0x4000689	          0xc1f803	                              sar eax, 3	       299	regcache.c	FUNCTION_18	CALL_1
0x400068c	              0xc3	                                     ret	       300	regcache.c	FUNCTION_18
regcache_write_pc	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,1:IF,1:WHILE,0:DO,0	11
0x4000a30	    0x488b05000000	            mov rax, qword [0x04000a37] 	       475	regcache.c	FUNCTION_30	IF_1
0x4000a37	    0x488b80880100	           mov rax, qword [rax + 0x188] 	       475	regcache.c	FUNCTION_30	IF_1
0x4000a3e	          0x4885c0	                           test rax, rax	       475	regcache.c	FUNCTION_30	IF_1
0x4000a41	            0x7402	                            je 0x4000a45	       475	regcache.c	FUNCTION_30	IF_1
0x4000a43	            0xffe0	                                 jmp rax	       476	regcache.c	FUNCTION_30	CALL_1
0x4000a45	              0x50	                                push rax	       474	regcache.c	FUNCTION_30
0x4000a46	      0xba00000000	                              mov edx, 0	       479	regcache.c	FUNCTION_30	ELSE_1
0x4000a4b	      0xbede010000	                          mov esi, 0x1de	       479	regcache.c	FUNCTION_30	ELSE_1
0x4000a50	      0xbf00000000	                              mov edi, 0	       479	regcache.c	FUNCTION_30	ELSE_1
0x4000a55	            0x31c0	                            xor eax, eax	       479	regcache.c	FUNCTION_30	ELSE_1
0x4000a57	      0xe800000000	     call str.tdesc__registers_size____0	       479	regcache.c	FUNCTION_30	ELSE_1
collect_register_by_name	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	14
0x40009d0	              0x55	                                push rbp	       452	regcache.c	FUNCTION_28
0x40009d1	              0x53	                                push rbx	       452	regcache.c	FUNCTION_28
0x40009d2	          0x4889fb	                            mov rbx, rdi	       452	regcache.c	FUNCTION_28
0x40009d5	          0x4889d5	                            mov rbp, rdx	       452	regcache.c	FUNCTION_28
0x40009d8	        0x4883ec08	                              sub rsp, 8	       452	regcache.c	FUNCTION_28
0x40009dc	          0x488b3f	                    mov rdi, qword [rdi]	       453	regcache.c	FUNCTION_28	CALL_2
0x40009df	      0xe800000000	                          call 0x40009e4	       453	regcache.c	FUNCTION_28	CALL_2
0x40009e4	        0x4883c408	                              add rsp, 8	       454	regcache.c	FUNCTION_28
0x40009e8	          0x4889ea	                            mov rdx, rbp	       453	regcache.c	FUNCTION_28	CALL_2
0x40009eb	          0x4889df	                            mov rdi, rbx	       453	regcache.c	FUNCTION_28	CALL_2
0x40009ee	              0x5b	                                 pop rbx	       454	regcache.c	FUNCTION_28
0x40009ef	              0x5d	                                 pop rbp	       454	regcache.c	FUNCTION_28
0x40009f0	            0x89c6	                            mov esi, eax	       453	regcache.c	FUNCTION_28	CALL_2
0x40009f2	      0xe9b9feffff	jmp sym.collect_register_regcache__int_void	       453	regcache.c	FUNCTION_28	CALL_2
get_thread_regcache_for_ptid	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	9
0x40002e0	        0x4883ec10	                           sub rsp, 0x10	        70	regcache.c	FUNCTION_2
0x40002e4	        0xff742428	                 push qword [rsp + 0x28]	        71	regcache.c	FUNCTION_2	CALL_2
0x40002e8	        0xff742428	                 push qword [rsp + 0x28]	        71	regcache.c	FUNCTION_2	CALL_2
0x40002ec	        0xff742428	                 push qword [rsp + 0x28]	        71	regcache.c	FUNCTION_2	CALL_2
0x40002f0	      0xe800000000	                          call 0x40002f5	        71	regcache.c	FUNCTION_2	CALL_2
0x40002f5	      0xbe01000000	                              mov esi, 1	        71	regcache.c	FUNCTION_2	CALL_2
0x40002fa	          0x4889c7	                            mov rdi, rax	        71	regcache.c	FUNCTION_2	CALL_2
0x40002fd	        0x4883c428	                           add rsp, 0x28	        72	regcache.c	FUNCTION_2
0x4000301	      0xe9fafeffff	jmp sym.get_thread_regcache_thread_info__int	        71	regcache.c	FUNCTION_2	CALL_2
supply_register_zeroed	FOR,0:SWITCH,0:CALL,3:functions,0:ELSE,0:IF,1:WHILE,0:DO,0	32
0x4000750	              0x55	                                push rbp	       340	regcache.c	FUNCTION_21
0x4000751	              0x53	                                push rbx	       340	regcache.c	FUNCTION_21
0x4000752	          0x4863de	                         movsxd rbx, esi	       204	regcache.c	FUNCTION_10
0x4000755	          0x4889d9	                            mov rcx, rbx	       795	stl_vector.h	FUNCTION_31
0x4000758	          0x4889fd	                            mov rbp, rdi	       340	regcache.c	FUNCTION_21
0x400075b	        0x4883ec08	                              sub rsp, 8	       340	regcache.c	FUNCTION_21
0x400075f	          0x488b07	                    mov rax, qword [rdi]	       340	regcache.c	FUNCTION_21
0x4000762	        0x48c1e104	                              shl rcx, 4	       795	stl_vector.h	FUNCTION_31
0x4000766	        0x48034808	                add rcx, qword [rax + 8]	       795	stl_vector.h	FUNCTION_31
0x400076a	          0x8b510c	              mov edx, dword [rcx + 0xc]	        90	string3.h	FUNCTION_35	CALL_6
0x400076d	          0x8b7908	                mov edi, dword [rcx + 8]	        90	string3.h	FUNCTION_35	CALL_6
0x4000770	          0x8d4207	                      lea eax, [rdx + 7]	        90	string3.h	FUNCTION_35	CALL_6
0x4000773	            0x85d2	                           test edx, edx	        90	string3.h	FUNCTION_35	CALL_6
0x4000775	           0xf48d0	                          cmovs edx, eax	        90	string3.h	FUNCTION_35	CALL_6
0x4000778	          0x8d4707	                      lea eax, [rdi + 7]	        90	string3.h	FUNCTION_35	CALL_6
0x400077b	          0xc1fa03	                              sar edx, 3	        90	string3.h	FUNCTION_35	CALL_6
0x400077e	            0x85ff	                           test edi, edi	        90	string3.h	FUNCTION_35	CALL_6
0x4000780	           0xf48f8	                          cmovs edi, eax	        90	string3.h	FUNCTION_35	CALL_6
0x4000783	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_35	CALL_6
0x4000786	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_35	CALL_6
0x4000788	          0xc1ff03	                              sar edi, 3	        90	string3.h	FUNCTION_35	CALL_6
0x400078b	          0x4863ff	                         movsxd rdi, edi	        90	string3.h	FUNCTION_35	CALL_6
0x400078e	        0x48037d10	             add rdi, qword [rbp + 0x10]	        90	string3.h	FUNCTION_35	CALL_6
0x4000792	      0xe800000000	                          call 0x4000797	        90	string3.h	FUNCTION_35	CALL_6
0x4000797	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       344	regcache.c	FUNCTION_21	IF_1
0x400079b	          0x4885c0	                           test rax, rax	       344	regcache.c	FUNCTION_21	IF_1
0x400079e	            0x7404	                            je 0x40007a4	       344	regcache.c	FUNCTION_21	IF_1
0x40007a0	        0xc6041801	                 mov byte [rax + rbx], 1	       345	regcache.c	FUNCTION_21	IF_1
0x40007a4	        0x4883c408	                              add rsp, 8	       347	regcache.c	FUNCTION_21
0x40007a8	              0x5b	                                 pop rbx	       347	regcache.c	FUNCTION_21
0x40007a9	              0x5d	                                 pop rbp	       347	regcache.c	FUNCTION_21
0x40007aa	              0xc3	                                     ret	       347	regcache.c	FUNCTION_21
regcache_raw_read_unsigned	FOR,0:SWITCH,0:CALL,7:functions,0:ELSE,0:IF,1:WHILE,0:DO,0	39
0x40008f0	        0x4883ec08	                              sub rsp, 8	       420	regcache.c	FUNCTION_26
0x40008f4	          0x4885ff	                           test rdi, rdi	       423	regcache.c	FUNCTION_26	CALL_1
0x40008f7	            0x7461	                            je 0x400095a	       423	regcache.c	FUNCTION_26	CALL_1
0x40008f9	            0x85f6	                           test esi, esi	       425	regcache.c	FUNCTION_26	CALL_3
0x40008fb	            0x783c	                            js 0x4000939	       425	regcache.c	FUNCTION_26	CALL_3
0x40008fd	          0x488b07	                    mov rax, qword [rdi]	       424	regcache.c	FUNCTION_26	CALL_2
0x4000900	          0x4863ce	                         movsxd rcx, esi	       424	regcache.c	FUNCTION_26	CALL_2
0x4000903	        0x4c8b4008	                 mov r8, qword [rax + 8]	       424	regcache.c	FUNCTION_26	CALL_2
0x4000907	        0x488b4010	            mov rax, qword [rax + 0x10] 	       424	regcache.c	FUNCTION_26	CALL_2
0x400090b	          0x4c29c0	                             sub rax, r8	       424	regcache.c	FUNCTION_26	CALL_2
0x400090e	        0x48c1f804	                              sar rax, 4	       424	regcache.c	FUNCTION_26	CALL_2
0x4000912	          0x4839c1	                            cmp rcx, rax	       424	regcache.c	FUNCTION_26	CALL_2
0x4000915	            0x7322	                           jae 0x4000939	       424	regcache.c	FUNCTION_26	CALL_2
0x4000917	        0x48c1e104	                              shl rcx, 4	       291	regcache.c	FUNCTION_17	CALL_1
0x400091b	    0x41837c080c47	       cmp dword [r8 + rcx + 0xc], 0x47 	       429	regcache.c	FUNCTION_26	IF_1
0x4000921	            0x7f58	                            jg 0x400097b	       429	regcache.c	FUNCTION_26	IF_1
0x4000923	    0x48c702000000	                      mov qword [rdx], 0	       434	regcache.c	FUNCTION_26
0x400092a	      0xe800000000	                          call 0x400092f	       435	regcache.c	FUNCTION_26	CALL_7
0x400092f	      0xb801000000	                              mov eax, 1	       438	regcache.c	FUNCTION_26
0x4000934	        0x4883c408	                              add rsp, 8	       438	regcache.c	FUNCTION_26
0x4000938	              0xc3	                                     ret	       438	regcache.c	FUNCTION_26
0x4000939	    0x41b800000000	                              mov r8d, 0	       424	regcache.c	FUNCTION_26	CALL_2
0x400093f	      0xb900000000	                              mov ecx, 0	       424	regcache.c	FUNCTION_26	CALL_2
0x4000944	      0xba00000000	                              mov edx, 0	       424	regcache.c	FUNCTION_26	CALL_2
0x4000949	      0xbea9010000	                          mov esi, 0x1a9	       424	regcache.c	FUNCTION_26	CALL_2
0x400094e	      0xbf00000000	                              mov edi, 0	       424	regcache.c	FUNCTION_26	CALL_2
0x4000953	            0x31c0	                            xor eax, eax	       424	regcache.c	FUNCTION_26	CALL_2
0x4000955	      0xe800000000	                          call 0x400095a	       424	regcache.c	FUNCTION_26	CALL_2
0x400095a	    0x41b800000000	                              mov r8d, 0	       423	regcache.c	FUNCTION_26	CALL_1
0x4000960	      0xb900000000	                              mov ecx, 0	       423	regcache.c	FUNCTION_26	CALL_1
0x4000965	      0xba00000000	                              mov edx, 0	       423	regcache.c	FUNCTION_26	CALL_1
0x400096a	      0xbea7010000	                          mov esi, 0x1a7	       423	regcache.c	FUNCTION_26	CALL_1
0x400096f	      0xbf00000000	                              mov edi, 0	       423	regcache.c	FUNCTION_26	CALL_1
0x4000974	            0x31c0	                            xor eax, eax	       423	regcache.c	FUNCTION_26	CALL_1
0x4000976	      0xe800000000	                          call 0x400097b	       423	regcache.c	FUNCTION_26	CALL_1
0x400097b	      0xbe08000000	                              mov esi, 8	       432	regcache.c	FUNCTION_26	IF_1
0x4000980	      0xbf00000000	                              mov edi, 0	       432	regcache.c	FUNCTION_26	IF_1
0x4000985	            0x31c0	                            xor eax, eax	       432	regcache.c	FUNCTION_26	IF_1
0x4000987	      0xe800000000	                          call 0x400098c	       432	regcache.c	FUNCTION_26	IF_1
supply_register_by_name	FOR,0:SWITCH,0:CALL,2:functions,0:ELSE,0:IF,0:WHILE,0:DO,0	14
0x4000880	              0x55	                                push rbp	       404	regcache.c	FUNCTION_24
0x4000881	              0x53	                                push rbx	       404	regcache.c	FUNCTION_24
0x4000882	          0x4889fb	                            mov rbx, rdi	       404	regcache.c	FUNCTION_24
0x4000885	          0x4889d5	                            mov rbp, rdx	       404	regcache.c	FUNCTION_24
0x4000888	        0x4883ec08	                              sub rsp, 8	       404	regcache.c	FUNCTION_24
0x400088c	          0x488b3f	                    mov rdi, qword [rdi]	       405	regcache.c	FUNCTION_24	CALL_2
0x400088f	      0xe800000000	                          call 0x4000894	       405	regcache.c	FUNCTION_24	CALL_2
0x4000894	        0x4883c408	                              add rsp, 8	       406	regcache.c	FUNCTION_24
0x4000898	          0x4889ea	                            mov rdx, rbp	       405	regcache.c	FUNCTION_24	CALL_2
0x400089b	          0x4889df	                            mov rdi, rbx	       405	regcache.c	FUNCTION_24	CALL_2
0x400089e	              0x5b	                                 pop rbx	       406	regcache.c	FUNCTION_24
0x400089f	              0x5d	                                 pop rbp	       406	regcache.c	FUNCTION_24
0x40008a0	            0x89c6	                            mov esi, eax	       405	regcache.c	FUNCTION_24	CALL_2
0x40008a2	      0xe9e9fdffff	jmp sym.supply_register_regcache__int_voidconst	       405	regcache.c	FUNCTION_24	CALL_2
