pex64_get_section_by_rva	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,2:CALL,4:DO,0	52
0x4000b1d	              0x55	                                push rbp	       328	pei-x86_64.c	FUNCTION_68
0x4000b1e	          0x4889e5	                            mov rbp, rsp	       328	pei-x86_64.c	FUNCTION_68
0x4000b21	        0x4883ec40	                           sub rsp, 0x40	       328	pei-x86_64.c	FUNCTION_68
0x4000b25	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       328	pei-x86_64.c	FUNCTION_68
0x4000b29	        0x488975d0	             mov qword [rbp - 0x30], rsi	       328	pei-x86_64.c	FUNCTION_68
0x4000b2d	        0x488955c8	             mov qword [rbp - 0x38], rdx	       328	pei-x86_64.c	FUNCTION_68
0x4000b31	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       329	pei-x86_64.c	FUNCTION_68	CALL_1
0x4000b35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       329	pei-x86_64.c	FUNCTION_68	CALL_1
0x4000b39	          0x4889d6	                            mov rsi, rdx	       329	pei-x86_64.c	FUNCTION_68	CALL_1
0x4000b3c	          0x4889c7	                            mov rdi, rax	       329	pei-x86_64.c	FUNCTION_68	CALL_1
0x4000b3f	      0xe800000000	                          call 0x4000b44	       329	pei-x86_64.c	FUNCTION_68	CALL_1
0x4000b44	        0x488945e8	             mov qword [rbp - 0x18], rax	       329	pei-x86_64.c	FUNCTION_68	CALL_1
0x4000b48	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       331	pei-x86_64.c	FUNCTION_68
0x4000b50	      0x48837de800	               cmp qword [rbp - 0x18], 0	       333	pei-x86_64.c	FUNCTION_68	IF_1
0x4000b55	            0x7424	                            je 0x4000b7b	       333	pei-x86_64.c	FUNCTION_68	IF_1
0x4000b57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       334	pei-x86_64.c	FUNCTION_68	IF_1	CALL_2
0x4000b5b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       334	pei-x86_64.c	FUNCTION_68	IF_1	CALL_2
0x4000b62	          0x4885c0	                           test rax, rax	       334	pei-x86_64.c	FUNCTION_68	IF_1	CALL_2
0x4000b65	            0x7414	                            je 0x4000b7b	       334	pei-x86_64.c	FUNCTION_68	IF_1	CALL_2
0x4000b67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	pei-x86_64.c	FUNCTION_68	IF_1	CALL_3
0x4000b6b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       335	pei-x86_64.c	FUNCTION_68	IF_1	CALL_3
0x4000b72	        0x488b4058	            mov rax, qword [rax + 0x58] 	       335	pei-x86_64.c	FUNCTION_68	IF_1	CALL_3
0x4000b76	          0x4885c0	                           test rax, rax	       335	pei-x86_64.c	FUNCTION_68	IF_1	CALL_3
0x4000b79	            0x7507	                           jne 0x4000b82	       335	pei-x86_64.c	FUNCTION_68	IF_1	CALL_3
0x4000b7b	      0xb800000000	                              mov eax, 0	       336	pei-x86_64.c	FUNCTION_68	IF_1
0x4000b80	            0xeb5d	                           jmp 0x4000bdf	       336	pei-x86_64.c	FUNCTION_68	IF_1
0x4000b82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000b86	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000b8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000b8e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000b95	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000b9c	          0x4829c2	                            sub rdx, rax	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000b9f	          0x4889d0	                            mov rax, rdx	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000ba2	        0x488945f8	                mov qword [rbp - 8], rax	       337	pei-x86_64.c	FUNCTION_68	CALL_4
0x4000ba6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	pei-x86_64.c	FUNCTION_68
0x4000baa	        0x488b4038	            mov rax, qword [rax + 0x38] 	       338	pei-x86_64.c	FUNCTION_68
0x4000bae	        0x488945f0	             mov qword [rbp - 0x10], rax	       338	pei-x86_64.c	FUNCTION_68
0x4000bb2	      0x48837df000	               cmp qword [rbp - 0x10], 0	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bb7	            0x741b	                            je 0x4000bd4	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bbd	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bc1	            0x7711	                            ja 0x4000bd4	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bc3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bc7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bcb	          0x4801d0	                            add rax, rdx	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bce	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bd2	            0x7307	                           jae 0x4000bdb	       339	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bd4	      0xb800000000	                              mov eax, 0	       340	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bd9	            0xeb04	                           jmp 0x4000bdf	       340	pei-x86_64.c	FUNCTION_68	IF_2
0x4000bdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       341	pei-x86_64.c	FUNCTION_68
0x4000bdf	              0xc9	                                   leave	       342	pei-x86_64.c	FUNCTION_68
0x4000be0	              0xc3	                                     ret	       342	pei-x86_64.c	FUNCTION_68
pex64_bfd_print_pdata_section	FOR,2:functions,0:WHILE,1:ELSE,6:SWITCH,0:IF,33:CALL,64:DO,0	712
0x40013db	              0x55	                                push rbp	       501	pei-x86_64.c	FUNCTION_71
0x40013dc	          0x4889e5	                            mov rbp, rsp	       501	pei-x86_64.c	FUNCTION_71
0x40013df	            0x4154	                                push r12	       501	pei-x86_64.c	FUNCTION_71
0x40013e1	              0x53	                                push rbx	       501	pei-x86_64.c	FUNCTION_71
0x40013e2	    0x4881ec000100	                          sub rsp, 0x100	       501	pei-x86_64.c	FUNCTION_71
0x40013e9	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       501	pei-x86_64.c	FUNCTION_71
0x40013f0	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	       501	pei-x86_64.c	FUNCTION_71
0x40013f7	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	       501	pei-x86_64.c	FUNCTION_71
0x40013fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       501	pei-x86_64.c	FUNCTION_71
0x4001407	        0x488945e8	             mov qword [rbp - 0x18], rax	       501	pei-x86_64.c	FUNCTION_71
0x400140b	            0x31c0	                            xor eax, eax	       501	pei-x86_64.c	FUNCTION_71
0x400140d	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       502	pei-x86_64.c	FUNCTION_71
0x4001414	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       502	pei-x86_64.c	FUNCTION_71
0x400141b	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       503	pei-x86_64.c	FUNCTION_71
0x4001426	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       504	pei-x86_64.c	FUNCTION_71
0x4001431	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       505	pei-x86_64.c	FUNCTION_71
0x400143c	    0x48c78550ffff	mov qword [rbp - 0xb0], 0xffffffffffffffff	       510	pei-x86_64.c	FUNCTION_71
0x4001447	    0x48c78558ffff	mov qword [rbp - 0xa8], 0xffffffffffffffff	       511	pei-x86_64.c	FUNCTION_71
0x4001452	    0xc78524ffffff	            mov dword [rbp - 0xdc], 0xc 	       513	pei-x86_64.c	FUNCTION_71
0x400145c	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	       514	pei-x86_64.c	FUNCTION_71
0x4001466	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       515	pei-x86_64.c	FUNCTION_71
0x4001471	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	       517	pei-x86_64.c	FUNCTION_71
0x400147b	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	       520	pei-x86_64.c	FUNCTION_71	IF_1
0x4001483	            0x742a	                            je 0x40014af	       520	pei-x86_64.c	FUNCTION_71	IF_1
0x4001485	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       521	pei-x86_64.c	FUNCTION_71	IF_1	CALL_1
0x400148c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       521	pei-x86_64.c	FUNCTION_71	IF_1	CALL_1
0x4001493	          0x4885c0	                           test rax, rax	       521	pei-x86_64.c	FUNCTION_71	IF_1	CALL_1
0x4001496	            0x7417	                            je 0x40014af	       521	pei-x86_64.c	FUNCTION_71	IF_1	CALL_1
0x4001498	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       522	pei-x86_64.c	FUNCTION_71	IF_1	CALL_2
0x400149f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       522	pei-x86_64.c	FUNCTION_71	IF_1	CALL_2
0x40014a6	        0x488b4058	            mov rax, qword [rax + 0x58] 	       522	pei-x86_64.c	FUNCTION_71	IF_1	CALL_2
0x40014aa	          0x4885c0	                           test rax, rax	       522	pei-x86_64.c	FUNCTION_71	IF_1	CALL_2
0x40014ad	            0x750a	                           jne 0x40014b9	       522	pei-x86_64.c	FUNCTION_71	IF_1	CALL_2
0x40014af	      0xb801000000	                              mov eax, 1	       523	pei-x86_64.c	FUNCTION_71	IF_1
0x40014b4	      0xe9470c0000	                           jmp 0x4002100	       523	pei-x86_64.c	FUNCTION_71	IF_1
0x40014b9	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       525	pei-x86_64.c	FUNCTION_71	CALL_3
0x40014c0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       525	pei-x86_64.c	FUNCTION_71	CALL_3
0x40014c7	        0x488b4058	            mov rax, qword [rax + 0x58] 	       525	pei-x86_64.c	FUNCTION_71	CALL_3
0x40014cb	          0x488b00	                    mov rax, qword [rax]	       525	pei-x86_64.c	FUNCTION_71	CALL_3
0x40014ce	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       525	pei-x86_64.c	FUNCTION_71	CALL_3
0x40014d5	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014db	          0x4863c8	                         movsxd rcx, eax	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014e5	      0xba00000000	                              mov edx, 0	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014ea	          0x48f7f1	                                 div rcx	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014ed	          0x4889d0	                            mov rax, rdx	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014f0	          0x4885c0	                           test rax, rax	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014f3	            0x7446	                            je 0x400153b	       526	pei-x86_64.c	FUNCTION_71	IF_2
0x40014f5	    0x4c8ba548ffff	             mov r12, qword [rbp - 0xb8]	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x40014fc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x4001503	          0x488b18	                    mov rbx, qword [rax]	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x4001506	      0xbe00000000	                              mov esi, 0	       529	pei-x86_64.c	FUNCTION_71	IF_2	CALL_5
0x400150b	      0xbf00000000	                              mov edi, 0	       529	pei-x86_64.c	FUNCTION_71	IF_2	CALL_5
0x4001510	      0xe800000000	                          call 0x4001515	       529	pei-x86_64.c	FUNCTION_71	IF_2	CALL_5
0x4001515	          0x4889c6	                            mov rsi, rax	       529	pei-x86_64.c	FUNCTION_71	IF_2	CALL_5
0x4001518	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x400151e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x4001525	          0x4189d0	                            mov r8d, edx	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x4001528	          0x4c89e1	                            mov rcx, r12	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x400152b	          0x4889da	                            mov rdx, rbx	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x400152e	          0x4889c7	                            mov rdi, rax	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x4001531	      0xb800000000	                              mov eax, 0	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x4001536	      0xe800000000	                          call 0x400153b	       527	pei-x86_64.c	FUNCTION_71	IF_2	CALL_4
0x400153b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       532	pei-x86_64.c	FUNCTION_71
0x4001542	        0x488b4038	            mov rax, qword [rax + 0x38] 	       532	pei-x86_64.c	FUNCTION_71
0x4001546	        0x48894580	             mov qword [rbp - 0x80], rax	       532	pei-x86_64.c	FUNCTION_71
0x400154a	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       533	pei-x86_64.c	FUNCTION_71	IF_3
0x400154f	            0x754a	                           jne 0x400159b	       533	pei-x86_64.c	FUNCTION_71	IF_3
0x4001551	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       535	pei-x86_64.c	FUNCTION_71	IF_3	IF_4
0x4001559	            0x7436	                            je 0x4001591	       535	pei-x86_64.c	FUNCTION_71	IF_3	IF_4
0x400155b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001562	          0x488b18	                    mov rbx, qword [rax]	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001565	      0xbe00000000	                              mov esi, 0	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x400156a	      0xbf00000000	                              mov edi, 0	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x400156f	      0xe800000000	                          call 0x4001574	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001574	          0x4889c1	                            mov rcx, rax	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001577	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x400157e	          0x4889da	                            mov rdx, rbx	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001581	          0x4889ce	                            mov rsi, rcx	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001584	          0x4889c7	                            mov rdi, rax	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001587	      0xb800000000	                              mov eax, 0	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x400158c	      0xe800000000	                          call 0x4001591	       536	pei-x86_64.c	FUNCTION_71	IF_3	IF_4	CALL_7
0x4001591	      0xb801000000	                              mov eax, 1	       538	pei-x86_64.c	FUNCTION_71	IF_3
0x4001596	      0xe9650b0000	                           jmp 0x4002100	       538	pei-x86_64.c	FUNCTION_71	IF_3
0x400159b	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015a3	            0x7556	                           jne 0x40015fb	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015a5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015ac	        0x488b4008	                mov rax, qword [rax + 8]	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015b0	          0x488b00	                    mov rax, qword [rax]	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015b3	      0xbe00000000	                              mov esi, 0	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015b8	          0x4889c7	                            mov rdi, rax	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015bb	      0xe800000000	                          call 0x40015c0	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015c0	            0x85c0	                           test eax, eax	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015c2	            0x7537	                           jne 0x40015fb	       542	pei-x86_64.c	FUNCTION_71	IF_5	CALL_8
0x40015c4	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015ca	          0x4863d8	                         movsxd rbx, eax	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015cd	        0x488b4580	             mov rax, qword [rbp - 0x80]	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015d1	      0xba00000000	                              mov edx, 0	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015d6	          0x48f7f3	                                 div rbx	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015d9	          0x4889c2	                            mov rdx, rax	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015dc	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015e2	            0x4898	                                    cdqe	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015e4	        0x480fafc2	                           imul rax, rdx	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015e8	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       544	pei-x86_64.c	FUNCTION_71	IF_5
0x40015ef	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	       545	pei-x86_64.c	FUNCTION_71	IF_5
0x40015f9	            0xeb6d	                           jmp 0x4001668	       545	pei-x86_64.c	FUNCTION_71	IF_5
0x40015fb	        0x488b4580	             mov rax, qword [rbp - 0x80]	       547	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x40015ff	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       547	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x4001606	            0x7360	                           jae 0x4001668	       547	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x4001608	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x400160f	          0x488b18	                    mov rbx, qword [rax]	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x4001612	      0xbe00000000	                              mov esi, 0	       551	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_10
0x4001617	      0xbf00000000	                              mov edi, 0	       551	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_10
0x400161c	      0xe800000000	                          call 0x4001621	       551	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_10
0x4001621	          0x4889c6	                            mov rsi, rax	       551	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_10
0x4001624	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x400162b	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x400162f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x4001636	          0x4989c8	                             mov r8, rcx	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x4001639	          0x4889d1	                            mov rcx, rdx	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x400163c	          0x4889da	                            mov rdx, rbx	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x400163f	          0x4889c7	                            mov rdi, rax	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x4001642	      0xb800000000	                              mov eax, 0	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x4001647	      0xe800000000	                          call 0x400164c	       549	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6	CALL_9
0x400164c	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       555	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x4001652	          0x4863d8	                         movsxd rbx, eax	       555	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x4001655	        0x488b4580	             mov rax, qword [rbp - 0x80]	       555	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x4001659	      0xba00000000	                              mov edx, 0	       555	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x400165e	          0x48f7f3	                                 div rbx	       555	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x4001661	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       555	pei-x86_64.c	FUNCTION_71	ELSE_1	IF_6
0x4001668	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x400166f	          0x488b18	                    mov rbx, qword [rax]	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x4001672	      0xbe00000000	                              mov esi, 0	       560	pei-x86_64.c	FUNCTION_71	CALL_12
0x4001677	      0xbf00000000	                              mov edi, 0	       560	pei-x86_64.c	FUNCTION_71	CALL_12
0x400167c	      0xe800000000	                          call 0x4001681	       560	pei-x86_64.c	FUNCTION_71	CALL_12
0x4001681	          0x4889c1	                            mov rcx, rax	       560	pei-x86_64.c	FUNCTION_71	CALL_12
0x4001684	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x400168b	          0x4889da	                            mov rdx, rbx	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x400168e	          0x4889ce	                            mov rsi, rcx	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x4001691	          0x4889c7	                            mov rdi, rax	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x4001694	      0xb800000000	                              mov eax, 0	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x4001699	      0xe800000000	                          call 0x400169e	       559	pei-x86_64.c	FUNCTION_71	CALL_11
0x400169e	      0xbe00000000	                              mov esi, 0	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016a3	      0xbf00000000	                              mov edi, 0	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016a8	      0xe800000000	                          call 0x40016ad	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016ad	          0x4889c2	                            mov rdx, rax	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016b0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016b7	          0x4889d6	                            mov rsi, rdx	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016ba	          0x4889c7	                            mov rdi, rax	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016bd	      0xb800000000	                              mov eax, 0	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016c2	      0xe800000000	                          call 0x40016c7	       563	pei-x86_64.c	FUNCTION_71	CALL_14
0x40016c7	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016ce	    0x488b8df8feff	            mov rcx, qword [rbp - 0x108]	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016d5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016dc	          0x4889ce	                            mov rsi, rcx	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016df	          0x4889c7	                            mov rdi, rax	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016e2	      0xe800000000	                          call 0x40016e7	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016e7	            0x85c0	                           test eax, eax	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016e9	     0xf84d5090000	                            je 0x40020c4	       565	pei-x86_64.c	FUNCTION_71	IF_7	CALL_15
0x40016ef	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x40016f5	          0x4863d8	                         movsxd rbx, eax	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x40016f8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x40016ff	      0xba00000000	                              mov edx, 0	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x4001704	          0x48f7f3	                                 div rbx	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x4001707	        0x4883c001	                              add rax, 1	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x400170b	        0x48c1e003	                              shl rax, 3	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x400170f	          0x4889c7	                            mov rdi, rax	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x4001712	      0xe800000000	                          call 0x4001717	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x4001717	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       569	pei-x86_64.c	FUNCTION_71	CALL_16
0x400171e	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	       570	pei-x86_64.c	FUNCTION_71
0x4001728	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x400172f	        0x488b4008	                mov rax, qword [rax + 8]	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x4001733	          0x488b00	                    mov rax, qword [rax]	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x4001736	      0xbe00000000	                              mov esi, 0	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x400173b	          0x4889c7	                            mov rdi, rax	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x400173e	      0xe800000000	                          call 0x4001743	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x4001743	            0x85c0	                           test eax, eax	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x4001745	            0x751e	                           jne 0x4001765	       572	pei-x86_64.c	FUNCTION_71	IF_8	CALL_17
0x4001747	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       573	pei-x86_64.c	FUNCTION_71	CALL_18
0x400174e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       573	pei-x86_64.c	FUNCTION_71	CALL_18
0x4001755	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       573	pei-x86_64.c	FUNCTION_71	CALL_18
0x400175c	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       573	pei-x86_64.c	FUNCTION_71	CALL_18
0x4001763	            0xeb0b	                           jmp 0x4001770	       573	pei-x86_64.c	FUNCTION_71	CALL_18
0x4001765	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       575	pei-x86_64.c	FUNCTION_71	ELSE_2
0x4001770	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400177b	      0xe9cb020000	                           jmp 0x4001a4b	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001780	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       581	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_9
0x4001787	        0x4883c00c	                            add rax, 0xc	       581	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_9
0x400178b	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       581	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_9
0x4001792	     0xf87c9020000	                            ja 0x4001a61	       581	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_9
0x4001798	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x400179f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x40017a6	          0x4801c2	                            add rdx, rax	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x40017a9	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x40017ad	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x40017b4	          0x4889ce	                            mov rsi, rcx	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x40017b7	          0x4889c7	                            mov rdi, rax	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x40017ba	      0xe8e2e8ffff	     call sym.pex64_get_runtime_function	       584	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_19
0x40017bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       586	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017c3	          0x4885c0	                           test rax, rax	       586	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017c6	            0x7516	                           jne 0x40017de	       586	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       586	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017cc	          0x4885c0	                           test rax, rax	       586	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017cf	            0x750d	                           jne 0x40017de	       586	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       587	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017d5	          0x4885c0	                           test rax, rax	       587	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017d8	     0xf8486020000	                            je 0x4001a64	       587	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x40017de	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       590	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_20
0x40017e5	          0x4889c6	                            mov rsi, rax	       590	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_20
0x40017e8	      0xbf20000000	                           mov edi, 0x20	       590	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_20
0x40017ed	      0xe800000000	                          call 0x40017f2	       590	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_20
0x40017f2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40017f9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40017fd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001804	          0x4801c2	                            add rdx, rax	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001807	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400180e	      0xbe00000000	                              mov esi, 0	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001813	          0x4889c7	                            mov rdi, rax	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001816	      0xb800000000	                              mov eax, 0	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400181b	      0xe800000000	                          call 0x4001820	       591	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001820	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       592	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_21
0x4001827	          0x4889c1	                            mov rcx, rax	       592	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_21
0x400182a	      0xba02000000	                              mov edx, 2	       592	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_21
0x400182f	      0xbe01000000	                              mov esi, 1	       592	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_21
0x4001834	      0xbf00000000	                              mov edi, 0	       592	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_21
0x4001839	      0xe800000000	                          call 0x400183e	       592	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_21
0x400183e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001842	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001849	          0x4801c2	                            add rdx, rax	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400184c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001853	      0xbe00000000	                              mov esi, 0	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001858	          0x4889c7	                            mov rdi, rax	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400185b	      0xb800000000	                              mov eax, 0	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001860	      0xe800000000	                          call 0x4001865	       593	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001865	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       594	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_22
0x400186c	          0x4889c6	                            mov rsi, rax	       594	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_22
0x400186f	      0xbf20000000	                           mov edi, 0x20	       594	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_22
0x4001874	      0xe800000000	                          call 0x4001879	       594	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_22
0x4001879	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400187d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001884	          0x4801c2	                            add rdx, rax	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001887	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400188e	      0xbe00000000	                              mov esi, 0	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001893	          0x4889c7	                            mov rdi, rax	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001896	      0xb800000000	                              mov eax, 0	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400189b	      0xe800000000	                          call 0x40018a0	       595	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018a0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       596	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_23
0x40018a7	          0x4889c6	                            mov rsi, rax	       596	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_23
0x40018aa	      0xbf20000000	                           mov edi, 0x20	       596	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_23
0x40018af	      0xe800000000	                          call 0x40018b4	       596	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_23
0x40018b4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018b8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018bf	          0x4801c2	                            add rdx, rax	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018c2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018c9	      0xbe00000000	                              mov esi, 0	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018ce	          0x4889c7	                            mov rdi, rax	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018d1	      0xb800000000	                              mov eax, 0	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018d6	      0xe800000000	                          call 0x40018db	       597	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x40018db	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       598	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_24
0x40018e2	          0x4889c6	                            mov rsi, rax	       598	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_24
0x40018e5	      0xbf0a000000	                            mov edi, 0xa	       598	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_24
0x40018ea	      0xe800000000	                          call 0x40018ef	       598	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	CALL_24
0x40018ef	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       599	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11
0x40018f7	            0x7449	                            je 0x4001942	       599	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11
0x40018f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       599	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11
0x40018fd	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       599	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11
0x4001904	            0x773c	                            ja 0x4001942	       599	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11
0x4001906	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	       601	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11
0x4001910	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       603	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11
0x4001914	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x400191b	            0x7307	                           jae 0x4001924	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x400191d	      0xba00000000	                              mov edx, 0	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x4001922	            0xeb05	                           jmp 0x4001929	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x4001924	      0xba00000000	                              mov edx, 0	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x4001929	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x4001930	      0xbe00000000	                              mov esi, 0	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x4001935	          0x4889c7	                            mov rdi, rax	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x4001938	      0xb800000000	                              mov eax, 0	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x400193d	      0xe800000000	                          call 0x4001942	       602	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_11	CALL_25
0x4001942	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       605	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001946	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       605	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x400194d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       607	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12
0x4001954	      0x2500000080	                     and eax, 0x80000000	       607	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12
0x4001959	          0x4885c0	                           test rax, rax	       607	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12
0x400195c	            0x7428	                            je 0x4001986	       607	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12
0x400195e	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	       609	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12
0x4001968	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       610	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12	CALL_26
0x400196f	          0x4889c1	                            mov rcx, rax	       610	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12	CALL_26
0x4001972	      0xba1d000000	                           mov edx, 0x1d	       610	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12	CALL_26
0x4001977	      0xbe01000000	                              mov esi, 1	       610	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12	CALL_26
0x400197c	      0xbf00000000	                              mov edi, 0	       610	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12	CALL_26
0x4001981	      0xe800000000	                          call 0x4001986	       610	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_12	CALL_26
0x4001986	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       612	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13
0x400198a	      0x2500000080	                     and eax, 0x80000000	       612	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13
0x400198f	          0x4885c0	                           test rax, rax	       612	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13
0x4001992	            0x7428	                            je 0x40019bc	       612	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13
0x4001994	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	       614	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13
0x400199e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       615	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13	CALL_27
0x40019a5	          0x4889c1	                            mov rcx, rax	       615	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13	CALL_27
0x40019a8	      0xba1b000000	                           mov edx, 0x1b	       615	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13	CALL_27
0x40019ad	      0xbe01000000	                              mov esi, 1	       615	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13	CALL_27
0x40019b2	      0xbf00000000	                              mov edi, 0	       615	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13	CALL_27
0x40019b7	      0xe800000000	                          call 0x40019bc	       615	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_13	CALL_27
0x40019bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       617	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14
0x40019c0	      0x2500000080	                     and eax, 0x80000000	       617	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14
0x40019c5	          0x4885c0	                           test rax, rax	       617	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14
0x40019c8	            0x742a	                            je 0x40019f4	       617	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14
0x40019ca	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	       619	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14
0x40019d4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       620	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14	CALL_28
0x40019db	          0x4889c1	                            mov rcx, rax	       620	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14	CALL_28
0x40019de	      0xba1e000000	                           mov edx, 0x1e	       620	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14	CALL_28
0x40019e3	      0xbe01000000	                              mov esi, 1	       620	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14	CALL_28
0x40019e8	      0xbf00000000	                              mov edi, 0	       620	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14	CALL_28
0x40019ed	      0xe800000000	                          call 0x40019f2	       620	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14	CALL_28
0x40019f2	            0xeb48	                           jmp 0x4001a3c	       620	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_14	CALL_28
0x40019f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       622	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15	CALL_29
0x40019f8	          0x4885c0	                           test rax, rax	       622	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15	CALL_29
0x40019fb	            0x740c	                            je 0x4001a09	       622	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15	CALL_29
0x40019fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       622	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15	CALL_29
0x4001a01	          0x83e001	                              and eax, 1	       622	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15	CALL_29
0x4001a04	          0x4885c0	                           test rax, rax	       622	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15	CALL_29
0x4001a07	            0x7409	                            je 0x4001a12	       622	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15	CALL_29
0x4001a09	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	       623	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a10	            0x742a	                            je 0x4001a3c	       623	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a12	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a18	          0x8d5001	                      lea edx, [rax + 1]	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a1b	    0x89951cffffff	             mov dword [rbp - 0xe4], edx	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a21	            0x4898	                                    cdqe	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a23	    0x488d14c50000	                        lea rdx, [rax*8]	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a2b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a32	          0x4801c2	                            add rdx, rax	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a39	          0x488902	                    mov qword [rdx], rax	       624	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	ELSE_3	IF_15
0x4001a3c	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001a42	            0x4898	                                    cdqe	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001a44	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001a4b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001a52	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001a59	     0xf8221fdffff	                            jb 0x4001780	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001a5f	            0xeb04	                           jmp 0x4001a65	       577	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1
0x4001a61	              0x90	                                     nop	       582	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_9
0x4001a62	            0xeb01	                           jmp 0x4001a65	       582	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_9
0x4001a64	              0x90	                                     nop	       589	pei-x86_64.c	FUNCTION_71	ELSE_2	FOR_1	IF_10
0x4001a65	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	       627	pei-x86_64.c	FUNCTION_71	IF_16
0x4001a6c	     0xf8555060000	                           jne 0x40020c7	       627	pei-x86_64.c	FUNCTION_71	IF_16
0x4001a72	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       631	pei-x86_64.c	FUNCTION_71
0x4001a78	          0x8d5001	                      lea edx, [rax + 1]	       631	pei-x86_64.c	FUNCTION_71
0x4001a7b	    0x89951cffffff	             mov dword [rbp - 0xe4], edx	       631	pei-x86_64.c	FUNCTION_71
0x4001a81	            0x4898	                                    cdqe	       631	pei-x86_64.c	FUNCTION_71
0x4001a83	    0x488d14c50000	                        lea rdx, [rax*8]	       631	pei-x86_64.c	FUNCTION_71
0x4001a8b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       631	pei-x86_64.c	FUNCTION_71
0x4001a92	          0x4801d0	                            add rax, rdx	       631	pei-x86_64.c	FUNCTION_71
0x4001a95	    0x48c700ffffff	     mov qword [rax], 0xffffffffffffffff	       631	pei-x86_64.c	FUNCTION_71
0x4001a9c	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	       634	pei-x86_64.c	FUNCTION_71	IF_17
0x4001aa3	            0x7e22	                           jle 0x4001ac7	       634	pei-x86_64.c	FUNCTION_71	IF_17
0x4001aa5	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       635	pei-x86_64.c	FUNCTION_71	IF_17	CALL_30
0x4001aab	          0x4863f0	                         movsxd rsi, eax	       635	pei-x86_64.c	FUNCTION_71	IF_17	CALL_30
0x4001aae	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       635	pei-x86_64.c	FUNCTION_71	IF_17	CALL_30
0x4001ab5	      0xb900000000	                              mov ecx, 0	       635	pei-x86_64.c	FUNCTION_71	IF_17	CALL_30
0x4001aba	      0xba08000000	                              mov edx, 8	       635	pei-x86_64.c	FUNCTION_71	IF_17	CALL_30
0x4001abf	          0x4889c7	                            mov rdi, rax	       635	pei-x86_64.c	FUNCTION_71	IF_17	CALL_30
0x4001ac2	      0xe800000000	                          call 0x4001ac7	       635	pei-x86_64.c	FUNCTION_71	IF_17	CALL_30
0x4001ac7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       639	pei-x86_64.c	FUNCTION_71
0x4001ace	          0x488b00	                    mov rax, qword [rax]	       639	pei-x86_64.c	FUNCTION_71
0x4001ad1	        0x48894588	             mov qword [rbp - 0x78], rax	       639	pei-x86_64.c	FUNCTION_71
0x4001ad5	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       642	pei-x86_64.c	FUNCTION_71	IF_18	CALL_31
0x4001adc	          0x488b00	                    mov rax, qword [rax]	       642	pei-x86_64.c	FUNCTION_71	IF_18	CALL_31
0x4001adf	      0xbe00000000	                              mov esi, 0	       642	pei-x86_64.c	FUNCTION_71	IF_18	CALL_31
0x4001ae4	          0x4889c7	                            mov rdi, rax	       642	pei-x86_64.c	FUNCTION_71	IF_18	CALL_31
0x4001ae7	      0xe800000000	                          call 0x4001aec	       642	pei-x86_64.c	FUNCTION_71	IF_18	CALL_31
0x4001aec	            0x85c0	                           test eax, eax	       642	pei-x86_64.c	FUNCTION_71	IF_18	CALL_31
0x4001aee	     0xf848e000000	                            je 0x4001b82	       642	pei-x86_64.c	FUNCTION_71	IF_18	CALL_31
0x4001af4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       644	pei-x86_64.c	FUNCTION_71	IF_18	CALL_32
0x4001afb	          0x488b00	                    mov rax, qword [rax]	       644	pei-x86_64.c	FUNCTION_71	IF_18	CALL_32
0x4001afe	          0x4889c7	                            mov rdi, rax	       644	pei-x86_64.c	FUNCTION_71	IF_18	CALL_32
0x4001b01	      0xe800000000	                          call 0x4001b06	       644	pei-x86_64.c	FUNCTION_71	IF_18	CALL_32
0x4001b06	        0x48894590	             mov qword [rbp - 0x70], rax	       644	pei-x86_64.c	FUNCTION_71	IF_18	CALL_32
0x4001b0a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       645	pei-x86_64.c	FUNCTION_71	IF_18	CALL_33
0x4001b0e	        0x4883c001	                              add rax, 1	       645	pei-x86_64.c	FUNCTION_71	IF_18	CALL_33
0x4001b12	          0x4889c7	                            mov rdi, rax	       645	pei-x86_64.c	FUNCTION_71	IF_18	CALL_33
0x4001b15	      0xe800000000	                          call 0x4001b1a	       645	pei-x86_64.c	FUNCTION_71	IF_18	CALL_33
0x4001b1a	        0x48894598	             mov qword [rbp - 0x68], rax	       645	pei-x86_64.c	FUNCTION_71	IF_18	CALL_33
0x4001b1e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b22	        0x488d5001	                      lea rdx, [rax + 1]	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b26	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b2d	          0x488b08	                    mov rcx, qword [rax]	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b30	        0x488b4598	             mov rax, qword [rbp - 0x68]	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b34	          0x4889ce	                            mov rsi, rcx	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b37	          0x4889c7	                            mov rdi, rax	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b3a	      0xe800000000	                          call 0x4001b3f	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b3f	        0x48894598	             mov qword [rbp - 0x68], rax	       647	pei-x86_64.c	FUNCTION_71	IF_18	CALL_34
0x4001b43	      0x48837d9001	               cmp qword [rbp - 0x70], 1	       649	pei-x86_64.c	FUNCTION_71	IF_18	IF_19
0x4001b48	            0x760b	                           jbe 0x4001b55	       649	pei-x86_64.c	FUNCTION_71	IF_18	IF_19
0x4001b4a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       650	pei-x86_64.c	FUNCTION_71	IF_18	IF_19
0x4001b4e	        0x4883c001	                              add rax, 1	       650	pei-x86_64.c	FUNCTION_71	IF_18	IF_19
0x4001b52	          0xc60078	                    mov byte [rax], 0x78	       650	pei-x86_64.c	FUNCTION_71	IF_18	IF_19
0x4001b55	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       651	pei-x86_64.c	FUNCTION_71	IF_18	CALL_35
0x4001b59	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       651	pei-x86_64.c	FUNCTION_71	IF_18	CALL_35
0x4001b5d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       651	pei-x86_64.c	FUNCTION_71	IF_18	CALL_35
0x4001b64	          0x4889ce	                            mov rsi, rcx	       651	pei-x86_64.c	FUNCTION_71	IF_18	CALL_35
0x4001b67	          0x4889c7	                            mov rdi, rax	       651	pei-x86_64.c	FUNCTION_71	IF_18	CALL_35
0x4001b6a	      0xe8aeefffff	       call sym.pex64_get_section_by_rva	       651	pei-x86_64.c	FUNCTION_71	IF_18	CALL_35
0x4001b6f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       651	pei-x86_64.c	FUNCTION_71	IF_18	CALL_35
0x4001b76	        0x488b4598	             mov rax, qword [rbp - 0x68]	       653	pei-x86_64.c	FUNCTION_71	IF_18	CALL_36
0x4001b7a	          0x4889c7	                            mov rdi, rax	       653	pei-x86_64.c	FUNCTION_71	IF_18	CALL_36
0x4001b7d	      0xe800000000	                          call 0x4001b82	       653	pei-x86_64.c	FUNCTION_71	IF_18	CALL_36
0x4001b82	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       656	pei-x86_64.c	FUNCTION_71	IF_20
0x4001b8a	            0x7522	                           jne 0x4001bae	       656	pei-x86_64.c	FUNCTION_71	IF_20
0x4001b8c	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       657	pei-x86_64.c	FUNCTION_71	CALL_37
0x4001b90	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       657	pei-x86_64.c	FUNCTION_71	CALL_37
0x4001b97	      0xba00000000	                              mov edx, 0	       657	pei-x86_64.c	FUNCTION_71	CALL_37
0x4001b9c	          0x4889ce	                            mov rsi, rcx	       657	pei-x86_64.c	FUNCTION_71	CALL_37
0x4001b9f	          0x4889c7	                            mov rdi, rax	       657	pei-x86_64.c	FUNCTION_71	CALL_37
0x4001ba2	      0xe876efffff	       call sym.pex64_get_section_by_rva	       657	pei-x86_64.c	FUNCTION_71	CALL_37
0x4001ba7	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       657	pei-x86_64.c	FUNCTION_71	CALL_37
0x4001bae	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       660	pei-x86_64.c	FUNCTION_71	IF_21
0x4001bb6	            0x7529	                           jne 0x4001be1	       660	pei-x86_64.c	FUNCTION_71	IF_21
0x4001bb8	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       660	pei-x86_64.c	FUNCTION_71	IF_21
0x4001bbd	            0x7422	                            je 0x4001be1	       660	pei-x86_64.c	FUNCTION_71	IF_21
0x4001bbf	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       661	pei-x86_64.c	FUNCTION_71	CALL_38
0x4001bc3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       661	pei-x86_64.c	FUNCTION_71	CALL_38
0x4001bca	      0xba00000000	                              mov edx, 0	       661	pei-x86_64.c	FUNCTION_71	CALL_38
0x4001bcf	          0x4889ce	                            mov rsi, rcx	       661	pei-x86_64.c	FUNCTION_71	CALL_38
0x4001bd2	          0x4889c7	                            mov rdi, rax	       661	pei-x86_64.c	FUNCTION_71	CALL_38
0x4001bd5	      0xe843efffff	       call sym.pex64_get_section_by_rva	       661	pei-x86_64.c	FUNCTION_71	CALL_38
0x4001bda	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       661	pei-x86_64.c	FUNCTION_71	CALL_38
0x4001be1	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       662	pei-x86_64.c	FUNCTION_71	IF_22
0x4001be9	            0x7529	                           jne 0x4001c14	       662	pei-x86_64.c	FUNCTION_71	IF_22
0x4001beb	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       662	pei-x86_64.c	FUNCTION_71	IF_22
0x4001bf0	            0x7422	                            je 0x4001c14	       662	pei-x86_64.c	FUNCTION_71	IF_22
0x4001bf2	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       663	pei-x86_64.c	FUNCTION_71	CALL_39
0x4001bf6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       663	pei-x86_64.c	FUNCTION_71	CALL_39
0x4001bfd	      0xba00000000	                              mov edx, 0	       663	pei-x86_64.c	FUNCTION_71	CALL_39
0x4001c02	          0x4889ce	                            mov rsi, rcx	       663	pei-x86_64.c	FUNCTION_71	CALL_39
0x4001c05	          0x4889c7	                            mov rdi, rax	       663	pei-x86_64.c	FUNCTION_71	CALL_39
0x4001c08	      0xe810efffff	       call sym.pex64_get_section_by_rva	       663	pei-x86_64.c	FUNCTION_71	CALL_39
0x4001c0d	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       663	pei-x86_64.c	FUNCTION_71	CALL_39
0x4001c14	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       664	pei-x86_64.c	FUNCTION_71	IF_23
0x4001c1c	            0x7529	                           jne 0x4001c47	       664	pei-x86_64.c	FUNCTION_71	IF_23
0x4001c1e	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       664	pei-x86_64.c	FUNCTION_71	IF_23
0x4001c23	            0x7422	                            je 0x4001c47	       664	pei-x86_64.c	FUNCTION_71	IF_23
0x4001c25	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       665	pei-x86_64.c	FUNCTION_71	CALL_40
0x4001c29	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       665	pei-x86_64.c	FUNCTION_71	CALL_40
0x4001c30	      0xba00000000	                              mov edx, 0	       665	pei-x86_64.c	FUNCTION_71	CALL_40
0x4001c35	          0x4889ce	                            mov rsi, rcx	       665	pei-x86_64.c	FUNCTION_71	CALL_40
0x4001c38	          0x4889c7	                            mov rdi, rax	       665	pei-x86_64.c	FUNCTION_71	CALL_40
0x4001c3b	      0xe8ddeeffff	       call sym.pex64_get_section_by_rva	       665	pei-x86_64.c	FUNCTION_71	CALL_40
0x4001c40	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       665	pei-x86_64.c	FUNCTION_71	CALL_40
0x4001c47	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       666	pei-x86_64.c	FUNCTION_71	IF_24
0x4001c4f	            0x7529	                           jne 0x4001c7a	       666	pei-x86_64.c	FUNCTION_71	IF_24
0x4001c51	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       666	pei-x86_64.c	FUNCTION_71	IF_24
0x4001c56	            0x7422	                            je 0x4001c7a	       666	pei-x86_64.c	FUNCTION_71	IF_24
0x4001c58	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       667	pei-x86_64.c	FUNCTION_71	CALL_41
0x4001c5c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       667	pei-x86_64.c	FUNCTION_71	CALL_41
0x4001c63	      0xba00000000	                              mov edx, 0	       667	pei-x86_64.c	FUNCTION_71	CALL_41
0x4001c68	          0x4889ce	                            mov rsi, rcx	       667	pei-x86_64.c	FUNCTION_71	CALL_41
0x4001c6b	          0x4889c7	                            mov rdi, rax	       667	pei-x86_64.c	FUNCTION_71	CALL_41
0x4001c6e	      0xe8aaeeffff	       call sym.pex64_get_section_by_rva	       667	pei-x86_64.c	FUNCTION_71	CALL_41
0x4001c73	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       667	pei-x86_64.c	FUNCTION_71	CALL_41
0x4001c7a	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       669	pei-x86_64.c	FUNCTION_71	IF_25
0x4001c82	     0xf8446040000	                            je 0x40020ce	       669	pei-x86_64.c	FUNCTION_71	IF_25
0x4001c88	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001c8f	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001c96	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001c9d	          0x4889ce	                            mov rsi, rcx	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001ca0	          0x4889c7	                            mov rdi, rax	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001ca3	      0xe800000000	                          call 0x4001ca8	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001ca8	            0x85c0	                           test eax, eax	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001caa	     0xf841e040000	                            je 0x40020ce	       670	pei-x86_64.c	FUNCTION_71	IF_25	CALL_42
0x4001cb0	    0x48c78558ffff	mov qword [rbp - 0xa8], 0xffffffffffffffff	       675	pei-x86_64.c	FUNCTION_71
0x4001cbb	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001cc6	      0xe9e3030000	                           jmp 0x40020ae	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001ccb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       682	pei-x86_64.c	FUNCTION_71	FOR_2	IF_26
0x4001cd2	        0x4883c00c	                            add rax, 0xc	       682	pei-x86_64.c	FUNCTION_71	FOR_2	IF_26
0x4001cd6	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       682	pei-x86_64.c	FUNCTION_71	FOR_2	IF_26
0x4001cdd	     0xf87e7030000	                            ja 0x40020ca	       682	pei-x86_64.c	FUNCTION_71	FOR_2	IF_26
0x4001ce3	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001cea	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001cf1	          0x4801c2	                            add rdx, rax	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001cf4	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001cf8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001cff	          0x4889ce	                            mov rsi, rcx	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001d02	          0x4889c7	                            mov rdi, rax	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001d05	      0xe897e3ffff	     call sym.pex64_get_runtime_function	       685	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_43
0x4001d0a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       687	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d0e	          0x4885c0	                           test rax, rax	       687	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d11	            0x7516	                           jne 0x4001d29	       687	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       687	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d17	          0x4885c0	                           test rax, rax	       687	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d1a	            0x750d	                           jne 0x4001d29	       687	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d1c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       688	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d20	          0x4885c0	                           test rax, rax	       688	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d23	     0xf84a4030000	                            je 0x40020cd	       688	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x4001d29	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       691	pei-x86_64.c	FUNCTION_71	FOR_2	IF_28
0x4001d31	            0x7536	                           jne 0x4001d69	       691	pei-x86_64.c	FUNCTION_71	FOR_2	IF_28
0x4001d33	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d3a	          0x488b18	                    mov rbx, qword [rax]	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d3d	      0xbe00000000	                              mov esi, 0	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d42	      0xbf00000000	                              mov edi, 0	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d47	      0xe800000000	                          call 0x4001d4c	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d4c	          0x4889c1	                            mov rcx, rax	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d4f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d56	          0x4889da	                            mov rdx, rbx	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d59	          0x4889ce	                            mov rsi, rcx	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d5c	          0x4889c7	                            mov rdi, rax	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d5f	      0xb800000000	                              mov eax, 0	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d64	      0xe800000000	                          call 0x4001d69	       692	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_45
0x4001d69	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       694	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_46
0x4001d70	          0x4889c6	                            mov rsi, rax	       694	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_46
0x4001d73	      0xbf20000000	                           mov edi, 0x20	       694	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_46
0x4001d78	      0xe800000000	                          call 0x4001d7d	       694	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_46
0x4001d7d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001d81	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001d88	          0x4801c2	                            add rdx, rax	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001d8b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001d92	      0xbe00000000	                              mov esi, 0	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001d97	          0x4889c7	                            mov rdi, rax	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001d9a	      0xb800000000	                              mov eax, 0	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001d9f	      0xe800000000	                          call 0x4001da4	       695	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001da4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       697	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001da8	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       697	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001daf	            0x755e	                           jne 0x4001e0f	       697	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001db1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       700	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_47
0x4001db8	          0x4889c1	                            mov rcx, rax	       700	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_47
0x4001dbb	      0xba1b000000	                           mov edx, 0x1b	       700	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_47
0x4001dc0	      0xbe01000000	                              mov esi, 1	       700	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_47
0x4001dc5	      0xbf00000000	                              mov edi, 0	       700	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_47
0x4001dca	      0xe800000000	                          call 0x4001dcf	       700	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_47
0x4001dcf	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001dd3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001dda	          0x4801c2	                            add rdx, rax	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001ddd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001de4	      0xbe00000000	                              mov esi, 0	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001de9	          0x4889c7	                            mov rdi, rax	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001dec	      0xb800000000	                              mov eax, 0	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001df1	      0xe800000000	                          call 0x4001df6	       701	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29
0x4001df6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       702	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_48
0x4001dfd	          0x4889c6	                            mov rsi, rax	       702	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_48
0x4001e00	      0xbf0a000000	                            mov edi, 0xa	       702	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_48
0x4001e05	      0xe800000000	                          call 0x4001e0a	       702	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_48
0x4001e0a	      0xe990020000	                           jmp 0x400209f	       702	pei-x86_64.c	FUNCTION_71	FOR_2	IF_29	CALL_48
0x4001e0f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       706	pei-x86_64.c	FUNCTION_71	FOR_2	ELSE_4
0x4001e13	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       706	pei-x86_64.c	FUNCTION_71	FOR_2	ELSE_4
0x4001e1a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       709	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e1e	            0x89c2	                            mov edx, eax	       708	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_49
0x4001e20	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       708	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_49
0x4001e27	      0xbe00000000	                              mov esi, 0	       708	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_49
0x4001e2c	          0x4889c7	                            mov rdi, rax	       708	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_49
0x4001e2f	      0xb800000000	                              mov eax, 0	       708	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_49
0x4001e34	      0xe800000000	                          call 0x4001e39	       708	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_49
0x4001e39	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e3d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e44	          0x4801c2	                            add rdx, rax	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e47	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e4e	      0xbe00000000	                              mov esi, 0	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e53	          0x4889c7	                            mov rdi, rax	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e56	      0xb800000000	                              mov eax, 0	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e5b	      0xe800000000	                          call 0x4001e60	       710	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e60	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       711	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_50
0x4001e67	          0x4889c1	                            mov rcx, rax	       711	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_50
0x4001e6a	      0xba03000000	                              mov edx, 3	       711	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_50
0x4001e6f	      0xbe01000000	                              mov esi, 1	       711	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_50
0x4001e74	      0xbf00000000	                              mov edi, 0	       711	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_50
0x4001e79	      0xe800000000	                          call 0x4001e7e	       711	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_50
0x4001e7e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e82	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e89	          0x4801c2	                            add rdx, rax	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e8c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e93	      0xbe00000000	                              mov esi, 0	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e98	          0x4889c7	                            mov rdi, rax	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001e9b	      0xb800000000	                              mov eax, 0	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001ea0	      0xe800000000	                          call 0x4001ea5	       712	pei-x86_64.c	FUNCTION_71	FOR_2
0x4001ea5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       713	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_51
0x4001eac	          0x4889c6	                            mov rsi, rax	       713	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_51
0x4001eaf	      0xbf0a000000	                            mov edi, 0xa	       713	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_51
0x4001eb4	      0xe800000000	                          call 0x4001eb9	       713	pei-x86_64.c	FUNCTION_71	FOR_2	CALL_51
0x4001eb9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       715	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30
0x4001ebd	          0x4885c0	                           test rax, rax	       715	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30
0x4001ec0	            0x750d	                           jne 0x4001ecf	       715	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30
0x4001ec2	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	       715	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30
0x4001ec9	     0xf84d0010000	                            je 0x400209f	       715	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30
0x4001ecf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       717	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_52
0x4001ed3	          0x83e001	                              and eax, 1	       717	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_52
0x4001ed6	          0x4885c0	                           test rax, rax	       717	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_52
0x4001ed9	     0xf8421010000	                            je 0x4002000	       717	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_52
0x4001edf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       719	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_53
0x4001ee3	        0x4883e0fe	             and rax, 0xfffffffffffffffe	       719	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_53
0x4001ee7	        0x488945a0	             mov qword [rbp - 0x60], rax	       719	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_53
0x4001eeb	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       720	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31
0x4001ef2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       720	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31
0x4001ef6	        0x488945a8	             mov qword [rbp - 0x58], rax	       720	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31
0x4001efa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       723	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_54
0x4001f01	          0x4889c1	                            mov rcx, rax	       723	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_54
0x4001f04	      0xba1a000000	                           mov edx, 0x1a	       723	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_54
0x4001f09	      0xbe01000000	                              mov esi, 1	       723	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_54
0x4001f0e	      0xbf00000000	                              mov edi, 0	       723	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_54
0x4001f13	      0xe800000000	                          call 0x4001f18	       723	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_54
0x4001f18	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       724	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31
0x4001f1f	        0x480145a0	            add qword [rbp - 0x60], rax 	       724	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31
0x4001f23	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       726	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f27	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       726	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f2b	     0xf828e000000	                            jb 0x4001fbf	       726	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f31	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       727	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f35	        0x488d480c	                    lea rcx, [rax + 0xc]	       727	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f39	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       728	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_55
0x4001f40	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       728	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_55
0x4001f47	        0x488b4058	            mov rax, qword [rax + 0x58] 	       728	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_55
0x4001f4b	          0x488b10	                    mov rdx, qword [rax]	       728	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_55
0x4001f4e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       728	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_55
0x4001f52	          0x4801d0	                            add rax, rdx	       728	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_55
0x4001f55	          0x4839c1	                            cmp rcx, rax	       727	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f58	            0x7765	                            ja 0x4001fbf	       727	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f5a	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       731	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f61	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       731	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f65	        0x482b45a8	             sub rax, qword [rbp - 0x58]	       731	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001f69	          0x4801c2	                            add rdx, rax	       730	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_56
0x4001f6c	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       730	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_56
0x4001f70	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       730	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_56
0x4001f77	          0x4889ce	                            mov rsi, rcx	       730	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_56
0x4001f7a	          0x4889c7	                            mov rdi, rax	       730	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_56
0x4001f7d	      0xe81fe1ffff	     call sym.pex64_get_runtime_function	       730	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_56
0x4001f82	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       732	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_57
0x4001f89	          0x4889c1	                            mov rcx, rax	       732	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_57
0x4001f8c	      0xba13000000	                           mov edx, 0x13	       732	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_57
0x4001f91	      0xbe01000000	                              mov esi, 1	       732	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_57
0x4001f96	      0xbf00000000	                              mov edi, 0	       732	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_57
0x4001f9b	      0xe800000000	                          call 0x4001fa0	       732	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32	CALL_57
0x4001fa0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       733	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001fa4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       733	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001fab	      0xbe00000000	                              mov esi, 0	       733	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001fb0	          0x4889c7	                            mov rdi, rax	       733	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001fb3	      0xb800000000	                              mov eax, 0	       733	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001fb8	      0xe800000000	                          call 0x4001fbd	       733	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001fbd	            0xeb1e	                           jmp 0x4001fdd	       733	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	IF_32
0x4001fbf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       736	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_58
0x4001fc6	          0x4889c1	                            mov rcx, rax	       736	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_58
0x4001fc9	      0xba15000000	                           mov edx, 0x15	       736	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_58
0x4001fce	      0xbe01000000	                              mov esi, 1	       736	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_58
0x4001fd3	      0xbf00000000	                              mov edi, 0	       736	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_58
0x4001fd8	      0xe800000000	                          call 0x4001fdd	       736	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_58
0x4001fdd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       737	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_59
0x4001fe4	          0x4889c1	                            mov rcx, rax	       737	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_59
0x4001fe7	      0xba02000000	                              mov edx, 2	       737	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_59
0x4001fec	      0xbe01000000	                              mov esi, 1	       737	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_59
0x4001ff1	      0xbf00000000	                              mov edi, 0	       737	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_59
0x4001ff6	      0xe800000000	                          call 0x4001ffb	       737	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_59
0x4001ffb	      0xe99f000000	                           jmp 0x400209f	       737	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	IF_31	CALL_59
0x4002000	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       745	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_60
0x4002006	          0x4863d0	                         movsxd rdx, eax	       745	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_60
0x4002009	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x4002010	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x4002014	        0x488d7910	                   lea rdi, [rcx + 0x10]	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x4002018	    0x41b800000000	                              mov r8d, 0	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x400201e	      0xb908000000	                              mov ecx, 8	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x4002023	          0x4889c6	                            mov rsi, rax	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x4002026	      0xe800000000	                          call 0x400202b	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x400202b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       744	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6
0x4002032	            0xeb08	                           jmp 0x400203c	       752	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	WHILE_1
0x4002034	    0x48838570ffff	               add qword [rbp - 0x90], 8	       753	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	WHILE_1
0x400203c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       752	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	WHILE_1
0x4002043	          0x488b10	                    mov rdx, qword [rax]	       752	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	WHILE_1
0x4002046	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       752	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	WHILE_1
0x400204a	          0x4839c2	                            cmp rdx, rax	       752	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	WHILE_1
0x400204d	            0x76e5	                           jbe 0x4002034	       752	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	WHILE_1
0x400204f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       755	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	IF_33
0x4002056	          0x488b00	                    mov rax, qword [rax]	       755	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	IF_33
0x4002059	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       755	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	IF_33
0x400205d	            0x750b	                           jne 0x400206a	       755	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	IF_33
0x400205f	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       756	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	IF_33
0x400206a	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x4002071	        0x4c8d45b0	                    lea r8, [rbp - 0x50]	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x4002075	    0x488bbd70ffff	             mov rdi, qword [rbp - 0x90]	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x400207c	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x4002083	    0x488bb508ffff	             mov rsi, qword [rbp - 0xf8]	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x400208a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x4002091	          0x4d89c1	                              mov r9, r8	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x4002094	          0x4989f8	                             mov r8, rdi	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x4002097	          0x4889c7	                            mov rdi, rax	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x400209a	      0xe842ebffff	               call sym.pex64_dump_xdata	       758	pei-x86_64.c	FUNCTION_71	FOR_2	IF_30	ELSE_6	CALL_61
0x400209f	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x40020a5	            0x4898	                                    cdqe	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x40020a7	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x40020ae	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x40020b5	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x40020bc	     0xf8209fcffff	                            jb 0x4001ccb	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x40020c2	            0xeb0a	                           jmp 0x40020ce	       678	pei-x86_64.c	FUNCTION_71	FOR_2
0x40020c4	              0x90	                                     nop	       566	pei-x86_64.c	FUNCTION_71	IF_7
0x40020c5	            0xeb07	                           jmp 0x40020ce	       566	pei-x86_64.c	FUNCTION_71	IF_7
0x40020c7	              0x90	                                     nop	       628	pei-x86_64.c	FUNCTION_71	IF_16
0x40020c8	            0xeb04	                           jmp 0x40020ce	       628	pei-x86_64.c	FUNCTION_71	IF_16
0x40020ca	              0x90	                                     nop	       683	pei-x86_64.c	FUNCTION_71	FOR_2	IF_26
0x40020cb	            0xeb01	                           jmp 0x40020ce	       683	pei-x86_64.c	FUNCTION_71	FOR_2	IF_26
0x40020cd	              0x90	                                     nop	       690	pei-x86_64.c	FUNCTION_71	FOR_2	IF_27
0x40020ce	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       764	pei-x86_64.c	FUNCTION_71	CALL_62
0x40020d5	          0x4889c7	                            mov rdi, rax	       764	pei-x86_64.c	FUNCTION_71	CALL_62
0x40020d8	      0xe800000000	                          call 0x40020dd	       764	pei-x86_64.c	FUNCTION_71	CALL_62
0x40020dd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       765	pei-x86_64.c	FUNCTION_71	CALL_63
0x40020e4	          0x4889c7	                            mov rdi, rax	       765	pei-x86_64.c	FUNCTION_71	CALL_63
0x40020e7	      0xe800000000	                          call 0x40020ec	       765	pei-x86_64.c	FUNCTION_71	CALL_63
0x40020ec	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       766	pei-x86_64.c	FUNCTION_71	CALL_64
0x40020f3	          0x4889c7	                            mov rdi, rax	       766	pei-x86_64.c	FUNCTION_71	CALL_64
0x40020f6	      0xe800000000	                          call 0x40020fb	       766	pei-x86_64.c	FUNCTION_71	CALL_64
0x40020fb	      0xb801000000	                              mov eax, 1	       768	pei-x86_64.c	FUNCTION_71
0x4002100	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       769	pei-x86_64.c	FUNCTION_71
0x4002104	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       769	pei-x86_64.c	FUNCTION_71
0x400210d	            0x7405	                            je 0x4002114	       769	pei-x86_64.c	FUNCTION_71
0x400210f	      0xe800000000	                          call 0x4002114	       769	pei-x86_64.c	FUNCTION_71
0x4002114	    0x4881c4000100	                          add rsp, 0x100	       769	pei-x86_64.c	FUNCTION_71
0x400211b	              0x5b	                                 pop rbx	       769	pei-x86_64.c	FUNCTION_71
0x400211c	            0x415c	                                 pop r12	       769	pei-x86_64.c	FUNCTION_71
0x400211e	              0x5d	                                 pop rbp	       769	pei-x86_64.c	FUNCTION_71
0x400211f	              0xc3	                                     ret	       769	pei-x86_64.c	FUNCTION_71
coff_set_flags	FOR,0:functions,0:WHILE,0:ELSE,2:SWITCH,5:IF,7:CALL,15:DO,0	19
0x40069be	              0x55	                                push rbp	      2640	coffcode.h	FUNCTION_22
0x40069bf	          0x4889e5	                            mov rbp, rsp	      2640	coffcode.h	FUNCTION_22
0x40069c2	        0x4883ec20	                           sub rsp, 0x20	      2640	coffcode.h	FUNCTION_22
0x40069c6	        0x48897df8	                mov qword [rbp - 8], rdi	      2640	coffcode.h	FUNCTION_22
0x40069ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2640	coffcode.h	FUNCTION_22
0x40069ce	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2640	coffcode.h	FUNCTION_22
0x40069d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2641	coffcode.h	FUNCTION_22	SWITCH_1	CALL_1
0x40069d6	          0x4889c7	                            mov rdi, rax	      2641	coffcode.h	FUNCTION_22	SWITCH_1	CALL_1
0x40069d9	      0xe800000000	                          call 0x40069de	      2641	coffcode.h	FUNCTION_22	SWITCH_1	CALL_1
0x40069de	          0x83f808	                              cmp eax, 8	      2641	coffcode.h	FUNCTION_22	SWITCH_1	CALL_1
0x40069e1	            0x7408	                            je 0x40069eb	      2641	coffcode.h	FUNCTION_22	SWITCH_1	CALL_1
0x40069e3	              0x90	                                     nop	      2827	coffcode.h	FUNCTION_22	SWITCH_1
0x40069e4	      0xb800000000	                              mov eax, 0	      2830	coffcode.h	FUNCTION_22
0x40069e9	            0xeb0f	                           jmp 0x40069fa	      2830	coffcode.h	FUNCTION_22
0x40069eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2768	coffcode.h	FUNCTION_22	SWITCH_1
0x40069ef	    0xc70064860000	                 mov dword [rax], 0x8664	      2768	coffcode.h	FUNCTION_22	SWITCH_1
0x40069f5	      0xb801000000	                              mov eax, 1	      2770	coffcode.h	FUNCTION_22	SWITCH_1
0x40069fa	              0xc9	                                   leave	      2831	coffcode.h	FUNCTION_22
0x40069fb	              0xc3	                                     ret	      2831	coffcode.h	FUNCTION_22
pe_bfd_copy_private_bfd_data	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,3:CALL,6:DO,0	48
0x40031ed	              0x55	                                push rbp	       352	peicode.h	FUNCTION_55
0x40031ee	          0x4889e5	                            mov rbp, rsp	       352	peicode.h	FUNCTION_55
0x40031f1	        0x4883ec10	                           sub rsp, 0x10	       352	peicode.h	FUNCTION_55
0x40031f5	        0x48897df8	                mov qword [rbp - 8], rdi	       352	peicode.h	FUNCTION_55
0x40031f9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       352	peicode.h	FUNCTION_55
0x40031fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	peicode.h	FUNCTION_55	IF_1	CALL_1
0x4003201	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       356	peicode.h	FUNCTION_55	IF_1	CALL_1
0x4003208	          0x4885c0	                           test rax, rax	       356	peicode.h	FUNCTION_55	IF_1	CALL_1
0x400320b	            0x744d	                            je 0x400325a	       356	peicode.h	FUNCTION_55	IF_1	CALL_1
0x400320d	        0x488b45f8	                mov rax, qword [rbp - 8]	       357	peicode.h	FUNCTION_55	IF_1	CALL_2
0x4003211	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       357	peicode.h	FUNCTION_55	IF_1	CALL_2
0x4003218	          0x4885c0	                           test rax, rax	       357	peicode.h	FUNCTION_55	IF_1	CALL_2
0x400321b	            0x743d	                            je 0x400325a	       357	peicode.h	FUNCTION_55	IF_1	CALL_2
0x400321d	        0x488b45f8	                mov rax, qword [rbp - 8]	       358	peicode.h	FUNCTION_55	IF_1	CALL_3
0x4003221	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       358	peicode.h	FUNCTION_55	IF_1	CALL_3
0x4003228	    0x8b8098020000	           mov eax, dword [rax + 0x298] 	       358	peicode.h	FUNCTION_55	IF_1	CALL_3
0x400322e	          0x83e020	                           and eax, 0x20	       358	peicode.h	FUNCTION_55	IF_1	CALL_3
0x4003231	            0x85c0	                           test eax, eax	       358	peicode.h	FUNCTION_55	IF_1	CALL_3
0x4003233	            0x7425	                            je 0x400325a	       358	peicode.h	FUNCTION_55	IF_1	CALL_3
0x4003235	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       359	peicode.h	FUNCTION_55	CALL_4
0x4003239	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       359	peicode.h	FUNCTION_55	CALL_4
0x4003240	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       359	peicode.h	FUNCTION_55	CALL_4
0x4003244	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	       359	peicode.h	FUNCTION_55	CALL_4
0x400324b	    0x8b9298020000	           mov edx, dword [rdx + 0x298] 	       359	peicode.h	FUNCTION_55	CALL_4
0x4003251	          0x83ca20	                            or edx, 0x20	       359	peicode.h	FUNCTION_55	CALL_4
0x4003254	    0x899098020000	            mov dword [rax + 0x298], edx	       359	peicode.h	FUNCTION_55	CALL_4
0x400325a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       361	peicode.h	FUNCTION_55	IF_2	CALL_5
0x400325e	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	peicode.h	FUNCTION_55	IF_2	CALL_5
0x4003262	          0x4889d6	                            mov rsi, rdx	       361	peicode.h	FUNCTION_55	IF_2	CALL_5
0x4003265	          0x4889c7	                            mov rdi, rax	       361	peicode.h	FUNCTION_55	IF_2	CALL_5
0x4003268	      0xe800000000	                          call 0x400326d	       361	peicode.h	FUNCTION_55	IF_2	CALL_5
0x400326d	            0x85c0	                           test eax, eax	       361	peicode.h	FUNCTION_55	IF_2	CALL_5
0x400326f	            0x7507	                           jne 0x4003278	       361	peicode.h	FUNCTION_55	IF_2	CALL_5
0x4003271	      0xb800000000	                              mov eax, 0	       362	peicode.h	FUNCTION_55	IF_2
0x4003276	            0xeb2a	                           jmp 0x40032a2	       362	peicode.h	FUNCTION_55	IF_2
0x4003278	    0x488b05000000	            mov rax, qword [0x0400327f] 	       364	peicode.h	FUNCTION_55	IF_3
0x400327f	          0x4885c0	                           test rax, rax	       364	peicode.h	FUNCTION_55	IF_3
0x4003282	            0x7419	                            je 0x400329d	       364	peicode.h	FUNCTION_55	IF_3
0x4003284	    0x488b05000000	            mov rax, qword [0x0400328b] 	       365	peicode.h	FUNCTION_55	CALL_6
0x400328b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       365	peicode.h	FUNCTION_55	CALL_6
0x400328f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       365	peicode.h	FUNCTION_55	CALL_6
0x4003293	          0x4889ce	                            mov rsi, rcx	       365	peicode.h	FUNCTION_55	CALL_6
0x4003296	          0x4889d7	                            mov rdi, rdx	       365	peicode.h	FUNCTION_55	CALL_6
0x4003299	            0xffd0	                                call rax	       365	peicode.h	FUNCTION_55	CALL_6
0x400329b	            0xeb05	                           jmp 0x40032a2	       365	peicode.h	FUNCTION_55	CALL_6
0x400329d	      0xb801000000	                              mov eax, 1	       367	peicode.h	FUNCTION_55
0x40032a2	              0xc9	                                   leave	       368	peicode.h	FUNCTION_55
0x40032a3	              0xc3	                                     ret	       368	peicode.h	FUNCTION_55
coff_new_section_hook	FOR,1:functions,0:WHILE,0:ELSE,2:SWITCH,0:IF,5:CALL,11:DO,0	50
0x400607a	              0x55	                                push rbp	      1750	coffcode.h	FUNCTION_12
0x400607b	          0x4889e5	                            mov rbp, rsp	      1750	coffcode.h	FUNCTION_12
0x400607e	        0x4883ec30	                           sub rsp, 0x30	      1750	coffcode.h	FUNCTION_12
0x4006082	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1750	coffcode.h	FUNCTION_12
0x4006086	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1750	coffcode.h	FUNCTION_12
0x400608a	        0xc645ef03	                mov byte [rbp - 0x11], 3	      1753	coffcode.h	FUNCTION_12
0x400608e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1755	coffcode.h	FUNCTION_12
0x4006092	    0xc74070020000	               mov dword [rax + 0x70], 2	      1755	coffcode.h	FUNCTION_12
0x4006099	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1780	coffcode.h	FUNCTION_12	IF_4	CALL_8
0x400609d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1780	coffcode.h	FUNCTION_12	IF_4	CALL_8
0x40060a1	          0x4889d6	                            mov rsi, rdx	      1780	coffcode.h	FUNCTION_12	IF_4	CALL_8
0x40060a4	          0x4889c7	                            mov rdi, rax	      1780	coffcode.h	FUNCTION_12	IF_4	CALL_8
0x40060a7	      0xe800000000	                          call 0x40060ac	      1780	coffcode.h	FUNCTION_12	IF_4	CALL_8
0x40060ac	            0x85c0	                           test eax, eax	      1780	coffcode.h	FUNCTION_12	IF_4	CALL_8
0x40060ae	            0x750a	                           jne 0x40060ba	      1780	coffcode.h	FUNCTION_12	IF_4	CALL_8
0x40060b0	      0xb800000000	                              mov eax, 0	      1781	coffcode.h	FUNCTION_12	IF_4
0x40060b5	      0xe984000000	                           jmp 0x400613e	      1781	coffcode.h	FUNCTION_12	IF_4
0x40060ba	    0x48c745f03002	          mov qword [rbp - 0x10], 0x230 	      1788	coffcode.h	FUNCTION_12
0x40060c2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1789	coffcode.h	FUNCTION_12	CALL_9
0x40060c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1789	coffcode.h	FUNCTION_12	CALL_9
0x40060ca	          0x4889d6	                            mov rsi, rdx	      1789	coffcode.h	FUNCTION_12	CALL_9
0x40060cd	          0x4889c7	                            mov rdi, rax	      1789	coffcode.h	FUNCTION_12	CALL_9
0x40060d0	      0xe800000000	                          call 0x40060d5	      1789	coffcode.h	FUNCTION_12	CALL_9
0x40060d5	        0x488945f8	                mov qword [rbp - 8], rax	      1789	coffcode.h	FUNCTION_12	CALL_9
0x40060d9	      0x48837df800	                  cmp qword [rbp - 8], 0	      1790	coffcode.h	FUNCTION_12	IF_5
0x40060de	            0x7507	                           jne 0x40060e7	      1790	coffcode.h	FUNCTION_12	IF_5
0x40060e0	      0xb800000000	                              mov eax, 0	      1791	coffcode.h	FUNCTION_12	IF_5
0x40060e5	            0xeb57	                           jmp 0x400613e	      1791	coffcode.h	FUNCTION_12	IF_5
0x40060e7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	coffcode.h	FUNCTION_12
0x40060eb	    0xc74030010000	               mov dword [rax + 0x30], 1	      1799	coffcode.h	FUNCTION_12
0x40060f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1800	coffcode.h	FUNCTION_12
0x40060f6	    0x66c740260000	                mov word [rax + 0x26], 0	      1800	coffcode.h	FUNCTION_12
0x40060fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	coffcode.h	FUNCTION_12
0x4006100	         0xfb655ef	            movzx edx, byte [rbp - 0x11]	      1801	coffcode.h	FUNCTION_12
0x4006104	          0x885028	               mov byte [rax + 0x28], dl	      1801	coffcode.h	FUNCTION_12
0x4006107	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1803	coffcode.h	FUNCTION_12	CALL_10
0x400610b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1803	coffcode.h	FUNCTION_12	CALL_10
0x4006112	          0x4889c2	                            mov rdx, rax	      1803	coffcode.h	FUNCTION_12	CALL_10
0x4006115	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	coffcode.h	FUNCTION_12	CALL_10
0x4006119	        0x48894230	             mov qword [rdx + 0x30], rax	      1803	coffcode.h	FUNCTION_12	CALL_10
0x400611d	      0xba0c000000	                            mov edx, 0xc	      1805	coffcode.h	FUNCTION_12	CALL_11
0x4006122	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1805	coffcode.h	FUNCTION_12	CALL_11
0x4006126	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1805	coffcode.h	FUNCTION_12	CALL_11
0x400612a	            0x89d1	                            mov ecx, edx	      1805	coffcode.h	FUNCTION_12	CALL_11
0x400612c	      0xba00000000	                              mov edx, 0	      1805	coffcode.h	FUNCTION_12	CALL_11
0x4006131	          0x4889c7	                            mov rdi, rax	      1805	coffcode.h	FUNCTION_12	CALL_11
0x4006134	      0xe88afdffff	call sym.coff_set_custom_section_alignment	      1805	coffcode.h	FUNCTION_12	CALL_11
0x4006139	      0xb801000000	                              mov eax, 1	      1809	coffcode.h	FUNCTION_12
0x400613e	              0xc9	                                   leave	      1810	coffcode.h	FUNCTION_12
0x400613f	              0xc3	                                     ret	      1810	coffcode.h	FUNCTION_12
coff_read_word	FOR,0:functions,0:WHILE,0:ELSE,1:SWITCH,0:IF,2:CALL,1:DO,0	47
0x40074a9	              0x55	                                push rbp	      3254	coffcode.h	FUNCTION_26
0x40074aa	          0x4889e5	                            mov rbp, rsp	      3254	coffcode.h	FUNCTION_26
0x40074ad	        0x4883ec30	                           sub rsp, 0x30	      3254	coffcode.h	FUNCTION_26
0x40074b1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3254	coffcode.h	FUNCTION_26
0x40074b5	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3254	coffcode.h	FUNCTION_26
0x40074b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3254	coffcode.h	FUNCTION_26
0x40074c2	        0x488945f8	                mov qword [rbp - 8], rax	      3254	coffcode.h	FUNCTION_26
0x40074c6	            0x31c0	                            xor eax, eax	      3254	coffcode.h	FUNCTION_26
0x40074c8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3258	coffcode.h	FUNCTION_26	CALL_1
0x40074cc	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3258	coffcode.h	FUNCTION_26	CALL_1
0x40074d0	      0xbe02000000	                              mov esi, 2	      3258	coffcode.h	FUNCTION_26	CALL_1
0x40074d5	          0x4889c7	                            mov rdi, rax	      3258	coffcode.h	FUNCTION_26	CALL_1
0x40074d8	      0xe800000000	                          call 0x40074dd	      3258	coffcode.h	FUNCTION_26	CALL_1
0x40074dd	          0x8945ec	             mov dword [rbp - 0x14], eax	      3258	coffcode.h	FUNCTION_26	CALL_1
0x40074e0	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3259	coffcode.h	FUNCTION_26	IF_1
0x40074e4	            0x7f11	                            jg 0x40074f7	      3259	coffcode.h	FUNCTION_26	IF_1
0x40074e6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3261	coffcode.h	FUNCTION_26	IF_1
0x40074ea	    0xc70000000000	                      mov dword [rax], 0	      3261	coffcode.h	FUNCTION_26	IF_1
0x40074f0	      0xb800000000	                              mov eax, 0	      3262	coffcode.h	FUNCTION_26	IF_1
0x40074f5	            0xeb46	                           jmp 0x400753d	      3262	coffcode.h	FUNCTION_26	IF_1
0x40074f7	        0x837dec01	               cmp dword [rbp - 0x14], 1	      3265	coffcode.h	FUNCTION_26	IF_2
0x40074fb	            0x750f	                           jne 0x400750c	      3265	coffcode.h	FUNCTION_26	IF_2
0x40074fd	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      3266	coffcode.h	FUNCTION_26	IF_2
0x4007501	           0xfb6d0	                           movzx edx, al	      3266	coffcode.h	FUNCTION_26	IF_2
0x4007504	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3266	coffcode.h	FUNCTION_26	IF_2
0x4007508	            0x8910	                    mov dword [rax], edx	      3266	coffcode.h	FUNCTION_26	IF_2
0x400750a	            0xeb1b	                           jmp 0x4007527	      3266	coffcode.h	FUNCTION_26	IF_2
0x400750c	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x4007510	           0xfb6c0	                           movzx eax, al	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x4007513	         0xfb655f1	             movzx edx, byte [rbp - 0xf]	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x4007517	           0xfb6d2	                           movzx edx, dl	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x400751a	          0xc1e208	                              shl edx, 8	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x400751d	             0x1d0	                            add eax, edx	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x400751f	            0x89c2	                            mov edx, eax	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x4007521	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x4007525	            0x8910	                    mov dword [rax], edx	      3268	coffcode.h	FUNCTION_26	ELSE_1
0x4007527	    0x8b1500000000	            mov edx, dword [0x0400752d] 	      3270	coffcode.h	FUNCTION_26
0x400752d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3270	coffcode.h	FUNCTION_26
0x4007530	             0x1d0	                            add eax, edx	      3270	coffcode.h	FUNCTION_26
0x4007532	    0x890500000000	            mov dword [0x04007538], eax 	      3270	coffcode.h	FUNCTION_26
0x4007538	      0xb801000000	                              mov eax, 1	      3272	coffcode.h	FUNCTION_26
0x400753d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3273	coffcode.h	FUNCTION_26
0x4007541	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3273	coffcode.h	FUNCTION_26
0x400754a	            0x7405	                            je 0x4007551	      3273	coffcode.h	FUNCTION_26
0x400754c	      0xe800000000	                          call 0x4007551	      3273	coffcode.h	FUNCTION_26
0x4007551	              0xc9	                                   leave	      3273	coffcode.h	FUNCTION_26
0x4007552	              0xc3	                                     ret	      3273	coffcode.h	FUNCTION_26
pex64_print_all_pdata_sections	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,2:CALL,1:DO,0	28
0x4002120	              0x55	                                push rbp	       780	pei-x86_64.c	FUNCTION_72
0x4002121	          0x4889e5	                            mov rbp, rsp	       780	pei-x86_64.c	FUNCTION_72
0x4002124	        0x4883ec20	                           sub rsp, 0x20	       780	pei-x86_64.c	FUNCTION_72
0x4002128	        0x48897df8	                mov qword [rbp - 8], rdi	       780	pei-x86_64.c	FUNCTION_72
0x400212c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       780	pei-x86_64.c	FUNCTION_72
0x4002130	        0x488955e8	             mov qword [rbp - 0x18], rdx	       780	pei-x86_64.c	FUNCTION_72
0x4002134	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x4002138	          0x488b00	                    mov rax, qword [rax]	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x400213b	      0xba06000000	                              mov edx, 6	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x4002140	      0xbe00000000	                              mov esi, 0	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x4002145	          0x4889c7	                            mov rdi, rax	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x4002148	      0xe800000000	                          call 0x400214d	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x400214d	            0x85c0	                           test eax, eax	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x400214f	            0x752a	                           jne 0x400217b	       781	pei-x86_64.c	FUNCTION_72	IF_1
0x4002151	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x4002155	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x4002159	        0x488b45f8	                mov rax, qword [rbp - 8]	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x400215d	          0x4889ce	                            mov rsi, rcx	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x4002160	          0x4889c7	                            mov rdi, rax	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x4002163	      0xe873f2ffff	  call sym.pex64_bfd_print_pdata_section	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x4002168	            0x85c0	                           test eax, eax	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x400216a	            0x740f	                            je 0x400217b	       783	pei-x86_64.c	FUNCTION_72	IF_1	IF_2	CALL_1
0x400216c	    0x8b0500000000	            mov eax, dword [0x04002172] 	       784	pei-x86_64.c	FUNCTION_72	IF_1	IF_2
0x4002172	          0x83c001	                              add eax, 1	       784	pei-x86_64.c	FUNCTION_72	IF_1	IF_2
0x4002175	    0x890500000000	            mov dword [0x0400217b], eax 	       784	pei-x86_64.c	FUNCTION_72	IF_1	IF_2
0x400217b	              0x90	                                     nop	       786	pei-x86_64.c	FUNCTION_72
0x400217c	              0xc9	                                   leave	       786	pei-x86_64.c	FUNCTION_72
0x400217d	              0xc3	                                     ret	       786	pei-x86_64.c	FUNCTION_72
pe_bfd_object_p	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,16:CALL,26:DO,0	229
0x4004ea6	              0x55	                                push rbp	      1382	peicode.h	FUNCTION_64
0x4004ea7	          0x4889e5	                            mov rbp, rsp	      1382	peicode.h	FUNCTION_64
0x4004eaa	    0x4881ec700c00	                          sub rsp, 0xc70	      1382	peicode.h	FUNCTION_64
0x4004eb1	    0x4889bd98f3ff	            mov qword [rbp - 0xc68], rdi	      1382	peicode.h	FUNCTION_64
0x4004eb8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1382	peicode.h	FUNCTION_64
0x4004ec1	        0x488945f8	                mov qword [rbp - 8], rax	      1382	peicode.h	FUNCTION_64
0x4004ec5	            0x31c0	                            xor eax, eax	      1382	peicode.h	FUNCTION_64
0x4004ec7	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1394	peicode.h	FUNCTION_64	IF_1	CALL_1
0x4004ece	      0xba00000000	                              mov edx, 0	      1394	peicode.h	FUNCTION_64	IF_1	CALL_1
0x4004ed3	      0xbe00000000	                              mov esi, 0	      1394	peicode.h	FUNCTION_64	IF_1	CALL_1
0x4004ed8	          0x4889c7	                            mov rdi, rax	      1394	peicode.h	FUNCTION_64	IF_1	CALL_1
0x4004edb	      0xe800000000	                          call 0x4004ee0	      1394	peicode.h	FUNCTION_64	IF_1	CALL_1
0x4004ee0	            0x85c0	                           test eax, eax	      1394	peicode.h	FUNCTION_64	IF_1	CALL_1
0x4004ee2	            0x751e	                           jne 0x4004f02	      1394	peicode.h	FUNCTION_64	IF_1	CALL_1
0x4004ee4	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1395	peicode.h	FUNCTION_64	IF_1	CALL_2
0x4004eeb	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1395	peicode.h	FUNCTION_64	IF_1	CALL_2
0x4004eef	      0xbe06000000	                              mov esi, 6	      1395	peicode.h	FUNCTION_64	IF_1	CALL_2
0x4004ef4	          0x4889c7	                            mov rdi, rax	      1395	peicode.h	FUNCTION_64	IF_1	CALL_2
0x4004ef7	      0xe800000000	                          call 0x4004efc	      1395	peicode.h	FUNCTION_64	IF_1	CALL_2
0x4004efc	        0x4883f806	                              cmp rax, 6	      1395	peicode.h	FUNCTION_64	IF_1	CALL_2
0x4004f00	            0x741e	                            je 0x4004f20	      1395	peicode.h	FUNCTION_64	IF_1	CALL_2
0x4004f02	      0xe800000000	                          call 0x4004f07	      1397	peicode.h	FUNCTION_64	IF_1	IF_2	CALL_3
0x4004f07	          0x83f801	                              cmp eax, 1	      1397	peicode.h	FUNCTION_64	IF_1	IF_2	CALL_3
0x4004f0a	            0x740a	                            je 0x4004f16	      1397	peicode.h	FUNCTION_64	IF_1	IF_2	CALL_3
0x4004f0c	      0xbf03000000	                              mov edi, 3	      1398	peicode.h	FUNCTION_64	IF_1	CALL_4
0x4004f11	      0xe800000000	                          call 0x4004f16	      1398	peicode.h	FUNCTION_64	IF_1	CALL_4
0x4004f16	      0xb800000000	                              mov eax, 0	      1399	peicode.h	FUNCTION_64	IF_1
0x4004f1b	      0xe9aa030000	                           jmp 0x40052ca	      1399	peicode.h	FUNCTION_64	IF_1
0x4004f20	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f27	        0x488b4008	                mov rax, qword [rax + 8]	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f2b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f32	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f36	          0x4889d7	                            mov rdi, rdx	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f39	            0xffd0	                                call rax	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f3b	          0x4889c2	                            mov rdx, rax	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f3e	      0xb80000ffff	                     mov eax, 0xffff0000	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f43	          0x4839c2	                            cmp rdx, rax	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f46	            0x7538	                           jne 0x4004f80	      1403	peicode.h	FUNCTION_64	IF_3
0x4004f48	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f4f	        0x488b4008	                mov rax, qword [rax + 8]	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f53	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f5a	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f5e	        0x4883c004	                              add rax, 4	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f62	          0x4889c7	                            mov rdi, rax	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f65	            0xffd2	                                call rdx	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f67	          0x4885c0	                           test rax, rax	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f6a	            0x7514	                           jne 0x4004f80	      1404	peicode.h	FUNCTION_64	IF_3
0x4004f6c	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1405	peicode.h	FUNCTION_64	CALL_5
0x4004f73	          0x4889c7	                            mov rdi, rax	      1405	peicode.h	FUNCTION_64	CALL_5
0x4004f76	      0xe8d4f7ffff	                call sym.pe_ILF_object_p	      1405	peicode.h	FUNCTION_64	CALL_5
0x4004f7b	      0xe94a030000	                           jmp 0x40052ca	      1405	peicode.h	FUNCTION_64	CALL_5
0x4004f80	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1407	peicode.h	FUNCTION_64	IF_4	CALL_6
0x4004f87	      0xba00000000	                              mov edx, 0	      1407	peicode.h	FUNCTION_64	IF_4	CALL_6
0x4004f8c	      0xbe00000000	                              mov esi, 0	      1407	peicode.h	FUNCTION_64	IF_4	CALL_6
0x4004f91	          0x4889c7	                            mov rdi, rax	      1407	peicode.h	FUNCTION_64	IF_4	CALL_6
0x4004f94	      0xe800000000	                          call 0x4004f99	      1407	peicode.h	FUNCTION_64	IF_4	CALL_6
0x4004f99	            0x85c0	                           test eax, eax	      1407	peicode.h	FUNCTION_64	IF_4	CALL_6
0x4004f9b	            0x7523	                           jne 0x4004fc0	      1407	peicode.h	FUNCTION_64	IF_4	CALL_6
0x4004f9d	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1408	peicode.h	FUNCTION_64	IF_4	CALL_7
0x4004fa4	    0x488d85f0f3ff	                  lea rax, [rbp - 0xc10]	      1408	peicode.h	FUNCTION_64	IF_4	CALL_7
0x4004fab	      0xbe80000000	                           mov esi, 0x80	      1408	peicode.h	FUNCTION_64	IF_4	CALL_7
0x4004fb0	          0x4889c7	                            mov rdi, rax	      1408	peicode.h	FUNCTION_64	IF_4	CALL_7
0x4004fb3	      0xe800000000	                          call 0x4004fb8	      1408	peicode.h	FUNCTION_64	IF_4	CALL_7
0x4004fb8	    0x483d80000000	                           cmp rax, 0x80	      1408	peicode.h	FUNCTION_64	IF_4	CALL_7
0x4004fbe	            0x741e	                            je 0x4004fde	      1408	peicode.h	FUNCTION_64	IF_4	CALL_7
0x4004fc0	      0xe800000000	                          call 0x4004fc5	      1411	peicode.h	FUNCTION_64	IF_4	IF_5	CALL_8
0x4004fc5	          0x83f801	                              cmp eax, 1	      1411	peicode.h	FUNCTION_64	IF_4	IF_5	CALL_8
0x4004fc8	            0x740a	                            je 0x4004fd4	      1411	peicode.h	FUNCTION_64	IF_4	IF_5	CALL_8
0x4004fca	      0xbf03000000	                              mov edi, 3	      1412	peicode.h	FUNCTION_64	IF_4	CALL_9
0x4004fcf	      0xe800000000	                          call 0x4004fd4	      1412	peicode.h	FUNCTION_64	IF_4	CALL_9
0x4004fd4	      0xb800000000	                              mov eax, 0	      1413	peicode.h	FUNCTION_64	IF_4
0x4004fd9	      0xe9ec020000	                           jmp 0x40052ca	      1413	peicode.h	FUNCTION_64	IF_4
0x4004fde	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1426	peicode.h	FUNCTION_64	IF_6
0x4004fe5	        0x488b4008	                mov rax, qword [rax + 8]	      1426	peicode.h	FUNCTION_64	IF_6
0x4004fe9	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1426	peicode.h	FUNCTION_64	IF_6
0x4004ff0	    0x488d95f0f3ff	                  lea rdx, [rbp - 0xc10]	      1426	peicode.h	FUNCTION_64	IF_6
0x4004ff7	          0x4889d7	                            mov rdi, rdx	      1426	peicode.h	FUNCTION_64	IF_6
0x4004ffa	            0xffd0	                                call rax	      1426	peicode.h	FUNCTION_64	IF_6
0x4004ffc	    0x483d4d5a0000	                         cmp rax, 0x5a4d	      1426	peicode.h	FUNCTION_64	IF_6
0x4005002	            0x7414	                            je 0x4005018	      1426	peicode.h	FUNCTION_64	IF_6
0x4005004	      0xbf03000000	                              mov edi, 3	      1428	peicode.h	FUNCTION_64	IF_6	CALL_10
0x4005009	      0xe800000000	                          call 0x400500e	      1428	peicode.h	FUNCTION_64	IF_6	CALL_10
0x400500e	      0xb800000000	                              mov eax, 0	      1429	peicode.h	FUNCTION_64	IF_6
0x4005013	      0xe9b2020000	                           jmp 0x40052ca	      1429	peicode.h	FUNCTION_64	IF_6
0x4005018	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1432	peicode.h	FUNCTION_64
0x400501f	        0x488b4008	                mov rax, qword [rax + 8]	      1432	peicode.h	FUNCTION_64
0x4005023	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1432	peicode.h	FUNCTION_64
0x400502a	    0x488d95f0f3ff	                  lea rdx, [rbp - 0xc10]	      1432	peicode.h	FUNCTION_64
0x4005031	        0x4883c23c	                           add rdx, 0x3c	      1432	peicode.h	FUNCTION_64
0x4005035	          0x4889d7	                            mov rdi, rdx	      1432	peicode.h	FUNCTION_64
0x4005038	            0xffd0	                                call rax	      1432	peicode.h	FUNCTION_64
0x400503a	    0x488985b0f3ff	            mov qword [rbp - 0xc50], rax	      1432	peicode.h	FUNCTION_64
0x4005041	    0x488b8db0f3ff	            mov rcx, qword [rbp - 0xc50]	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x4005048	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x400504f	      0xba00000000	                              mov edx, 0	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x4005054	          0x4889ce	                            mov rsi, rcx	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x4005057	          0x4889c7	                            mov rdi, rax	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x400505a	      0xe800000000	                          call 0x400505f	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x400505f	            0x85c0	                           test eax, eax	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x4005061	            0x7521	                           jne 0x4005084	      1433	peicode.h	FUNCTION_64	IF_7	CALL_11
0x4005063	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1434	peicode.h	FUNCTION_64	IF_7	CALL_12
0x400506a	    0x488d85d0f3ff	                  lea rax, [rbp - 0xc30]	      1434	peicode.h	FUNCTION_64	IF_7	CALL_12
0x4005071	      0xbe18000000	                           mov esi, 0x18	      1434	peicode.h	FUNCTION_64	IF_7	CALL_12
0x4005076	          0x4889c7	                            mov rdi, rax	      1434	peicode.h	FUNCTION_64	IF_7	CALL_12
0x4005079	      0xe800000000	                          call 0x400507e	      1434	peicode.h	FUNCTION_64	IF_7	CALL_12
0x400507e	        0x4883f818	                           cmp rax, 0x18	      1434	peicode.h	FUNCTION_64	IF_7	CALL_12
0x4005082	            0x741e	                            je 0x40050a2	      1434	peicode.h	FUNCTION_64	IF_7	CALL_12
0x4005084	      0xe800000000	                          call 0x4005089	      1437	peicode.h	FUNCTION_64	IF_7	IF_8	CALL_13
0x4005089	          0x83f801	                              cmp eax, 1	      1437	peicode.h	FUNCTION_64	IF_7	IF_8	CALL_13
0x400508c	            0x740a	                            je 0x4005098	      1437	peicode.h	FUNCTION_64	IF_7	IF_8	CALL_13
0x400508e	      0xbf03000000	                              mov edi, 3	      1438	peicode.h	FUNCTION_64	IF_7	CALL_14
0x4005093	      0xe800000000	                          call 0x4005098	      1438	peicode.h	FUNCTION_64	IF_7	CALL_14
0x4005098	      0xb800000000	                              mov eax, 0	      1439	peicode.h	FUNCTION_64	IF_7
0x400509d	      0xe928020000	                           jmp 0x40052ca	      1439	peicode.h	FUNCTION_64	IF_7
0x40050a2	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1442	peicode.h	FUNCTION_64	IF_9
0x40050a9	        0x488b4008	                mov rax, qword [rax + 8]	      1442	peicode.h	FUNCTION_64	IF_9
0x40050ad	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1442	peicode.h	FUNCTION_64	IF_9
0x40050b4	    0x488d95d0f3ff	                  lea rdx, [rbp - 0xc30]	      1442	peicode.h	FUNCTION_64	IF_9
0x40050bb	          0x4889d7	                            mov rdi, rdx	      1442	peicode.h	FUNCTION_64	IF_9
0x40050be	            0xffd0	                                call rax	      1442	peicode.h	FUNCTION_64	IF_9
0x40050c0	    0x483d50450000	                         cmp rax, 0x4550	      1442	peicode.h	FUNCTION_64	IF_9
0x40050c6	            0x7414	                            je 0x40050dc	      1442	peicode.h	FUNCTION_64	IF_9
0x40050c8	      0xbf03000000	                              mov edi, 3	      1444	peicode.h	FUNCTION_64	IF_9	CALL_15
0x40050cd	      0xe800000000	                          call 0x40050d2	      1444	peicode.h	FUNCTION_64	IF_9	CALL_15
0x40050d2	      0xb800000000	                              mov eax, 0	      1445	peicode.h	FUNCTION_64	IF_9
0x40050d7	      0xe9ee010000	                           jmp 0x40052ca	      1445	peicode.h	FUNCTION_64	IF_9
0x40050dc	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1450	peicode.h	FUNCTION_64	CALL_16
0x40050e3	        0x488b4008	                mov rax, qword [rax + 8]	      1450	peicode.h	FUNCTION_64	CALL_16
0x40050e7	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1450	peicode.h	FUNCTION_64	CALL_16
0x40050ee	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1450	peicode.h	FUNCTION_64	CALL_16
0x40050f5	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	      1450	peicode.h	FUNCTION_64	CALL_16
0x40050fc	    0x488db5d0f3ff	                  lea rsi, [rbp - 0xc30]	      1450	peicode.h	FUNCTION_64	CALL_16
0x4005103	    0x488b8d98f3ff	            mov rcx, qword [rbp - 0xc68]	      1450	peicode.h	FUNCTION_64	CALL_16
0x400510a	          0x4889cf	                            mov rdi, rcx	      1450	peicode.h	FUNCTION_64	CALL_16
0x400510d	            0xffd0	                                call rax	      1450	peicode.h	FUNCTION_64	CALL_16
0x400510f	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x4005116	        0x488b4008	                mov rax, qword [rax + 8]	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x400511a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x4005121	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x4005128	    0x488d8df0f6ff	                  lea rcx, [rbp - 0x910]	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x400512f	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x4005136	          0x4889ce	                            mov rsi, rcx	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x4005139	          0x4889d7	                            mov rdi, rdx	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x400513c	            0xffd0	                                call rax	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x400513e	            0x85c0	                           test eax, eax	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x4005140	            0x7420	                            je 0x4005162	      1452	peicode.h	FUNCTION_64	IF_10	CALL_17
0x4005142	         0xfb745e0	            movzx eax, word [rbp - 0x20]	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x4005146	           0xfb7d0	                           movzx edx, ax	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x4005149	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x4005150	        0x488b4008	                mov rax, qword [rax + 8]	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x4005154	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x400515b	          0x8b4054	            mov eax, dword [rax + 0x54] 	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x400515e	            0x39c2	                            cmp edx, eax	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x4005160	            0x7614	                           jbe 0x4005176	      1453	peicode.h	FUNCTION_64	IF_10	CALL_18
0x4005162	      0xbf03000000	                              mov edi, 3	      1455	peicode.h	FUNCTION_64	IF_10	CALL_19
0x4005167	      0xe800000000	                          call 0x400516c	      1455	peicode.h	FUNCTION_64	IF_10	CALL_19
0x400516c	      0xb800000000	                              mov eax, 0	      1456	peicode.h	FUNCTION_64	IF_10
0x4005171	      0xe954010000	                           jmp 0x40052ca	      1456	peicode.h	FUNCTION_64	IF_10
0x4005176	         0xfb745e0	            movzx eax, word [rbp - 0x20]	      1460	peicode.h	FUNCTION_64
0x400517a	           0xfb7c0	                           movzx eax, ax	      1460	peicode.h	FUNCTION_64
0x400517d	    0x488985b8f3ff	            mov qword [rbp - 0xc48], rax	      1460	peicode.h	FUNCTION_64
0x4005184	    0x4883bdb8f3ff	              cmp qword [rbp - 0xc48], 0	      1462	peicode.h	FUNCTION_64	IF_11
0x400518c	     0xf84e0000000	                            je 0x4005272	      1462	peicode.h	FUNCTION_64	IF_11
0x4005192	    0x488b85b8f3ff	            mov rax, qword [rbp - 0xc48]	      1464	peicode.h	FUNCTION_64	IF_11
0x4005199	    0x488985a8f3ff	            mov qword [rbp - 0xc58], rax	      1464	peicode.h	FUNCTION_64	IF_11
0x40051a0	    0x4881bda8f3ff	          cmp qword [rbp - 0xc58], 0xef 	      1468	peicode.h	FUNCTION_64	IF_11	IF_12
0x40051ab	            0x770b	                            ja 0x40051b8	      1468	peicode.h	FUNCTION_64	IF_11	IF_12
0x40051ad	    0x48c785a8f3ff	          mov qword [rbp - 0xc58], 0xf0 	      1469	peicode.h	FUNCTION_64	IF_11	IF_12
0x40051b8	    0x488b95a8f3ff	            mov rdx, qword [rbp - 0xc58]	      1471	peicode.h	FUNCTION_64	IF_11	CALL_20
0x40051bf	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1471	peicode.h	FUNCTION_64	IF_11	CALL_20
0x40051c6	          0x4889d6	                            mov rsi, rdx	      1471	peicode.h	FUNCTION_64	IF_11	CALL_20
0x40051c9	          0x4889c7	                            mov rdi, rax	      1471	peicode.h	FUNCTION_64	IF_11	CALL_20
0x40051cc	      0xe800000000	                          call 0x40051d1	      1471	peicode.h	FUNCTION_64	IF_11	CALL_20
0x40051d1	    0x488985c0f3ff	            mov qword [rbp - 0xc40], rax	      1471	peicode.h	FUNCTION_64	IF_11	CALL_20
0x40051d8	    0x4883bdc0f3ff	              cmp qword [rbp - 0xc40], 0	      1472	peicode.h	FUNCTION_64	IF_11	IF_13
0x40051e0	            0x750a	                           jne 0x40051ec	      1472	peicode.h	FUNCTION_64	IF_11	IF_13
0x40051e2	      0xb800000000	                              mov eax, 0	      1473	peicode.h	FUNCTION_64	IF_11	IF_13
0x40051e7	      0xe9de000000	                           jmp 0x40052ca	      1473	peicode.h	FUNCTION_64	IF_11	IF_13
0x40051ec	    0x488b8db8f3ff	            mov rcx, qword [rbp - 0xc48]	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x40051f3	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x40051fa	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x4005201	          0x4889ce	                            mov rsi, rcx	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x4005204	          0x4889c7	                            mov rdi, rax	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x4005207	      0xe800000000	                          call 0x400520c	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x400520c	          0x4889c2	                            mov rdx, rax	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x400520f	    0x488b85b8f3ff	            mov rax, qword [rbp - 0xc48]	      1475	peicode.h	FUNCTION_64	IF_11	IF_14
0x4005216	          0x4839c2	                            cmp rdx, rax	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x4005219	            0x740a	                            je 0x4005225	      1474	peicode.h	FUNCTION_64	IF_11	IF_14	CALL_21
0x400521b	      0xb800000000	                              mov eax, 0	      1476	peicode.h	FUNCTION_64	IF_11	IF_14
0x4005220	      0xe9a5000000	                           jmp 0x40052ca	      1476	peicode.h	FUNCTION_64	IF_11	IF_14
0x4005225	      0xbf00000000	                              mov edi, 0	      1478	peicode.h	FUNCTION_64	IF_11	CALL_22
0x400522a	      0xe800000000	                          call 0x400522f	      1478	peicode.h	FUNCTION_64	IF_11	CALL_22
0x400522f	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x4005236	        0x488b4008	                mov rax, qword [rax + 8]	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x400523a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x4005241	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x4005248	    0x488d9570f4ff	                  lea rdx, [rbp - 0xb90]	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x400524f	    0x488bb5c0f3ff	            mov rsi, qword [rbp - 0xc40]	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x4005256	    0x488b8d98f3ff	            mov rcx, qword [rbp - 0xc68]	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x400525d	          0x4889cf	                            mov rdi, rcx	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x4005260	            0xffd0	                                call rax	      1479	peicode.h	FUNCTION_64	IF_11	CALL_23
0x4005262	      0xe800000000	                          call 0x4005267	      1480	peicode.h	FUNCTION_64	IF_11	IF_15	CALL_24
0x4005267	            0x85c0	                           test eax, eax	      1480	peicode.h	FUNCTION_64	IF_11	IF_15	CALL_24
0x4005269	            0x7407	                            je 0x4005272	      1480	peicode.h	FUNCTION_64	IF_11	IF_15	CALL_24
0x400526b	      0xb800000000	                              mov eax, 0	      1481	peicode.h	FUNCTION_64	IF_11	IF_15
0x4005270	            0xeb58	                           jmp 0x40052ca	      1481	peicode.h	FUNCTION_64	IF_11	IF_15
0x4005272	    0x4883bdb8f3ff	              cmp qword [rbp - 0xc48], 0	      1485	peicode.h	FUNCTION_64	CALL_25
0x400527a	            0x7409	                            je 0x4005285	      1485	peicode.h	FUNCTION_64	CALL_25
0x400527c	    0x488d8570f4ff	                  lea rax, [rbp - 0xb90]	      1485	peicode.h	FUNCTION_64	CALL_25
0x4005283	            0xeb05	                           jmp 0x400528a	      1485	peicode.h	FUNCTION_64	CALL_25
0x4005285	      0xb800000000	                              mov eax, 0	      1485	peicode.h	FUNCTION_64	CALL_25
0x400528a	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      1485	peicode.h	FUNCTION_64	CALL_25
0x400528d	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	      1485	peicode.h	FUNCTION_64	CALL_25
0x4005294	    0x488bbd98f3ff	            mov rdi, qword [rbp - 0xc68]	      1485	peicode.h	FUNCTION_64	CALL_25
0x400529b	          0x4889c1	                            mov rcx, rax	      1485	peicode.h	FUNCTION_64	CALL_25
0x400529e	      0xe800000000	                          call 0x40052a3	      1485	peicode.h	FUNCTION_64	CALL_25
0x40052a3	    0x488985c8f3ff	            mov qword [rbp - 0xc38], rax	      1485	peicode.h	FUNCTION_64	CALL_25
0x40052aa	    0x4883bdc8f3ff	              cmp qword [rbp - 0xc38], 0	      1491	peicode.h	FUNCTION_64	IF_16
0x40052b2	            0x740f	                            je 0x40052c3	      1491	peicode.h	FUNCTION_64	IF_16
0x40052b4	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1494	peicode.h	FUNCTION_64	IF_16	CALL_26
0x40052bb	          0x4889c7	                            mov rdi, rax	      1494	peicode.h	FUNCTION_64	IF_16	CALL_26
0x40052be	      0xe856f8ffff	            call sym.pe_bfd_read_buildid	      1494	peicode.h	FUNCTION_64	IF_16	CALL_26
0x40052c3	    0x488b85c8f3ff	            mov rax, qword [rbp - 0xc38]	      1497	peicode.h	FUNCTION_64
0x40052ca	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1498	peicode.h	FUNCTION_64
0x40052ce	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1498	peicode.h	FUNCTION_64
0x40052d7	            0x7405	                            je 0x40052de	      1498	peicode.h	FUNCTION_64
0x40052d9	      0xe800000000	                          call 0x40052de	      1498	peicode.h	FUNCTION_64
0x40052de	              0xc9	                                   leave	      1498	peicode.h	FUNCTION_64
0x40052df	              0xc3	                                     ret	      1498	peicode.h	FUNCTION_64
bfd_set_section_vma	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,0:DO,0	19
0x4000040	              0x55	                                push rbp	      1686	bfd.h	FUNCTION_82
0x4000041	          0x4889e5	                            mov rbp, rsp	      1686	bfd.h	FUNCTION_82
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	      1686	bfd.h	FUNCTION_82
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1686	bfd.h	FUNCTION_82
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1686	bfd.h	FUNCTION_82
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_82
0x4000054	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1687	bfd.h	FUNCTION_82
0x4000058	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_82
0x400005c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_82
0x4000060	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1687	bfd.h	FUNCTION_82
0x4000064	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_82
0x4000068	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_82
0x400006c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1688	bfd.h	FUNCTION_82
0x4000070	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1688	bfd.h	FUNCTION_82
0x4000074	          0x83ca01	                               or edx, 1	      1688	bfd.h	FUNCTION_82
0x4000077	          0x885024	               mov byte [rax + 0x24], dl	      1688	bfd.h	FUNCTION_82
0x400007a	      0xb801000000	                              mov eax, 1	      1689	bfd.h	FUNCTION_82
0x400007f	              0x5d	                                 pop rbp	      1690	bfd.h	FUNCTION_82
0x4000080	              0xc3	                                     ret	      1690	bfd.h	FUNCTION_82
coff_compute_section_file_positions	FOR,7:functions,0:WHILE,0:ELSE,6:SWITCH,0:IF,34:CALL,44:DO,0	608
0x4006ae2	              0x55	                                push rbp	      2881	coffcode.h	FUNCTION_25
0x4006ae3	          0x4889e5	                            mov rbp, rsp	      2881	coffcode.h	FUNCTION_25
0x4006ae6	              0x53	                                push rbx	      2881	coffcode.h	FUNCTION_25
0x4006ae7	    0x4881ec980000	                           sub rsp, 0x98	      2881	coffcode.h	FUNCTION_25
0x4006aee	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      2881	coffcode.h	FUNCTION_25
0x4006af5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2881	coffcode.h	FUNCTION_25
0x4006afe	        0x488945e8	             mov qword [rbp - 0x18], rax	      2881	coffcode.h	FUNCTION_25
0x4006b02	            0x31c0	                            xor eax, eax	      2881	coffcode.h	FUNCTION_25
0x4006b04	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2883	coffcode.h	FUNCTION_25	CALL_1
0x4006b0b	        0x488b4008	                mov rax, qword [rax + 8]	      2883	coffcode.h	FUNCTION_25	CALL_1
0x4006b0f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2883	coffcode.h	FUNCTION_25	CALL_1
0x4006b16	          0x8b4050	            mov eax, dword [rax + 0x50] 	      2883	coffcode.h	FUNCTION_25	CALL_1
0x4006b19	            0x89c0	                            mov eax, eax	      2883	coffcode.h	FUNCTION_25	CALL_1
0x4006b1b	        0x48894598	             mov qword [rbp - 0x68], rax	      2883	coffcode.h	FUNCTION_25	CALL_1
0x4006b1f	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2887	coffcode.h	FUNCTION_25
0x4006b27	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2894	coffcode.h	FUNCTION_25	IF_1	CALL_2
0x4006b2e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2894	coffcode.h	FUNCTION_25	IF_1	CALL_2
0x4006b35	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2894	coffcode.h	FUNCTION_25	IF_1	CALL_2
0x4006b3c	          0x4885c0	                           test rax, rax	      2894	coffcode.h	FUNCTION_25	IF_1	CALL_2
0x4006b3f	            0x7531	                           jne 0x4006b72	      2894	coffcode.h	FUNCTION_25	IF_1	CALL_2
0x4006b41	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b48	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b4f	          0x4885c0	                           test rax, rax	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b52	     0xf8485000000	                            je 0x4006bdd	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b58	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b5f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b66	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b6d	          0x4885c0	                           test rax, rax	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b70	            0x746b	                            je 0x4006bdd	      2895	coffcode.h	FUNCTION_25	IF_1	CALL_4
0x4006b72	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2897	coffcode.h	FUNCTION_25	IF_1	CALL_5
0x4006b79	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2897	coffcode.h	FUNCTION_25	IF_1	CALL_5
0x4006b80	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      2897	coffcode.h	FUNCTION_25	IF_1	CALL_5
0x4006b87	          0x894584	             mov dword [rbp - 0x7c], eax	      2897	coffcode.h	FUNCTION_25	IF_1	CALL_5
0x4006b8a	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2901	coffcode.h	FUNCTION_25	IF_1	IF_2
0x4006b8e	            0x7507	                           jne 0x4006b97	      2901	coffcode.h	FUNCTION_25	IF_1	IF_2
0x4006b90	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      2902	coffcode.h	FUNCTION_25	IF_1	IF_2
0x4006b97	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2905	coffcode.h	FUNCTION_25	IF_1	IF_3
0x4006b9b	            0x7947	                           jns 0x4006be4	      2905	coffcode.h	FUNCTION_25	IF_1	IF_3
0x4006b9d	      0xbf13000000	                           mov edi, 0x13	      2907	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_6
0x4006ba2	      0xe800000000	                          call 0x4006ba7	      2907	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_6
0x4006ba7	      0xbe00000000	                              mov esi, 0	      2910	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_8
0x4006bac	      0xbf00000000	                              mov edi, 0	      2910	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_8
0x4006bb1	      0xe800000000	                          call 0x4006bb6	      2910	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_8
0x4006bb6	          0x4889c1	                            mov rcx, rax	      2910	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_8
0x4006bb9	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      2908	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_7
0x4006bbc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2908	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_7
0x4006bc3	          0x4889c6	                            mov rsi, rax	      2908	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_7
0x4006bc6	          0x4889cf	                            mov rdi, rcx	      2908	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_7
0x4006bc9	      0xb800000000	                              mov eax, 0	      2908	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_7
0x4006bce	      0xe800000000	                          call 0x4006bd3	      2908	coffcode.h	FUNCTION_25	IF_1	IF_3	CALL_7
0x4006bd3	      0xb800000000	                              mov eax, 0	      2911	coffcode.h	FUNCTION_25	IF_1	IF_3
0x4006bd8	      0xe9ae080000	                           jmp 0x400748b	      2911	coffcode.h	FUNCTION_25	IF_1	IF_3
0x4006bdd	    0xc74584000200	          mov dword [rbp - 0x7c], 0x200 	      2915	coffcode.h	FUNCTION_25	ELSE_1
0x4006be4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2962	coffcode.h	FUNCTION_25	IF_9
0x4006beb	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2962	coffcode.h	FUNCTION_25	IF_9
0x4006bf2	          0x4885c0	                           test rax, rax	      2962	coffcode.h	FUNCTION_25	IF_9
0x4006bf5	            0x7437	                            je 0x4006c2e	      2962	coffcode.h	FUNCTION_25	IF_9
0x4006bf7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006bfe	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c01	          0xc1e805	                              shr eax, 5	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c04	      0x25ffff0f00	                        and eax, 0xfffff	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c09	          0x83c802	                               or eax, 2	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c0c	            0x89c2	                            mov edx, eax	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c0e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c15	    0x81e2ffff0f00	                        and edx, 0xfffff	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c1b	            0x89d1	                            mov ecx, edx	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c1d	          0xc1e105	                              shl ecx, 5	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c20	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c23	    0x81e21f0000fe	                     and edx, 0xfe00001f	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c29	             0x9ca	                             or edx, ecx	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c2b	          0x895044	             mov dword [rax + 0x44], edx	      2965	coffcode.h	FUNCTION_25	IF_9
0x4006c2e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2967	coffcode.h	FUNCTION_25	IF_10
0x4006c35	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2967	coffcode.h	FUNCTION_25	IF_10
0x4006c38	          0xc1e805	                              shr eax, 5	      2967	coffcode.h	FUNCTION_25	IF_10
0x4006c3b	      0x25ffff0f00	                        and eax, 0xfffff	      2967	coffcode.h	FUNCTION_25	IF_10
0x4006c40	          0x83e002	                              and eax, 2	      2967	coffcode.h	FUNCTION_25	IF_10
0x4006c43	            0x85c0	                           test eax, eax	      2967	coffcode.h	FUNCTION_25	IF_10
0x4006c45	            0x741b	                            je 0x4006c62	      2967	coffcode.h	FUNCTION_25	IF_10
0x4006c47	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2968	coffcode.h	FUNCTION_25	CALL_16
0x4006c4e	        0x488b4008	                mov rax, qword [rax + 8]	      2968	coffcode.h	FUNCTION_25	CALL_16
0x4006c52	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2968	coffcode.h	FUNCTION_25	CALL_16
0x4006c59	          0x8b4054	            mov eax, dword [rax + 0x54] 	      2968	coffcode.h	FUNCTION_25	CALL_16
0x4006c5c	            0x89c0	                            mov eax, eax	      2968	coffcode.h	FUNCTION_25	CALL_16
0x4006c5e	        0x48014598	            add qword [rbp - 0x68], rax 	      2968	coffcode.h	FUNCTION_25	CALL_16
0x4006c62	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c69	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c6f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c76	        0x488b4008	                mov rax, qword [rax + 8]	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c7a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c81	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c84	           0xfafc2	                           imul eax, edx	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c87	            0x89c0	                            mov eax, eax	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c89	        0x48014598	            add qword [rbp - 0x68], rax 	      2976	coffcode.h	FUNCTION_25	CALL_19
0x4006c8d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3002	coffcode.h	FUNCTION_25	IF_13	CALL_21
0x4006c94	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3002	coffcode.h	FUNCTION_25	IF_13	CALL_21
0x4006c9b	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      3002	coffcode.h	FUNCTION_25	IF_13	CALL_21
0x4006ca2	    0x483dff0f0000	                          cmp rax, 0xfff	      3002	coffcode.h	FUNCTION_25	IF_13	CALL_21
0x4006ca8	            0x7739	                            ja 0x4006ce3	      3002	coffcode.h	FUNCTION_25	IF_13	CALL_21
0x4006caa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cb1	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cb4	          0xc1e805	                              shr eax, 5	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cb7	      0x25ffff0f00	                        and eax, 0xfffff	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cbc	      0x25fffe0f00	                        and eax, 0xffeff	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cc1	            0x89c2	                            mov edx, eax	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cc3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cca	    0x81e2ffff0f00	                        and edx, 0xfffff	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cd0	            0x89d1	                            mov ecx, edx	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cd2	          0xc1e105	                              shl ecx, 5	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cd5	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cd8	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006cde	             0x9ca	                             or edx, ecx	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006ce0	          0x895044	             mov dword [rax + 0x44], edx	      3003	coffcode.h	FUNCTION_25	IF_13
0x4006ce3	    0xc74588000000	               mov dword [rbp - 0x78], 0	      3006	coffcode.h	FUNCTION_25
0x4006cea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006cf1	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006cf8	        0x48894590	             mov qword [rbp - 0x70], rax	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006cfc	            0xeb10	                           jmp 0x4006d0e	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006cfe	        0x83458801	               add dword [rbp - 0x78], 1	      3008	coffcode.h	FUNCTION_25	FOR_3
0x4006d02	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006d06	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006d0a	        0x48894590	             mov qword [rbp - 0x70], rax	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006d0e	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006d13	            0x75e9	                           jne 0x4006cfe	      3007	coffcode.h	FUNCTION_25	FOR_3
0x4006d15	          0x8b4588	             mov eax, dword [rbp - 0x78]	      3011	coffcode.h	FUNCTION_25
0x4006d18	          0x83c001	                              add eax, 1	      3011	coffcode.h	FUNCTION_25
0x4006d1b	            0x89c0	                            mov eax, eax	      3011	coffcode.h	FUNCTION_25
0x4006d1d	        0x48c1e003	                              shl rax, 3	      3011	coffcode.h	FUNCTION_25
0x4006d21	        0x488945a8	             mov qword [rbp - 0x58], rax	      3011	coffcode.h	FUNCTION_25
0x4006d25	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3012	coffcode.h	FUNCTION_25	CALL_22
0x4006d29	          0x4889c7	                            mov rdi, rax	      3012	coffcode.h	FUNCTION_25	CALL_22
0x4006d2c	      0xe800000000	                          call 0x4006d31	      3012	coffcode.h	FUNCTION_25	CALL_22
0x4006d31	        0x488945b0	             mov qword [rbp - 0x50], rax	      3012	coffcode.h	FUNCTION_25	CALL_22
0x4006d35	      0x48837db000	               cmp qword [rbp - 0x50], 0	      3013	coffcode.h	FUNCTION_25	IF_14
0x4006d3a	            0x750a	                           jne 0x4006d46	      3013	coffcode.h	FUNCTION_25	IF_14
0x4006d3c	      0xb800000000	                              mov eax, 0	      3014	coffcode.h	FUNCTION_25	IF_14
0x4006d41	      0xe945070000	                           jmp 0x400748b	      3014	coffcode.h	FUNCTION_25	IF_14
0x4006d46	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      3016	coffcode.h	FUNCTION_25
0x4006d4d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d54	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d5b	        0x48894590	             mov qword [rbp - 0x70], rax	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d5f	            0xeb29	                           jmp 0x4006d8a	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d61	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3019	coffcode.h	FUNCTION_25	FOR_4
0x4006d64	    0x488d14c50000	                        lea rdx, [rax*8]	      3019	coffcode.h	FUNCTION_25	FOR_4
0x4006d6c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3019	coffcode.h	FUNCTION_25	FOR_4
0x4006d70	          0x4801c2	                            add rdx, rax	      3019	coffcode.h	FUNCTION_25	FOR_4
0x4006d73	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3019	coffcode.h	FUNCTION_25	FOR_4
0x4006d77	          0x488902	                    mov qword [rdx], rax	      3019	coffcode.h	FUNCTION_25	FOR_4
0x4006d7a	        0x83458c01	               add dword [rbp - 0x74], 1	      3020	coffcode.h	FUNCTION_25	FOR_4
0x4006d7e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d82	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d86	        0x48894590	             mov qword [rbp - 0x70], rax	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d8a	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d8f	            0x75d0	                           jne 0x4006d61	      3017	coffcode.h	FUNCTION_25	FOR_4
0x4006d91	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3022	coffcode.h	FUNCTION_25
0x4006d94	    0x488d14c50000	                        lea rdx, [rax*8]	      3022	coffcode.h	FUNCTION_25
0x4006d9c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3022	coffcode.h	FUNCTION_25
0x4006da0	          0x4801d0	                            add rax, rdx	      3022	coffcode.h	FUNCTION_25
0x4006da3	    0x48c700000000	                      mov qword [rax], 0	      3022	coffcode.h	FUNCTION_25
0x4006daa	          0x8b7588	             mov esi, dword [rbp - 0x78]	      3024	coffcode.h	FUNCTION_25	CALL_23
0x4006dad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3024	coffcode.h	FUNCTION_25	CALL_23
0x4006db1	      0xb900000000	                              mov ecx, 0	      3024	coffcode.h	FUNCTION_25	CALL_23
0x4006db6	      0xba08000000	                              mov edx, 8	      3024	coffcode.h	FUNCTION_25	CALL_23
0x4006dbb	          0x4889c7	                            mov rdi, rax	      3024	coffcode.h	FUNCTION_25	CALL_23
0x4006dbe	      0xe800000000	                          call 0x4006dc3	      3024	coffcode.h	FUNCTION_25	CALL_23
0x4006dc3	    0xc74580010000	               mov dword [rbp - 0x80], 1	      3028	coffcode.h	FUNCTION_25
0x4006dca	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3029	coffcode.h	FUNCTION_25
0x4006dd1	    0x48c780900000	               mov qword [rax + 0x90], 0	      3029	coffcode.h	FUNCTION_25
0x4006ddc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3030	coffcode.h	FUNCTION_25
0x4006de3	    0x48c780980000	               mov qword [rax + 0x98], 0	      3030	coffcode.h	FUNCTION_25
0x4006dee	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      3031	coffcode.h	FUNCTION_25	FOR_5
0x4006df5	      0xe9d0000000	                           jmp 0x4006eca	      3031	coffcode.h	FUNCTION_25	FOR_5
0x4006dfa	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3033	coffcode.h	FUNCTION_25	FOR_5
0x4006dfd	    0x488d14c50000	                        lea rdx, [rax*8]	      3033	coffcode.h	FUNCTION_25	FOR_5
0x4006e05	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3033	coffcode.h	FUNCTION_25	FOR_5
0x4006e09	          0x4801d0	                            add rax, rdx	      3033	coffcode.h	FUNCTION_25	FOR_5
0x4006e0c	          0x488b00	                    mov rax, qword [rax]	      3033	coffcode.h	FUNCTION_25	FOR_5
0x4006e0f	        0x48894590	             mov qword [rbp - 0x70], rax	      3033	coffcode.h	FUNCTION_25	FOR_5
0x4006e13	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e17	        0x488945b8	             mov qword [rbp - 0x48], rax	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e1b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e22	        0x488945c0	             mov qword [rbp - 0x40], rax	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e26	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e2a	    0x48c740100000	               mov qword [rax + 0x10], 0	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e32	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e36	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e3d	          0x4885c0	                           test rax, rax	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e40	            0x7428	                            je 0x4006e6a	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e42	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e46	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e4d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e51	        0x48895018	             mov qword [rax + 0x18], rdx	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e55	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e59	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e60	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e64	        0x48895010	             mov qword [rax + 0x10], rdx	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e68	            0xeb1b	                           jmp 0x4006e85	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e6a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e6e	    0x48c740180000	               mov qword [rax + 0x18], 0	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e76	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e7a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e7e	    0x488990900000	             mov qword [rax + 0x90], rdx	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e85	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e89	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e8d	    0x488990980000	             mov qword [rax + 0x98], rdx	      3034	coffcode.h	FUNCTION_25	FOR_5
0x4006e94	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3041	coffcode.h	FUNCTION_25	FOR_5	IF_15
0x4006e98	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3041	coffcode.h	FUNCTION_25	FOR_5	IF_15
0x4006e9c	          0x4885c0	                           test rax, rax	      3041	coffcode.h	FUNCTION_25	FOR_5	IF_15
0x4006e9f	            0x7510	                           jne 0x4006eb1	      3041	coffcode.h	FUNCTION_25	FOR_5	IF_15
0x4006ea1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3048	coffcode.h	FUNCTION_25	FOR_5	IF_15
0x4006ea5	    0xc780d8000000	               mov dword [rax + 0xd8], 1	      3048	coffcode.h	FUNCTION_25	FOR_5	IF_15
0x4006eaf	            0xeb15	                           jmp 0x4006ec6	      3048	coffcode.h	FUNCTION_25	FOR_5	IF_15
0x4006eb1	          0x8b4580	             mov eax, dword [rbp - 0x80]	      3051	coffcode.h	FUNCTION_25	FOR_5	ELSE_4
0x4006eb4	          0x8d5001	                      lea edx, [rax + 1]	      3051	coffcode.h	FUNCTION_25	FOR_5	ELSE_4
0x4006eb7	          0x895580	             mov dword [rbp - 0x80], edx	      3051	coffcode.h	FUNCTION_25	FOR_5	ELSE_4
0x4006eba	            0x89c2	                            mov edx, eax	      3051	coffcode.h	FUNCTION_25	FOR_5	ELSE_4
0x4006ebc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3051	coffcode.h	FUNCTION_25	FOR_5	ELSE_4
0x4006ec0	    0x8990d8000000	             mov dword [rax + 0xd8], edx	      3051	coffcode.h	FUNCTION_25	FOR_5	ELSE_4
0x4006ec6	        0x83458c01	               add dword [rbp - 0x74], 1	      3031	coffcode.h	FUNCTION_25	FOR_5
0x4006eca	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3031	coffcode.h	FUNCTION_25	FOR_5
0x4006ecd	          0x3b4588	             cmp eax, dword [rbp - 0x78]	      3031	coffcode.h	FUNCTION_25	FOR_5
0x4006ed0	     0xf8224ffffff	                            jb 0x4006dfa	      3031	coffcode.h	FUNCTION_25	FOR_5
0x4006ed6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3054	coffcode.h	FUNCTION_25	CALL_24
0x4006eda	          0x4889c7	                            mov rdi, rax	      3054	coffcode.h	FUNCTION_25	CALL_24
0x4006edd	      0xe800000000	                          call 0x4006ee2	      3054	coffcode.h	FUNCTION_25	CALL_24
0x4006ee2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3065	coffcode.h	FUNCTION_25	IF_16	CALL_25
0x4006ee9	        0x488b4008	                mov rax, qword [rax + 8]	      3065	coffcode.h	FUNCTION_25	IF_16	CALL_25
0x4006eed	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3065	coffcode.h	FUNCTION_25	IF_16	CALL_25
0x4006ef4	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      3065	coffcode.h	FUNCTION_25	IF_16	CALL_25
0x4006efa	          0x3b4580	             cmp eax, dword [rbp - 0x80]	      3065	coffcode.h	FUNCTION_25	IF_16	CALL_25
0x4006efd	            0x7740	                            ja 0x4006f3f	      3065	coffcode.h	FUNCTION_25	IF_16	CALL_25
0x4006eff	      0xbf13000000	                           mov edi, 0x13	      3067	coffcode.h	FUNCTION_25	IF_16	CALL_26
0x4006f04	      0xe800000000	                          call 0x4006f09	      3067	coffcode.h	FUNCTION_25	IF_16	CALL_26
0x4006f09	      0xbe00000000	                              mov esi, 0	      3070	coffcode.h	FUNCTION_25	IF_16	CALL_28
0x4006f0e	      0xbf00000000	                              mov edi, 0	      3070	coffcode.h	FUNCTION_25	IF_16	CALL_28
0x4006f13	      0xe800000000	                          call 0x4006f18	      3070	coffcode.h	FUNCTION_25	IF_16	CALL_28
0x4006f18	          0x4889c1	                            mov rcx, rax	      3070	coffcode.h	FUNCTION_25	IF_16	CALL_28
0x4006f1b	          0x8b5580	             mov edx, dword [rbp - 0x80]	      3068	coffcode.h	FUNCTION_25	IF_16	CALL_27
0x4006f1e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3068	coffcode.h	FUNCTION_25	IF_16	CALL_27
0x4006f25	          0x4889c6	                            mov rsi, rax	      3068	coffcode.h	FUNCTION_25	IF_16	CALL_27
0x4006f28	          0x4889cf	                            mov rdi, rcx	      3068	coffcode.h	FUNCTION_25	IF_16	CALL_27
0x4006f2b	      0xb800000000	                              mov eax, 0	      3068	coffcode.h	FUNCTION_25	IF_16	CALL_27
0x4006f30	      0xe800000000	                          call 0x4006f35	      3068	coffcode.h	FUNCTION_25	IF_16	CALL_27
0x4006f35	      0xb800000000	                              mov eax, 0	      3071	coffcode.h	FUNCTION_25	IF_16
0x4006f3a	      0xe94c050000	                           jmp 0x400748b	      3071	coffcode.h	FUNCTION_25	IF_16
0x4006f3f	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      3074	coffcode.h	FUNCTION_25
0x4006f49	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3075	coffcode.h	FUNCTION_25	FOR_7
0x4006f50	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3075	coffcode.h	FUNCTION_25	FOR_7
0x4006f57	        0x48894590	             mov qword [rbp - 0x70], rax	      3075	coffcode.h	FUNCTION_25	FOR_7
0x4006f5b	      0xe96f040000	                           jmp 0x40073cf	      3075	coffcode.h	FUNCTION_25	FOR_7
0x4006f60	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3082	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_29
0x4006f64	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3082	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_29
0x4006f6b	          0x4885c0	                           test rax, rax	      3082	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_29
0x4006f6e	            0x7546	                           jne 0x4006fb6	      3082	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_29
0x4006f70	    0x48c745e06000	           mov qword [rbp - 0x20], 0x60 	      3084	coffcode.h	FUNCTION_25	FOR_7	IF_17
0x4006f78	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f7c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f83	          0x4889d6	                            mov rsi, rdx	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f86	          0x4889c7	                            mov rdi, rax	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f89	      0xe800000000	                          call 0x4006f8e	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f8e	          0x4889c2	                            mov rdx, rax	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f91	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f95	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      3086	coffcode.h	FUNCTION_25	FOR_7	IF_17	CALL_30
0x4006f9c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3087	coffcode.h	FUNCTION_25	FOR_7	IF_17	IF_18
0x4006fa0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3087	coffcode.h	FUNCTION_25	FOR_7	IF_17	IF_18
0x4006fa7	          0x4885c0	                           test rax, rax	      3087	coffcode.h	FUNCTION_25	FOR_7	IF_17	IF_18
0x4006faa	            0x750a	                           jne 0x4006fb6	      3087	coffcode.h	FUNCTION_25	FOR_7	IF_17	IF_18
0x4006fac	      0xb800000000	                              mov eax, 0	      3088	coffcode.h	FUNCTION_25	FOR_7	IF_17	IF_18
0x4006fb1	      0xe9d5040000	                           jmp 0x400748b	      3088	coffcode.h	FUNCTION_25	FOR_7	IF_17	IF_18
0x4006fb6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3090	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_31
0x4006fba	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3090	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_31
0x4006fc1	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3090	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_31
0x4006fc5	          0x4885c0	                           test rax, rax	      3090	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_31
0x4006fc8	            0x754b	                           jne 0x4007015	      3090	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_31
0x4006fca	    0x48c745c81000	           mov qword [rbp - 0x38], 0x10 	      3092	coffcode.h	FUNCTION_25	FOR_7	IF_19
0x4006fd2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006fd6	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006fdd	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006fe1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006fe8	          0x4889d6	                            mov rsi, rdx	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006feb	          0x4889c7	                            mov rdi, rax	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006fee	      0xe800000000	                          call 0x4006ff3	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006ff3	        0x48894358	             mov qword [rbx + 0x58], rax	      3094	coffcode.h	FUNCTION_25	FOR_7	IF_19	CALL_33
0x4006ff7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3095	coffcode.h	FUNCTION_25	FOR_7	IF_19	IF_20	CALL_34
0x4006ffb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3095	coffcode.h	FUNCTION_25	FOR_7	IF_19	IF_20	CALL_34
0x4007002	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3095	coffcode.h	FUNCTION_25	FOR_7	IF_19	IF_20	CALL_34
0x4007006	          0x4885c0	                           test rax, rax	      3095	coffcode.h	FUNCTION_25	FOR_7	IF_19	IF_20	CALL_34
0x4007009	            0x750a	                           jne 0x4007015	      3095	coffcode.h	FUNCTION_25	FOR_7	IF_19	IF_20	CALL_34
0x400700b	      0xb800000000	                              mov eax, 0	      3096	coffcode.h	FUNCTION_25	FOR_7	IF_19	IF_20
0x4007010	      0xe976040000	                           jmp 0x400748b	      3096	coffcode.h	FUNCTION_25	FOR_7	IF_19	IF_20
0x4007015	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3098	coffcode.h	FUNCTION_25	FOR_7	IF_21	CALL_35
0x4007019	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3098	coffcode.h	FUNCTION_25	FOR_7	IF_21	CALL_35
0x4007020	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3098	coffcode.h	FUNCTION_25	FOR_7	IF_21	CALL_35
0x4007024	          0x488b00	                    mov rax, qword [rax]	      3098	coffcode.h	FUNCTION_25	FOR_7	IF_21	CALL_35
0x4007027	          0x4885c0	                           test rax, rax	      3098	coffcode.h	FUNCTION_25	FOR_7	IF_21	CALL_35
0x400702a	            0x751a	                           jne 0x4007046	      3098	coffcode.h	FUNCTION_25	FOR_7	IF_21	CALL_35
0x400702c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3099	coffcode.h	FUNCTION_25	FOR_7	CALL_36
0x4007030	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3099	coffcode.h	FUNCTION_25	FOR_7	CALL_36
0x4007037	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3099	coffcode.h	FUNCTION_25	FOR_7	CALL_36
0x400703b	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3099	coffcode.h	FUNCTION_25	FOR_7	CALL_36
0x400703f	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3099	coffcode.h	FUNCTION_25	FOR_7	CALL_36
0x4007043	          0x488910	                    mov qword [rax], rdx	      3099	coffcode.h	FUNCTION_25	FOR_7	CALL_36
0x4007046	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3103	coffcode.h	FUNCTION_25	FOR_7	IF_22
0x400704a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3103	coffcode.h	FUNCTION_25	FOR_7	IF_22
0x400704d	      0x2500010000	                          and eax, 0x100	      3103	coffcode.h	FUNCTION_25	FOR_7	IF_22
0x4007052	            0x85c0	                           test eax, eax	      3103	coffcode.h	FUNCTION_25	FOR_7	IF_22
0x4007054	     0xf8465030000	                            je 0x40073bf	      3103	coffcode.h	FUNCTION_25	FOR_7	IF_22
0x400705a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3106	coffcode.h	FUNCTION_25	FOR_7
0x400705e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3106	coffcode.h	FUNCTION_25	FOR_7
0x4007062	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3106	coffcode.h	FUNCTION_25	FOR_7
0x4007066	        0x48895040	             mov qword [rax + 0x40], rdx	      3106	coffcode.h	FUNCTION_25	FOR_7
0x400706a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3110	coffcode.h	FUNCTION_25	FOR_7	IF_23
0x400706e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3110	coffcode.h	FUNCTION_25	FOR_7	IF_23
0x4007072	          0x4885c0	                           test rax, rax	      3110	coffcode.h	FUNCTION_25	FOR_7	IF_23
0x4007075	     0xf8447030000	                            je 0x40073c2	      3110	coffcode.h	FUNCTION_25	FOR_7	IF_23
0x400707b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3117	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007082	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3117	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007085	          0xc1e805	                              shr eax, 5	      3117	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007088	      0x25ffff0f00	                        and eax, 0xfffff	      3117	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x400708d	          0x83e002	                              and eax, 2	      3117	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007090	            0x85c0	                           test eax, eax	      3117	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007092	     0xf849c000000	                            je 0x4007134	      3117	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007098	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3121	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x400709c	        0x488945d0	             mov qword [rbp - 0x30], rax	      3121	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070a0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070a4	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070a7	      0xba01000000	                              mov edx, 1	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070ac	            0x89c1	                            mov ecx, eax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070ae	            0xd3e2	                             shl edx, cl	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070b0	            0x89d0	                            mov eax, edx	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070b2	          0x4863d0	                         movsxd rdx, eax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070b5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070b9	          0x4801d0	                            add rax, rdx	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070bc	        0x488d50ff	                      lea rdx, [rax - 1]	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070c0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070c4	          0x4839c2	                            cmp rdx, rax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070c7	            0x723e	                            jb 0x4007107	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070c9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070cd	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070d0	      0xba01000000	                              mov edx, 1	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070d5	            0x89c1	                            mov ecx, eax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070d7	            0xd3e2	                             shl edx, cl	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070d9	            0x89d0	                            mov eax, edx	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070db	          0x83e801	                              sub eax, 1	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070de	          0x4863d0	                         movsxd rdx, eax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070e1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070e5	          0x4801c2	                            add rdx, rax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070e8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070ec	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070ef	      0xbe01000000	                              mov esi, 1	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070f4	            0x89c1	                            mov ecx, eax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070f6	            0xd3e6	                             shl esi, cl	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070f8	            0x89f0	                            mov eax, esi	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070fa	          0x83e801	                              sub eax, 1	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070fd	            0x4898	                                    cdqe	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x40070ff	          0x48f7d0	                                 not rax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007102	          0x4821d0	                            and rax, rdx	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007105	            0xeb07	                           jmp 0x400710e	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007107	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x400710e	        0x48894598	             mov qword [rbp - 0x68], rax	      3123	coffcode.h	FUNCTION_25	FOR_7	IF_24
0x4007112	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3157	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x4007117	            0x741b	                            je 0x4007134	      3157	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x4007119	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3158	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x400711d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3158	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x4007121	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3158	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x4007125	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      3158	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x4007129	          0x4801c2	                            add rdx, rax	      3158	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x400712c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3158	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x4007130	        0x48895038	             mov qword [rax + 0x38], rdx	      3158	coffcode.h	FUNCTION_25	FOR_7	IF_24	IF_28
0x4007134	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3166	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400713b	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3166	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400713e	          0xc1e805	                              shr eax, 5	      3166	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007141	      0x25ffff0f00	                        and eax, 0xfffff	      3166	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007146	      0x2500010000	                          and eax, 0x100	      3166	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400714b	            0x85c0	                           test eax, eax	      3166	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400714d	            0x7439	                            je 0x4007188	      3166	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400714f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3167	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007153	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3167	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007156	          0x83e001	                              and eax, 1	      3167	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007159	            0x85c0	                           test eax, eax	      3167	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400715b	            0x742b	                            je 0x4007188	      3167	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400715d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007161	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007165	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007169	          0x4829c2	                            sub rdx, rax	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400716c	          0x4889d0	                            mov rax, rdx	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400716f	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007172	          0x4863ca	                         movsxd rcx, edx	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007175	      0xba00000000	                              mov edx, 0	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400717a	          0x48f7f1	                                 div rcx	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x400717d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007181	          0x4801d0	                            add rax, rdx	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007184	        0x48894598	             mov qword [rbp - 0x68], rax	      3168	coffcode.h	FUNCTION_25	FOR_7	IF_29
0x4007188	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3170	coffcode.h	FUNCTION_25	FOR_7
0x400718c	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3170	coffcode.h	FUNCTION_25	FOR_7
0x4007190	    0x488990900000	             mov qword [rax + 0x90], rdx	      3170	coffcode.h	FUNCTION_25	FOR_7
0x4007197	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3174	coffcode.h	FUNCTION_25	FOR_7
0x400719b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3174	coffcode.h	FUNCTION_25	FOR_7
0x400719f	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071a2	            0x4898	                                    cdqe	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071a4	          0x4801d0	                            add rax, rdx	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071a7	        0x488d50ff	                      lea rdx, [rax - 1]	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071ab	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071ae	            0xf7d8	                                 neg eax	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071b0	            0x4898	                                    cdqe	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071b2	          0x4821c2	                            and rdx, rax	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071b5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071b9	        0x48895038	             mov qword [rax + 0x38], rdx	      3174	coffcode.h	FUNCTION_25	FOR_7
0x40071bd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3177	coffcode.h	FUNCTION_25	FOR_7
0x40071c1	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3177	coffcode.h	FUNCTION_25	FOR_7
0x40071c5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3177	coffcode.h	FUNCTION_25	FOR_7
0x40071c9	          0x4801d0	                            add rax, rdx	      3177	coffcode.h	FUNCTION_25	FOR_7
0x40071cc	        0x48894598	             mov qword [rbp - 0x68], rax	      3177	coffcode.h	FUNCTION_25	FOR_7
0x40071d0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3181	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071d7	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3181	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071da	          0xc1e805	                              shr eax, 5	      3181	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071dd	      0x25ffff0f00	                        and eax, 0xfffff	      3181	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071e2	          0x83e002	                              and eax, 2	      3181	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071e5	            0x85c0	                           test eax, eax	      3181	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071e7	     0xf85c3000000	                           jne 0x40072b0	      3181	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071ed	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3185	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071f1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3185	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071f5	        0x488945d8	             mov qword [rbp - 0x28], rax	      3185	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071f9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40071fd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007201	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007205	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007208	      0xbe01000000	                              mov esi, 1	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400720d	            0x89c1	                            mov ecx, eax	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400720f	            0xd3e6	                             shl esi, cl	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007211	            0x89f0	                            mov eax, esi	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007213	            0x4898	                                    cdqe	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007215	          0x4801d0	                            add rax, rdx	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007218	        0x488d50ff	                      lea rdx, [rax - 1]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400721c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007220	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007224	          0x4839c2	                            cmp rdx, rax	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007227	            0x7241	                            jb 0x400726a	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007229	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400722d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007231	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007235	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007238	      0xbe01000000	                              mov esi, 1	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400723d	            0x89c1	                            mov ecx, eax	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400723f	            0xd3e6	                             shl esi, cl	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007241	            0x89f0	                            mov eax, esi	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007243	          0x83e801	                              sub eax, 1	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007246	            0x4898	                                    cdqe	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007248	          0x4801c2	                            add rdx, rax	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400724b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400724f	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007252	      0xbe01000000	                              mov esi, 1	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007257	            0x89c1	                            mov ecx, eax	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007259	            0xd3e6	                             shl esi, cl	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400725b	            0x89f0	                            mov eax, esi	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400725d	          0x83e801	                              sub eax, 1	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007260	            0x4898	                                    cdqe	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007262	          0x48f7d0	                                 not rax	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007265	          0x4821c2	                            and rdx, rax	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007268	            0xeb07	                           jmp 0x4007271	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400726a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007271	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007275	        0x48895038	             mov qword [rax + 0x38], rdx	      3186	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007279	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3188	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400727d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3188	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007281	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3188	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007285	           0xf95c0	                                setne al	      3188	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007288	           0xfb6c0	                           movzx eax, al	      3188	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400728b	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3188	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007291	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007295	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x4007299	        0x482b45d8	             sub rax, qword [rbp - 0x28]	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x400729d	          0x4889c2	                            mov rdx, rax	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40072a0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40072a4	          0x4801d0	                            add rax, rdx	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40072a7	        0x48894598	             mov qword [rbp - 0x68], rax	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40072ab	      0xe9a9000000	                           jmp 0x4007359	      3189	coffcode.h	FUNCTION_25	FOR_7	IF_30
0x40072b0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3193	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072b4	        0x488945d0	             mov qword [rbp - 0x30], rax	      3193	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072b8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072bc	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072bf	      0xba01000000	                              mov edx, 1	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072c4	            0x89c1	                            mov ecx, eax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072c6	            0xd3e2	                             shl edx, cl	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072c8	            0x89d0	                            mov eax, edx	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072ca	          0x4863d0	                         movsxd rdx, eax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072cd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072d1	          0x4801d0	                            add rax, rdx	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072d4	        0x488d50ff	                      lea rdx, [rax - 1]	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072d8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072dc	          0x4839c2	                            cmp rdx, rax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072df	            0x723e	                            jb 0x400731f	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072e1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072e5	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072e8	      0xba01000000	                              mov edx, 1	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072ed	            0x89c1	                            mov ecx, eax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072ef	            0xd3e2	                             shl edx, cl	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072f1	            0x89d0	                            mov eax, edx	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072f3	          0x83e801	                              sub eax, 1	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072f6	          0x4863d0	                         movsxd rdx, eax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072f9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x40072fd	          0x4801c2	                            add rdx, rax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007300	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007304	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007307	      0xbe01000000	                              mov esi, 1	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400730c	            0x89c1	                            mov ecx, eax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400730e	            0xd3e6	                             shl esi, cl	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007310	            0x89f0	                            mov eax, esi	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007312	          0x83e801	                              sub eax, 1	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007315	            0x4898	                                    cdqe	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007317	          0x48f7d0	                                 not rax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400731a	          0x4821d0	                            and rax, rdx	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400731d	            0xeb07	                           jmp 0x4007326	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400731f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007326	        0x48894598	             mov qword [rbp - 0x68], rax	      3194	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400732a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3195	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400732e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      3195	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007332	           0xf95c0	                                setne al	      3195	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007335	           0xfb6c0	                           movzx eax, al	      3195	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007338	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3195	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400733e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3196	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007342	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3196	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007346	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3196	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400734a	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      3196	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x400734e	          0x4801c2	                            add rdx, rax	      3196	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007351	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3196	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007355	        0x48895038	             mov qword [rax + 0x38], rdx	      3196	coffcode.h	FUNCTION_25	FOR_7	ELSE_6
0x4007359	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x400735d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x4007364	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x4007368	          0x488b10	                    mov rdx, qword [rax]	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x400736b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x400736f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x4007373	          0x4839c2	                            cmp rdx, rax	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x4007376	            0x730a	                           jae 0x4007382	      3204	coffcode.h	FUNCTION_25	FOR_7	IF_31	CALL_39
0x4007378	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      3205	coffcode.h	FUNCTION_25	FOR_7	IF_31
0x4007382	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3212	coffcode.h	FUNCTION_25	FOR_7	IF_32	CALL_40
0x4007386	          0x488b00	                    mov rax, qword [rax]	      3212	coffcode.h	FUNCTION_25	FOR_7	IF_32	CALL_40
0x4007389	      0xbe00000000	                              mov esi, 0	      3212	coffcode.h	FUNCTION_25	FOR_7	IF_32	CALL_40
0x400738e	          0x4889c7	                            mov rdi, rax	      3212	coffcode.h	FUNCTION_25	FOR_7	IF_32	CALL_40
0x4007391	      0xe800000000	                          call 0x4007396	      3212	coffcode.h	FUNCTION_25	FOR_7	IF_32	CALL_40
0x4007396	            0x85c0	                           test eax, eax	      3212	coffcode.h	FUNCTION_25	FOR_7	IF_32	CALL_40
0x4007398	            0x751b	                           jne 0x40073b5	      3212	coffcode.h	FUNCTION_25	FOR_7	IF_32	CALL_40
0x400739a	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      3213	coffcode.h	FUNCTION_25	FOR_7	CALL_41
0x400739e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3213	coffcode.h	FUNCTION_25	FOR_7	CALL_41
0x40073a5	      0xba00000000	                              mov edx, 0	      3213	coffcode.h	FUNCTION_25	FOR_7	CALL_41
0x40073aa	          0x4889ce	                            mov rsi, rcx	      3213	coffcode.h	FUNCTION_25	FOR_7	CALL_41
0x40073ad	          0x4889c7	                            mov rdi, rax	      3213	coffcode.h	FUNCTION_25	FOR_7	CALL_41
0x40073b0	      0xe88b8cffff	            call sym.bfd_set_section_vma	      3213	coffcode.h	FUNCTION_25	FOR_7	CALL_41
0x40073b5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3217	coffcode.h	FUNCTION_25	FOR_7
0x40073b9	        0x488945a0	             mov qword [rbp - 0x60], rax	      3217	coffcode.h	FUNCTION_25	FOR_7
0x40073bd	            0xeb04	                           jmp 0x40073c3	      3217	coffcode.h	FUNCTION_25	FOR_7
0x40073bf	              0x90	                                     nop	      3104	coffcode.h	FUNCTION_25	FOR_7	IF_22
0x40073c0	            0xeb01	                           jmp 0x40073c3	      3104	coffcode.h	FUNCTION_25	FOR_7	IF_22
0x40073c2	              0x90	                                     nop	      3111	coffcode.h	FUNCTION_25	FOR_7	IF_23
0x40073c3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3077	coffcode.h	FUNCTION_25	FOR_7
0x40073c7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3077	coffcode.h	FUNCTION_25	FOR_7
0x40073cb	        0x48894590	             mov qword [rbp - 0x70], rax	      3077	coffcode.h	FUNCTION_25	FOR_7
0x40073cf	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3075	coffcode.h	FUNCTION_25	FOR_7
0x40073d4	     0xf8586fbffff	                           jne 0x4006f60	      3075	coffcode.h	FUNCTION_25	FOR_7
0x40073da	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      3226	coffcode.h	FUNCTION_25	IF_33
0x40073e1	            0x7452	                            je 0x4007435	      3226	coffcode.h	FUNCTION_25	IF_33
0x40073e3	    0xc6857bffffff	                mov byte [rbp - 0x85], 0	      3230	coffcode.h	FUNCTION_25	IF_33
0x40073ea	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x40073ee	        0x488d48ff	                      lea rcx, [rax - 1]	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x40073f2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x40073f9	      0xba00000000	                              mov edx, 0	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x40073fe	          0x4889ce	                            mov rsi, rcx	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x4007401	          0x4889c7	                            mov rdi, rax	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x4007404	      0xe800000000	                          call 0x4007409	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x4007409	            0x85c0	                           test eax, eax	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x400740b	            0x7521	                           jne 0x400742e	      3231	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_42
0x400740d	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3232	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_43
0x4007414	    0x488d857bffff	                   lea rax, [rbp - 0x85]	      3232	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_43
0x400741b	      0xbe01000000	                              mov esi, 1	      3232	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_43
0x4007420	          0x4889c7	                            mov rdi, rax	      3232	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_43
0x4007423	      0xe800000000	                          call 0x4007428	      3232	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_43
0x4007428	        0x4883f801	                              cmp rax, 1	      3232	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_43
0x400742c	            0x7407	                            je 0x4007435	      3232	coffcode.h	FUNCTION_25	IF_33	IF_34	CALL_43
0x400742e	      0xb800000000	                              mov eax, 0	      3233	coffcode.h	FUNCTION_25	IF_33	IF_34
0x4007433	            0xeb56	                           jmp 0x400748b	      3233	coffcode.h	FUNCTION_25	IF_33	IF_34
0x4007435	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3239	coffcode.h	FUNCTION_25
0x4007439	        0x488d5003	                      lea rdx, [rax + 3]	      3239	coffcode.h	FUNCTION_25
0x400743d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3239	coffcode.h	FUNCTION_25
0x4007441	          0x4839c2	                            cmp rdx, rax	      3239	coffcode.h	FUNCTION_25
0x4007444	            0x720e	                            jb 0x4007454	      3239	coffcode.h	FUNCTION_25
0x4007446	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3239	coffcode.h	FUNCTION_25
0x400744a	        0x4883c003	                              add rax, 3	      3239	coffcode.h	FUNCTION_25
0x400744e	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      3239	coffcode.h	FUNCTION_25
0x4007452	            0xeb07	                           jmp 0x400745b	      3239	coffcode.h	FUNCTION_25
0x4007454	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3239	coffcode.h	FUNCTION_25
0x400745b	        0x48894598	             mov qword [rbp - 0x68], rax	      3239	coffcode.h	FUNCTION_25
0x400745f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3241	coffcode.h	FUNCTION_25	CALL_44
0x4007466	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3241	coffcode.h	FUNCTION_25	CALL_44
0x400746d	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3241	coffcode.h	FUNCTION_25	CALL_44
0x4007471	        0x48895030	             mov qword [rax + 0x30], rdx	      3241	coffcode.h	FUNCTION_25	CALL_44
0x4007475	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3242	coffcode.h	FUNCTION_25
0x400747c	         0xfb65047	           movzx edx, byte [rax + 0x47] 	      3242	coffcode.h	FUNCTION_25
0x4007480	          0x83ca40	                            or edx, 0x40	      3242	coffcode.h	FUNCTION_25
0x4007483	          0x885047	               mov byte [rax + 0x47], dl	      3242	coffcode.h	FUNCTION_25
0x4007486	      0xb801000000	                              mov eax, 1	      3244	coffcode.h	FUNCTION_25
0x400748b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3245	coffcode.h	FUNCTION_25
0x400748f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3245	coffcode.h	FUNCTION_25
0x4007498	            0x7405	                            je 0x400749f	      3245	coffcode.h	FUNCTION_25
0x400749a	      0xe800000000	                          call 0x400749f	      3245	coffcode.h	FUNCTION_25
0x400749f	    0x4881c4980000	                           add rsp, 0x98	      3245	coffcode.h	FUNCTION_25
0x40074a6	              0x5b	                                 pop rbx	      3245	coffcode.h	FUNCTION_25
0x40074a7	              0x5d	                                 pop rbp	      3245	coffcode.h	FUNCTION_25
0x40074a8	              0xc3	                                     ret	      3245	coffcode.h	FUNCTION_25
coff_amd64_reloc	FOR,0:functions,0:WHILE,0:ELSE,4:SWITCH,1:IF,8:CALL,4:DO,0	256
0x40021f2	              0x55	                                push rbp	        72	coff-x86_64.c	FUNCTION_74
0x40021f3	          0x4889e5	                            mov rbp, rsp	        72	coff-x86_64.c	FUNCTION_74
0x40021f6	              0x53	                                push rbx	        72	coff-x86_64.c	FUNCTION_74
0x40021f7	        0x4883ec78	                           sub rsp, 0x78	        72	coff-x86_64.c	FUNCTION_74
0x40021fb	        0x48897da8	             mov qword [rbp - 0x58], rdi	        72	coff-x86_64.c	FUNCTION_74
0x40021ff	        0x488975a0	             mov qword [rbp - 0x60], rsi	        72	coff-x86_64.c	FUNCTION_74
0x4002203	        0x48895598	             mov qword [rbp - 0x68], rdx	        72	coff-x86_64.c	FUNCTION_74
0x4002207	        0x48894d90	             mov qword [rbp - 0x70], rcx	        72	coff-x86_64.c	FUNCTION_74
0x400220b	        0x4c894588	              mov qword [rbp - 0x78], r8	        72	coff-x86_64.c	FUNCTION_74
0x400220f	        0x4c894d80	              mov qword [rbp - 0x80], r9	        72	coff-x86_64.c	FUNCTION_74
0x4002213	        0x488b4598	             mov rax, qword [rbp - 0x68]	        80	coff-x86_64.c	FUNCTION_74	IF_2
0x4002217	        0x488b4020	            mov rax, qword [rax + 0x20] 	        80	coff-x86_64.c	FUNCTION_74	IF_2
0x400221b	          0x8b4020	            mov eax, dword [rax + 0x20] 	        80	coff-x86_64.c	FUNCTION_74	IF_2
0x400221e	      0x2500100000	                         and eax, 0x1000	        80	coff-x86_64.c	FUNCTION_74	IF_2
0x4002223	            0x85c0	                           test eax, eax	        80	coff-x86_64.c	FUNCTION_74	IF_2
0x4002225	            0x7411	                            je 0x4002238	        80	coff-x86_64.c	FUNCTION_74	IF_2
0x4002227	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        97	coff-x86_64.c	FUNCTION_74	IF_2
0x400222b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        97	coff-x86_64.c	FUNCTION_74	IF_2
0x400222f	        0x488945c0	             mov qword [rbp - 0x40], rax	        97	coff-x86_64.c	FUNCTION_74	IF_2
0x4002233	      0xe98e000000	                           jmp 0x40022c6	        97	coff-x86_64.c	FUNCTION_74	IF_2
0x4002238	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       107	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3
0x400223d	            0x757b	                           jne 0x40022ba	       107	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3
0x400223f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       109	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3
0x4002243	        0x488b4018	            mov rax, qword [rax + 0x18] 	       109	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3
0x4002247	        0x488945c8	             mov qword [rbp - 0x38], rax	       109	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3
0x400224b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400224f	          0x8b4010	            mov eax, dword [rax + 0x10] 	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002252	            0x85c0	                           test eax, eax	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002254	            0x7427	                            je 0x400227d	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002256	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400225a	          0x8b4048	            mov eax, dword [rax + 0x48] 	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400225d	            0x85c0	                           test eax, eax	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400225f	            0x741c	                            je 0x400227d	       118	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002261	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002265	          0x8b4008	                mov eax, dword [rax + 8]	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002268	      0xba01000000	                              mov edx, 1	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400226d	            0x89c1	                            mov ecx, eax	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400226f	            0xd3e2	                             shl edx, cl	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002271	            0x89d0	                            mov eax, edx	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002273	            0xf7d8	                                 neg eax	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002275	            0x4898	                                    cdqe	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x4002277	        0x488945c0	             mov qword [rbp - 0x40], rax	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400227b	            0xeb49	                           jmp 0x40022c6	       119	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	IF_4
0x400227d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       120	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x4002281	          0x8b4018	            mov eax, dword [rax + 0x18] 	       120	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x4002284	      0x2580000000	                           and eax, 0x80	       120	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x4002289	            0x85c0	                           test eax, eax	       120	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x400228b	            0x741c	                            je 0x40022a9	       120	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x400228d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x4002291	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x4002295	        0x488b4598	             mov rax, qword [rbp - 0x68]	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x4002299	        0x488b4010	            mov rax, qword [rax + 0x10] 	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x400229d	          0x4829c2	                            sub rdx, rax	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x40022a0	          0x4889d0	                            mov rax, rdx	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x40022a3	        0x488945c0	             mov qword [rbp - 0x40], rax	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x40022a7	            0xeb1d	                           jmp 0x40022c6	       121	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_2	IF_5
0x40022a9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       123	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_3
0x40022ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	       123	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_3
0x40022b1	          0x48f7d8	                                 neg rax	       123	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_3
0x40022b4	        0x488945c0	             mov qword [rbp - 0x40], rax	       123	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_3
0x40022b8	            0xeb0c	                           jmp 0x40022c6	       123	coff-x86_64.c	FUNCTION_74	ELSE_1	IF_3	ELSE_3
0x40022ba	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       127	coff-x86_64.c	FUNCTION_74	ELSE_1	ELSE_4
0x40022be	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	coff-x86_64.c	FUNCTION_74	ELSE_1	ELSE_4
0x40022c2	        0x488945c0	             mov qword [rbp - 0x40], rax	       127	coff-x86_64.c	FUNCTION_74	ELSE_1	ELSE_4
0x40022c6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       132	coff-x86_64.c	FUNCTION_74	IF_6
0x40022ca	        0x488b4018	            mov rax, qword [rax + 0x18] 	       132	coff-x86_64.c	FUNCTION_74	IF_6
0x40022ce	            0x8b00	                    mov eax, dword [rax]	       132	coff-x86_64.c	FUNCTION_74	IF_6
0x40022d0	          0x83f803	                              cmp eax, 3	       132	coff-x86_64.c	FUNCTION_74	IF_6
0x40022d3	            0x752d	                           jne 0x4002302	       132	coff-x86_64.c	FUNCTION_74	IF_6
0x40022d5	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       133	coff-x86_64.c	FUNCTION_74	IF_6
0x40022da	            0x7426	                            je 0x4002302	       133	coff-x86_64.c	FUNCTION_74	IF_6
0x40022dc	        0x488b4580	             mov rax, qword [rbp - 0x80]	       134	coff-x86_64.c	FUNCTION_74	IF_6
0x40022e0	        0x488b4008	                mov rax, qword [rax + 8]	       134	coff-x86_64.c	FUNCTION_74	IF_6
0x40022e4	          0x8b4008	                mov eax, dword [rax + 8]	       134	coff-x86_64.c	FUNCTION_74	IF_6
0x40022e7	          0x83f802	                              cmp eax, 2	       134	coff-x86_64.c	FUNCTION_74	IF_6
0x40022ea	            0x7516	                           jne 0x4002302	       134	coff-x86_64.c	FUNCTION_74	IF_6
0x40022ec	        0x488b4580	             mov rax, qword [rbp - 0x80]	       135	coff-x86_64.c	FUNCTION_74	CALL_1
0x40022f0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       135	coff-x86_64.c	FUNCTION_74	CALL_1
0x40022f7	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       135	coff-x86_64.c	FUNCTION_74	CALL_1
0x40022fe	        0x482945c0	             sub qword [rbp - 0x40], rax	       135	coff-x86_64.c	FUNCTION_74	CALL_1
0x4002302	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       141	coff-x86_64.c	FUNCTION_74	IF_7
0x4002307	     0xf8450020000	                            je 0x400255d	       141	coff-x86_64.c	FUNCTION_74	IF_7
0x400230d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       143	coff-x86_64.c	FUNCTION_74	IF_7
0x4002311	        0x488b4018	            mov rax, qword [rax + 0x18] 	       143	coff-x86_64.c	FUNCTION_74	IF_7
0x4002315	        0x488945d0	             mov qword [rbp - 0x30], rax	       143	coff-x86_64.c	FUNCTION_74	IF_7
0x4002319	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       144	coff-x86_64.c	FUNCTION_74	IF_7
0x400231d	        0x488b5008	                mov rdx, qword [rax + 8]	       144	coff-x86_64.c	FUNCTION_74	IF_7
0x4002321	        0x488b4590	             mov rax, qword [rbp - 0x70]	       144	coff-x86_64.c	FUNCTION_74	IF_7
0x4002325	          0x4801d0	                            add rax, rdx	       144	coff-x86_64.c	FUNCTION_74	IF_7
0x4002328	        0x488945d8	             mov qword [rbp - 0x28], rax	       144	coff-x86_64.c	FUNCTION_74	IF_7
0x400232c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       147	coff-x86_64.c	FUNCTION_74	IF_7	IF_8
0x4002330	        0x488b5808	                mov rbx, qword [rax + 8]	       147	coff-x86_64.c	FUNCTION_74	IF_7	IF_8
0x4002334	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       148	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_3
0x4002338	          0x4889c7	                            mov rdi, rax	       148	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_3
0x400233b	      0xe800000000	                          call 0x4002340	       148	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_3
0x4002340	            0x89c0	                            mov eax, eax	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x4002342	        0x480fafd8	                           imul rbx, rax	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x4002346	          0x4889d9	                            mov rcx, rbx	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x4002349	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x400234d	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x4002351	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x4002355	          0x4889c7	                            mov rdi, rax	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x4002358	      0xe800000000	                          call 0x400235d	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x400235d	            0x85c0	                           test eax, eax	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x400235f	            0x750a	                           jne 0x400236b	       146	coff-x86_64.c	FUNCTION_74	IF_7	IF_8	CALL_2
0x4002361	      0xb804000000	                              mov eax, 4	       149	coff-x86_64.c	FUNCTION_74	IF_7	IF_8
0x4002366	      0xe9f7010000	                           jmp 0x4002562	       149	coff-x86_64.c	FUNCTION_74	IF_7	IF_8
0x400236b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400236f	          0x8b4008	                mov eax, dword [rax + 8]	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002372	          0x83f801	                              cmp eax, 1	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002375	            0x7477	                            je 0x40023ee	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002377	          0x83f801	                              cmp eax, 1	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400237a	            0x7f09	                            jg 0x4002385	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400237c	            0x85c0	                           test eax, eax	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400237e	            0x741c	                            je 0x400239c	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002380	      0xe9c7010000	                           jmp 0x400254c	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002385	          0x83f802	                              cmp eax, 2	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002388	     0xf84d3000000	                            je 0x4002461	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400238e	          0x83f804	                              cmp eax, 4	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002391	     0xf8444010000	                            je 0x40024db	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002397	      0xe9b0010000	                           jmp 0x400254c	       151	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400239c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       155	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023a0	           0xfb600	                   movzx eax, byte [rax]	       155	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023a3	          0x8845bd	               mov byte [rbp - 0x43], al	       155	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023aa	        0x488b4040	            mov rax, qword [rax + 0x40] 	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023ae	            0xf7d0	                                 not eax	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023b0	            0x89c2	                            mov edx, eax	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023b2	         0xfb645bd	            movzx eax, byte [rbp - 0x43]	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023b6	            0x89d1	                            mov ecx, edx	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023b8	            0x21c1	                            and ecx, eax	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023be	        0x488b4038	            mov rax, qword [rax + 0x38] 	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023c2	            0x89c2	                            mov edx, eax	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023c4	         0xfb645bd	            movzx eax, byte [rbp - 0x43]	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023c8	            0x21c2	                            and edx, eax	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023ca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023ce	             0x1c2	                            add edx, eax	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023d4	        0x488b4040	            mov rax, qword [rax + 0x40] 	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023d8	            0x21d0	                            and eax, edx	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023da	             0x9c8	                             or eax, ecx	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023dc	          0x8845bd	               mov byte [rbp - 0x43], al	       156	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023df	         0xfb655bd	            movzx edx, byte [rbp - 0x43]	       157	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023e7	            0x8810	                      mov byte [rax], dl	       157	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023e9	      0xe96f010000	                           jmp 0x400255d	       159	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023ee	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       163	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023f2	        0x488b4008	                mov rax, qword [rax + 8]	       163	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023f6	        0x488b4050	            mov rax, qword [rax + 0x50] 	       163	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023fa	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       163	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40023fe	          0x4889d7	                            mov rdi, rdx	       163	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002401	            0xffd0	                                call rax	       163	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002403	        0x668945be	               mov word [rbp - 0x42], ax	       163	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002407	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400240b	        0x488b4040	            mov rax, qword [rax + 0x40] 	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400240f	            0xf7d0	                                 not eax	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002411	            0x89c2	                            mov edx, eax	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002413	         0xfb745be	            movzx eax, word [rbp - 0x42]	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002417	            0x21c2	                            and edx, eax	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002419	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400241d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002421	            0x89c1	                            mov ecx, eax	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002423	         0xfb745be	            movzx eax, word [rbp - 0x42]	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002427	            0x21c1	                            and ecx, eax	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002429	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400242d	             0x1c1	                            add ecx, eax	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400242f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002433	        0x488b4040	            mov rax, qword [rax + 0x40] 	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002437	            0x21c8	                            and eax, ecx	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002439	             0x9d0	                             or eax, edx	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400243b	        0x668945be	               mov word [rbp - 0x42], ax	       164	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400243f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002443	        0x488b4008	                mov rax, qword [rax + 8]	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002447	        0x488b4060	            mov rax, qword [rax + 0x60] 	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400244b	      0x480fbf55be	            movsx rdx, word [rbp - 0x42]	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002450	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002454	          0x4889ce	                            mov rsi, rcx	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002457	          0x4889d7	                            mov rdi, rdx	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400245a	            0xffd0	                                call rax	       165	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400245c	      0xe9fc000000	                           jmp 0x400255d	       167	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002461	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       171	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002465	        0x488b4008	                mov rax, qword [rax + 8]	       171	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002469	        0x488b4038	            mov rax, qword [rax + 0x38] 	       171	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400246d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       171	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002471	          0x4889d7	                            mov rdi, rdx	       171	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002474	            0xffd0	                                call rax	       171	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002476	        0x488945e0	             mov qword [rbp - 0x20], rax	       171	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400247a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400247e	        0x488b4040	            mov rax, qword [rax + 0x40] 	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002482	          0x48f7d0	                                 not rax	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002485	          0x4889c2	                            mov rdx, rax	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002488	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400248c	          0x4889d1	                            mov rcx, rdx	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400248f	          0x4821c1	                            and rcx, rax	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002492	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002496	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400249a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400249e	          0x4821c2	                            and rdx, rax	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024a5	          0x4801c2	                            add rdx, rax	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024ac	        0x488b4040	            mov rax, qword [rax + 0x40] 	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024b0	          0x4821d0	                            and rax, rdx	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024b3	          0x4809c8	                             or rax, rcx	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024b6	        0x488945e0	             mov qword [rbp - 0x20], rax	       172	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024be	        0x488b4008	                mov rax, qword [rax + 8]	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024c2	        0x488b4048	            mov rax, qword [rax + 0x48] 	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024c6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024ca	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024ce	          0x4889ce	                            mov rsi, rcx	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024d1	          0x4889d7	                            mov rdi, rdx	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024d4	            0xffd0	                                call rax	       173	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024d6	      0xe982000000	                           jmp 0x400255d	       175	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       179	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024df	        0x488b4008	                mov rax, qword [rax + 8]	       179	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024e3	        0x488b4020	            mov rax, qword [rax + 0x20] 	       179	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024e7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       179	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024eb	          0x4889d7	                            mov rdi, rdx	       179	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024ee	            0xffd0	                                call rax	       179	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024f0	        0x488945e8	             mov qword [rbp - 0x18], rax	       179	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024f8	        0x488b4040	            mov rax, qword [rax + 0x40] 	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024fc	          0x48f7d0	                                 not rax	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x40024ff	        0x482345e8	             and rax, qword [rbp - 0x18]	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002503	          0x4889c2	                            mov rdx, rax	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002506	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400250a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400250e	        0x482345e8	             and rax, qword [rbp - 0x18]	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002512	          0x4889c1	                            mov rcx, rax	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002515	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002519	          0x4801c1	                            add rcx, rax	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400251c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002520	        0x488b4040	            mov rax, qword [rax + 0x40] 	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002524	          0x4821c8	                            and rax, rcx	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002527	          0x4809d0	                             or rax, rdx	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400252a	        0x488945e8	             mov qword [rbp - 0x18], rax	       180	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400252e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002532	        0x488b4008	                mov rax, qword [rax + 8]	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002536	        0x488b4030	            mov rax, qword [rax + 0x30] 	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400253a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400253e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002542	          0x4889ce	                            mov rsi, rcx	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002545	          0x4889d7	                            mov rdi, rdx	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x4002548	            0xffd0	                                call rax	       181	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400254a	            0xeb11	                           jmp 0x400255d	       183	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400254c	      0xbf11000000	                           mov edi, 0x11	       186	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1	CALL_4
0x4002551	      0xe800000000	                          call 0x4002556	       186	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1	CALL_4
0x4002556	      0xb806000000	                              mov eax, 6	       187	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400255b	            0xeb05	                           jmp 0x4002562	       187	coff-x86_64.c	FUNCTION_74	IF_7	SWITCH_1
0x400255d	      0xb805000000	                              mov eax, 5	       192	coff-x86_64.c	FUNCTION_74
0x4002562	        0x4883c478	                           add rsp, 0x78	       193	coff-x86_64.c	FUNCTION_74
0x4002566	              0x5b	                                 pop rbx	       193	coff-x86_64.c	FUNCTION_74
0x4002567	              0x5d	                                 pop rbp	       193	coff-x86_64.c	FUNCTION_74
0x4002568	              0xc3	                                     ret	       193	coff-x86_64.c	FUNCTION_74
coff_slurp_reloc_table	FOR,1:functions,0:WHILE,0:ELSE,2:SWITCH,0:IF,8:CALL,13:DO,0	321
0x4009bed	              0x55	                                push rbp	      4958	coffcode.h	FUNCTION_36
0x4009bee	          0x4889e5	                            mov rbp, rsp	      4958	coffcode.h	FUNCTION_36
0x4009bf1	            0x4154	                                push r12	      4958	coffcode.h	FUNCTION_36
0x4009bf3	              0x53	                                push rbx	      4958	coffcode.h	FUNCTION_36
0x4009bf4	    0x4881ec900000	                           sub rsp, 0x90	      4958	coffcode.h	FUNCTION_36
0x4009bfb	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      4958	coffcode.h	FUNCTION_36
0x4009c02	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      4958	coffcode.h	FUNCTION_36
0x4009c09	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      4958	coffcode.h	FUNCTION_36
0x4009c10	    0x64488b042528	                mov rax, qword fs:[0x28]	      4958	coffcode.h	FUNCTION_36
0x4009c19	        0x488945e8	             mov qword [rbp - 0x18], rax	      4958	coffcode.h	FUNCTION_36
0x4009c1d	            0x31c0	                            xor eax, eax	      4958	coffcode.h	FUNCTION_36
0x4009c1f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4965	coffcode.h	FUNCTION_36	IF_1
0x4009c26	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4965	coffcode.h	FUNCTION_36	IF_1
0x4009c2a	          0x4885c0	                           test rax, rax	      4965	coffcode.h	FUNCTION_36	IF_1
0x4009c2d	            0x740a	                            je 0x4009c39	      4965	coffcode.h	FUNCTION_36	IF_1
0x4009c2f	      0xb801000000	                              mov eax, 1	      4966	coffcode.h	FUNCTION_36	IF_1
0x4009c34	      0xe9af040000	                           jmp 0x400a0e8	      4966	coffcode.h	FUNCTION_36	IF_1
0x4009c39	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4967	coffcode.h	FUNCTION_36	IF_2
0x4009c40	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4967	coffcode.h	FUNCTION_36	IF_2
0x4009c46	            0x85c0	                           test eax, eax	      4967	coffcode.h	FUNCTION_36	IF_2
0x4009c48	            0x750a	                           jne 0x4009c54	      4967	coffcode.h	FUNCTION_36	IF_2
0x4009c4a	      0xb801000000	                              mov eax, 1	      4968	coffcode.h	FUNCTION_36	IF_2
0x4009c4f	      0xe994040000	                           jmp 0x400a0e8	      4968	coffcode.h	FUNCTION_36	IF_2
0x4009c54	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4969	coffcode.h	FUNCTION_36	IF_3
0x4009c5b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4969	coffcode.h	FUNCTION_36	IF_3
0x4009c5e	      0x2580000000	                           and eax, 0x80	      4969	coffcode.h	FUNCTION_36	IF_3
0x4009c63	            0x85c0	                           test eax, eax	      4969	coffcode.h	FUNCTION_36	IF_3
0x4009c65	            0x740a	                            je 0x4009c71	      4969	coffcode.h	FUNCTION_36	IF_3
0x4009c67	      0xb801000000	                              mov eax, 1	      4970	coffcode.h	FUNCTION_36	IF_3
0x4009c6c	      0xe977040000	                           jmp 0x400a0e8	      4970	coffcode.h	FUNCTION_36	IF_3
0x4009c71	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4971	coffcode.h	FUNCTION_36	IF_4	CALL_1
0x4009c78	          0x4889c7	                            mov rdi, rax	      4971	coffcode.h	FUNCTION_36	IF_4	CALL_1
0x4009c7b	      0xe86ff7ffff	        call sym.coff_slurp_symbol_table	      4971	coffcode.h	FUNCTION_36	IF_4	CALL_1
0x4009c80	            0x85c0	                           test eax, eax	      4971	coffcode.h	FUNCTION_36	IF_4	CALL_1
0x4009c82	            0x750a	                           jne 0x4009c8e	      4971	coffcode.h	FUNCTION_36	IF_4	CALL_1
0x4009c84	      0xb800000000	                              mov eax, 0	      4972	coffcode.h	FUNCTION_36	IF_4
0x4009c89	      0xe95a040000	                           jmp 0x400a0e8	      4972	coffcode.h	FUNCTION_36	IF_4
0x4009c8e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009c95	        0x488b4008	                mov rax, qword [rax + 8]	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009c99	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009ca0	          0x8b4064	            mov eax, dword [rax + 0x64] 	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009ca3	            0x89c2	                            mov edx, eax	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009ca5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009cac	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009cb2	            0x89c0	                            mov eax, eax	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009cb4	        0x480fafc2	                           imul rax, rdx	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009cb8	        0x48894598	             mov qword [rbp - 0x68], rax	      4974	coffcode.h	FUNCTION_36	CALL_2
0x4009cbc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009cc3	    0x488b88980000	            mov rcx, qword [rax + 0x98] 	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009cca	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009cce	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009cd5	          0x4889ce	                            mov rsi, rcx	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009cd8	          0x4889c7	                            mov rdi, rax	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009cdb	      0xe810eeffff	                   call sym.buy_and_read	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009ce0	        0x488945a0	             mov qword [rbp - 0x60], rax	      4975	coffcode.h	FUNCTION_36	CALL_3
0x4009ce4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4976	coffcode.h	FUNCTION_36
0x4009ceb	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4976	coffcode.h	FUNCTION_36
0x4009cf1	            0x89c0	                            mov eax, eax	      4976	coffcode.h	FUNCTION_36
0x4009cf3	        0x48c1e005	                              shl rax, 5	      4976	coffcode.h	FUNCTION_36
0x4009cf7	        0x48894598	             mov qword [rbp - 0x68], rax	      4976	coffcode.h	FUNCTION_36
0x4009cfb	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4977	coffcode.h	FUNCTION_36	CALL_4
0x4009cff	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4977	coffcode.h	FUNCTION_36	CALL_4
0x4009d06	          0x4889d6	                            mov rsi, rdx	      4977	coffcode.h	FUNCTION_36	CALL_4
0x4009d09	          0x4889c7	                            mov rdi, rax	      4977	coffcode.h	FUNCTION_36	CALL_4
0x4009d0c	      0xe800000000	                          call 0x4009d11	      4977	coffcode.h	FUNCTION_36	CALL_4
0x4009d11	        0x488945a8	             mov qword [rbp - 0x58], rax	      4977	coffcode.h	FUNCTION_36	CALL_4
0x4009d15	      0x48837da800	               cmp qword [rbp - 0x58], 0	      4979	coffcode.h	FUNCTION_36	IF_5
0x4009d1a	            0x7407	                            je 0x4009d23	      4979	coffcode.h	FUNCTION_36	IF_5
0x4009d1c	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4979	coffcode.h	FUNCTION_36	IF_5
0x4009d21	            0x750a	                           jne 0x4009d2d	      4979	coffcode.h	FUNCTION_36	IF_5
0x4009d23	      0xb800000000	                              mov eax, 0	      4980	coffcode.h	FUNCTION_36	IF_5
0x4009d28	      0xe9bb030000	                           jmp 0x400a0e8	      4980	coffcode.h	FUNCTION_36	IF_5
0x4009d2d	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      4982	coffcode.h	FUNCTION_36	FOR_1
0x4009d34	      0xe985030000	                           jmp 0x400a0be	      4982	coffcode.h	FUNCTION_36	FOR_1
0x4009d39	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      4990	coffcode.h	FUNCTION_36	FOR_1
0x4009d3c	        0x48c1e005	                              shl rax, 5	      4990	coffcode.h	FUNCTION_36	FOR_1
0x4009d40	          0x4889c2	                            mov rdx, rax	      4990	coffcode.h	FUNCTION_36	FOR_1
0x4009d43	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4990	coffcode.h	FUNCTION_36	FOR_1
0x4009d47	          0x4801d0	                            add rax, rdx	      4990	coffcode.h	FUNCTION_36	FOR_1
0x4009d4a	        0x488945b0	             mov qword [rbp - 0x50], rax	      4990	coffcode.h	FUNCTION_36	FOR_1
0x4009d4e	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d51	          0x4889d0	                            mov rax, rdx	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d54	        0x48c1e002	                              shl rax, 2	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d58	          0x4801d0	                            add rax, rdx	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d5b	          0x4801c0	                            add rax, rax	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d5e	          0x4889c2	                            mov rdx, rax	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d61	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d65	          0x4801d0	                            add rax, rdx	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d68	        0x488945b8	             mov qword [rbp - 0x48], rax	      4991	coffcode.h	FUNCTION_36	FOR_1
0x4009d6c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4993	coffcode.h	FUNCTION_36	FOR_1
0x4009d74	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      4994	coffcode.h	FUNCTION_36	FOR_1	CALL_5
0x4009d78	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      4994	coffcode.h	FUNCTION_36	FOR_1	CALL_5
0x4009d7c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4994	coffcode.h	FUNCTION_36	FOR_1	CALL_5
0x4009d83	          0x4889ce	                            mov rsi, rcx	      4994	coffcode.h	FUNCTION_36	FOR_1	CALL_5
0x4009d86	          0x4889c7	                            mov rdi, rax	      4994	coffcode.h	FUNCTION_36	FOR_1	CALL_5
0x4009d89	      0xe87f8cffff	             call sym.coff_swap_reloc_in	      4994	coffcode.h	FUNCTION_36	FOR_1	CALL_5
0x4009d8e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4999	coffcode.h	FUNCTION_36	FOR_1
0x4009d92	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4999	coffcode.h	FUNCTION_36	FOR_1
0x4009d96	        0x48895008	                mov qword [rax + 8], rdx	      4999	coffcode.h	FUNCTION_36	FOR_1
0x4009d9a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5001	coffcode.h	FUNCTION_36	FOR_1	IF_6
0x4009d9e	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      5001	coffcode.h	FUNCTION_36	FOR_1	IF_6
0x4009da2	     0xf84c5000000	                            je 0x4009e6d	      5001	coffcode.h	FUNCTION_36	FOR_1	IF_6
0x4009da8	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      5001	coffcode.h	FUNCTION_36	FOR_1	IF_6
0x4009db0	     0xf84b7000000	                            je 0x4009e6d	      5001	coffcode.h	FUNCTION_36	FOR_1	IF_6
0x4009db6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dba	          0x4885c0	                           test rax, rax	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dbd	            0x781c	                            js 0x4009ddb	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dbf	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dc3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dca	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dd1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dd4	            0x4898	                                    cdqe	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dd6	          0x4839c2	                            cmp rdx, rax	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009dd9	            0x7c48	                            jl 0x4009e23	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009ddb	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      5005	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_8
0x4009ddf	      0xbe00000000	                              mov esi, 0	      5007	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_9
0x4009de4	      0xbf00000000	                              mov edi, 0	      5007	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_9
0x4009de9	      0xe800000000	                          call 0x4009dee	      5007	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_9
0x4009dee	          0x4889c1	                            mov rcx, rax	      5007	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_9
0x4009df1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5005	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_8
0x4009df8	          0x4889da	                            mov rdx, rbx	      5005	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_8
0x4009dfb	          0x4889c6	                            mov rsi, rax	      5005	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_8
0x4009dfe	          0x4889cf	                            mov rdi, rcx	      5005	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_8
0x4009e01	      0xb800000000	                              mov eax, 0	      5005	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_8
0x4009e06	      0xe800000000	                          call 0x4009e0b	      5005	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_8
0x4009e0b	    0x488b15000000	            mov rdx, qword [0x04009e12] 	      5009	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7
0x4009e12	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5009	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7
0x4009e16	          0x488910	                    mov qword [rax], rdx	      5009	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7
0x4009e19	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5010	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7
0x4009e21	            0xeb60	                           jmp 0x4009e83	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009e23	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e2a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e31	        0x488b4008	                mov rax, qword [rax + 8]	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e35	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e39	        0x48c1e202	                              shl rdx, 2	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e3d	          0x4801d0	                            add rax, rdx	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e40	            0x8b00	                    mov eax, dword [rax]	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e42	            0x89c0	                            mov eax, eax	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e44	    0x488d14c50000	                        lea rdx, [rax*8]	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e4c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e53	          0x4801c2	                            add rdx, rax	      5015	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1	CALL_10
0x4009e56	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5014	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1
0x4009e5a	          0x488910	                    mov qword [rax], rdx	      5014	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1
0x4009e5d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5016	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1
0x4009e61	          0x488b00	                    mov rax, qword [rax]	      5016	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1
0x4009e64	          0x488b00	                    mov rax, qword [rax]	      5016	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1
0x4009e67	        0x48894588	             mov qword [rbp - 0x78], rax	      5016	coffcode.h	FUNCTION_36	FOR_1	IF_6	ELSE_1
0x4009e6b	            0xeb16	                           jmp 0x4009e83	      5003	coffcode.h	FUNCTION_36	FOR_1	IF_6	IF_7	CALL_7
0x4009e6d	    0x488b15000000	            mov rdx, qword [0x04009e74] 	      5021	coffcode.h	FUNCTION_36	FOR_1	ELSE_2
0x4009e74	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5021	coffcode.h	FUNCTION_36	FOR_1	ELSE_2
0x4009e78	          0x488910	                    mov qword [rax], rdx	      5021	coffcode.h	FUNCTION_36	FOR_1	ELSE_2
0x4009e7b	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5022	coffcode.h	FUNCTION_36	FOR_1	ELSE_2
0x4009e83	    0x48c745900000	               mov qword [rbp - 0x70], 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009e8b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009e90	            0x7456	                            je 0x4009ee8	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009e92	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009e96	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009e99	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ea0	            0x7446	                            je 0x4009ee8	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ea2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ea9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009eb0	          0x488b10	                    mov rdx, qword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009eb3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009eb7	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009eba	          0x4889c1	                            mov rcx, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ebd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ec4	          0x4829c1	                            sub rcx, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ec7	          0x4889c8	                            mov rax, rcx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009eca	        0x48c1f803	                              sar rax, 3	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ece	          0x4889c1	                            mov rcx, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ed1	          0x4889c8	                            mov rax, rcx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ed4	        0x48c1e003	                              shl rax, 3	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ed8	          0x4801c8	                            add rax, rcx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009edb	        0x48c1e003	                              shl rax, 3	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009edf	          0x4801d0	                            add rax, rdx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ee2	        0x48894590	             mov qword [rbp - 0x70], rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ee6	            0xeb4f	                           jmp 0x4009f37	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ee8	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009eed	            0x7448	                            je 0x4009f37	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009eef	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ef3	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ef6	        0x488b4008	                mov rax, qword [rax + 8]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009efa	          0x8b4008	                mov eax, dword [rax + 8]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009efd	          0x83f802	                              cmp eax, 2	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f00	            0x7413	                            je 0x4009f15	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f02	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f06	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f09	        0x488b4008	                mov rax, qword [rax + 8]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f0d	          0x8b4008	                mov eax, dword [rax + 8]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f10	          0x83f804	                              cmp eax, 4	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f13	            0x7519	                           jne 0x4009f2e	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f15	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f19	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f1c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f23	          0x4885c0	                           test rax, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f26	            0x7406	                            je 0x4009f2e	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f28	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f2c	            0xeb05	                           jmp 0x4009f33	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f2e	      0xb800000000	                              mov eax, 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f33	        0x48894590	             mov qword [rbp - 0x70], rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f37	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f3c	            0x742b	                            je 0x4009f69	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f3e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f42	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f46	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f49	            0x85c0	                           test eax, eax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f4b	            0x751c	                           jne 0x4009f69	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f4d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f51	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f55	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f59	          0x48f7d8	                                 neg rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f5c	          0x4889c2	                            mov rdx, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f5f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f63	        0x48895010	             mov qword [rax + 0x10], rdx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f67	            0xeb57	                           jmp 0x4009fc0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f69	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f6e	            0x7444	                            je 0x4009fb4	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f70	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f74	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f77	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f7e	            0x7534	                           jne 0x4009fb4	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f80	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f84	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f88	          0x4885c0	                           test rax, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f8b	            0x7427	                            je 0x4009fb4	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f8d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f91	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f95	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f99	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009f9d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fa1	          0x4801d0	                            add rax, rdx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fa4	          0x48f7d8	                                 neg rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fa7	          0x4889c2	                            mov rdx, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009faa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fae	        0x48895010	             mov qword [rax + 0x10], rdx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fb2	            0xeb0c	                           jmp 0x4009fc0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fb4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fb8	    0x48c740100000	               mov qword [rax + 0x10], 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fc0	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fc5	            0x744c	                            je 0x400a013	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fc7	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fcb	        0x6683f814	                            cmp ax, 0x14	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fcf	            0x7742	                            ja 0x400a013	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fd1	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fd5	           0xfb7c0	                           movzx eax, ax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fd8	          0x4863d0	                         movsxd rdx, eax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fdb	          0x4889d0	                            mov rax, rdx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fde	        0x48c1e002	                              shl rax, 2	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fe2	          0x4801d0	                            add rax, rdx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fe5	        0x48c1e004	                              shl rax, 4	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fe9	    0x480500000000	                              add rax, 0	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009fef	            0x8b00	                    mov eax, dword [rax]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ff1	            0x85c0	                           test eax, eax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ff3	            0x741e	                            je 0x400a013	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ff5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ff9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x4009ffd	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x400a004	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5033	coffcode.h	FUNCTION_36	FOR_1
0x400a008	          0x4801c2	                            add rdx, rax	      5033	coffcode.h	FUNCTION_36	FOR_1
0x400a00b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_36	FOR_1
0x400a00f	        0x48895010	             mov qword [rax + 0x10], rdx	      5033	coffcode.h	FUNCTION_36	FOR_1
0x400a013	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5036	coffcode.h	FUNCTION_36	FOR_1
0x400a017	        0x488b5008	                mov rdx, qword [rax + 8]	      5036	coffcode.h	FUNCTION_36	FOR_1
0x400a01b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5036	coffcode.h	FUNCTION_36	FOR_1
0x400a022	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5036	coffcode.h	FUNCTION_36	FOR_1
0x400a026	          0x4829c2	                            sub rdx, rax	      5036	coffcode.h	FUNCTION_36	FOR_1
0x400a029	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5036	coffcode.h	FUNCTION_36	FOR_1
0x400a02d	        0x48895008	                mov qword [rax + 8], rdx	      5036	coffcode.h	FUNCTION_36	FOR_1
0x400a031	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a035	        0x6683f814	                            cmp ax, 0x14	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a039	            0x771e	                            ja 0x400a059	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a03b	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a03f	           0xfb7d0	                           movzx edx, ax	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a042	          0x4889d0	                            mov rax, rdx	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a045	        0x48c1e002	                              shl rax, 2	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a049	          0x4801d0	                            add rax, rdx	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a04c	        0x48c1e004	                              shl rax, 4	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a050	    0x488d90000000	                          lea rdx, [rax]	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a057	            0xeb05	                           jmp 0x400a05e	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a059	      0xba00000000	                              mov edx, 0	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a05e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a062	        0x48895018	             mov qword [rax + 0x18], rdx	      5040	coffcode.h	FUNCTION_36	FOR_1
0x400a066	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5043	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a06a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5043	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a06e	          0x4885c0	                           test rax, rax	      5043	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a071	            0x7547	                           jne 0x400a0ba	      5043	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a073	        0x4c8b65c0	             mov r12, qword [rbp - 0x40]	      5048	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a077	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5048	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a07b	           0xfb7d8	                           movzx ebx, ax	      5045	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_11
0x400a07e	      0xbe00000000	                              mov esi, 0	      5047	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_12
0x400a083	      0xbf00000000	                              mov edi, 0	      5047	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_12
0x400a088	      0xe800000000	                          call 0x400a08d	      5047	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_12
0x400a08d	          0x4889c7	                            mov rdi, rax	      5047	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_12
0x400a090	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5045	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_11
0x400a097	          0x4c89e1	                            mov rcx, r12	      5045	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_11
0x400a09a	            0x89da	                            mov edx, ebx	      5045	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_11
0x400a09c	          0x4889c6	                            mov rsi, rax	      5045	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_11
0x400a09f	      0xb800000000	                              mov eax, 0	      5045	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_11
0x400a0a4	      0xe800000000	                          call 0x400a0a9	      5045	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_11
0x400a0a9	      0xbf11000000	                           mov edi, 0x11	      5049	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_13
0x400a0ae	      0xe800000000	                          call 0x400a0b3	      5049	coffcode.h	FUNCTION_36	FOR_1	IF_8	CALL_13
0x400a0b3	      0xb800000000	                              mov eax, 0	      5050	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a0b8	            0xeb2e	                           jmp 0x400a0e8	      5050	coffcode.h	FUNCTION_36	FOR_1	IF_8
0x400a0ba	        0x83458401	               add dword [rbp - 0x7c], 1	      4982	coffcode.h	FUNCTION_36	FOR_1
0x400a0be	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4982	coffcode.h	FUNCTION_36	FOR_1
0x400a0c5	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4982	coffcode.h	FUNCTION_36	FOR_1
0x400a0cb	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      4982	coffcode.h	FUNCTION_36	FOR_1
0x400a0ce	     0xf8765fcffff	                            ja 0x4009d39	      4982	coffcode.h	FUNCTION_36	FOR_1
0x400a0d4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5054	coffcode.h	FUNCTION_36
0x400a0db	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      5054	coffcode.h	FUNCTION_36
0x400a0df	        0x48895078	             mov qword [rax + 0x78], rdx	      5054	coffcode.h	FUNCTION_36
0x400a0e3	      0xb801000000	                              mov eax, 1	      5055	coffcode.h	FUNCTION_36
0x400a0e8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      5056	coffcode.h	FUNCTION_36
0x400a0ec	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5056	coffcode.h	FUNCTION_36
0x400a0f5	            0x7405	                            je 0x400a0fc	      5056	coffcode.h	FUNCTION_36
0x400a0f7	      0xe800000000	                          call 0x400a0fc	      5056	coffcode.h	FUNCTION_36
0x400a0fc	    0x4881c4900000	                           add rsp, 0x90	      5056	coffcode.h	FUNCTION_36
0x400a103	              0x5b	                                 pop rbx	      5056	coffcode.h	FUNCTION_36
0x400a104	            0x415c	                                 pop r12	      5056	coffcode.h	FUNCTION_36
0x400a106	              0x5d	                                 pop rbp	      5056	coffcode.h	FUNCTION_36
0x400a107	              0xc3	                                     ret	      5056	coffcode.h	FUNCTION_36
pe_mkobject	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,3:DO,0	35
0x4002f3f	              0x55	                                push rbp	       258	peicode.h	FUNCTION_52
0x4002f40	          0x4889e5	                            mov rbp, rsp	       258	peicode.h	FUNCTION_52
0x4002f43	        0x4883ec20	                           sub rsp, 0x20	       258	peicode.h	FUNCTION_52
0x4002f47	        0x48897de8	             mov qword [rbp - 0x18], rdi	       258	peicode.h	FUNCTION_52
0x4002f4b	    0x48c745f0b802	          mov qword [rbp - 0x10], 0x2b8 	       260	peicode.h	FUNCTION_52
0x4002f53	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f5b	          0x4889d6	                            mov rsi, rdx	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f5e	          0x4889c7	                            mov rdi, rax	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f61	      0xe800000000	                          call 0x4002f66	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f66	          0x4889c2	                            mov rdx, rax	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f6d	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       262	peicode.h	FUNCTION_52	CALL_1
0x4002f74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	peicode.h	FUNCTION_52	IF_1
0x4002f78	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       264	peicode.h	FUNCTION_52	IF_1
0x4002f7f	          0x4885c0	                           test rax, rax	       264	peicode.h	FUNCTION_52	IF_1
0x4002f82	            0x7507	                           jne 0x4002f8b	       264	peicode.h	FUNCTION_52	IF_1
0x4002f84	      0xb800000000	                              mov eax, 0	       265	peicode.h	FUNCTION_52	IF_1
0x4002f89	            0xeb4d	                           jmp 0x4002fd8	       265	peicode.h	FUNCTION_52	IF_1
0x4002f8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       267	peicode.h	FUNCTION_52	CALL_2
0x4002f8f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       267	peicode.h	FUNCTION_52	CALL_2
0x4002f96	        0x488945f8	                mov qword [rbp - 8], rax	       267	peicode.h	FUNCTION_52	CALL_2
0x4002f9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       269	peicode.h	FUNCTION_52
0x4002f9e	    0xc78080000000	               mov dword [rax + 0x80], 1	       269	peicode.h	FUNCTION_52
0x4002fa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       272	peicode.h	FUNCTION_52
0x4002fac	    0x48c780900200	              mov qword [rax + 0x290], 0	       272	peicode.h	FUNCTION_52
0x4002fb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       274	peicode.h	FUNCTION_52	CALL_3
0x4002fbb	    0x4805c8000000	                           add rax, 0xc8	       274	peicode.h	FUNCTION_52	CALL_3
0x4002fc1	      0xbab8010000	                          mov edx, 0x1b8	       274	peicode.h	FUNCTION_52	CALL_3
0x4002fc6	      0xbe00000000	                              mov esi, 0	       274	peicode.h	FUNCTION_52	CALL_3
0x4002fcb	          0x4889c7	                            mov rdi, rax	       274	peicode.h	FUNCTION_52	CALL_3
0x4002fce	      0xe800000000	                          call 0x4002fd3	       274	peicode.h	FUNCTION_52	CALL_3
0x4002fd3	      0xb801000000	                              mov eax, 1	       275	peicode.h	FUNCTION_52
0x4002fd8	              0xc9	                                   leave	       276	peicode.h	FUNCTION_52
0x4002fd9	              0xc3	                                     ret	       276	peicode.h	FUNCTION_52
coff_apply_checksum	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,5:CALL,8:DO,0	86
0x400760c	              0x55	                                push rbp	      3304	coffcode.h	FUNCTION_28
0x400760d	          0x4889e5	                            mov rbp, rsp	      3304	coffcode.h	FUNCTION_28
0x4007610	        0x4883ec20	                           sub rsp, 0x20	      3304	coffcode.h	FUNCTION_28
0x4007614	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3304	coffcode.h	FUNCTION_28
0x4007618	    0x64488b042528	                mov rax, qword fs:[0x28]	      3304	coffcode.h	FUNCTION_28
0x4007621	        0x488945f8	                mov qword [rbp - 8], rax	      3304	coffcode.h	FUNCTION_28
0x4007625	            0x31c0	                            xor eax, eax	      3304	coffcode.h	FUNCTION_28
0x4007627	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3306	coffcode.h	FUNCTION_28
0x400762e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3308	coffcode.h	FUNCTION_28	IF_1	CALL_1
0x4007632	      0xba00000000	                              mov edx, 0	      3308	coffcode.h	FUNCTION_28	IF_1	CALL_1
0x4007637	      0xbe3c000000	                           mov esi, 0x3c	      3308	coffcode.h	FUNCTION_28	IF_1	CALL_1
0x400763c	          0x4889c7	                            mov rdi, rax	      3308	coffcode.h	FUNCTION_28	IF_1	CALL_1
0x400763f	      0xe800000000	                          call 0x4007644	      3308	coffcode.h	FUNCTION_28	IF_1	CALL_1
0x4007644	            0x85c0	                           test eax, eax	      3308	coffcode.h	FUNCTION_28	IF_1	CALL_1
0x4007646	            0x740a	                            je 0x4007652	      3308	coffcode.h	FUNCTION_28	IF_1	CALL_1
0x4007648	      0xb800000000	                              mov eax, 0	      3309	coffcode.h	FUNCTION_28	IF_1
0x400764d	      0xe9f0000000	                           jmp 0x4007742	      3309	coffcode.h	FUNCTION_28	IF_1
0x4007652	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3311	coffcode.h	FUNCTION_28	IF_2	CALL_2
0x4007656	      0xbe00000000	                              mov esi, 0	      3311	coffcode.h	FUNCTION_28	IF_2	CALL_2
0x400765b	          0x4889c7	                            mov rdi, rax	      3311	coffcode.h	FUNCTION_28	IF_2	CALL_2
0x400765e	      0xe846feffff	                 call sym.coff_read_word	      3311	coffcode.h	FUNCTION_28	IF_2	CALL_2
0x4007663	            0x85c0	                           test eax, eax	      3311	coffcode.h	FUNCTION_28	IF_2	CALL_2
0x4007665	            0x750a	                           jne 0x4007671	      3311	coffcode.h	FUNCTION_28	IF_2	CALL_2
0x4007667	      0xb800000000	                              mov eax, 0	      3312	coffcode.h	FUNCTION_28	IF_2
0x400766c	      0xe9d1000000	                           jmp 0x4007742	      3312	coffcode.h	FUNCTION_28	IF_2
0x4007671	    0x8b0500000000	            mov eax, dword [0x04007677] 	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x4007677	          0x83c058	                           add eax, 0x58	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x400767a	            0x89c1	                            mov ecx, eax	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x400767c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x4007680	      0xba00000000	                              mov edx, 0	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x4007685	          0x4889ce	                            mov rsi, rcx	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x4007688	          0x4889c7	                            mov rdi, rax	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x400768b	      0xe800000000	                          call 0x4007690	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x4007690	            0x85c0	                           test eax, eax	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x4007692	            0x740a	                            je 0x400769e	      3314	coffcode.h	FUNCTION_28	IF_3	CALL_3
0x4007694	      0xb800000000	                              mov eax, 0	      3315	coffcode.h	FUNCTION_28	IF_3
0x4007699	      0xe9a4000000	                           jmp 0x4007742	      3315	coffcode.h	FUNCTION_28	IF_3
0x400769e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3317	coffcode.h	FUNCTION_28
0x40076a5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3318	coffcode.h	FUNCTION_28	CALL_4
0x40076a9	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3318	coffcode.h	FUNCTION_28	CALL_4
0x40076ad	      0xbe04000000	                              mov esi, 4	      3318	coffcode.h	FUNCTION_28	CALL_4
0x40076b2	          0x4889c7	                            mov rdi, rax	      3318	coffcode.h	FUNCTION_28	CALL_4
0x40076b5	      0xe800000000	                          call 0x40076ba	      3318	coffcode.h	FUNCTION_28	CALL_4
0x40076ba	    0x8b0500000000	            mov eax, dword [0x040076c0] 	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076c0	            0x89c1	                            mov ecx, eax	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076c6	      0xba00000000	                              mov edx, 0	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076cb	          0x4889ce	                            mov rsi, rcx	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076ce	          0x4889c7	                            mov rdi, rax	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076d1	      0xe800000000	                          call 0x40076d6	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076d6	            0x85c0	                           test eax, eax	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076d8	            0x7407	                            je 0x40076e1	      3320	coffcode.h	FUNCTION_28	IF_4	CALL_5
0x40076da	      0xb800000000	                              mov eax, 0	      3321	coffcode.h	FUNCTION_28	IF_4
0x40076df	            0xeb61	                           jmp 0x4007742	      3321	coffcode.h	FUNCTION_28	IF_4
0x40076e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3323	coffcode.h	FUNCTION_28	CALL_6
0x40076e5	          0x4889c7	                            mov rdi, rax	      3323	coffcode.h	FUNCTION_28	CALL_6
0x40076e8	      0xe866feffff	          call sym.coff_compute_checksum	      3323	coffcode.h	FUNCTION_28	CALL_6
0x40076ed	          0x8945f4	              mov dword [rbp - 0xc], eax	      3323	coffcode.h	FUNCTION_28	CALL_6
0x40076f0	    0x8b1500000000	            mov edx, dword [0x040076f6] 	      3325	coffcode.h	FUNCTION_28
0x40076f6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3325	coffcode.h	FUNCTION_28
0x40076f9	             0x1d0	                            add eax, edx	      3325	coffcode.h	FUNCTION_28
0x40076fb	          0x8945f0	             mov dword [rbp - 0x10], eax	      3325	coffcode.h	FUNCTION_28
0x40076fe	    0x8b0500000000	            mov eax, dword [0x04007704] 	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x4007704	          0x83c058	                           add eax, 0x58	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x4007707	            0x89c1	                            mov ecx, eax	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x4007709	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x400770d	      0xba00000000	                              mov edx, 0	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x4007712	          0x4889ce	                            mov rsi, rcx	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x4007715	          0x4889c7	                            mov rdi, rax	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x4007718	      0xe800000000	                          call 0x400771d	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x400771d	            0x85c0	                           test eax, eax	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x400771f	            0x7407	                            je 0x4007728	      3327	coffcode.h	FUNCTION_28	IF_5	CALL_7
0x4007721	      0xb800000000	                              mov eax, 0	      3328	coffcode.h	FUNCTION_28	IF_5
0x4007726	            0xeb1a	                           jmp 0x4007742	      3328	coffcode.h	FUNCTION_28	IF_5
0x4007728	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3330	coffcode.h	FUNCTION_28	CALL_8
0x400772c	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3330	coffcode.h	FUNCTION_28	CALL_8
0x4007730	      0xbe04000000	                              mov esi, 4	      3330	coffcode.h	FUNCTION_28	CALL_8
0x4007735	          0x4889c7	                            mov rdi, rax	      3330	coffcode.h	FUNCTION_28	CALL_8
0x4007738	      0xe800000000	                          call 0x400773d	      3330	coffcode.h	FUNCTION_28	CALL_8
0x400773d	      0xb801000000	                              mov eax, 1	      3332	coffcode.h	FUNCTION_28
0x4007742	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3333	coffcode.h	FUNCTION_28
0x4007746	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3333	coffcode.h	FUNCTION_28
0x400774f	            0x7405	                            je 0x4007756	      3333	coffcode.h	FUNCTION_28
0x4007751	      0xe800000000	                          call 0x4007756	      3333	coffcode.h	FUNCTION_28
0x4007756	              0xc9	                                   leave	      3333	coffcode.h	FUNCTION_28
0x4007757	              0xc3	                                     ret	      3333	coffcode.h	FUNCTION_28
coff_classify_symbol	FOR,0:functions,0:WHILE,0:ELSE,1:SWITCH,1:IF,9:CALL,6:DO,0	94
0x4009aa5	              0x55	                                push rbp	      4822	coffcode.h	FUNCTION_35
0x4009aa6	          0x4889e5	                            mov rbp, rsp	      4822	coffcode.h	FUNCTION_35
0x4009aa9	              0x53	                                push rbx	      4822	coffcode.h	FUNCTION_35
0x4009aaa	        0x4883ec38	                           sub rsp, 0x38	      4822	coffcode.h	FUNCTION_35
0x4009aae	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4822	coffcode.h	FUNCTION_35
0x4009ab2	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4822	coffcode.h	FUNCTION_35
0x4009ab6	    0x64488b042528	                mov rax, qword fs:[0x28]	      4822	coffcode.h	FUNCTION_35
0x4009abf	        0x488945e8	             mov qword [rbp - 0x18], rax	      4822	coffcode.h	FUNCTION_35
0x4009ac3	            0x31c0	                            xor eax, eax	      4822	coffcode.h	FUNCTION_35
0x4009ac5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ac9	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009acd	           0xfb6c0	                           movzx eax, al	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ad0	          0x83f817	                           cmp eax, 0x17	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ad3	            0x7418	                            je 0x4009aed	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ad5	          0x83f817	                           cmp eax, 0x17	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ad8	            0x7f07	                            jg 0x4009ae1	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ada	          0x83f802	                              cmp eax, 2	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009add	            0x740e	                            je 0x4009aed	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009adf	            0xeb42	                           jmp 0x4009b23	      4849	coffcode.h	FUNCTION_35	SWITCH_1	ELSE_1
0x4009ae1	          0x83f869	                           cmp eax, 0x69	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ae4	            0x7407	                            je 0x4009aed	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ae6	          0x83f87f	                           cmp eax, 0x7f	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009ae9	            0x7402	                            je 0x4009aed	      4825	coffcode.h	FUNCTION_35	SWITCH_1
0x4009aeb	            0xeb36	                           jmp 0x4009b23	      4849	coffcode.h	FUNCTION_35	SWITCH_1	ELSE_1
0x4009aed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4839	coffcode.h	FUNCTION_35	SWITCH_1	IF_1
0x4009af1	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4839	coffcode.h	FUNCTION_35	SWITCH_1	IF_1
0x4009af4	            0x85c0	                           test eax, eax	      4839	coffcode.h	FUNCTION_35	SWITCH_1	IF_1
0x4009af6	            0x7521	                           jne 0x4009b19	      4839	coffcode.h	FUNCTION_35	SWITCH_1	IF_1
0x4009af8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4841	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	IF_2
0x4009afc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4841	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	IF_2
0x4009b00	          0x4885c0	                           test rax, rax	      4841	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	IF_2
0x4009b03	            0x750a	                           jne 0x4009b0f	      4841	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	IF_2
0x4009b05	      0xb802000000	                              mov eax, 2	      4842	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	IF_2
0x4009b0a	      0xe9c3000000	                           jmp 0x4009bd2	      4842	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	IF_2
0x4009b0f	      0xb801000000	                              mov eax, 1	      4844	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	ELSE_1
0x4009b14	      0xe9b9000000	                           jmp 0x4009bd2	      4844	coffcode.h	FUNCTION_35	SWITCH_1	IF_1	ELSE_1
0x4009b19	      0xb800000000	                              mov eax, 0	      4846	coffcode.h	FUNCTION_35	SWITCH_1	ELSE_1
0x4009b1e	      0xe9af000000	                           jmp 0x4009bd2	      4846	coffcode.h	FUNCTION_35	SWITCH_1	ELSE_1
0x4009b23	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4853	coffcode.h	FUNCTION_35	ELSE_1	IF_3
0x4009b27	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      4853	coffcode.h	FUNCTION_35	ELSE_1	IF_3
0x4009b2b	            0x3c03	                               cmp al, 3	      4853	coffcode.h	FUNCTION_35	ELSE_1	IF_3
0x4009b2d	            0x751f	                           jne 0x4009b4e	      4853	coffcode.h	FUNCTION_35	ELSE_1	IF_3
0x4009b2f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4855	coffcode.h	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4009b33	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4855	coffcode.h	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4009b36	            0x85c0	                           test eax, eax	      4855	coffcode.h	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4009b38	            0x750a	                           jne 0x4009b44	      4855	coffcode.h	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4009b3a	      0xb803000000	                              mov eax, 3	      4860	coffcode.h	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4009b3f	      0xe98e000000	                           jmp 0x4009bd2	      4860	coffcode.h	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4009b44	      0xb803000000	                              mov eax, 3	      4879	coffcode.h	FUNCTION_35	ELSE_1	IF_3
0x4009b49	      0xe984000000	                           jmp 0x4009bd2	      4879	coffcode.h	FUNCTION_35	ELSE_1	IF_3
0x4009b4e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4882	coffcode.h	FUNCTION_35	IF_7
0x4009b52	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      4882	coffcode.h	FUNCTION_35	IF_7
0x4009b56	            0x3c68	                            cmp al, 0x68	      4882	coffcode.h	FUNCTION_35	IF_7
0x4009b58	            0x7525	                           jne 0x4009b7f	      4882	coffcode.h	FUNCTION_35	IF_7
0x4009b5a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4887	coffcode.h	FUNCTION_35	IF_7
0x4009b5e	    0x48c740100000	               mov qword [rax + 0x10], 0	      4887	coffcode.h	FUNCTION_35	IF_7
0x4009b66	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4888	coffcode.h	FUNCTION_35	IF_7	IF_8
0x4009b6a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4888	coffcode.h	FUNCTION_35	IF_7	IF_8
0x4009b6d	            0x85c0	                           test eax, eax	      4888	coffcode.h	FUNCTION_35	IF_7	IF_8
0x4009b6f	            0x7507	                           jne 0x4009b78	      4888	coffcode.h	FUNCTION_35	IF_7	IF_8
0x4009b71	      0xb802000000	                              mov eax, 2	      4889	coffcode.h	FUNCTION_35	IF_7	IF_8
0x4009b76	            0xeb5a	                           jmp 0x4009bd2	      4889	coffcode.h	FUNCTION_35	IF_7	IF_8
0x4009b78	      0xb804000000	                              mov eax, 4	      4890	coffcode.h	FUNCTION_35	IF_7
0x4009b7d	            0xeb53	                           jmp 0x4009bd2	      4890	coffcode.h	FUNCTION_35	IF_7
0x4009b7f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4895	coffcode.h	FUNCTION_35	IF_9
0x4009b83	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4895	coffcode.h	FUNCTION_35	IF_9
0x4009b86	            0x85c0	                           test eax, eax	      4895	coffcode.h	FUNCTION_35	IF_9
0x4009b88	            0x7543	                           jne 0x4009bcd	      4895	coffcode.h	FUNCTION_35	IF_9
0x4009b8a	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009b8e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009b92	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009b96	          0x4889ce	                            mov rsi, rcx	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009b99	          0x4889c7	                            mov rdi, rax	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009b9c	      0xe800000000	                          call 0x4009ba1	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009ba1	          0x4889c3	                            mov rbx, rax	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009ba4	      0xbe00000000	                              mov esi, 0	      4901	coffcode.h	FUNCTION_35	IF_9	CALL_5
0x4009ba9	      0xbf00000000	                              mov edi, 0	      4901	coffcode.h	FUNCTION_35	IF_9	CALL_5
0x4009bae	      0xe800000000	                          call 0x4009bb3	      4901	coffcode.h	FUNCTION_35	IF_9	CALL_5
0x4009bb3	          0x4889c1	                            mov rcx, rax	      4901	coffcode.h	FUNCTION_35	IF_9	CALL_5
0x4009bb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009bba	          0x4889da	                            mov rdx, rbx	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009bbd	          0x4889c6	                            mov rsi, rax	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009bc0	          0x4889cf	                            mov rdi, rcx	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009bc3	      0xb800000000	                              mov eax, 0	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009bc8	      0xe800000000	                          call 0x4009bcd	      4899	coffcode.h	FUNCTION_35	IF_9	CALL_4
0x4009bcd	      0xb803000000	                              mov eax, 3	      4905	coffcode.h	FUNCTION_35
0x4009bd2	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4906	coffcode.h	FUNCTION_35
0x4009bd6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4906	coffcode.h	FUNCTION_35
0x4009bdf	            0x7405	                            je 0x4009be6	      4906	coffcode.h	FUNCTION_35
0x4009be1	      0xe800000000	                          call 0x4009be6	      4906	coffcode.h	FUNCTION_35
0x4009be6	        0x4883c438	                           add rsp, 0x38	      4906	coffcode.h	FUNCTION_35
0x4009bea	              0x5b	                                 pop rbx	      4906	coffcode.h	FUNCTION_35
0x4009beb	              0x5d	                                 pop rbp	      4906	coffcode.h	FUNCTION_35
0x4009bec	              0xc3	                                     ret	      4906	coffcode.h	FUNCTION_35
coff_amd64_reloc_name_lookup	FOR,1:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,1:DO,0	42
0x4002947	              0x55	                                push rbp	       704	coff-x86_64.c	FUNCTION_79
0x4002948	          0x4889e5	                            mov rbp, rsp	       704	coff-x86_64.c	FUNCTION_79
0x400294b	        0x4883ec20	                           sub rsp, 0x20	       704	coff-x86_64.c	FUNCTION_79
0x400294f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       704	coff-x86_64.c	FUNCTION_79
0x4002953	        0x488975e0	             mov qword [rbp - 0x20], rsi	       704	coff-x86_64.c	FUNCTION_79
0x4002957	    0xc745fc000000	                  mov dword [rbp - 4], 0	       707	coff-x86_64.c	FUNCTION_79	FOR_1
0x400295e	            0xeb69	                           jmp 0x40029c9	       707	coff-x86_64.c	FUNCTION_79	FOR_1
0x4002960	          0x8b55fc	                mov edx, dword [rbp - 4]	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x4002963	          0x4889d0	                            mov rax, rdx	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x4002966	        0x48c1e002	                              shl rax, 2	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x400296a	          0x4801d0	                            add rax, rdx	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x400296d	        0x48c1e004	                              shl rax, 4	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x4002971	    0x480500000000	                              add rax, 0	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x4002977	          0x488b00	                    mov rax, qword [rax]	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x400297a	          0x4885c0	                           test rax, rax	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x400297d	            0x7446	                            je 0x40029c5	       708	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x400297f	          0x8b55fc	                mov edx, dword [rbp - 4]	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x4002982	          0x4889d0	                            mov rax, rdx	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x4002985	        0x48c1e002	                              shl rax, 2	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x4002989	          0x4801d0	                            add rax, rdx	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x400298c	        0x48c1e004	                              shl rax, 4	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x4002990	    0x480500000000	                              add rax, 0	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x4002996	          0x488b00	                    mov rax, qword [rax]	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x4002999	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x400299d	          0x4889d6	                            mov rsi, rdx	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x40029a0	          0x4889c7	                            mov rdi, rax	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x40029a3	      0xe800000000	                          call 0x40029a8	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x40029a8	            0x85c0	                           test eax, eax	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x40029aa	            0x7519	                           jne 0x40029c5	       709	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1	CALL_1
0x40029ac	          0x8b55fc	                mov edx, dword [rbp - 4]	       710	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x40029af	          0x4889d0	                            mov rax, rdx	       710	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x40029b2	        0x48c1e002	                              shl rax, 2	       710	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x40029b6	          0x4801d0	                            add rax, rdx	       710	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x40029b9	        0x48c1e004	                              shl rax, 4	       710	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x40029bd	    0x480500000000	                              add rax, 0	       710	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x40029c3	            0xeb0f	                           jmp 0x40029d4	       710	coff-x86_64.c	FUNCTION_79	FOR_1	IF_1
0x40029c5	        0x8345fc01	                  add dword [rbp - 4], 1	       707	coff-x86_64.c	FUNCTION_79	FOR_1
0x40029c9	        0x837dfc14	               cmp dword [rbp - 4], 0x14	       707	coff-x86_64.c	FUNCTION_79	FOR_1
0x40029cd	            0x7691	                           jbe 0x4002960	       707	coff-x86_64.c	FUNCTION_79	FOR_1
0x40029cf	      0xb800000000	                              mov eax, 0	       712	coff-x86_64.c	FUNCTION_79
0x40029d4	              0xc9	                                   leave	       713	coff-x86_64.c	FUNCTION_79
0x40029d5	              0xc3	                                     ret	       713	coff-x86_64.c	FUNCTION_79
coff_set_arch_mach	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,2:CALL,2:DO,0	38
0x40069fc	              0x55	                                push rbp	      2837	coffcode.h	FUNCTION_23
0x40069fd	          0x4889e5	                            mov rbp, rsp	      2837	coffcode.h	FUNCTION_23
0x4006a00	        0x4883ec30	                           sub rsp, 0x30	      2837	coffcode.h	FUNCTION_23
0x4006a04	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2837	coffcode.h	FUNCTION_23
0x4006a08	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2837	coffcode.h	FUNCTION_23
0x4006a0b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2837	coffcode.h	FUNCTION_23
0x4006a0f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2837	coffcode.h	FUNCTION_23
0x4006a18	        0x488945f8	                mov qword [rbp - 8], rax	      2837	coffcode.h	FUNCTION_23
0x4006a1c	            0x31c0	                            xor eax, eax	      2837	coffcode.h	FUNCTION_23
0x4006a1e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a22	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a29	            0x89ce	                            mov esi, ecx	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a2b	          0x4889c7	                            mov rdi, rax	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a2e	      0xe800000000	                          call 0x4006a33	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a33	            0x85c0	                           test eax, eax	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a35	            0x7507	                           jne 0x4006a3e	      2841	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4006a37	      0xb800000000	                              mov eax, 0	      2842	coffcode.h	FUNCTION_23	IF_1
0x4006a3c	            0xeb2d	                           jmp 0x4006a6b	      2842	coffcode.h	FUNCTION_23	IF_1
0x4006a3e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2844	coffcode.h	FUNCTION_23	IF_2
0x4006a42	            0x7422	                            je 0x4006a66	      2844	coffcode.h	FUNCTION_23	IF_2
0x4006a44	        0x488d55f2	                    lea rdx, [rbp - 0xe]	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a48	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a50	          0x4889ce	                            mov rsi, rcx	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a53	          0x4889c7	                            mov rdi, rax	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a56	      0xe863ffffff	                 call sym.coff_set_flags	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a5b	            0x85c0	                           test eax, eax	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a5d	            0x7507	                           jne 0x4006a66	      2845	coffcode.h	FUNCTION_23	IF_2	CALL_2
0x4006a5f	      0xb800000000	                              mov eax, 0	      2846	coffcode.h	FUNCTION_23	IF_2
0x4006a64	            0xeb05	                           jmp 0x4006a6b	      2846	coffcode.h	FUNCTION_23	IF_2
0x4006a66	      0xb801000000	                              mov eax, 1	      2848	coffcode.h	FUNCTION_23
0x4006a6b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2849	coffcode.h	FUNCTION_23
0x4006a6f	    0x644833342528	                xor rsi, qword fs:[0x28]	      2849	coffcode.h	FUNCTION_23
0x4006a78	            0x7405	                            je 0x4006a7f	      2849	coffcode.h	FUNCTION_23
0x4006a7a	      0xe800000000	                          call 0x4006a7f	      2849	coffcode.h	FUNCTION_23
0x4006a7f	              0xc9	                                   leave	      2849	coffcode.h	FUNCTION_23
0x4006a80	              0xc3	                                     ret	      2849	coffcode.h	FUNCTION_23
coff_sort_func_alent	FOR,0:functions,0:WHILE,0:ELSE,1:SWITCH,0:IF,3:CALL,0:DO,0	41
0x4008b6f	              0x55	                                push rbp	      4237	coffcode.h	FUNCTION_32
0x4008b70	          0x4889e5	                            mov rbp, rsp	      4237	coffcode.h	FUNCTION_32
0x4008b73	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4237	coffcode.h	FUNCTION_32
0x4008b77	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4237	coffcode.h	FUNCTION_32
0x4008b7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4238	coffcode.h	FUNCTION_32
0x4008b7f	          0x488b00	                    mov rax, qword [rax]	      4238	coffcode.h	FUNCTION_32
0x4008b82	        0x488945e0	             mov qword [rbp - 0x20], rax	      4238	coffcode.h	FUNCTION_32
0x4008b86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4239	coffcode.h	FUNCTION_32
0x4008b8a	          0x488b00	                    mov rax, qword [rax]	      4239	coffcode.h	FUNCTION_32
0x4008b8d	        0x488945e8	             mov qword [rbp - 0x18], rax	      4239	coffcode.h	FUNCTION_32
0x4008b91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4240	coffcode.h	FUNCTION_32
0x4008b95	        0x488b4008	                mov rax, qword [rax + 8]	      4240	coffcode.h	FUNCTION_32
0x4008b99	        0x488945f0	             mov qword [rbp - 0x10], rax	      4240	coffcode.h	FUNCTION_32
0x4008b9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4241	coffcode.h	FUNCTION_32
0x4008ba1	        0x488b4008	                mov rax, qword [rax + 8]	      4241	coffcode.h	FUNCTION_32
0x4008ba5	        0x488945f8	                mov qword [rbp - 8], rax	      4241	coffcode.h	FUNCTION_32
0x4008ba9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4243	coffcode.h	FUNCTION_32	IF_1
0x4008bae	            0x7407	                            je 0x4008bb7	      4243	coffcode.h	FUNCTION_32	IF_1
0x4008bb0	      0x48837df800	                  cmp qword [rbp - 8], 0	      4243	coffcode.h	FUNCTION_32	IF_1
0x4008bb5	            0x7507	                           jne 0x4008bbe	      4243	coffcode.h	FUNCTION_32	IF_1
0x4008bb7	      0xb800000000	                              mov eax, 0	      4244	coffcode.h	FUNCTION_32	IF_1
0x4008bbc	            0xeb3d	                           jmp 0x4008bfb	      4244	coffcode.h	FUNCTION_32	IF_1
0x4008bbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4245	coffcode.h	FUNCTION_32	IF_2
0x4008bc2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4245	coffcode.h	FUNCTION_32	IF_2
0x4008bc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4245	coffcode.h	FUNCTION_32	IF_2
0x4008bca	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4245	coffcode.h	FUNCTION_32	IF_2
0x4008bce	          0x4839c2	                            cmp rdx, rax	      4245	coffcode.h	FUNCTION_32	IF_2
0x4008bd1	            0x7307	                           jae 0x4008bda	      4245	coffcode.h	FUNCTION_32	IF_2
0x4008bd3	      0xb8ffffffff	                     mov eax, 0xffffffff	      4246	coffcode.h	FUNCTION_32	IF_2
0x4008bd8	            0xeb21	                           jmp 0x4008bfb	      4246	coffcode.h	FUNCTION_32	IF_2
0x4008bda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4247	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008bde	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4247	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008be2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4247	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008be6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4247	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008bea	          0x4839c2	                            cmp rdx, rax	      4247	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008bed	            0x7607	                           jbe 0x4008bf6	      4247	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008bef	      0xb801000000	                              mov eax, 1	      4248	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008bf4	            0xeb05	                           jmp 0x4008bfb	      4248	coffcode.h	FUNCTION_32	ELSE_1	IF_3
0x4008bf6	      0xb800000000	                              mov eax, 0	      4250	coffcode.h	FUNCTION_32
0x4008bfb	              0x5d	                                 pop rbp	      4251	coffcode.h	FUNCTION_32
0x4008bfc	              0xc3	                                     ret	      4251	coffcode.h	FUNCTION_32
coff_slurp_line_table	FOR,3:functions,0:WHILE,0:ELSE,4:SWITCH,0:IF,14:CALL,32:DO,1	428
0x4008bfd	              0x55	                                push rbp	      4255	coffcode.h	FUNCTION_33
0x4008bfe	          0x4889e5	                            mov rbp, rsp	      4255	coffcode.h	FUNCTION_33
0x4008c01	            0x4154	                                push r12	      4255	coffcode.h	FUNCTION_33
0x4008c03	              0x53	                                push rbx	      4255	coffcode.h	FUNCTION_33
0x4008c04	    0x4881ecc00000	                           sub rsp, 0xc0	      4255	coffcode.h	FUNCTION_33
0x4008c0b	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      4255	coffcode.h	FUNCTION_33
0x4008c12	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      4255	coffcode.h	FUNCTION_33
0x4008c19	    0x64488b042528	                mov rax, qword fs:[0x28]	      4255	coffcode.h	FUNCTION_33
0x4008c22	        0x488945e8	             mov qword [rbp - 0x18], rax	      4255	coffcode.h	FUNCTION_33
0x4008c26	            0x31c0	                            xor eax, eax	      4255	coffcode.h	FUNCTION_33
0x4008c28	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4261	coffcode.h	FUNCTION_33
0x4008c33	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	      4262	coffcode.h	FUNCTION_33
0x4008c3d	    0xc78550ffffff	               mov dword [rbp - 0xb0], 1	      4266	coffcode.h	FUNCTION_33
0x4008c47	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4268	coffcode.h	FUNCTION_33	CALL_1
0x4008c4e	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      4268	coffcode.h	FUNCTION_33	CALL_1
0x4008c55	          0x4885c0	                           test rax, rax	      4268	coffcode.h	FUNCTION_33	CALL_1
0x4008c58	            0x740f	                            je 0x4008c69	      4268	coffcode.h	FUNCTION_33	CALL_1
0x4008c5a	      0xbeac100000	                         mov esi, 0x10ac	      4268	coffcode.h	FUNCTION_33	CALL_1
0x4008c5f	      0xbf00000000	                              mov edi, 0	      4268	coffcode.h	FUNCTION_33	CALL_1
0x4008c64	      0xe800000000	                          call 0x4008c69	      4268	coffcode.h	FUNCTION_33	CALL_1
0x4008c69	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4270	coffcode.h	FUNCTION_33	IF_1
0x4008c70	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4270	coffcode.h	FUNCTION_33	IF_1
0x4008c76	            0x89c2	                            mov edx, eax	      4270	coffcode.h	FUNCTION_33	IF_1
0x4008c78	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4270	coffcode.h	FUNCTION_33	IF_1
0x4008c7f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4270	coffcode.h	FUNCTION_33	IF_1
0x4008c83	          0x4839c2	                            cmp rdx, rax	      4270	coffcode.h	FUNCTION_33	IF_1
0x4008c86	            0x7651	                           jbe 0x4008cd9	      4270	coffcode.h	FUNCTION_33	IF_1
0x4008c88	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4274	coffcode.h	FUNCTION_33	IF_1
0x4008c8f	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      4274	coffcode.h	FUNCTION_33	IF_1
0x4008c93	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4274	coffcode.h	FUNCTION_33	IF_1
0x4008c9a	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4274	coffcode.h	FUNCTION_33	IF_1
0x4008ca0	          0x4189c4	                           mov r12d, eax	      4272	coffcode.h	FUNCTION_33	IF_1	CALL_2
0x4008ca3	      0xbe00000000	                              mov esi, 0	      4273	coffcode.h	FUNCTION_33	IF_1	CALL_3
0x4008ca8	      0xbf00000000	                              mov edi, 0	      4273	coffcode.h	FUNCTION_33	IF_1	CALL_3
0x4008cad	      0xe800000000	                          call 0x4008cb2	      4273	coffcode.h	FUNCTION_33	IF_1	CALL_3
0x4008cb2	          0x4889c7	                            mov rdi, rax	      4273	coffcode.h	FUNCTION_33	IF_1	CALL_3
0x4008cb5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4272	coffcode.h	FUNCTION_33	IF_1	CALL_2
0x4008cbc	          0x4889d9	                            mov rcx, rbx	      4272	coffcode.h	FUNCTION_33	IF_1	CALL_2
0x4008cbf	          0x4c89e2	                            mov rdx, r12	      4272	coffcode.h	FUNCTION_33	IF_1	CALL_2
0x4008cc2	          0x4889c6	                            mov rsi, rax	      4272	coffcode.h	FUNCTION_33	IF_1	CALL_2
0x4008cc5	      0xb800000000	                              mov eax, 0	      4272	coffcode.h	FUNCTION_33	IF_1	CALL_2
0x4008cca	      0xe800000000	                          call 0x4008ccf	      4272	coffcode.h	FUNCTION_33	IF_1	CALL_2
0x4008ccf	      0xb800000000	                              mov eax, 0	      4275	coffcode.h	FUNCTION_33	IF_1
0x4008cd4	      0xe9f6060000	                           jmp 0x40093cf	      4275	coffcode.h	FUNCTION_33	IF_1
0x4008cd9	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4278	coffcode.h	FUNCTION_33
0x4008ce0	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4278	coffcode.h	FUNCTION_33
0x4008ce6	            0x89c0	                            mov eax, eax	      4278	coffcode.h	FUNCTION_33
0x4008ce8	        0x4883c001	                              add rax, 1	      4278	coffcode.h	FUNCTION_33
0x4008cec	        0x48c1e004	                              shl rax, 4	      4278	coffcode.h	FUNCTION_33
0x4008cf0	        0x48894588	             mov qword [rbp - 0x78], rax	      4278	coffcode.h	FUNCTION_33
0x4008cf4	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4279	coffcode.h	FUNCTION_33	CALL_4
0x4008cf8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4279	coffcode.h	FUNCTION_33	CALL_4
0x4008cff	          0x4889d6	                            mov rsi, rdx	      4279	coffcode.h	FUNCTION_33	CALL_4
0x4008d02	          0x4889c7	                            mov rdi, rax	      4279	coffcode.h	FUNCTION_33	CALL_4
0x4008d05	      0xe800000000	                          call 0x4008d0a	      4279	coffcode.h	FUNCTION_33	CALL_4
0x4008d0a	        0x48894590	             mov qword [rbp - 0x70], rax	      4279	coffcode.h	FUNCTION_33	CALL_4
0x4008d0e	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4280	coffcode.h	FUNCTION_33	IF_2
0x4008d13	            0x750a	                           jne 0x4008d1f	      4280	coffcode.h	FUNCTION_33	IF_2
0x4008d15	      0xb800000000	                              mov eax, 0	      4281	coffcode.h	FUNCTION_33	IF_2
0x4008d1a	      0xe9b0060000	                           jmp 0x40093cf	      4281	coffcode.h	FUNCTION_33	IF_2
0x4008d1f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d26	        0x488b4008	                mov rax, qword [rax + 8]	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d2a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d31	          0x8b4068	            mov eax, dword [rax + 0x68] 	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d34	            0x89c2	                            mov edx, eax	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d36	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d3d	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d43	            0x89c0	                            mov eax, eax	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d45	        0x480fafc2	                           imul rax, rdx	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d49	        0x48894588	             mov qword [rbp - 0x78], rax	      4283	coffcode.h	FUNCTION_33	CALL_5
0x4008d4d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d54	    0x488b88a00000	            mov rcx, qword [rax + 0xa0] 	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d5b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d5f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d66	          0x4889ce	                            mov rsi, rcx	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d69	          0x4889c7	                            mov rdi, rax	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d6c	      0xe87ffdffff	                   call sym.buy_and_read	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d71	        0x48894598	             mov qword [rbp - 0x68], rax	      4284	coffcode.h	FUNCTION_33	CALL_6
0x4008d75	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4285	coffcode.h	FUNCTION_33	IF_3
0x4008d7a	            0x7549	                           jne 0x4008dc5	      4285	coffcode.h	FUNCTION_33	IF_3
0x4008d7c	      0xbe00000000	                              mov esi, 0	      4288	coffcode.h	FUNCTION_33	IF_3	CALL_8
0x4008d81	      0xbf00000000	                              mov edi, 0	      4288	coffcode.h	FUNCTION_33	IF_3	CALL_8
0x4008d86	      0xe800000000	                          call 0x4008d8b	      4288	coffcode.h	FUNCTION_33	IF_3	CALL_8
0x4008d8b	          0x4889c2	                            mov rdx, rax	      4288	coffcode.h	FUNCTION_33	IF_3	CALL_8
0x4008d8e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4287	coffcode.h	FUNCTION_33	IF_3	CALL_7
0x4008d95	          0x4889c6	                            mov rsi, rax	      4287	coffcode.h	FUNCTION_33	IF_3	CALL_7
0x4008d98	          0x4889d7	                            mov rdi, rdx	      4287	coffcode.h	FUNCTION_33	IF_3	CALL_7
0x4008d9b	      0xb800000000	                              mov eax, 0	      4287	coffcode.h	FUNCTION_33	IF_3	CALL_7
0x4008da0	      0xe800000000	                          call 0x4008da5	      4287	coffcode.h	FUNCTION_33	IF_3	CALL_7
0x4008da5	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4289	coffcode.h	FUNCTION_33	IF_3	CALL_9
0x4008da9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4289	coffcode.h	FUNCTION_33	IF_3	CALL_9
0x4008db0	          0x4889d6	                            mov rsi, rdx	      4289	coffcode.h	FUNCTION_33	IF_3	CALL_9
0x4008db3	          0x4889c7	                            mov rdi, rax	      4289	coffcode.h	FUNCTION_33	IF_3	CALL_9
0x4008db6	      0xe800000000	                          call 0x4008dbb	      4289	coffcode.h	FUNCTION_33	IF_3	CALL_9
0x4008dbb	      0xb800000000	                              mov eax, 0	      4290	coffcode.h	FUNCTION_33	IF_3
0x4008dc0	      0xe90a060000	                           jmp 0x40093cf	      4290	coffcode.h	FUNCTION_33	IF_3
0x4008dc5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4293	coffcode.h	FUNCTION_33
0x4008dc9	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4293	coffcode.h	FUNCTION_33
0x4008dd0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4294	coffcode.h	FUNCTION_33
0x4008dd7	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4294	coffcode.h	FUNCTION_33
0x4008ddb	    0x488990b80000	             mov qword [rax + 0xb8], rdx	      4294	coffcode.h	FUNCTION_33
0x4008de2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4295	coffcode.h	FUNCTION_33
0x4008de6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4295	coffcode.h	FUNCTION_33
0x4008ded	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      4296	coffcode.h	FUNCTION_33
0x4008df7	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      4297	coffcode.h	FUNCTION_33
0x4008e01	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      4299	coffcode.h	FUNCTION_33	FOR_1
0x4008e0b	      0xe9ea020000	                           jmp 0x40090fa	      4299	coffcode.h	FUNCTION_33	FOR_1
0x4008e10	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e17	        0x488b4008	                mov rax, qword [rax + 8]	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e1b	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e22	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e26	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e2a	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e31	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e38	          0x4889cf	                            mov rdi, rcx	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e3b	            0xffd0	                                call rax	      4303	coffcode.h	FUNCTION_33	FOR_1	CALL_10
0x4008e3d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4304	coffcode.h	FUNCTION_33	FOR_1
0x4008e41	            0x89c2	                            mov edx, eax	      4304	coffcode.h	FUNCTION_33	FOR_1
0x4008e43	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4304	coffcode.h	FUNCTION_33	FOR_1
0x4008e4a	            0x8910	                    mov dword [rax], edx	      4304	coffcode.h	FUNCTION_33	FOR_1
0x4008e4c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4308	coffcode.h	FUNCTION_33	FOR_1	CALL_11
0x4008e53	        0x4883c008	                              add rax, 8	      4308	coffcode.h	FUNCTION_33	FOR_1	CALL_11
0x4008e57	      0xba08000000	                              mov edx, 8	      4308	coffcode.h	FUNCTION_33	FOR_1	CALL_11
0x4008e5c	      0xbe00000000	                              mov esi, 0	      4308	coffcode.h	FUNCTION_33	FOR_1	CALL_11
0x4008e61	          0x4889c7	                            mov rdi, rax	      4308	coffcode.h	FUNCTION_33	FOR_1	CALL_11
0x4008e64	      0xe800000000	                          call 0x4008e69	      4308	coffcode.h	FUNCTION_33	FOR_1	CALL_11
0x4008e69	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4310	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008e70	            0x8b00	                    mov eax, dword [rax]	      4310	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008e72	            0x85c0	                           test eax, eax	      4310	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008e74	     0xf853d020000	                           jne 0x40090b7	      4310	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008e7a	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      4316	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008e84	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4317	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008e88	        0x488945a0	             mov qword [rbp - 0x60], rax	      4317	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008e8c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4318	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_12
0x4008e93	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4318	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_12
0x4008e9a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4318	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_12
0x4008e9e	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      4318	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_12
0x4008ea2	            0x774c	                            ja 0x4008ef0	      4318	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_12
0x4008ea4	      0xbe00000000	                              mov esi, 0	      4322	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_14
0x4008ea9	      0xbf00000000	                              mov edi, 0	      4322	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_14
0x4008eae	      0xe800000000	                          call 0x4008eb3	      4322	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_14
0x4008eb3	          0x4889c7	                            mov rdi, rax	      4322	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_14
0x4008eb6	    0x8b8d40ffffff	             mov ecx, dword [rbp - 0xc0]	      4320	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_13
0x4008ebc	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4320	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_13
0x4008ec0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4320	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_13
0x4008ec7	          0x4889c6	                            mov rsi, rax	      4320	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_13
0x4008eca	      0xb800000000	                              mov eax, 0	      4320	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_13
0x4008ecf	      0xe800000000	                          call 0x4008ed4	      4320	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5	CALL_13
0x4008ed4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4324	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5
0x4008edb	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4324	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5
0x4008ee1	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4325	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5
0x4008eeb	      0xe9fb010000	                           jmp 0x40090eb	      4326	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_5
0x4008ef0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008ef7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008efe	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f02	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f06	        0x48c1e003	                              shl rax, 3	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f0a	    0x488d0cc50000	                        lea rcx, [rax*8]	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f12	          0x4829c1	                            sub rcx, rax	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f15	          0x4889c8	                            mov rax, rcx	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f18	          0x4801d0	                            add rax, rdx	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f1b	        0x488945a8	             mov qword [rbp - 0x58], rax	      4329	coffcode.h	FUNCTION_33	FOR_1	IF_4	CALL_15
0x4008f1f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4332	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f23	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4332	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f26	            0x85c0	                           test eax, eax	      4332	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f28	            0x754c	                           jne 0x4008f76	      4332	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f2a	      0xbe00000000	                              mov esi, 0	      4336	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_17
0x4008f2f	      0xbf00000000	                              mov edi, 0	      4336	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_17
0x4008f34	      0xe800000000	                          call 0x4008f39	      4336	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_17
0x4008f39	          0x4889c7	                            mov rdi, rax	      4336	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_17
0x4008f3c	    0x8b8d40ffffff	             mov ecx, dword [rbp - 0xc0]	      4334	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_16
0x4008f42	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4334	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_16
0x4008f46	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4334	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_16
0x4008f4d	          0x4889c6	                            mov rsi, rax	      4334	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_16
0x4008f50	      0xb800000000	                              mov eax, 0	      4334	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_16
0x4008f55	      0xe800000000	                          call 0x4008f5a	      4334	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6	CALL_16
0x4008f5a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4338	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f61	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4338	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f67	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4339	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f71	      0xe975010000	                           jmp 0x40090eb	      4340	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_6
0x4008f76	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4342	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008f7a	        0x488b4008	                mov rax, qword [rax + 8]	      4342	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008f7e	        0x488945b0	             mov qword [rbp - 0x50], rax	      4342	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4008f82	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4345	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_18
0x4008f89	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4345	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_18
0x4008f90	          0x488b00	                    mov rax, qword [rax]	      4345	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_18
0x4008f93	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      4345	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_18
0x4008f97	            0x7737	                            ja 0x4008fd0	      4345	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_18
0x4008f99	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fa0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fa7	          0x488b10	                    mov rdx, qword [rax]	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008faa	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fb1	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fb7	            0x89c1	                            mov ecx, eax	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fb9	          0x4889c8	                            mov rax, rcx	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fbc	        0x48c1e003	                              shl rax, 3	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fc0	          0x4801c8	                            add rax, rcx	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fc3	        0x48c1e003	                              shl rax, 3	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fc7	          0x4801d0	                            add rax, rdx	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fca	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fce	            0x774b	                            ja 0x400901b	      4346	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_19
0x4008fd0	      0xbe00000000	                              mov esi, 0	      4350	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_21
0x4008fd5	      0xbf00000000	                              mov edi, 0	      4350	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_21
0x4008fda	      0xe800000000	                          call 0x4008fdf	      4350	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_21
0x4008fdf	          0x4889c1	                            mov rcx, rax	      4350	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_21
0x4008fe2	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      4348	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_20
0x4008fe8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4348	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_20
0x4008fef	          0x4889c6	                            mov rsi, rax	      4348	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_20
0x4008ff2	          0x4889cf	                            mov rdi, rcx	      4348	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_20
0x4008ff5	      0xb800000000	                              mov eax, 0	      4348	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_20
0x4008ffa	      0xe800000000	                          call 0x4008fff	      4348	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7	CALL_20
0x4008fff	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4352	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7
0x4009006	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4352	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7
0x400900c	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4353	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7
0x4009016	      0xe9d0000000	                           jmp 0x40090eb	      4354	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_7
0x400901b	    0xc7854cffffff	               mov dword [rbp - 0xb4], 1	      4357	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4009025	    0x838548ffffff	               add dword [rbp - 0xb8], 1	      4358	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x400902c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4359	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4009033	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4359	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4009037	        0x48895008	                mov qword [rax + 8], rdx	      4359	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x400903b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4360	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8
0x400903f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4360	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8
0x4009043	          0x4885c0	                           test rax, rax	      4360	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8
0x4009046	            0x7434	                            je 0x400907c	      4360	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8
0x4009048	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x400904c	        0x488b5808	                mov rbx, qword [rax + 8]	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x4009050	      0xbe00000000	                              mov esi, 0	      4363	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_23
0x4009055	      0xbf00000000	                              mov edi, 0	      4363	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_23
0x400905a	      0xe800000000	                          call 0x400905f	      4363	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_23
0x400905f	          0x4889c1	                            mov rcx, rax	      4363	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_23
0x4009062	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x4009069	          0x4889da	                            mov rdx, rbx	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x400906c	          0x4889c6	                            mov rsi, rax	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x400906f	          0x4889cf	                            mov rdi, rcx	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x4009072	      0xb800000000	                              mov eax, 0	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x4009077	      0xe800000000	                          call 0x400907c	      4361	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_8	CALL_22
0x400907c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4366	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4009080	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4366	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x4009087	        0x48895038	             mov qword [rax + 0x38], rdx	      4366	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x400908b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4367	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_9
0x400908f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4367	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_9
0x4009093	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      4367	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_9
0x400909a	            0x730a	                           jae 0x40090a6	      4367	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_9
0x400909c	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      4368	coffcode.h	FUNCTION_33	FOR_1	IF_4	IF_9
0x40090a6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4369	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x40090aa	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4369	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x40090ae	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4369	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x40090b5	            0xeb29	                           jmp 0x40090e0	      4369	coffcode.h	FUNCTION_33	FOR_1	IF_4
0x40090b7	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	      4371	coffcode.h	FUNCTION_33	FOR_1	ELSE_1	IF_10
0x40090be	            0x742a	                            je 0x40090ea	      4371	coffcode.h	FUNCTION_33	FOR_1	ELSE_1	IF_10
0x40090c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4376	coffcode.h	FUNCTION_33	FOR_1	ELSE_2
0x40090c4	          0x4889c2	                            mov rdx, rax	      4377	coffcode.h	FUNCTION_33	FOR_1	ELSE_2
0x40090c7	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4377	coffcode.h	FUNCTION_33	FOR_1	ELSE_2
0x40090ce	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4377	coffcode.h	FUNCTION_33	FOR_1	ELSE_2
0x40090d2	          0x4829c2	                            sub rdx, rax	      4377	coffcode.h	FUNCTION_33	FOR_1	ELSE_2
0x40090d5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4376	coffcode.h	FUNCTION_33	FOR_1	ELSE_2
0x40090dc	        0x48895008	                mov qword [rax + 8], rdx	      4376	coffcode.h	FUNCTION_33	FOR_1	ELSE_2
0x40090e0	    0x48838558ffff	            add qword [rbp - 0xa8], 0x10	      4378	coffcode.h	FUNCTION_33	FOR_1
0x40090e8	            0xeb01	                           jmp 0x40090eb	      4378	coffcode.h	FUNCTION_33	FOR_1
0x40090ea	              0x90	                                     nop	      4374	coffcode.h	FUNCTION_33	FOR_1	ELSE_1	IF_10
0x40090eb	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      4299	coffcode.h	FUNCTION_33	FOR_1
0x40090f2	    0x48838568ffff	               add qword [rbp - 0x98], 6	      4299	coffcode.h	FUNCTION_33	FOR_1
0x40090fa	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4299	coffcode.h	FUNCTION_33	FOR_1
0x4009101	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4299	coffcode.h	FUNCTION_33	FOR_1
0x4009107	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      4299	coffcode.h	FUNCTION_33	FOR_1
0x400910d	     0xf87fdfcffff	                            ja 0x4008e10	      4299	coffcode.h	FUNCTION_33	FOR_1
0x4009113	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4381	coffcode.h	FUNCTION_33
0x400911a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4381	coffcode.h	FUNCTION_33
0x400911e	          0x4829c2	                            sub rdx, rax	      4381	coffcode.h	FUNCTION_33
0x4009121	          0x4889d0	                            mov rax, rdx	      4381	coffcode.h	FUNCTION_33
0x4009124	        0x48c1f804	                              sar rax, 4	      4381	coffcode.h	FUNCTION_33
0x4009128	            0x89c2	                            mov edx, eax	      4381	coffcode.h	FUNCTION_33
0x400912a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4381	coffcode.h	FUNCTION_33
0x4009131	    0x8990c0000000	             mov dword [rax + 0xc0], edx	      4381	coffcode.h	FUNCTION_33
0x4009137	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4382	coffcode.h	FUNCTION_33	CALL_24
0x400913e	      0xba10000000	                           mov edx, 0x10	      4382	coffcode.h	FUNCTION_33	CALL_24
0x4009143	      0xbe00000000	                              mov esi, 0	      4382	coffcode.h	FUNCTION_33	CALL_24
0x4009148	          0x4889c7	                            mov rdi, rax	      4382	coffcode.h	FUNCTION_33	CALL_24
0x400914b	      0xe800000000	                          call 0x4009150	      4382	coffcode.h	FUNCTION_33	CALL_24
0x4009150	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4383	coffcode.h	FUNCTION_33	CALL_25
0x4009154	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4383	coffcode.h	FUNCTION_33	CALL_25
0x400915b	          0x4889d6	                            mov rsi, rdx	      4383	coffcode.h	FUNCTION_33	CALL_25
0x400915e	          0x4889c7	                            mov rdi, rax	      4383	coffcode.h	FUNCTION_33	CALL_25
0x4009161	      0xe800000000	                          call 0x4009166	      4383	coffcode.h	FUNCTION_33	CALL_25
0x4009166	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4386	coffcode.h	FUNCTION_33	IF_11
0x400916d	     0xf8556020000	                           jne 0x40093c9	      4386	coffcode.h	FUNCTION_33	IF_11
0x4009173	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      4393	coffcode.h	FUNCTION_33	IF_11	CALL_26
0x4009179	    0x488d14c50000	                        lea rdx, [rax*8]	      4393	coffcode.h	FUNCTION_33	IF_11	CALL_26
0x4009181	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4393	coffcode.h	FUNCTION_33	IF_11	CALL_26
0x4009188	          0x4889d6	                            mov rsi, rdx	      4393	coffcode.h	FUNCTION_33	IF_11	CALL_26
0x400918b	          0x4889c7	                            mov rdi, rax	      4393	coffcode.h	FUNCTION_33	IF_11	CALL_26
0x400918e	      0xe800000000	                          call 0x4009193	      4393	coffcode.h	FUNCTION_33	IF_11	CALL_26
0x4009193	        0x488945b8	             mov qword [rbp - 0x48], rax	      4393	coffcode.h	FUNCTION_33	IF_11	CALL_26
0x4009197	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4394	coffcode.h	FUNCTION_33	IF_11	IF_12
0x400919c	     0xf841d020000	                            je 0x40093bf	      4394	coffcode.h	FUNCTION_33	IF_11	IF_12
0x40091a2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4396	coffcode.h	FUNCTION_33	IF_11	IF_12
0x40091a6	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4396	coffcode.h	FUNCTION_33	IF_11	IF_12
0x40091ad	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      4399	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2
0x40091b7	            0xeb4a	                           jmp 0x4009203	      4399	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2
0x40091b9	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091bf	        0x48c1e004	                              shl rax, 4	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091c3	          0x4889c2	                            mov rdx, rax	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091c6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091ca	          0x4801d0	                            add rax, rdx	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091cd	            0x8b00	                    mov eax, dword [rax]	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091cf	            0x85c0	                           test eax, eax	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091d1	            0x7529	                           jne 0x40091fc	      4400	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091d3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091da	        0x488d5008	                      lea rdx, [rax + 8]	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091de	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091e5	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091eb	          0x4889d1	                            mov rcx, rdx	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091ee	        0x48c1e104	                              shl rcx, 4	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091f2	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091f6	          0x4801ca	                            add rdx, rcx	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091f9	          0x488910	                    mov qword [rax], rdx	      4401	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2	IF_13
0x40091fc	    0x838554ffffff	               add dword [rbp - 0xac], 1	      4399	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2
0x4009203	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4399	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2
0x400920a	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4399	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2
0x4009210	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      4399	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2
0x4009216	            0x77a1	                            ja 0x40091b9	      4399	coffcode.h	FUNCTION_33	IF_11	IF_12	FOR_2
0x4009218	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x400921f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x4009223	          0x4829c2	                            sub rdx, rax	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x4009226	          0x4889d0	                            mov rax, rdx	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x4009229	        0x48c1f803	                              sar rax, 3	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x400922d	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x4009233	            0x740f	                            je 0x4009244	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x4009235	      0xbe33110000	                         mov esi, 0x1133	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x400923a	      0xbf00000000	                              mov edi, 0	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x400923f	      0xe800000000	                          call 0x4009244	      4403	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_27
0x4009244	    0x8bb548ffffff	             mov esi, dword [rbp - 0xb8]	      4406	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_28
0x400924a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4406	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_28
0x400924e	      0xb900000000	                              mov ecx, 0	      4406	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_28
0x4009253	      0xba08000000	                              mov edx, 8	      4406	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_28
0x4009258	          0x4889c7	                            mov rdi, rax	      4406	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_28
0x400925b	      0xe800000000	                          call 0x4009260	      4406	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_28
0x4009260	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4409	coffcode.h	FUNCTION_33	IF_11	IF_12
0x4009267	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4409	coffcode.h	FUNCTION_33	IF_11	IF_12
0x400926d	            0x89c0	                            mov eax, eax	      4409	coffcode.h	FUNCTION_33	IF_11	IF_12
0x400926f	        0x48c1e004	                              shl rax, 4	      4409	coffcode.h	FUNCTION_33	IF_11	IF_12
0x4009273	        0x48894588	             mov qword [rbp - 0x78], rax	      4409	coffcode.h	FUNCTION_33	IF_11	IF_12
0x4009277	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4410	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_29
0x400927b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4410	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_29
0x4009282	          0x4889d6	                            mov rsi, rdx	      4410	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_29
0x4009285	          0x4889c7	                            mov rdi, rax	      4410	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_29
0x4009288	      0xe800000000	                          call 0x400928d	      4410	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_29
0x400928d	        0x488945c0	             mov qword [rbp - 0x40], rax	      4410	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_29
0x4009291	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4411	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14
0x4009296	     0xf8401010000	                            je 0x400939d	      4411	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14
0x400929c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4413	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14
0x40092a0	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4413	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14
0x40092a7	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      4415	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092b1	      0xe988000000	                           jmp 0x400933e	      4415	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092b6	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4418	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092bc	    0x488d14c50000	                        lea rdx, [rax*8]	      4418	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092c4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4418	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092c8	          0x4801d0	                            add rax, rdx	      4418	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092cb	          0x488b00	                    mov rax, qword [rax]	      4418	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092ce	        0x48894580	             mov qword [rbp - 0x80], rax	      4418	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092d2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4421	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092d6	        0x488b4008	                mov rax, qword [rax + 8]	      4421	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092da	        0x488945c8	             mov qword [rbp - 0x38], rax	      4421	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092de	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092e9	          0x4829c2	                            sub rdx, rax	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092ec	          0x4889d0	                            mov rax, rdx	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092ef	          0x4889c2	                            mov rdx, rax	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092f2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092f6	          0x4801c2	                            add rdx, rax	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x40092fd	        0x48895038	             mov qword [rax + 0x38], rdx	      4424	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x4009301	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x4009308	        0x488d4110	                   lea rax, [rcx + 0x10]	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x400930c	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x4009313	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x4009317	        0x488d5010	                   lea rdx, [rax + 0x10]	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x400931b	        0x48895580	             mov qword [rbp - 0x80], rdx	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x400931f	        0x488b5008	                mov rdx, qword [rax + 8]	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x4009323	          0x488b00	                    mov rax, qword [rax]	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x4009326	          0x488901	                    mov qword [rcx], rax	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x4009329	        0x48895108	                mov qword [rcx + 8], rdx	      4427	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3	DO_1
0x400932d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4428	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x4009331	            0x8b00	                    mov eax, dword [rax]	      4428	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x4009333	            0x85c0	                           test eax, eax	      4428	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x4009335	            0x75ca	                           jne 0x4009301	      4428	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x4009337	    0x838554ffffff	               add dword [rbp - 0xac], 1	      4415	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x400933e	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4415	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x4009344	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      4415	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x400934a	     0xf8266ffffff	                            jb 0x40092b6	      4415	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	FOR_3
0x4009350	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009357	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x400935b	          0x4829c2	                            sub rdx, rax	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x400935e	          0x4889d0	                            mov rax, rdx	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009361	        0x48c1f804	                              sar rax, 4	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009365	          0x4889c2	                            mov rdx, rax	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009368	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x400936c	        0x48c1e804	                              shr rax, 4	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009370	          0x4839c2	                            cmp rdx, rax	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009373	            0x740f	                            je 0x4009384	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009375	      0xbe4e110000	                         mov esi, 0x114e	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x400937a	      0xbf00000000	                              mov edi, 0	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x400937f	      0xe800000000	                          call 0x4009384	      4430	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_30
0x4009384	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4432	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_31
0x4009388	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4432	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_31
0x400938c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4432	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_31
0x4009390	          0x4889ce	                            mov rsi, rcx	      4432	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_31
0x4009393	          0x4889c7	                            mov rdi, rax	      4432	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_31
0x4009396	      0xe800000000	                          call 0x400939b	      4432	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_31
0x400939b	            0xeb0a	                           jmp 0x40093a7	      4432	coffcode.h	FUNCTION_33	IF_11	IF_12	IF_14	CALL_31
0x400939d	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4435	coffcode.h	FUNCTION_33	IF_11	IF_12	ELSE_3
0x40093a7	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4436	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_32
0x40093ab	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4436	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_32
0x40093b2	          0x4889d6	                            mov rsi, rdx	      4436	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_32
0x40093b5	          0x4889c7	                            mov rdi, rax	      4436	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_32
0x40093b8	      0xe800000000	                          call 0x40093bd	      4436	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_32
0x40093bd	            0xeb0a	                           jmp 0x40093c9	      4436	coffcode.h	FUNCTION_33	IF_11	IF_12	CALL_32
0x40093bf	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4439	coffcode.h	FUNCTION_33	IF_11	ELSE_4
0x40093c9	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      4442	coffcode.h	FUNCTION_33	ELSE_4
0x40093cf	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093d3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093dc	            0x7405	                            je 0x40093e3	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093de	      0xe800000000	                          call 0x40093e3	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093e3	    0x4881c4c00000	                           add rsp, 0xc0	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093ea	              0x5b	                                 pop rbx	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093eb	            0x415c	                                 pop r12	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093ed	              0x5d	                                 pop rbp	      4443	coffcode.h	FUNCTION_33	ELSE_4
0x40093ee	              0xc3	                                     ret	      4443	coffcode.h	FUNCTION_33	ELSE_4
coff_amd64_reloc_type_lookup	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,1:IF,0:CALL,1:DO,0	66
0x4002882	              0x55	                                push rbp	       664	coff-x86_64.c	FUNCTION_78
0x4002883	          0x4889e5	                            mov rbp, rsp	       664	coff-x86_64.c	FUNCTION_78
0x4002886	        0x4883ec10	                           sub rsp, 0x10	       664	coff-x86_64.c	FUNCTION_78
0x400288a	        0x48897df8	                mov qword [rbp - 8], rdi	       664	coff-x86_64.c	FUNCTION_78
0x400288e	          0x8975f4	              mov dword [rbp - 0xc], esi	       664	coff-x86_64.c	FUNCTION_78
0x4002891	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002894	          0x83f809	                              cmp eax, 9	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002897	            0x7467	                            je 0x4002900	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002899	          0x83f809	                              cmp eax, 9	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400289c	            0x7722	                            ja 0x40028c0	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400289e	          0x83f805	                              cmp eax, 5	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028a1	            0x746b	                            je 0x400290e	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028a3	          0x83f805	                              cmp eax, 5	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028a6	            0x770c	                            ja 0x40028b4	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028a8	          0x83f801	                              cmp eax, 1	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028ab	            0x7445	                            je 0x40028f2	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028ad	          0x83f802	                              cmp eax, 2	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028b0	            0x7439	                            je 0x40028eb	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028b2	            0xeb7d	                           jmp 0x4002931	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028b4	          0x83f807	                              cmp eax, 7	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028b7	            0x7463	                            je 0x400291c	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028b9	          0x83f808	                              cmp eax, 8	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028bc	            0x743b	                            je 0x40028f9	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028be	            0xeb71	                           jmp 0x4002931	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028c0	          0x83f80e	                            cmp eax, 0xe	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028c3	            0x7465	                            je 0x400292a	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028c5	          0x83f80e	                            cmp eax, 0xe	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028c8	            0x770c	                            ja 0x40028d6	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028ca	          0x83f80b	                            cmp eax, 0xb	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028cd	            0x7446	                            je 0x4002915	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028cf	          0x83f80d	                            cmp eax, 0xd	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028d2	            0x744f	                            je 0x4002923	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028d4	            0xeb5b	                           jmp 0x4002931	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028d6	          0x83f83e	                           cmp eax, 0x3e	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028d9	            0x7409	                            je 0x40028e4	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028db	      0x3d84010000	                          cmp eax, 0x184	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028e0	            0x7425	                            je 0x4002907	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028e2	            0xeb4d	                           jmp 0x4002931	       665	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028e4	      0xb800000000	                              mov eax, 0	       668	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028e9	            0xeb5a	                           jmp 0x4002945	       668	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028eb	      0xb800000000	                              mov eax, 0	       670	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028f0	            0xeb53	                           jmp 0x4002945	       670	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028f2	      0xb800000000	                              mov eax, 0	       672	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028f7	            0xeb4c	                           jmp 0x4002945	       672	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028f9	      0xb800000000	                              mov eax, 0	       675	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x40028fe	            0xeb45	                           jmp 0x4002945	       675	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002900	      0xb800000000	                              mov eax, 0	       680	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002905	            0xeb3e	                           jmp 0x4002945	       680	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002907	      0xb800000000	                              mov eax, 0	       682	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400290c	            0xeb37	                           jmp 0x4002945	       682	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400290e	      0xb800000000	                              mov eax, 0	       684	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002913	            0xeb30	                           jmp 0x4002945	       684	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002915	      0xb800000000	                              mov eax, 0	       686	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400291a	            0xeb29	                           jmp 0x4002945	       686	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400291c	      0xb800000000	                              mov eax, 0	       688	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002921	            0xeb22	                           jmp 0x4002945	       688	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002923	      0xb800000000	                              mov eax, 0	       690	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002928	            0xeb1b	                           jmp 0x4002945	       690	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400292a	      0xb800000000	                              mov eax, 0	       693	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x400292f	            0xeb14	                           jmp 0x4002945	       693	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002931	      0xbeb8020000	                          mov esi, 0x2b8	       696	coff-x86_64.c	FUNCTION_78	SWITCH_1	CALL_1
0x4002936	      0xbf00000000	                              mov edi, 0	       696	coff-x86_64.c	FUNCTION_78	SWITCH_1	CALL_1
0x400293b	      0xe800000000	                          call 0x4002940	       696	coff-x86_64.c	FUNCTION_78	SWITCH_1	CALL_1
0x4002940	      0xb800000000	                              mov eax, 0	       697	coff-x86_64.c	FUNCTION_78	SWITCH_1
0x4002945	              0xc9	                                   leave	       699	coff-x86_64.c	FUNCTION_78
0x4002946	              0xc3	                                     ret	       699	coff-x86_64.c	FUNCTION_78
pe_print_private_bfd_data	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,2:CALL,3:DO,0	33
0x400317a	              0x55	                                push rbp	       333	peicode.h	FUNCTION_54
0x400317b	          0x4889e5	                            mov rbp, rsp	       333	peicode.h	FUNCTION_54
0x400317e	        0x4883ec20	                           sub rsp, 0x20	       333	peicode.h	FUNCTION_54
0x4003182	        0x48897de8	             mov qword [rbp - 0x18], rdi	       333	peicode.h	FUNCTION_54
0x4003186	        0x488975e0	             mov qword [rbp - 0x20], rsi	       333	peicode.h	FUNCTION_54
0x400318a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       334	peicode.h	FUNCTION_54
0x400318e	        0x488945f8	                mov qword [rbp - 8], rax	       334	peicode.h	FUNCTION_54
0x4003192	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       336	peicode.h	FUNCTION_54	IF_1	CALL_1
0x4003196	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	peicode.h	FUNCTION_54	IF_1	CALL_1
0x400319a	          0x4889d6	                            mov rsi, rdx	       336	peicode.h	FUNCTION_54	IF_1	CALL_1
0x400319d	          0x4889c7	                            mov rdi, rax	       336	peicode.h	FUNCTION_54	IF_1	CALL_1
0x40031a0	      0xe800000000	                          call 0x40031a5	       336	peicode.h	FUNCTION_54	IF_1	CALL_1
0x40031a5	            0x85c0	                           test eax, eax	       336	peicode.h	FUNCTION_54	IF_1	CALL_1
0x40031a7	            0x7507	                           jne 0x40031b0	       336	peicode.h	FUNCTION_54	IF_1	CALL_1
0x40031a9	      0xb800000000	                              mov eax, 0	       337	peicode.h	FUNCTION_54	IF_1
0x40031ae	            0xeb3b	                           jmp 0x40031eb	       337	peicode.h	FUNCTION_54	IF_1
0x40031b0	    0x488b05000000	            mov rax, qword [0x040031b7] 	       339	peicode.h	FUNCTION_54	IF_2
0x40031b7	          0x4885c0	                           test rax, rax	       339	peicode.h	FUNCTION_54	IF_2
0x40031ba	            0x7507	                           jne 0x40031c3	       339	peicode.h	FUNCTION_54	IF_2
0x40031bc	      0xb801000000	                              mov eax, 1	       340	peicode.h	FUNCTION_54	IF_2
0x40031c1	            0xeb28	                           jmp 0x40031eb	       340	peicode.h	FUNCTION_54	IF_2
0x40031c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       342	peicode.h	FUNCTION_54	CALL_2
0x40031c7	          0x4889c6	                            mov rsi, rax	       342	peicode.h	FUNCTION_54	CALL_2
0x40031ca	      0xbf0a000000	                            mov edi, 0xa	       342	peicode.h	FUNCTION_54	CALL_2
0x40031cf	      0xe800000000	                          call 0x40031d4	       342	peicode.h	FUNCTION_54	CALL_2
0x40031d4	    0x488b05000000	            mov rax, qword [0x040031db] 	       344	peicode.h	FUNCTION_54	CALL_3
0x40031db	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       344	peicode.h	FUNCTION_54	CALL_3
0x40031df	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       344	peicode.h	FUNCTION_54	CALL_3
0x40031e3	          0x4889ce	                            mov rsi, rcx	       344	peicode.h	FUNCTION_54	CALL_3
0x40031e6	          0x4889d7	                            mov rdi, rdx	       344	peicode.h	FUNCTION_54	CALL_3
0x40031e9	            0xffd0	                                call rax	       344	peicode.h	FUNCTION_54	CALL_3
0x40031eb	              0xc9	                                   leave	       345	peicode.h	FUNCTION_54
0x40031ec	              0xc3	                                     ret	       345	peicode.h	FUNCTION_54
sec_to_styp_flags	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,15:CALL,0:DO,0	124
0x4005307	              0x55	                                push rbp	       639	coffcode.h	FUNCTION_4
0x4005308	          0x4889e5	                            mov rbp, rsp	       639	coffcode.h	FUNCTION_4
0x400530b	        0x4883ec20	                           sub rsp, 0x20	       639	coffcode.h	FUNCTION_4
0x400530f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       639	coffcode.h	FUNCTION_4
0x4005313	          0x8975e4	             mov dword [rbp - 0x1c], esi	       639	coffcode.h	FUNCTION_4
0x4005316	    0x48c745f80000	                  mov qword [rbp - 8], 0	       640	coffcode.h	FUNCTION_4
0x400531e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       641	coffcode.h	FUNCTION_4
0x4005325	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       643	coffcode.h	FUNCTION_4	IF_1
0x4005329	      0xba06000000	                              mov edx, 6	       643	coffcode.h	FUNCTION_4	IF_1
0x400532e	      0xbe00000000	                              mov esi, 0	       643	coffcode.h	FUNCTION_4	IF_1
0x4005333	          0x4889c7	                            mov rdi, rax	       643	coffcode.h	FUNCTION_4	IF_1
0x4005336	      0xe800000000	                          call 0x400533b	       643	coffcode.h	FUNCTION_4	IF_1
0x400533b	            0x85c0	                           test eax, eax	       643	coffcode.h	FUNCTION_4	IF_1
0x400533d	            0x7468	                            je 0x40053a7	       643	coffcode.h	FUNCTION_4	IF_1
0x400533f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       644	coffcode.h	FUNCTION_4	IF_1
0x4005343	      0xba07000000	                              mov edx, 7	       644	coffcode.h	FUNCTION_4	IF_1
0x4005348	      0xbe00000000	                              mov esi, 0	       644	coffcode.h	FUNCTION_4	IF_1
0x400534d	          0x4889c7	                            mov rdi, rax	       644	coffcode.h	FUNCTION_4	IF_1
0x4005350	      0xe800000000	                          call 0x4005355	       644	coffcode.h	FUNCTION_4	IF_1
0x4005355	            0x85c0	                           test eax, eax	       644	coffcode.h	FUNCTION_4	IF_1
0x4005357	            0x744e	                            je 0x40053a7	       644	coffcode.h	FUNCTION_4	IF_1
0x4005359	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	coffcode.h	FUNCTION_4	IF_1
0x400535d	      0xba11000000	                           mov edx, 0x11	       646	coffcode.h	FUNCTION_4	IF_1
0x4005362	      0xbe00000000	                              mov esi, 0	       646	coffcode.h	FUNCTION_4	IF_1
0x4005367	          0x4889c7	                            mov rdi, rax	       646	coffcode.h	FUNCTION_4	IF_1
0x400536a	      0xe800000000	                          call 0x400536f	       646	coffcode.h	FUNCTION_4	IF_1
0x400536f	            0x85c0	                           test eax, eax	       646	coffcode.h	FUNCTION_4	IF_1
0x4005371	            0x7434	                            je 0x40053a7	       646	coffcode.h	FUNCTION_4	IF_1
0x4005373	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	coffcode.h	FUNCTION_4	IF_1
0x4005377	      0xba11000000	                           mov edx, 0x11	       647	coffcode.h	FUNCTION_4	IF_1
0x400537c	      0xbe00000000	                              mov esi, 0	       647	coffcode.h	FUNCTION_4	IF_1
0x4005381	          0x4889c7	                            mov rdi, rax	       647	coffcode.h	FUNCTION_4	IF_1
0x4005384	      0xe800000000	                          call 0x4005389	       647	coffcode.h	FUNCTION_4	IF_1
0x4005389	            0x85c0	                           test eax, eax	       647	coffcode.h	FUNCTION_4	IF_1
0x400538b	            0x741a	                            je 0x40053a7	       647	coffcode.h	FUNCTION_4	IF_1
0x400538d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	coffcode.h	FUNCTION_4	IF_1
0x4005391	      0xba05000000	                              mov edx, 5	       649	coffcode.h	FUNCTION_4	IF_1
0x4005396	      0xbe00000000	                              mov esi, 0	       649	coffcode.h	FUNCTION_4	IF_1
0x400539b	          0x4889c7	                            mov rdi, rax	       649	coffcode.h	FUNCTION_4	IF_1
0x400539e	      0xe800000000	                          call 0x40053a3	       649	coffcode.h	FUNCTION_4	IF_1
0x40053a3	            0x85c0	                           test eax, eax	       649	coffcode.h	FUNCTION_4	IF_1
0x40053a5	            0x7507	                           jne 0x40053ae	       649	coffcode.h	FUNCTION_4	IF_1
0x40053a7	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       650	coffcode.h	FUNCTION_4	IF_1
0x40053ae	        0x837df400	                cmp dword [rbp - 0xc], 0	       661	coffcode.h	FUNCTION_4	IF_2
0x40053b2	            0x740e	                            je 0x40053c2	       661	coffcode.h	FUNCTION_4	IF_2
0x40053b4	    0x8165e400000e	         and dword [rbp - 0x1c], 0xe0000	       663	coffcode.h	FUNCTION_4	IF_2
0x40053bb	    0x814de4082000	           or dword [rbp - 0x1c], 0x2008	       666	coffcode.h	FUNCTION_4	IF_2
0x40053c2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       672	coffcode.h	FUNCTION_4	IF_3
0x40053c5	          0x83e010	                           and eax, 0x10	       672	coffcode.h	FUNCTION_4	IF_3
0x40053c8	            0x85c0	                           test eax, eax	       672	coffcode.h	FUNCTION_4	IF_3
0x40053ca	            0x7405	                            je 0x40053d1	       672	coffcode.h	FUNCTION_4	IF_3
0x40053cc	      0x48834df820	                or qword [rbp - 8], 0x20	       673	coffcode.h	FUNCTION_4	IF_3
0x40053d1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       674	coffcode.h	FUNCTION_4	IF_4
0x40053d4	      0x2520200000	                         and eax, 0x2020	       674	coffcode.h	FUNCTION_4	IF_4
0x40053d9	            0x85c0	                           test eax, eax	       674	coffcode.h	FUNCTION_4	IF_4
0x40053db	            0x7405	                            je 0x40053e2	       674	coffcode.h	FUNCTION_4	IF_4
0x40053dd	      0x48834df840	                or qword [rbp - 8], 0x40	       675	coffcode.h	FUNCTION_4	IF_4
0x40053e2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       676	coffcode.h	FUNCTION_4	IF_5
0x40053e5	          0x83e001	                              and eax, 1	       676	coffcode.h	FUNCTION_4	IF_5
0x40053e8	            0x85c0	                           test eax, eax	       676	coffcode.h	FUNCTION_4	IF_5
0x40053ea	            0x7412	                            je 0x40053fe	       676	coffcode.h	FUNCTION_4	IF_5
0x40053ec	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       676	coffcode.h	FUNCTION_4	IF_5
0x40053ef	          0x83e002	                              and eax, 2	       676	coffcode.h	FUNCTION_4	IF_5
0x40053f2	            0x85c0	                           test eax, eax	       676	coffcode.h	FUNCTION_4	IF_5
0x40053f4	            0x7508	                           jne 0x40053fe	       676	coffcode.h	FUNCTION_4	IF_5
0x40053f6	    0x48814df88000	                or qword [rbp - 8], 0x80	       677	coffcode.h	FUNCTION_4	IF_5
0x40053fe	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       681	coffcode.h	FUNCTION_4	IF_6
0x4005401	      0x2500100000	                         and eax, 0x1000	       681	coffcode.h	FUNCTION_4	IF_6
0x4005406	            0x85c0	                           test eax, eax	       681	coffcode.h	FUNCTION_4	IF_6
0x4005408	            0x7408	                            je 0x4005412	       681	coffcode.h	FUNCTION_4	IF_6
0x400540a	    0x48814df80010	              or qword [rbp - 8], 0x1000	       682	coffcode.h	FUNCTION_4	IF_6
0x4005412	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       683	coffcode.h	FUNCTION_4	IF_7
0x4005415	      0x2500200000	                         and eax, 0x2000	       683	coffcode.h	FUNCTION_4	IF_7
0x400541a	            0x85c0	                           test eax, eax	       683	coffcode.h	FUNCTION_4	IF_7
0x400541c	            0x7408	                            je 0x4005426	       683	coffcode.h	FUNCTION_4	IF_7
0x400541e	    0x48814df80000	           or qword [rbp - 8], 0x2000000	       684	coffcode.h	FUNCTION_4	IF_7
0x4005426	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       685	coffcode.h	FUNCTION_4	IF_8
0x4005429	      0x2500800000	                         and eax, 0x8000	       685	coffcode.h	FUNCTION_4	IF_8
0x400542e	            0x85c0	                           test eax, eax	       685	coffcode.h	FUNCTION_4	IF_8
0x4005430	            0x740e	                            je 0x4005440	       685	coffcode.h	FUNCTION_4	IF_8
0x4005432	        0x837df400	                cmp dword [rbp - 0xc], 0	       685	coffcode.h	FUNCTION_4	IF_8
0x4005436	            0x7508	                           jne 0x4005440	       685	coffcode.h	FUNCTION_4	IF_8
0x4005438	    0x48814df80008	               or qword [rbp - 8], 0x800	       686	coffcode.h	FUNCTION_4	IF_8
0x4005440	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       687	coffcode.h	FUNCTION_4	IF_9
0x4005443	      0x2500020000	                          and eax, 0x200	       687	coffcode.h	FUNCTION_4	IF_9
0x4005448	            0x85c0	                           test eax, eax	       687	coffcode.h	FUNCTION_4	IF_9
0x400544a	            0x740e	                            je 0x400545a	       687	coffcode.h	FUNCTION_4	IF_9
0x400544c	        0x837df400	                cmp dword [rbp - 0xc], 0	       687	coffcode.h	FUNCTION_4	IF_9
0x4005450	            0x7508	                           jne 0x400545a	       687	coffcode.h	FUNCTION_4	IF_9
0x4005452	    0x48814df80008	               or qword [rbp - 8], 0x800	       688	coffcode.h	FUNCTION_4	IF_9
0x400545a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       691	coffcode.h	FUNCTION_4	IF_10
0x400545d	      0x2500000200	                        and eax, 0x20000	       691	coffcode.h	FUNCTION_4	IF_10
0x4005462	            0x85c0	                           test eax, eax	       691	coffcode.h	FUNCTION_4	IF_10
0x4005464	            0x7408	                            je 0x400546e	       691	coffcode.h	FUNCTION_4	IF_10
0x4005466	    0x48814df80010	              or qword [rbp - 8], 0x1000	       692	coffcode.h	FUNCTION_4	IF_10
0x400546e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       694	coffcode.h	FUNCTION_4	IF_11
0x4005471	      0x2500000c00	                        and eax, 0xc0000	       694	coffcode.h	FUNCTION_4	IF_11
0x4005476	            0x85c0	                           test eax, eax	       693	coffcode.h	FUNCTION_4	IF_11
0x4005478	            0x7408	                            je 0x4005482	       693	coffcode.h	FUNCTION_4	IF_11
0x400547a	    0x48814df80010	              or qword [rbp - 8], 0x1000	       696	coffcode.h	FUNCTION_4	IF_11
0x4005482	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       700	coffcode.h	FUNCTION_4	IF_12
0x4005485	      0x2500000040	                     and eax, 0x40000000	       700	coffcode.h	FUNCTION_4	IF_12
0x400548a	            0x85c0	                           test eax, eax	       700	coffcode.h	FUNCTION_4	IF_12
0x400548c	            0x7508	                           jne 0x4005496	       700	coffcode.h	FUNCTION_4	IF_12
0x400548e	    0x48814df80000	          or qword [rbp - 8], 0x40000000	       701	coffcode.h	FUNCTION_4	IF_12
0x4005496	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       702	coffcode.h	FUNCTION_4	IF_13
0x4005499	          0x83e008	                              and eax, 8	       702	coffcode.h	FUNCTION_4	IF_13
0x400549c	            0x85c0	                           test eax, eax	       702	coffcode.h	FUNCTION_4	IF_13
0x400549e	            0x7509	                           jne 0x40054a9	       702	coffcode.h	FUNCTION_4	IF_13
0x40054a0	      0xb800000080	                     mov eax, 0x80000000	       703	coffcode.h	FUNCTION_4	IF_13
0x40054a5	        0x480945f8	                 or qword [rbp - 8], rax	       703	coffcode.h	FUNCTION_4	IF_13
0x40054a9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       704	coffcode.h	FUNCTION_4	IF_14
0x40054ac	          0x83e010	                           and eax, 0x10	       704	coffcode.h	FUNCTION_4	IF_14
0x40054af	            0x85c0	                           test eax, eax	       704	coffcode.h	FUNCTION_4	IF_14
0x40054b1	            0x7408	                            je 0x40054bb	       704	coffcode.h	FUNCTION_4	IF_14
0x40054b3	    0x48814df80000	          or qword [rbp - 8], 0x20000000	       705	coffcode.h	FUNCTION_4	IF_14
0x40054bb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       706	coffcode.h	FUNCTION_4	IF_15
0x40054be	      0x2500000008	                   and eax, section_end.	       706	coffcode.h	FUNCTION_4	IF_15
0x40054c3	            0x85c0	                           test eax, eax	       706	coffcode.h	FUNCTION_4	IF_15
0x40054c5	            0x7408	                            je 0x40054cf	       706	coffcode.h	FUNCTION_4	IF_15
0x40054c7	    0x48814df80000	          or qword [rbp - 8], 0x10000000	       707	coffcode.h	FUNCTION_4	IF_15
0x40054cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       709	coffcode.h	FUNCTION_4
0x40054d3	              0xc9	                                   leave	       710	coffcode.h	FUNCTION_4
0x40054d4	              0xc3	                                     ret	       710	coffcode.h	FUNCTION_4
coff_compute_checksum	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,2:DO,1	50
0x4007553	              0x55	                                push rbp	      3277	coffcode.h	FUNCTION_27
0x4007554	          0x4889e5	                            mov rbp, rsp	      3277	coffcode.h	FUNCTION_27
0x4007557	        0x4883ec30	                           sub rsp, 0x30	      3277	coffcode.h	FUNCTION_27
0x400755b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3277	coffcode.h	FUNCTION_27
0x400755f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3277	coffcode.h	FUNCTION_27
0x4007568	        0x488945f8	                mov qword [rbp - 8], rax	      3277	coffcode.h	FUNCTION_27
0x400756c	            0x31c0	                            xor eax, eax	      3277	coffcode.h	FUNCTION_27
0x400756e	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3283	coffcode.h	FUNCTION_27
0x4007575	    0xc70500000000	               mov dword [0x0400757f], 0	      3284	coffcode.h	FUNCTION_27
0x400757f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3285	coffcode.h	FUNCTION_27
0x4007587	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x400758b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x400758f	      0xba00000000	                              mov edx, 0	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x4007594	          0x4889ce	                            mov rsi, rcx	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x4007597	          0x4889c7	                            mov rdi, rax	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x400759a	      0xe800000000	                          call 0x400759f	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x400759f	            0x85c0	                           test eax, eax	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x40075a1	            0x7407	                            je 0x40075aa	      3289	coffcode.h	FUNCTION_27	DO_1	IF_1	CALL_1
0x40075a3	      0xb800000000	                              mov eax, 0	      3290	coffcode.h	FUNCTION_27	DO_1	IF_1
0x40075a8	            0xeb4c	                           jmp 0x40075f6	      3290	coffcode.h	FUNCTION_27	DO_1	IF_1
0x40075aa	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	      3292	coffcode.h	FUNCTION_27	DO_1	CALL_2
0x40075ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3292	coffcode.h	FUNCTION_27	DO_1	CALL_2
0x40075b2	          0x4889d6	                            mov rsi, rdx	      3292	coffcode.h	FUNCTION_27	DO_1	CALL_2
0x40075b5	          0x4889c7	                            mov rdi, rax	      3292	coffcode.h	FUNCTION_27	DO_1	CALL_2
0x40075b8	      0xe8ecfeffff	                 call sym.coff_read_word	      3292	coffcode.h	FUNCTION_27	DO_1	CALL_2
0x40075bd	          0x8945ec	             mov dword [rbp - 0x14], eax	      3292	coffcode.h	FUNCTION_27	DO_1	CALL_2
0x40075c0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3293	coffcode.h	FUNCTION_27	DO_1
0x40075c3	           0x145e8	             add dword [rbp - 0x18], eax	      3293	coffcode.h	FUNCTION_27	DO_1
0x40075c6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3294	coffcode.h	FUNCTION_27	DO_1
0x40075c9	          0xc1e810	                           shr eax, 0x10	      3294	coffcode.h	FUNCTION_27	DO_1
0x40075cc	            0x89c2	                            mov edx, eax	      3294	coffcode.h	FUNCTION_27	DO_1
0x40075ce	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3294	coffcode.h	FUNCTION_27	DO_1
0x40075d1	             0x1d0	                            add eax, edx	      3294	coffcode.h	FUNCTION_27	DO_1
0x40075d3	      0x25ffff0000	                         and eax, 0xffff	      3294	coffcode.h	FUNCTION_27	DO_1
0x40075d8	          0x8945e8	             mov dword [rbp - 0x18], eax	      3294	coffcode.h	FUNCTION_27	DO_1
0x40075db	      0x488345f002	               add qword [rbp - 0x10], 2	      3295	coffcode.h	FUNCTION_27	DO_1
0x40075e0	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3297	coffcode.h	FUNCTION_27
0x40075e4	            0x75a1	                           jne 0x4007587	      3297	coffcode.h	FUNCTION_27
0x40075e6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3299	coffcode.h	FUNCTION_27
0x40075e9	          0xc1e810	                           shr eax, 0x10	      3299	coffcode.h	FUNCTION_27
0x40075ec	            0x89c2	                            mov edx, eax	      3299	coffcode.h	FUNCTION_27
0x40075ee	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3299	coffcode.h	FUNCTION_27
0x40075f1	             0x1d0	                            add eax, edx	      3299	coffcode.h	FUNCTION_27
0x40075f3	           0xfb7c0	                           movzx eax, ax	      3299	coffcode.h	FUNCTION_27
0x40075f6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3300	coffcode.h	FUNCTION_27
0x40075fa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3300	coffcode.h	FUNCTION_27
0x4007603	            0x7405	                            je 0x400760a	      3300	coffcode.h	FUNCTION_27
0x4007605	      0xe800000000	                          call 0x400760a	      3300	coffcode.h	FUNCTION_27
0x400760a	              0xc9	                                   leave	      3300	coffcode.h	FUNCTION_27
0x400760b	              0xc3	                                     ret	      3300	coffcode.h	FUNCTION_27
bfd_coff_set_long_section_names_allowed	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,1:DO,0	12
0x40052e0	              0x55	                                push rbp	       466	coffcode.h	FUNCTION_1
0x40052e1	          0x4889e5	                            mov rbp, rsp	       466	coffcode.h	FUNCTION_1
0x40052e4	        0x48897df8	                mov qword [rbp - 8], rdi	       466	coffcode.h	FUNCTION_1
0x40052e8	          0x8975f4	              mov dword [rbp - 0xc], esi	       466	coffcode.h	FUNCTION_1
0x40052eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       467	coffcode.h	FUNCTION_1	CALL_1
0x40052ef	        0x488b4008	                mov rax, qword [rax + 8]	       467	coffcode.h	FUNCTION_1	CALL_1
0x40052f3	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       467	coffcode.h	FUNCTION_1	CALL_1
0x40052fa	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       467	coffcode.h	FUNCTION_1	CALL_1
0x40052fd	          0x895074	             mov dword [rax + 0x74], edx	       467	coffcode.h	FUNCTION_1	CALL_1
0x4005300	      0xb801000000	                              mov eax, 1	       468	coffcode.h	FUNCTION_1
0x4005305	              0x5d	                                 pop rbp	       469	coffcode.h	FUNCTION_1
0x4005306	              0xc3	                                     ret	       469	coffcode.h	FUNCTION_1
coff_swap_reloc_out	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,2:DO,0	43
0x4002aa3	              0x55	                                push rbp	       145	peicode.h	FUNCTION_49
0x4002aa4	          0x4889e5	                            mov rbp, rsp	       145	peicode.h	FUNCTION_49
0x4002aa7	        0x4883ec30	                           sub rsp, 0x30	       145	peicode.h	FUNCTION_49
0x4002aab	        0x48897de8	             mov qword [rbp - 0x18], rdi	       145	peicode.h	FUNCTION_49
0x4002aaf	        0x488975e0	             mov qword [rbp - 0x20], rsi	       145	peicode.h	FUNCTION_49
0x4002ab3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       145	peicode.h	FUNCTION_49
0x4002ab7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       146	peicode.h	FUNCTION_49
0x4002abb	        0x488945f0	             mov qword [rbp - 0x10], rax	       146	peicode.h	FUNCTION_49
0x4002abf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       147	peicode.h	FUNCTION_49
0x4002ac3	        0x488945f8	                mov qword [rbp - 8], rax	       147	peicode.h	FUNCTION_49
0x4002ac7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	peicode.h	FUNCTION_49
0x4002acb	        0x488b4008	                mov rax, qword [rax + 8]	       149	peicode.h	FUNCTION_49
0x4002acf	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       149	peicode.h	FUNCTION_49
0x4002ad6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       149	peicode.h	FUNCTION_49
0x4002ada	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       149	peicode.h	FUNCTION_49
0x4002ade	          0x488b12	                    mov rdx, qword [rdx]	       149	peicode.h	FUNCTION_49
0x4002ae1	          0x4889ce	                            mov rsi, rcx	       149	peicode.h	FUNCTION_49
0x4002ae4	          0x4889d7	                            mov rdi, rdx	       149	peicode.h	FUNCTION_49
0x4002ae7	            0xffd0	                                call rax	       149	peicode.h	FUNCTION_49
0x4002ae9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	peicode.h	FUNCTION_49
0x4002aed	        0x488b4008	                mov rax, qword [rax + 8]	       150	peicode.h	FUNCTION_49
0x4002af1	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       150	peicode.h	FUNCTION_49
0x4002af8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       150	peicode.h	FUNCTION_49
0x4002afc	        0x488d4a04	                      lea rcx, [rdx + 4]	       150	peicode.h	FUNCTION_49
0x4002b00	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       150	peicode.h	FUNCTION_49
0x4002b04	        0x488b5208	                mov rdx, qword [rdx + 8]	       150	peicode.h	FUNCTION_49
0x4002b08	          0x4889ce	                            mov rsi, rcx	       150	peicode.h	FUNCTION_49
0x4002b0b	          0x4889d7	                            mov rdi, rdx	       150	peicode.h	FUNCTION_49
0x4002b0e	            0xffd0	                                call rax	       150	peicode.h	FUNCTION_49
0x4002b10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	peicode.h	FUNCTION_49
0x4002b14	        0x488b4008	                mov rax, qword [rax + 8]	       151	peicode.h	FUNCTION_49
0x4002b18	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       151	peicode.h	FUNCTION_49
0x4002b1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       151	peicode.h	FUNCTION_49
0x4002b23	        0x488d4a08	                      lea rcx, [rdx + 8]	       151	peicode.h	FUNCTION_49
0x4002b27	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       151	peicode.h	FUNCTION_49
0x4002b2b	         0xfb75210	           movzx edx, word [rdx + 0x10] 	       151	peicode.h	FUNCTION_49
0x4002b2f	           0xfb7d2	                           movzx edx, dx	       151	peicode.h	FUNCTION_49
0x4002b32	          0x4889ce	                            mov rsi, rcx	       151	peicode.h	FUNCTION_49
0x4002b35	          0x4889d7	                            mov rdi, rdx	       151	peicode.h	FUNCTION_49
0x4002b38	            0xffd0	                                call rax	       151	peicode.h	FUNCTION_49
0x4002b3a	      0xb80a000000	                            mov eax, 0xa	       159	peicode.h	FUNCTION_49
0x4002b3f	              0xc9	                                   leave	       160	peicode.h	FUNCTION_49
0x4002b40	              0xc3	                                     ret	       160	peicode.h	FUNCTION_49
pe_ILF_make_a_section	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,3:CALL,9:DO,0	142
0x40037a1	              0x55	                                push rbp	       601	peicode.h	FUNCTION_60
0x40037a2	          0x4889e5	                            mov rbp, rsp	       601	peicode.h	FUNCTION_60
0x40037a5	        0x4883ec30	                           sub rsp, 0x30	       601	peicode.h	FUNCTION_60
0x40037a9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       601	peicode.h	FUNCTION_60
0x40037ad	        0x488975e0	             mov qword [rbp - 0x20], rsi	       601	peicode.h	FUNCTION_60
0x40037b1	          0x8955dc	             mov dword [rbp - 0x24], edx	       601	peicode.h	FUNCTION_60
0x40037b4	          0x894dd8	             mov dword [rbp - 0x28], ecx	       601	peicode.h	FUNCTION_60
0x40037b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       605	peicode.h	FUNCTION_60	CALL_1
0x40037bb	          0x488b00	                    mov rax, qword [rax]	       605	peicode.h	FUNCTION_60	CALL_1
0x40037be	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       605	peicode.h	FUNCTION_60	CALL_1
0x40037c2	          0x4889d6	                            mov rsi, rdx	       605	peicode.h	FUNCTION_60	CALL_1
0x40037c5	          0x4889c7	                            mov rdi, rax	       605	peicode.h	FUNCTION_60	CALL_1
0x40037c8	      0xe800000000	                          call 0x40037cd	       605	peicode.h	FUNCTION_60	CALL_1
0x40037cd	        0x488945f8	                mov qword [rbp - 8], rax	       605	peicode.h	FUNCTION_60	CALL_1
0x40037d1	      0x48837df800	                  cmp qword [rbp - 8], 0	       606	peicode.h	FUNCTION_60	IF_1
0x40037d6	            0x750a	                           jne 0x40037e2	       606	peicode.h	FUNCTION_60	IF_1
0x40037d8	      0xb800000000	                              mov eax, 0	       607	peicode.h	FUNCTION_60	IF_1
0x40037dd	      0xe9cb010000	                           jmp 0x40039ad	       607	peicode.h	FUNCTION_60	IF_1
0x40037e2	    0xc745f0034120	        mov dword [rbp - 0x10], 0x204103	       609	peicode.h	FUNCTION_60
0x40037e9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       611	peicode.h	FUNCTION_60	CALL_2
0x40037ec	           0xb45d8	              or eax, dword [rbp - 0x28]	       611	peicode.h	FUNCTION_60	CALL_2
0x40037ef	            0x89c2	                            mov edx, eax	       611	peicode.h	FUNCTION_60	CALL_2
0x40037f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       611	peicode.h	FUNCTION_60	CALL_2
0x40037f5	          0x488b00	                    mov rax, qword [rax]	       611	peicode.h	FUNCTION_60	CALL_2
0x40037f8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       611	peicode.h	FUNCTION_60	CALL_2
0x40037fc	          0x4889ce	                            mov rsi, rcx	       611	peicode.h	FUNCTION_60	CALL_2
0x40037ff	          0x4889c7	                            mov rdi, rax	       611	peicode.h	FUNCTION_60	CALL_2
0x4003802	      0xe800000000	                          call 0x4003807	       611	peicode.h	FUNCTION_60	CALL_2
0x4003807	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       613	peicode.h	FUNCTION_60	CALL_3
0x400380b	          0x488b00	                    mov rax, qword [rax]	       613	peicode.h	FUNCTION_60	CALL_3
0x400380e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       613	peicode.h	FUNCTION_60	CALL_3
0x4003812	      0xba02000000	                              mov edx, 2	       613	peicode.h	FUNCTION_60	CALL_3
0x4003817	          0x4889ce	                            mov rsi, rcx	       613	peicode.h	FUNCTION_60	CALL_3
0x400381a	          0x4889c7	                            mov rdi, rax	       613	peicode.h	FUNCTION_60	CALL_3
0x400381d	      0xe85fc8ffff	      call sym.bfd_set_section_alignment	       613	peicode.h	FUNCTION_60	CALL_3
0x4003822	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	peicode.h	FUNCTION_60	CALL_4
0x4003826	        0x488b5008	                mov rdx, qword [rax + 8]	       616	peicode.h	FUNCTION_60	CALL_4
0x400382a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       616	peicode.h	FUNCTION_60	CALL_4
0x400382d	        0x488d0c02	                    lea rcx, [rdx + rax]	       616	peicode.h	FUNCTION_60	CALL_4
0x4003831	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	peicode.h	FUNCTION_60	CALL_4
0x4003835	        0x488b4010	            mov rax, qword [rax + 0x10] 	       616	peicode.h	FUNCTION_60	CALL_4
0x4003839	        0x488b5008	                mov rdx, qword [rax + 8]	       616	peicode.h	FUNCTION_60	CALL_4
0x400383d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	peicode.h	FUNCTION_60	CALL_4
0x4003841	        0x488b4010	            mov rax, qword [rax + 0x10] 	       616	peicode.h	FUNCTION_60	CALL_4
0x4003845	          0x488b00	                    mov rax, qword [rax]	       616	peicode.h	FUNCTION_60	CALL_4
0x4003848	          0x4801d0	                            add rax, rdx	       616	peicode.h	FUNCTION_60	CALL_4
0x400384b	          0x4839c1	                            cmp rcx, rax	       616	peicode.h	FUNCTION_60	CALL_4
0x400384e	            0x720f	                            jb 0x400385f	       616	peicode.h	FUNCTION_60	CALL_4
0x4003850	      0xbe68020000	                          mov esi, 0x268	       616	peicode.h	FUNCTION_60	CALL_4
0x4003855	      0xbf00000000	                              mov edi, 0	       616	peicode.h	FUNCTION_60	CALL_4
0x400385a	      0xe800000000	                          call 0x400385f	       616	peicode.h	FUNCTION_60	CALL_4
0x400385f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       620	peicode.h	FUNCTION_60	CALL_5
0x4003862	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       620	peicode.h	FUNCTION_60	CALL_5
0x4003866	          0x488b00	                    mov rax, qword [rax]	       620	peicode.h	FUNCTION_60	CALL_5
0x4003869	        0x488b4df8	                mov rcx, qword [rbp - 8]	       620	peicode.h	FUNCTION_60	CALL_5
0x400386d	          0x4889ce	                            mov rsi, rcx	       620	peicode.h	FUNCTION_60	CALL_5
0x4003870	          0x4889c7	                            mov rdi, rax	       620	peicode.h	FUNCTION_60	CALL_5
0x4003873	      0xe800000000	                          call 0x4003878	       620	peicode.h	FUNCTION_60	CALL_5
0x4003878	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       621	peicode.h	FUNCTION_60
0x400387c	        0x488b5008	                mov rdx, qword [rax + 8]	       621	peicode.h	FUNCTION_60
0x4003880	        0x488b45f8	                mov rax, qword [rbp - 8]	       621	peicode.h	FUNCTION_60
0x4003884	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       621	peicode.h	FUNCTION_60
0x400388b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	peicode.h	FUNCTION_60
0x400388f	          0x8b4078	            mov eax, dword [rax + 0x78] 	       622	peicode.h	FUNCTION_60
0x4003892	          0x8d4801	                      lea ecx, [rax + 1]	       622	peicode.h	FUNCTION_60
0x4003895	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       622	peicode.h	FUNCTION_60
0x4003899	          0x894a78	             mov dword [rdx + 0x78], ecx	       622	peicode.h	FUNCTION_60
0x400389c	            0x89c2	                            mov edx, eax	       622	peicode.h	FUNCTION_60
0x400389e	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	peicode.h	FUNCTION_60
0x40038a2	    0x8990d8000000	             mov dword [rax + 0xd8], edx	       622	peicode.h	FUNCTION_60
0x40038a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       625	peicode.h	FUNCTION_60
0x40038ac	        0x488b5008	                mov rdx, qword [rax + 8]	       625	peicode.h	FUNCTION_60
0x40038b0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       625	peicode.h	FUNCTION_60
0x40038b3	          0x4801c2	                            add rdx, rax	       625	peicode.h	FUNCTION_60
0x40038b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       625	peicode.h	FUNCTION_60
0x40038ba	        0x48895008	                mov qword [rax + 8], rdx	       625	peicode.h	FUNCTION_60
0x40038be	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       631	peicode.h	FUNCTION_60	IF_2
0x40038c1	          0x83e001	                              and eax, 1	       631	peicode.h	FUNCTION_60	IF_2
0x40038c4	            0x85c0	                           test eax, eax	       631	peicode.h	FUNCTION_60	IF_2
0x40038c6	            0x7414	                            je 0x40038dc	       631	peicode.h	FUNCTION_60	IF_2
0x40038c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       632	peicode.h	FUNCTION_60	IF_2
0x40038cc	        0x488b4008	                mov rax, qword [rax + 8]	       632	peicode.h	FUNCTION_60	IF_2
0x40038d0	        0x488d50ff	                      lea rdx, [rax - 1]	       632	peicode.h	FUNCTION_60	IF_2
0x40038d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       632	peicode.h	FUNCTION_60	IF_2
0x40038d8	        0x48895008	                mov qword [rax + 8], rdx	       632	peicode.h	FUNCTION_60	IF_2
0x40038dc	    0xc745f4080000	                mov dword [rbp - 0xc], 8	       642	peicode.h	FUNCTION_60	CALL_6
0x40038e3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       644	peicode.h	FUNCTION_60	IF_3
0x40038e6	          0x83e801	                              sub eax, 1	       644	peicode.h	FUNCTION_60	IF_3
0x40038e9	          0x2345dc	             and eax, dword [rbp - 0x24]	       644	peicode.h	FUNCTION_60	IF_3
0x40038ec	            0x85c0	                           test eax, eax	       644	peicode.h	FUNCTION_60	IF_3
0x40038ee	            0x7425	                            je 0x4003915	       644	peicode.h	FUNCTION_60	IF_3
0x40038f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	peicode.h	FUNCTION_60	IF_3
0x40038f4	        0x488b4008	                mov rax, qword [rax + 8]	       645	peicode.h	FUNCTION_60	IF_3
0x40038f8	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       645	peicode.h	FUNCTION_60	IF_3
0x40038fb	          0x83ea01	                              sub edx, 1	       645	peicode.h	FUNCTION_60	IF_3
0x40038fe	          0x2355dc	             and edx, dword [rbp - 0x24]	       645	peicode.h	FUNCTION_60	IF_3
0x4003901	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       645	peicode.h	FUNCTION_60	IF_3
0x4003904	            0x29d1	                            sub ecx, edx	       645	peicode.h	FUNCTION_60	IF_3
0x4003906	            0x89ca	                            mov edx, ecx	       645	peicode.h	FUNCTION_60	IF_3
0x4003908	            0x89d2	                            mov edx, edx	       645	peicode.h	FUNCTION_60	IF_3
0x400390a	          0x4801c2	                            add rdx, rax	       645	peicode.h	FUNCTION_60	IF_3
0x400390d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	peicode.h	FUNCTION_60	IF_3
0x4003911	        0x48895008	                mov qword [rax + 8], rdx	       645	peicode.h	FUNCTION_60	IF_3
0x4003915	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	peicode.h	FUNCTION_60
0x4003919	        0x488b5008	                mov rdx, qword [rax + 8]	       649	peicode.h	FUNCTION_60
0x400391d	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	peicode.h	FUNCTION_60
0x4003921	    0x488990e00000	             mov qword [rax + 0xe0], rdx	       649	peicode.h	FUNCTION_60
0x4003928	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	peicode.h	FUNCTION_60
0x400392c	        0x488b4008	                mov rax, qword [rax + 8]	       650	peicode.h	FUNCTION_60
0x4003930	        0x488d5060	                   lea rdx, [rax + 0x60]	       650	peicode.h	FUNCTION_60
0x4003934	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	peicode.h	FUNCTION_60
0x4003938	        0x48895008	                mov qword [rax + 8], rdx	       650	peicode.h	FUNCTION_60
0x400393c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	peicode.h	FUNCTION_60	CALL_7
0x4003940	        0x488b5008	                mov rdx, qword [rax + 8]	       652	peicode.h	FUNCTION_60	CALL_7
0x4003944	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	peicode.h	FUNCTION_60	CALL_7
0x4003948	        0x488b4010	            mov rax, qword [rax + 0x10] 	       652	peicode.h	FUNCTION_60	CALL_7
0x400394c	        0x488b4808	                mov rcx, qword [rax + 8]	       652	peicode.h	FUNCTION_60	CALL_7
0x4003950	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	peicode.h	FUNCTION_60	CALL_7
0x4003954	        0x488b4010	            mov rax, qword [rax + 0x10] 	       652	peicode.h	FUNCTION_60	CALL_7
0x4003958	          0x488b00	                    mov rax, qword [rax]	       652	peicode.h	FUNCTION_60	CALL_7
0x400395b	          0x4801c8	                            add rax, rcx	       652	peicode.h	FUNCTION_60	CALL_7
0x400395e	          0x4839c2	                            cmp rdx, rax	       652	peicode.h	FUNCTION_60	CALL_7
0x4003961	            0x760f	                           jbe 0x4003972	       652	peicode.h	FUNCTION_60	CALL_7
0x4003963	      0xbe8c020000	                          mov esi, 0x28c	       652	peicode.h	FUNCTION_60	CALL_7
0x4003968	      0xbf00000000	                              mov edi, 0	       652	peicode.h	FUNCTION_60	CALL_7
0x400396d	      0xe800000000	                          call 0x4003972	       652	peicode.h	FUNCTION_60	CALL_7
0x4003972	        0x488b4df8	                mov rcx, qword [rbp - 8]	       655	peicode.h	FUNCTION_60	CALL_8
0x4003976	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       655	peicode.h	FUNCTION_60	CALL_8
0x400397a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       655	peicode.h	FUNCTION_60	CALL_8
0x400397e	    0x41b801000000	                              mov r8d, 1	       655	peicode.h	FUNCTION_60	CALL_8
0x4003984	      0xbe00000000	                              mov esi, 0	       655	peicode.h	FUNCTION_60	CALL_8
0x4003989	          0x4889c7	                            mov rdi, rax	       655	peicode.h	FUNCTION_60	CALL_8
0x400398c	      0xe85efbffff	           call sym.pe_ILF_make_a_symbol	       655	peicode.h	FUNCTION_60	CALL_8
0x4003991	        0x488b45f8	                mov rax, qword [rbp - 8]	       658	peicode.h	FUNCTION_60	CALL_9
0x4003995	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       658	peicode.h	FUNCTION_60	CALL_9
0x400399c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       658	peicode.h	FUNCTION_60	CALL_9
0x40039a0	          0x8b5240	            mov edx, dword [rdx + 0x40] 	       658	peicode.h	FUNCTION_60	CALL_9
0x40039a3	          0x83ea01	                              sub edx, 1	       658	peicode.h	FUNCTION_60	CALL_9
0x40039a6	          0x895030	             mov dword [rax + 0x30], edx	       658	peicode.h	FUNCTION_60	CALL_9
0x40039a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       660	peicode.h	FUNCTION_60
0x40039ad	              0xc9	                                   leave	       661	peicode.h	FUNCTION_60
0x40039ae	              0xc3	                                     ret	       661	peicode.h	FUNCTION_60
coff_amd64_is_local_label_name	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,1:DO,0	18
0x40029d6	              0x55	                                push rbp	       725	coff-x86_64.c	FUNCTION_80
0x40029d7	          0x4889e5	                            mov rbp, rsp	       725	coff-x86_64.c	FUNCTION_80
0x40029da	        0x4883ec10	                           sub rsp, 0x10	       725	coff-x86_64.c	FUNCTION_80
0x40029de	        0x48897df8	                mov qword [rbp - 8], rdi	       725	coff-x86_64.c	FUNCTION_80
0x40029e2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       725	coff-x86_64.c	FUNCTION_80
0x40029e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       726	coff-x86_64.c	FUNCTION_80	IF_1
0x40029ea	           0xfb600	                   movzx eax, byte [rax]	       726	coff-x86_64.c	FUNCTION_80	IF_1
0x40029ed	            0x3c4c	                            cmp al, 0x4c	       726	coff-x86_64.c	FUNCTION_80	IF_1
0x40029ef	            0x7507	                           jne 0x40029f8	       726	coff-x86_64.c	FUNCTION_80	IF_1
0x40029f1	      0xb801000000	                              mov eax, 1	       727	coff-x86_64.c	FUNCTION_80	IF_1
0x40029f6	            0xeb13	                           jmp 0x4002a0b	       727	coff-x86_64.c	FUNCTION_80	IF_1
0x40029f8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       729	coff-x86_64.c	FUNCTION_80	CALL_1
0x40029fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       729	coff-x86_64.c	FUNCTION_80	CALL_1
0x4002a00	          0x4889d6	                            mov rsi, rdx	       729	coff-x86_64.c	FUNCTION_80	CALL_1
0x4002a03	          0x4889c7	                            mov rdi, rax	       729	coff-x86_64.c	FUNCTION_80	CALL_1
0x4002a06	      0xe800000000	                          call 0x4002a0b	       729	coff-x86_64.c	FUNCTION_80	CALL_1
0x4002a0b	              0xc9	                                   leave	       730	coff-x86_64.c	FUNCTION_80
0x4002a0c	              0xc3	                                     ret	       730	coff-x86_64.c	FUNCTION_80
pex64_xdata_print_uwd_codes	FOR,2:functions,0:WHILE,0:ELSE,5:SWITCH,1:IF,14:CALL,38:DO,0	511
0x4000397	              0x55	                                push rbp	       159	pei-x86_64.c	FUNCTION_67
0x4000398	          0x4889e5	                            mov rbp, rsp	       159	pei-x86_64.c	FUNCTION_67
0x400039b	              0x53	                                push rbx	       159	pei-x86_64.c	FUNCTION_67
0x400039c	        0x4883ec58	                           sub rsp, 0x58	       159	pei-x86_64.c	FUNCTION_67
0x40003a0	        0x48897db8	             mov qword [rbp - 0x48], rdi	       159	pei-x86_64.c	FUNCTION_67
0x40003a4	        0x488975b0	             mov qword [rbp - 0x50], rsi	       159	pei-x86_64.c	FUNCTION_67
0x40003a8	        0x488955a8	             mov qword [rbp - 0x58], rdx	       159	pei-x86_64.c	FUNCTION_67
0x40003ac	        0x48894da0	             mov qword [rbp - 0x60], rcx	       159	pei-x86_64.c	FUNCTION_67
0x40003b0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003b4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003b8	          0x4885c0	                           test rax, rax	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003bb	     0xf8454070000	                            je 0x4000b15	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003c1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003c5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003c9	          0x4885c0	                           test rax, rax	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003cc	     0xf8443070000	                            je 0x4000b15	       164	pei-x86_64.c	FUNCTION_67	IF_1
0x40003d2	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       171	pei-x86_64.c	FUNCTION_67
0x40003d9	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       173	pei-x86_64.c	FUNCTION_67
0x40003e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       175	pei-x86_64.c	FUNCTION_67	IF_2
0x40003e4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       175	pei-x86_64.c	FUNCTION_67	IF_2
0x40003e8	        0x488d5001	                      lea rdx, [rax + 1]	       175	pei-x86_64.c	FUNCTION_67	IF_2
0x40003ec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       175	pei-x86_64.c	FUNCTION_67	IF_2
0x40003f0	        0x488b4040	            mov rax, qword [rax + 0x40] 	       175	pei-x86_64.c	FUNCTION_67	IF_2
0x40003f4	          0x4839c2	                            cmp rdx, rax	       175	pei-x86_64.c	FUNCTION_67	IF_2
0x40003f7	            0x722b	                            jb 0x4000424	       175	pei-x86_64.c	FUNCTION_67	IF_2
0x40003f9	      0xbe00000000	                              mov esi, 0	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x40003fe	      0xbf00000000	                              mov edi, 0	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x4000403	      0xe800000000	                          call 0x4000408	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x4000408	          0x4889c2	                            mov rdx, rax	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x400040b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x400040f	          0x4889d6	                            mov rsi, rdx	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x4000412	          0x4889c7	                            mov rdi, rax	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x4000415	      0xb800000000	                              mov eax, 0	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x400041a	      0xe800000000	                          call 0x400041f	       177	pei-x86_64.c	FUNCTION_67	IF_2	CALL_2
0x400041f	      0xe9f2060000	                           jmp 0x4000b16	       178	pei-x86_64.c	FUNCTION_67	IF_2
0x4000424	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       181	pei-x86_64.c	FUNCTION_67	IF_3
0x4000428	         0xfb64008	               movzx eax, byte [rax + 8]	       181	pei-x86_64.c	FUNCTION_67	IF_3
0x400042c	            0x3c02	                               cmp al, 2	       181	pei-x86_64.c	FUNCTION_67	IF_3
0x400042e	     0xf85bd010000	                           jne 0x40005f1	       181	pei-x86_64.c	FUNCTION_67	IF_3
0x4000434	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x4000438	        0x488b4038	            mov rax, qword [rax + 0x38] 	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x400043c	        0x4883c001	                              add rax, 1	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x4000440	           0xfb600	                   movzx eax, byte [rax]	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x4000443	           0xfb6c0	                           movzx eax, al	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x4000446	          0x83e00f	                            and eax, 0xf	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x4000449	          0x83f806	                              cmp eax, 6	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x400044c	     0xf859f010000	                           jne 0x40005f1	       182	pei-x86_64.c	FUNCTION_67	IF_3	CALL_3
0x4000452	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x4000456	        0x488b4008	                mov rax, qword [rax + 8]	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x400045a	            0x89c2	                            mov edx, eax	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x400045c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x4000460	          0x488b00	                    mov rax, qword [rax]	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x4000463	            0x29c2	                            sub edx, eax	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x4000465	            0x89d0	                            mov eax, edx	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x4000467	          0x8945d4	             mov dword [rbp - 0x2c], eax	       187	pei-x86_64.c	FUNCTION_67	IF_3
0x400046a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x400046e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x4000472	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x4000476	        0x488b4018	            mov rax, qword [rax + 0x18] 	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x400047a	          0x4801c0	                            add rax, rax	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x400047d	        0x4883c001	                              add rax, 1	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x4000481	          0x4801c2	                            add rdx, rax	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x4000484	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x4000488	        0x488b4040	            mov rax, qword [rax + 0x40] 	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x400048c	          0x4839c2	                            cmp rdx, rax	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x400048f	            0x722b	                            jb 0x40004bc	       189	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x4000491	      0xbe00000000	                              mov esi, 0	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x4000496	      0xbf00000000	                              mov edi, 0	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x400049b	      0xe800000000	                          call 0x40004a0	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x40004a0	          0x4889c2	                            mov rdx, rax	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x40004a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x40004a7	          0x4889d6	                            mov rsi, rdx	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x40004aa	          0x4889c7	                            mov rdi, rax	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x40004ad	      0xb800000000	                              mov eax, 0	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x40004b2	      0xe800000000	                          call 0x40004b7	       191	pei-x86_64.c	FUNCTION_67	IF_3	IF_4	CALL_5
0x40004b7	      0xe95a060000	                           jmp 0x4000b16	       192	pei-x86_64.c	FUNCTION_67	IF_3	IF_4
0x40004bc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       196	pei-x86_64.c	FUNCTION_67	IF_3
0x40004c0	        0x488b4038	            mov rax, qword [rax + 0x38] 	       196	pei-x86_64.c	FUNCTION_67	IF_3
0x40004c4	           0xfb600	                   movzx eax, byte [rax]	       196	pei-x86_64.c	FUNCTION_67	IF_3
0x40004c7	           0xfb6d0	                           movzx edx, al	       195	pei-x86_64.c	FUNCTION_67	IF_3	CALL_6
0x40004ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       195	pei-x86_64.c	FUNCTION_67	IF_3	CALL_6
0x40004ce	      0xbe00000000	                              mov esi, 0	       195	pei-x86_64.c	FUNCTION_67	IF_3	CALL_6
0x40004d3	          0x4889c7	                            mov rdi, rax	       195	pei-x86_64.c	FUNCTION_67	IF_3	CALL_6
0x40004d6	      0xb800000000	                              mov eax, 0	       195	pei-x86_64.c	FUNCTION_67	IF_3	CALL_6
0x40004db	      0xe800000000	                          call 0x40004e0	       195	pei-x86_64.c	FUNCTION_67	IF_3	CALL_6
0x40004e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004e4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004e8	        0x4883c001	                              add rax, 1	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004ec	           0xfb600	                   movzx eax, byte [rax]	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004ef	          0xc0e804	                               shr al, 4	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004f2	           0xfb6c0	                           movzx eax, al	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004f5	          0x83e00f	                            and eax, 0xf	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004f8	            0x85c0	                           test eax, eax	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004fa	            0x7429	                            je 0x4000525	       198	pei-x86_64.c	FUNCTION_67	IF_3	IF_5	CALL_7
0x40004fc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x4000500	        0x488b4038	            mov rax, qword [rax + 0x38] 	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x4000504	           0xfb600	                   movzx eax, byte [rax]	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x4000507	           0xfb6c0	                           movzx eax, al	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x400050a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x400050d	            0x29c2	                            sub edx, eax	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x400050f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x4000513	      0xbe00000000	                              mov esi, 0	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x4000518	          0x4889c7	                            mov rdi, rax	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x400051b	      0xb800000000	                              mov eax, 0	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x4000520	      0xe800000000	                          call 0x4000525	       199	pei-x86_64.c	FUNCTION_67	IF_3	CALL_8
0x4000525	        0x8345c401	               add dword [rbp - 0x3c], 1	       201	pei-x86_64.c	FUNCTION_67	IF_3
0x4000529	      0xe99b000000	                           jmp 0x40005c9	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x400052e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       204	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x4000532	        0x488b4038	            mov rax, qword [rax + 0x38] 	       204	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x4000536	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       204	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x4000539	             0x1d2	                            add edx, edx	       204	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x400053b	            0x89d2	                            mov edx, edx	       204	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x400053d	          0x4801d0	                            add rax, rdx	       204	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x4000540	        0x488945e0	             mov qword [rbp - 0x20], rax	       204	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x4000544	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       207	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6	CALL_9
0x4000548	        0x4883c001	                              add rax, 1	       207	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6	CALL_9
0x400054c	           0xfb600	                   movzx eax, byte [rax]	       207	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6	CALL_9
0x400054f	           0xfb6c0	                           movzx eax, al	       207	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6	CALL_9
0x4000552	          0x83e00f	                            and eax, 0xf	       207	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6	CALL_9
0x4000555	          0x83f806	                              cmp eax, 6	       207	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6	CALL_9
0x4000558	     0xf8581000000	                           jne 0x40005df	       207	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6	CALL_9
0x400055e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000562	           0xfb600	                   movzx eax, byte [rax]	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000565	           0xfb6c0	                           movzx eax, al	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000568	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x400056c	        0x4883c201	                              add rdx, 1	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000570	           0xfb612	                   movzx edx, byte [rdx]	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000573	          0xc0ea04	                               shr dl, 4	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000576	           0xfb6d2	                           movzx edx, dl	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000579	          0x83e20f	                            and edx, 0xf	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x400057c	          0xc1e208	                              shl edx, 8	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x400057f	             0x9d0	                             or eax, edx	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000581	          0x8945d8	             mov dword [rbp - 0x28], eax	       209	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_10
0x4000584	        0x837dd800	               cmp dword [rbp - 0x28], 0	       210	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_7
0x4000588	            0x751d	                           jne 0x40005a7	       210	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_7
0x400058a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       211	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_11
0x400058e	          0x4889c1	                            mov rcx, rax	       211	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_11
0x4000591	      0xba06000000	                              mov edx, 6	       211	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_11
0x4000596	      0xbe01000000	                              mov esi, 1	       211	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_11
0x400059b	      0xbf00000000	                              mov edi, 0	       211	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_11
0x40005a0	      0xe800000000	                          call 0x40005a5	       211	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_11
0x40005a5	            0xeb1e	                           jmp 0x40005c5	       211	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_11
0x40005a7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005aa	          0x2b45d8	             sub eax, dword [rbp - 0x28]	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005ad	            0x89c2	                            mov edx, eax	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005af	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005b3	      0xbe00000000	                              mov esi, 0	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005b8	          0x4889c7	                            mov rdi, rax	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005bb	      0xb800000000	                              mov eax, 0	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005c0	      0xe800000000	                          call 0x40005c5	       213	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	CALL_12
0x40005c5	        0x8345c401	               add dword [rbp - 0x3c], 1	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x40005c9	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x40005cc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x40005d0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x40005d4	          0x4839c2	                            cmp rdx, rax	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x40005d7	     0xf8251ffffff	                            jb 0x400052e	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x40005dd	            0xeb01	                           jmp 0x40005e0	       202	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1
0x40005df	              0x90	                                     nop	       208	pei-x86_64.c	FUNCTION_67	IF_3	FOR_1	IF_6
0x40005e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       215	pei-x86_64.c	FUNCTION_67	IF_3	CALL_13
0x40005e4	          0x4889c6	                            mov rsi, rax	       215	pei-x86_64.c	FUNCTION_67	IF_3	CALL_13
0x40005e7	      0xbf0a000000	                            mov edi, 0xa	       215	pei-x86_64.c	FUNCTION_67	IF_3	CALL_13
0x40005ec	      0xe800000000	                          call 0x40005f1	       215	pei-x86_64.c	FUNCTION_67	IF_3	CALL_13
0x40005f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x40005f5	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x40005f9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x40005fd	        0x488b4018	            mov rax, qword [rax + 0x18] 	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x4000601	        0x4883c001	                              add rax, 1	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x4000605	          0x4801c0	                            add rax, rax	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x4000608	          0x4801c2	                            add rdx, rax	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x400060b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x400060f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x4000613	          0x4839c2	                            cmp rdx, rax	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x4000616	     0xf82e3040000	                            jb 0x4000aff	       218	pei-x86_64.c	FUNCTION_67	IF_8
0x400061c	      0xbe00000000	                              mov esi, 0	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x4000621	      0xbf00000000	                              mov edi, 0	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x4000626	      0xe800000000	                          call 0x400062b	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x400062b	          0x4889c2	                            mov rdx, rax	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x400062e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x4000632	          0x4889d6	                            mov rsi, rdx	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x4000635	          0x4889c7	                            mov rdi, rax	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x4000638	      0xb800000000	                              mov eax, 0	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x400063d	      0xe800000000	                          call 0x4000642	       220	pei-x86_64.c	FUNCTION_67	IF_8	CALL_15
0x4000642	      0xe9cf040000	                           jmp 0x4000b16	       221	pei-x86_64.c	FUNCTION_67	IF_8
0x4000647	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       226	pei-x86_64.c	FUNCTION_67	FOR_2
0x400064b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       226	pei-x86_64.c	FUNCTION_67	FOR_2
0x400064f	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       226	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000652	             0x1d2	                            add edx, edx	       226	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000654	            0x89d2	                            mov edx, edx	       226	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000656	          0x4801d0	                            add rax, rdx	       226	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000659	        0x488945e8	             mov qword [rbp - 0x18], rax	       226	pei-x86_64.c	FUNCTION_67	FOR_2
0x400065d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_16
0x4000661	        0x4883c001	                              add rax, 1	       227	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_16
0x4000665	           0xfb600	                   movzx eax, byte [rax]	       227	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_16
0x4000668	          0xc0e804	                               shr al, 4	       227	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_16
0x400066b	           0xfb6c0	                           movzx eax, al	       227	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_16
0x400066e	          0x83e00f	                            and eax, 0xf	       227	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_16
0x4000671	          0x8945dc	             mov dword [rbp - 0x24], eax	       227	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_16
0x4000674	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       228	pei-x86_64.c	FUNCTION_67	FOR_2
0x400067b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x400067f	           0xfb600	                   movzx eax, byte [rax]	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x4000682	           0xfb6d0	                           movzx edx, al	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x4000685	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x4000689	      0xbe00000000	                              mov esi, 0	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x400068e	          0x4889c7	                            mov rdi, rax	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x4000691	      0xb800000000	                              mov eax, 0	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x4000696	      0xe800000000	                          call 0x400069b	       230	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_17
0x400069b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x400069f	        0x4883c001	                              add rax, 1	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006a3	           0xfb600	                   movzx eax, byte [rax]	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006a6	           0xfb6c0	                           movzx eax, al	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006a9	          0x83e00f	                            and eax, 0xf	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006ac	          0x83f80a	                            cmp eax, 0xa	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006af	     0xf87d6030000	                            ja 0x4000a8b	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006b5	            0x89c0	                            mov eax, eax	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006b7	    0x488b04c50000	                  mov rax, qword [rax*8]	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006bf	            0xffe0	                                 jmp rax	       231	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_18
0x40006c1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       234	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_19
0x40006c4	    0x488b14c50000	                  mov rdx, qword [rax*8]	       234	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_19
0x40006cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       234	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_19
0x40006d0	      0xbe00000000	                              mov esi, 0	       234	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_19
0x40006d5	          0x4889c7	                            mov rdi, rax	       234	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_19
0x40006d8	      0xb800000000	                              mov eax, 0	       234	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_19
0x40006dd	      0xe800000000	                          call 0x40006e2	       234	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_19
0x40006e2	      0xe9e2030000	                           jmp 0x4000ac9	       235	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40006e7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       237	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x40006eb	            0x7525	                           jne 0x4000712	       237	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x40006ed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x40006f1	        0x488b4008	                mov rax, qword [rax + 8]	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x40006f5	        0x488b4050	            mov rax, qword [rax + 0x50] 	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x40006f9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x40006fd	        0x4883c202	                              add rdx, 2	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x4000701	          0x4889d7	                            mov rdi, rdx	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x4000704	            0xffd0	                                call rax	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x4000706	          0xc1e003	                              shl eax, 3	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x4000709	          0x8945c8	             mov dword [rbp - 0x38], eax	       239	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x400070c	        0x8345c401	               add dword [rbp - 0x3c], 1	       240	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x4000710	            0xeb20	                           jmp 0x4000732	       240	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_9
0x4000712	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x4000716	        0x488b4008	                mov rax, qword [rax + 8]	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x400071a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x400071e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x4000722	        0x4883c202	                              add rdx, 2	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x4000726	          0x4889d7	                            mov rdi, rdx	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x4000729	            0xffd0	                                call rax	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x400072b	          0x8945c8	             mov dword [rbp - 0x38], eax	       244	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x400072e	        0x8345c402	               add dword [rbp - 0x3c], 2	       245	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_2
0x4000732	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       247	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_20
0x4000735	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       247	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_20
0x4000739	      0xbe00000000	                              mov esi, 0	       247	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_20
0x400073e	          0x4889c7	                            mov rdi, rax	       247	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_20
0x4000741	      0xb800000000	                              mov eax, 0	       247	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_20
0x4000746	      0xe800000000	                          call 0x400074b	       247	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_20
0x400074b	      0xe979030000	                           jmp 0x4000ac9	       248	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000750	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x4000753	          0x83c001	                              add eax, 1	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x4000756	    0x8d14c5000000	                        lea edx, [rax*8]	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x400075d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x4000761	      0xbe00000000	                              mov esi, 0	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x4000766	          0x4889c7	                            mov rdi, rax	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x4000769	      0xb800000000	                              mov eax, 0	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x400076e	      0xe800000000	                          call 0x4000773	       250	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_21
0x4000773	      0xe951030000	                           jmp 0x4000ac9	       251	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000778	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       256	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400077c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       256	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000780	          0xc1e004	                              shl eax, 4	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x4000783	            0x89c1	                            mov ecx, eax	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x4000785	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       255	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000789	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       255	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400078d	          0x83e00f	                            and eax, 0xf	       255	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000790	           0xfb6c0	                           movzx eax, al	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x4000793	            0x4898	                                    cdqe	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x4000795	    0x488b14c50000	                  mov rdx, qword [rax*8]	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x400079d	          0x8b75dc	             mov esi, dword [rbp - 0x24]	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x40007a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x40007a4	          0x4189f0	                            mov r8d, esi	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x40007a7	      0xbe00000000	                              mov esi, 0	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x40007ac	          0x4889c7	                            mov rdi, rax	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x40007af	      0xb800000000	                              mov eax, 0	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x40007b4	      0xe800000000	                          call 0x40007b9	       254	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_22
0x40007b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       257	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007bd	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       257	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007c1	          0x83e00f	                            and eax, 0xf	       257	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007c4	            0x84c0	                             test al, al	       257	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007c6	           0xf94c0	                                 sete al	       257	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007c9	           0xfb6c0	                           movzx eax, al	       257	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007cc	          0x8945d0	             mov dword [rbp - 0x30], eax	       257	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007cf	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       258	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007d6	      0xe9ee020000	                           jmp 0x4000ac9	       259	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007df	        0x488b4008	                mov rax, qword [rax + 8]	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007e3	        0x488b4050	            mov rax, qword [rax + 0x50] 	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007e7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007eb	        0x4883c202	                              add rdx, 2	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007ef	          0x4889d7	                            mov rdi, rdx	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007f2	            0xffd0	                                call rax	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007f4	          0xc1e003	                              shl eax, 3	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007f7	          0x8945c8	             mov dword [rbp - 0x38], eax	       261	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007fa	        0x8345c401	               add dword [rbp - 0x3c], 1	       262	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40007fe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x4000801	    0x488b14c50000	                  mov rdx, qword [rax*8]	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x4000809	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x400080c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x4000810	      0xbe00000000	                              mov esi, 0	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x4000815	          0x4889c7	                            mov rdi, rax	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x4000818	      0xb800000000	                              mov eax, 0	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x400081d	      0xe800000000	                          call 0x4000822	       263	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_23
0x4000822	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       264	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000826	           0xf94c0	                                 sete al	       264	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000829	           0xfb6c0	                           movzx eax, al	       264	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400082c	          0x8945d0	             mov dword [rbp - 0x30], eax	       264	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400082f	      0xe995020000	                           jmp 0x4000ac9	       265	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000834	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000838	        0x488b4008	                mov rax, qword [rax + 8]	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400083c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000840	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000844	        0x4883c202	                              add rdx, 2	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000848	          0x4889d7	                            mov rdi, rdx	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400084b	            0xffd0	                                call rax	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400084d	          0x8945c8	             mov dword [rbp - 0x38], eax	       267	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000850	        0x8345c402	               add dword [rbp - 0x3c], 2	       268	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000854	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x4000857	    0x488b14c50000	                  mov rdx, qword [rax*8]	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x400085f	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x4000862	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x4000866	      0xbe00000000	                              mov esi, 0	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x400086b	          0x4889c7	                            mov rdi, rax	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x400086e	      0xb800000000	                              mov eax, 0	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x4000873	      0xe800000000	                          call 0x4000878	       269	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_24
0x4000878	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       270	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400087c	           0xf94c0	                                 sete al	       270	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400087f	           0xfb6c0	                           movzx eax, al	       270	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000882	          0x8945d0	             mov dword [rbp - 0x30], eax	       270	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000885	      0xe93f020000	                           jmp 0x4000ac9	       271	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400088a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       273	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x400088e	         0xfb64008	               movzx eax, byte [rax + 8]	       273	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x4000892	            0x3c01	                               cmp al, 1	       273	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x4000894	            0x7551	                           jne 0x40008e7	       273	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x4000896	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x400089a	        0x488b4008	                mov rax, qword [rax + 8]	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x400089e	        0x488b4050	            mov rax, qword [rax + 0x50] 	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008a2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008a6	        0x4883c202	                              add rdx, 2	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008aa	          0x4889d7	                            mov rdi, rdx	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008ad	            0xffd0	                                call rax	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008af	          0xc1e003	                              shl eax, 3	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008b2	          0x8945c8	             mov dword [rbp - 0x38], eax	       275	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008b5	        0x8345c401	               add dword [rbp - 0x3c], 1	       276	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008b9	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       277	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10	CALL_25
0x40008bc	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       277	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10	CALL_25
0x40008bf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       277	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10	CALL_25
0x40008c3	      0xbe00000000	                              mov esi, 0	       277	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10	CALL_25
0x40008c8	          0x4889c7	                            mov rdi, rax	       277	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10	CALL_25
0x40008cb	      0xb800000000	                              mov eax, 0	       277	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10	CALL_25
0x40008d0	      0xe800000000	                          call 0x40008d5	       277	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10	CALL_25
0x40008d5	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       278	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008d9	           0xf94c0	                                 sete al	       278	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008dc	           0xfb6c0	                           movzx eax, al	       278	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008df	          0x8945d0	             mov dword [rbp - 0x30], eax	       278	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_10
0x40008e2	      0xe9e1010000	                           jmp 0x4000ac8	       285	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40008e7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       280	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11
0x40008eb	         0xfb64008	               movzx eax, byte [rax + 8]	       280	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11
0x40008ef	            0x3c02	                               cmp al, 2	       280	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11
0x40008f1	     0xf85d1010000	                           jne 0x4000ac8	       280	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11
0x40008f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x40008fb	           0xfb600	                   movzx eax, byte [rax]	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x40008fe	           0xfb6d0	                           movzx edx, al	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x4000901	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x4000904	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x4000908	      0xbe00000000	                              mov esi, 0	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x400090d	          0x4889c7	                            mov rdi, rax	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x4000910	      0xb800000000	                              mov eax, 0	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x4000915	      0xe800000000	                          call 0x400091a	       282	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11	CALL_26
0x400091a	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       283	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_3	IF_11
0x4000921	      0xe9a2010000	                           jmp 0x4000ac8	       285	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000926	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400092a	        0x488b4008	                mov rax, qword [rax + 8]	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400092e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000932	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000936	        0x4883c202	                              add rdx, 2	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400093a	          0x4889d7	                            mov rdi, rdx	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400093d	            0xffd0	                                call rax	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400093f	          0xc1e003	                              shl eax, 3	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000942	          0x8945c8	             mov dword [rbp - 0x38], eax	       287	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000945	        0x8345c402	               add dword [rbp - 0x3c], 2	       288	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000949	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       289	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_27
0x400094c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       289	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_27
0x400094f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       289	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_27
0x4000953	      0xbe00000000	                              mov esi, 0	       289	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_27
0x4000958	          0x4889c7	                            mov rdi, rax	       289	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_27
0x400095b	      0xb800000000	                              mov eax, 0	       289	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_27
0x4000960	      0xe800000000	                          call 0x4000965	       289	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_27
0x4000965	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       290	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000969	           0xf94c0	                                 sete al	       290	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400096c	           0xfb6c0	                           movzx eax, al	       290	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400096f	          0x8945d0	             mov dword [rbp - 0x30], eax	       290	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000972	      0xe952010000	                           jmp 0x4000ac9	       291	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000977	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400097b	        0x488b4008	                mov rax, qword [rax + 8]	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400097f	        0x488b4050	            mov rax, qword [rax + 0x50] 	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000983	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000987	        0x4883c202	                              add rdx, 2	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400098b	          0x4889d7	                            mov rdi, rdx	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400098e	            0xffd0	                                call rax	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000990	          0xc1e004	                              shl eax, 4	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000993	          0x8945c8	             mov dword [rbp - 0x38], eax	       293	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000996	        0x8345c401	               add dword [rbp - 0x3c], 1	       294	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x400099a	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       295	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_28
0x400099d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       295	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_28
0x40009a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       295	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_28
0x40009a4	      0xbe00000000	                              mov esi, 0	       295	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_28
0x40009a9	          0x4889c7	                            mov rdi, rax	       295	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_28
0x40009ac	      0xb800000000	                              mov eax, 0	       295	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_28
0x40009b1	      0xe800000000	                          call 0x40009b6	       295	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_28
0x40009b6	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       296	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009ba	           0xf94c0	                                 sete al	       296	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009bd	           0xfb6c0	                           movzx eax, al	       296	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009c0	          0x8945d0	             mov dword [rbp - 0x30], eax	       296	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009c3	      0xe901010000	                           jmp 0x4000ac9	       297	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009c8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009cc	        0x488b4008	                mov rax, qword [rax + 8]	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009d0	        0x488b4038	            mov rax, qword [rax + 0x38] 	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009d4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009d8	        0x4883c202	                              add rdx, 2	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009dc	          0x4889d7	                            mov rdi, rdx	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009df	            0xffd0	                                call rax	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009e1	          0xc1e004	                              shl eax, 4	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009e4	          0x8945c8	             mov dword [rbp - 0x38], eax	       299	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009e7	        0x8345c402	               add dword [rbp - 0x3c], 2	       300	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x40009eb	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       301	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_29
0x40009ee	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       301	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_29
0x40009f1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       301	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_29
0x40009f5	      0xbe00000000	                              mov esi, 0	       301	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_29
0x40009fa	          0x4889c7	                            mov rdi, rax	       301	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_29
0x40009fd	      0xb800000000	                              mov eax, 0	       301	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_29
0x4000a02	      0xe800000000	                          call 0x4000a07	       301	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_29
0x4000a07	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       302	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a0b	           0xf94c0	                                 sete al	       302	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a0e	           0xfb6c0	                           movzx eax, al	       302	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a11	          0x8945d0	             mov dword [rbp - 0x30], eax	       302	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a14	      0xe9b0000000	                           jmp 0x4000ac9	       303	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a19	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       305	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_30
0x4000a1d	          0x4889c1	                            mov rcx, rax	       305	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_30
0x4000a20	      0xba2d000000	                           mov edx, 0x2d	       305	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_30
0x4000a25	      0xbe01000000	                              mov esi, 1	       305	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_30
0x4000a2a	      0xbf00000000	                              mov edi, 0	       305	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_30
0x4000a2f	      0xe800000000	                          call 0x4000a34	       305	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_30
0x4000a34	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       306	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_12
0x4000a38	            0x7513	                           jne 0x4000a4d	       306	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	IF_12
0x4000a3a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       307	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_31
0x4000a3e	          0x4889c6	                            mov rsi, rax	       307	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_31
0x4000a41	      0xbf29000000	                           mov edi, 0x29	       307	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_31
0x4000a46	      0xe800000000	                          call 0x4000a4b	       307	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_31
0x4000a4b	            0xeb7c	                           jmp 0x4000ac9	       312	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a4d	        0x837ddc01	               cmp dword [rbp - 0x24], 1	       308	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a51	            0x751d	                           jne 0x4000a70	       308	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a53	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       309	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a57	          0x4889c1	                            mov rcx, rax	       309	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a5a	      0xba0b000000	                            mov edx, 0xb	       309	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a5f	      0xbe01000000	                              mov esi, 1	       309	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a64	      0xbf00000000	                              mov edi, 0	       309	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a69	      0xe800000000	                          call 0x4000a6e	       309	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	ELSE_4	IF_13
0x4000a6e	            0xeb59	                           jmp 0x4000ac9	       312	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a70	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       311	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_33
0x4000a73	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       311	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_33
0x4000a77	      0xbe00000000	                              mov esi, 0	       311	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_33
0x4000a7c	          0x4889c7	                            mov rdi, rax	       311	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_33
0x4000a7f	      0xb800000000	                              mov eax, 0	       311	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_33
0x4000a84	      0xe800000000	                          call 0x4000a89	       311	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_33
0x4000a89	            0xeb3e	                           jmp 0x4000ac9	       312	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000a8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000a8f	        0x4883c001	                              add rax, 1	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000a93	           0xfb600	                   movzx eax, byte [rax]	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000a96	           0xfb6c0	                           movzx eax, al	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000a99	          0x83e00f	                            and eax, 0xf	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000a9c	            0x89c3	                            mov ebx, eax	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000a9e	      0xbe00000000	                              mov esi, 0	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000aa3	      0xbf00000000	                              mov edi, 0	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000aa8	      0xe800000000	                          call 0x4000aad	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000aad	          0x4889c1	                            mov rcx, rax	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000ab0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000ab4	            0x89da	                            mov edx, ebx	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000ab6	          0x4889ce	                            mov rsi, rcx	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000ab9	          0x4889c7	                            mov rdi, rax	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000abc	      0xb800000000	                              mov eax, 0	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000ac1	      0xe800000000	                          call 0x4000ac6	       315	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1	CALL_36
0x4000ac6	            0xeb01	                           jmp 0x4000ac9	       316	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000ac8	              0x90	                                     nop	       285	pei-x86_64.c	FUNCTION_67	FOR_2	SWITCH_1
0x4000ac9	        0x837dd000	               cmp dword [rbp - 0x30], 0	       318	pei-x86_64.c	FUNCTION_67	FOR_2	IF_14
0x4000acd	            0x741b	                            je 0x4000aea	       318	pei-x86_64.c	FUNCTION_67	FOR_2	IF_14
0x4000acf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       319	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_37
0x4000ad3	          0x4889c1	                            mov rcx, rax	       319	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_37
0x4000ad6	      0xba0e000000	                            mov edx, 0xe	       319	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_37
0x4000adb	      0xbe01000000	                              mov esi, 1	       319	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_37
0x4000ae0	      0xbf00000000	                              mov edi, 0	       319	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_37
0x4000ae5	      0xe800000000	                          call 0x4000aea	       319	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_37
0x4000aea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       320	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_38
0x4000aee	          0x4889c6	                            mov rsi, rax	       320	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_38
0x4000af1	      0xbf0a000000	                            mov edi, 0xa	       320	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_38
0x4000af6	      0xe800000000	                          call 0x4000afb	       320	pei-x86_64.c	FUNCTION_67	FOR_2	CALL_38
0x4000afb	        0x8345c401	               add dword [rbp - 0x3c], 1	       224	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000aff	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       224	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000b02	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       224	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000b06	        0x488b4018	            mov rax, qword [rax + 0x18] 	       224	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000b0a	          0x4839c2	                            cmp rdx, rax	       224	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000b0d	     0xf8234fbffff	                            jb 0x4000647	       224	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000b13	            0xeb01	                           jmp 0x4000b16	       224	pei-x86_64.c	FUNCTION_67	FOR_2
0x4000b15	              0x90	                                     nop	       165	pei-x86_64.c	FUNCTION_67	IF_1
0x4000b16	        0x4883c458	                           add rsp, 0x58	       322	pei-x86_64.c	FUNCTION_67
0x4000b1a	              0x5b	                                 pop rbx	       322	pei-x86_64.c	FUNCTION_67
0x4000b1b	              0x5d	                                 pop rbp	       322	pei-x86_64.c	FUNCTION_67
0x4000b1c	              0xc3	                                     ret	       322	pei-x86_64.c	FUNCTION_67
coff_swap_scnhdr_in	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,2:CALL,10:DO,0	164
0x4002cd3	              0x55	                                push rbp	       204	peicode.h	FUNCTION_51
0x4002cd4	          0x4889e5	                            mov rbp, rsp	       204	peicode.h	FUNCTION_51
0x4002cd7	              0x53	                                push rbx	       204	peicode.h	FUNCTION_51
0x4002cd8	        0x4883ec38	                           sub rsp, 0x38	       204	peicode.h	FUNCTION_51
0x4002cdc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       204	peicode.h	FUNCTION_51
0x4002ce0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       204	peicode.h	FUNCTION_51
0x4002ce4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       204	peicode.h	FUNCTION_51
0x4002ce8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       205	peicode.h	FUNCTION_51
0x4002cec	        0x488945e0	             mov qword [rbp - 0x20], rax	       205	peicode.h	FUNCTION_51
0x4002cf0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       206	peicode.h	FUNCTION_51
0x4002cf4	        0x488945e8	             mov qword [rbp - 0x18], rax	       206	peicode.h	FUNCTION_51
0x4002cf8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       208	peicode.h	FUNCTION_51	CALL_1
0x4002cfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       208	peicode.h	FUNCTION_51	CALL_1
0x4002d00	          0x488b12	                    mov rdx, qword [rdx]	       208	peicode.h	FUNCTION_51	CALL_1
0x4002d03	          0x488910	                    mov qword [rax], rdx	       208	peicode.h	FUNCTION_51	CALL_1
0x4002d06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d0a	        0x488b4008	                mov rax, qword [rax + 8]	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d0e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d15	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d19	        0x4883c20c	                            add rdx, 0xc	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d1d	          0x4889d7	                            mov rdi, rdx	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d20	            0xffd0	                                call rax	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d22	          0x4889c2	                            mov rdx, rax	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d29	        0x48895010	             mov qword [rax + 0x10], rdx	       210	peicode.h	FUNCTION_51	CALL_2
0x4002d2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d31	        0x488b4008	                mov rax, qword [rax + 8]	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d35	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d3c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d40	        0x4883c208	                              add rdx, 8	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d44	          0x4889d7	                            mov rdi, rdx	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d47	            0xffd0	                                call rax	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d49	          0x4889c2	                            mov rdx, rax	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d50	        0x48895008	                mov qword [rax + 8], rdx	       211	peicode.h	FUNCTION_51	CALL_3
0x4002d54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d58	        0x488b4008	                mov rax, qword [rax + 8]	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d5c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d63	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d67	        0x4883c210	                           add rdx, 0x10	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d6b	          0x4889d7	                            mov rdi, rdx	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d6e	            0xffd0	                                call rax	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d70	          0x4889c2	                            mov rdx, rax	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d77	        0x48895018	             mov qword [rax + 0x18], rdx	       212	peicode.h	FUNCTION_51	CALL_4
0x4002d7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d7f	        0x488b4008	                mov rax, qword [rax + 8]	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d83	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d8a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d8e	        0x4883c214	                           add rdx, 0x14	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d92	          0x4889d7	                            mov rdi, rdx	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d95	            0xffd0	                                call rax	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d97	          0x4889c2	                            mov rdx, rax	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	peicode.h	FUNCTION_51	CALL_5
0x4002d9e	        0x48895020	             mov qword [rax + 0x20], rdx	       213	peicode.h	FUNCTION_51	CALL_5
0x4002da2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       214	peicode.h	FUNCTION_51	CALL_6
0x4002da6	        0x488b4008	                mov rax, qword [rax + 8]	       214	peicode.h	FUNCTION_51	CALL_6
0x4002daa	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       214	peicode.h	FUNCTION_51	CALL_6
0x4002db1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       214	peicode.h	FUNCTION_51	CALL_6
0x4002db5	        0x4883c218	                           add rdx, 0x18	       214	peicode.h	FUNCTION_51	CALL_6
0x4002db9	          0x4889d7	                            mov rdi, rdx	       214	peicode.h	FUNCTION_51	CALL_6
0x4002dbc	            0xffd0	                                call rax	       214	peicode.h	FUNCTION_51	CALL_6
0x4002dbe	          0x4889c2	                            mov rdx, rax	       214	peicode.h	FUNCTION_51	CALL_6
0x4002dc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       214	peicode.h	FUNCTION_51	CALL_6
0x4002dc5	        0x48895028	             mov qword [rax + 0x28], rdx	       214	peicode.h	FUNCTION_51	CALL_6
0x4002dc9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       215	peicode.h	FUNCTION_51	CALL_7
0x4002dcd	        0x488b4008	                mov rax, qword [rax + 8]	       215	peicode.h	FUNCTION_51	CALL_7
0x4002dd1	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       215	peicode.h	FUNCTION_51	CALL_7
0x4002dd8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       215	peicode.h	FUNCTION_51	CALL_7
0x4002ddc	        0x4883c21c	                           add rdx, 0x1c	       215	peicode.h	FUNCTION_51	CALL_7
0x4002de0	          0x4889d7	                            mov rdi, rdx	       215	peicode.h	FUNCTION_51	CALL_7
0x4002de3	            0xffd0	                                call rax	       215	peicode.h	FUNCTION_51	CALL_7
0x4002de5	          0x4889c2	                            mov rdx, rax	       215	peicode.h	FUNCTION_51	CALL_7
0x4002de8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       215	peicode.h	FUNCTION_51	CALL_7
0x4002dec	        0x48895030	             mov qword [rax + 0x30], rdx	       215	peicode.h	FUNCTION_51	CALL_7
0x4002df0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	peicode.h	FUNCTION_51
0x4002df4	        0x488b4008	                mov rax, qword [rax + 8]	       216	peicode.h	FUNCTION_51
0x4002df8	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       216	peicode.h	FUNCTION_51
0x4002dff	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       216	peicode.h	FUNCTION_51
0x4002e03	        0x4883c224	                           add rdx, 0x24	       216	peicode.h	FUNCTION_51
0x4002e07	          0x4889d7	                            mov rdi, rdx	       216	peicode.h	FUNCTION_51
0x4002e0a	            0xffd0	                                call rax	       216	peicode.h	FUNCTION_51
0x4002e0c	          0x4889c2	                            mov rdx, rax	       216	peicode.h	FUNCTION_51
0x4002e0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	peicode.h	FUNCTION_51
0x4002e13	        0x48895048	             mov qword [rax + 0x48], rdx	       216	peicode.h	FUNCTION_51
0x4002e17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       222	peicode.h	FUNCTION_51
0x4002e1b	        0x488b4008	                mov rax, qword [rax + 8]	       222	peicode.h	FUNCTION_51
0x4002e1f	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       222	peicode.h	FUNCTION_51
0x4002e26	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       222	peicode.h	FUNCTION_51
0x4002e2a	        0x4883c222	                           add rdx, 0x22	       222	peicode.h	FUNCTION_51
0x4002e2e	          0x4889d7	                            mov rdi, rdx	       222	peicode.h	FUNCTION_51
0x4002e31	            0xffd0	                                call rax	       222	peicode.h	FUNCTION_51
0x4002e33	          0x4889c3	                            mov rbx, rax	       222	peicode.h	FUNCTION_51
0x4002e36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       223	peicode.h	FUNCTION_51
0x4002e3a	        0x488b4008	                mov rax, qword [rax + 8]	       223	peicode.h	FUNCTION_51
0x4002e3e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       223	peicode.h	FUNCTION_51
0x4002e45	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       223	peicode.h	FUNCTION_51
0x4002e49	        0x4883c220	                           add rdx, 0x20	       223	peicode.h	FUNCTION_51
0x4002e4d	          0x4889d7	                            mov rdi, rdx	       223	peicode.h	FUNCTION_51
0x4002e50	            0xffd0	                                call rax	       223	peicode.h	FUNCTION_51
0x4002e52	        0x48c1e010	                           shl rax, 0x10	       223	peicode.h	FUNCTION_51
0x4002e56	        0x488d1403	                    lea rdx, [rbx + rax]	       223	peicode.h	FUNCTION_51
0x4002e5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	peicode.h	FUNCTION_51
0x4002e5e	        0x48895040	             mov qword [rax + 0x40], rdx	       222	peicode.h	FUNCTION_51
0x4002e62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       224	peicode.h	FUNCTION_51
0x4002e66	    0x48c740380000	               mov qword [rax + 0x38], 0	       224	peicode.h	FUNCTION_51
0x4002e6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	peicode.h	FUNCTION_51	IF_1
0x4002e72	        0x488b4010	            mov rax, qword [rax + 0x10] 	       230	peicode.h	FUNCTION_51	IF_1
0x4002e76	          0x4885c0	                           test rax, rax	       230	peicode.h	FUNCTION_51	IF_1
0x4002e79	            0x7425	                            je 0x4002ea0	       230	peicode.h	FUNCTION_51	IF_1
0x4002e7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002e7f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002e83	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002e87	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002e8e	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002e95	          0x4801c2	                            add rdx, rax	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002e98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002e9c	        0x48895010	             mov qword [rax + 0x10], rdx	       232	peicode.h	FUNCTION_51	IF_1	CALL_8
0x4002ea0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       244	peicode.h	FUNCTION_51	IF_2
0x4002ea4	        0x488b4008	                mov rax, qword [rax + 8]	       244	peicode.h	FUNCTION_51	IF_2
0x4002ea8	          0x4885c0	                           test rax, rax	       244	peicode.h	FUNCTION_51	IF_2
0x4002eab	     0xf8486000000	                            je 0x4002f37	       244	peicode.h	FUNCTION_51	IF_2
0x4002eb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       245	peicode.h	FUNCTION_51	IF_2
0x4002eb5	        0x488b4048	            mov rax, qword [rax + 0x48] 	       245	peicode.h	FUNCTION_51	IF_2
0x4002eb9	      0x2580000000	                           and eax, 0x80	       245	peicode.h	FUNCTION_51	IF_2
0x4002ebe	          0x4885c0	                           test rax, rax	       245	peicode.h	FUNCTION_51	IF_2
0x4002ec1	            0x742e	                            je 0x4002ef1	       245	peicode.h	FUNCTION_51	IF_2
0x4002ec3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ec7	        0x488b4008	                mov rax, qword [rax + 8]	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ecb	          0x488b00	                    mov rax, qword [rax]	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ece	      0xba04000000	                              mov edx, 4	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ed3	      0xbe00000000	                              mov esi, 0	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ed8	          0x4889c7	                            mov rdi, rax	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002edb	      0xe800000000	                          call 0x4002ee0	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ee0	            0x85c0	                           test eax, eax	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ee2	            0x7543	                           jne 0x4002f27	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ee4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ee8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002eec	          0x4885c0	                           test rax, rax	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002eef	            0x7436	                            je 0x4002f27	       246	peicode.h	FUNCTION_51	IF_2	CALL_9
0x4002ef1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002ef5	        0x488b4008	                mov rax, qword [rax + 8]	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002ef9	          0x488b00	                    mov rax, qword [rax]	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002efc	      0xba04000000	                              mov edx, 4	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f01	      0xbe00000000	                              mov esi, 0	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f06	          0x4889c7	                            mov rdi, rax	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f09	      0xe800000000	                          call 0x4002f0e	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f0e	            0x85c0	                           test eax, eax	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f10	            0x7525	                           jne 0x4002f37	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f16	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f1e	        0x488b4008	                mov rax, qword [rax + 8]	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f22	          0x4839c2	                            cmp rdx, rax	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f25	            0x7610	                           jbe 0x4002f37	       247	peicode.h	FUNCTION_51	IF_2	CALL_10
0x4002f27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	peicode.h	FUNCTION_51	IF_2
0x4002f2b	        0x488b5008	                mov rdx, qword [rax + 8]	       252	peicode.h	FUNCTION_51	IF_2
0x4002f2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	peicode.h	FUNCTION_51	IF_2
0x4002f33	        0x48895018	             mov qword [rax + 0x18], rdx	       252	peicode.h	FUNCTION_51	IF_2
0x4002f37	              0x90	                                     nop	       254	peicode.h	FUNCTION_51
0x4002f38	        0x4883c438	                           add rsp, 0x38	       254	peicode.h	FUNCTION_51
0x4002f3c	              0x5b	                                 pop rbx	       254	peicode.h	FUNCTION_51
0x4002f3d	              0x5d	                                 pop rbp	       254	peicode.h	FUNCTION_51
0x4002f3e	              0xc3	                                     ret	       254	peicode.h	FUNCTION_51
sort_xdata_arr	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,0:DO,0	28
0x4001383	              0x55	                                push rbp	       488	pei-x86_64.c	FUNCTION_70
0x4001384	          0x4889e5	                            mov rbp, rsp	       488	pei-x86_64.c	FUNCTION_70
0x4001387	        0x48897de8	             mov qword [rbp - 0x18], rdi	       488	pei-x86_64.c	FUNCTION_70
0x400138b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       488	pei-x86_64.c	FUNCTION_70
0x400138f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       489	pei-x86_64.c	FUNCTION_70
0x4001393	        0x488945f0	             mov qword [rbp - 0x10], rax	       489	pei-x86_64.c	FUNCTION_70
0x4001397	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       490	pei-x86_64.c	FUNCTION_70
0x400139b	        0x488945f8	                mov qword [rbp - 8], rax	       490	pei-x86_64.c	FUNCTION_70
0x400139f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       492	pei-x86_64.c	FUNCTION_70	IF_1
0x40013a3	          0x488b10	                    mov rdx, qword [rax]	       492	pei-x86_64.c	FUNCTION_70	IF_1
0x40013a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	pei-x86_64.c	FUNCTION_70	IF_1
0x40013aa	          0x488b00	                    mov rax, qword [rax]	       492	pei-x86_64.c	FUNCTION_70	IF_1
0x40013ad	          0x4839c2	                            cmp rdx, rax	       492	pei-x86_64.c	FUNCTION_70	IF_1
0x40013b0	            0x7507	                           jne 0x40013b9	       492	pei-x86_64.c	FUNCTION_70	IF_1
0x40013b2	      0xb800000000	                              mov eax, 0	       493	pei-x86_64.c	FUNCTION_70	IF_1
0x40013b7	            0xeb20	                           jmp 0x40013d9	       493	pei-x86_64.c	FUNCTION_70	IF_1
0x40013b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       494	pei-x86_64.c	FUNCTION_70
0x40013bd	          0x488b10	                    mov rdx, qword [rax]	       494	pei-x86_64.c	FUNCTION_70
0x40013c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	pei-x86_64.c	FUNCTION_70
0x40013c4	          0x488b00	                    mov rax, qword [rax]	       494	pei-x86_64.c	FUNCTION_70
0x40013c7	          0x4839c2	                            cmp rdx, rax	       494	pei-x86_64.c	FUNCTION_70
0x40013ca	            0x7307	                           jae 0x40013d3	       494	pei-x86_64.c	FUNCTION_70
0x40013cc	      0xb8ffffffff	                     mov eax, 0xffffffff	       494	pei-x86_64.c	FUNCTION_70
0x40013d1	            0xeb05	                           jmp 0x40013d8	       494	pei-x86_64.c	FUNCTION_70
0x40013d3	      0xb801000000	                              mov eax, 1	       494	pei-x86_64.c	FUNCTION_70
0x40013d8	              0x90	                                     nop	       494	pei-x86_64.c	FUNCTION_70
0x40013d9	              0x5d	                                 pop rbp	       495	pei-x86_64.c	FUNCTION_70
0x40013da	              0xc3	                                     ret	       495	pei-x86_64.c	FUNCTION_70
pex64_get_runtime_function	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,0:DO,0	40
0x40000a1	              0x55	                                push rbp	        91	pei-x86_64.c	FUNCTION_65
0x40000a2	          0x4889e5	                            mov rbp, rsp	        91	pei-x86_64.c	FUNCTION_65
0x40000a5	        0x4883ec30	                           sub rsp, 0x30	        91	pei-x86_64.c	FUNCTION_65
0x40000a9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        91	pei-x86_64.c	FUNCTION_65
0x40000ad	        0x488975e0	             mov qword [rbp - 0x20], rsi	        91	pei-x86_64.c	FUNCTION_65
0x40000b1	        0x488955d8	             mov qword [rbp - 0x28], rdx	        91	pei-x86_64.c	FUNCTION_65
0x40000b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	pei-x86_64.c	FUNCTION_65
0x40000b9	        0x488945f8	                mov qword [rbp - 8], rax	        92	pei-x86_64.c	FUNCTION_65
0x40000bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	pei-x86_64.c	FUNCTION_65
0x40000c1	        0x488b4008	                mov rax, qword [rax + 8]	        94	pei-x86_64.c	FUNCTION_65
0x40000c5	        0x488b4038	            mov rax, qword [rax + 0x38] 	        94	pei-x86_64.c	FUNCTION_65
0x40000c9	        0x488b55f8	                mov rdx, qword [rbp - 8]	        94	pei-x86_64.c	FUNCTION_65
0x40000cd	          0x4889d7	                            mov rdi, rdx	        94	pei-x86_64.c	FUNCTION_65
0x40000d0	            0xffd0	                                call rax	        94	pei-x86_64.c	FUNCTION_65
0x40000d2	          0x4889c2	                            mov rdx, rax	        94	pei-x86_64.c	FUNCTION_65
0x40000d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	pei-x86_64.c	FUNCTION_65
0x40000d9	          0x488910	                    mov qword [rax], rdx	        94	pei-x86_64.c	FUNCTION_65
0x40000dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	pei-x86_64.c	FUNCTION_65
0x40000e0	        0x488b4008	                mov rax, qword [rax + 8]	        95	pei-x86_64.c	FUNCTION_65
0x40000e4	        0x488b4038	            mov rax, qword [rax + 0x38] 	        95	pei-x86_64.c	FUNCTION_65
0x40000e8	        0x488b55f8	                mov rdx, qword [rbp - 8]	        95	pei-x86_64.c	FUNCTION_65
0x40000ec	        0x4883c204	                              add rdx, 4	        95	pei-x86_64.c	FUNCTION_65
0x40000f0	          0x4889d7	                            mov rdi, rdx	        95	pei-x86_64.c	FUNCTION_65
0x40000f3	            0xffd0	                                call rax	        95	pei-x86_64.c	FUNCTION_65
0x40000f5	          0x4889c2	                            mov rdx, rax	        95	pei-x86_64.c	FUNCTION_65
0x40000f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        95	pei-x86_64.c	FUNCTION_65
0x40000fc	        0x48895008	                mov qword [rax + 8], rdx	        95	pei-x86_64.c	FUNCTION_65
0x4000100	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	pei-x86_64.c	FUNCTION_65
0x4000104	        0x488b4008	                mov rax, qword [rax + 8]	        96	pei-x86_64.c	FUNCTION_65
0x4000108	        0x488b4038	            mov rax, qword [rax + 0x38] 	        96	pei-x86_64.c	FUNCTION_65
0x400010c	        0x488b55f8	                mov rdx, qword [rbp - 8]	        96	pei-x86_64.c	FUNCTION_65
0x4000110	        0x4883c208	                              add rdx, 8	        96	pei-x86_64.c	FUNCTION_65
0x4000114	          0x4889d7	                            mov rdi, rdx	        96	pei-x86_64.c	FUNCTION_65
0x4000117	            0xffd0	                                call rax	        96	pei-x86_64.c	FUNCTION_65
0x4000119	          0x4889c2	                            mov rdx, rax	        96	pei-x86_64.c	FUNCTION_65
0x400011c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        96	pei-x86_64.c	FUNCTION_65
0x4000120	        0x48895010	             mov qword [rax + 0x10], rdx	        96	pei-x86_64.c	FUNCTION_65
0x4000124	              0x90	                                     nop	        97	pei-x86_64.c	FUNCTION_65
0x4000125	              0xc9	                                   leave	        97	pei-x86_64.c	FUNCTION_65
0x4000126	              0xc3	                                     ret	        97	pei-x86_64.c	FUNCTION_65
handle_COMDAT	FOR,0:functions,0:WHILE,1:ELSE,0:SWITCH,2:IF,10:CALL,35:DO,0	303
0x40054d5	              0x55	                                push rbp	       881	coffcode.h	FUNCTION_6
0x40054d6	          0x4889e5	                            mov rbp, rsp	       881	coffcode.h	FUNCTION_6
0x40054d9	              0x53	                                push rbx	       881	coffcode.h	FUNCTION_6
0x40054da	    0x4881ec080100	                          sub rsp, 0x108	       881	coffcode.h	FUNCTION_6
0x40054e1	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       881	coffcode.h	FUNCTION_6
0x40054e8	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       881	coffcode.h	FUNCTION_6
0x40054ee	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       881	coffcode.h	FUNCTION_6
0x40054f5	    0x48898d00ffff	            mov qword [rbp - 0x100], rcx	       881	coffcode.h	FUNCTION_6
0x40054fc	    0x4c8985f8feff	             mov qword [rbp - 0x108], r8	       881	coffcode.h	FUNCTION_6
0x4005503	    0x64488b042528	                mov rax, qword fs:[0x28]	       881	coffcode.h	FUNCTION_6
0x400550c	        0x488945e8	             mov qword [rbp - 0x18], rax	       881	coffcode.h	FUNCTION_6
0x4005510	            0x31c0	                            xor eax, eax	       881	coffcode.h	FUNCTION_6
0x4005512	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       882	coffcode.h	FUNCTION_6
0x4005519	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       882	coffcode.h	FUNCTION_6
0x4005520	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       884	coffcode.h	FUNCTION_6
0x400552a	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       885	coffcode.h	FUNCTION_6
0x4005535	    0x818d14ffffff	          or dword [rbp - 0xec], 0x20000	       887	coffcode.h	FUNCTION_6
0x400553f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       906	coffcode.h	FUNCTION_6	IF_1	CALL_1
0x4005546	          0x4889c7	                            mov rdi, rax	       906	coffcode.h	FUNCTION_6	IF_1	CALL_1
0x4005549	      0xe800000000	                          call 0x400554e	       906	coffcode.h	FUNCTION_6	IF_1	CALL_1
0x400554e	            0x85c0	                           test eax, eax	       906	coffcode.h	FUNCTION_6	IF_1	CALL_1
0x4005550	            0x750b	                           jne 0x400555d	       906	coffcode.h	FUNCTION_6	IF_1	CALL_1
0x4005552	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       907	coffcode.h	FUNCTION_6	IF_1
0x4005558	      0xe90c050000	                           jmp 0x4005a69	       907	coffcode.h	FUNCTION_6	IF_1
0x400555d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       909	coffcode.h	FUNCTION_6	CALL_2
0x4005564	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       909	coffcode.h	FUNCTION_6	CALL_2
0x400556b	        0x488b4058	            mov rax, qword [rax + 0x58] 	       909	coffcode.h	FUNCTION_6	CALL_2
0x400556f	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       909	coffcode.h	FUNCTION_6	CALL_2
0x4005576	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       909	coffcode.h	FUNCTION_6	CALL_2
0x400557d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       909	coffcode.h	FUNCTION_6	CALL_2
0x4005584	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       910	coffcode.h	FUNCTION_6	CALL_4
0x400558b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       910	coffcode.h	FUNCTION_6	CALL_4
0x4005592	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       910	coffcode.h	FUNCTION_6	CALL_4
0x4005596	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       910	coffcode.h	FUNCTION_6	CALL_4
0x400559d	        0x488b4008	                mov rax, qword [rax + 8]	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055a1	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055a8	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055ab	            0x89c0	                            mov eax, eax	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055ad	        0x480fafd0	                           imul rdx, rax	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055b1	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055b8	          0x4801d0	                            add rax, rdx	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055bb	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       910	coffcode.h	FUNCTION_6	CALL_4
0x40055c2	      0xe988040000	                           jmp 0x4005a4f	       912	coffcode.h	FUNCTION_6	WHILE_1
0x40055c7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055ce	        0x488b4008	                mov rax, qword [rax + 8]	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055d2	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055d9	        0x488b4008	                mov rax, qword [rax + 8]	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055dd	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055e4	    0x488bb530ffff	             mov rsi, qword [rbp - 0xd0]	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055eb	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055f2	          0x4889cf	                            mov rdi, rcx	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055f5	            0xffd0	                                call rax	       918	coffcode.h	FUNCTION_6	WHILE_1	CALL_5
0x40055f7	          0x8b5588	             mov edx, dword [rbp - 0x78]	       922	coffcode.h	FUNCTION_6	WHILE_1	IF_2
0x40055fa	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       922	coffcode.h	FUNCTION_6	WHILE_1	IF_2
0x4005601	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	       922	coffcode.h	FUNCTION_6	WHILE_1	IF_2
0x4005607	            0x39c2	                            cmp edx, eax	       922	coffcode.h	FUNCTION_6	WHILE_1	IF_2
0x4005609	     0xf8513040000	                           jne 0x4005a22	       922	coffcode.h	FUNCTION_6	WHILE_1	IF_2
0x400560f	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       949	coffcode.h	FUNCTION_6	WHILE_1	IF_2	CALL_7
0x4005613	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       949	coffcode.h	FUNCTION_6	WHILE_1	IF_2	CALL_7
0x400561a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       949	coffcode.h	FUNCTION_6	WHILE_1	IF_2	CALL_7
0x4005621	          0x4889ce	                            mov rsi, rcx	       949	coffcode.h	FUNCTION_6	WHILE_1	IF_2	CALL_7
0x4005624	          0x4889c7	                            mov rdi, rax	       949	coffcode.h	FUNCTION_6	WHILE_1	IF_2	CALL_7
0x4005627	      0xe800000000	                          call 0x400562c	       949	coffcode.h	FUNCTION_6	WHILE_1	IF_2	CALL_7
0x400562c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       949	coffcode.h	FUNCTION_6	WHILE_1	IF_2	CALL_7
0x4005633	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       952	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3
0x400563b	            0x752e	                           jne 0x400566b	       952	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3
0x400563d	      0xbe00000000	                              mov esi, 0	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x4005642	      0xbf00000000	                              mov edi, 0	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x4005647	      0xe800000000	                          call 0x400564c	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x400564c	          0x4889c2	                            mov rdx, rax	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x400564f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x4005656	          0x4889c6	                            mov rsi, rax	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x4005659	          0x4889d7	                            mov rdi, rdx	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x400565c	      0xb800000000	                              mov eax, 0	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x4005661	      0xe800000000	                          call 0x4005666	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x4005666	      0xe9f8030000	                           jmp 0x4005a63	       954	coffcode.h	FUNCTION_6	WHILE_1	IF_2	IF_3	CALL_9
0x400566b	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       959	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x4005671	          0x83f801	                              cmp eax, 1	       959	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x4005674	     0xf8472020000	                            je 0x40058ec	       959	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x400567a	          0x83f802	                              cmp eax, 2	       959	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x400567d	     0xf841a020000	                            je 0x400589d	       959	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x4005683	            0x85c0	                           test eax, eax	       959	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x4005685	     0xf8597030000	                           jne 0x4005a22	       959	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x400568b	         0xfb64590	            movzx eax, byte [rbp - 0x70]	       982	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x400568f	            0x3c03	                               cmp al, 3	       982	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x4005691	            0x7408	                            je 0x400569b	       982	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x4005693	         0xfb64590	            movzx eax, byte [rbp - 0x70]	       983	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x4005697	            0x3c02	                               cmp al, 2	       983	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x4005699	            0x7517	                           jne 0x40056b2	       983	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x400569b	         0xfb7458e	            movzx eax, word [rbp - 0x72]	       984	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x400569f	           0xfb7c0	                           movzx eax, ax	       984	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40056a2	          0x83e00f	                            and eax, 0xf	       984	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40056a5	            0x85c0	                           test eax, eax	       984	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40056a7	            0x7509	                           jne 0x40056b2	       984	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40056a9	        0x488b4580	             mov rax, qword [rbp - 0x80]	       985	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x40056ad	          0x4885c0	                           test rax, rax	       982	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x40056b0	            0x7435	                            je 0x40056e7	       982	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4
0x40056b2	      0xbe00000000	                              mov esi, 0	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056b7	      0xbf00000000	                              mov edi, 0	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056bc	      0xe800000000	                          call 0x40056c1	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056c1	          0x4889c1	                            mov rcx, rax	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056c4	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056cb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056d2	          0x4889c6	                            mov rsi, rax	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056d5	          0x4889cf	                            mov rdi, rcx	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056d8	      0xb800000000	                              mov eax, 0	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056dd	      0xe800000000	                          call 0x40056e2	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056e2	      0xe97c030000	                           jmp 0x4005a63	       989	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x40056e7	         0xfb64590	            movzx eax, byte [rbp - 0x70]	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x40056eb	            0x3c03	                               cmp al, 3	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x40056ed	            0x7551	                           jne 0x4005740	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x40056ef	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x40056f6	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x40056fd	          0x4889d6	                            mov rsi, rdx	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4005700	          0x4889c7	                            mov rdi, rax	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4005703	      0xe800000000	                          call 0x4005708	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4005708	            0x85c0	                           test eax, eax	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x400570a	            0x7434	                            je 0x4005740	       999	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x400570c	      0xbe00000000	                              mov esi, 0	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4005711	      0xbf00000000	                              mov edi, 0	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4005716	      0xe800000000	                          call 0x400571b	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x400571b	          0x4889c7	                            mov rdi, rax	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x400571e	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4005725	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x400572c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4005733	          0x4889c6	                            mov rsi, rax	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4005736	      0xb800000000	                              mov eax, 0	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x400573b	      0xe800000000	                          call 0x4005740	      1001	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4005740	    0xc7852cffffff	               mov dword [rbp - 0xd4], 1	      1005	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x400574a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x4005751	        0x488b4008	                mov rax, qword [rax + 8]	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x4005755	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x400575c	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x400575f	            0x89c2	                            mov edx, eax	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x4005761	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x4005768	          0x4801d0	                            add rax, rdx	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x400576b	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x4005772	            0x7235	                            jb 0x40057a9	      1008	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x4005774	      0xbe00000000	                              mov esi, 0	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x4005779	      0xbf00000000	                              mov edi, 0	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x400577e	      0xe800000000	                          call 0x4005783	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x4005783	          0x4889c1	                            mov rcx, rax	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x4005786	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x400578d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x4005794	          0x4889c6	                            mov rsi, rax	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x4005797	          0x4889cf	                            mov rdi, rcx	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x400579a	      0xb800000000	                              mov eax, 0	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x400579f	      0xe800000000	                          call 0x40057a4	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40057a4	      0xe979020000	                           jmp 0x4005a22	      1011	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40057a9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057b0	        0x488b4008	                mov rax, qword [rax + 8]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057b4	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057bb	          0x488b00	                    mov rax, qword [rax]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057be	         0xfb65591	            movzx edx, byte [rbp - 0x6f]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057c2	        0x440fb6c2	                           movzx r8d, dl	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057c6	         0xfb65590	            movzx edx, byte [rbp - 0x70]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057ca	           0xfb6ca	                           movzx ecx, dl	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057cd	         0xfb7558e	            movzx edx, word [rbp - 0x72]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057d1	           0xfb7d2	                           movzx edx, dx	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057d4	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057db	        0x488b7608	                mov rsi, qword [rsi + 8]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057df	    0x488bb6680300	           mov rsi, qword [rsi + 0x368] 	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057e6	          0x8b765c	            mov esi, dword [rsi + 0x5c] 	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057e9	            0x89f7	                            mov edi, esi	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057eb	    0x488bb530ffff	             mov rsi, qword [rbp - 0xd0]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057f2	        0x4c8d1437	                    lea r10, [rdi + rsi]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057f6	    0x488bbd18ffff	             mov rdi, qword [rbp - 0xe8]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x40057fd	        0x4883ec08	                              sub rsp, 8	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4005801	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4005805	              0x56	                                push rsi	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4005806	          0x4589c1	                            mov r9d, r8d	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4005809	    0x41b800000000	                              mov r8d, 0	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400580f	          0x4c89d6	                            mov rsi, r10	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4005812	            0xffd0	                                call rax	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4005814	        0x4883c410	                           add rsp, 0x10	      1017	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4005818	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1021	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_21
0x400581f	      0xbe24000000	                           mov esi, 0x24	      1021	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_21
0x4005824	          0x4889c7	                            mov rdi, rax	      1021	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_21
0x4005827	      0xe800000000	                          call 0x400582c	      1021	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_21
0x400582c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1021	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_21
0x4005833	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      1022	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_7
0x400583b	            0x7412	                            je 0x400584f	      1022	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_7
0x400583d	    0xc7852cffffff	               mov dword [rbp - 0xd4], 2	      1025	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_7
0x4005847	    0x48838538ffff	               add qword [rbp - 0xc8], 1	      1027	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_7
0x400584f	         0xfb645ba	            movzx eax, byte [rbp - 0x46]	      1046	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005853	           0xfb6c0	                           movzx eax, al	      1046	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005856	          0x83f805	                              cmp eax, 5	      1046	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005859	            0x773c	                            ja 0x4005897	      1046	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x400585b	            0x89c0	                            mov eax, eax	      1046	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x400585d	    0x488b04c50000	                  mov rax, qword [rax*8]	      1046	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005865	            0xffe0	                                 jmp rax	      1046	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005867	    0x81a514ffffff	      and dword [rbp - 0xec], 0xfffdffff	      1052	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005871	            0xeb25	                           jmp 0x4005898	      1054	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005873	    0x818d14ffffff	          or dword [rbp - 0xec], 0x80000	      1061	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x400587d	            0xeb19	                           jmp 0x4005898	      1062	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x400587f	    0x818d14ffffff	          or dword [rbp - 0xec], 0xc0000	      1066	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005889	            0xeb0d	                           jmp 0x4005898	      1067	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x400588b	    0x81a514ffffff	      and dword [rbp - 0xec], 0xfffdffff	      1081	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005895	            0xeb01	                           jmp 0x4005898	      1083	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005897	              0x90	                                     nop	      1089	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x4005898	      0xe985010000	                           jmp 0x4005a22	      1092	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x400589d	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1101	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40058a4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1101	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40058ab	          0x4889d6	                            mov rsi, rdx	      1101	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40058ae	          0x4889c7	                            mov rdi, rax	      1101	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40058b1	      0xe800000000	                          call 0x40058b6	      1101	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40058b6	            0x85c0	                           test eax, eax	      1101	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40058b8	            0x7432	                            je 0x40058ec	      1101	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40058ba	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058be	           0xfb6c0	                           movzx eax, al	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058c1	          0x83c001	                              add eax, 1	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058c4	            0x89c2	                            mov edx, eax	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058c6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058cd	        0x488b4008	                mov rax, qword [rax + 8]	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058d1	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058d8	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058db	           0xfafc2	                           imul eax, edx	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058de	            0x89c0	                            mov eax, eax	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058e0	    0x48018530ffff	            add qword [rbp - 0xd0], rax 	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058e7	      0xe963010000	                           jmp 0x4005a4f	      1105	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x40058ec	    0x48c78560ffff	           mov qword [rbp - 0xa0], 0x10 	      1121	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x40058f7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1122	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_24
0x40058fe	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      1122	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_24
0x4005905	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1123	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_25
0x400590c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1123	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4005913	          0x4889d6	                            mov rsi, rdx	      1123	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4005916	          0x4889c7	                            mov rdi, rax	      1123	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4005919	      0xe800000000	                          call 0x400591e	      1123	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_25
0x400591e	        0x48894340	             mov qword [rbx + 0x40], rax	      1123	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4005922	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1124	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4005929	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1124	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4005930	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1124	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4005934	          0x4885c0	                           test rax, rax	      1124	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4005937	            0x7514	                           jne 0x400594d	      1124	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4005939	      0xba00000000	                              mov edx, 0	      1125	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_27
0x400593e	      0xbe65040000	                          mov esi, 0x465	      1125	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_27
0x4005943	      0xbf00000000	                              mov edi, 0	      1125	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_27
0x4005948	      0xe800000000	                          call 0x400594d	      1125	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_27
0x400594d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1127	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_28
0x4005954	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1127	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_28
0x400595b	        0x488b4840	            mov rcx, qword [rax + 0x40] 	      1127	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_28
0x400595f	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x4005966	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x400596d	          0x4829c2	                            sub rdx, rax	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x4005970	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x4005977	        0x488b4008	                mov rax, qword [rax + 8]	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x400597b	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x4005982	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x4005985	            0x89c6	                            mov esi, eax	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x4005987	          0x4889d0	                            mov rax, rdx	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x400598a	            0x4899	                                     cqo	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x400598c	          0x48f7fe	                                idiv rsi	      1128	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_29
0x400598f	        0x48894108	                mov qword [rcx + 8], rax	      1127	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_28
0x4005993	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1130	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_30
0x400599a	          0x4889c7	                            mov rdi, rax	      1130	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_30
0x400599d	      0xe800000000	                          call 0x40059a2	      1130	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_30
0x40059a2	        0x4883c001	                              add rax, 1	      1130	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_30
0x40059a6	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1130	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_30
0x40059ad	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1131	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_31
0x40059b4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1131	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_31
0x40059bb	          0x4889d6	                            mov rsi, rdx	      1131	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_31
0x40059be	          0x4889c7	                            mov rdi, rax	      1131	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_31
0x40059c1	      0xe800000000	                          call 0x40059c6	      1131	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_31
0x40059c6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1131	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_31
0x40059cd	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      1132	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_10
0x40059d5	            0x7514	                           jne 0x40059eb	      1132	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	IF_10
0x40059d7	      0xba00000000	                              mov edx, 0	      1133	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_32
0x40059dc	      0xbe6d040000	                          mov esi, 0x46d	      1133	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_32
0x40059e1	      0xbf00000000	                              mov edi, 0	      1133	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_32
0x40059e6	      0xe800000000	                          call 0x40059eb	      1133	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_32
0x40059eb	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1135	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_33
0x40059f2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1135	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_33
0x40059f9	          0x4889d6	                            mov rsi, rdx	      1135	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_33
0x40059fc	          0x4889c7	                            mov rdi, rax	      1135	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_33
0x40059ff	      0xe800000000	                          call 0x4005a04	      1135	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_33
0x4005a04	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1136	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_34
0x4005a0b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1136	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_34
0x4005a12	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1136	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1	CALL_34
0x4005a16	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1137	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x4005a1d	          0x488910	                    mov qword [rax], rdx	      1137	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x4005a20	            0xeb41	                           jmp 0x4005a63	      1140	coffcode.h	FUNCTION_6	WHILE_1	IF_2	SWITCH_1
0x4005a22	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a26	           0xfb6c0	                           movzx eax, al	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a29	          0x83c001	                              add eax, 1	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a2c	            0x89c2	                            mov edx, eax	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a2e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a35	        0x488b4008	                mov rax, qword [rax + 8]	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a39	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a40	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a43	           0xfafc2	                           imul eax, edx	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a46	            0x89c0	                            mov eax, eax	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a48	    0x48018530ffff	            add qword [rbp - 0xd0], rax 	      1144	coffcode.h	FUNCTION_6	WHILE_1	CALL_35
0x4005a4f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       912	coffcode.h	FUNCTION_6	WHILE_1
0x4005a56	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       912	coffcode.h	FUNCTION_6	WHILE_1
0x4005a5d	     0xf8264fbffff	                            jb 0x40055c7	       912	coffcode.h	FUNCTION_6	WHILE_1
0x4005a63	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      1148	coffcode.h	FUNCTION_6
0x4005a69	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1149	coffcode.h	FUNCTION_6
0x4005a6d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1149	coffcode.h	FUNCTION_6
0x4005a76	            0x7405	                            je 0x4005a7d	      1149	coffcode.h	FUNCTION_6
0x4005a78	      0xe800000000	                          call 0x4005a7d	      1149	coffcode.h	FUNCTION_6
0x4005a7d	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1149	coffcode.h	FUNCTION_6
0x4005a81	              0xc9	                                   leave	      1149	coffcode.h	FUNCTION_6
0x4005a82	              0xc3	                                     ret	      1149	coffcode.h	FUNCTION_6
coff_link_output_has_begun	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,0:DO,0	11
0x400a26f	              0x55	                                push rbp	      5218	coffcode.h	FUNCTION_40
0x400a270	          0x4889e5	                            mov rbp, rsp	      5218	coffcode.h	FUNCTION_40
0x400a273	        0x48897df8	                mov qword [rbp - 8], rdi	      5218	coffcode.h	FUNCTION_40
0x400a277	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5218	coffcode.h	FUNCTION_40
0x400a27b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5219	coffcode.h	FUNCTION_40
0x400a27f	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      5219	coffcode.h	FUNCTION_40
0x400a283	          0xc0e806	                               shr al, 6	      5219	coffcode.h	FUNCTION_40
0x400a286	          0x83e001	                              and eax, 1	      5219	coffcode.h	FUNCTION_40
0x400a289	           0xfb6c0	                           movzx eax, al	      5219	coffcode.h	FUNCTION_40
0x400a28c	              0x5d	                                 pop rbp	      5220	coffcode.h	FUNCTION_40
0x400a28d	              0xc3	                                     ret	      5220	coffcode.h	FUNCTION_40
pe_ILF_object_p	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,1:IF,8:CALL,20:DO,0	249
0x400474f	              0x55	                                push rbp	      1126	peicode.h	FUNCTION_62
0x4004750	          0x4889e5	                            mov rbp, rsp	      1126	peicode.h	FUNCTION_62
0x4004753	        0x4883ec60	                           sub rsp, 0x60	      1126	peicode.h	FUNCTION_62
0x4004757	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1126	peicode.h	FUNCTION_62
0x400475b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1126	peicode.h	FUNCTION_62
0x4004764	        0x488945f8	                mov qword [rbp - 8], rax	      1126	peicode.h	FUNCTION_62
0x4004768	            0x31c0	                            xor eax, eax	      1126	peicode.h	FUNCTION_62
0x400476a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1139	peicode.h	FUNCTION_62	IF_1	CALL_1
0x400476e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1139	peicode.h	FUNCTION_62	IF_1	CALL_1
0x4004772	      0xbe0e000000	                            mov esi, 0xe	      1139	peicode.h	FUNCTION_62	IF_1	CALL_1
0x4004777	          0x4889c7	                            mov rdi, rax	      1139	peicode.h	FUNCTION_62	IF_1	CALL_1
0x400477a	      0xe800000000	                          call 0x400477f	      1139	peicode.h	FUNCTION_62	IF_1	CALL_1
0x400477f	        0x4883f80e	                            cmp rax, 0xe	      1139	peicode.h	FUNCTION_62	IF_1	CALL_1
0x4004783	            0x740a	                            je 0x400478f	      1139	peicode.h	FUNCTION_62	IF_1	CALL_1
0x4004785	      0xb800000000	                              mov eax, 0	      1140	peicode.h	FUNCTION_62	IF_1
0x400478a	      0xe974030000	                           jmp 0x4004b03	      1140	peicode.h	FUNCTION_62	IF_1
0x400478f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1142	peicode.h	FUNCTION_62
0x4004793	        0x488945c0	             mov qword [rbp - 0x40], rax	      1142	peicode.h	FUNCTION_62
0x4004797	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1144	peicode.h	FUNCTION_62
0x400479b	        0x488b4008	                mov rax, qword [rax + 8]	      1144	peicode.h	FUNCTION_62
0x400479f	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1144	peicode.h	FUNCTION_62
0x40047a6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1144	peicode.h	FUNCTION_62
0x40047aa	          0x4889d7	                            mov rdi, rdx	      1144	peicode.h	FUNCTION_62
0x40047ad	            0xffd0	                                call rax	      1144	peicode.h	FUNCTION_62
0x40047af	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1144	peicode.h	FUNCTION_62
0x40047b2	      0x488345c002	               add qword [rbp - 0x40], 2	      1145	peicode.h	FUNCTION_62
0x40047b7	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1148	peicode.h	FUNCTION_62
0x40047be	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047c1	      0x3da6010000	                          cmp eax, 0x1a6	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047c6	     0xf84f4000000	                            je 0x40048c0	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047cc	      0x3da6010000	                          cmp eax, 0x1a6	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047d1	            0x7755	                            ja 0x4004828	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047d3	      0x3d66010000	                          cmp eax, 0x166	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047d8	     0xf84e5000000	                            je 0x40048c3	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047de	      0x3d66010000	                          cmp eax, 0x166	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047e3	            0x7720	                            ja 0x4004805	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047e5	      0x3d4c010000	                          cmp eax, 0x14c	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047ea	     0xf84d6000000	                            je 0x40048c6	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047f0	      0x3d62010000	                          cmp eax, 0x162	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047f5	     0xf84c8000000	                            je 0x40048c3	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047fb	            0x85c0	                           test eax, eax	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x40047fd	     0xf84c6000000	                            je 0x40048c9	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004803	            0xeb7e	                           jmp 0x4004883	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004805	      0x3d84010000	                          cmp eax, 0x184	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400480a	     0xf84b9000000	                            je 0x40048c9	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004810	      0x3da2010000	                          cmp eax, 0x1a2	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004815	     0xf84a5000000	                            je 0x40048c0	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400481b	      0x3d68010000	                          cmp eax, 0x168	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004820	     0xf849d000000	                            je 0x40048c3	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004826	            0xeb5b	                           jmp 0x4004883	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004828	      0x3d66020000	                          cmp eax, 0x266	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400482d	     0xf8490000000	                            je 0x40048c3	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004833	      0x3d66020000	                          cmp eax, 0x266	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004838	            0x771b	                            ja 0x4004855	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400483a	      0x3dc2010000	                          cmp eax, 0x1c2	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400483f	     0xf8487000000	                            je 0x40048cc	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004845	      0x3d00020000	                          cmp eax, 0x200	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400484a	            0x747d	                            je 0x40048c9	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400484c	      0x3dc0010000	                          cmp eax, 0x1c0	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004851	            0x747c	                            je 0x40048cf	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004853	            0xeb2e	                           jmp 0x4004883	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004855	      0x3d66030000	                          cmp eax, 0x366	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400485a	            0x7467	                            je 0x40048c3	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400485c	      0x3d66030000	                          cmp eax, 0x366	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004861	            0x7709	                            ja 0x400486c	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004863	      0x3d84020000	                          cmp eax, 0x284	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004868	            0x745f	                            je 0x40048c9	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400486a	            0xeb17	                           jmp 0x4004883	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400486c	      0x3d66040000	                          cmp eax, 0x466	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004871	            0x7450	                            je 0x40048c3	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004873	      0x3d64860000	                         cmp eax, 0x8664	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x4004878	            0x7509	                           jne 0x4004883	      1150	peicode.h	FUNCTION_62	SWITCH_1
0x400487a	    0xc745b0648600	          mov dword [rbp - 0x50], 0x8664	      1166	peicode.h	FUNCTION_62	SWITCH_1
0x4004881	            0xeb4d	                           jmp 0x40048d0	      1168	peicode.h	FUNCTION_62	SWITCH_1
0x4004883	      0xbe00000000	                              mov esi, 0	      1211	peicode.h	FUNCTION_62	SWITCH_1	CALL_3
0x4004888	      0xbf00000000	                              mov edi, 0	      1211	peicode.h	FUNCTION_62	SWITCH_1	CALL_3
0x400488d	      0xe800000000	                          call 0x4004892	      1211	peicode.h	FUNCTION_62	SWITCH_1	CALL_3
0x4004892	          0x4889c1	                            mov rcx, rax	      1211	peicode.h	FUNCTION_62	SWITCH_1	CALL_3
0x4004895	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1209	peicode.h	FUNCTION_62	SWITCH_1	CALL_2
0x4004898	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1209	peicode.h	FUNCTION_62	SWITCH_1	CALL_2
0x400489c	          0x4889c6	                            mov rsi, rax	      1209	peicode.h	FUNCTION_62	SWITCH_1	CALL_2
0x400489f	          0x4889cf	                            mov rdi, rcx	      1209	peicode.h	FUNCTION_62	SWITCH_1	CALL_2
0x40048a2	      0xb800000000	                              mov eax, 0	      1209	peicode.h	FUNCTION_62	SWITCH_1	CALL_2
0x40048a7	      0xe800000000	                          call 0x40048ac	      1209	peicode.h	FUNCTION_62	SWITCH_1	CALL_2
0x40048ac	      0xbf0a000000	                            mov edi, 0xa	      1214	peicode.h	FUNCTION_62	SWITCH_1	CALL_4
0x40048b1	      0xe800000000	                          call 0x40048b6	      1214	peicode.h	FUNCTION_62	SWITCH_1	CALL_4
0x40048b6	      0xb800000000	                              mov eax, 0	      1216	peicode.h	FUNCTION_62	SWITCH_1
0x40048bb	      0xe943020000	                           jmp 0x4004b03	      1216	peicode.h	FUNCTION_62	SWITCH_1
0x40048c0	              0x90	                                     nop	      1187	peicode.h	FUNCTION_62	SWITCH_1
0x40048c1	            0xeb0d	                           jmp 0x40048d0	      1187	peicode.h	FUNCTION_62	SWITCH_1
0x40048c3	              0x90	                                     nop	      1180	peicode.h	FUNCTION_62	SWITCH_1
0x40048c4	            0xeb0a	                           jmp 0x40048d0	      1180	peicode.h	FUNCTION_62	SWITCH_1
0x40048c6	              0x90	                                     nop	      1162	peicode.h	FUNCTION_62	SWITCH_1
0x40048c7	            0xeb07	                           jmp 0x40048d0	      1162	peicode.h	FUNCTION_62	SWITCH_1
0x40048c9	              0x90	                                     nop	      1156	peicode.h	FUNCTION_62	SWITCH_1
0x40048ca	            0xeb04	                           jmp 0x40048d0	      1156	peicode.h	FUNCTION_62	SWITCH_1
0x40048cc	              0x90	                                     nop	      1204	peicode.h	FUNCTION_62	SWITCH_1
0x40048cd	            0xeb01	                           jmp 0x40048d0	      1204	peicode.h	FUNCTION_62	SWITCH_1
0x40048cf	              0x90	                                     nop	      1193	peicode.h	FUNCTION_62	SWITCH_1
0x40048d0	        0x837db000	               cmp dword [rbp - 0x50], 0	      1220	peicode.h	FUNCTION_62	IF_3
0x40048d4	            0x753d	                           jne 0x4004913	      1220	peicode.h	FUNCTION_62	IF_3
0x40048d6	      0xbe00000000	                              mov esi, 0	      1224	peicode.h	FUNCTION_62	IF_3	CALL_6
0x40048db	      0xbf00000000	                              mov edi, 0	      1224	peicode.h	FUNCTION_62	IF_3	CALL_6
0x40048e0	      0xe800000000	                          call 0x40048e5	      1224	peicode.h	FUNCTION_62	IF_3	CALL_6
0x40048e5	          0x4889c1	                            mov rcx, rax	      1224	peicode.h	FUNCTION_62	IF_3	CALL_6
0x40048e8	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1222	peicode.h	FUNCTION_62	IF_3	CALL_5
0x40048eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1222	peicode.h	FUNCTION_62	IF_3	CALL_5
0x40048ef	          0x4889c6	                            mov rsi, rax	      1222	peicode.h	FUNCTION_62	IF_3	CALL_5
0x40048f2	          0x4889cf	                            mov rdi, rcx	      1222	peicode.h	FUNCTION_62	IF_3	CALL_5
0x40048f5	      0xb800000000	                              mov eax, 0	      1222	peicode.h	FUNCTION_62	IF_3	CALL_5
0x40048fa	      0xe800000000	                          call 0x40048ff	      1222	peicode.h	FUNCTION_62	IF_3	CALL_5
0x40048ff	      0xbf03000000	                              mov edi, 3	      1227	peicode.h	FUNCTION_62	IF_3	CALL_7
0x4004904	      0xe800000000	                          call 0x4004909	      1227	peicode.h	FUNCTION_62	IF_3	CALL_7
0x4004909	      0xb800000000	                              mov eax, 0	      1229	peicode.h	FUNCTION_62	IF_3
0x400490e	      0xe9f0010000	                           jmp 0x4004b03	      1229	peicode.h	FUNCTION_62	IF_3
0x4004913	      0x488345c004	               add qword [rbp - 0x40], 4	      1234	peicode.h	FUNCTION_62
0x4004918	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1236	peicode.h	FUNCTION_62
0x400491c	        0x488b4008	                mov rax, qword [rax + 8]	      1236	peicode.h	FUNCTION_62
0x4004920	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1236	peicode.h	FUNCTION_62
0x4004927	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1236	peicode.h	FUNCTION_62
0x400492b	          0x4889d7	                            mov rdi, rdx	      1236	peicode.h	FUNCTION_62
0x400492e	            0xffd0	                                call rax	      1236	peicode.h	FUNCTION_62
0x4004930	        0x488945c8	             mov qword [rbp - 0x38], rax	      1236	peicode.h	FUNCTION_62
0x4004934	      0x488345c004	               add qword [rbp - 0x40], 4	      1237	peicode.h	FUNCTION_62
0x4004939	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1239	peicode.h	FUNCTION_62	IF_4
0x400493e	            0x753a	                           jne 0x400497a	      1239	peicode.h	FUNCTION_62	IF_4
0x4004940	      0xbe00000000	                              mov esi, 0	      1242	peicode.h	FUNCTION_62	IF_4	CALL_9
0x4004945	      0xbf00000000	                              mov edi, 0	      1242	peicode.h	FUNCTION_62	IF_4	CALL_9
0x400494a	      0xe800000000	                          call 0x400494f	      1242	peicode.h	FUNCTION_62	IF_4	CALL_9
0x400494f	          0x4889c2	                            mov rdx, rax	      1242	peicode.h	FUNCTION_62	IF_4	CALL_9
0x4004952	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1241	peicode.h	FUNCTION_62	IF_4	CALL_8
0x4004956	          0x4889c6	                            mov rsi, rax	      1241	peicode.h	FUNCTION_62	IF_4	CALL_8
0x4004959	          0x4889d7	                            mov rdi, rdx	      1241	peicode.h	FUNCTION_62	IF_4	CALL_8
0x400495c	      0xb800000000	                              mov eax, 0	      1241	peicode.h	FUNCTION_62	IF_4	CALL_8
0x4004961	      0xe800000000	                          call 0x4004966	      1241	peicode.h	FUNCTION_62	IF_4	CALL_8
0x4004966	      0xbf0a000000	                            mov edi, 0xa	      1243	peicode.h	FUNCTION_62	IF_4	CALL_10
0x400496b	      0xe800000000	                          call 0x4004970	      1243	peicode.h	FUNCTION_62	IF_4	CALL_10
0x4004970	      0xb800000000	                              mov eax, 0	      1245	peicode.h	FUNCTION_62	IF_4
0x4004975	      0xe989010000	                           jmp 0x4004b03	      1245	peicode.h	FUNCTION_62	IF_4
0x400497a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1248	peicode.h	FUNCTION_62
0x400497e	        0x488b4008	                mov rax, qword [rax + 8]	      1248	peicode.h	FUNCTION_62
0x4004982	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1248	peicode.h	FUNCTION_62
0x4004989	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1248	peicode.h	FUNCTION_62
0x400498d	          0x4889d7	                            mov rdi, rdx	      1248	peicode.h	FUNCTION_62
0x4004990	            0xffd0	                                call rax	      1248	peicode.h	FUNCTION_62
0x4004992	          0x8945b8	             mov dword [rbp - 0x48], eax	      1248	peicode.h	FUNCTION_62
0x4004995	      0x488345c002	               add qword [rbp - 0x40], 2	      1249	peicode.h	FUNCTION_62
0x400499a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1251	peicode.h	FUNCTION_62
0x400499e	        0x488b4008	                mov rax, qword [rax + 8]	      1251	peicode.h	FUNCTION_62
0x40049a2	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1251	peicode.h	FUNCTION_62
0x40049a9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1251	peicode.h	FUNCTION_62
0x40049ad	          0x4889d7	                            mov rdi, rdx	      1251	peicode.h	FUNCTION_62
0x40049b0	            0xffd0	                                call rax	      1251	peicode.h	FUNCTION_62
0x40049b2	          0x8945bc	             mov dword [rbp - 0x44], eax	      1251	peicode.h	FUNCTION_62
0x40049b5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1255	peicode.h	FUNCTION_62	CALL_11
0x40049b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1255	peicode.h	FUNCTION_62	CALL_11
0x40049bd	          0x4889d6	                            mov rsi, rdx	      1255	peicode.h	FUNCTION_62	CALL_11
0x40049c0	          0x4889c7	                            mov rdi, rax	      1255	peicode.h	FUNCTION_62	CALL_11
0x40049c3	      0xe800000000	                          call 0x40049c8	      1255	peicode.h	FUNCTION_62	CALL_11
0x40049c8	        0x488945c0	             mov qword [rbp - 0x40], rax	      1255	peicode.h	FUNCTION_62	CALL_11
0x40049cc	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1256	peicode.h	FUNCTION_62	IF_5
0x40049d1	            0x750a	                           jne 0x40049dd	      1256	peicode.h	FUNCTION_62	IF_5
0x40049d3	      0xb800000000	                              mov eax, 0	      1257	peicode.h	FUNCTION_62	IF_5
0x40049d8	      0xe926010000	                           jmp 0x4004b03	      1257	peicode.h	FUNCTION_62	IF_5
0x40049dd	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049e1	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049e9	          0x4889ce	                            mov rsi, rcx	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049ec	          0x4889c7	                            mov rdi, rax	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049ef	      0xe800000000	                          call 0x40049f4	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049f4	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049f8	            0x741d	                            je 0x4004a17	      1259	peicode.h	FUNCTION_62	IF_6	CALL_12
0x40049fa	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1261	peicode.h	FUNCTION_62	IF_6	CALL_13
0x40049fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1261	peicode.h	FUNCTION_62	IF_6	CALL_13
0x4004a02	          0x4889d6	                            mov rsi, rdx	      1261	peicode.h	FUNCTION_62	IF_6	CALL_13
0x4004a05	          0x4889c7	                            mov rdi, rax	      1261	peicode.h	FUNCTION_62	IF_6	CALL_13
0x4004a08	      0xe800000000	                          call 0x4004a0d	      1261	peicode.h	FUNCTION_62	IF_6	CALL_13
0x4004a0d	      0xb800000000	                              mov eax, 0	      1262	peicode.h	FUNCTION_62	IF_6
0x4004a12	      0xe9ec000000	                           jmp 0x4004b03	      1262	peicode.h	FUNCTION_62	IF_6
0x4004a17	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1265	peicode.h	FUNCTION_62
0x4004a1b	        0x488945d0	             mov qword [rbp - 0x30], rax	      1265	peicode.h	FUNCTION_62
0x4004a1f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a23	        0x488d50ff	                      lea rdx, [rax - 1]	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a27	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a2b	          0x4889d6	                            mov rsi, rdx	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a2e	          0x4889c7	                            mov rdi, rax	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a31	      0xe800000000	                          call 0x4004a36	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a36	        0x488d5001	                      lea rdx, [rax + 1]	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a3a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a3e	          0x4801d0	                            add rax, rdx	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a41	        0x488945d8	             mov qword [rbp - 0x28], rax	      1267	peicode.h	FUNCTION_62	CALL_14
0x4004a45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1270	peicode.h	FUNCTION_62	IF_7
0x4004a49	        0x488d50ff	                      lea rdx, [rax - 1]	      1270	peicode.h	FUNCTION_62	IF_7
0x4004a4d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1270	peicode.h	FUNCTION_62	IF_7
0x4004a51	          0x4801d0	                            add rax, rdx	      1270	peicode.h	FUNCTION_62	IF_7
0x4004a54	           0xfb600	                   movzx eax, byte [rax]	      1270	peicode.h	FUNCTION_62	IF_7
0x4004a57	            0x84c0	                             test al, al	      1270	peicode.h	FUNCTION_62	IF_7
0x4004a59	            0x7514	                           jne 0x4004a6f	      1270	peicode.h	FUNCTION_62	IF_7
0x4004a5b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1271	peicode.h	FUNCTION_62	IF_7
0x4004a5f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1271	peicode.h	FUNCTION_62	IF_7
0x4004a63	          0x4829c2	                            sub rdx, rax	      1271	peicode.h	FUNCTION_62	IF_7
0x4004a66	          0x4889d0	                            mov rax, rdx	      1271	peicode.h	FUNCTION_62	IF_7
0x4004a69	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1271	peicode.h	FUNCTION_62	IF_7
0x4004a6d	            0x724a	                            jb 0x4004ab9	      1271	peicode.h	FUNCTION_62	IF_7
0x4004a6f	      0xbe00000000	                              mov esi, 0	      1274	peicode.h	FUNCTION_62	IF_7	CALL_16
0x4004a74	      0xbf00000000	                              mov edi, 0	      1274	peicode.h	FUNCTION_62	IF_7	CALL_16
0x4004a79	      0xe800000000	                          call 0x4004a7e	      1274	peicode.h	FUNCTION_62	IF_7	CALL_16
0x4004a7e	          0x4889c2	                            mov rdx, rax	      1274	peicode.h	FUNCTION_62	IF_7	CALL_16
0x4004a81	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1273	peicode.h	FUNCTION_62	IF_7	CALL_15
0x4004a85	          0x4889c6	                            mov rsi, rax	      1273	peicode.h	FUNCTION_62	IF_7	CALL_15
0x4004a88	          0x4889d7	                            mov rdi, rdx	      1273	peicode.h	FUNCTION_62	IF_7	CALL_15
0x4004a8b	      0xb800000000	                              mov eax, 0	      1273	peicode.h	FUNCTION_62	IF_7	CALL_15
0x4004a90	      0xe800000000	                          call 0x4004a95	      1273	peicode.h	FUNCTION_62	IF_7	CALL_15
0x4004a95	      0xbf0a000000	                            mov edi, 0xa	      1275	peicode.h	FUNCTION_62	IF_7	CALL_17
0x4004a9a	      0xe800000000	                          call 0x4004a9f	      1275	peicode.h	FUNCTION_62	IF_7	CALL_17
0x4004a9f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1276	peicode.h	FUNCTION_62	IF_7	CALL_18
0x4004aa3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1276	peicode.h	FUNCTION_62	IF_7	CALL_18
0x4004aa7	          0x4889d6	                            mov rsi, rdx	      1276	peicode.h	FUNCTION_62	IF_7	CALL_18
0x4004aaa	          0x4889c7	                            mov rdi, rax	      1276	peicode.h	FUNCTION_62	IF_7	CALL_18
0x4004aad	      0xe800000000	                          call 0x4004ab2	      1276	peicode.h	FUNCTION_62	IF_7	CALL_18
0x4004ab2	      0xb800000000	                              mov eax, 0	      1277	peicode.h	FUNCTION_62	IF_7
0x4004ab7	            0xeb4a	                           jmp 0x4004b03	      1277	peicode.h	FUNCTION_62	IF_7
0x4004ab9	        0x448b45bc	             mov r8d, dword [rbp - 0x44]	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004abd	          0x8b7db8	             mov edi, dword [rbp - 0x48]	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004ac0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004ac4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004ac8	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004acb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004acf	          0x4589c1	                            mov r9d, r8d	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004ad2	          0x4189f8	                            mov r8d, edi	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004ad5	          0x4889c7	                            mov rdi, rax	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004ad8	      0xe8d2eeffff	             call sym.pe_ILF_build_a_bfd	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004add	            0x85c0	                           test eax, eax	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004adf	            0x751a	                           jne 0x4004afb	      1281	peicode.h	FUNCTION_62	IF_8	CALL_19
0x4004ae1	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1284	peicode.h	FUNCTION_62	IF_8	CALL_20
0x4004ae5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1284	peicode.h	FUNCTION_62	IF_8	CALL_20
0x4004ae9	          0x4889d6	                            mov rsi, rdx	      1284	peicode.h	FUNCTION_62	IF_8	CALL_20
0x4004aec	          0x4889c7	                            mov rdi, rax	      1284	peicode.h	FUNCTION_62	IF_8	CALL_20
0x4004aef	      0xe800000000	                          call 0x4004af4	      1284	peicode.h	FUNCTION_62	IF_8	CALL_20
0x4004af4	      0xb800000000	                              mov eax, 0	      1285	peicode.h	FUNCTION_62	IF_8
0x4004af9	            0xeb08	                           jmp 0x4004b03	      1285	peicode.h	FUNCTION_62	IF_8
0x4004afb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1288	peicode.h	FUNCTION_62
0x4004aff	        0x488b4008	                mov rax, qword [rax + 8]	      1288	peicode.h	FUNCTION_62
0x4004b03	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1289	peicode.h	FUNCTION_62
0x4004b07	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1289	peicode.h	FUNCTION_62
0x4004b10	            0x7405	                            je 0x4004b17	      1289	peicode.h	FUNCTION_62
0x4004b12	      0xe800000000	                          call 0x4004b17	      1289	peicode.h	FUNCTION_62
0x4004b17	              0xc9	                                   leave	      1289	peicode.h	FUNCTION_62
0x4004b18	              0xc3	                                     ret	      1289	peicode.h	FUNCTION_62
coff_bad_format_hook	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,0:DO,0	15
0x4005e90	              0x55	                                push rbp	      1647	coffcode.h	FUNCTION_8
0x4005e91	          0x4889e5	                            mov rbp, rsp	      1647	coffcode.h	FUNCTION_8
0x4005e94	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1647	coffcode.h	FUNCTION_8
0x4005e98	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1647	coffcode.h	FUNCTION_8
0x4005e9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1648	coffcode.h	FUNCTION_8
0x4005ea0	        0x488945f8	                mov qword [rbp - 8], rax	      1648	coffcode.h	FUNCTION_8
0x4005ea4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1650	coffcode.h	FUNCTION_8	IF_1
0x4005ea8	     0xfb780d00800	          movzx eax, word [rax + 0x8d0] 	      1650	coffcode.h	FUNCTION_8	IF_1
0x4005eaf	        0x663d6486	                          cmp ax, 0x8664	      1650	coffcode.h	FUNCTION_8	IF_1
0x4005eb3	            0x7407	                            je 0x4005ebc	      1650	coffcode.h	FUNCTION_8	IF_1
0x4005eb5	      0xb800000000	                              mov eax, 0	      1651	coffcode.h	FUNCTION_8	IF_1
0x4005eba	            0xeb05	                           jmp 0x4005ec1	      1651	coffcode.h	FUNCTION_8	IF_1
0x4005ebc	      0xb801000000	                              mov eax, 1	      1653	coffcode.h	FUNCTION_8
0x4005ec1	              0x5d	                                 pop rbp	      1654	coffcode.h	FUNCTION_8
0x4005ec2	              0xc3	                                     ret	      1654	coffcode.h	FUNCTION_8
coff_write_object_contents	FOR,6:functions,0:WHILE,0:ELSE,25:SWITCH,2:IF,79:CALL,105:DO,0	952
0x4007758	              0x55	                                push rbp	      3339	coffcode.h	FUNCTION_29
0x4007759	          0x4889e5	                            mov rbp, rsp	      3339	coffcode.h	FUNCTION_29
0x400775c	            0x4155	                                push r13	      3339	coffcode.h	FUNCTION_29
0x400775e	            0x4154	                                push r12	      3339	coffcode.h	FUNCTION_29
0x4007760	              0x53	                                push rbx	      3339	coffcode.h	FUNCTION_29
0x4007761	    0x4881ece80c00	                          sub rsp, 0xce8	      3339	coffcode.h	FUNCTION_29
0x4007768	    0x4889bd08f3ff	            mov qword [rbp - 0xcf8], rdi	      3339	coffcode.h	FUNCTION_29
0x400776f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3339	coffcode.h	FUNCTION_29
0x4007778	        0x488945d8	             mov qword [rbp - 0x28], rax	      3339	coffcode.h	FUNCTION_29
0x400777c	            0x31c0	                            xor eax, eax	      3339	coffcode.h	FUNCTION_29
0x400777e	    0xc78518f3ffff	              mov dword [rbp - 0xce8], 0	      3341	coffcode.h	FUNCTION_29
0x4007788	    0xc7851cf3ffff	              mov dword [rbp - 0xce4], 0	      3342	coffcode.h	FUNCTION_29
0x4007792	    0xc78520f3ffff	              mov dword [rbp - 0xce0], 0	      3344	coffcode.h	FUNCTION_29
0x400779c	    0x48c785a0f3ff	              mov qword [rbp - 0xc60], 0	      3350	coffcode.h	FUNCTION_29
0x40077a7	    0x48c78558f3ff	              mov qword [rbp - 0xca8], 0	      3350	coffcode.h	FUNCTION_29
0x40077b2	    0x48c785a8f3ff	              mov qword [rbp - 0xc58], 0	      3351	coffcode.h	FUNCTION_29
0x40077bd	    0x48c78560f3ff	              mov qword [rbp - 0xca0], 0	      3353	coffcode.h	FUNCTION_29
0x40077c8	    0x48c78568f3ff	              mov qword [rbp - 0xc98], 0	      3354	coffcode.h	FUNCTION_29
0x40077d3	    0x48c78570f3ff	              mov qword [rbp - 0xc90], 0	      3355	coffcode.h	FUNCTION_29
0x40077de	    0x48c78578f3ff	              mov qword [rbp - 0xc88], 4	      3359	coffcode.h	FUNCTION_29
0x40077e9	      0xbf01000000	                              mov edi, 1	      3362	coffcode.h	FUNCTION_29	CALL_1
0x40077ee	      0xe800000000	                          call 0x40077f3	      3362	coffcode.h	FUNCTION_29	CALL_1
0x40077f3	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3366	coffcode.h	FUNCTION_29	CALL_3
0x40077fa	          0x4889c7	                            mov rdi, rax	      3366	coffcode.h	FUNCTION_29	CALL_3
0x40077fd	      0xe800000000	                          call 0x4007802	      3366	coffcode.h	FUNCTION_29	CALL_3
0x4007802	            0x89c2	                            mov edx, eax	      3366	coffcode.h	FUNCTION_29	CALL_3
0x4007804	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3366	coffcode.h	FUNCTION_29	CALL_3
0x400780b	        0x488b4008	                mov rax, qword [rax + 8]	      3366	coffcode.h	FUNCTION_29	CALL_3
0x400780f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3366	coffcode.h	FUNCTION_29	CALL_3
0x4007816	          0x8b4068	            mov eax, dword [rax + 0x68] 	      3366	coffcode.h	FUNCTION_29	CALL_3
0x4007819	           0xfafc2	                           imul eax, edx	      3366	coffcode.h	FUNCTION_29	CALL_3
0x400781c	            0x89c0	                            mov eax, eax	      3366	coffcode.h	FUNCTION_29	CALL_3
0x400781e	    0x488985a8f3ff	            mov qword [rbp - 0xc58], rax	      3366	coffcode.h	FUNCTION_29	CALL_3
0x4007825	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3368	coffcode.h	FUNCTION_29	IF_1
0x400782c	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      3368	coffcode.h	FUNCTION_29	IF_1
0x4007830	          0x83e040	                           and eax, 0x40	      3368	coffcode.h	FUNCTION_29	IF_1
0x4007833	            0x84c0	                             test al, al	      3368	coffcode.h	FUNCTION_29	IF_1
0x4007835	            0x751d	                           jne 0x4007854	      3368	coffcode.h	FUNCTION_29	IF_1
0x4007837	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3370	coffcode.h	FUNCTION_29	IF_1	IF_2	CALL_4
0x400783e	          0x4889c7	                            mov rdi, rax	      3370	coffcode.h	FUNCTION_29	IF_1	IF_2	CALL_4
0x4007841	      0xe89cf2ffff	call sym.coff_compute_section_file_positions	      3370	coffcode.h	FUNCTION_29	IF_1	IF_2	CALL_4
0x4007846	            0x85c0	                           test eax, eax	      3370	coffcode.h	FUNCTION_29	IF_1	IF_2	CALL_4
0x4007848	            0x750a	                           jne 0x4007854	      3370	coffcode.h	FUNCTION_29	IF_1	IF_2	CALL_4
0x400784a	      0xb800000000	                              mov eax, 0	      3371	coffcode.h	FUNCTION_29	IF_1	IF_2
0x400784f	      0xe936110000	                           jmp 0x400898a	      3371	coffcode.h	FUNCTION_29	IF_1	IF_2
0x4007854	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3374	coffcode.h	FUNCTION_29	CALL_5
0x400785b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3374	coffcode.h	FUNCTION_29	CALL_5
0x4007862	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3374	coffcode.h	FUNCTION_29	CALL_5
0x4007866	    0x48898548f3ff	            mov qword [rbp - 0xcb8], rax	      3374	coffcode.h	FUNCTION_29	CALL_5
0x400786d	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3378	coffcode.h	FUNCTION_29	FOR_1
0x4007874	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3378	coffcode.h	FUNCTION_29	FOR_1
0x400787b	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3378	coffcode.h	FUNCTION_29	FOR_1
0x4007882	            0xeb5c	                           jmp 0x40078e0	      3378	coffcode.h	FUNCTION_29	FOR_1
0x4007884	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400788b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4007892	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4007898	            0x85c0	                           test eax, eax	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400789a	            0x741c	                            je 0x40078b8	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400789c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x40078a3	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x40078a9	      0x3dfeff0000	                         cmp eax, 0xfffe	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x40078ae	            0x7608	                           jbe 0x40078b8	      3383	coffcode.h	FUNCTION_29	FOR_1	IF_3	CALL_6
0x40078b0	    0x48838558f3ff	              add qword [rbp - 0xca8], 1	      3384	coffcode.h	FUNCTION_29	FOR_1	IF_3
0x40078b8	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3386	coffcode.h	FUNCTION_29	FOR_1
0x40078bf	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3386	coffcode.h	FUNCTION_29	FOR_1
0x40078c5	            0x89c0	                            mov eax, eax	      3386	coffcode.h	FUNCTION_29	FOR_1
0x40078c7	    0x48018558f3ff	           add qword [rbp - 0xca8], rax 	      3386	coffcode.h	FUNCTION_29	FOR_1
0x40078ce	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3378	coffcode.h	FUNCTION_29	FOR_1
0x40078d5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3378	coffcode.h	FUNCTION_29	FOR_1
0x40078d9	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3378	coffcode.h	FUNCTION_29	FOR_1
0x40078e0	    0x4883bd38f3ff	              cmp qword [rbp - 0xcc8], 0	      3378	coffcode.h	FUNCTION_29	FOR_1
0x40078e8	            0x759a	                           jne 0x4007884	      3378	coffcode.h	FUNCTION_29	FOR_1
0x40078ea	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3389	coffcode.h	FUNCTION_29	CALL_7
0x40078f1	        0x488b4008	                mov rax, qword [rax + 8]	      3389	coffcode.h	FUNCTION_29	CALL_7
0x40078f5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3389	coffcode.h	FUNCTION_29	CALL_7
0x40078fc	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3389	coffcode.h	FUNCTION_29	CALL_7
0x40078ff	            0x89c0	                            mov eax, eax	      3389	coffcode.h	FUNCTION_29	CALL_7
0x4007901	    0x480faf8558f3	           imul rax, qword [rbp - 0xca8]	      3389	coffcode.h	FUNCTION_29	CALL_7
0x4007909	    0x488985a0f3ff	            mov qword [rbp - 0xc60], rax	      3389	coffcode.h	FUNCTION_29	CALL_7
0x4007910	    0x488b9548f3ff	            mov rdx, qword [rbp - 0xcb8]	      3391	coffcode.h	FUNCTION_29
0x4007917	    0x488b85a0f3ff	            mov rax, qword [rbp - 0xc60]	      3391	coffcode.h	FUNCTION_29
0x400791e	          0x4801d0	                            add rax, rdx	      3391	coffcode.h	FUNCTION_29
0x4007921	    0x48898550f3ff	            mov qword [rbp - 0xcb0], rax	      3391	coffcode.h	FUNCTION_29
0x4007928	    0x488b9550f3ff	            mov rdx, qword [rbp - 0xcb0]	      3392	coffcode.h	FUNCTION_29
0x400792f	    0x488b85a8f3ff	            mov rax, qword [rbp - 0xc58]	      3392	coffcode.h	FUNCTION_29
0x4007936	          0x4801d0	                            add rax, rdx	      3392	coffcode.h	FUNCTION_29
0x4007939	    0x488985b0f3ff	            mov qword [rbp - 0xc50], rax	      3392	coffcode.h	FUNCTION_29
0x4007940	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3395	coffcode.h	FUNCTION_29	FOR_2
0x4007947	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3395	coffcode.h	FUNCTION_29	FOR_2
0x400794e	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3395	coffcode.h	FUNCTION_29	FOR_2
0x4007955	      0xe945010000	                           jmp 0x4007a9f	      3395	coffcode.h	FUNCTION_29	FOR_2
0x400795a	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3398	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007961	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      3398	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007967	            0x85c0	                           test eax, eax	      3398	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007969	            0x745a	                            je 0x40079c5	      3398	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x400796b	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3400	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007972	    0x488b9550f3ff	            mov rdx, qword [rbp - 0xcb0]	      3400	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007979	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      3400	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007980	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3401	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007987	    0x488b9550f3ff	            mov rdx, qword [rbp - 0xcb0]	      3401	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x400798e	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      3401	coffcode.h	FUNCTION_29	FOR_2	IF_4
0x4007995	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x400799c	    0x8b90c0000000	            mov edx, dword [rax + 0xc0] 	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079a2	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079a9	        0x488b4008	                mov rax, qword [rax + 8]	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079ad	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079b4	          0x8b4068	            mov eax, dword [rax + 0x68] 	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079b7	           0xfafc2	                           imul eax, edx	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079ba	            0x89c0	                            mov eax, eax	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079bc	    0x48018550f3ff	           add qword [rbp - 0xcb0], rax 	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079c3	            0xeb12	                           jmp 0x40079d7	      3402	coffcode.h	FUNCTION_29	FOR_2	IF_4	CALL_8
0x40079c5	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3405	coffcode.h	FUNCTION_29	FOR_2	ELSE_1
0x40079cc	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      3405	coffcode.h	FUNCTION_29	FOR_2	ELSE_1
0x40079d7	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3407	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5
0x40079de	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3407	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5
0x40079e4	            0x85c0	                           test eax, eax	      3407	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5
0x40079e6	     0xf848f000000	                            je 0x4007a7b	      3407	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5
0x40079ec	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3409	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5
0x40079f3	    0x488b9548f3ff	            mov rdx, qword [rbp - 0xcb8]	      3409	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5
0x40079fa	    0x488990980000	             mov qword [rax + 0x98], rdx	      3409	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5
0x4007a01	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a08	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a0e	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a15	        0x488b4008	                mov rax, qword [rax + 8]	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a19	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a20	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a23	           0xfafc2	                           imul eax, edx	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a26	            0x89c0	                            mov eax, eax	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a28	    0x48018548f3ff	           add qword [rbp - 0xcb8], rax 	      3410	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_9
0x4007a2f	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a36	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a3d	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a43	            0x85c0	                           test eax, eax	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a45	            0x7446	                            je 0x4007a8d	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a47	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a4e	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a54	      0x3dfeff0000	                         cmp eax, 0xfffe	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a59	            0x7632	                           jbe 0x4007a8d	      3413	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x4007a5b	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3414	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_11
0x4007a62	        0x488b4008	                mov rax, qword [rax + 8]	      3414	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_11
0x4007a66	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3414	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_11
0x4007a6d	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3414	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_11
0x4007a70	            0x89c0	                            mov eax, eax	      3414	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_11
0x4007a72	    0x48018548f3ff	           add qword [rbp - 0xcb8], rax 	      3414	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_11
0x4007a79	            0xeb12	                           jmp 0x4007a8d	      3414	coffcode.h	FUNCTION_29	FOR_2	ELSE_1	IF_5	CALL_11
0x4007a7b	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3418	coffcode.h	FUNCTION_29	FOR_2	ELSE_2
0x4007a82	    0x48c780980000	               mov qword [rax + 0x98], 0	      3418	coffcode.h	FUNCTION_29	FOR_2	ELSE_2
0x4007a8d	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3395	coffcode.h	FUNCTION_29	FOR_2
0x4007a94	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3395	coffcode.h	FUNCTION_29	FOR_2
0x4007a98	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3395	coffcode.h	FUNCTION_29	FOR_2
0x4007a9f	    0x4883bd38f3ff	              cmp qword [rbp - 0xcc8], 0	      3395	coffcode.h	FUNCTION_29	FOR_2
0x4007aa7	     0xf85adfeffff	                           jne 0x400795a	      3395	coffcode.h	FUNCTION_29	FOR_2
0x4007aad	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      3422	coffcode.h	FUNCTION_29
0x4007ab4	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3424	coffcode.h	FUNCTION_29	IF_7
0x4007abb	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3424	coffcode.h	FUNCTION_29	IF_7
0x4007abe	          0xc1e805	                              shr eax, 5	      3424	coffcode.h	FUNCTION_29	IF_7
0x4007ac1	      0x25ffff0f00	                        and eax, 0xfffff	      3424	coffcode.h	FUNCTION_29	IF_7
0x4007ac6	          0x83e002	                              and eax, 2	      3424	coffcode.h	FUNCTION_29	IF_7
0x4007ac9	            0x85c0	                           test eax, eax	      3424	coffcode.h	FUNCTION_29	IF_7
0x4007acb	            0x7437	                            je 0x4007b04	      3424	coffcode.h	FUNCTION_29	IF_7
0x4007acd	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007ad4	        0x488b4008	                mov rax, qword [rax + 8]	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007ad8	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007adf	          0x8b5050	            mov edx, dword [rax + 0x50] 	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007ae2	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007ae9	        0x488b4008	                mov rax, qword [rax + 8]	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007aed	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007af4	          0x8b4054	            mov eax, dword [rax + 0x54] 	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007af7	             0x1d0	                            add eax, edx	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007af9	            0x89c0	                            mov eax, eax	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007afb	    0x48898540f3ff	            mov qword [rbp - 0xcc0], rax	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007b02	            0xeb1e	                           jmp 0x4007b22	      3425	coffcode.h	FUNCTION_29	CALL_13
0x4007b04	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3428	coffcode.h	FUNCTION_29	ELSE_3	CALL_14
0x4007b0b	        0x488b4008	                mov rax, qword [rax + 8]	      3428	coffcode.h	FUNCTION_29	ELSE_3	CALL_14
0x4007b0f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3428	coffcode.h	FUNCTION_29	ELSE_3	CALL_14
0x4007b16	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3428	coffcode.h	FUNCTION_29	ELSE_3	CALL_14
0x4007b19	            0x89c0	                            mov eax, eax	      3428	coffcode.h	FUNCTION_29	ELSE_3	CALL_14
0x4007b1b	    0x48898540f3ff	            mov qword [rbp - 0xcc0], rax	      3428	coffcode.h	FUNCTION_29	ELSE_3	CALL_14
0x4007b22	    0x488b8d40f3ff	            mov rcx, qword [rbp - 0xcc0]	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b29	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b30	      0xba00000000	                              mov edx, 0	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b35	          0x4889ce	                            mov rsi, rcx	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b38	          0x4889c7	                            mov rdi, rax	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b3b	      0xe800000000	                          call 0x4007b40	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b40	            0x85c0	                           test eax, eax	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b42	            0x740a	                            je 0x4007b4e	      3439	coffcode.h	FUNCTION_29	IF_9	CALL_17
0x4007b44	      0xb800000000	                              mov eax, 0	      3440	coffcode.h	FUNCTION_29	IF_9
0x4007b49	      0xe93c0e0000	                           jmp 0x400898a	      3440	coffcode.h	FUNCTION_29	IF_9
0x4007b4e	    0xc78524f3ffff	              mov dword [rbp - 0xcdc], 0	      3442	coffcode.h	FUNCTION_29
0x4007b58	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3443	coffcode.h	FUNCTION_29	FOR_3
0x4007b5f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3443	coffcode.h	FUNCTION_29	FOR_3
0x4007b66	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3443	coffcode.h	FUNCTION_29	FOR_3
0x4007b6d	      0xe938080000	                           jmp 0x40083aa	      3443	coffcode.h	FUNCTION_29	FOR_3
0x4007b72	    0xc78528f3ffff	              mov dword [rbp - 0xcd8], 0	      3449	coffcode.h	FUNCTION_29	FOR_3
0x4007b7c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3451	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_18
0x4007b83	          0x488b00	                    mov rax, qword [rax]	      3451	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_18
0x4007b86	      0xbe00000000	                              mov esi, 0	      3451	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_18
0x4007b8b	          0x4889c7	                            mov rdi, rax	      3451	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_18
0x4007b8e	      0xe800000000	                          call 0x4007b93	      3451	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_18
0x4007b93	            0x85c0	                           test eax, eax	      3451	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_18
0x4007b95	            0x752c	                           jne 0x4007bc3	      3451	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_18
0x4007b97	    0xc78528f3ffff	              mov dword [rbp - 0xcd8], 1	      3453	coffcode.h	FUNCTION_29	FOR_3	IF_10
0x4007ba1	    0xc78518f3ffff	              mov dword [rbp - 0xce8], 1	      3454	coffcode.h	FUNCTION_29	FOR_3	IF_10
0x4007bab	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3455	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_19
0x4007bb2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3455	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_19
0x4007bb9	    0xc78084020000	              mov dword [rax + 0x284], 1	      3455	coffcode.h	FUNCTION_29	FOR_3	IF_10	CALL_19
0x4007bc3	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3459	coffcode.h	FUNCTION_29	FOR_3
0x4007bc6	          0x83c001	                              add eax, 1	      3459	coffcode.h	FUNCTION_29	FOR_3
0x4007bc9	          0x894584	             mov dword [rbp - 0x7c], eax	      3459	coffcode.h	FUNCTION_29	FOR_3
0x4007bcc	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3461	coffcode.h	FUNCTION_29	FOR_3	CALL_20
0x4007bd3	          0x488b08	                    mov rcx, qword [rax]	      3461	coffcode.h	FUNCTION_29	FOR_3	CALL_20
0x4007bd6	    0x488d8530f4ff	                  lea rax, [rbp - 0xbd0]	      3461	coffcode.h	FUNCTION_29	FOR_3	CALL_20
0x4007bdd	      0xba08000000	                              mov edx, 8	      3461	coffcode.h	FUNCTION_29	FOR_3	CALL_20
0x4007be2	          0x4889ce	                            mov rsi, rcx	      3461	coffcode.h	FUNCTION_29	FOR_3	CALL_20
0x4007be5	          0x4889c7	                            mov rdi, rax	      3461	coffcode.h	FUNCTION_29	FOR_3	CALL_20
0x4007be8	      0xe800000000	                          call 0x4007bed	      3461	coffcode.h	FUNCTION_29	FOR_3	CALL_20
0x4007bed	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3466	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_21
0x4007bf4	        0x488b4008	                mov rax, qword [rax + 8]	      3466	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_21
0x4007bf8	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3466	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_21
0x4007bff	          0x8b4074	            mov eax, dword [rax + 0x74] 	      3466	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_21
0x4007c02	            0x85c0	                           test eax, eax	      3466	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_21
0x4007c04	     0xf84da000000	                            je 0x4007ce4	      3466	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_21
0x4007c0a	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3470	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_22
0x4007c11	          0x488b00	                    mov rax, qword [rax]	      3470	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_22
0x4007c14	          0x4889c7	                            mov rdi, rax	      3470	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_22
0x4007c17	      0xe800000000	                          call 0x4007c1c	      3470	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_22
0x4007c1c	    0x488985d0f3ff	            mov qword [rbp - 0xc30], rax	      3470	coffcode.h	FUNCTION_29	FOR_3	IF_11	CALL_22
0x4007c23	    0x4883bdd0f3ff	              cmp qword [rbp - 0xc30], 8	      3471	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007c2b	     0xf86b3000000	                           jbe 0x4007ce4	      3471	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007c31	    0x4881bd78f3ff	      cmp qword [rbp - 0xc88], 0x98967f 	      3484	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13
0x4007c3c	            0x7648	                           jbe 0x4007c86	      3484	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13
0x4007c3e	      0xbf13000000	                           mov edi, 0x13	      3486	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_23
0x4007c43	      0xe800000000	                          call 0x4007c48	      3486	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_23
0x4007c48	      0xbe00000000	                              mov esi, 0	      3489	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x4007c4d	      0xbf00000000	                              mov edi, 0	      3489	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x4007c52	      0xe800000000	                          call 0x4007c57	      3489	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x4007c57	          0x4889c7	                            mov rdi, rax	      3489	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x4007c5a	    0x488b8d78f3ff	            mov rcx, qword [rbp - 0xc88]	      3487	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4007c61	    0x488b9538f3ff	            mov rdx, qword [rbp - 0xcc8]	      3487	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4007c68	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3487	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4007c6f	          0x4889c6	                            mov rsi, rax	      3487	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4007c72	      0xb800000000	                              mov eax, 0	      3487	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4007c77	      0xe800000000	                          call 0x4007c7c	      3487	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4007c7c	      0xb800000000	                              mov eax, 0	      3491	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13
0x4007c81	      0xe9040d0000	                           jmp 0x400898a	      3491	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	IF_13
0x4007c86	    0x488b9578f3ff	            mov rdx, qword [rbp - 0xc88]	      3497	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_26
0x4007c8d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3497	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_26
0x4007c91	      0xbe00000000	                              mov esi, 0	      3497	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_26
0x4007c96	          0x4889c7	                            mov rdi, rax	      3497	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_26
0x4007c99	      0xb800000000	                              mov eax, 0	      3497	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_26
0x4007c9e	      0xe800000000	                          call 0x4007ca3	      3497	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_26
0x4007ca3	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      3499	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_27
0x4007ca7	    0x488d8530f4ff	                  lea rax, [rbp - 0xbd0]	      3499	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_27
0x4007cae	      0xba08000000	                              mov edx, 8	      3499	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_27
0x4007cb3	          0x4889ce	                            mov rsi, rcx	      3499	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_27
0x4007cb6	          0x4889c7	                            mov rdi, rax	      3499	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_27
0x4007cb9	      0xe800000000	                          call 0x4007cbe	      3499	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12	CALL_27
0x4007cbe	    0x488b95d0f3ff	            mov rdx, qword [rbp - 0xc30]	      3500	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007cc5	    0x488b8578f3ff	            mov rax, qword [rbp - 0xc88]	      3500	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007ccc	          0x4801d0	                            add rax, rdx	      3500	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007ccf	        0x4883c001	                              add rax, 1	      3500	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007cd3	    0x48898578f3ff	            mov qword [rbp - 0xc88], rax	      3500	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007cda	    0xc78524f3ffff	              mov dword [rbp - 0xcdc], 1	      3501	coffcode.h	FUNCTION_29	FOR_3	IF_11	IF_12
0x4007ce4	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3509	coffcode.h	FUNCTION_29	FOR_3	IF_14	CALL_28
0x4007ceb	          0x488b00	                    mov rax, qword [rax]	      3509	coffcode.h	FUNCTION_29	FOR_3	IF_14	CALL_28
0x4007cee	      0xbe00000000	                              mov esi, 0	      3509	coffcode.h	FUNCTION_29	FOR_3	IF_14	CALL_28
0x4007cf3	          0x4889c7	                            mov rdi, rax	      3509	coffcode.h	FUNCTION_29	FOR_3	IF_14	CALL_28
0x4007cf6	      0xe800000000	                          call 0x4007cfb	      3509	coffcode.h	FUNCTION_29	FOR_3	IF_14	CALL_28
0x4007cfb	            0x85c0	                           test eax, eax	      3509	coffcode.h	FUNCTION_29	FOR_3	IF_14	CALL_28
0x4007cfd	            0x750d	                           jne 0x4007d0c	      3509	coffcode.h	FUNCTION_29	FOR_3	IF_14	CALL_28
0x4007cff	    0x48c78540f4ff	              mov qword [rbp - 0xbc0], 0	      3510	coffcode.h	FUNCTION_29	FOR_3	IF_14
0x4007d0a	            0xeb12	                           jmp 0x4007d1e	      3510	coffcode.h	FUNCTION_29	FOR_3	IF_14
0x4007d0c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3513	coffcode.h	FUNCTION_29	FOR_3	ELSE_5
0x4007d13	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3513	coffcode.h	FUNCTION_29	FOR_3	ELSE_5
0x4007d17	    0x48898540f4ff	            mov qword [rbp - 0xbc0], rax	      3513	coffcode.h	FUNCTION_29	FOR_3	ELSE_5
0x4007d1e	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3514	coffcode.h	FUNCTION_29	FOR_3
0x4007d25	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3514	coffcode.h	FUNCTION_29	FOR_3
0x4007d29	    0x48898538f4ff	            mov qword [rbp - 0xbc8], rax	      3514	coffcode.h	FUNCTION_29	FOR_3
0x4007d30	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3515	coffcode.h	FUNCTION_29	FOR_3
0x4007d37	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3515	coffcode.h	FUNCTION_29	FOR_3
0x4007d3b	    0x48898548f4ff	            mov qword [rbp - 0xbb8], rax	      3515	coffcode.h	FUNCTION_29	FOR_3
0x4007d42	    0xc68580f4ffff	               mov byte [rbp - 0xb80], 0	      3519	coffcode.h	FUNCTION_29	FOR_3
0x4007d49	    0x48c78538f4ff	              mov qword [rbp - 0xbc8], 0	      3523	coffcode.h	FUNCTION_29	FOR_3
0x4007d54	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3527	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_30
0x4007d5b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3527	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_30
0x4007d62	          0x4885c0	                           test rax, rax	      3527	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_30
0x4007d65	            0x7435	                            je 0x4007d9c	      3527	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_30
0x4007d67	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3528	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_31
0x4007d6e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3528	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_31
0x4007d75	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3528	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_31
0x4007d79	          0x4885c0	                           test rax, rax	      3528	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_31
0x4007d7c	            0x741e	                            je 0x4007d9c	      3528	coffcode.h	FUNCTION_29	FOR_3	IF_15	CALL_31
0x4007d7e	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3529	coffcode.h	FUNCTION_29	FOR_3	CALL_32
0x4007d85	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3529	coffcode.h	FUNCTION_29	FOR_3	CALL_32
0x4007d8c	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3529	coffcode.h	FUNCTION_29	FOR_3	CALL_32
0x4007d90	          0x488b00	                    mov rax, qword [rax]	      3529	coffcode.h	FUNCTION_29	FOR_3	CALL_32
0x4007d93	    0x48898538f4ff	            mov qword [rbp - 0xbc8], rax	      3529	coffcode.h	FUNCTION_29	FOR_3	CALL_32
0x4007d9a	            0xeb0b	                           jmp 0x4007da7	      3529	coffcode.h	FUNCTION_29	FOR_3	CALL_32
0x4007d9c	    0x48c78538f4ff	              mov qword [rbp - 0xbc8], 0	      3531	coffcode.h	FUNCTION_29	FOR_3	ELSE_6
0x4007da7	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3536	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dae	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3536	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007db2	          0x4885c0	                           test rax, rax	      3536	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007db5	            0x7413	                            je 0x4007dca	      3536	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007db7	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3537	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dbe	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3537	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dc1	      0x2502010000	                          and eax, 0x102	      3537	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dc6	            0x85c0	                           test eax, eax	      3537	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dc8	            0x750d	                           jne 0x4007dd7	      3537	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dca	    0x48c78550f4ff	              mov qword [rbp - 0xbb0], 0	      3538	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dd5	            0xeb15	                           jmp 0x4007dec	      3538	coffcode.h	FUNCTION_29	FOR_3	IF_16
0x4007dd7	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3540	coffcode.h	FUNCTION_29	FOR_3	ELSE_7
0x4007dde	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3540	coffcode.h	FUNCTION_29	FOR_3	ELSE_7
0x4007de5	    0x48898550f4ff	            mov qword [rbp - 0xbb0], rax	      3540	coffcode.h	FUNCTION_29	FOR_3	ELSE_7
0x4007dec	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3542	coffcode.h	FUNCTION_29	FOR_3
0x4007df3	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3542	coffcode.h	FUNCTION_29	FOR_3
0x4007dfa	    0x48898558f4ff	            mov qword [rbp - 0xba8], rax	      3542	coffcode.h	FUNCTION_29	FOR_3
0x4007e01	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3543	coffcode.h	FUNCTION_29	FOR_3
0x4007e08	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3543	coffcode.h	FUNCTION_29	FOR_3
0x4007e0f	    0x48898560f4ff	            mov qword [rbp - 0xba0], rax	      3543	coffcode.h	FUNCTION_29	FOR_3
0x4007e16	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3544	coffcode.h	FUNCTION_29	FOR_3
0x4007e1d	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3544	coffcode.h	FUNCTION_29	FOR_3
0x4007e23	            0x89c0	                            mov eax, eax	      3544	coffcode.h	FUNCTION_29	FOR_3
0x4007e25	    0x48898568f4ff	            mov qword [rbp - 0xb98], rax	      3544	coffcode.h	FUNCTION_29	FOR_3
0x4007e2c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3545	coffcode.h	FUNCTION_29	FOR_3
0x4007e33	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      3545	coffcode.h	FUNCTION_29	FOR_3
0x4007e39	            0x89c0	                            mov eax, eax	      3545	coffcode.h	FUNCTION_29	FOR_3
0x4007e3b	    0x48898570f4ff	            mov qword [rbp - 0xb90], rax	      3545	coffcode.h	FUNCTION_29	FOR_3
0x4007e42	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3551	coffcode.h	FUNCTION_29	FOR_3	IF_18
0x4007e49	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      3551	coffcode.h	FUNCTION_29	FOR_3	IF_18
0x4007e4f	            0x85c0	                           test eax, eax	      3551	coffcode.h	FUNCTION_29	FOR_3	IF_18
0x4007e51	            0x740a	                            je 0x4007e5d	      3551	coffcode.h	FUNCTION_29	FOR_3	IF_18
0x4007e53	    0xc7851cf3ffff	              mov dword [rbp - 0xce4], 1	      3552	coffcode.h	FUNCTION_29	FOR_3	IF_18
0x4007e5d	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3554	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e64	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3554	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e67	      0x2500200000	                         and eax, 0x2000	      3554	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e6c	            0x85c0	                           test eax, eax	      3554	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e6e	            0x7413	                            je 0x4007e83	      3554	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e70	    0x83bd28f3ffff	              cmp dword [rbp - 0xcd8], 0	      3555	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e77	            0x750a	                           jne 0x4007e83	      3555	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e79	    0xc78520f3ffff	              mov dword [rbp - 0xce0], 1	      3556	coffcode.h	FUNCTION_29	FOR_3	IF_19
0x4007e83	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007e8a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007e8d	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007e94	          0x488b00	                    mov rax, qword [rax]	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007e97	            0x89d6	                            mov esi, edx	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007e99	          0x4889c7	                            mov rdi, rax	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007e9c	      0xe866d4ffff	              call sym.sec_to_styp_flags	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007ea1	    0x48898578f4ff	            mov qword [rbp - 0xb88], rax	      3570	coffcode.h	FUNCTION_29	FOR_3	CALL_33
0x4007ea8	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3572	coffcode.h	FUNCTION_29	FOR_3	IF_21	CALL_34
0x4007eaf	          0x488b00	                    mov rax, qword [rax]	      3572	coffcode.h	FUNCTION_29	FOR_3	IF_21	CALL_34
0x4007eb2	      0xbe00000000	                              mov esi, 0	      3572	coffcode.h	FUNCTION_29	FOR_3	IF_21	CALL_34
0x4007eb7	          0x4889c7	                            mov rdi, rax	      3572	coffcode.h	FUNCTION_29	FOR_3	IF_21	CALL_34
0x4007eba	      0xe800000000	                          call 0x4007ebf	      3572	coffcode.h	FUNCTION_29	FOR_3	IF_21	CALL_34
0x4007ebf	            0x85c0	                           test eax, eax	      3572	coffcode.h	FUNCTION_29	FOR_3	IF_21	CALL_34
0x4007ec1	            0x7510	                           jne 0x4007ed3	      3572	coffcode.h	FUNCTION_29	FOR_3	IF_21	CALL_34
0x4007ec3	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3573	coffcode.h	FUNCTION_29	FOR_3	IF_21
0x4007eca	    0x48898560f3ff	            mov qword [rbp - 0xca0], rax	      3573	coffcode.h	FUNCTION_29	FOR_3	IF_21
0x4007ed1	            0xeb54	                           jmp 0x4007f27	      3573	coffcode.h	FUNCTION_29	FOR_3	IF_21
0x4007ed3	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3574	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22	CALL_35
0x4007eda	          0x488b00	                    mov rax, qword [rax]	      3574	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22	CALL_35
0x4007edd	      0xbe00000000	                              mov esi, 0	      3574	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22	CALL_35
0x4007ee2	          0x4889c7	                            mov rdi, rax	      3574	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22	CALL_35
0x4007ee5	      0xe800000000	                          call 0x4007eea	      3574	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22	CALL_35
0x4007eea	            0x85c0	                           test eax, eax	      3574	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22	CALL_35
0x4007eec	            0x7510	                           jne 0x4007efe	      3574	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22	CALL_35
0x4007eee	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3575	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22
0x4007ef5	    0x48898568f3ff	            mov qword [rbp - 0xc98], rax	      3575	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22
0x4007efc	            0xeb29	                           jmp 0x4007f27	      3575	coffcode.h	FUNCTION_29	FOR_3	ELSE_8	IF_22
0x4007efe	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3576	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23	CALL_36
0x4007f05	          0x488b00	                    mov rax, qword [rax]	      3576	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23	CALL_36
0x4007f08	      0xbe00000000	                              mov esi, 0	      3576	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23	CALL_36
0x4007f0d	          0x4889c7	                            mov rdi, rax	      3576	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23	CALL_36
0x4007f10	      0xe800000000	                          call 0x4007f15	      3576	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23	CALL_36
0x4007f15	            0x85c0	                           test eax, eax	      3576	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23	CALL_36
0x4007f17	            0x750e	                           jne 0x4007f27	      3576	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23	CALL_36
0x4007f19	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3577	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23
0x4007f20	    0x48898570f3ff	            mov qword [rbp - 0xc90], rax	      3577	coffcode.h	FUNCTION_29	FOR_3	ELSE_9	IF_23
0x4007f27	    0x488b9578f4ff	            mov rdx, qword [rbp - 0xb88]	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f2e	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f35	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f38	      0xb90d000000	                            mov ecx, 0xd	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f3d	          0x83f80d	                            cmp eax, 0xd	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f40	           0xf47c1	                          cmova eax, ecx	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f43	          0x83c001	                              add eax, 1	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f46	          0xc1e014	                           shl eax, 0x14	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f49	            0x89c0	                            mov eax, eax	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f4b	          0x4809d0	                             or rax, rdx	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f4e	    0x48898578f4ff	            mov qword [rbp - 0xb88], rax	      3580	coffcode.h	FUNCTION_29	FOR_3	CALL_37
0x4007f55	    0x488b8578f4ff	            mov rax, qword [rbp - 0xb88]	      3581	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_38
0x4007f5c	      0x250000f000	                       and eax, 0xf00000	      3581	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_38
0x4007f61	        0x48c1f814	                           sar rax, 0x14	      3581	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_38
0x4007f65	          0x8d50ff	                      lea edx, [rax - 1]	      3581	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_38
0x4007f68	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3582	coffcode.h	FUNCTION_29	FOR_3	IF_24
0x4007f6f	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3582	coffcode.h	FUNCTION_29	FOR_3	IF_24
0x4007f72	            0x39c2	                            cmp edx, eax	      3581	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_38
0x4007f74	     0xf84c3000000	                            je 0x400803d	      3581	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_38
0x4007f7a	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3584	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_39
0x4007f81	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3584	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_39
0x4007f88	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3584	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_39
0x4007f8f	          0x4885c0	                           test rax, rax	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007f92	            0x7426	                            je 0x4007fba	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007f94	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007f9b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fa2	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fa9	           0xfb600	                   movzx eax, byte [rax]	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fac	          0x83e003	                              and eax, 3	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007faf	            0x3c02	                               cmp al, 2	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fb1	            0x7407	                            je 0x4007fba	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fb3	      0xb801000000	                              mov eax, 1	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fb8	            0xeb05	                           jmp 0x4007fbf	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fba	      0xb800000000	                              mov eax, 0	      3585	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_41
0x4007fbf	    0x898530f3ffff	            mov dword [rbp - 0xcd0], eax	      3584	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_39
0x4007fc5	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007fcc	        0x448b6070	           mov r12d, dword [rax + 0x70] 	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007fd0	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007fd7	          0x488b18	                    mov rbx, qword [rax]	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007fda	    0x83bd30f3ffff	              cmp dword [rbp - 0xcd0], 0	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007fe1	            0x7408	                            je 0x4007feb	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007fe3	    0x41bd00000000	                             mov r13d, 0	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007fe9	            0xeb06	                           jmp 0x4007ff1	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007feb	    0x41bd00000000	                             mov r13d, 0	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4007ff1	      0xbe00000000	                              mov esi, 0	      3589	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_43
0x4007ff6	      0xbf00000000	                              mov edi, 0	      3589	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_43
0x4007ffb	      0xe800000000	                          call 0x4008000	      3589	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_43
0x4008000	          0x4889c7	                            mov rdi, rax	      3589	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_43
0x4008003	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x400800a	          0x4589e0	                           mov r8d, r12d	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x400800d	          0x4889d9	                            mov rcx, rbx	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4008010	          0x4c89ea	                            mov rdx, r13	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4008013	          0x4889c6	                            mov rsi, rax	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4008016	      0xb800000000	                              mov eax, 0	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x400801b	      0xe800000000	                          call 0x4008020	      3587	coffcode.h	FUNCTION_29	FOR_3	IF_24	CALL_42
0x4008020	    0x83bd30f3ffff	              cmp dword [rbp - 0xcd0], 0	      3592	coffcode.h	FUNCTION_29	FOR_3	IF_24	IF_25
0x4008027	            0x7514	                           jne 0x400803d	      3592	coffcode.h	FUNCTION_29	FOR_3	IF_24	IF_25
0x4008029	      0xbf0f000000	                            mov edi, 0xf	      3594	coffcode.h	FUNCTION_29	FOR_3	IF_24	IF_25	CALL_44
0x400802e	      0xe800000000	                          call 0x4008033	      3594	coffcode.h	FUNCTION_29	FOR_3	IF_24	IF_25	CALL_44
0x4008033	      0xb800000000	                              mov eax, 0	      3595	coffcode.h	FUNCTION_29	FOR_3	IF_24	IF_25
0x4008038	      0xe94d090000	                           jmp 0x400898a	      3595	coffcode.h	FUNCTION_29	FOR_3	IF_24	IF_25
0x400803d	    0x488b8548f4ff	            mov rax, qword [rbp - 0xbb8]	      3606	coffcode.h	FUNCTION_29	FOR_3	IF_26
0x4008044	          0x4885c0	                           test rax, rax	      3606	coffcode.h	FUNCTION_29	FOR_3	IF_26
0x4008047	            0x750b	                           jne 0x4008054	      3606	coffcode.h	FUNCTION_29	FOR_3	IF_26
0x4008049	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3607	coffcode.h	FUNCTION_29	FOR_3	IF_26
0x400804c	          0x83e801	                              sub eax, 1	      3607	coffcode.h	FUNCTION_29	FOR_3	IF_26
0x400804f	          0x894584	             mov dword [rbp - 0x7c], eax	      3607	coffcode.h	FUNCTION_29	FOR_3	IF_26
0x4008052	            0xeb75	                           jmp 0x40080c9	      3607	coffcode.h	FUNCTION_29	FOR_3	IF_26
0x4008054	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3612	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	CALL_45
0x400805b	        0x488b4008	                mov rax, qword [rax + 8]	      3612	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	CALL_45
0x400805f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3612	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	CALL_45
0x4008066	          0x8b4058	            mov eax, dword [rax + 0x58] 	      3612	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	CALL_45
0x4008069	            0x89c0	                            mov eax, eax	      3612	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	CALL_45
0x400806b	    0x488985b8f3ff	            mov qword [rbp - 0xc48], rax	      3612	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	CALL_45
0x4008072	    0x488d9500f4ff	                  lea rdx, [rbp - 0xc00]	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x4008079	    0x488d8d30f4ff	                  lea rcx, [rbp - 0xbd0]	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x4008080	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x4008087	          0x4889ce	                            mov rsi, rcx	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x400808a	          0x4889c7	                            mov rdi, rax	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x400808d	      0xe800000000	                          call 0x4008092	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x4008092	            0x85c0	                           test eax, eax	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x4008094	            0x7429	                            je 0x40080bf	      3614	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_46
0x4008096	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x400809d	    0x488b8db8f3ff	            mov rcx, qword [rbp - 0xc48]	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x40080a4	    0x488d8500f4ff	                  lea rax, [rbp - 0xc00]	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x40080ab	          0x4889ce	                            mov rsi, rcx	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x40080ae	          0x4889c7	                            mov rdi, rax	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x40080b1	      0xe800000000	                          call 0x40080b6	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x40080b6	    0x483b85b8f3ff	            cmp rax, qword [rbp - 0xc48]	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x40080bd	            0x740a	                            je 0x40080c9	      3615	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27	CALL_47
0x40080bf	      0xb800000000	                              mov eax, 0	      3616	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27
0x40080c4	      0xe9c1080000	                           jmp 0x400898a	      3616	coffcode.h	FUNCTION_29	FOR_3	ELSE_10	IF_27
0x40080c9	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3623	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080d0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3623	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080d3	      0x2500000200	                        and eax, 0x20000	      3623	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080d8	            0x85c0	                           test eax, eax	      3623	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080da	     0xf84b8020000	                            je 0x4008398	      3623	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080e0	    0x48c78588f3ff	              mov qword [rbp - 0xc78], 0	      3627	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080eb	    0x48c78590f3ff	              mov qword [rbp - 0xc70], 0	      3630	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080f6	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3631	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x40080fd	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3631	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x4008103	    0x898534f3ffff	            mov dword [rbp - 0xccc], eax	      3631	coffcode.h	FUNCTION_29	FOR_3	IF_28
0x4008109	    0xc7852cf3ffff	              mov dword [rbp - 0xcd4], 0	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x4008113	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x400811a	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x4008121	    0x48898580f3ff	            mov qword [rbp - 0xc80], rax	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x4008128	      0xe93c010000	                           jmp 0x4008269	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x400812d	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3634	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_29
0x4008134	          0x488b00	                    mov rax, qword [rax]	      3634	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_29
0x4008137	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3634	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_29
0x400813b	    0x483b8538f3ff	            cmp rax, qword [rbp - 0xcc8]	      3634	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_29
0x4008142	     0xf850e010000	                           jne 0x4008256	      3634	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_29
0x4008148	    0x4883bd90f3ff	              cmp qword [rbp - 0xc70], 0	      3639	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_30
0x4008150	            0x750e	                           jne 0x4008160	      3639	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_30
0x4008152	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3640	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_30
0x4008159	    0x48898590f3ff	            mov qword [rbp - 0xc70], rax	      3640	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_30
0x4008160	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4008167	          0x488b10	                    mov rdx, qword [rax]	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x400816a	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4008171	          0x488b00	                    mov rax, qword [rax]	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4008174	        0x488b4008	                mov rax, qword [rax + 8]	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4008178	          0x4889d6	                            mov rsi, rdx	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x400817b	          0x4889c7	                            mov rdi, rax	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x400817e	      0xe800000000	                          call 0x4008183	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4008183	            0x85c0	                           test eax, eax	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4008185	     0xf85cf000000	                           jne 0x400825a	      3643	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x400818b	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4008192	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4008195	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4008198	        0x488b4008	                mov rax, qword [rax + 8]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x400819c	          0x8b4008	                mov eax, dword [rax + 8]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x400819f	          0x83f802	                              cmp eax, 2	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081a2	            0x7419	                            je 0x40081bd	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081a4	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081ab	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081ae	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081b1	        0x488b4008	                mov rax, qword [rax + 8]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081b5	          0x8b4008	                mov eax, dword [rax + 8]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081b8	          0x83f804	                              cmp eax, 4	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081bb	            0x7525	                           jne 0x40081e2	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081bd	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081c4	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081c7	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081ca	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081d1	          0x4885c0	                           test rax, rax	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081d4	            0x740c	                            je 0x40081e2	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081d6	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081dd	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081e0	            0xeb05	                           jmp 0x40081e7	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081e2	      0xb800000000	                              mov eax, 0	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081e7	    0x48898588f3ff	            mov qword [rbp - 0xc78], rax	      3645	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x40081ee	    0x4883bd88f3ff	              cmp qword [rbp - 0xc78], 0	      3646	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x40081f6	            0x7461	                            je 0x4008259	      3646	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x40081f8	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3647	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x40081ff	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3647	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008203	          0x4885c0	                           test rax, rax	      3647	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008206	            0x7451	                            je 0x4008259	      3647	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008208	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3648	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400820f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3648	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008213	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3648	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008216	            0x85c0	                           test eax, eax	      3648	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008218	            0x743f	                            je 0x4008259	      3648	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400821a	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3649	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008221	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3649	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008225	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      3649	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008229	            0x84c0	                             test al, al	      3649	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400822b	            0x742c	                            je 0x4008259	      3649	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400822d	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3650	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008234	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3650	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008238	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      3650	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400823c	            0x3c03	                               cmp al, 3	      3650	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400823e	            0x7519	                           jne 0x4008259	      3650	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008240	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3651	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008247	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3651	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400824b	         0xfb74026	           movzx eax, word [rax + 0x26] 	      3651	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400824f	          0x6685c0	                             test ax, ax	      3651	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008252	            0x7429	                            je 0x400827d	      3651	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008254	            0xeb03	                           jmp 0x4008259	      3652	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4008256	              0x90	                                     nop	      3635	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_29
0x4008257	            0xeb01	                           jmp 0x400825a	      3635	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_29
0x4008259	              0x90	                                     nop	      3652	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x400825a	    0x83852cf3ffff	              add dword [rbp - 0xcd4], 1	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x4008261	    0x48838580f3ff	              add qword [rbp - 0xc80], 8	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x4008269	    0x8b852cf3ffff	            mov eax, dword [rbp - 0xcd4]	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x400826f	    0x3b8534f3ffff	            cmp eax, dword [rbp - 0xccc]	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x4008275	     0xf82b2feffff	                            jb 0x400812d	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x400827b	            0xeb01	                           jmp 0x400827e	      3632	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4
0x400827d	              0x90	                                     nop	      3656	coffcode.h	FUNCTION_29	FOR_3	IF_28	FOR_4	IF_31
0x400827e	    0x8b852cf3ffff	            mov eax, dword [rbp - 0xcd4]	      3663	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33
0x4008284	    0x3b8534f3ffff	            cmp eax, dword [rbp - 0xccc]	      3663	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33
0x400828a	     0xf8308010000	                           jae 0x4008398	      3663	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33
0x4008290	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3670	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33
0x4008297	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3670	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33
0x400829b	        0x4883c038	                           add rax, 0x38	      3670	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33
0x400829f	    0x488985c0f3ff	            mov qword [rbp - 0xc40], rax	      3670	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33
0x40082a6	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3671	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	CALL_50
0x40082ad	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3671	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	CALL_50
0x40082b0	            0x85c0	                           test eax, eax	      3671	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	CALL_50
0x40082b2	            0x740f	                            je 0x40082c3	      3671	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	CALL_50
0x40082b4	      0xbe570e0000	                          mov esi, 0xe57	      3671	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	CALL_50
0x40082b9	      0xbf00000000	                              mov edi, 0	      3671	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	CALL_50
0x40082be	      0xe800000000	                          call 0x40082c3	      3671	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	CALL_50
0x40082c3	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082ca	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082cd	      0x2500000c00	                        and eax, 0xc0000	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082d2	      0x3d00000400	                        cmp eax, 0x40000	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082d7	            0x742a	                            je 0x4008303	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082d9	      0x3d00000400	                        cmp eax, 0x40000	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082de	            0x7706	                            ja 0x40082e6	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082e0	            0x85c0	                           test eax, eax	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082e2	            0x7412	                            je 0x40082f6	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082e4	            0xeb43	                           jmp 0x4008329	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082e6	      0x3d00000800	                        cmp eax, 0x80000	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082eb	            0x7423	                            je 0x4008310	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082ed	      0x3d00000c00	                        cmp eax, 0xc0000	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082f2	            0x7429	                            je 0x400831d	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082f4	            0xeb33	                           jmp 0x4008329	      3672	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082f6	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3675	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x40082fd	        0xc6402202	                mov byte [rax + 0x22], 2	      3675	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x4008301	            0xeb26	                           jmp 0x4008329	      3676	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x4008303	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3679	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x400830a	        0xc6402201	                mov byte [rax + 0x22], 1	      3679	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x400830e	            0xeb19	                           jmp 0x4008329	      3681	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x4008310	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3684	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x4008317	        0xc6402203	                mov byte [rax + 0x22], 3	      3684	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x400831b	            0xeb0c	                           jmp 0x4008329	      3686	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x400831d	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3689	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x4008324	        0xc6402204	                mov byte [rax + 0x22], 4	      3689	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x4008328	              0x90	                                     nop	      3691	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	SWITCH_1
0x4008329	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3701	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x4008330	    0x483b8590f3ff	            cmp rax, qword [rbp - 0xc70]	      3701	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x4008337	            0x745f	                            je 0x4008398	      3701	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x4008339	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3706	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x4008340	          0x488b00	                    mov rax, qword [rax]	      3706	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x4008343	    0x488985c8f3ff	            mov qword [rbp - 0xc38], rax	      3706	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x400834a	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3707	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4008351	    0x48898598f3ff	            mov qword [rbp - 0xc68], rax	      3707	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4008358	            0xeb1d	                           jmp 0x4008377	      3707	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x400835a	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      3708	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4008361	        0x488b50f8	                mov rdx, qword [rax - 8]	      3708	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4008365	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      3708	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x400836c	          0x488910	                    mov qword [rax], rdx	      3708	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x400836f	    0x4883ad98f3ff	              sub qword [rbp - 0xc68], 8	      3707	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4008377	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      3707	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x400837e	    0x483b8590f3ff	            cmp rax, qword [rbp - 0xc70]	      3707	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4008385	            0x77d3	                            ja 0x400835a	      3707	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4008387	    0x488b8590f3ff	            mov rax, qword [rbp - 0xc70]	      3709	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x400838e	    0x488b95c8f3ff	            mov rdx, qword [rbp - 0xc38]	      3709	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x4008395	          0x488910	                    mov qword [rax], rdx	      3709	coffcode.h	FUNCTION_29	FOR_3	IF_28	IF_33	IF_34
0x4008398	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3445	coffcode.h	FUNCTION_29	FOR_3
0x400839f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3445	coffcode.h	FUNCTION_29	FOR_3
0x40083a3	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3445	coffcode.h	FUNCTION_29	FOR_3
0x40083aa	    0x4883bd38f3ff	              cmp qword [rbp - 0xcc8], 0	      3443	coffcode.h	FUNCTION_29	FOR_3
0x40083b2	     0xf85baf7ffff	                           jne 0x4007b72	      3443	coffcode.h	FUNCTION_29	FOR_3
0x40083b8	    0x48c745880000	               mov qword [rbp - 0x78], 0	      3756	coffcode.h	FUNCTION_29
0x40083c0	    0x66c745a20000	                mov word [rbp - 0x5e], 0	      3757	coffcode.h	FUNCTION_29
0x40083c6	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3759	coffcode.h	FUNCTION_29	IF_37
0x40083cd	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3759	coffcode.h	FUNCTION_29	IF_37
0x40083d0	          0xc1e805	                              shr eax, 5	      3759	coffcode.h	FUNCTION_29	IF_37
0x40083d3	      0x25ffff0f00	                        and eax, 0xfffff	      3759	coffcode.h	FUNCTION_29	IF_37
0x40083d8	          0x83e002	                              and eax, 2	      3759	coffcode.h	FUNCTION_29	IF_37
0x40083db	            0x85c0	                           test eax, eax	      3759	coffcode.h	FUNCTION_29	IF_37
0x40083dd	            0x741b	                            je 0x40083fa	      3759	coffcode.h	FUNCTION_29	IF_37
0x40083df	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3760	coffcode.h	FUNCTION_29	CALL_55
0x40083e6	        0x488b4008	                mov rax, qword [rax + 8]	      3760	coffcode.h	FUNCTION_29	CALL_55
0x40083ea	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3760	coffcode.h	FUNCTION_29	CALL_55
0x40083f1	          0x8b4054	            mov eax, dword [rax + 0x54] 	      3760	coffcode.h	FUNCTION_29	CALL_55
0x40083f4	        0x668945a0	               mov word [rbp - 0x60], ax	      3760	coffcode.h	FUNCTION_29	CALL_55
0x40083f8	            0xeb06	                           jmp 0x4008400	      3760	coffcode.h	FUNCTION_29	CALL_55
0x40083fa	    0x66c745a00000	                mov word [rbp - 0x60], 0	      3763	coffcode.h	FUNCTION_29	ELSE_11
0x4008400	    0x83bd18f3ffff	              cmp dword [rbp - 0xce8], 0	      3774	coffcode.h	FUNCTION_29	IF_39
0x4008407	            0x750b	                           jne 0x4008414	      3774	coffcode.h	FUNCTION_29	IF_39
0x4008409	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3775	coffcode.h	FUNCTION_29	IF_39
0x400840d	          0x83c801	                               or eax, 1	      3775	coffcode.h	FUNCTION_29	IF_39
0x4008410	        0x668945a2	               mov word [rbp - 0x5e], ax	      3775	coffcode.h	FUNCTION_29	IF_39
0x4008414	    0x83bd1cf3ffff	              cmp dword [rbp - 0xce4], 0	      3776	coffcode.h	FUNCTION_29	IF_40
0x400841b	            0x750b	                           jne 0x4008428	      3776	coffcode.h	FUNCTION_29	IF_40
0x400841d	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3777	coffcode.h	FUNCTION_29	IF_40
0x4008421	          0x83c804	                               or eax, 4	      3777	coffcode.h	FUNCTION_29	IF_40
0x4008424	        0x668945a2	               mov word [rbp - 0x5e], ax	      3777	coffcode.h	FUNCTION_29	IF_40
0x4008428	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3778	coffcode.h	FUNCTION_29	IF_41
0x400842f	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3778	coffcode.h	FUNCTION_29	IF_41
0x4008432	          0xc1e805	                              shr eax, 5	      3778	coffcode.h	FUNCTION_29	IF_41
0x4008435	      0x25ffff0f00	                        and eax, 0xfffff	      3778	coffcode.h	FUNCTION_29	IF_41
0x400843a	          0x83e002	                              and eax, 2	      3778	coffcode.h	FUNCTION_29	IF_41
0x400843d	            0x85c0	                           test eax, eax	      3778	coffcode.h	FUNCTION_29	IF_41
0x400843f	            0x740b	                            je 0x400844c	      3778	coffcode.h	FUNCTION_29	IF_41
0x4008441	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3779	coffcode.h	FUNCTION_29	IF_41
0x4008445	          0x83c802	                               or eax, 2	      3779	coffcode.h	FUNCTION_29	IF_41
0x4008448	        0x668945a2	               mov word [rbp - 0x5e], ax	      3779	coffcode.h	FUNCTION_29	IF_41
0x400844c	    0x83bd20f3ffff	              cmp dword [rbp - 0xce0], 0	      3781	coffcode.h	FUNCTION_29	IF_42
0x4008453	            0x750b	                           jne 0x4008460	      3781	coffcode.h	FUNCTION_29	IF_42
0x4008455	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3782	coffcode.h	FUNCTION_29	IF_42
0x4008459	          0x80cc02	                                or ah, 2	      3782	coffcode.h	FUNCTION_29	IF_42
0x400845c	        0x668945a2	               mov word [rbp - 0x5e], ax	      3782	coffcode.h	FUNCTION_29	IF_42
0x4008460	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3783	coffcode.h	FUNCTION_29	IF_43	CALL_58
0x4008467	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3783	coffcode.h	FUNCTION_29	IF_43	CALL_58
0x400846e	    0x8b8098020000	           mov eax, dword [rax + 0x298] 	      3783	coffcode.h	FUNCTION_29	IF_43	CALL_58
0x4008474	          0x83e020	                           and eax, 0x20	      3783	coffcode.h	FUNCTION_29	IF_43	CALL_58
0x4008477	            0x85c0	                           test eax, eax	      3783	coffcode.h	FUNCTION_29	IF_43	CALL_58
0x4008479	            0x740b	                            je 0x4008486	      3783	coffcode.h	FUNCTION_29	IF_43	CALL_58
0x400847b	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3784	coffcode.h	FUNCTION_29	IF_43
0x400847f	          0x83c820	                            or eax, 0x20	      3784	coffcode.h	FUNCTION_29	IF_43
0x4008482	        0x668945a2	               mov word [rbp - 0x5e], ax	      3784	coffcode.h	FUNCTION_29	IF_43
0x4008486	    0x488d8530f4ff	                  lea rax, [rbp - 0xbd0]	      3817	coffcode.h	FUNCTION_29	CALL_60
0x400848d	      0xba80020000	                          mov edx, 0x280	      3817	coffcode.h	FUNCTION_29	CALL_60
0x4008492	      0xbe00000000	                              mov esi, 0	      3817	coffcode.h	FUNCTION_29	CALL_60
0x4008497	          0x4889c7	                            mov rdi, rax	      3817	coffcode.h	FUNCTION_29	CALL_60
0x400849a	      0xe800000000	                          call 0x400849f	      3817	coffcode.h	FUNCTION_29	CALL_60
0x400849f	    0xc78514f3ffff	              mov dword [rbp - 0xcec], 0	      3821	coffcode.h	FUNCTION_29
0x40084a9	    0x66c78512f3ff	               mov word [rbp - 0xcee], 0	      3822	coffcode.h	FUNCTION_29
0x40084b2	    0x488d9512f3ff	                  lea rdx, [rbp - 0xcee]	      3824	coffcode.h	FUNCTION_29	CALL_61
0x40084b9	    0x488d8d14f3ff	                  lea rcx, [rbp - 0xcec]	      3824	coffcode.h	FUNCTION_29	CALL_61
0x40084c0	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3824	coffcode.h	FUNCTION_29	CALL_61
0x40084c7	          0x4889ce	                            mov rsi, rcx	      3824	coffcode.h	FUNCTION_29	CALL_61
0x40084ca	          0x4889c7	                            mov rdi, rax	      3824	coffcode.h	FUNCTION_29	CALL_61
0x40084cd	      0xe8ece4ffff	                 call sym.coff_set_flags	      3824	coffcode.h	FUNCTION_29	CALL_61
0x40084d2	    0x8b8514f3ffff	            mov eax, dword [rbp - 0xcec]	      3825	coffcode.h	FUNCTION_29
0x40084d8	        0x66894580	               mov word [rbp - 0x80], ax	      3825	coffcode.h	FUNCTION_29
0x40084dc	         0xfb755a2	            movzx edx, word [rbp - 0x5e]	      3826	coffcode.h	FUNCTION_29
0x40084e0	     0xfb78512f3ff	           movzx eax, word [rbp - 0xcee]	      3826	coffcode.h	FUNCTION_29
0x40084e7	             0x9d0	                             or eax, edx	      3826	coffcode.h	FUNCTION_29
0x40084e9	        0x668945a2	               mov word [rbp - 0x5e], ax	      3826	coffcode.h	FUNCTION_29
0x40084ed	    0x66c78530f4ff	          mov word [rbp - 0xbd0], 0x20b 	      3858	coffcode.h	FUNCTION_29
0x40084f6	    0x66c78532f4ff	               mov word [rbp - 0xbce], 0	      3901	coffcode.h	FUNCTION_29
0x40084ff	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3904	coffcode.h	FUNCTION_29	CALL_62
0x4008506	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3904	coffcode.h	FUNCTION_29	CALL_62
0x400850d	    0x488b95b0f3ff	            mov rdx, qword [rbp - 0xc50]	      3904	coffcode.h	FUNCTION_29	CALL_62
0x4008514	        0x48895018	             mov qword [rax + 0x18], rdx	      3904	coffcode.h	FUNCTION_29	CALL_62
0x4008518	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3906	coffcode.h	FUNCTION_29	IF_47
0x400851f	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3906	coffcode.h	FUNCTION_29	IF_47
0x4008525	            0x85c0	                           test eax, eax	      3906	coffcode.h	FUNCTION_29	IF_47
0x4008527	     0xf8495000000	                            je 0x40085c2	      3906	coffcode.h	FUNCTION_29	IF_47
0x400852d	    0x488d9514f3ff	                  lea rdx, [rbp - 0xcec]	      3910	coffcode.h	FUNCTION_29	IF_47	IF_48	CALL_63
0x4008534	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3910	coffcode.h	FUNCTION_29	IF_47	IF_48	CALL_63
0x400853b	          0x4889d6	                            mov rsi, rdx	      3910	coffcode.h	FUNCTION_29	IF_47	IF_48	CALL_63
0x400853e	          0x4889c7	                            mov rdi, rax	      3910	coffcode.h	FUNCTION_29	IF_47	IF_48	CALL_63
0x4008541	      0xe800000000	                          call 0x4008546	      3910	coffcode.h	FUNCTION_29	IF_47	IF_48	CALL_63
0x4008546	            0x85c0	                           test eax, eax	      3910	coffcode.h	FUNCTION_29	IF_47	IF_48	CALL_63
0x4008548	            0x750a	                           jne 0x4008554	      3910	coffcode.h	FUNCTION_29	IF_47	IF_48	CALL_63
0x400854a	      0xb800000000	                              mov eax, 0	      3911	coffcode.h	FUNCTION_29	IF_47	IF_48
0x400854f	      0xe936040000	                           jmp 0x400898a	      3911	coffcode.h	FUNCTION_29	IF_47	IF_48
0x4008554	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3912	coffcode.h	FUNCTION_29	IF_47	CALL_64
0x400855b	          0x4889c7	                            mov rdi, rax	      3912	coffcode.h	FUNCTION_29	IF_47	CALL_64
0x400855e	      0xe800000000	                          call 0x4008563	      3912	coffcode.h	FUNCTION_29	IF_47	CALL_64
0x4008563	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3913	coffcode.h	FUNCTION_29	IF_47	IF_49	CALL_65
0x400856a	          0x4889c7	                            mov rdi, rax	      3913	coffcode.h	FUNCTION_29	IF_47	IF_49	CALL_65
0x400856d	      0xe800000000	                          call 0x4008572	      3913	coffcode.h	FUNCTION_29	IF_47	IF_49	CALL_65
0x4008572	            0x85c0	                           test eax, eax	      3913	coffcode.h	FUNCTION_29	IF_47	IF_49	CALL_65
0x4008574	            0x750a	                           jne 0x4008580	      3913	coffcode.h	FUNCTION_29	IF_47	IF_49	CALL_65
0x4008576	      0xb800000000	                              mov eax, 0	      3914	coffcode.h	FUNCTION_29	IF_47	IF_49
0x400857b	      0xe90a040000	                           jmp 0x400898a	      3914	coffcode.h	FUNCTION_29	IF_47	IF_49
0x4008580	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3915	coffcode.h	FUNCTION_29	IF_47	IF_50	CALL_66
0x4008587	          0x4889c7	                            mov rdi, rax	      3915	coffcode.h	FUNCTION_29	IF_47	IF_50	CALL_66
0x400858a	      0xe800000000	                          call 0x400858f	      3915	coffcode.h	FUNCTION_29	IF_47	IF_50	CALL_66
0x400858f	            0x85c0	                           test eax, eax	      3915	coffcode.h	FUNCTION_29	IF_47	IF_50	CALL_66
0x4008591	            0x750a	                           jne 0x400859d	      3915	coffcode.h	FUNCTION_29	IF_47	IF_50	CALL_66
0x4008593	      0xb800000000	                              mov eax, 0	      3916	coffcode.h	FUNCTION_29	IF_47	IF_50
0x4008598	      0xe9ed030000	                           jmp 0x400898a	      3916	coffcode.h	FUNCTION_29	IF_47	IF_50
0x400859d	    0x8b9514f3ffff	            mov edx, dword [rbp - 0xcec]	      3917	coffcode.h	FUNCTION_29	IF_47	IF_51	CALL_67
0x40085a3	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3917	coffcode.h	FUNCTION_29	IF_47	IF_51	CALL_67
0x40085aa	            0x89d6	                            mov esi, edx	      3917	coffcode.h	FUNCTION_29	IF_47	IF_51	CALL_67
0x40085ac	          0x4889c7	                            mov rdi, rax	      3917	coffcode.h	FUNCTION_29	IF_47	IF_51	CALL_67
0x40085af	      0xe8efdfffff	              call sym.coff_write_relocs	      3917	coffcode.h	FUNCTION_29	IF_47	IF_51	CALL_67
0x40085b4	            0x85c0	                           test eax, eax	      3917	coffcode.h	FUNCTION_29	IF_47	IF_51	CALL_67
0x40085b6	            0x7545	                           jne 0x40085fd	      3917	coffcode.h	FUNCTION_29	IF_47	IF_51	CALL_67
0x40085b8	      0xb800000000	                              mov eax, 0	      3918	coffcode.h	FUNCTION_29	IF_47	IF_51
0x40085bd	      0xe9c8030000	                           jmp 0x400898a	      3918	coffcode.h	FUNCTION_29	IF_47	IF_51
0x40085c2	    0x83bd24f3ffff	              cmp dword [rbp - 0xcdc], 0	      3921	coffcode.h	FUNCTION_29	ELSE_14	IF_52	CALL_68
0x40085c9	            0x7432	                            je 0x40085fd	      3921	coffcode.h	FUNCTION_29	ELSE_14	IF_52	CALL_68
0x40085cb	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3921	coffcode.h	FUNCTION_29	ELSE_14	IF_52	CALL_68
0x40085d2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3921	coffcode.h	FUNCTION_29	ELSE_14	IF_52	CALL_68
0x40085d9	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3921	coffcode.h	FUNCTION_29	ELSE_14	IF_52	CALL_68
0x40085dc	            0x85c0	                           test eax, eax	      3921	coffcode.h	FUNCTION_29	ELSE_14	IF_52	CALL_68
0x40085de	            0x751d	                           jne 0x40085fd	      3921	coffcode.h	FUNCTION_29	ELSE_14	IF_52	CALL_68
0x40085e0	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3925	coffcode.h	FUNCTION_29	ELSE_14	IF_52	IF_53	CALL_69
0x40085e7	          0x4889c7	                            mov rdi, rax	      3925	coffcode.h	FUNCTION_29	ELSE_14	IF_52	IF_53	CALL_69
0x40085ea	      0xe800000000	                          call 0x40085ef	      3925	coffcode.h	FUNCTION_29	ELSE_14	IF_52	IF_53	CALL_69
0x40085ef	            0x85c0	                           test eax, eax	      3925	coffcode.h	FUNCTION_29	ELSE_14	IF_52	IF_53	CALL_69
0x40085f1	            0x750a	                           jne 0x40085fd	      3925	coffcode.h	FUNCTION_29	ELSE_14	IF_52	IF_53	CALL_69
0x40085f3	      0xb800000000	                              mov eax, 0	      3926	coffcode.h	FUNCTION_29	ELSE_14	IF_52	IF_53
0x40085f8	      0xe98d030000	                           jmp 0x400898a	      3926	coffcode.h	FUNCTION_29	ELSE_14	IF_52	IF_53
0x40085fd	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3950	coffcode.h	FUNCTION_29	IF_56	CALL_72
0x4008604	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3950	coffcode.h	FUNCTION_29	IF_56	CALL_72
0x400860b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3950	coffcode.h	FUNCTION_29	IF_56	CALL_72
0x400860f	          0x4885c0	                           test rax, rax	      3950	coffcode.h	FUNCTION_29	IF_56	CALL_72
0x4008612	            0x740d	                            je 0x4008621	      3950	coffcode.h	FUNCTION_29	IF_56	CALL_72
0x4008614	    0x488b85b0f3ff	            mov rax, qword [rbp - 0xc50]	      3952	coffcode.h	FUNCTION_29	IF_56
0x400861b	        0x48894590	             mov qword [rbp - 0x70], rax	      3952	coffcode.h	FUNCTION_29	IF_56
0x400861f	            0xeb29	                           jmp 0x400864a	      3952	coffcode.h	FUNCTION_29	IF_56
0x4008621	    0x83bd24f3ffff	              cmp dword [rbp - 0xcdc], 0	      3961	coffcode.h	FUNCTION_29	ELSE_16	IF_57
0x4008628	            0x740d	                            je 0x4008637	      3961	coffcode.h	FUNCTION_29	ELSE_16	IF_57
0x400862a	    0x488b85b0f3ff	            mov rax, qword [rbp - 0xc50]	      3962	coffcode.h	FUNCTION_29	ELSE_16	IF_57
0x4008631	        0x48894590	             mov qword [rbp - 0x70], rax	      3962	coffcode.h	FUNCTION_29	ELSE_16	IF_57
0x4008635	            0xeb08	                           jmp 0x400863f	      3962	coffcode.h	FUNCTION_29	ELSE_16	IF_57
0x4008637	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3964	coffcode.h	FUNCTION_29	ELSE_16	ELSE_17
0x400863f	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3965	coffcode.h	FUNCTION_29	ELSE_16	ELSE_17
0x4008643	          0x83c808	                               or eax, 8	      3965	coffcode.h	FUNCTION_29	ELSE_16	ELSE_17
0x4008646	        0x668945a2	               mov word [rbp - 0x5e], ax	      3965	coffcode.h	FUNCTION_29	ELSE_16	ELSE_17
0x400864a	    0x4883bd60f3ff	              cmp qword [rbp - 0xca0], 0	      3968	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x4008652	            0x7437	                            je 0x400868b	      3968	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x4008654	    0x488b8560f3ff	            mov rax, qword [rbp - 0xca0]	      3970	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x400865b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3970	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x400865f	    0x48898538f4ff	            mov qword [rbp - 0xbc8], rax	      3970	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x4008666	    0x488b8538f4ff	            mov rax, qword [rbp - 0xbc8]	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x400866d	          0x4885c0	                           test rax, rax	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x4008670	            0x740d	                            je 0x400867f	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x4008672	    0x488b8560f3ff	            mov rax, qword [rbp - 0xca0]	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x4008679	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x400867d	            0xeb05	                           jmp 0x4008684	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x400867f	      0xb800000000	                              mov eax, 0	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x4008684	    0x48898558f4ff	            mov qword [rbp - 0xba8], rax	      3971	coffcode.h	FUNCTION_29	ELSE_17	IF_58
0x400868b	    0x4883bd68f3ff	              cmp qword [rbp - 0xc98], 0	      3973	coffcode.h	FUNCTION_29	IF_59
0x4008693	            0x7437	                            je 0x40086cc	      3973	coffcode.h	FUNCTION_29	IF_59
0x4008695	    0x488b8568f3ff	            mov rax, qword [rbp - 0xc98]	      3975	coffcode.h	FUNCTION_29	IF_59
0x400869c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3975	coffcode.h	FUNCTION_29	IF_59
0x40086a0	    0x48898540f4ff	            mov qword [rbp - 0xbc0], rax	      3975	coffcode.h	FUNCTION_29	IF_59
0x40086a7	    0x488b8540f4ff	            mov rax, qword [rbp - 0xbc0]	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086ae	          0x4885c0	                           test rax, rax	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086b1	            0x740d	                            je 0x40086c0	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086b3	    0x488b8568f3ff	            mov rax, qword [rbp - 0xc98]	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086ba	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086be	            0xeb05	                           jmp 0x40086c5	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086c0	      0xb800000000	                              mov eax, 0	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086c5	    0x48898560f4ff	            mov qword [rbp - 0xba0], rax	      3976	coffcode.h	FUNCTION_29	IF_59
0x40086cc	    0x4883bd70f3ff	              cmp qword [rbp - 0xc90], 0	      3978	coffcode.h	FUNCTION_29	IF_60
0x40086d4	            0x7447	                            je 0x400871d	      3978	coffcode.h	FUNCTION_29	IF_60
0x40086d6	    0x488b8570f3ff	            mov rax, qword [rbp - 0xc90]	      3980	coffcode.h	FUNCTION_29	IF_60
0x40086dd	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3980	coffcode.h	FUNCTION_29	IF_60
0x40086e1	    0x48898548f4ff	            mov qword [rbp - 0xbb8], rax	      3980	coffcode.h	FUNCTION_29	IF_60
0x40086e8	    0x488b8548f4ff	            mov rax, qword [rbp - 0xbb8]	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x40086ef	          0x4885c0	                           test rax, rax	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x40086f2	            0x7429	                            je 0x400871d	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x40086f4	    0x488b8570f3ff	            mov rax, qword [rbp - 0xc90]	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x40086fb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x40086ff	    0x488b8560f4ff	            mov rax, qword [rbp - 0xba0]	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x4008706	          0x4839c2	                            cmp rdx, rax	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x4008709	            0x7312	                           jae 0x400871d	      3981	coffcode.h	FUNCTION_29	IF_60	IF_61
0x400870b	    0x488b8570f3ff	            mov rax, qword [rbp - 0xc90]	      3982	coffcode.h	FUNCTION_29	IF_60	IF_61
0x4008712	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3982	coffcode.h	FUNCTION_29	IF_60	IF_61
0x4008716	    0x48898560f4ff	            mov qword [rbp - 0xba0], rax	      3982	coffcode.h	FUNCTION_29	IF_60	IF_61
0x400871d	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3985	coffcode.h	FUNCTION_29
0x4008724	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3985	coffcode.h	FUNCTION_29
0x400872b	    0x48898550f4ff	            mov qword [rbp - 0xbb0], rax	      3985	coffcode.h	FUNCTION_29
0x4008732	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3986	coffcode.h	FUNCTION_29	CALL_73
0x4008739	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3986	coffcode.h	FUNCTION_29	CALL_73
0x4008740	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3986	coffcode.h	FUNCTION_29	CALL_73
0x4008744	        0x48894598	             mov qword [rbp - 0x68], rax	      3986	coffcode.h	FUNCTION_29	CALL_73
0x4008748	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4063	coffcode.h	FUNCTION_29	CALL_87
0x400874f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4063	coffcode.h	FUNCTION_29	CALL_87
0x4008756	    0x488985d8f3ff	            mov qword [rbp - 0xc28], rax	      4063	coffcode.h	FUNCTION_29	CALL_87
0x400875d	    0x488b85d8f3ff	            mov rax, qword [rbp - 0xc28]	      4065	coffcode.h	FUNCTION_29	IF_70
0x4008764	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	      4065	coffcode.h	FUNCTION_29	IF_70
0x400876b	          0x4885c0	                           test rax, rax	      4065	coffcode.h	FUNCTION_29	IF_70
0x400876e	            0x741a	                            je 0x400878a	      4065	coffcode.h	FUNCTION_29	IF_70
0x4008770	    0x488b85d8f3ff	            mov rax, qword [rbp - 0xc28]	      4066	coffcode.h	FUNCTION_29	IF_70
0x4008777	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	      4066	coffcode.h	FUNCTION_29	IF_70
0x400877e	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      4066	coffcode.h	FUNCTION_29	IF_70
0x4008785	          0x4889d7	                            mov rdi, rdx	      4066	coffcode.h	FUNCTION_29	IF_70
0x4008788	            0xffd0	                                call rax	      4066	coffcode.h	FUNCTION_29	IF_70
0x400878a	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4071	coffcode.h	FUNCTION_29	IF_71	CALL_88
0x4008791	      0xba00000000	                              mov edx, 0	      4071	coffcode.h	FUNCTION_29	IF_71	CALL_88
0x4008796	      0xbe00000000	                              mov esi, 0	      4071	coffcode.h	FUNCTION_29	IF_71	CALL_88
0x400879b	          0x4889c7	                            mov rdi, rax	      4071	coffcode.h	FUNCTION_29	IF_71	CALL_88
0x400879e	      0xe800000000	                          call 0x40087a3	      4071	coffcode.h	FUNCTION_29	IF_71	CALL_88
0x40087a3	            0x85c0	                           test eax, eax	      4071	coffcode.h	FUNCTION_29	IF_71	CALL_88
0x40087a5	            0x740a	                            je 0x40087b1	      4071	coffcode.h	FUNCTION_29	IF_71	CALL_88
0x40087a7	      0xb800000000	                              mov eax, 0	      4072	coffcode.h	FUNCTION_29	IF_71
0x40087ac	      0xe9d9010000	                           jmp 0x400898a	      4072	coffcode.h	FUNCTION_29	IF_71
0x40087b1	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4076	coffcode.h	FUNCTION_29	CALL_89
0x40087b8	        0x488b4008	                mov rax, qword [rax + 8]	      4076	coffcode.h	FUNCTION_29	CALL_89
0x40087bc	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4076	coffcode.h	FUNCTION_29	CALL_89
0x40087c3	          0x8b4050	            mov eax, dword [rax + 0x50] 	      4076	coffcode.h	FUNCTION_29	CALL_89
0x40087c6	            0x89c0	                            mov eax, eax	      4076	coffcode.h	FUNCTION_29	CALL_89
0x40087c8	    0x488985e0f3ff	            mov qword [rbp - 0xc20], rax	      4076	coffcode.h	FUNCTION_29	CALL_89
0x40087cf	    0x488b85e0f3ff	            mov rax, qword [rbp - 0xc20]	      4078	coffcode.h	FUNCTION_29	CALL_90
0x40087d6	          0x4889c7	                            mov rdi, rax	      4078	coffcode.h	FUNCTION_29	CALL_90
0x40087d9	      0xe800000000	                          call 0x40087de	      4078	coffcode.h	FUNCTION_29	CALL_90
0x40087de	    0x488985e8f3ff	            mov qword [rbp - 0xc18], rax	      4078	coffcode.h	FUNCTION_29	CALL_90
0x40087e5	    0x4883bde8f3ff	              cmp qword [rbp - 0xc18], 0	      4079	coffcode.h	FUNCTION_29	IF_72
0x40087ed	            0x750a	                           jne 0x40087f9	      4079	coffcode.h	FUNCTION_29	IF_72
0x40087ef	      0xb800000000	                              mov eax, 0	      4080	coffcode.h	FUNCTION_29	IF_72
0x40087f4	      0xe991010000	                           jmp 0x400898a	      4080	coffcode.h	FUNCTION_29	IF_72
0x40087f9	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4082	coffcode.h	FUNCTION_29	CALL_91
0x4008800	        0x488b4008	                mov rax, qword [rax + 8]	      4082	coffcode.h	FUNCTION_29	CALL_91
0x4008804	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4082	coffcode.h	FUNCTION_29	CALL_91
0x400880b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4082	coffcode.h	FUNCTION_29	CALL_91
0x400880f	    0x488b95e8f3ff	            mov rdx, qword [rbp - 0xc18]	      4082	coffcode.h	FUNCTION_29	CALL_91
0x4008816	    0x488db5b0f6ff	                  lea rsi, [rbp - 0x950]	      4082	coffcode.h	FUNCTION_29	CALL_91
0x400881d	    0x488b8d08f3ff	            mov rcx, qword [rbp - 0xcf8]	      4082	coffcode.h	FUNCTION_29	CALL_91
0x4008824	          0x4889cf	                            mov rdi, rcx	      4082	coffcode.h	FUNCTION_29	CALL_91
0x4008827	            0xffd0	                                call rax	      4082	coffcode.h	FUNCTION_29	CALL_91
0x4008829	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      4083	coffcode.h	FUNCTION_29	CALL_92
0x4008830	    0x488b8de0f3ff	            mov rcx, qword [rbp - 0xc20]	      4083	coffcode.h	FUNCTION_29	CALL_92
0x4008837	    0x488b85e8f3ff	            mov rax, qword [rbp - 0xc18]	      4083	coffcode.h	FUNCTION_29	CALL_92
0x400883e	          0x4889ce	                            mov rsi, rcx	      4083	coffcode.h	FUNCTION_29	CALL_92
0x4008841	          0x4889c7	                            mov rdi, rax	      4083	coffcode.h	FUNCTION_29	CALL_92
0x4008844	      0xe800000000	                          call 0x4008849	      4083	coffcode.h	FUNCTION_29	CALL_92
0x4008849	    0x488985e0f3ff	            mov qword [rbp - 0xc20], rax	      4083	coffcode.h	FUNCTION_29	CALL_92
0x4008850	    0x488b85e8f3ff	            mov rax, qword [rbp - 0xc18]	      4085	coffcode.h	FUNCTION_29	CALL_93
0x4008857	          0x4889c7	                            mov rdi, rax	      4085	coffcode.h	FUNCTION_29	CALL_93
0x400885a	      0xe800000000	                          call 0x400885f	      4085	coffcode.h	FUNCTION_29	CALL_93
0x400885f	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4087	coffcode.h	FUNCTION_29	IF_73	CALL_94
0x4008866	        0x488b4008	                mov rax, qword [rax + 8]	      4087	coffcode.h	FUNCTION_29	IF_73	CALL_94
0x400886a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4087	coffcode.h	FUNCTION_29	IF_73	CALL_94
0x4008871	          0x8b4050	            mov eax, dword [rax + 0x50] 	      4087	coffcode.h	FUNCTION_29	IF_73	CALL_94
0x4008874	            0x89c0	                            mov eax, eax	      4087	coffcode.h	FUNCTION_29	IF_73	CALL_94
0x4008876	    0x483b85e0f3ff	            cmp rax, qword [rbp - 0xc20]	      4087	coffcode.h	FUNCTION_29	IF_73	CALL_94
0x400887d	            0x740a	                            je 0x4008889	      4087	coffcode.h	FUNCTION_29	IF_73	CALL_94
0x400887f	      0xb800000000	                              mov eax, 0	      4088	coffcode.h	FUNCTION_29	IF_73
0x4008884	      0xe901010000	                           jmp 0x400898a	      4088	coffcode.h	FUNCTION_29	IF_73
0x4008889	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4091	coffcode.h	FUNCTION_29	IF_74
0x4008890	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4091	coffcode.h	FUNCTION_29	IF_74
0x4008893	          0xc1e805	                              shr eax, 5	      4091	coffcode.h	FUNCTION_29	IF_74
0x4008896	      0x25ffff0f00	                        and eax, 0xfffff	      4091	coffcode.h	FUNCTION_29	IF_74
0x400889b	          0x83e002	                              and eax, 2	      4091	coffcode.h	FUNCTION_29	IF_74
0x400889e	            0x85c0	                           test eax, eax	      4091	coffcode.h	FUNCTION_29	IF_74
0x40088a0	     0xf84df000000	                            je 0x4008985	      4091	coffcode.h	FUNCTION_29	IF_74
0x40088a6	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4096	coffcode.h	FUNCTION_29	IF_74	CALL_95
0x40088ad	        0x488b4008	                mov rax, qword [rax + 8]	      4096	coffcode.h	FUNCTION_29	IF_74	CALL_95
0x40088b1	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4096	coffcode.h	FUNCTION_29	IF_74	CALL_95
0x40088b8	          0x8b4054	            mov eax, dword [rax + 0x54] 	      4096	coffcode.h	FUNCTION_29	IF_74	CALL_95
0x40088bb	            0x89c0	                            mov eax, eax	      4096	coffcode.h	FUNCTION_29	IF_74	CALL_95
0x40088bd	    0x488985f0f3ff	            mov qword [rbp - 0xc10], rax	      4096	coffcode.h	FUNCTION_29	IF_74	CALL_95
0x40088c4	    0x488b85f0f3ff	            mov rax, qword [rbp - 0xc10]	      4098	coffcode.h	FUNCTION_29	IF_74	CALL_96
0x40088cb	          0x4889c7	                            mov rdi, rax	      4098	coffcode.h	FUNCTION_29	IF_74	CALL_96
0x40088ce	      0xe800000000	                          call 0x40088d3	      4098	coffcode.h	FUNCTION_29	IF_74	CALL_96
0x40088d3	    0x488985f8f3ff	            mov qword [rbp - 0xc08], rax	      4098	coffcode.h	FUNCTION_29	IF_74	CALL_96
0x40088da	    0x4883bdf8f3ff	              cmp qword [rbp - 0xc08], 0	      4099	coffcode.h	FUNCTION_29	IF_74	IF_75
0x40088e2	            0x750a	                           jne 0x40088ee	      4099	coffcode.h	FUNCTION_29	IF_74	IF_75
0x40088e4	      0xb800000000	                              mov eax, 0	      4100	coffcode.h	FUNCTION_29	IF_74	IF_75
0x40088e9	      0xe99c000000	                           jmp 0x400898a	      4100	coffcode.h	FUNCTION_29	IF_74	IF_75
0x40088ee	    0x488b95f8f3ff	            mov rdx, qword [rbp - 0xc08]	      4102	coffcode.h	FUNCTION_29	IF_74	CALL_97
0x40088f5	    0x488d8d30f4ff	                  lea rcx, [rbp - 0xbd0]	      4102	coffcode.h	FUNCTION_29	IF_74	CALL_97
0x40088fc	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4102	coffcode.h	FUNCTION_29	IF_74	CALL_97
0x4008903	          0x4889ce	                            mov rsi, rcx	      4102	coffcode.h	FUNCTION_29	IF_74	CALL_97
0x4008906	          0x4889c7	                            mov rdi, rax	      4102	coffcode.h	FUNCTION_29	IF_74	CALL_97
0x4008909	      0xe800000000	                          call 0x400890e	      4102	coffcode.h	FUNCTION_29	IF_74	CALL_97
0x400890e	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      4103	coffcode.h	FUNCTION_29	IF_74	CALL_98
0x4008915	    0x488b8df0f3ff	            mov rcx, qword [rbp - 0xc10]	      4103	coffcode.h	FUNCTION_29	IF_74	CALL_98
0x400891c	    0x488b85f8f3ff	            mov rax, qword [rbp - 0xc08]	      4103	coffcode.h	FUNCTION_29	IF_74	CALL_98
0x4008923	          0x4889ce	                            mov rsi, rcx	      4103	coffcode.h	FUNCTION_29	IF_74	CALL_98
0x4008926	          0x4889c7	                            mov rdi, rax	      4103	coffcode.h	FUNCTION_29	IF_74	CALL_98
0x4008929	      0xe800000000	                          call 0x400892e	      4103	coffcode.h	FUNCTION_29	IF_74	CALL_98
0x400892e	    0x488985f0f3ff	            mov qword [rbp - 0xc10], rax	      4103	coffcode.h	FUNCTION_29	IF_74	CALL_98
0x4008935	    0x488b85f8f3ff	            mov rax, qword [rbp - 0xc08]	      4105	coffcode.h	FUNCTION_29	IF_74	CALL_99
0x400893c	          0x4889c7	                            mov rdi, rax	      4105	coffcode.h	FUNCTION_29	IF_74	CALL_99
0x400893f	      0xe800000000	                          call 0x4008944	      4105	coffcode.h	FUNCTION_29	IF_74	CALL_99
0x4008944	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4107	coffcode.h	FUNCTION_29	IF_74	IF_76	CALL_100
0x400894b	        0x488b4008	                mov rax, qword [rax + 8]	      4107	coffcode.h	FUNCTION_29	IF_74	IF_76	CALL_100
0x400894f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4107	coffcode.h	FUNCTION_29	IF_74	IF_76	CALL_100
0x4008956	          0x8b4054	            mov eax, dword [rax + 0x54] 	      4107	coffcode.h	FUNCTION_29	IF_74	IF_76	CALL_100
0x4008959	            0x89c0	                            mov eax, eax	      4107	coffcode.h	FUNCTION_29	IF_74	IF_76	CALL_100
0x400895b	    0x483b85f0f3ff	            cmp rax, qword [rbp - 0xc10]	      4107	coffcode.h	FUNCTION_29	IF_74	IF_76	CALL_100
0x4008962	            0x7407	                            je 0x400896b	      4107	coffcode.h	FUNCTION_29	IF_74	IF_76	CALL_100
0x4008964	      0xb800000000	                              mov eax, 0	      4108	coffcode.h	FUNCTION_29	IF_74	IF_76
0x4008969	            0xeb1f	                           jmp 0x400898a	      4108	coffcode.h	FUNCTION_29	IF_74	IF_76
0x400896b	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4111	coffcode.h	FUNCTION_29	IF_74	IF_77	CALL_101
0x4008972	          0x4889c7	                            mov rdi, rax	      4111	coffcode.h	FUNCTION_29	IF_74	IF_77	CALL_101
0x4008975	      0xe892ecffff	            call sym.coff_apply_checksum	      4111	coffcode.h	FUNCTION_29	IF_74	IF_77	CALL_101
0x400897a	            0x85c0	                           test eax, eax	      4111	coffcode.h	FUNCTION_29	IF_74	IF_77	CALL_101
0x400897c	            0x7507	                           jne 0x4008985	      4111	coffcode.h	FUNCTION_29	IF_74	IF_77	CALL_101
0x400897e	      0xb800000000	                              mov eax, 0	      4112	coffcode.h	FUNCTION_29	IF_74	IF_77
0x4008983	            0xeb05	                           jmp 0x400898a	      4112	coffcode.h	FUNCTION_29	IF_74	IF_77
0x4008985	      0xb801000000	                              mov eax, 1	      4132	coffcode.h	FUNCTION_29
0x400898a	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      4133	coffcode.h	FUNCTION_29
0x400898e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4133	coffcode.h	FUNCTION_29
0x4008997	            0x7405	                            je 0x400899e	      4133	coffcode.h	FUNCTION_29
0x4008999	      0xe800000000	                          call 0x400899e	      4133	coffcode.h	FUNCTION_29
0x400899e	    0x4881c4e80c00	                          add rsp, 0xce8	      4133	coffcode.h	FUNCTION_29
0x40089a5	              0x5b	                                 pop rbx	      4133	coffcode.h	FUNCTION_29
0x40089a6	            0x415c	                                 pop r12	      4133	coffcode.h	FUNCTION_29
0x40089a8	            0x415d	                                 pop r13	      4133	coffcode.h	FUNCTION_29
0x40089aa	              0x5d	                                 pop rbp	      4133	coffcode.h	FUNCTION_29
0x40089ab	              0xc3	                                     ret	      4133	coffcode.h	FUNCTION_29
styp_to_sec_flags	FOR,0:functions,0:WHILE,1:ELSE,1:SWITCH,1:IF,8:CALL,6:DO,0	238
0x4005a83	              0x55	                                push rbp	      1167	coffcode.h	FUNCTION_7
0x4005a84	          0x4889e5	                            mov rbp, rsp	      1167	coffcode.h	FUNCTION_7
0x4005a87	        0x4883ec60	                           sub rsp, 0x60	      1167	coffcode.h	FUNCTION_7
0x4005a8b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1167	coffcode.h	FUNCTION_7
0x4005a8f	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1167	coffcode.h	FUNCTION_7
0x4005a93	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1167	coffcode.h	FUNCTION_7
0x4005a97	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1167	coffcode.h	FUNCTION_7
0x4005a9b	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1167	coffcode.h	FUNCTION_7
0x4005a9f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1168	coffcode.h	FUNCTION_7
0x4005aa3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1168	coffcode.h	FUNCTION_7
0x4005aa7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1169	coffcode.h	FUNCTION_7
0x4005aab	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1169	coffcode.h	FUNCTION_7
0x4005aaf	        0x488945e0	             mov qword [rbp - 0x20], rax	      1169	coffcode.h	FUNCTION_7
0x4005ab3	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1171	coffcode.h	FUNCTION_7
0x4005aba	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1172	coffcode.h	FUNCTION_7
0x4005ac1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1174	coffcode.h	FUNCTION_7	IF_1
0x4005ac5	      0xba06000000	                              mov edx, 6	      1174	coffcode.h	FUNCTION_7	IF_1
0x4005aca	      0xbe00000000	                              mov esi, 0	      1174	coffcode.h	FUNCTION_7	IF_1
0x4005acf	          0x4889c7	                            mov rdi, rax	      1174	coffcode.h	FUNCTION_7	IF_1
0x4005ad2	      0xe800000000	                          call 0x4005ad7	      1174	coffcode.h	FUNCTION_7	IF_1
0x4005ad7	            0x85c0	                           test eax, eax	      1174	coffcode.h	FUNCTION_7	IF_1
0x4005ad9	            0x7468	                            je 0x4005b43	      1174	coffcode.h	FUNCTION_7	IF_1
0x4005adb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1175	coffcode.h	FUNCTION_7	IF_1
0x4005adf	      0xba07000000	                              mov edx, 7	      1175	coffcode.h	FUNCTION_7	IF_1
0x4005ae4	      0xbe00000000	                              mov esi, 0	      1175	coffcode.h	FUNCTION_7	IF_1
0x4005ae9	          0x4889c7	                            mov rdi, rax	      1175	coffcode.h	FUNCTION_7	IF_1
0x4005aec	      0xe800000000	                          call 0x4005af1	      1175	coffcode.h	FUNCTION_7	IF_1
0x4005af1	            0x85c0	                           test eax, eax	      1175	coffcode.h	FUNCTION_7	IF_1
0x4005af3	            0x744e	                            je 0x4005b43	      1175	coffcode.h	FUNCTION_7	IF_1
0x4005af5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1177	coffcode.h	FUNCTION_7	IF_1
0x4005af9	      0xba11000000	                           mov edx, 0x11	      1177	coffcode.h	FUNCTION_7	IF_1
0x4005afe	      0xbe00000000	                              mov esi, 0	      1177	coffcode.h	FUNCTION_7	IF_1
0x4005b03	          0x4889c7	                            mov rdi, rax	      1177	coffcode.h	FUNCTION_7	IF_1
0x4005b06	      0xe800000000	                          call 0x4005b0b	      1177	coffcode.h	FUNCTION_7	IF_1
0x4005b0b	            0x85c0	                           test eax, eax	      1177	coffcode.h	FUNCTION_7	IF_1
0x4005b0d	            0x7434	                            je 0x4005b43	      1177	coffcode.h	FUNCTION_7	IF_1
0x4005b0f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1178	coffcode.h	FUNCTION_7	IF_1
0x4005b13	      0xba11000000	                           mov edx, 0x11	      1178	coffcode.h	FUNCTION_7	IF_1
0x4005b18	      0xbe00000000	                              mov esi, 0	      1178	coffcode.h	FUNCTION_7	IF_1
0x4005b1d	          0x4889c7	                            mov rdi, rax	      1178	coffcode.h	FUNCTION_7	IF_1
0x4005b20	      0xe800000000	                          call 0x4005b25	      1178	coffcode.h	FUNCTION_7	IF_1
0x4005b25	            0x85c0	                           test eax, eax	      1178	coffcode.h	FUNCTION_7	IF_1
0x4005b27	            0x741a	                            je 0x4005b43	      1178	coffcode.h	FUNCTION_7	IF_1
0x4005b29	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1180	coffcode.h	FUNCTION_7	IF_1
0x4005b2d	      0xba05000000	                              mov edx, 5	      1180	coffcode.h	FUNCTION_7	IF_1
0x4005b32	      0xbe00000000	                              mov esi, 0	      1180	coffcode.h	FUNCTION_7	IF_1
0x4005b37	          0x4889c7	                            mov rdi, rax	      1180	coffcode.h	FUNCTION_7	IF_1
0x4005b3a	      0xe800000000	                          call 0x4005b3f	      1180	coffcode.h	FUNCTION_7	IF_1
0x4005b3f	            0x85c0	                           test eax, eax	      1180	coffcode.h	FUNCTION_7	IF_1
0x4005b41	            0x7507	                           jne 0x4005b4a	      1180	coffcode.h	FUNCTION_7	IF_1
0x4005b43	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1181	coffcode.h	FUNCTION_7	IF_1
0x4005b4a	    0xc745d4080000	               mov dword [rbp - 0x2c], 8	      1183	coffcode.h	FUNCTION_7
0x4005b51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1186	coffcode.h	FUNCTION_7	IF_2
0x4005b55	      0x2500000040	                     and eax, 0x40000000	      1186	coffcode.h	FUNCTION_7	IF_2
0x4005b5a	          0x4885c0	                           test rax, rax	      1186	coffcode.h	FUNCTION_7	IF_2
0x4005b5d	     0xf85ec020000	                           jne 0x4005e4f	      1186	coffcode.h	FUNCTION_7	IF_2
0x4005b63	    0x814dd4000000	       or dword [rbp - 0x2c], 0x40000000	      1187	coffcode.h	FUNCTION_7	IF_2
0x4005b6a	      0xe9e0020000	                           jmp 0x4005e4f	      1190	coffcode.h	FUNCTION_7	WHILE_1
0x4005b6f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1192	coffcode.h	FUNCTION_7	WHILE_1
0x4005b73	          0x48f7d8	                                 neg rax	      1192	coffcode.h	FUNCTION_7	WHILE_1
0x4005b76	        0x482345e0	             and rax, qword [rbp - 0x20]	      1192	coffcode.h	FUNCTION_7	WHILE_1
0x4005b7a	        0x488945f8	                mov qword [rbp - 8], rax	      1192	coffcode.h	FUNCTION_7	WHILE_1
0x4005b7e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1193	coffcode.h	FUNCTION_7	WHILE_1
0x4005b86	        0x488b45f8	                mov rax, qword [rbp - 8]	      1195	coffcode.h	FUNCTION_7	WHILE_1
0x4005b8a	          0x48f7d0	                                 not rax	      1195	coffcode.h	FUNCTION_7	WHILE_1
0x4005b8d	        0x482145e0	             and qword [rbp - 0x20], rax	      1195	coffcode.h	FUNCTION_7	WHILE_1
0x4005b91	        0x488b45f8	                mov rax, qword [rbp - 8]	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005b95	    0x483d00020000	                          cmp rax, 0x200	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005b9b	     0xf843b020000	                            je 0x4005ddc	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ba1	    0x483d00020000	                          cmp rax, 0x200	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ba7	     0xf8784000000	                            ja 0x4005c31	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bad	        0x4883f810	                           cmp rax, 0x10	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bb1	     0xf8436010000	                            je 0x4005ced	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bb7	        0x4883f810	                           cmp rax, 0x10	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bbb	            0x7738	                            ja 0x4005bf5	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bbd	        0x4883f802	                              cmp rax, 2	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bc1	     0xf8440010000	                            je 0x4005d07	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bc7	        0x4883f802	                              cmp rax, 2	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bcb	            0x770f	                            ja 0x4005bdc	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bcd	        0x4883f801	                              cmp rax, 1	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bd1	     0xf84fc000000	                            je 0x4005cd3	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bd7	      0xe933020000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bdc	        0x4883f804	                              cmp rax, 4	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005be0	     0xf84fa000000	                            je 0x4005ce0	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005be6	        0x4883f808	                              cmp rax, 8	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bea	     0xf8418020000	                            je 0x4005e08	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bf0	      0xe91a020000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bf5	        0x4883f840	                           cmp rax, 0x40	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bf9	     0xf84c2010000	                            je 0x4005dc1	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005bff	        0x4883f840	                           cmp rax, 0x40	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c03	            0x770f	                            ja 0x4005c14	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c05	        0x4883f820	                           cmp rax, 0x20	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c09	     0xf84ac010000	                            je 0x4005dbb	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c0f	      0xe9fb010000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c14	    0x483d80000000	                           cmp rax, 0x80	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c1a	     0xf84b6010000	                            je 0x4005dd6	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c20	    0x483d00010000	                          cmp rax, 0x100	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c26	     0xf84f3000000	                            je 0x4005d1f	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c2c	      0xe9de010000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c31	    0x483d00000004	cmp rax, loc.imp._bfd_nodynamic_canonicalize_dynamic_reloc 	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c37	     0xf84ef000000	                            je 0x4005d2c	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c3d	    0x483d00000004	cmp rax, loc.imp._bfd_nodynamic_canonicalize_dynamic_reloc 	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c43	            0x7742	                            ja 0x4005c87	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c45	    0x483d00080000	                          cmp rax, 0x800	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c4b	     0xf845b010000	                            je 0x4005dac	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c51	    0x483d00080000	                          cmp rax, 0x800	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c57	            0x7711	                            ja 0x4005c6a	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c59	    0x483d00040000	                          cmp rax, 0x400	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c5f	     0xf8495000000	                            je 0x4005cfa	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c65	      0xe9a5010000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c6a	    0x483d00100000	                         cmp rax, 0x1000	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c70	     0xf846f010000	                            je 0x4005de5	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c76	    0x483d00000002	                      cmp rax, 0x2000000	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c7c	     0xf84fd000000	                            je 0x4005d7f	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c82	      0xe988010000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c87	    0x483d00000020	                     cmp rax, 0x20000000	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c8d	     0xf84da000000	                            je 0x4005d6d	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c93	    0x483d00000020	                     cmp rax, 0x20000000	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c99	            0x771d	                            ja 0x4005cb8	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005c9b	    0x483d00000008	                   cmp rax, section_end.	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ca1	     0xf8492000000	                            je 0x4005d39	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ca7	    0x483d00000010	                     cmp rax, 0x10000000	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cad	     0xf84f0000000	                            je 0x4005da3	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cb3	      0xe957010000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cb8	    0x483d00000040	                     cmp rax, 0x40000000	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cbe	            0x7453	                            je 0x4005d13	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cc0	      0xba00000080	                     mov edx, 0x80000000	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cc5	          0x4839d0	                            cmp rax, rdx	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cc8	     0xf84a8000000	                            je 0x4005d76	      1201	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cce	      0xe93c010000	                           jmp 0x4005e0f	      1298	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cd3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1204	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cdb	      0xe92f010000	                           jmp 0x4005e0f	      1205	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ce0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1207	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ce8	      0xe922010000	                           jmp 0x4005e0f	      1208	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ced	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1210	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cf5	      0xe915010000	                           jmp 0x4005e0f	      1211	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005cfa	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1213	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d02	      0xe908010000	                           jmp 0x4005e0f	      1214	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d07	    0x814dd4000200	            or dword [rbp - 0x2c], 0x200	      1217	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d0e	      0xe9fc000000	                           jmp 0x4005e0f	      1218	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d13	    0x8165d4ffffff	      and dword [rbp - 0x2c], 0xbfffffff	      1221	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d1a	      0xe9f0000000	                           jmp 0x4005e0f	      1222	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d1f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1227	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d27	      0xe9e3000000	                           jmp 0x4005e0f	      1228	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d2c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1230	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d34	      0xe9d6000000	                           jmp 0x4005e0f	      1231	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d39	      0xbe00000000	                              mov esi, 0	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d3e	      0xbf00000000	                              mov edi, 0	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d43	      0xe800000000	                          call 0x4005d48	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d48	          0x4889c7	                            mov rdi, rax	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d4b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d4f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d53	          0x4889d1	                            mov rcx, rdx	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d56	      0xba00000000	                              mov edx, 0	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d5b	          0x4889c6	                            mov rsi, rax	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d5e	      0xb800000000	                              mov eax, 0	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d63	      0xe800000000	                          call 0x4005d68	      1237	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_2
0x4005d68	      0xe9a2000000	                           jmp 0x4005e0f	      1240	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d6d	        0x834dd410	             or dword [rbp - 0x2c], 0x10	      1242	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d71	      0xe999000000	                           jmp 0x4005e0f	      1243	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d76	        0x8365d4f7	      and dword [rbp - 0x2c], 0xfffffff7	      1245	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d7a	      0xe990000000	                           jmp 0x4005e0f	      1246	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005d7f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1253	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3
0x4005d83	            0x7515	                           jne 0x4005d9a	      1253	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3
0x4005d85	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1255	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4005d89	      0xbe00000000	                              mov esi, 0	      1255	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4005d8e	          0x4889c7	                            mov rdi, rax	      1255	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4005d91	      0xe800000000	                          call 0x4005d96	      1255	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4005d96	            0x85c0	                           test eax, eax	      1255	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4005d98	            0x7571	                           jne 0x4005e0b	      1255	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4005d9a	    0x814dd4082000	           or dword [rbp - 0x2c], 0x2008	      1259	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_3
0x4005da1	            0xeb68	                           jmp 0x4005e0b	      1261	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005da3	    0x814dd4000000	     or dword [rbp - 0x2c], section_end.	      1263	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005daa	            0xeb63	                           jmp 0x4005e0f	      1264	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005dac	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1266	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_4
0x4005db0	            0x755c	                           jne 0x4005e0e	      1266	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_4
0x4005db2	    0x814dd4008000	           or dword [rbp - 0x2c], 0x8000	      1267	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_4
0x4005db9	            0xeb53	                           jmp 0x4005e0e	      1268	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005dbb	        0x834dd413	             or dword [rbp - 0x2c], 0x13	      1270	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005dbf	            0xeb4e	                           jmp 0x4005e0f	      1271	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005dc1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1273	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_5
0x4005dc5	            0x7409	                            je 0x4005dd0	      1273	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_5
0x4005dc7	    0x814dd4002000	           or dword [rbp - 0x2c], 0x2000	      1274	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	IF_5
0x4005dce	            0xeb3f	                           jmp 0x4005e0f	      1277	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005dd0	        0x834dd423	            or dword [rbp - 0x2c], 0x23 	      1276	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	ELSE_1
0x4005dd4	            0xeb39	                           jmp 0x4005e0f	      1277	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005dd6	        0x834dd401	                or dword [rbp - 0x2c], 1	      1279	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005dda	            0xeb33	                           jmp 0x4005e0f	      1280	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005ddc	    0x814dd4002000	           or dword [rbp - 0x2c], 0x2000	      1289	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005de3	            0xeb2a	                           jmp 0x4005e0f	      1291	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005de5	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005de9	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005ded	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005df1	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005df4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005df8	          0x4989f8	                             mov r8, rdi	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005dfb	          0x4889c7	                            mov rdi, rax	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005dfe	      0xe8d2f6ffff	                  call sym.handle_COMDAT	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005e03	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1294	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1	CALL_4
0x4005e06	            0xeb07	                           jmp 0x4005e0f	      1295	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005e08	              0x90	                                     nop	      1225	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005e09	            0xeb04	                           jmp 0x4005e0f	      1225	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005e0b	              0x90	                                     nop	      1261	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005e0c	            0xeb01	                           jmp 0x4005e0f	      1261	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005e0e	              0x90	                                     nop	      1268	coffcode.h	FUNCTION_7	WHILE_1	SWITCH_1
0x4005e0f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1302	coffcode.h	FUNCTION_7	WHILE_1	IF_6
0x4005e14	            0x7439	                            je 0x4005e4f	      1302	coffcode.h	FUNCTION_7	WHILE_1	IF_6
0x4005e16	      0xbe00000000	                              mov esi, 0	      1306	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_6
0x4005e1b	      0xbf00000000	                              mov edi, 0	      1306	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_6
0x4005e20	      0xe800000000	                          call 0x4005e25	      1306	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_6
0x4005e25	          0x4889c7	                            mov rdi, rax	      1306	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_6
0x4005e28	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e2c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e30	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e34	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e38	          0x4989f0	                             mov r8, rsi	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e3b	          0x4889c6	                            mov rsi, rax	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e3e	      0xb800000000	                              mov eax, 0	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e43	      0xe800000000	                          call 0x4005e48	      1304	coffcode.h	FUNCTION_7	WHILE_1	IF_6	CALL_5
0x4005e48	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1308	coffcode.h	FUNCTION_7	WHILE_1	IF_6
0x4005e4f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1190	coffcode.h	FUNCTION_7	WHILE_1
0x4005e54	     0xf8515fdffff	                           jne 0x4005b6f	      1190	coffcode.h	FUNCTION_7	WHILE_1
0x4005e5a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1319	coffcode.h	FUNCTION_7	IF_7
0x4005e5e	      0xba0d000000	                            mov edx, 0xd	      1319	coffcode.h	FUNCTION_7	IF_7
0x4005e63	      0xbe00000000	                              mov esi, 0	      1319	coffcode.h	FUNCTION_7	IF_7
0x4005e68	          0x4889c7	                            mov rdi, rax	      1319	coffcode.h	FUNCTION_7	IF_7
0x4005e6b	      0xe800000000	                          call 0x4005e70	      1319	coffcode.h	FUNCTION_7	IF_7
0x4005e70	            0x85c0	                           test eax, eax	      1319	coffcode.h	FUNCTION_7	IF_7
0x4005e72	            0x7507	                           jne 0x4005e7b	      1319	coffcode.h	FUNCTION_7	IF_7
0x4005e74	    0x814dd4000002	          or dword [rbp - 0x2c], 0x20000	      1320	coffcode.h	FUNCTION_7	IF_7
0x4005e7b	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1323	coffcode.h	FUNCTION_7	IF_8
0x4005e80	            0x7409	                            je 0x4005e8b	      1323	coffcode.h	FUNCTION_7	IF_8
0x4005e82	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1324	coffcode.h	FUNCTION_7	IF_8
0x4005e86	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1324	coffcode.h	FUNCTION_7	IF_8
0x4005e89	            0x8910	                    mov dword [rax], edx	      1324	coffcode.h	FUNCTION_7	IF_8
0x4005e8b	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1326	coffcode.h	FUNCTION_7
0x4005e8e	              0xc9	                                   leave	      1327	coffcode.h	FUNCTION_7
0x4005e8f	              0xc3	                                     ret	      1327	coffcode.h	FUNCTION_7
dummy_reloc16_estimate	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,1:DO,0	12
0x400a20c	              0x55	                                push rbp	      5140	coffcode.h	FUNCTION_38
0x400a20d	          0x4889e5	                            mov rbp, rsp	      5140	coffcode.h	FUNCTION_38
0x400a210	        0x4883ec30	                           sub rsp, 0x30	      5140	coffcode.h	FUNCTION_38
0x400a214	        0x48897df8	                mov qword [rbp - 8], rdi	      5140	coffcode.h	FUNCTION_38
0x400a218	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5140	coffcode.h	FUNCTION_38
0x400a21c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5140	coffcode.h	FUNCTION_38
0x400a220	          0x894de4	             mov dword [rbp - 0x1c], ecx	      5140	coffcode.h	FUNCTION_38
0x400a223	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      5140	coffcode.h	FUNCTION_38
0x400a227	      0xba00000000	                              mov edx, 0	      5141	coffcode.h	FUNCTION_38	CALL_1
0x400a22c	      0xbe15140000	                         mov esi, 0x1415	      5141	coffcode.h	FUNCTION_38	CALL_1
0x400a231	      0xbf00000000	                              mov edi, 0	      5141	coffcode.h	FUNCTION_38	CALL_1
0x400a236	      0xe800000000	      call sym.dummy_reloc16_extra_cases	      5141	coffcode.h	FUNCTION_38	CALL_1
pe_ILF_make_a_reloc	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,2:DO,0	21
0x4003395	              0x55	                                push rbp	       485	peicode.h	FUNCTION_57
0x4003396	          0x4889e5	                            mov rbp, rsp	       485	peicode.h	FUNCTION_57
0x4003399	        0x4883ec20	                           sub rsp, 0x20	       485	peicode.h	FUNCTION_57
0x400339d	        0x48897df8	                mov qword [rbp - 8], rdi	       485	peicode.h	FUNCTION_57
0x40033a1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       485	peicode.h	FUNCTION_57
0x40033a5	          0x8955ec	             mov dword [rbp - 0x14], edx	       485	peicode.h	FUNCTION_57
0x40033a8	        0x48894de0	             mov qword [rbp - 0x20], rcx	       485	peicode.h	FUNCTION_57
0x40033ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       487	peicode.h	FUNCTION_57	CALL_2
0x40033b0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       487	peicode.h	FUNCTION_57	CALL_2
0x40033b7	          0x8b7830	            mov edi, dword [rax + 0x30] 	       486	peicode.h	FUNCTION_57	CALL_1
0x40033ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       486	peicode.h	FUNCTION_57	CALL_1
0x40033be	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       486	peicode.h	FUNCTION_57	CALL_1
0x40033c5	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       486	peicode.h	FUNCTION_57	CALL_1
0x40033c8	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       486	peicode.h	FUNCTION_57	CALL_1
0x40033cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       486	peicode.h	FUNCTION_57	CALL_1
0x40033d0	          0x4189f8	                            mov r8d, edi	       486	peicode.h	FUNCTION_57	CALL_1
0x40033d3	          0x4889c7	                            mov rdi, rax	       486	peicode.h	FUNCTION_57	CALL_1
0x40033d6	      0xe8c9feffff	     call sym.pe_ILF_make_a_symbol_reloc	       486	peicode.h	FUNCTION_57	CALL_1
0x40033db	              0x90	                                     nop	       488	peicode.h	FUNCTION_57
0x40033dc	              0xc9	                                   leave	       488	peicode.h	FUNCTION_57
0x40033dd	              0xc3	                                     ret	       488	peicode.h	FUNCTION_57
coff_slurp_symbol_table	FOR,1:functions,0:WHILE,2:ELSE,5:SWITCH,2:IF,18:CALL,21:DO,0	436
0x40093ef	              0x55	                                push rbp	      4451	coffcode.h	ELSE_4	FUNCTION_34
0x40093f0	          0x4889e5	                            mov rbp, rsp	      4451	coffcode.h	ELSE_4	FUNCTION_34
0x40093f3	            0x4155	                                push r13	      4451	coffcode.h	ELSE_4	FUNCTION_34
0x40093f5	            0x4154	                                push r12	      4451	coffcode.h	ELSE_4	FUNCTION_34
0x40093f7	              0x53	                                push rbx	      4451	coffcode.h	ELSE_4	FUNCTION_34
0x40093f8	        0x4883ec68	                           sub rsp, 0x68	      4451	coffcode.h	ELSE_4	FUNCTION_34
0x40093fc	        0x48897d88	             mov qword [rbp - 0x78], rdi	      4451	coffcode.h	ELSE_4	FUNCTION_34
0x4009400	    0xc74598000000	               mov dword [rbp - 0x68], 0	      4456	coffcode.h	ELSE_4	FUNCTION_34
0x4009407	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      4457	coffcode.h	ELSE_4	FUNCTION_34
0x400940e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4459	coffcode.h	ELSE_4	FUNCTION_34	IF_1	CALL_1
0x4009412	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4459	coffcode.h	ELSE_4	FUNCTION_34	IF_1	CALL_1
0x4009419	          0x488b00	                    mov rax, qword [rax]	      4459	coffcode.h	ELSE_4	FUNCTION_34	IF_1	CALL_1
0x400941c	          0x4885c0	                           test rax, rax	      4459	coffcode.h	ELSE_4	FUNCTION_34	IF_1	CALL_1
0x400941f	            0x740a	                            je 0x400942b	      4459	coffcode.h	ELSE_4	FUNCTION_34	IF_1	CALL_1
0x4009421	      0xb801000000	                              mov eax, 1	      4460	coffcode.h	ELSE_4	FUNCTION_34	IF_1
0x4009426	      0xe96f060000	                           jmp 0x4009a9a	      4460	coffcode.h	ELSE_4	FUNCTION_34	IF_1
0x400942b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4463	coffcode.h	ELSE_4	FUNCTION_34	IF_2	CALL_2
0x400942f	          0x4889c7	                            mov rdi, rax	      4463	coffcode.h	ELSE_4	FUNCTION_34	IF_2	CALL_2
0x4009432	      0xe800000000	                          call 0x4009437	      4463	coffcode.h	ELSE_4	FUNCTION_34	IF_2	CALL_2
0x4009437	        0x488945b8	             mov qword [rbp - 0x48], rax	      4463	coffcode.h	ELSE_4	FUNCTION_34	IF_2	CALL_2
0x400943b	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4463	coffcode.h	ELSE_4	FUNCTION_34	IF_2	CALL_2
0x4009440	            0x750a	                           jne 0x400944c	      4463	coffcode.h	ELSE_4	FUNCTION_34	IF_2	CALL_2
0x4009442	      0xb800000000	                              mov eax, 0	      4464	coffcode.h	ELSE_4	FUNCTION_34	IF_2
0x4009447	      0xe94e060000	                           jmp 0x4009a9a	      4464	coffcode.h	ELSE_4	FUNCTION_34	IF_2
0x400944c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4467	coffcode.h	ELSE_4	FUNCTION_34	CALL_3
0x4009450	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4467	coffcode.h	ELSE_4	FUNCTION_34	CALL_3
0x4009457	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4467	coffcode.h	ELSE_4	FUNCTION_34	CALL_3
0x400945b	        0x488945c0	             mov qword [rbp - 0x40], rax	      4467	coffcode.h	ELSE_4	FUNCTION_34	CALL_3
0x400945f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4468	coffcode.h	ELSE_4	FUNCTION_34
0x4009463	          0x4889d0	                            mov rax, rdx	      4468	coffcode.h	ELSE_4	FUNCTION_34
0x4009466	        0x48c1e003	                              shl rax, 3	      4468	coffcode.h	ELSE_4	FUNCTION_34
0x400946a	          0x4801d0	                            add rax, rdx	      4468	coffcode.h	ELSE_4	FUNCTION_34
0x400946d	        0x48c1e003	                              shl rax, 3	      4468	coffcode.h	ELSE_4	FUNCTION_34
0x4009471	        0x488945c0	             mov qword [rbp - 0x40], rax	      4468	coffcode.h	ELSE_4	FUNCTION_34
0x4009475	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4469	coffcode.h	ELSE_4	FUNCTION_34	CALL_4
0x4009479	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4469	coffcode.h	ELSE_4	FUNCTION_34	CALL_4
0x400947d	          0x4889d6	                            mov rsi, rdx	      4469	coffcode.h	ELSE_4	FUNCTION_34	CALL_4
0x4009480	          0x4889c7	                            mov rdi, rax	      4469	coffcode.h	ELSE_4	FUNCTION_34	CALL_4
0x4009483	      0xe800000000	                          call 0x4009488	      4469	coffcode.h	ELSE_4	FUNCTION_34	CALL_4
0x4009488	        0x488945c8	             mov qword [rbp - 0x38], rax	      4469	coffcode.h	ELSE_4	FUNCTION_34	CALL_4
0x400948c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4470	coffcode.h	ELSE_4	FUNCTION_34	IF_3
0x4009491	            0x750a	                           jne 0x400949d	      4470	coffcode.h	ELSE_4	FUNCTION_34	IF_3
0x4009493	      0xb800000000	                              mov eax, 0	      4471	coffcode.h	ELSE_4	FUNCTION_34	IF_3
0x4009498	      0xe9fd050000	                           jmp 0x4009a9a	      4471	coffcode.h	ELSE_4	FUNCTION_34	IF_3
0x400949d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4473	coffcode.h	ELSE_4	FUNCTION_34	CALL_5
0x40094a1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4473	coffcode.h	ELSE_4	FUNCTION_34	CALL_5
0x40094a8	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4473	coffcode.h	ELSE_4	FUNCTION_34	CALL_5
0x40094ac	        0x488945c0	             mov qword [rbp - 0x40], rax	      4473	coffcode.h	ELSE_4	FUNCTION_34	CALL_5
0x40094b0	      0x48c165c002	               shl qword [rbp - 0x40], 2	      4474	coffcode.h	ELSE_4	FUNCTION_34
0x40094b5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4475	coffcode.h	ELSE_4	FUNCTION_34	CALL_6
0x40094b9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4475	coffcode.h	ELSE_4	FUNCTION_34	CALL_6
0x40094bd	          0x4889d6	                            mov rsi, rdx	      4475	coffcode.h	ELSE_4	FUNCTION_34	CALL_6
0x40094c0	          0x4889c7	                            mov rdi, rax	      4475	coffcode.h	ELSE_4	FUNCTION_34	CALL_6
0x40094c3	      0xe800000000	                          call 0x40094c8	      4475	coffcode.h	ELSE_4	FUNCTION_34	CALL_6
0x40094c8	        0x488945d0	             mov qword [rbp - 0x30], rax	      4475	coffcode.h	ELSE_4	FUNCTION_34	CALL_6
0x40094cc	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4477	coffcode.h	ELSE_4	FUNCTION_34	IF_4
0x40094d1	            0x750a	                           jne 0x40094dd	      4477	coffcode.h	ELSE_4	FUNCTION_34	IF_4
0x40094d3	      0xb800000000	                              mov eax, 0	      4478	coffcode.h	ELSE_4	FUNCTION_34	IF_4
0x40094d8	      0xe9bd050000	                           jmp 0x4009a9a	      4478	coffcode.h	ELSE_4	FUNCTION_34	IF_4
0x40094dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4481	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1
0x40094e1	        0x488945a8	             mov qword [rbp - 0x58], rax	      4481	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1
0x40094e5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4482	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	CALL_7
0x40094e9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4482	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	CALL_7
0x40094f0	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4482	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	CALL_7
0x40094f4	          0x8945a4	             mov dword [rbp - 0x5c], eax	      4482	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	CALL_7
0x40094f7	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      4483	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1
0x40094fe	      0xe901050000	                           jmp 0x4009a04	      4485	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009503	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4487	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009506	        0x48c1e003	                              shl rax, 3	      4487	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400950a	    0x488d14c50000	                        lea rdx, [rax*8]	      4487	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009512	          0x4829c2	                            sub rdx, rax	      4487	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009515	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4487	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009519	          0x4801d0	                            add rax, rdx	      4487	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400951c	        0x488945d8	             mov qword [rbp - 0x28], rax	      4487	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009520	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4488	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009523	    0x488d14850000	                        lea rdx, [rax*4]	      4488	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400952b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4488	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400952f	          0x4801c2	                            add rdx, rax	      4488	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009532	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4488	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009535	            0x8902	                    mov dword [rdx], eax	      4488	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009537	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4490	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400953b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4490	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400953f	          0x488910	                    mov qword [rax], rdx	      4490	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009542	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4491	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_8
0x4009546	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4491	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_8
0x4009549	            0x85c0	                           test eax, eax	      4491	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_8
0x400954b	            0x750f	                           jne 0x400955c	      4491	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_8
0x400954d	      0xbe8b110000	                         mov esi, 0x118b	      4491	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_8
0x4009552	      0xbf00000000	                              mov edi, 0	      4491	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_8
0x4009557	      0xe800000000	                          call 0x400955c	      4491	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_8
0x400955c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4492	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009560	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4492	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009564	          0x4889c2	                            mov rdx, rax	      4492	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009567	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4492	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400956b	        0x48895008	                mov qword [rax + 8], rdx	      4492	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400956f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4494	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009573	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4494	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009577	        0x48895008	                mov qword [rax + 8], rdx	      4494	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400957b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x400957f	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x4009582	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x4009586	            0x89d6	                            mov esi, edx	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x4009588	          0x4889c7	                            mov rdi, rax	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x400958b	      0xe800000000	                          call 0x4009590	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x4009590	          0x4889c2	                            mov rdx, rax	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x4009593	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x4009597	        0x48895020	             mov qword [rax + 0x20], rdx	      4495	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	CALL_9
0x400959b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4497	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x400959f	    0xc74018000000	               mov dword [rax + 0x18], 0	      4497	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x40095a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4499	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x40095aa	    0x48c740100000	               mov qword [rax + 0x10], 0	      4499	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x40095b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4500	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x40095b6	    0xc74040000000	               mov dword [rax + 0x40], 0	      4500	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x40095bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095c1	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095c5	           0xfb6c0	                           movzx eax, al	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095c8	          0x83f812	                           cmp eax, 0x12	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095cb	            0x7f7c	                            jg 0x4009649	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095cd	          0x83f80f	                            cmp eax, 0xf	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095d0	     0xf8dac020000	                           jge 0x4009882	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095d6	          0x83f806	                              cmp eax, 6	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095d9	     0xf8448020000	                            je 0x4009827	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095df	          0x83f806	                              cmp eax, 6	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095e2	            0x7f3b	                            jg 0x400961f	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095e4	          0x83f802	                              cmp eax, 2	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095e7	     0xf84b2000000	                            je 0x400969f	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095ed	          0x83f802	                              cmp eax, 2	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095f0	            0x7f16	                            jg 0x4009608	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095f2	            0x85c0	                           test eax, eax	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095f4	     0xf8431030000	                            je 0x400992b	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095fa	          0x83f801	                              cmp eax, 1	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40095fd	     0xf847f020000	                            je 0x4009882	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009603	      0xe948030000	                           jmp 0x4009950	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009608	          0x83f803	                              cmp eax, 3	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400960b	     0xf8416020000	                            je 0x4009827	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009611	          0x83f804	                              cmp eax, 4	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009614	     0xf8468020000	                            je 0x4009882	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400961a	      0xe931030000	                           jmp 0x4009950	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400961f	          0x83f80a	                            cmp eax, 0xa	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009622	     0xf847a020000	                            je 0x40098a2	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009628	          0x83f80a	                            cmp eax, 0xa	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400962b	            0x7f0e	                            jg 0x400963b	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400962d	          0x83f808	                              cmp eax, 8	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009630	     0xf8c1a030000	                            jl 0x4009950	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009636	      0xe947020000	                           jmp 0x4009882	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400963b	          0x83f80d	                            cmp eax, 0xd	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400963e	     0xf8f0c030000	                            jg 0x4009950	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009644	      0xe939020000	                           jmp 0x4009882	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009649	          0x83f867	                           cmp eax, 0x67	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400964c	     0xf8450020000	                            je 0x40098a2	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009652	          0x83f867	                           cmp eax, 0x67	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009655	            0x7f25	                            jg 0x400967c	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009657	          0x83f865	                           cmp eax, 0x65	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400965a	     0xf8f22020000	                            jg 0x4009882	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009660	          0x83f864	                           cmp eax, 0x64	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009663	     0xf8d59020000	                           jge 0x40098c2	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009669	          0x83f814	                           cmp eax, 0x14	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400966c	     0xf8499020000	                            je 0x400990b	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009672	          0x83f817	                           cmp eax, 0x17	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009675	            0x7428	                            je 0x400969f	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009677	      0xe9d4020000	                           jmp 0x4009950	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400967c	          0x83f86a	                           cmp eax, 0x6a	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400967f	     0xf841b030000	                            je 0x40099a0	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009685	          0x83f86a	                           cmp eax, 0x6a	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009688	            0x7c15	                            jl 0x400969f	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400968a	          0x83f87f	                           cmp eax, 0x7f	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400968d	            0x7410	                            je 0x400969f	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400968f	      0x3dff000000	                           cmp eax, 0xff	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009694	     0xf8428020000	                            je 0x40098c2	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400969a	      0xe9b1020000	                           jmp 0x4009950	      4502	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400969f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096a3	        0x488d5008	                      lea rdx, [rax + 8]	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096a7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096ab	          0x4889d6	                            mov rsi, rdx	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096ae	          0x4889c7	                            mov rdi, rax	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096b1	      0xe8ef030000	           call sym.coff_classify_symbol	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096b6	          0x83f804	                              cmp eax, 4	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096b9	     0xf8701010000	                            ja 0x40097c0	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096bf	            0x89c0	                            mov eax, eax	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096c1	    0x488b04c50000	                  mov rax, qword [rax*8]	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096c9	            0xffe0	                                 jmp rax	      4525	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x40096cb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4528	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40096cf	    0xc74018020000	               mov dword [rax + 0x18], 2	      4528	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40096d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4532	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40096da	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4532	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40096de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4532	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40096e2	        0x48895010	             mov qword [rax + 0x10], rdx	      4532	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40096e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4537	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40096ea	         0xfb74026	           movzx eax, word [rax + 0x26] 	      4537	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40096ee	           0xfb7c0	                           movzx eax, ax	      4537	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40096f1	          0x83e030	                           and eax, 0x30	      4537	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40096f4	        0x4883f820	                           cmp rax, 0x20	      4537	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40096f8	     0xf85be000000	                           jne 0x40097bc	      4537	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40096fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4540	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4009702	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4540	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4009705	       0xd08040000	                           or eax, 0x408	      4540	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x400970a	            0x89c2	                            mov edx, eax	      4540	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x400970c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4540	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4009710	          0x895018	             mov dword [rax + 0x18], edx	      4540	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4009713	      0xe9a4000000	                           jmp 0x40097bc	      4541	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009718	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4544	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400971c	    0x48c740200000	               mov qword [rax + 0x20], 0	      4544	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009724	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4545	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009728	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4545	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400972c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4545	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009730	        0x48895010	             mov qword [rax + 0x10], rdx	      4545	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009734	      0xe987000000	                           jmp 0x40097c0	      4546	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009739	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4549	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400973d	    0x48c740200000	               mov qword [rax + 0x20], 0	      4549	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009745	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4550	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009749	    0x48c740100000	               mov qword [rax + 0x10], 0	      4550	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009751	            0xeb6d	                           jmp 0x40097c0	      4551	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009753	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4554	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009757	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4554	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400975a	       0xd02010000	                           or eax, 0x102	      4554	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400975f	            0x89c2	                            mov edx, eax	      4554	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009761	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4554	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009765	          0x895018	             mov dword [rax + 0x18], edx	      4554	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009768	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4555	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400976c	    0x48c740100000	               mov qword [rax + 0x10], 0	      4555	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009774	            0xeb4a	                           jmp 0x40097c0	      4556	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009776	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4559	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400977a	    0xc74018010000	               mov dword [rax + 0x18], 1	      4559	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009781	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4563	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009785	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4563	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009789	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4563	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400978d	        0x48895010	             mov qword [rax + 0x10], rdx	      4563	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4009791	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4568	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x4009795	         0xfb74026	           movzx eax, word [rax + 0x26] 	      4568	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x4009799	           0xfb7c0	                           movzx eax, ax	      4568	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x400979c	          0x83e030	                           and eax, 0x30	      4568	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x400979f	        0x4883f820	                           cmp rax, 0x20	      4568	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x40097a3	            0x751a	                           jne 0x40097bf	      4568	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x40097a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4569	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x40097a9	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4569	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x40097ac	       0xd08040000	                           or eax, 0x408	      4569	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x40097b1	            0x89c2	                            mov edx, eax	      4569	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x40097b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4569	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x40097b7	          0x895018	             mov dword [rax + 0x18], edx	      4569	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x40097ba	            0xeb03	                           jmp 0x40097bf	      4570	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40097bc	              0x90	                                     nop	      4541	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40097bd	            0xeb01	                           jmp 0x40097c0	      4541	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40097bf	              0x90	                                     nop	      4570	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40097c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4580	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097c4	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4580	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097c8	            0x3c69	                            cmp al, 0x69	      4580	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097ca	            0x7512	                           jne 0x40097de	      4580	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097cc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4581	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097d0	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4581	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097d3	             0xc80	                             or al, 0x80	      4581	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097d5	            0x89c2	                            mov edx, eax	      4581	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097d7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4581	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097db	          0x895018	             mov dword [rax + 0x18], edx	      4581	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x40097de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4583	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097e2	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4583	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097e6	            0x3c68	                            cmp al, 0x68	      4583	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097e8	            0x7516	                           jne 0x4009800	      4583	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4584	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097ee	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4584	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097f1	            0x85c0	                           test eax, eax	      4584	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097f3	            0x7e0b	                           jle 0x4009800	      4584	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4585	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40097f9	    0xc74018010000	               mov dword [rax + 0x18], 1	      4585	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x4009800	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4587	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x4009804	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4587	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x4009808	            0x3c7f	                            cmp al, 0x7f	      4587	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x400980a	     0xf85ad010000	                           jne 0x40099bd	      4587	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x4009810	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4592	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x4009814	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4592	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x4009817	             0xc80	                             or al, 0x80	      4592	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x4009819	            0x89c2	                            mov edx, eax	      4592	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x400981b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4592	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x400981f	          0x895018	             mov dword [rax + 0x18], edx	      4592	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x4009822	      0xe996010000	                           jmp 0x40099bd	      4594	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009827	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4607	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x400982b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4607	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x400982e	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      4607	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x4009831	            0x750d	                           jne 0x4009840	      4607	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x4009833	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4608	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x4009837	    0xc74018040000	               mov dword [rax + 0x18], 4	      4608	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x400983e	            0xeb0b	                           jmp 0x400984b	      4608	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x4009840	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4610	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2
0x4009844	    0xc74018010000	               mov dword [rax + 0x18], 1	      4610	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2
0x400984b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4614	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x400984f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4614	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4009853	          0x4885c0	                           test rax, rax	      4614	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4009856	            0x7415	                            je 0x400986d	      4614	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4009858	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4619	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x400985c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4619	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4009860	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4619	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4009864	        0x48895010	             mov qword [rax + 0x10], rdx	      4619	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4009868	      0xe954010000	                           jmp 0x40099c1	      4627	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400986d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4626	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x4009871	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4626	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x4009875	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4626	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x4009879	        0x48895010	             mov qword [rax + 0x10], rdx	      4626	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x400987d	      0xe93f010000	                           jmp 0x40099c1	      4627	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009882	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4642	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009886	    0xc74018040000	               mov dword [rax + 0x18], 4	      4642	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400988d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4643	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009891	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4643	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009895	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4643	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x4009899	        0x48895010	             mov qword [rax + 0x10], rdx	      4643	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x400989d	      0xe91f010000	                           jmp 0x40099c1	      4644	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098a2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4664	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098a6	    0xc74018040000	               mov dword [rax + 0x18], 4	      4664	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4665	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098b1	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4665	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4665	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098b9	        0x48895010	             mov qword [rax + 0x10], rdx	      4665	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098bd	      0xe9ff000000	                           jmp 0x40099c1	      4666	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40098c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4717	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40098c6	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4717	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40098ca	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4717	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40098ce	        0x48895010	             mov qword [rax + 0x10], rdx	      4717	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40098d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4718	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x40098d6	        0x488b4008	                mov rax, qword [rax + 8]	      4718	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x40098da	      0xbe00000000	                              mov esi, 0	      4718	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x40098df	          0x4889c7	                            mov rdi, rax	      4718	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x40098e2	      0xe800000000	                          call 0x40098e7	      4718	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x40098e7	            0x85c0	                           test eax, eax	      4718	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x40098e9	            0x7410	                            je 0x40098fb	      4718	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x40098eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4722	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15
0x40098ef	    0xc74018040000	               mov dword [rax + 0x18], 4	      4722	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15
0x40098f6	      0xe9c6000000	                           jmp 0x40099c1	      4733	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40098fb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4725	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	ELSE_5
0x40098ff	    0xc74018040002	        mov dword [rax + 0x18], 0x20004 	      4725	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	ELSE_5
0x4009906	      0xe9b6000000	                           jmp 0x40099c1	      4733	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400990b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4736	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400990f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4736	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4009913	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4736	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4009917	        0x48895010	             mov qword [rax + 0x10], rdx	      4736	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400991b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4737	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400991f	    0xc74018020000	               mov dword [rax + 0x18], 2	      4737	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4009926	      0xe996000000	                           jmp 0x40099c1	      4738	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400992b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4743	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x400992f	         0xfb74026	           movzx eax, word [rax + 0x26] 	      4743	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009933	          0x6685c0	                             test ax, ax	      4743	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009936	            0x7518	                           jne 0x4009950	      4743	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009938	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4744	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x400993c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4744	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009940	          0x4885c0	                           test rax, rax	      4744	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009943	            0x750b	                           jne 0x4009950	      4744	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009945	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4745	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009949	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4745	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x400994c	            0x85c0	                           test eax, eax	      4745	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x400994e	            0x7470	                            je 0x40099c0	      4745	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x4009950	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4009954	        0x4c8b6808	                mov r13, qword [rax + 8]	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4009958	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4773	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400995c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4773	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4009960	          0x4c8b20	                    mov r12, qword [rax]	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4009963	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4772	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4009967	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4772	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400996b	           0xfb6d8	                           movzx ebx, al	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400996e	      0xbe00000000	                              mov esi, 0	      4771	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x4009973	      0xbf00000000	                              mov edi, 0	      4771	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x4009978	      0xe800000000	                          call 0x400997d	      4771	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x400997d	          0x4889c7	                            mov rdi, rax	      4771	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x4009980	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4009984	          0x4d89e8	                             mov r8, r13	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4009987	          0x4c89e1	                            mov rcx, r12	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400998a	            0x89da	                            mov edx, ebx	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400998c	          0x4889c6	                            mov rsi, rax	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400998f	      0xb800000000	                              mov eax, 0	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4009994	      0xe800000000	                          call 0x4009999	      4769	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4009999	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      4774	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4779	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099a4	    0xc74018040000	               mov dword [rax + 0x18], 4	      4779	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4780	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099af	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4780	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4780	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099b7	        0x48895010	             mov qword [rax + 0x10], rdx	      4780	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099bb	            0xeb04	                           jmp 0x40099c1	      4781	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40099bd	              0x90	                                     nop	      4594	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40099be	            0xeb01	                           jmp 0x40099c1	      4594	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1
0x40099c0	              0x90	                                     nop	      4746	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40099c1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4784	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099c5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4784	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099c9	        0x48895030	             mov qword [rax + 0x30], rdx	      4784	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099cd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4785	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099d1	    0x48c740280000	               mov qword [rax + 0x28], 0	      4785	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099d9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4786	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099dd	    0x48c740380000	               mov qword [rax + 0x38], 0	      4786	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4788	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099e9	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      4788	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099ed	           0xfb6d0	                           movzx edx, al	      4788	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099f0	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4788	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099f3	             0x1d0	                            add eax, edx	      4788	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099f5	          0x83c001	                              add eax, 1	      4788	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099f8	          0x8945a0	             mov dword [rbp - 0x60], eax	      4788	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x40099fb	      0x488345a848	           add qword [rbp - 0x58], 0x48 	      4789	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x4009a00	        0x83459801	               add dword [rbp - 0x68], 1	      4790	coffcode.h	FUNCTION_34	ELSE_1	WHILE_1	ELSE_4
0x4009a04	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4485	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009a07	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      4485	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009a0a	     0xf82f3faffff	                            jb 0x4009503	      4485	coffcode.h	ELSE_4	FUNCTION_34	ELSE_1	WHILE_1
0x4009a10	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4794	coffcode.h	FUNCTION_34	ELSE_4	CALL_18
0x4009a14	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4794	coffcode.h	FUNCTION_34	ELSE_4	CALL_18
0x4009a1b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4794	coffcode.h	FUNCTION_34	ELSE_4	CALL_18
0x4009a1f	          0x488910	                    mov qword [rax], rdx	      4794	coffcode.h	FUNCTION_34	ELSE_4	CALL_18
0x4009a22	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4795	coffcode.h	FUNCTION_34	ELSE_4	CALL_19
0x4009a26	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4795	coffcode.h	FUNCTION_34	ELSE_4	CALL_19
0x4009a2d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4795	coffcode.h	FUNCTION_34	ELSE_4	CALL_19
0x4009a31	        0x48895020	             mov qword [rax + 0x20], rdx	      4795	coffcode.h	FUNCTION_34	ELSE_4	CALL_19
0x4009a35	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4797	coffcode.h	FUNCTION_34	ELSE_4
0x4009a39	          0x8b5598	             mov edx, dword [rbp - 0x68]	      4797	coffcode.h	FUNCTION_34	ELSE_4
0x4009a3c	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      4797	coffcode.h	FUNCTION_34	ELSE_4
0x4009a42	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4798	coffcode.h	FUNCTION_34	ELSE_4	CALL_20
0x4009a46	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4798	coffcode.h	FUNCTION_34	ELSE_4	CALL_20
0x4009a4d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4798	coffcode.h	FUNCTION_34	ELSE_4	CALL_20
0x4009a51	        0x48895008	                mov qword [rax + 8], rdx	      4798	coffcode.h	FUNCTION_34	ELSE_4	CALL_20
0x4009a55	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4803	coffcode.h	FUNCTION_34	ELSE_4
0x4009a59	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4803	coffcode.h	FUNCTION_34	ELSE_4
0x4009a60	        0x488945b0	             mov qword [rbp - 0x50], rax	      4803	coffcode.h	FUNCTION_34	ELSE_4
0x4009a64	            0xeb2a	                           jmp 0x4009a90	      4804	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2
0x4009a66	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4806	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18	CALL_21
0x4009a6a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4806	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18	CALL_21
0x4009a6e	          0x4889d6	                            mov rsi, rdx	      4806	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18	CALL_21
0x4009a71	          0x4889c7	                            mov rdi, rax	      4806	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18	CALL_21
0x4009a74	      0xe884f1ffff	          call sym.coff_slurp_line_table	      4806	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18	CALL_21
0x4009a79	            0x85c0	                           test eax, eax	      4806	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18	CALL_21
0x4009a7b	            0x7507	                           jne 0x4009a84	      4806	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18	CALL_21
0x4009a7d	      0xb800000000	                              mov eax, 0	      4807	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18
0x4009a82	            0xeb16	                           jmp 0x4009a9a	      4807	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2	IF_18
0x4009a84	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4808	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2
0x4009a88	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4808	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2
0x4009a8c	        0x488945b0	             mov qword [rbp - 0x50], rax	      4808	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2
0x4009a90	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4804	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2
0x4009a95	            0x75cf	                           jne 0x4009a66	      4804	coffcode.h	FUNCTION_34	ELSE_4	WHILE_2
0x4009a97	          0x8b459c	             mov eax, dword [rbp - 0x64]	      4812	coffcode.h	FUNCTION_34	ELSE_4
0x4009a9a	        0x4883c468	                           add rsp, 0x68	      4813	coffcode.h	FUNCTION_34	ELSE_4
0x4009a9e	              0x5b	                                 pop rbx	      4813	coffcode.h	FUNCTION_34	ELSE_4
0x4009a9f	            0x415c	                                 pop r12	      4813	coffcode.h	FUNCTION_34	ELSE_4
0x4009aa1	            0x415d	                                 pop r13	      4813	coffcode.h	FUNCTION_34	ELSE_4
0x4009aa3	              0x5d	                                 pop rbp	      4813	coffcode.h	FUNCTION_34	ELSE_4
0x4009aa4	              0xc3	                                     ret	      4813	coffcode.h	FUNCTION_34	ELSE_4
coff_swap_filehdr_in	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,0:DO,0	99
0x4002b41	              0x55	                                push rbp	       170	peicode.h	FUNCTION_50
0x4002b42	          0x4889e5	                            mov rbp, rsp	       170	peicode.h	FUNCTION_50
0x4002b45	        0x4883ec30	                           sub rsp, 0x30	       170	peicode.h	FUNCTION_50
0x4002b49	        0x48897de8	             mov qword [rbp - 0x18], rdi	       170	peicode.h	FUNCTION_50
0x4002b4d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       170	peicode.h	FUNCTION_50
0x4002b51	        0x488955d8	             mov qword [rbp - 0x28], rdx	       170	peicode.h	FUNCTION_50
0x4002b55	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       171	peicode.h	FUNCTION_50
0x4002b59	        0x488945f0	             mov qword [rbp - 0x10], rax	       171	peicode.h	FUNCTION_50
0x4002b5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       172	peicode.h	FUNCTION_50
0x4002b61	        0x488945f8	                mov qword [rbp - 8], rax	       172	peicode.h	FUNCTION_50
0x4002b65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	peicode.h	FUNCTION_50
0x4002b69	        0x488b4008	                mov rax, qword [rax + 8]	       174	peicode.h	FUNCTION_50
0x4002b6d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       174	peicode.h	FUNCTION_50
0x4002b74	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       174	peicode.h	FUNCTION_50
0x4002b78	        0x4883c204	                              add rdx, 4	       174	peicode.h	FUNCTION_50
0x4002b7c	          0x4889d7	                            mov rdi, rdx	       174	peicode.h	FUNCTION_50
0x4002b7f	            0xffd0	                                call rax	       174	peicode.h	FUNCTION_50
0x4002b81	            0x89c2	                            mov edx, eax	       174	peicode.h	FUNCTION_50
0x4002b83	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	peicode.h	FUNCTION_50
0x4002b87	    0x668990d00800	              mov word [rax + 0x8d0], dx	       174	peicode.h	FUNCTION_50
0x4002b8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       175	peicode.h	FUNCTION_50
0x4002b92	        0x488b4008	                mov rax, qword [rax + 8]	       175	peicode.h	FUNCTION_50
0x4002b96	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       175	peicode.h	FUNCTION_50
0x4002b9d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       175	peicode.h	FUNCTION_50
0x4002ba1	        0x4883c206	                              add rdx, 6	       175	peicode.h	FUNCTION_50
0x4002ba5	          0x4889d7	                            mov rdi, rdx	       175	peicode.h	FUNCTION_50
0x4002ba8	            0xffd0	                                call rax	       175	peicode.h	FUNCTION_50
0x4002baa	            0x89c2	                            mov edx, eax	       175	peicode.h	FUNCTION_50
0x4002bac	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	peicode.h	FUNCTION_50
0x4002bb0	    0x8990d4080000	            mov dword [rax + 0x8d4], edx	       175	peicode.h	FUNCTION_50
0x4002bb6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       176	peicode.h	FUNCTION_50
0x4002bba	        0x488b4008	                mov rax, qword [rax + 8]	       176	peicode.h	FUNCTION_50
0x4002bbe	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       176	peicode.h	FUNCTION_50
0x4002bc5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       176	peicode.h	FUNCTION_50
0x4002bc9	        0x4883c208	                              add rdx, 8	       176	peicode.h	FUNCTION_50
0x4002bcd	          0x4889d7	                            mov rdi, rdx	       176	peicode.h	FUNCTION_50
0x4002bd0	            0xffd0	                                call rax	       176	peicode.h	FUNCTION_50
0x4002bd2	          0x4889c2	                            mov rdx, rax	       176	peicode.h	FUNCTION_50
0x4002bd5	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	peicode.h	FUNCTION_50
0x4002bd9	    0x488990d80800	            mov qword [rax + 0x8d8], rdx	       176	peicode.h	FUNCTION_50
0x4002be0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	peicode.h	FUNCTION_50
0x4002be4	        0x488b4008	                mov rax, qword [rax + 8]	       177	peicode.h	FUNCTION_50
0x4002be8	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       177	peicode.h	FUNCTION_50
0x4002bef	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       177	peicode.h	FUNCTION_50
0x4002bf3	        0x4883c210	                           add rdx, 0x10	       177	peicode.h	FUNCTION_50
0x4002bf7	          0x4889d7	                            mov rdi, rdx	       177	peicode.h	FUNCTION_50
0x4002bfa	            0xffd0	                                call rax	       177	peicode.h	FUNCTION_50
0x4002bfc	          0x4889c2	                            mov rdx, rax	       177	peicode.h	FUNCTION_50
0x4002bff	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	peicode.h	FUNCTION_50
0x4002c03	    0x488990e80800	            mov qword [rax + 0x8e8], rdx	       177	peicode.h	FUNCTION_50
0x4002c0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       178	peicode.h	FUNCTION_50
0x4002c0e	        0x488b4008	                mov rax, qword [rax + 8]	       178	peicode.h	FUNCTION_50
0x4002c12	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       178	peicode.h	FUNCTION_50
0x4002c19	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       178	peicode.h	FUNCTION_50
0x4002c1d	        0x4883c216	                           add rdx, 0x16	       178	peicode.h	FUNCTION_50
0x4002c21	          0x4889d7	                            mov rdi, rdx	       178	peicode.h	FUNCTION_50
0x4002c24	            0xffd0	                                call rax	       178	peicode.h	FUNCTION_50
0x4002c26	            0x89c2	                            mov edx, eax	       178	peicode.h	FUNCTION_50
0x4002c28	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	peicode.h	FUNCTION_50
0x4002c2c	    0x668990f20800	              mov word [rax + 0x8f2], dx	       178	peicode.h	FUNCTION_50
0x4002c33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	peicode.h	FUNCTION_50
0x4002c37	        0x488b4008	                mov rax, qword [rax + 8]	       179	peicode.h	FUNCTION_50
0x4002c3b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       179	peicode.h	FUNCTION_50
0x4002c42	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       179	peicode.h	FUNCTION_50
0x4002c46	        0x4883c20c	                            add rdx, 0xc	       179	peicode.h	FUNCTION_50
0x4002c4a	          0x4889d7	                            mov rdi, rdx	       179	peicode.h	FUNCTION_50
0x4002c4d	            0xffd0	                                call rax	       179	peicode.h	FUNCTION_50
0x4002c4f	          0x4889c2	                            mov rdx, rax	       179	peicode.h	FUNCTION_50
0x4002c52	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	peicode.h	FUNCTION_50
0x4002c56	    0x488990e00800	            mov qword [rax + 0x8e0], rdx	       179	peicode.h	FUNCTION_50
0x4002c5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	peicode.h	FUNCTION_50	IF_1
0x4002c61	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       183	peicode.h	FUNCTION_50	IF_1
0x4002c68	          0x4885c0	                           test rax, rax	       183	peicode.h	FUNCTION_50	IF_1
0x4002c6b	            0x743a	                            je 0x4002ca7	       183	peicode.h	FUNCTION_50	IF_1
0x4002c6d	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	peicode.h	FUNCTION_50	IF_1
0x4002c71	    0x488b80e00800	           mov rax, qword [rax + 0x8e0] 	       183	peicode.h	FUNCTION_50	IF_1
0x4002c78	          0x4885c0	                           test rax, rax	       183	peicode.h	FUNCTION_50	IF_1
0x4002c7b	            0x752a	                           jne 0x4002ca7	       183	peicode.h	FUNCTION_50	IF_1
0x4002c7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	peicode.h	FUNCTION_50	IF_1
0x4002c81	    0x48c780e80800	              mov qword [rax + 0x8e8], 0	       185	peicode.h	FUNCTION_50	IF_1
0x4002c8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	peicode.h	FUNCTION_50	IF_1
0x4002c90	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       186	peicode.h	FUNCTION_50	IF_1
0x4002c97	          0x83c808	                               or eax, 8	       186	peicode.h	FUNCTION_50	IF_1
0x4002c9a	            0x89c2	                            mov edx, eax	       186	peicode.h	FUNCTION_50	IF_1
0x4002c9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	peicode.h	FUNCTION_50	IF_1
0x4002ca0	    0x668990f20800	              mov word [rax + 0x8f2], dx	       186	peicode.h	FUNCTION_50	IF_1
0x4002ca7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	peicode.h	FUNCTION_50
0x4002cab	        0x488b4008	                mov rax, qword [rax + 8]	       189	peicode.h	FUNCTION_50
0x4002caf	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       189	peicode.h	FUNCTION_50
0x4002cb6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       189	peicode.h	FUNCTION_50
0x4002cba	        0x4883c214	                           add rdx, 0x14	       189	peicode.h	FUNCTION_50
0x4002cbe	          0x4889d7	                            mov rdi, rdx	       189	peicode.h	FUNCTION_50
0x4002cc1	            0xffd0	                                call rax	       189	peicode.h	FUNCTION_50
0x4002cc3	            0x89c2	                            mov edx, eax	       189	peicode.h	FUNCTION_50
0x4002cc5	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	peicode.h	FUNCTION_50
0x4002cc9	    0x668990f00800	              mov word [rax + 0x8f0], dx	       189	peicode.h	FUNCTION_50
0x4002cd0	              0x90	                                     nop	       190	peicode.h	FUNCTION_50
0x4002cd1	              0xc9	                                   leave	       190	peicode.h	FUNCTION_50
0x4002cd2	              0xc3	                                     ret	       190	peicode.h	FUNCTION_50
pex64_bfd_print_pdata	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,3:DO,0	31
0x400217e	              0x55	                                push rbp	       790	pei-x86_64.c	FUNCTION_73
0x400217f	          0x4889e5	                            mov rbp, rsp	       790	pei-x86_64.c	FUNCTION_73
0x4002182	        0x4883ec20	                           sub rsp, 0x20	       790	pei-x86_64.c	FUNCTION_73
0x4002186	        0x48897de8	             mov qword [rbp - 0x18], rdi	       790	pei-x86_64.c	FUNCTION_73
0x400218a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       790	pei-x86_64.c	FUNCTION_73
0x400218e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       791	pei-x86_64.c	FUNCTION_73	CALL_1
0x4002192	      0xbe00000000	                              mov esi, 0	       791	pei-x86_64.c	FUNCTION_73	CALL_1
0x4002197	          0x4889c7	                            mov rdi, rax	       791	pei-x86_64.c	FUNCTION_73	CALL_1
0x400219a	      0xe800000000	                          call 0x400219f	       791	pei-x86_64.c	FUNCTION_73	CALL_1
0x400219f	        0x488945f8	                mov qword [rbp - 8], rax	       791	pei-x86_64.c	FUNCTION_73	CALL_1
0x40021a3	      0x48837df800	                  cmp qword [rbp - 8], 0	       793	pei-x86_64.c	FUNCTION_73	IF_1
0x40021a8	            0x7419	                            je 0x40021c3	       793	pei-x86_64.c	FUNCTION_73	IF_1
0x40021aa	        0x488b55f8	                mov rdx, qword [rbp - 8]	       794	pei-x86_64.c	FUNCTION_73	CALL_2
0x40021ae	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       794	pei-x86_64.c	FUNCTION_73	CALL_2
0x40021b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       794	pei-x86_64.c	FUNCTION_73	CALL_2
0x40021b6	          0x4889ce	                            mov rsi, rcx	       794	pei-x86_64.c	FUNCTION_73	CALL_2
0x40021b9	          0x4889c7	                            mov rdi, rax	       794	pei-x86_64.c	FUNCTION_73	CALL_2
0x40021bc	      0xe81af2ffff	  call sym.pex64_bfd_print_pdata_section	       794	pei-x86_64.c	FUNCTION_73	CALL_2
0x40021c1	            0xeb2d	                           jmp 0x40021f0	       794	pei-x86_64.c	FUNCTION_73	CALL_2
0x40021c3	    0xc70500000000	               mov dword [0x040021cd], 0	       796	pei-x86_64.c	FUNCTION_73
0x40021cd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       797	pei-x86_64.c	FUNCTION_73	CALL_3
0x40021d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	pei-x86_64.c	FUNCTION_73	CALL_3
0x40021d5	      0xbe00000000	                              mov esi, 0	       797	pei-x86_64.c	FUNCTION_73	CALL_3
0x40021da	          0x4889c7	                            mov rdi, rax	       797	pei-x86_64.c	FUNCTION_73	CALL_3
0x40021dd	      0xe800000000	                          call 0x40021e2	       797	pei-x86_64.c	FUNCTION_73	CALL_3
0x40021e2	    0x8b0500000000	            mov eax, dword [0x040021e8] 	       798	pei-x86_64.c	FUNCTION_73
0x40021e8	            0x85c0	                           test eax, eax	       798	pei-x86_64.c	FUNCTION_73
0x40021ea	           0xf9fc0	                                 setg al	       798	pei-x86_64.c	FUNCTION_73
0x40021ed	           0xfb6c0	                           movzx eax, al	       798	pei-x86_64.c	FUNCTION_73
0x40021f0	              0xc9	                                   leave	       799	pei-x86_64.c	FUNCTION_73
0x40021f1	              0xc3	                                     ret	       799	pei-x86_64.c	FUNCTION_73
buy_and_read	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,2:CALL,3:DO,0	37
0x4008af0	              0x55	                                push rbp	      4201	coffcode.h	FUNCTION_31
0x4008af1	          0x4889e5	                            mov rbp, rsp	      4201	coffcode.h	FUNCTION_31
0x4008af4	        0x4883ec30	                           sub rsp, 0x30	      4201	coffcode.h	FUNCTION_31
0x4008af8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4201	coffcode.h	FUNCTION_31
0x4008afc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4201	coffcode.h	FUNCTION_31
0x4008b00	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4201	coffcode.h	FUNCTION_31
0x4008b04	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4202	coffcode.h	FUNCTION_31	CALL_1
0x4008b08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4202	coffcode.h	FUNCTION_31	CALL_1
0x4008b0c	          0x4889d6	                            mov rsi, rdx	      4202	coffcode.h	FUNCTION_31	CALL_1
0x4008b0f	          0x4889c7	                            mov rdi, rax	      4202	coffcode.h	FUNCTION_31	CALL_1
0x4008b12	      0xe800000000	                          call 0x4008b17	      4202	coffcode.h	FUNCTION_31	CALL_1
0x4008b17	        0x488945f8	                mov qword [rbp - 8], rax	      4202	coffcode.h	FUNCTION_31	CALL_1
0x4008b1b	      0x48837df800	                  cmp qword [rbp - 8], 0	      4204	coffcode.h	FUNCTION_31	IF_1
0x4008b20	            0x7507	                           jne 0x4008b29	      4204	coffcode.h	FUNCTION_31	IF_1
0x4008b22	      0xb800000000	                              mov eax, 0	      4205	coffcode.h	FUNCTION_31	IF_1
0x4008b27	            0xeb44	                           jmp 0x4008b6d	      4205	coffcode.h	FUNCTION_31	IF_1
0x4008b29	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b31	      0xba00000000	                              mov edx, 0	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b36	          0x4889ce	                            mov rsi, rcx	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b39	          0x4889c7	                            mov rdi, rax	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b3c	      0xe800000000	                          call 0x4008b41	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b41	            0x85c0	                           test eax, eax	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b43	            0x751d	                           jne 0x4008b62	      4206	coffcode.h	FUNCTION_31	IF_2	CALL_2
0x4008b45	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b49	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b51	          0x4889ce	                            mov rsi, rcx	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b54	          0x4889c7	                            mov rdi, rax	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b57	      0xe800000000	                          call 0x4008b5c	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b5c	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b60	            0x7407	                            je 0x4008b69	      4207	coffcode.h	FUNCTION_31	IF_2	CALL_3
0x4008b62	      0xb800000000	                              mov eax, 0	      4208	coffcode.h	FUNCTION_31	IF_2
0x4008b67	            0xeb04	                           jmp 0x4008b6d	      4208	coffcode.h	FUNCTION_31	IF_2
0x4008b69	        0x488b45f8	                mov rax, qword [rbp - 8]	      4209	coffcode.h	FUNCTION_31
0x4008b6d	              0xc9	                                   leave	      4210	coffcode.h	FUNCTION_31
0x4008b6e	              0xc3	                                     ret	      4210	coffcode.h	FUNCTION_31
coff_swap_reloc_in	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,1:DO,0	42
0x4002a0d	              0x55	                                push rbp	       131	peicode.h	FUNCTION_48
0x4002a0e	          0x4889e5	                            mov rbp, rsp	       131	peicode.h	FUNCTION_48
0x4002a11	        0x4883ec30	                           sub rsp, 0x30	       131	peicode.h	FUNCTION_48
0x4002a15	        0x48897de8	             mov qword [rbp - 0x18], rdi	       131	peicode.h	FUNCTION_48
0x4002a19	        0x488975e0	             mov qword [rbp - 0x20], rsi	       131	peicode.h	FUNCTION_48
0x4002a1d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       131	peicode.h	FUNCTION_48
0x4002a21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       132	peicode.h	FUNCTION_48
0x4002a25	        0x488945f0	             mov qword [rbp - 0x10], rax	       132	peicode.h	FUNCTION_48
0x4002a29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	peicode.h	FUNCTION_48
0x4002a2d	        0x488945f8	                mov qword [rbp - 8], rax	       133	peicode.h	FUNCTION_48
0x4002a31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       135	peicode.h	FUNCTION_48
0x4002a35	        0x488b4008	                mov rax, qword [rax + 8]	       135	peicode.h	FUNCTION_48
0x4002a39	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       135	peicode.h	FUNCTION_48
0x4002a40	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       135	peicode.h	FUNCTION_48
0x4002a44	          0x4889d7	                            mov rdi, rdx	       135	peicode.h	FUNCTION_48
0x4002a47	            0xffd0	                                call rax	       135	peicode.h	FUNCTION_48
0x4002a49	          0x4889c2	                            mov rdx, rax	       135	peicode.h	FUNCTION_48
0x4002a4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	peicode.h	FUNCTION_48
0x4002a50	          0x488910	                    mov qword [rax], rdx	       135	peicode.h	FUNCTION_48
0x4002a53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       136	peicode.h	FUNCTION_48
0x4002a57	        0x488b4008	                mov rax, qword [rax + 8]	       136	peicode.h	FUNCTION_48
0x4002a5b	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       136	peicode.h	FUNCTION_48
0x4002a62	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       136	peicode.h	FUNCTION_48
0x4002a66	        0x4883c204	                              add rdx, 4	       136	peicode.h	FUNCTION_48
0x4002a6a	          0x4889d7	                            mov rdi, rdx	       136	peicode.h	FUNCTION_48
0x4002a6d	            0xffd0	                                call rax	       136	peicode.h	FUNCTION_48
0x4002a6f	          0x4889c2	                            mov rdx, rax	       136	peicode.h	FUNCTION_48
0x4002a72	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	peicode.h	FUNCTION_48
0x4002a76	        0x48895008	                mov qword [rax + 8], rdx	       136	peicode.h	FUNCTION_48
0x4002a7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	peicode.h	FUNCTION_48
0x4002a7e	        0x488b4008	                mov rax, qword [rax + 8]	       137	peicode.h	FUNCTION_48
0x4002a82	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       137	peicode.h	FUNCTION_48
0x4002a89	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       137	peicode.h	FUNCTION_48
0x4002a8d	        0x4883c208	                              add rdx, 8	       137	peicode.h	FUNCTION_48
0x4002a91	          0x4889d7	                            mov rdi, rdx	       137	peicode.h	FUNCTION_48
0x4002a94	            0xffd0	                                call rax	       137	peicode.h	FUNCTION_48
0x4002a96	            0x89c2	                            mov edx, eax	       137	peicode.h	FUNCTION_48
0x4002a98	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	peicode.h	FUNCTION_48
0x4002a9c	        0x66895010	               mov word [rax + 0x10], dx	       137	peicode.h	FUNCTION_48
0x4002aa0	              0x90	                                     nop	       141	peicode.h	FUNCTION_48
0x4002aa1	              0xc9	                                   leave	       141	peicode.h	FUNCTION_48
0x4002aa2	              0xc3	                                     ret	       141	peicode.h	FUNCTION_48
sort_by_secaddr	FOR,0:functions,0:WHILE,0:ELSE,1:SWITCH,0:IF,2:CALL,0:DO,0	29
0x4006a81	              0x55	                                push rbp	      2858	coffcode.h	FUNCTION_24
0x4006a82	          0x4889e5	                            mov rbp, rsp	      2858	coffcode.h	FUNCTION_24
0x4006a85	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2858	coffcode.h	FUNCTION_24
0x4006a89	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2858	coffcode.h	FUNCTION_24
0x4006a8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2859	coffcode.h	FUNCTION_24
0x4006a91	          0x488b00	                    mov rax, qword [rax]	      2859	coffcode.h	FUNCTION_24
0x4006a94	        0x488945f0	             mov qword [rbp - 0x10], rax	      2859	coffcode.h	FUNCTION_24
0x4006a98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2860	coffcode.h	FUNCTION_24
0x4006a9c	          0x488b00	                    mov rax, qword [rax]	      2860	coffcode.h	FUNCTION_24
0x4006a9f	        0x488945f8	                mov qword [rbp - 8], rax	      2860	coffcode.h	FUNCTION_24
0x4006aa3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2862	coffcode.h	FUNCTION_24	IF_1
0x4006aa7	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2862	coffcode.h	FUNCTION_24	IF_1
0x4006aab	        0x488b45f8	                mov rax, qword [rbp - 8]	      2862	coffcode.h	FUNCTION_24	IF_1
0x4006aaf	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2862	coffcode.h	FUNCTION_24	IF_1
0x4006ab3	          0x4839c2	                            cmp rdx, rax	      2862	coffcode.h	FUNCTION_24	IF_1
0x4006ab6	            0x7307	                           jae 0x4006abf	      2862	coffcode.h	FUNCTION_24	IF_1
0x4006ab8	      0xb8ffffffff	                     mov eax, 0xffffffff	      2863	coffcode.h	FUNCTION_24	IF_1
0x4006abd	            0xeb21	                           jmp 0x4006ae0	      2863	coffcode.h	FUNCTION_24	IF_1
0x4006abf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2864	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006ac3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2864	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006ac7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2864	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006acb	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2864	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006acf	          0x4839c2	                            cmp rdx, rax	      2864	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006ad2	            0x7607	                           jbe 0x4006adb	      2864	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006ad4	      0xb801000000	                              mov eax, 1	      2865	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006ad9	            0xeb05	                           jmp 0x4006ae0	      2865	coffcode.h	FUNCTION_24	ELSE_1	IF_2
0x4006adb	      0xb800000000	                              mov eax, 0	      2867	coffcode.h	FUNCTION_24
0x4006ae0	              0x5d	                                 pop rbp	      2868	coffcode.h	FUNCTION_24
0x4006ae1	              0xc3	                                     ret	      2868	coffcode.h	FUNCTION_24
coff_set_alignment_hook	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,0:DO,0	213
0x4006140	              0x55	                                push rbp	      1841	coffcode.h	FUNCTION_14
0x4006141	          0x4889e5	                            mov rbp, rsp	      1841	coffcode.h	FUNCTION_14
0x4006144	              0x53	                                push rbx	      1841	coffcode.h	FUNCTION_14
0x4006145	    0x4881ec980000	                           sub rsp, 0x98	      1841	coffcode.h	FUNCTION_14
0x400614c	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1841	coffcode.h	FUNCTION_14
0x4006153	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1841	coffcode.h	FUNCTION_14
0x400615a	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      1841	coffcode.h	FUNCTION_14
0x4006161	    0x64488b042528	                mov rax, qword fs:[0x28]	      1841	coffcode.h	FUNCTION_14
0x400616a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1841	coffcode.h	FUNCTION_14
0x400616e	            0x31c0	                            xor eax, eax	      1841	coffcode.h	FUNCTION_14
0x4006170	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1842	coffcode.h	FUNCTION_14
0x4006177	        0x48894590	             mov qword [rbp - 0x70], rax	      1842	coffcode.h	FUNCTION_14
0x400617b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1845	coffcode.h	FUNCTION_14
0x400617f	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1845	coffcode.h	FUNCTION_14
0x4006183	      0x250000f000	                       and eax, 0xf00000	      1844	coffcode.h	FUNCTION_14
0x4006188	          0x89458c	             mov dword [rbp - 0x74], eax	      1844	coffcode.h	FUNCTION_14
0x400618b	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x400618e	      0x3d00007000	                       cmp eax, 0x700000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x4006193	            0x7478	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x4006195	      0x3d00007000	                       cmp eax, 0x700000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x400619a	            0x7735	                            ja 0x40061d1	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x400619c	      0x3d00003000	                       cmp eax, 0x300000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061a1	            0x746a	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061a3	      0x3d00003000	                       cmp eax, 0x300000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061a8	            0x7710	                            ja 0x40061ba	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061aa	      0x3d00001000	                       cmp eax, 0x100000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061af	            0x745c	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061b1	      0x3d00002000	                       cmp eax, 0x200000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061b6	            0x7455	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061b8	            0xeb67	                           jmp 0x4006221	      1867	coffcode.h	FUNCTION_14	SWITCH_1
0x40061ba	      0x3d00005000	                       cmp eax, 0x500000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061bf	            0x744c	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061c1	      0x3d00006000	                       cmp eax, 0x600000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061c6	            0x7445	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061c8	      0x3d00004000	                       cmp eax, 0x400000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061cd	            0x743e	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061cf	            0xeb50	                           jmp 0x4006221	      1867	coffcode.h	FUNCTION_14	SWITCH_1
0x40061d1	      0x3d0000b000	                       cmp eax, 0xb00000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061d6	            0x7435	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061d8	      0x3d0000b000	                       cmp eax, 0xb00000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061dd	            0x7717	                            ja 0x40061f6	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061df	      0x3d00009000	                       cmp eax, 0x900000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061e4	            0x7427	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061e6	      0x3d0000a000	                       cmp eax, 0xa00000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061eb	            0x7420	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061ed	      0x3d00008000	                       cmp eax, 0x800000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061f2	            0x7419	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061f4	            0xeb2b	                           jmp 0x4006221	      1867	coffcode.h	FUNCTION_14	SWITCH_1
0x40061f6	      0x3d0000d000	                       cmp eax, 0xd00000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061fb	            0x7410	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x40061fd	      0x3d0000e000	                       cmp eax, 0xe00000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x4006202	            0x7409	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x4006204	      0x3d0000c000	                       cmp eax, 0xc00000	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x4006209	            0x7402	                            je 0x400620d	      1847	coffcode.h	FUNCTION_14	SWITCH_1
0x400620b	            0xeb14	                           jmp 0x4006221	      1867	coffcode.h	FUNCTION_14	SWITCH_1
0x400620d	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1864	coffcode.h	FUNCTION_14	SWITCH_1	CALL_1
0x4006210	          0xc1e814	                           shr eax, 0x14	      1864	coffcode.h	FUNCTION_14	SWITCH_1	CALL_1
0x4006213	          0x8d50ff	                      lea edx, [rax - 1]	      1864	coffcode.h	FUNCTION_14	SWITCH_1	CALL_1
0x4006216	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1864	coffcode.h	FUNCTION_14	SWITCH_1	CALL_1
0x400621d	          0x895070	             mov dword [rax + 0x70], edx	      1864	coffcode.h	FUNCTION_14	SWITCH_1	CALL_1
0x4006220	              0x90	                                     nop	      1865	coffcode.h	FUNCTION_14	SWITCH_1
0x4006221	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1874	coffcode.h	FUNCTION_14	IF_1	CALL_2
0x4006228	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1874	coffcode.h	FUNCTION_14	IF_1	CALL_2
0x400622f	          0x4885c0	                           test rax, rax	      1874	coffcode.h	FUNCTION_14	IF_1	CALL_2
0x4006232	            0x7556	                           jne 0x400628a	      1874	coffcode.h	FUNCTION_14	IF_1	CALL_2
0x4006234	    0x48c745986000	           mov qword [rbp - 0x68], 0x60 	      1876	coffcode.h	FUNCTION_14	IF_1
0x400623c	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x4006240	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x4006247	          0x4889d6	                            mov rsi, rdx	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x400624a	          0x4889c7	                            mov rdi, rax	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x400624d	      0xe800000000	                          call 0x4006252	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x4006252	          0x4889c2	                            mov rdx, rax	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x4006255	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x400625c	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1877	coffcode.h	FUNCTION_14	IF_1	CALL_3
0x4006263	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1878	coffcode.h	FUNCTION_14	IF_1	IF_2
0x400626a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1878	coffcode.h	FUNCTION_14	IF_1	IF_2
0x4006271	          0x4885c0	                           test rax, rax	      1878	coffcode.h	FUNCTION_14	IF_1	IF_2
0x4006274	            0x7514	                           jne 0x400628a	      1878	coffcode.h	FUNCTION_14	IF_1	IF_2
0x4006276	      0xba00000000	                              mov edx, 0	      1880	coffcode.h	FUNCTION_14	IF_1	CALL_4
0x400627b	      0xbe58070000	                          mov esi, 0x758	      1880	coffcode.h	FUNCTION_14	IF_1	CALL_4
0x4006280	      0xbf00000000	                              mov edi, 0	      1880	coffcode.h	FUNCTION_14	IF_1	CALL_4
0x4006285	      0xe800000000	                          call 0x400628a	      1880	coffcode.h	FUNCTION_14	IF_1	CALL_4
0x400628a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1883	coffcode.h	FUNCTION_14	IF_3	CALL_5
0x4006291	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1883	coffcode.h	FUNCTION_14	IF_3	CALL_5
0x4006298	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1883	coffcode.h	FUNCTION_14	IF_3	CALL_5
0x400629c	          0x4885c0	                           test rax, rax	      1883	coffcode.h	FUNCTION_14	IF_3	CALL_5
0x400629f	            0x755b	                           jne 0x40062fc	      1883	coffcode.h	FUNCTION_14	IF_3	CALL_5
0x40062a1	    0x48c745981000	           mov qword [rbp - 0x68], 0x10 	      1885	coffcode.h	FUNCTION_14	IF_3
0x40062a9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062b0	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062b7	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062bb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062c2	          0x4889d6	                            mov rsi, rdx	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062c5	          0x4889c7	                            mov rdi, rax	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062c8	      0xe800000000	                          call 0x40062cd	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062cd	        0x48894358	             mov qword [rbx + 0x58], rax	      1886	coffcode.h	FUNCTION_14	IF_3	CALL_7
0x40062d1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1887	coffcode.h	FUNCTION_14	IF_3	IF_4	CALL_8
0x40062d8	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1887	coffcode.h	FUNCTION_14	IF_3	IF_4	CALL_8
0x40062df	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1887	coffcode.h	FUNCTION_14	IF_3	IF_4	CALL_8
0x40062e3	          0x4885c0	                           test rax, rax	      1887	coffcode.h	FUNCTION_14	IF_3	IF_4	CALL_8
0x40062e6	            0x7514	                           jne 0x40062fc	      1887	coffcode.h	FUNCTION_14	IF_3	IF_4	CALL_8
0x40062e8	      0xba00000000	                              mov edx, 0	      1889	coffcode.h	FUNCTION_14	IF_3	CALL_9
0x40062ed	      0xbe61070000	                          mov esi, 0x761	      1889	coffcode.h	FUNCTION_14	IF_3	CALL_9
0x40062f2	      0xbf00000000	                              mov edi, 0	      1889	coffcode.h	FUNCTION_14	IF_3	CALL_9
0x40062f7	      0xe800000000	                          call 0x40062fc	      1889	coffcode.h	FUNCTION_14	IF_3	CALL_9
0x40062fc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1891	coffcode.h	FUNCTION_14	CALL_10
0x4006303	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1891	coffcode.h	FUNCTION_14	CALL_10
0x400630a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1891	coffcode.h	FUNCTION_14	CALL_10
0x400630e	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1891	coffcode.h	FUNCTION_14	CALL_10
0x4006312	        0x488b5208	                mov rdx, qword [rdx + 8]	      1891	coffcode.h	FUNCTION_14	CALL_10
0x4006316	          0x488910	                    mov qword [rax], rdx	      1891	coffcode.h	FUNCTION_14	CALL_10
0x4006319	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1892	coffcode.h	FUNCTION_14	CALL_11
0x4006320	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1892	coffcode.h	FUNCTION_14	CALL_11
0x4006327	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1892	coffcode.h	FUNCTION_14	CALL_11
0x400632b	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1892	coffcode.h	FUNCTION_14	CALL_11
0x400632f	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      1892	coffcode.h	FUNCTION_14	CALL_11
0x4006333	        0x48895008	                mov qword [rax + 8], rdx	      1892	coffcode.h	FUNCTION_14	CALL_11
0x4006337	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1894	coffcode.h	FUNCTION_14
0x400633b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1894	coffcode.h	FUNCTION_14
0x400633f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1894	coffcode.h	FUNCTION_14
0x4006346	        0x48895030	             mov qword [rax + 0x30], rdx	      1894	coffcode.h	FUNCTION_14
0x400634a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1897	coffcode.h	FUNCTION_14	IF_5
0x400634e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1897	coffcode.h	FUNCTION_14	IF_5
0x4006352	      0x2500000001	                      and eax, 0x1000000	      1897	coffcode.h	FUNCTION_14	IF_5
0x4006357	          0x4885c0	                           test rax, rax	      1897	coffcode.h	FUNCTION_14	IF_5
0x400635a	     0xf840b010000	                            je 0x400646b	      1897	coffcode.h	FUNCTION_14	IF_5
0x4006360	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1901	coffcode.h	FUNCTION_14	IF_5	CALL_12
0x4006367	          0x4889c7	                            mov rdi, rax	      1901	coffcode.h	FUNCTION_14	IF_5	CALL_12
0x400636a	      0xe800000000	                          call 0x400636f	      1901	coffcode.h	FUNCTION_14	IF_5	CALL_12
0x400636f	        0x488945a0	             mov qword [rbp - 0x60], rax	      1901	coffcode.h	FUNCTION_14	IF_5	CALL_12
0x4006373	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1902	coffcode.h	FUNCTION_14	IF_5	CALL_13
0x400637a	        0x488b4008	                mov rax, qword [rax + 8]	      1902	coffcode.h	FUNCTION_14	IF_5	CALL_13
0x400637e	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1902	coffcode.h	FUNCTION_14	IF_5	CALL_13
0x4006385	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1902	coffcode.h	FUNCTION_14	IF_5	CALL_13
0x4006388	            0x89c0	                            mov eax, eax	      1902	coffcode.h	FUNCTION_14	IF_5	CALL_13
0x400638a	        0x488945a8	             mov qword [rbp - 0x58], rax	      1902	coffcode.h	FUNCTION_14	IF_5	CALL_13
0x400638e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x4006392	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x4006396	          0x4889c1	                            mov rcx, rax	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x4006399	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x40063a0	      0xba00000000	                              mov edx, 0	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x40063a5	          0x4889ce	                            mov rsi, rcx	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x40063a8	          0x4889c7	                            mov rdi, rax	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x40063ab	      0xe800000000	                          call 0x40063b0	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x40063b0	            0x85c0	                           test eax, eax	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x40063b2	     0xf85ee000000	                           jne 0x40064a6	      1904	coffcode.h	FUNCTION_14	IF_5	IF_6	CALL_14
0x40063b8	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063bf	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063c3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063c7	          0x4889ce	                            mov rsi, rcx	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063ca	          0x4889c7	                            mov rdi, rax	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063cd	      0xe800000000	                          call 0x40063d2	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063d2	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063d6	     0xf85cd000000	                           jne 0x40064a9	      1906	coffcode.h	FUNCTION_14	IF_5	IF_7	CALL_15
0x40063dc	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1909	coffcode.h	FUNCTION_14	IF_5	CALL_16
0x40063e0	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1909	coffcode.h	FUNCTION_14	IF_5	CALL_16
0x40063e4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1909	coffcode.h	FUNCTION_14	IF_5	CALL_16
0x40063eb	          0x4889ce	                            mov rsi, rcx	      1909	coffcode.h	FUNCTION_14	IF_5	CALL_16
0x40063ee	          0x4889c7	                            mov rdi, rax	      1909	coffcode.h	FUNCTION_14	IF_5	CALL_16
0x40063f1	      0xe817c6ffff	             call sym.coff_swap_reloc_in	      1909	coffcode.h	FUNCTION_14	IF_5	CALL_16
0x40063f6	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x40063fa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x4006401	      0xba00000000	                              mov edx, 0	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x4006406	          0x4889ce	                            mov rsi, rcx	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x4006409	          0x4889c7	                            mov rdi, rax	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x400640c	      0xe800000000	                          call 0x4006411	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x4006411	            0x85c0	                           test eax, eax	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x4006413	     0xf8593000000	                           jne 0x40064ac	      1910	coffcode.h	FUNCTION_14	IF_5	IF_8	CALL_17
0x4006419	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1912	coffcode.h	FUNCTION_14	IF_5
0x400641d	        0x488d50ff	                      lea rdx, [rax - 1]	      1912	coffcode.h	FUNCTION_14	IF_5
0x4006421	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1912	coffcode.h	FUNCTION_14	IF_5
0x4006425	        0x48895038	             mov qword [rax + 0x38], rdx	      1912	coffcode.h	FUNCTION_14	IF_5
0x4006429	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1912	coffcode.h	FUNCTION_14	IF_5
0x400642d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1912	coffcode.h	FUNCTION_14	IF_5
0x4006431	            0x89c2	                            mov edx, eax	      1912	coffcode.h	FUNCTION_14	IF_5
0x4006433	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1912	coffcode.h	FUNCTION_14	IF_5
0x400643a	    0x899088000000	             mov dword [rax + 0x88], edx	      1912	coffcode.h	FUNCTION_14	IF_5
0x4006440	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1913	coffcode.h	FUNCTION_14	IF_5
0x4006447	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1913	coffcode.h	FUNCTION_14	IF_5
0x400644e	          0x4889c2	                            mov rdx, rax	      1913	coffcode.h	FUNCTION_14	IF_5
0x4006451	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1913	coffcode.h	FUNCTION_14	IF_5
0x4006455	          0x4801d0	                            add rax, rdx	      1913	coffcode.h	FUNCTION_14	IF_5
0x4006458	          0x4889c2	                            mov rdx, rax	      1913	coffcode.h	FUNCTION_14	IF_5
0x400645b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1913	coffcode.h	FUNCTION_14	IF_5
0x4006462	    0x488990980000	             mov qword [rax + 0x98], rdx	      1913	coffcode.h	FUNCTION_14	IF_5
0x4006469	            0xeb42	                           jmp 0x40064ad	      1913	coffcode.h	FUNCTION_14	IF_5
0x400646b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1915	coffcode.h	FUNCTION_14	ELSE_1	IF_9
0x400646f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1915	coffcode.h	FUNCTION_14	ELSE_1	IF_9
0x4006473	    0x483dffff0000	                         cmp rax, 0xffff	      1915	coffcode.h	FUNCTION_14	ELSE_1	IF_9
0x4006479	            0x7532	                           jne 0x40064ad	      1915	coffcode.h	FUNCTION_14	ELSE_1	IF_9
0x400647b	      0xbe00000000	                              mov esi, 0	      1917	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_19
0x4006480	      0xbf00000000	                              mov edi, 0	      1917	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_19
0x4006485	      0xe800000000	                          call 0x400648a	      1917	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_19
0x400648a	          0x4889c2	                            mov rdx, rax	      1917	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_19
0x400648d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1916	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_18
0x4006494	          0x4889c6	                            mov rsi, rax	      1916	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_18
0x4006497	          0x4889d7	                            mov rdi, rdx	      1916	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_18
0x400649a	      0xb800000000	                              mov eax, 0	      1916	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_18
0x400649f	      0xe800000000	                          call 0x40064a4	      1916	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_18
0x40064a4	            0xeb07	                           jmp 0x40064ad	      1916	coffcode.h	FUNCTION_14	ELSE_1	IF_9	CALL_18
0x40064a6	              0x90	                                     nop	      1905	coffcode.h	FUNCTION_14	IF_5	IF_6
0x40064a7	            0xeb04	                           jmp 0x40064ad	      1905	coffcode.h	FUNCTION_14	IF_5	IF_6
0x40064a9	              0x90	                                     nop	      1907	coffcode.h	FUNCTION_14	IF_5	IF_7
0x40064aa	            0xeb01	                           jmp 0x40064ad	      1907	coffcode.h	FUNCTION_14	IF_5	IF_7
0x40064ac	              0x90	                                     nop	      1911	coffcode.h	FUNCTION_14	IF_5	IF_8
0x40064ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1919	coffcode.h	FUNCTION_14
0x40064b1	    0x644833042528	                xor rax, qword fs:[0x28]	      1919	coffcode.h	FUNCTION_14
0x40064ba	            0x7405	                            je 0x40064c1	      1919	coffcode.h	FUNCTION_14
0x40064bc	      0xe800000000	                          call 0x40064c1	      1919	coffcode.h	FUNCTION_14
0x40064c1	    0x4881c4980000	                           add rsp, 0x98	      1919	coffcode.h	FUNCTION_14
0x40064c8	              0x5b	                                 pop rbx	      1919	coffcode.h	FUNCTION_14
0x40064c9	              0x5d	                                 pop rbp	      1919	coffcode.h	FUNCTION_14
0x40064ca	              0xc3	                                     ret	      1919	coffcode.h	FUNCTION_14
pex64_dump_xdata	FOR,2:functions,0:WHILE,0:ELSE,2:SWITCH,2:IF,13:CALL,39:DO,0	413
0x4000be1	              0x55	                                push rbp	       352	pei-x86_64.c	FUNCTION_69
0x4000be2	          0x4889e5	                            mov rbp, rsp	       352	pei-x86_64.c	FUNCTION_69
0x4000be5	              0x53	                                push rbx	       352	pei-x86_64.c	FUNCTION_69
0x4000be6	    0x4881ecd80000	                           sub rsp, 0xd8	       352	pei-x86_64.c	FUNCTION_69
0x4000bed	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       352	pei-x86_64.c	FUNCTION_69
0x4000bf4	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       352	pei-x86_64.c	FUNCTION_69
0x4000bfb	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       352	pei-x86_64.c	FUNCTION_69
0x4000c02	    0x48898d30ffff	             mov qword [rbp - 0xd0], rcx	       352	pei-x86_64.c	FUNCTION_69
0x4000c09	    0x4c898528ffff	              mov qword [rbp - 0xd8], r8	       352	pei-x86_64.c	FUNCTION_69
0x4000c10	    0x4c898d20ffff	              mov qword [rbp - 0xe0], r9	       352	pei-x86_64.c	FUNCTION_69
0x4000c17	    0x64488b042528	                mov rax, qword fs:[0x28]	       352	pei-x86_64.c	FUNCTION_69
0x4000c20	        0x488945e8	             mov qword [rbp - 0x18], rax	       352	pei-x86_64.c	FUNCTION_69
0x4000c24	            0x31c0	                            xor eax, eax	       352	pei-x86_64.c	FUNCTION_69
0x4000c26	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       355	pei-x86_64.c	FUNCTION_69
0x4000c2d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       355	pei-x86_64.c	FUNCTION_69
0x4000c31	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       355	pei-x86_64.c	FUNCTION_69
0x4000c38	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       356	pei-x86_64.c	FUNCTION_69
0x4000c3f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       356	pei-x86_64.c	FUNCTION_69
0x4000c43	          0x4885c0	                           test rax, rax	       356	pei-x86_64.c	FUNCTION_69
0x4000c46	            0x740d	                            je 0x4000c55	       356	pei-x86_64.c	FUNCTION_69
0x4000c48	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       356	pei-x86_64.c	FUNCTION_69
0x4000c4f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       356	pei-x86_64.c	FUNCTION_69
0x4000c53	            0xeb0b	                           jmp 0x4000c60	       356	pei-x86_64.c	FUNCTION_69
0x4000c55	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       356	pei-x86_64.c	FUNCTION_69
0x4000c5c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       356	pei-x86_64.c	FUNCTION_69
0x4000c60	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       356	pei-x86_64.c	FUNCTION_69
0x4000c67	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c6e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c72	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c79	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c80	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c87	          0x4829c2	                            sub rdx, rax	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c8a	          0x4889d0	                            mov rax, rdx	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c8d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       359	pei-x86_64.c	FUNCTION_69	CALL_1
0x4000c94	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       360	pei-x86_64.c	FUNCTION_69
0x4000c9b	    0x48298568ffff	             sub qword [rbp - 0x98], rax	       360	pei-x86_64.c	FUNCTION_69
0x4000ca2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       363	pei-x86_64.c	FUNCTION_69	IF_1
0x4000ca9	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       363	pei-x86_64.c	FUNCTION_69	IF_1
0x4000cb0	            0x722e	                            jb 0x4000ce0	       363	pei-x86_64.c	FUNCTION_69	IF_1
0x4000cb2	      0xbe00000000	                              mov esi, 0	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cb7	      0xbf00000000	                              mov edi, 0	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cbc	      0xe800000000	                          call 0x4000cc1	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cc1	          0x4889c2	                            mov rdx, rax	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cc4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000ccb	          0x4889d6	                            mov rsi, rdx	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cce	          0x4889c7	                            mov rdi, rax	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cd1	      0xb800000000	                              mov eax, 0	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cd6	      0xe800000000	                          call 0x4000cdb	       365	pei-x86_64.c	FUNCTION_69	IF_1	CALL_3
0x4000cdb	      0xe985060000	                           jmp 0x4001365	       366	pei-x86_64.c	FUNCTION_69	IF_1
0x4000ce0	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       369	pei-x86_64.c	FUNCTION_69	IF_2
0x4000ce8	            0x7461	                            je 0x4000d4b	       369	pei-x86_64.c	FUNCTION_69	IF_2
0x4000cea	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       371	pei-x86_64.c	FUNCTION_69	IF_2
0x4000cf1	          0x488b00	                    mov rax, qword [rax]	       371	pei-x86_64.c	FUNCTION_69	IF_2
0x4000cf4	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       371	pei-x86_64.c	FUNCTION_69	IF_2
0x4000cfb	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       371	pei-x86_64.c	FUNCTION_69	IF_2
0x4000d02	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       373	pei-x86_64.c	FUNCTION_69	IF_2	IF_3
0x4000d09	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       373	pei-x86_64.c	FUNCTION_69	IF_2	IF_3
0x4000d10	            0x7647	                           jbe 0x4000d59	       373	pei-x86_64.c	FUNCTION_69	IF_2	IF_3
0x4000d12	      0xbe00000000	                              mov esi, 0	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d17	      0xbf00000000	                              mov edi, 0	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d1c	      0xe800000000	                          call 0x4000d21	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d21	          0x4889c2	                            mov rdx, rax	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d24	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d2b	          0x4889d6	                            mov rsi, rdx	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d2e	          0x4889c7	                            mov rdi, rax	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d31	      0xb800000000	                              mov eax, 0	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d36	      0xe800000000	                          call 0x4000d3b	       375	pei-x86_64.c	FUNCTION_69	IF_2	IF_3	CALL_5
0x4000d3b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       376	pei-x86_64.c	FUNCTION_69	IF_2	IF_3
0x4000d42	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       376	pei-x86_64.c	FUNCTION_69	IF_2	IF_3
0x4000d49	            0xeb0e	                           jmp 0x4000d59	       376	pei-x86_64.c	FUNCTION_69	IF_2	IF_3
0x4000d4b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       380	pei-x86_64.c	FUNCTION_69	ELSE_1
0x4000d52	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       380	pei-x86_64.c	FUNCTION_69	ELSE_1
0x4000d59	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d60	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d67	        0x488d0c02	                    lea rcx, [rdx + rax]	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d6b	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d72	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d79	          0x4801c2	                            add rdx, rax	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d7c	        0x488d7580	                   lea rsi, [rbp - 0x80]	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d80	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d87	          0x4889c7	                            mov rdi, rax	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d8a	      0xe898f3ffff	          call sym.pex64_get_unwind_info	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d8f	            0x85c0	                           test eax, eax	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d91	            0x752e	                           jne 0x4000dc1	       382	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_6
0x4000d93	      0xbe00000000	                              mov esi, 0	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000d98	      0xbf00000000	                              mov edi, 0	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000d9d	      0xe800000000	                          call 0x4000da2	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000da2	          0x4889c2	                            mov rdx, rax	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000da5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000dac	          0x4889d6	                            mov rsi, rdx	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000daf	          0x4889c7	                            mov rdi, rax	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000db2	      0xb800000000	                              mov eax, 0	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000db7	      0xe800000000	                          call 0x4000dbc	       384	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4	CALL_8
0x4000dbc	      0xe9a4050000	                           jmp 0x4001365	       385	pei-x86_64.c	FUNCTION_69	ELSE_1	IF_4
0x4000dc1	         0xfb64588	            movzx eax, byte [rbp - 0x78]	       388	pei-x86_64.c	FUNCTION_69	IF_5
0x4000dc5	            0x3c01	                               cmp al, 1	       388	pei-x86_64.c	FUNCTION_69	IF_5
0x4000dc7	     0xf8406010000	                            je 0x4000ed3	       388	pei-x86_64.c	FUNCTION_69	IF_5
0x4000dcd	         0xfb64588	            movzx eax, byte [rbp - 0x78]	       388	pei-x86_64.c	FUNCTION_69	IF_5
0x4000dd1	            0x3c02	                               cmp al, 2	       388	pei-x86_64.c	FUNCTION_69	IF_5
0x4000dd3	     0xf84fa000000	                            je 0x4000ed3	       388	pei-x86_64.c	FUNCTION_69	IF_5
0x4000dd9	         0xfb64588	            movzx eax, byte [rbp - 0x78]	       392	pei-x86_64.c	FUNCTION_69	IF_5
0x4000ddd	           0xfb6d0	                           movzx edx, al	       391	pei-x86_64.c	FUNCTION_69	IF_5	CALL_9
0x4000de0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       391	pei-x86_64.c	FUNCTION_69	IF_5	CALL_9
0x4000de7	      0xbe00000000	                              mov esi, 0	       391	pei-x86_64.c	FUNCTION_69	IF_5	CALL_9
0x4000dec	          0x4889c7	                            mov rdi, rax	       391	pei-x86_64.c	FUNCTION_69	IF_5	CALL_9
0x4000def	      0xb800000000	                              mov eax, 0	       391	pei-x86_64.c	FUNCTION_69	IF_5	CALL_9
0x4000df4	      0xe800000000	                          call 0x4000df9	       391	pei-x86_64.c	FUNCTION_69	IF_5	CALL_9
0x4000df9	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       393	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1
0x4000e03	      0xe98d000000	                           jmp 0x4000e95	       393	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1
0x4000e08	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       395	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_6
0x4000e0e	          0x83e00f	                            and eax, 0xf	       395	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_6
0x4000e11	            0x85c0	                           test eax, eax	       395	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_6
0x4000e13	            0x751f	                           jne 0x4000e34	       395	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_6
0x4000e15	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       396	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_10
0x4000e1b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       396	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_10
0x4000e22	      0xbe00000000	                              mov esi, 0	       396	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_10
0x4000e27	          0x4889c7	                            mov rdi, rax	       396	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_10
0x4000e2a	      0xb800000000	                              mov eax, 0	       396	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_10
0x4000e2f	      0xe800000000	                          call 0x4000e34	       396	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_10
0x4000e34	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e3b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e42	          0x4801d0	                            add rax, rdx	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e45	           0xfb600	                   movzx eax, byte [rax]	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e48	           0xfb6d0	                           movzx edx, al	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e4b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e52	      0xbe00000000	                              mov esi, 0	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e57	          0x4889c7	                            mov rdi, rax	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e5a	      0xb800000000	                              mov eax, 0	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e5f	      0xe800000000	                          call 0x4000e64	       397	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_11
0x4000e64	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       398	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_7
0x4000e6a	          0x83e00f	                            and eax, 0xf	       398	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_7
0x4000e6d	          0x83f80f	                            cmp eax, 0xf	       398	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_7
0x4000e70	            0x7514	                           jne 0x4000e86	       398	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	IF_7
0x4000e72	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       399	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_12
0x4000e79	          0x4889c6	                            mov rsi, rax	       399	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_12
0x4000e7c	      0xbf0a000000	                            mov edi, 0xa	       399	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_12
0x4000e81	      0xe800000000	                          call 0x4000e86	       399	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1	CALL_12
0x4000e86	    0x48838568ffff	               add qword [rbp - 0x98], 1	       393	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1
0x4000e8e	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       393	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1
0x4000e95	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       393	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1
0x4000e9c	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       393	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1
0x4000ea3	     0xf825fffffff	                            jb 0x4000e08	       393	pei-x86_64.c	FUNCTION_69	IF_5	FOR_1
0x4000ea9	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       401	pei-x86_64.c	FUNCTION_69	IF_5	IF_8
0x4000eaf	          0x83e00f	                            and eax, 0xf	       401	pei-x86_64.c	FUNCTION_69	IF_5	IF_8
0x4000eb2	            0x85c0	                           test eax, eax	       401	pei-x86_64.c	FUNCTION_69	IF_5	IF_8
0x4000eb4	     0xf84aa040000	                            je 0x4001364	       401	pei-x86_64.c	FUNCTION_69	IF_5	IF_8
0x4000eba	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       402	pei-x86_64.c	FUNCTION_69	IF_5	CALL_13
0x4000ec1	          0x4889c6	                            mov rsi, rax	       402	pei-x86_64.c	FUNCTION_69	IF_5	CALL_13
0x4000ec4	      0xbf0a000000	                            mov edi, 0xa	       402	pei-x86_64.c	FUNCTION_69	IF_5	CALL_13
0x4000ec9	      0xe800000000	                          call 0x4000ece	       402	pei-x86_64.c	FUNCTION_69	IF_5	CALL_13
0x4000ece	      0xe991040000	                           jmp 0x4001364	       403	pei-x86_64.c	FUNCTION_69	IF_5
0x4000ed3	         0xfb64588	            movzx eax, byte [rbp - 0x78]	       406	pei-x86_64.c	FUNCTION_69	CALL_14
0x4000ed7	           0xfb6d0	                           movzx edx, al	       406	pei-x86_64.c	FUNCTION_69	CALL_14
0x4000eda	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       406	pei-x86_64.c	FUNCTION_69	CALL_14
0x4000ee1	      0xbe00000000	                              mov esi, 0	       406	pei-x86_64.c	FUNCTION_69	CALL_14
0x4000ee6	          0x4889c7	                            mov rdi, rax	       406	pei-x86_64.c	FUNCTION_69	CALL_14
0x4000ee9	      0xb800000000	                              mov eax, 0	       406	pei-x86_64.c	FUNCTION_69	CALL_14
0x4000eee	      0xe800000000	                          call 0x4000ef3	       406	pei-x86_64.c	FUNCTION_69	CALL_14
0x4000ef3	         0xfb64589	            movzx eax, byte [rbp - 0x77]	       407	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000ef7	           0xfb6c0	                           movzx eax, al	       407	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000efa	          0x83f804	                              cmp eax, 4	       407	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000efd	     0xf87b2000000	                            ja 0x4000fb5	       407	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f03	            0x89c0	                            mov eax, eax	       407	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f05	    0x488b04c50000	                  mov rax, qword [rax*8]	       407	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f0d	            0xffe0	                                 jmp rax	       407	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f0f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       410	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_15
0x4000f16	          0x4889c1	                            mov rcx, rax	       410	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_15
0x4000f19	      0xba04000000	                              mov edx, 4	       410	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_15
0x4000f1e	      0xbe01000000	                              mov esi, 1	       410	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_15
0x4000f23	      0xbf00000000	                              mov edi, 0	       410	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_15
0x4000f28	      0xe800000000	                          call 0x4000f2d	       410	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_15
0x4000f2d	      0xe9a4000000	                           jmp 0x4000fd6	       411	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f32	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       413	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_16
0x4000f39	          0x4889c1	                            mov rcx, rax	       413	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_16
0x4000f3c	      0xba11000000	                           mov edx, 0x11	       413	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_16
0x4000f41	      0xbe01000000	                              mov esi, 1	       413	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_16
0x4000f46	      0xbf00000000	                              mov edi, 0	       413	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_16
0x4000f4b	      0xe800000000	                          call 0x4000f50	       413	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_16
0x4000f50	      0xe981000000	                           jmp 0x4000fd6	       414	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f55	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       416	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_17
0x4000f5c	          0x4889c1	                            mov rcx, rax	       416	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_17
0x4000f5f	      0xba11000000	                           mov edx, 0x11	       416	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_17
0x4000f64	      0xbe01000000	                              mov esi, 1	       416	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_17
0x4000f69	      0xbf00000000	                              mov edi, 0	       416	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_17
0x4000f6e	      0xe800000000	                          call 0x4000f73	       416	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_17
0x4000f73	            0xeb61	                           jmp 0x4000fd6	       417	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f75	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       419	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_18
0x4000f7c	          0x4889c1	                            mov rcx, rax	       419	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_18
0x4000f7f	      0xba25000000	                           mov edx, 0x25	       419	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_18
0x4000f84	      0xbe01000000	                              mov esi, 1	       419	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_18
0x4000f89	      0xbf00000000	                              mov edi, 0	       419	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_18
0x4000f8e	      0xe800000000	                          call 0x4000f93	       419	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_18
0x4000f93	            0xeb41	                           jmp 0x4000fd6	       421	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000f95	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       423	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_19
0x4000f9c	          0x4889c1	                            mov rcx, rax	       423	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_19
0x4000f9f	      0xba12000000	                           mov edx, 0x12	       423	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_19
0x4000fa4	      0xbe01000000	                              mov esi, 1	       423	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_19
0x4000fa9	      0xbf00000000	                              mov edi, 0	       423	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_19
0x4000fae	      0xe800000000	                          call 0x4000fb3	       423	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_19
0x4000fb3	            0xeb21	                           jmp 0x4000fd6	       424	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000fb5	         0xfb64589	            movzx eax, byte [rbp - 0x77]	       426	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_20
0x4000fb9	           0xfb6d0	                           movzx edx, al	       426	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_20
0x4000fbc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       426	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_20
0x4000fc3	      0xbe00000000	                              mov esi, 0	       426	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_20
0x4000fc8	          0x4889c7	                            mov rdi, rax	       426	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_20
0x4000fcb	      0xb800000000	                              mov eax, 0	       426	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_20
0x4000fd0	      0xe800000000	                          call 0x4000fd5	       426	pei-x86_64.c	FUNCTION_69	SWITCH_1	CALL_20
0x4000fd5	              0x90	                                     nop	       427	pei-x86_64.c	FUNCTION_69	SWITCH_1
0x4000fd6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       429	pei-x86_64.c	FUNCTION_69	CALL_21
0x4000fdd	          0x4889c6	                            mov rsi, rax	       429	pei-x86_64.c	FUNCTION_69	CALL_21
0x4000fe0	      0xbf0a000000	                            mov edi, 0xa	       429	pei-x86_64.c	FUNCTION_69	CALL_21
0x4000fe5	      0xe800000000	                          call 0x4000fea	       429	pei-x86_64.c	FUNCTION_69	CALL_21
0x4000fea	        0x488b4598	             mov rax, qword [rbp - 0x68]	       430	pei-x86_64.c	FUNCTION_69	CALL_22
0x4000fee	            0x89c2	                            mov edx, eax	       430	pei-x86_64.c	FUNCTION_69	CALL_22
0x4000ff0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       430	pei-x86_64.c	FUNCTION_69	CALL_22
0x4000ff7	      0xbe00000000	                              mov esi, 0	       430	pei-x86_64.c	FUNCTION_69	CALL_22
0x4000ffc	          0x4889c7	                            mov rdi, rax	       430	pei-x86_64.c	FUNCTION_69	CALL_22
0x4000fff	      0xb800000000	                              mov eax, 0	       430	pei-x86_64.c	FUNCTION_69	CALL_22
0x4001004	      0xe800000000	                          call 0x4001009	       430	pei-x86_64.c	FUNCTION_69	CALL_22
0x4001009	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       432	pei-x86_64.c	FUNCTION_69
0x400100d	            0x89c1	                            mov ecx, eax	       431	pei-x86_64.c	FUNCTION_69	CALL_23
0x400100f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       432	pei-x86_64.c	FUNCTION_69
0x4001013	            0x89c2	                            mov edx, eax	       431	pei-x86_64.c	FUNCTION_69	CALL_23
0x4001015	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       431	pei-x86_64.c	FUNCTION_69	CALL_23
0x400101c	      0xbe00000000	                              mov esi, 0	       431	pei-x86_64.c	FUNCTION_69	CALL_23
0x4001021	          0x4889c7	                            mov rdi, rax	       431	pei-x86_64.c	FUNCTION_69	CALL_23
0x4001024	      0xb800000000	                              mov eax, 0	       431	pei-x86_64.c	FUNCTION_69	CALL_23
0x4001029	      0xe800000000	                          call 0x400102e	       431	pei-x86_64.c	FUNCTION_69	CALL_23
0x400102e	         0xfb645a0	            movzx eax, byte [rbp - 0x60]	       434	pei-x86_64.c	FUNCTION_69
0x4001032	          0x83e00f	                            and eax, 0xf	       434	pei-x86_64.c	FUNCTION_69
0x4001035	            0x84c0	                             test al, al	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x4001037	            0x7416	                            je 0x400104f	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x4001039	         0xfb645a0	            movzx eax, byte [rbp - 0x60]	       435	pei-x86_64.c	FUNCTION_69
0x400103d	          0x83e00f	                            and eax, 0xf	       435	pei-x86_64.c	FUNCTION_69
0x4001040	           0xfb6c0	                           movzx eax, al	       435	pei-x86_64.c	FUNCTION_69
0x4001043	            0x89c0	                            mov eax, eax	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x4001045	    0x488b04c50000	                  mov rax, qword [rax*8]	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x400104d	            0xeb05	                           jmp 0x4001054	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x400104f	      0xb800000000	                              mov eax, 0	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x4001054	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x400105b	          0x4889c2	                            mov rdx, rax	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x400105e	      0xbe00000000	                              mov esi, 0	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x4001063	          0x4889cf	                            mov rdi, rcx	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x4001066	      0xb800000000	                              mov eax, 0	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x400106b	      0xe800000000	                          call 0x4001070	       433	pei-x86_64.c	FUNCTION_69	CALL_24
0x4001070	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x4001074	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x4001078	          0x4801d2	                            add rdx, rdx	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x400107b	        0x488d0c10	                    lea rcx, [rax + rdx]	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x400107f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x4001086	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x400108a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x4001091	          0x4801d0	                            add rax, rdx	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x4001094	          0x4839c1	                            cmp rcx, rax	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x4001097	            0x7635	                           jbe 0x40010ce	       438	pei-x86_64.c	FUNCTION_69	IF_9
0x4001099	        0x488b4598	             mov rax, qword [rbp - 0x68]	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x400109d	          0x4889c3	                            mov rbx, rax	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010a0	      0xbe00000000	                              mov esi, 0	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010a5	      0xbf00000000	                              mov edi, 0	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010aa	      0xe800000000	                          call 0x40010af	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010af	          0x4889c1	                            mov rcx, rax	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010b2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010b9	          0x4889da	                            mov rdx, rbx	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010bc	          0x4889ce	                            mov rsi, rcx	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010bf	          0x4889c7	                            mov rdi, rax	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010c2	      0xb800000000	                              mov eax, 0	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010c7	      0xe800000000	                          call 0x40010cc	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010cc	            0xeb21	                           jmp 0x40010ef	       439	pei-x86_64.c	FUNCTION_69	CALL_26
0x40010ce	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       441	pei-x86_64.c	FUNCTION_69	CALL_27
0x40010d5	        0x488d5580	                   lea rdx, [rbp - 0x80]	       441	pei-x86_64.c	FUNCTION_69	CALL_27
0x40010d9	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       441	pei-x86_64.c	FUNCTION_69	CALL_27
0x40010e0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       441	pei-x86_64.c	FUNCTION_69	CALL_27
0x40010e7	          0x4889c7	                            mov rdi, rax	       441	pei-x86_64.c	FUNCTION_69	CALL_27
0x40010ea	      0xe8a8f2ffff	    call sym.pex64_xdata_print_uwd_codes	       441	pei-x86_64.c	FUNCTION_69	CALL_27
0x40010ef	         0xfb64589	            movzx eax, byte [rbp - 0x77]	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40010f3	           0xfb6c0	                           movzx eax, al	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40010f6	          0x83f801	                              cmp eax, 1	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40010f9	     0xf8c55010000	                            jl 0x4001254	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40010ff	          0x83f803	                              cmp eax, 3	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001102	            0x7e0a	                           jle 0x400110e	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001104	          0x83f804	                              cmp eax, 4	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001107	            0x747b	                            je 0x4001184	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001109	      0xe946010000	                           jmp 0x4001254	       443	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x400110e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       448	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_28
0x4001115	          0x4889c1	                            mov rcx, rax	       448	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_28
0x4001118	      0xba0a000000	                            mov edx, 0xa	       448	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_28
0x400111d	      0xbe01000000	                              mov esi, 1	       448	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_28
0x4001122	      0xbf00000000	                              mov edi, 0	       448	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_28
0x4001127	      0xe800000000	                          call 0x400112c	       448	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_28
0x400112c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001130	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001137	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x400113e	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001145	          0x4801c2	                            add rdx, rax	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001148	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x400114f	      0xbe00000000	                              mov esi, 0	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001154	          0x4889c7	                            mov rdi, rax	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001157	      0xb800000000	                              mov eax, 0	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x400115c	      0xe800000000	                          call 0x4001161	       449	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001161	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       451	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_30
0x4001168	          0x4889c1	                            mov rcx, rax	       451	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_30
0x400116b	      0xba02000000	                              mov edx, 2	       451	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_30
0x4001170	      0xbe01000000	                              mov esi, 1	       451	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_30
0x4001175	      0xbf00000000	                              mov edi, 0	       451	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_30
0x400117a	      0xe800000000	                          call 0x400117f	       451	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_30
0x400117f	      0xe9d0000000	                           jmp 0x4001254	       452	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001184	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       454	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_31
0x400118b	          0x4889c1	                            mov rcx, rax	       454	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_31
0x400118e	      0xba0f000000	                            mov edx, 0xf	       454	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_31
0x4001193	      0xbe01000000	                              mov esi, 1	       454	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_31
0x4001198	      0xbf00000000	                              mov edi, 0	       454	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_31
0x400119d	      0xe800000000	                          call 0x40011a2	       454	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_31
0x40011a2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       455	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011a6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       455	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011ad	      0xbe00000000	                              mov esi, 0	       455	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011b2	          0x4889c7	                            mov rdi, rax	       455	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011b5	      0xb800000000	                              mov eax, 0	       455	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011ba	      0xe800000000	                          call 0x40011bf	       455	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011bf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       456	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_32
0x40011c6	          0x4889c1	                            mov rcx, rax	       456	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_32
0x40011c9	      0xba07000000	                              mov edx, 7	       456	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_32
0x40011ce	      0xbe01000000	                              mov esi, 1	       456	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_32
0x40011d3	      0xbf00000000	                              mov edi, 0	       456	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_32
0x40011d8	      0xe800000000	                          call 0x40011dd	       456	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_32
0x40011dd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       457	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011e1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       457	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011e8	      0xbe00000000	                              mov esi, 0	       457	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011ed	          0x4889c7	                            mov rdi, rax	       457	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011f0	      0xb800000000	                              mov eax, 0	       457	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011f5	      0xe800000000	                          call 0x40011fa	       457	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x40011fa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       458	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_33
0x4001201	          0x4889c1	                            mov rcx, rax	       458	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_33
0x4001204	      0xba10000000	                           mov edx, 0x10	       458	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_33
0x4001209	      0xbe01000000	                              mov esi, 1	       458	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_33
0x400120e	      0xbf00000000	                              mov edi, 0	       458	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_33
0x4001213	      0xe800000000	                          call 0x4001218	       458	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_33
0x4001218	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       459	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x400121c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       459	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001223	      0xbe00000000	                              mov esi, 0	       459	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001228	          0x4889c7	                            mov rdi, rax	       459	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x400122b	      0xb800000000	                              mov eax, 0	       459	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001230	      0xe800000000	                          call 0x4001235	       459	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001235	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       460	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_34
0x400123c	          0x4889c1	                            mov rcx, rax	       460	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_34
0x400123f	      0xba02000000	                              mov edx, 2	       460	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_34
0x4001244	      0xbe01000000	                              mov esi, 1	       460	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_34
0x4001249	      0xbf00000000	                              mov edi, 0	       460	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_34
0x400124e	      0xe800000000	                          call 0x4001253	       460	pei-x86_64.c	FUNCTION_69	SWITCH_2	CALL_34
0x4001253	              0x90	                                     nop	       461	pei-x86_64.c	FUNCTION_69	SWITCH_2
0x4001254	        0x488b4580	             mov rax, qword [rbp - 0x80]	       465	pei-x86_64.c	FUNCTION_69
0x4001258	    0x48018568ffff	            add qword [rbp - 0x98], rax 	       465	pei-x86_64.c	FUNCTION_69
0x400125f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       466	pei-x86_64.c	FUNCTION_69	IF_10
0x4001266	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       466	pei-x86_64.c	FUNCTION_69	IF_10
0x400126d	     0xf83f2000000	                           jae 0x4001365	       466	pei-x86_64.c	FUNCTION_69	IF_10
0x4001273	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       469	pei-x86_64.c	FUNCTION_69	IF_10	CALL_35
0x400127a	          0x4889c1	                            mov rcx, rax	       469	pei-x86_64.c	FUNCTION_69	IF_10	CALL_35
0x400127d	      0xba0c000000	                            mov edx, 0xc	       469	pei-x86_64.c	FUNCTION_69	IF_10	CALL_35
0x4001282	      0xbe01000000	                              mov esi, 1	       469	pei-x86_64.c	FUNCTION_69	IF_10	CALL_35
0x4001287	      0xbf00000000	                              mov edi, 0	       469	pei-x86_64.c	FUNCTION_69	IF_10	CALL_35
0x400128c	      0xe800000000	                          call 0x4001291	       469	pei-x86_64.c	FUNCTION_69	IF_10	CALL_35
0x4001291	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       470	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2
0x400129b	      0xe98d000000	                           jmp 0x400132d	       470	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2
0x40012a0	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       472	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_11
0x40012a6	          0x83e00f	                            and eax, 0xf	       472	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_11
0x40012a9	            0x85c0	                           test eax, eax	       472	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_11
0x40012ab	            0x751f	                           jne 0x40012cc	       472	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_11
0x40012ad	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	       473	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_36
0x40012b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       473	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_36
0x40012ba	      0xbe00000000	                              mov esi, 0	       473	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_36
0x40012bf	          0x4889c7	                            mov rdi, rax	       473	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_36
0x40012c2	      0xb800000000	                              mov eax, 0	       473	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_36
0x40012c7	      0xe800000000	                          call 0x40012cc	       473	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_36
0x40012cc	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012d3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012da	          0x4801d0	                            add rax, rdx	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012dd	           0xfb600	                   movzx eax, byte [rax]	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012e0	           0xfb6d0	                           movzx edx, al	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012e3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012ea	      0xbe00000000	                              mov esi, 0	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012ef	          0x4889c7	                            mov rdi, rax	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012f2	      0xb800000000	                              mov eax, 0	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012f7	      0xe800000000	                          call 0x40012fc	       474	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_37
0x40012fc	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       475	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_12
0x4001302	          0x83e00f	                            and eax, 0xf	       475	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_12
0x4001305	          0x83f80f	                            cmp eax, 0xf	       475	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_12
0x4001308	            0x7514	                           jne 0x400131e	       475	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	IF_12
0x400130a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       476	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_38
0x4001311	          0x4889c6	                            mov rsi, rax	       476	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_38
0x4001314	      0xbf0a000000	                            mov edi, 0xa	       476	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_38
0x4001319	      0xe800000000	                          call 0x400131e	       476	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2	CALL_38
0x400131e	    0x48838568ffff	               add qword [rbp - 0x98], 1	       470	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2
0x4001326	    0x83855cffffff	               add dword [rbp - 0xa4], 1	       470	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2
0x400132d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       470	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2
0x4001334	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       470	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2
0x400133b	     0xf825fffffff	                            jb 0x40012a0	       470	pei-x86_64.c	FUNCTION_69	IF_10	FOR_2
0x4001341	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       478	pei-x86_64.c	FUNCTION_69	IF_10	IF_13
0x4001347	          0x83e00f	                            and eax, 0xf	       478	pei-x86_64.c	FUNCTION_69	IF_10	IF_13
0x400134a	            0x85c0	                           test eax, eax	       478	pei-x86_64.c	FUNCTION_69	IF_10	IF_13
0x400134c	            0x7417	                            je 0x4001365	       478	pei-x86_64.c	FUNCTION_69	IF_10	IF_13
0x400134e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       479	pei-x86_64.c	FUNCTION_69	IF_10	CALL_39
0x4001355	          0x4889c6	                            mov rsi, rax	       479	pei-x86_64.c	FUNCTION_69	IF_10	CALL_39
0x4001358	      0xbf0a000000	                            mov edi, 0xa	       479	pei-x86_64.c	FUNCTION_69	IF_10	CALL_39
0x400135d	      0xe800000000	                          call 0x4001362	       479	pei-x86_64.c	FUNCTION_69	IF_10	CALL_39
0x4001362	            0xeb01	                           jmp 0x4001365	       479	pei-x86_64.c	FUNCTION_69	IF_10	CALL_39
0x4001364	              0x90	                                     nop	       403	pei-x86_64.c	FUNCTION_69	IF_5
0x4001365	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	pei-x86_64.c	FUNCTION_69
0x4001369	    0x644833042528	                xor rax, qword fs:[0x28]	       481	pei-x86_64.c	FUNCTION_69
0x4001372	            0x7405	                            je 0x4001379	       481	pei-x86_64.c	FUNCTION_69
0x4001374	      0xe800000000	                          call 0x4001379	       481	pei-x86_64.c	FUNCTION_69
0x4001379	    0x4881c4d80000	                           add rsp, 0xd8	       481	pei-x86_64.c	FUNCTION_69
0x4001380	              0x5b	                                 pop rbx	       481	pei-x86_64.c	FUNCTION_69
0x4001381	              0x5d	                                 pop rbp	       481	pei-x86_64.c	FUNCTION_69
0x4001382	              0xc3	                                     ret	       481	pei-x86_64.c	FUNCTION_69
coff_set_section_contents	FOR,0:functions,0:WHILE,1:ELSE,0:SWITCH,0:IF,6:CALL,5:DO,0	90
0x40089ac	              0x55	                                push rbp	      4141	coffcode.h	FUNCTION_30
0x40089ad	          0x4889e5	                            mov rbp, rsp	      4141	coffcode.h	FUNCTION_30
0x40089b0	        0x4883ec40	                           sub rsp, 0x40	      4141	coffcode.h	FUNCTION_30
0x40089b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4141	coffcode.h	FUNCTION_30
0x40089b8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4141	coffcode.h	FUNCTION_30
0x40089bc	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4141	coffcode.h	FUNCTION_30
0x40089c0	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      4141	coffcode.h	FUNCTION_30
0x40089c4	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      4141	coffcode.h	FUNCTION_30
0x40089c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4142	coffcode.h	FUNCTION_30	IF_1
0x40089cc	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      4142	coffcode.h	FUNCTION_30	IF_1
0x40089d0	          0x83e040	                           and eax, 0x40	      4142	coffcode.h	FUNCTION_30	IF_1
0x40089d3	            0x84c0	                             test al, al	      4142	coffcode.h	FUNCTION_30	IF_1
0x40089d5	            0x751a	                           jne 0x40089f1	      4142	coffcode.h	FUNCTION_30	IF_1
0x40089d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4144	coffcode.h	FUNCTION_30	IF_1	IF_2	CALL_1
0x40089db	          0x4889c7	                            mov rdi, rax	      4144	coffcode.h	FUNCTION_30	IF_1	IF_2	CALL_1
0x40089de	      0xe8ffe0ffff	call sym.coff_compute_section_file_positions	      4144	coffcode.h	FUNCTION_30	IF_1	IF_2	CALL_1
0x40089e3	            0x85c0	                           test eax, eax	      4144	coffcode.h	FUNCTION_30	IF_1	IF_2	CALL_1
0x40089e5	            0x750a	                           jne 0x40089f1	      4144	coffcode.h	FUNCTION_30	IF_1	IF_2	CALL_1
0x40089e7	      0xb800000000	                              mov eax, 0	      4145	coffcode.h	FUNCTION_30	IF_1	IF_2
0x40089ec	      0xe9fd000000	                           jmp 0x4008aee	      4145	coffcode.h	FUNCTION_30	IF_1	IF_2
0x40089f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4169	coffcode.h	FUNCTION_30	IF_3	CALL_2
0x40089f5	          0x488b00	                    mov rax, qword [rax]	      4169	coffcode.h	FUNCTION_30	IF_3	CALL_2
0x40089f8	      0xbe00000000	                              mov esi, 0	      4169	coffcode.h	FUNCTION_30	IF_3	CALL_2
0x40089fd	          0x4889c7	                            mov rdi, rax	      4169	coffcode.h	FUNCTION_30	IF_3	CALL_2
0x4008a00	      0xe800000000	                          call 0x4008a05	      4169	coffcode.h	FUNCTION_30	IF_3	CALL_2
0x4008a05	            0x85c0	                           test eax, eax	      4169	coffcode.h	FUNCTION_30	IF_3	CALL_2
0x4008a07	            0x756d	                           jne 0x4008a76	      4169	coffcode.h	FUNCTION_30	IF_3	CALL_2
0x4008a09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4173	coffcode.h	FUNCTION_30	IF_3
0x4008a0d	        0x488945f0	             mov qword [rbp - 0x10], rax	      4173	coffcode.h	FUNCTION_30	IF_3
0x4008a11	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4174	coffcode.h	FUNCTION_30	IF_3
0x4008a15	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4174	coffcode.h	FUNCTION_30	IF_3
0x4008a19	          0x4801d0	                            add rax, rdx	      4174	coffcode.h	FUNCTION_30	IF_3
0x4008a1c	        0x488945f8	                mov qword [rbp - 8], rax	      4174	coffcode.h	FUNCTION_30	IF_3
0x4008a20	            0xeb31	                           jmp 0x4008a53	      4175	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4177	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a26	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4177	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a2a	        0x488d5001	                      lea rdx, [rax + 1]	      4177	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a2e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4177	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a32	        0x48895030	             mov qword [rax + 0x30], rdx	      4177	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a3a	        0x488b4008	                mov rax, qword [rax + 8]	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a3e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a42	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a46	          0x4889d7	                            mov rdi, rdx	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a49	            0xffd0	                                call rax	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a4b	        0x48c1e002	                              shl rax, 2	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a4f	        0x480145f0	            add qword [rbp - 0x10], rax 	      4178	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4175	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a57	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4175	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a5b	            0x72c5	                            jb 0x4008a22	      4175	coffcode.h	FUNCTION_30	IF_3	WHILE_1
0x4008a5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4181	coffcode.h	FUNCTION_30	IF_3	CALL_3
0x4008a61	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4181	coffcode.h	FUNCTION_30	IF_3	CALL_3
0x4008a65	            0x740f	                            je 0x4008a76	      4181	coffcode.h	FUNCTION_30	IF_3	CALL_3
0x4008a67	      0xbe55100000	                         mov esi, 0x1055	      4181	coffcode.h	FUNCTION_30	IF_3	CALL_3
0x4008a6c	      0xbf00000000	                              mov edi, 0	      4181	coffcode.h	FUNCTION_30	IF_3	CALL_3
0x4008a71	      0xe800000000	                          call 0x4008a76	      4181	coffcode.h	FUNCTION_30	IF_3	CALL_3
0x4008a76	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4187	coffcode.h	FUNCTION_30	IF_4
0x4008a7a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4187	coffcode.h	FUNCTION_30	IF_4
0x4008a81	          0x4885c0	                           test rax, rax	      4187	coffcode.h	FUNCTION_30	IF_4
0x4008a84	            0x7507	                           jne 0x4008a8d	      4187	coffcode.h	FUNCTION_30	IF_4
0x4008a86	      0xb801000000	                              mov eax, 1	      4188	coffcode.h	FUNCTION_30	IF_4
0x4008a8b	            0xeb61	                           jmp 0x4008aee	      4188	coffcode.h	FUNCTION_30	IF_4
0x4008a8d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008a91	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008a98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008a9c	        0x488d0c02	                    lea rcx, [rdx + rax]	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008aa0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008aa4	      0xba00000000	                              mov edx, 0	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008aa9	          0x4889ce	                            mov rsi, rcx	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008aac	          0x4889c7	                            mov rdi, rax	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008aaf	      0xe800000000	                          call 0x4008ab4	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008ab4	            0x85c0	                           test eax, eax	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008ab6	            0x7407	                            je 0x4008abf	      4190	coffcode.h	FUNCTION_30	IF_5	CALL_4
0x4008ab8	      0xb800000000	                              mov eax, 0	      4191	coffcode.h	FUNCTION_30	IF_5
0x4008abd	            0xeb2f	                           jmp 0x4008aee	      4191	coffcode.h	FUNCTION_30	IF_5
0x4008abf	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4193	coffcode.h	FUNCTION_30	IF_6
0x4008ac4	            0x7507	                           jne 0x4008acd	      4193	coffcode.h	FUNCTION_30	IF_6
0x4008ac6	      0xb801000000	                              mov eax, 1	      4194	coffcode.h	FUNCTION_30	IF_6
0x4008acb	            0xeb21	                           jmp 0x4008aee	      4194	coffcode.h	FUNCTION_30	IF_6
0x4008acd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008ad1	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008ad5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008ad9	          0x4889ce	                            mov rsi, rcx	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008adc	          0x4889c7	                            mov rdi, rax	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008adf	      0xe800000000	                          call 0x4008ae4	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008ae4	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008ae8	           0xf94c0	                                 sete al	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008aeb	           0xfb6c0	                           movzx eax, al	      4196	coffcode.h	FUNCTION_30	CALL_5
0x4008aee	              0xc9	                                   leave	      4197	coffcode.h	FUNCTION_30
0x4008aef	              0xc3	                                     ret	      4197	coffcode.h	FUNCTION_30
coff_pe_amd64_relocate_section	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,2:DO,0	31
0x40025a4	              0x55	                                push rbp	       536	coff-x86_64.c	FUNCTION_76
0x40025a5	          0x4889e5	                            mov rbp, rsp	       536	coff-x86_64.c	FUNCTION_76
0x40025a8	        0x4883ec30	                           sub rsp, 0x30	       536	coff-x86_64.c	FUNCTION_76
0x40025ac	        0x48897df8	                mov qword [rbp - 8], rdi	       536	coff-x86_64.c	FUNCTION_76
0x40025b0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       536	coff-x86_64.c	FUNCTION_76
0x40025b4	        0x488955e8	             mov qword [rbp - 0x18], rdx	       536	coff-x86_64.c	FUNCTION_76
0x40025b8	        0x48894de0	             mov qword [rbp - 0x20], rcx	       536	coff-x86_64.c	FUNCTION_76
0x40025bc	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       536	coff-x86_64.c	FUNCTION_76
0x40025c0	        0x4c894dd0	              mov qword [rbp - 0x30], r9	       536	coff-x86_64.c	FUNCTION_76
0x40025c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       537	coff-x86_64.c	FUNCTION_76	IF_1	CALL_1
0x40025c8	           0xfb600	                   movzx eax, byte [rax]	       537	coff-x86_64.c	FUNCTION_76	IF_1	CALL_1
0x40025cb	          0x83e003	                              and eax, 3	       537	coff-x86_64.c	FUNCTION_76	IF_1	CALL_1
0x40025ce	            0x3c02	                               cmp al, 2	       537	coff-x86_64.c	FUNCTION_76	IF_1	CALL_1
0x40025d0	            0x7507	                           jne 0x40025d9	       537	coff-x86_64.c	FUNCTION_76	IF_1	CALL_1
0x40025d2	      0xb801000000	                              mov eax, 1	       538	coff-x86_64.c	FUNCTION_76	IF_1
0x40025d7	            0xeb30	                           jmp 0x4002609	       538	coff-x86_64.c	FUNCTION_76	IF_1
0x40025d9	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025dd	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025e1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025e5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025e9	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025f1	          0xff7518	                 push qword [rbp + 0x18]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025f4	          0xff7510	                 push qword [rbp + 0x10]	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025f7	          0x4d89c1	                              mov r9, r8	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025fa	          0x4989f8	                             mov r8, rdi	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x40025fd	          0x4889c7	                            mov rdi, rax	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x4002600	      0xe800000000	                          call 0x4002605	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x4002605	        0x4883c410	                           add rsp, 0x10	       540	coff-x86_64.c	FUNCTION_76	CALL_2
0x4002609	              0xc9	                                   leave	       541	coff-x86_64.c	FUNCTION_76
0x400260a	              0xc3	                                     ret	       541	coff-x86_64.c	FUNCTION_76
symname_in_debug_hook	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,1:DO,0	7
0x4006535	              0x55	                                push rbp	      2346	coffcode.h	FUNCTION_18
0x4006536	          0x4889e5	                            mov rbp, rsp	      2346	coffcode.h	FUNCTION_18
0x4006539	        0x48897df8	                mov qword [rbp - 8], rdi	      2346	coffcode.h	FUNCTION_18
0x400653d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2346	coffcode.h	FUNCTION_18
0x4006541	      0xb800000000	                              mov eax, 0	      2350	coffcode.h	FUNCTION_18
0x4006546	              0x5d	                                 pop rbp	      2352	coffcode.h	FUNCTION_18
0x4006547	              0xc3	                                     ret	      2352	coffcode.h	FUNCTION_18
coff_amd64_rtype_to_howto	FOR,1:functions,0:WHILE,0:ELSE,2:SWITCH,0:IF,11:CALL,3:DO,0	173
0x400260b	              0x55	                                push rbp	       556	coff-x86_64.c	FUNCTION_77
0x400260c	          0x4889e5	                            mov rbp, rsp	       556	coff-x86_64.c	FUNCTION_77
0x400260f	        0x4883ec50	                           sub rsp, 0x50	       556	coff-x86_64.c	FUNCTION_77
0x4002613	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       556	coff-x86_64.c	FUNCTION_77
0x4002617	        0x488975d0	             mov qword [rbp - 0x30], rsi	       556	coff-x86_64.c	FUNCTION_77
0x400261b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       556	coff-x86_64.c	FUNCTION_77
0x400261f	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       556	coff-x86_64.c	FUNCTION_77
0x4002623	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       556	coff-x86_64.c	FUNCTION_77
0x4002627	        0x4c894db0	              mov qword [rbp - 0x50], r9	       556	coff-x86_64.c	FUNCTION_77
0x400262b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       559	coff-x86_64.c	FUNCTION_77	IF_1
0x400262f	         0xfb74010	           movzx eax, word [rax + 0x10] 	       559	coff-x86_64.c	FUNCTION_77	IF_1
0x4002633	        0x6683f814	                            cmp ax, 0x14	       559	coff-x86_64.c	FUNCTION_77	IF_1
0x4002637	            0x7614	                           jbe 0x400264d	       559	coff-x86_64.c	FUNCTION_77	IF_1
0x4002639	      0xbf11000000	                           mov edi, 0x11	       561	coff-x86_64.c	FUNCTION_77	IF_1	CALL_1
0x400263e	      0xe800000000	                          call 0x4002643	       561	coff-x86_64.c	FUNCTION_77	IF_1	CALL_1
0x4002643	      0xb800000000	                              mov eax, 0	       562	coff-x86_64.c	FUNCTION_77	IF_1
0x4002648	      0xe933020000	                           jmp 0x4002880	       562	coff-x86_64.c	FUNCTION_77	IF_1
0x400264d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       564	coff-x86_64.c	FUNCTION_77
0x4002651	         0xfb74010	           movzx eax, word [rax + 0x10] 	       564	coff-x86_64.c	FUNCTION_77
0x4002655	           0xfb7d0	                           movzx edx, ax	       564	coff-x86_64.c	FUNCTION_77
0x4002658	          0x4889d0	                            mov rax, rdx	       564	coff-x86_64.c	FUNCTION_77
0x400265b	        0x48c1e002	                              shl rax, 2	       564	coff-x86_64.c	FUNCTION_77
0x400265f	          0x4801d0	                            add rax, rdx	       564	coff-x86_64.c	FUNCTION_77
0x4002662	        0x48c1e004	                              shl rax, 4	       564	coff-x86_64.c	FUNCTION_77
0x4002666	    0x480500000000	                              add rax, 0	       564	coff-x86_64.c	FUNCTION_77
0x400266c	        0x488945f8	                mov qword [rbp - 8], rax	       564	coff-x86_64.c	FUNCTION_77
0x4002670	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       568	coff-x86_64.c	FUNCTION_77
0x4002674	    0x48c700000000	                      mov qword [rax], 0	       568	coff-x86_64.c	FUNCTION_77
0x400267b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x400267f	         0xfb74010	           movzx eax, word [rax + 0x10] 	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x4002683	        0x6683f804	                               cmp ax, 4	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x4002687	            0x7639	                           jbe 0x40026c2	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x4002689	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x400268d	         0xfb74010	           movzx eax, word [rax + 0x10] 	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x4002691	        0x6683f809	                               cmp ax, 9	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x4002695	            0x772b	                            ja 0x40026c2	       569	coff-x86_64.c	FUNCTION_77	IF_2
0x4002697	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x400269b	          0x488b10	                    mov rdx, qword [rax]	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x400269e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026a2	         0xfb74010	           movzx eax, word [rax + 0x10] 	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026a6	           0xfb7c0	                           movzx eax, ax	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026a9	          0x83e804	                              sub eax, 4	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026ac	            0x4898	                                    cdqe	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026ae	          0x4829c2	                            sub rdx, rax	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026b1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026b5	          0x488910	                    mov qword [rax], rdx	       571	coff-x86_64.c	FUNCTION_77	IF_2
0x40026b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       572	coff-x86_64.c	FUNCTION_77	IF_2
0x40026bc	    0x66c740100400	                mov word [rax + 0x10], 4	       572	coff-x86_64.c	FUNCTION_77	IF_2
0x40026c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       576	coff-x86_64.c	FUNCTION_77	IF_3
0x40026c6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       576	coff-x86_64.c	FUNCTION_77	IF_3
0x40026c9	            0x85c0	                           test eax, eax	       576	coff-x86_64.c	FUNCTION_77	IF_3
0x40026cb	            0x7419	                            je 0x40026e6	       576	coff-x86_64.c	FUNCTION_77	IF_3
0x40026cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       577	coff-x86_64.c	FUNCTION_77	IF_3
0x40026d1	          0x488b10	                    mov rdx, qword [rax]	       577	coff-x86_64.c	FUNCTION_77	IF_3
0x40026d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       577	coff-x86_64.c	FUNCTION_77	IF_3
0x40026d8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       577	coff-x86_64.c	FUNCTION_77	IF_3
0x40026dc	          0x4801c2	                            add rdx, rax	       577	coff-x86_64.c	FUNCTION_77	IF_3
0x40026df	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       577	coff-x86_64.c	FUNCTION_77	IF_3
0x40026e3	          0x488910	                    mov qword [rax], rdx	       577	coff-x86_64.c	FUNCTION_77	IF_3
0x40026e6	      0x48837db800	               cmp qword [rbp - 0x48], 0	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x40026eb	            0x742e	                            je 0x400271b	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x40026ed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x40026f1	          0x8b4018	            mov eax, dword [rax + 0x18] 	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x40026f4	            0x85c0	                           test eax, eax	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x40026f6	            0x7523	                           jne 0x400271b	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x40026f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x40026fc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x4002700	          0x4885c0	                           test rax, rax	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x4002703	            0x7416	                            je 0x400271b	       579	coff-x86_64.c	FUNCTION_77	IF_4
0x4002705	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       586	coff-x86_64.c	FUNCTION_77	IF_4	CALL_2
0x400270a	            0x750f	                           jne 0x400271b	       586	coff-x86_64.c	FUNCTION_77	IF_4	CALL_2
0x400270c	      0xbe4a020000	                          mov esi, 0x24a	       586	coff-x86_64.c	FUNCTION_77	IF_4	CALL_2
0x4002711	      0xbf00000000	                              mov edi, 0	       586	coff-x86_64.c	FUNCTION_77	IF_4	CALL_2
0x4002716	      0xe800000000	                          call 0x400271b	       586	coff-x86_64.c	FUNCTION_77	IF_4	CALL_2
0x400271b	        0x488b45f8	                mov rax, qword [rbp - 8]	       609	coff-x86_64.c	FUNCTION_77	IF_6
0x400271f	          0x8b4010	            mov eax, dword [rax + 0x10] 	       609	coff-x86_64.c	FUNCTION_77	IF_6
0x4002722	            0x85c0	                           test eax, eax	       609	coff-x86_64.c	FUNCTION_77	IF_6
0x4002724	            0x745f	                            je 0x4002785	       609	coff-x86_64.c	FUNCTION_77	IF_6
0x4002726	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       612	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x400272a	         0xfb74010	           movzx eax, word [rax + 0x10] 	       612	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x400272e	        0x6683f80e	                             cmp ax, 0xe	       612	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x4002732	            0x7514	                           jne 0x4002748	       612	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x4002734	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       613	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x4002738	          0x488b00	                    mov rax, qword [rax]	       613	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x400273b	        0x488d50f8	                      lea rdx, [rax - 8]	       613	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x400273f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       613	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x4002743	          0x488910	                    mov qword [rax], rdx	       613	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x4002746	            0xeb12	                           jmp 0x400275a	       613	coff-x86_64.c	FUNCTION_77	IF_6	IF_7
0x4002748	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       616	coff-x86_64.c	FUNCTION_77	IF_6	ELSE_1
0x400274c	          0x488b00	                    mov rax, qword [rax]	       616	coff-x86_64.c	FUNCTION_77	IF_6	ELSE_1
0x400274f	        0x488d50fc	                      lea rdx, [rax - 4]	       616	coff-x86_64.c	FUNCTION_77	IF_6	ELSE_1
0x4002753	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       616	coff-x86_64.c	FUNCTION_77	IF_6	ELSE_1
0x4002757	          0x488910	                    mov qword [rax], rdx	       616	coff-x86_64.c	FUNCTION_77	IF_6	ELSE_1
0x400275a	      0x48837db800	               cmp qword [rbp - 0x48], 0	       624	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x400275f	            0x7424	                            je 0x4002785	       624	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002761	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       624	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002765	          0x8b4018	            mov eax, dword [rax + 0x18] 	       624	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002768	            0x85c0	                           test eax, eax	       624	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x400276a	            0x7419	                            je 0x4002785	       624	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x400276c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       625	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002770	          0x488b10	                    mov rdx, qword [rax]	       625	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002773	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       625	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002777	        0x488b4010	            mov rax, qword [rax + 0x10] 	       625	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x400277b	          0x4829c2	                            sub rdx, rax	       625	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x400277e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       625	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002782	          0x488910	                    mov qword [rax], rdx	       625	coff-x86_64.c	FUNCTION_77	IF_6	IF_8
0x4002785	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       628	coff-x86_64.c	FUNCTION_77	IF_9
0x4002789	         0xfb74010	           movzx eax, word [rax + 0x10] 	       628	coff-x86_64.c	FUNCTION_77	IF_9
0x400278d	        0x6683f803	                               cmp ax, 3	       628	coff-x86_64.c	FUNCTION_77	IF_9
0x4002791	            0x7549	                           jne 0x40027dc	       628	coff-x86_64.c	FUNCTION_77	IF_9
0x4002793	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       629	coff-x86_64.c	FUNCTION_77	IF_9
0x4002797	        0x488b4068	            mov rax, qword [rax + 0x68] 	       629	coff-x86_64.c	FUNCTION_77	IF_9
0x400279b	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       629	coff-x86_64.c	FUNCTION_77	IF_9
0x40027a2	        0x488b4008	                mov rax, qword [rax + 8]	       629	coff-x86_64.c	FUNCTION_77	IF_9
0x40027a6	          0x8b4008	                mov eax, dword [rax + 8]	       629	coff-x86_64.c	FUNCTION_77	IF_9
0x40027a9	          0x83f802	                              cmp eax, 2	       629	coff-x86_64.c	FUNCTION_77	IF_9
0x40027ac	            0x752e	                           jne 0x40027dc	       629	coff-x86_64.c	FUNCTION_77	IF_9
0x40027ae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027b2	          0x488b10	                    mov rdx, qword [rax]	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027b9	        0x488b4068	            mov rax, qword [rax + 0x68] 	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027bd	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027c4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027cb	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027d2	          0x4829c2	                            sub rdx, rax	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027d5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027d9	          0x488910	                    mov qword [rax], rdx	       630	coff-x86_64.c	FUNCTION_77	CALL_3
0x40027dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	coff-x86_64.c	FUNCTION_77	IF_10
0x40027e0	         0xfb74010	           movzx eax, word [rax + 0x10] 	       632	coff-x86_64.c	FUNCTION_77	IF_10
0x40027e4	        0x6683f80b	                             cmp ax, 0xb	       632	coff-x86_64.c	FUNCTION_77	IF_10
0x40027e8	     0xf858e000000	                           jne 0x400287c	       632	coff-x86_64.c	FUNCTION_77	IF_10
0x40027ee	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       636	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x40027f3	            0x742e	                            je 0x4002823	       636	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x40027f5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       636	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x40027f9	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       636	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x40027fd	            0x3c03	                               cmp al, 3	       636	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x40027ff	            0x740c	                            je 0x400280d	       636	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002801	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       637	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002805	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       637	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002809	            0x3c04	                               cmp al, 4	       637	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x400280b	            0x7516	                           jne 0x4002823	       637	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x400280d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       638	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002811	        0x488b4028	            mov rax, qword [rax + 0x28] 	       638	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002815	        0x488b4068	            mov rax, qword [rax + 0x68] 	       638	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002819	        0x488b4028	            mov rax, qword [rax + 0x28] 	       638	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x400281d	        0x488945e8	             mov qword [rbp - 0x18], rax	       638	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002821	            0xeb44	                           jmp 0x4002867	       638	coff-x86_64.c	FUNCTION_77	IF_10	IF_11
0x4002823	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002827	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x400282e	        0x488945f0	             mov qword [rbp - 0x10], rax	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002832	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002839	            0xeb10	                           jmp 0x400284b	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x400283b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       647	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x400283f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       647	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002843	        0x488945f0	             mov qword [rbp - 0x10], rax	       647	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002847	        0x8345e401	               add dword [rbp - 0x1c], 1	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x400284b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x400284f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002852	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002855	            0x7fe4	                            jg 0x400283b	       646	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2	FOR_1
0x4002857	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       649	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2
0x400285b	        0x488b4068	            mov rax, qword [rax + 0x68] 	       649	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2
0x400285f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       649	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2
0x4002863	        0x488945e8	             mov qword [rbp - 0x18], rax	       649	coff-x86_64.c	FUNCTION_77	IF_10	ELSE_2
0x4002867	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       652	coff-x86_64.c	FUNCTION_77	IF_10
0x400286b	          0x488b00	                    mov rax, qword [rax]	       652	coff-x86_64.c	FUNCTION_77	IF_10
0x400286e	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       652	coff-x86_64.c	FUNCTION_77	IF_10
0x4002872	          0x4889c2	                            mov rdx, rax	       652	coff-x86_64.c	FUNCTION_77	IF_10
0x4002875	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       652	coff-x86_64.c	FUNCTION_77	IF_10
0x4002879	          0x488910	                    mov qword [rax], rdx	       652	coff-x86_64.c	FUNCTION_77	IF_10
0x400287c	        0x488b45f8	                mov rax, qword [rbp - 8]	       656	coff-x86_64.c	FUNCTION_77
0x4002880	              0xc9	                                   leave	       657	coff-x86_64.c	FUNCTION_77
0x4002881	              0xc3	                                     ret	       657	coff-x86_64.c	FUNCTION_77
dummy_reloc16_extra_cases	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,1:DO,0	13
0x400a23b	              0x55	                                push rbp	      5161	coffcode.h	FUNCTION_39
0x400a23c	          0x4889e5	                            mov rbp, rsp	      5161	coffcode.h	FUNCTION_39
0x400a23f	        0x4883ec30	                           sub rsp, 0x30	      5161	coffcode.h	FUNCTION_39
0x400a243	        0x48897df8	                mov qword [rbp - 8], rdi	      5161	coffcode.h	FUNCTION_39
0x400a247	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5161	coffcode.h	FUNCTION_39
0x400a24b	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5161	coffcode.h	FUNCTION_39
0x400a24f	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5161	coffcode.h	FUNCTION_39
0x400a253	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      5161	coffcode.h	FUNCTION_39
0x400a257	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      5161	coffcode.h	FUNCTION_39
0x400a25b	      0xba00000000	                              mov edx, 0	      5162	coffcode.h	FUNCTION_39	CALL_1
0x400a260	      0xbe2a140000	                         mov esi, 0x142a	      5162	coffcode.h	FUNCTION_39	CALL_1
0x400a265	      0xbf00000000	                              mov edi, 0	      5162	coffcode.h	FUNCTION_39	CALL_1
0x400a26a	      0xe800000000	     call sym.coff_link_output_has_begun	      5162	coffcode.h	FUNCTION_39	CALL_1
pe_ILF_build_a_bfd	FOR,1:functions,0:WHILE,0:ELSE,3:SWITCH,4:IF,24:CALL,53:DO,0	705
0x40039af	              0x55	                                push rbp	       752	peicode.h	FUNCTION_61
0x40039b0	          0x4889e5	                            mov rbp, rsp	       752	peicode.h	FUNCTION_61
0x40039b3	            0x4154	                                push r12	       752	peicode.h	FUNCTION_61
0x40039b5	              0x53	                                push rbx	       752	peicode.h	FUNCTION_61
0x40039b6	    0x4881ec400a00	                          sub rsp, 0xa40	       752	peicode.h	FUNCTION_61
0x40039bd	    0x4889bdd8f5ff	            mov qword [rbp - 0xa28], rdi	       752	peicode.h	FUNCTION_61
0x40039c4	    0x89b5d4f5ffff	            mov dword [rbp - 0xa2c], esi	       752	peicode.h	FUNCTION_61
0x40039ca	    0x488995c8f5ff	            mov qword [rbp - 0xa38], rdx	       752	peicode.h	FUNCTION_61
0x40039d1	    0x48898dc0f5ff	            mov qword [rbp - 0xa40], rcx	       752	peicode.h	FUNCTION_61
0x40039d8	    0x448985d0f5ff	            mov dword [rbp - 0xa30], r8d	       752	peicode.h	FUNCTION_61
0x40039df	    0x44898dbcf5ff	            mov dword [rbp - 0xa44], r9d	       752	peicode.h	FUNCTION_61
0x40039e6	    0x64488b042528	                mov rax, qword fs:[0x28]	       752	peicode.h	FUNCTION_61
0x40039ef	        0x488945e8	             mov qword [rbp - 0x18], rax	       752	peicode.h	FUNCTION_61
0x40039f3	            0x31c0	                            xor eax, eax	       752	peicode.h	FUNCTION_61
0x40039f5	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	       758	peicode.h	FUNCTION_61
0x4003a00	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	       758	peicode.h	FUNCTION_61
0x4003a0b	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	       763	peicode.h	FUNCTION_61
0x4003a11	          0x83e003	                              and eax, 3	       763	peicode.h	FUNCTION_61
0x4003a14	    0x8985f0f5ffff	            mov dword [rbp - 0xa10], eax	       763	peicode.h	FUNCTION_61
0x4003a1a	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	       764	peicode.h	FUNCTION_61
0x4003a20	          0x83e01c	                           and eax, 0x1c	       764	peicode.h	FUNCTION_61
0x4003a23	          0xc1e802	                              shr eax, 2	       764	peicode.h	FUNCTION_61
0x4003a26	    0x8985f4f5ffff	            mov dword [rbp - 0xa0c], eax	       764	peicode.h	FUNCTION_61
0x4003a2c	    0x8b85f0f5ffff	            mov eax, dword [rbp - 0xa10]	       766	peicode.h	FUNCTION_61	SWITCH_1
0x4003a32	          0x83f801	                              cmp eax, 1	       766	peicode.h	FUNCTION_61	SWITCH_1
0x4003a35	            0x7677	                           jbe 0x4003aae	       766	peicode.h	FUNCTION_61	SWITCH_1
0x4003a37	          0x83f802	                              cmp eax, 2	       766	peicode.h	FUNCTION_61	SWITCH_1
0x4003a3a	            0x7539	                           jne 0x4003a75	       766	peicode.h	FUNCTION_61	SWITCH_1
0x4003a3c	      0xbe00000000	                              mov esi, 0	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a41	      0xbf00000000	                              mov edi, 0	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a46	      0xe800000000	                          call 0x4003a4b	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a4b	          0x4889c1	                            mov rcx, rax	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a4e	    0x8b95f0f5ffff	            mov edx, dword [rbp - 0xa10]	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a54	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a5b	          0x4889c6	                            mov rsi, rax	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a5e	          0x4889cf	                            mov rdi, rcx	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a61	      0xb800000000	                              mov eax, 0	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a66	      0xe800000000	                          call 0x4003a6b	       775	peicode.h	FUNCTION_61	SWITCH_1	CALL_2
0x4003a6b	      0xb800000000	                              mov eax, 0	       777	peicode.h	FUNCTION_61	SWITCH_1
0x4003a70	      0xe9ba0c0000	                           jmp 0x400472f	       777	peicode.h	FUNCTION_61	SWITCH_1
0x4003a75	      0xbe00000000	                              mov esi, 0	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a7a	      0xbf00000000	                              mov edi, 0	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a7f	      0xe800000000	                          call 0x4003a84	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a84	          0x4889c1	                            mov rcx, rax	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a87	    0x8b95f0f5ffff	            mov edx, dword [rbp - 0xa10]	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a8d	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a94	          0x4889c6	                            mov rsi, rax	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a97	          0x4889cf	                            mov rdi, rcx	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a9a	      0xb800000000	                              mov eax, 0	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003a9f	      0xe800000000	                          call 0x4003aa4	       781	peicode.h	FUNCTION_61	SWITCH_1	CALL_4
0x4003aa4	      0xb800000000	                              mov eax, 0	       783	peicode.h	FUNCTION_61	SWITCH_1
0x4003aa9	      0xe9810c0000	                           jmp 0x400472f	       783	peicode.h	FUNCTION_61	SWITCH_1
0x4003aae	              0x90	                                     nop	       770	peicode.h	FUNCTION_61	SWITCH_1
0x4003aaf	    0x8b85f4f5ffff	            mov eax, dword [rbp - 0xa0c]	       786	peicode.h	FUNCTION_61	SWITCH_2
0x4003ab5	          0x83f803	                              cmp eax, 3	       786	peicode.h	FUNCTION_61	SWITCH_2
0x4003ab8	            0x7639	                           jbe 0x4003af3	       786	peicode.h	FUNCTION_61	SWITCH_2
0x4003aba	      0xbe00000000	                              mov esi, 0	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003abf	      0xbf00000000	                              mov edi, 0	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003ac4	      0xe800000000	                          call 0x4003ac9	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003ac9	          0x4889c1	                            mov rcx, rax	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003acc	    0x8b95f4f5ffff	            mov edx, dword [rbp - 0xa0c]	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003ad2	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003ad9	          0x4889c6	                            mov rsi, rax	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003adc	          0x4889cf	                            mov rdi, rcx	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003adf	      0xb800000000	                              mov eax, 0	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003ae4	      0xe800000000	                          call 0x4003ae9	       796	peicode.h	FUNCTION_61	SWITCH_2	CALL_6
0x4003ae9	      0xb800000000	                              mov eax, 0	       798	peicode.h	FUNCTION_61	SWITCH_2
0x4003aee	      0xe93c0c0000	                           jmp 0x400472f	       798	peicode.h	FUNCTION_61	SWITCH_2
0x4003af3	              0x90	                                     nop	       792	peicode.h	FUNCTION_61	SWITCH_2
0x4003af4	      0xbf10000000	                           mov edi, 0x10	       809	peicode.h	FUNCTION_61	CALL_7
0x4003af9	      0xe800000000	                          call 0x4003afe	       809	peicode.h	FUNCTION_61	CALL_7
0x4003afe	    0x48898550f6ff	            mov qword [rbp - 0x9b0], rax	       809	peicode.h	FUNCTION_61	CALL_7
0x4003b05	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	       810	peicode.h	FUNCTION_61	IF_1
0x4003b0c	          0x4885c0	                           test rax, rax	       810	peicode.h	FUNCTION_61	IF_1
0x4003b0f	            0x750a	                           jne 0x4003b1b	       810	peicode.h	FUNCTION_61	IF_1
0x4003b11	      0xb800000000	                              mov eax, 0	       811	peicode.h	FUNCTION_61	IF_1
0x4003b16	      0xe9140c0000	                           jmp 0x400472f	       811	peicode.h	FUNCTION_61	IF_1
0x4003b1b	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b22	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b25	      0xe800000000	                          call 0x4003b2a	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b2a	        0x4883c004	                              add rax, 4	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b2e	        0x488d1c00	                    lea rbx, [rax + rax]	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b32	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b39	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b3c	      0xe800000000	                          call 0x4003b41	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b41	          0x4801c3	                            add rbx, rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b44	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b4b	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b4e	      0xe800000000	                          call 0x4003b53	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b53	          0x4801c3	                            add rbx, rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b56	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b5d	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b60	      0xe800000000	                          call 0x4003b65	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b65	          0x4801d8	                            add rax, rbx	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b68	    0x4805c9090000	                          add rax, 0x9c9	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b6e	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b71	      0xe800000000	                          call 0x4003b76	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b76	    0x48898500f6ff	            mov qword [rbp - 0xa00], rax	       813	peicode.h	FUNCTION_61	CALL_8
0x4003b7d	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	       814	peicode.h	FUNCTION_61
0x4003b84	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	       814	peicode.h	FUNCTION_61
0x4003b8b	        0x48895008	                mov qword [rax + 8], rdx	       814	peicode.h	FUNCTION_61
0x4003b8f	    0x488b9d50f6ff	            mov rbx, qword [rbp - 0x9b0]	       815	peicode.h	FUNCTION_61
0x4003b96	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       815	peicode.h	FUNCTION_61
0x4003b9d	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_61
0x4003ba0	      0xe800000000	                          call 0x4003ba5	       815	peicode.h	FUNCTION_61
0x4003ba5	        0x4883c004	                              add rax, 4	       815	peicode.h	FUNCTION_61
0x4003ba9	        0x4c8d2400	                    lea r12, [rax + rax]	       815	peicode.h	FUNCTION_61
0x4003bad	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       815	peicode.h	FUNCTION_61
0x4003bb4	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_61
0x4003bb7	      0xe800000000	                          call 0x4003bbc	       815	peicode.h	FUNCTION_61
0x4003bbc	          0x4901c4	                            add r12, rax	       815	peicode.h	FUNCTION_61
0x4003bbf	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       815	peicode.h	FUNCTION_61
0x4003bc6	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_61
0x4003bc9	      0xe800000000	                          call 0x4003bce	       815	peicode.h	FUNCTION_61
0x4003bce	          0x4901c4	                            add r12, rax	       815	peicode.h	FUNCTION_61
0x4003bd1	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       815	peicode.h	FUNCTION_61
0x4003bd8	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_61
0x4003bdb	      0xe800000000	                          call 0x4003be0	       815	peicode.h	FUNCTION_61
0x4003be0	          0x4c01e0	                            add rax, r12	       815	peicode.h	FUNCTION_61
0x4003be3	    0x4805c9090000	                          add rax, 0x9c9	       815	peicode.h	FUNCTION_61
0x4003be9	          0x488903	                    mov qword [rbx], rax	       815	peicode.h	FUNCTION_61
0x4003bec	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	       816	peicode.h	FUNCTION_61	IF_2
0x4003bf4	     0xf84f10a0000	                            je 0x40046eb	       816	peicode.h	FUNCTION_61	IF_2
0x4003bfa	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       821	peicode.h	FUNCTION_61
0x4003c01	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	       821	peicode.h	FUNCTION_61
0x4003c08	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       822	peicode.h	FUNCTION_61
0x4003c0f	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	       822	peicode.h	FUNCTION_61
0x4003c16	    0xc78580f6ffff	              mov dword [rbp - 0x980], 0	       823	peicode.h	FUNCTION_61
0x4003c20	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x240	       824	peicode.h	FUNCTION_61
0x4003c2b	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       826	peicode.h	FUNCTION_61
0x4003c32	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	       826	peicode.h	FUNCTION_61
0x4003c39	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       827	peicode.h	FUNCTION_61
0x4003c40	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	       827	peicode.h	FUNCTION_61
0x4003c47	    0x48838500f6ff	           add qword [rbp - 0xa00], 0x20	       828	peicode.h	FUNCTION_61
0x4003c4f	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       830	peicode.h	FUNCTION_61
0x4003c56	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	       830	peicode.h	FUNCTION_61
0x4003c5d	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       831	peicode.h	FUNCTION_61
0x4003c64	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	       831	peicode.h	FUNCTION_61
0x4003c6b	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x1c0	       832	peicode.h	FUNCTION_61
0x4003c76	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       834	peicode.h	FUNCTION_61
0x4003c7d	    0x488985a8f6ff	            mov qword [rbp - 0x958], rax	       834	peicode.h	FUNCTION_61
0x4003c84	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       835	peicode.h	FUNCTION_61
0x4003c8b	    0x488985b0f6ff	            mov qword [rbp - 0x950], rax	       835	peicode.h	FUNCTION_61
0x4003c92	    0x48838500f6ff	          add qword [rbp - 0xa00], 0x40 	       836	peicode.h	FUNCTION_61
0x4003c9a	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       838	peicode.h	FUNCTION_61
0x4003ca1	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       838	peicode.h	FUNCTION_61
0x4003ca8	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       839	peicode.h	FUNCTION_61
0x4003caf	    0x488985e0f6ff	            mov qword [rbp - 0x920], rax	       839	peicode.h	FUNCTION_61
0x4003cb6	    0x48818500f6ff	           add qword [rbp - 0xa00], 0x90	       840	peicode.h	FUNCTION_61
0x4003cc1	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       842	peicode.h	FUNCTION_61
0x4003cc8	    0x48898560f6ff	            mov qword [rbp - 0x9a0], rax	       842	peicode.h	FUNCTION_61
0x4003ccf	    0xc78568f6ffff	              mov dword [rbp - 0x998], 0	       843	peicode.h	FUNCTION_61
0x4003cd9	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x100	       844	peicode.h	FUNCTION_61
0x4003ce4	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       846	peicode.h	FUNCTION_61
0x4003ceb	    0x488985e8f6ff	            mov qword [rbp - 0x918], rax	       846	peicode.h	FUNCTION_61
0x4003cf2	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x100	       847	peicode.h	FUNCTION_61
0x4003cfd	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       849	peicode.h	FUNCTION_61
0x4003d04	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	       849	peicode.h	FUNCTION_61
0x4003d0b	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       850	peicode.h	FUNCTION_61
0x4003d12	        0x4883c004	                              add rax, 4	       850	peicode.h	FUNCTION_61
0x4003d16	    0x488985c8f6ff	            mov qword [rbp - 0x938], rax	       850	peicode.h	FUNCTION_61
0x4003d1d	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       851	peicode.h	FUNCTION_61
0x4003d24	          0x4889c7	                            mov rdi, rax	       851	peicode.h	FUNCTION_61
0x4003d27	      0xe800000000	                          call 0x4003d2c	       851	peicode.h	FUNCTION_61
0x4003d2c	        0x4883c004	                              add rax, 4	       851	peicode.h	FUNCTION_61
0x4003d30	        0x488d1c00	                    lea rbx, [rax + rax]	       851	peicode.h	FUNCTION_61
0x4003d34	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       851	peicode.h	FUNCTION_61
0x4003d3b	          0x4889c7	                            mov rdi, rax	       851	peicode.h	FUNCTION_61
0x4003d3e	      0xe800000000	                          call 0x4003d43	       851	peicode.h	FUNCTION_61
0x4003d43	          0x4801d8	                            add rax, rbx	       851	peicode.h	FUNCTION_61
0x4003d46	        0x4883c04f	                           add rax, 0x4f	       851	peicode.h	FUNCTION_61
0x4003d4a	    0x48018500f6ff	           add qword [rbp - 0xa00], rax 	       851	peicode.h	FUNCTION_61
0x4003d51	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       852	peicode.h	FUNCTION_61
0x4003d58	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       852	peicode.h	FUNCTION_61
0x4003d5f	    0xc785f8f5ffff	              mov dword [rbp - 0xa08], 8	       867	peicode.h	FUNCTION_61	CALL_9
0x4003d69	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       869	peicode.h	FUNCTION_61	IF_3
0x4003d70	          0x4889c7	                            mov rdi, rax	       869	peicode.h	FUNCTION_61	IF_3
0x4003d73	      0xe800000000	                          call 0x4003d78	       869	peicode.h	FUNCTION_61	IF_3
0x4003d78	        0x4883c004	                              add rax, 4	       869	peicode.h	FUNCTION_61	IF_3
0x4003d7c	        0x488d1c00	                    lea rbx, [rax + rax]	       869	peicode.h	FUNCTION_61	IF_3
0x4003d80	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       869	peicode.h	FUNCTION_61	IF_3
0x4003d87	          0x4889c7	                            mov rdi, rax	       869	peicode.h	FUNCTION_61	IF_3
0x4003d8a	      0xe800000000	                          call 0x4003d8f	       869	peicode.h	FUNCTION_61	IF_3
0x4003d8f	          0x4801d8	                            add rax, rbx	       869	peicode.h	FUNCTION_61	IF_3
0x4003d92	        0x488d504f	                   lea rdx, [rax + 0x4f]	       869	peicode.h	FUNCTION_61	IF_3
0x4003d96	    0x8b85f8f5ffff	            mov eax, dword [rbp - 0xa08]	       869	peicode.h	FUNCTION_61	IF_3
0x4003d9c	          0x83e801	                              sub eax, 1	       869	peicode.h	FUNCTION_61	IF_3
0x4003d9f	            0x89c0	                            mov eax, eax	       869	peicode.h	FUNCTION_61	IF_3
0x4003da1	          0x4821d0	                            and rax, rdx	       869	peicode.h	FUNCTION_61	IF_3
0x4003da4	          0x4885c0	                           test rax, rax	       869	peicode.h	FUNCTION_61	IF_3
0x4003da7	            0x744e	                            je 0x4003df7	       869	peicode.h	FUNCTION_61	IF_3
0x4003da9	    0x8b9df8f5ffff	            mov ebx, dword [rbp - 0xa08]	       870	peicode.h	FUNCTION_61	IF_3
0x4003daf	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       870	peicode.h	FUNCTION_61	IF_3
0x4003db6	          0x4889c7	                            mov rdi, rax	       870	peicode.h	FUNCTION_61	IF_3
0x4003db9	      0xe800000000	                          call 0x4003dbe	       870	peicode.h	FUNCTION_61	IF_3
0x4003dbe	        0x4883c004	                              add rax, 4	       870	peicode.h	FUNCTION_61	IF_3
0x4003dc2	        0x4c8d2400	                    lea r12, [rax + rax]	       870	peicode.h	FUNCTION_61	IF_3
0x4003dc6	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       870	peicode.h	FUNCTION_61	IF_3
0x4003dcd	          0x4889c7	                            mov rdi, rax	       870	peicode.h	FUNCTION_61	IF_3
0x4003dd0	      0xe800000000	                          call 0x4003dd5	       870	peicode.h	FUNCTION_61	IF_3
0x4003dd5	          0x4c01e0	                            add rax, r12	       870	peicode.h	FUNCTION_61	IF_3
0x4003dd8	        0x488d504f	                   lea rdx, [rax + 0x4f]	       870	peicode.h	FUNCTION_61	IF_3
0x4003ddc	    0x8b85f8f5ffff	            mov eax, dword [rbp - 0xa08]	       870	peicode.h	FUNCTION_61	IF_3
0x4003de2	          0x83e801	                              sub eax, 1	       870	peicode.h	FUNCTION_61	IF_3
0x4003de5	            0x89c0	                            mov eax, eax	       870	peicode.h	FUNCTION_61	IF_3
0x4003de7	          0x4821d0	                            and rax, rdx	       870	peicode.h	FUNCTION_61	IF_3
0x4003dea	          0x4829c3	                            sub rbx, rax	       870	peicode.h	FUNCTION_61	IF_3
0x4003ded	          0x4889d8	                            mov rax, rbx	       870	peicode.h	FUNCTION_61	IF_3
0x4003df0	    0x48018500f6ff	           add qword [rbp - 0xa00], rax 	       870	peicode.h	FUNCTION_61	IF_3
0x4003df7	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       874	peicode.h	FUNCTION_61
0x4003dfe	    0x48898548f6ff	            mov qword [rbp - 0x9b8], rax	       874	peicode.h	FUNCTION_61
0x4003e05	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       875	peicode.h	FUNCTION_61
0x4003e0c	    0x48898540f6ff	            mov qword [rbp - 0x9c0], rax	       875	peicode.h	FUNCTION_61
0x4003e13	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 0	       876	peicode.h	FUNCTION_61
0x4003e1d	    0x8b85d4f5ffff	            mov eax, dword [rbp - 0xa2c]	       877	peicode.h	FUNCTION_61
0x4003e23	    0x66898558f6ff	              mov word [rbp - 0x9a8], ax	       877	peicode.h	FUNCTION_61
0x4003e2a	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       886	peicode.h	FUNCTION_61	CALL_10
0x4003e31	      0xb900000000	                              mov ecx, 0	       886	peicode.h	FUNCTION_61	CALL_10
0x4003e36	      0xba08000000	                              mov edx, 8	       886	peicode.h	FUNCTION_61	CALL_10
0x4003e3b	      0xbe00000000	                              mov esi, 0	       886	peicode.h	FUNCTION_61	CALL_10
0x4003e40	          0x4889c7	                            mov rdi, rax	       886	peicode.h	FUNCTION_61	CALL_10
0x4003e43	      0xe859f9ffff	          call sym.pe_ILF_make_a_section	       886	peicode.h	FUNCTION_61	CALL_10
0x4003e48	    0x48898520f6ff	            mov qword [rbp - 0x9e0], rax	       886	peicode.h	FUNCTION_61	CALL_10
0x4003e4f	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       887	peicode.h	FUNCTION_61	CALL_11
0x4003e56	      0xb900000000	                              mov ecx, 0	       887	peicode.h	FUNCTION_61	CALL_11
0x4003e5b	      0xba08000000	                              mov edx, 8	       887	peicode.h	FUNCTION_61	CALL_11
0x4003e60	      0xbe00000000	                              mov esi, 0	       887	peicode.h	FUNCTION_61	CALL_11
0x4003e65	          0x4889c7	                            mov rdi, rax	       887	peicode.h	FUNCTION_61	CALL_11
0x4003e68	      0xe834f9ffff	          call sym.pe_ILF_make_a_section	       887	peicode.h	FUNCTION_61	CALL_11
0x4003e6d	    0x48898528f6ff	            mov qword [rbp - 0x9d8], rax	       887	peicode.h	FUNCTION_61	CALL_11
0x4003e74	    0x4883bd20f6ff	              cmp qword [rbp - 0x9e0], 0	       888	peicode.h	FUNCTION_61	IF_4
0x4003e7c	     0xf8476080000	                            je 0x40046f8	       888	peicode.h	FUNCTION_61	IF_4
0x4003e82	    0x4883bd28f6ff	              cmp qword [rbp - 0x9d8], 0	       888	peicode.h	FUNCTION_61	IF_4
0x4003e8a	     0xf8468080000	                            je 0x40046f8	       888	peicode.h	FUNCTION_61	IF_4
0x4003e90	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 0	       892	peicode.h	FUNCTION_61	IF_5
0x4003e97	            0x756e	                           jne 0x4003f07	       892	peicode.h	FUNCTION_61	IF_5
0x4003e99	    0x83bdd0f5ffff	              cmp dword [rbp - 0xa30], 0	       894	peicode.h	FUNCTION_61	IF_5	IF_6
0x4003ea0	     0xf8448080000	                            je 0x40046ee	       894	peicode.h	FUNCTION_61	IF_5	IF_6
0x4003ea6	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	       899	peicode.h	FUNCTION_61	IF_5
0x4003ead	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       899	peicode.h	FUNCTION_61	IF_5
0x4003eb4	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       899	peicode.h	FUNCTION_61	IF_5
0x4003eba	            0x8910	                    mov dword [rax], edx	       899	peicode.h	FUNCTION_61	IF_5
0x4003ebc	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	       900	peicode.h	FUNCTION_61	IF_5
0x4003ec3	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       900	peicode.h	FUNCTION_61	IF_5
0x4003eca	        0x4883c004	                              add rax, 4	       900	peicode.h	FUNCTION_61	IF_5
0x4003ece	    0xc70000000080	            mov dword [rax], 0x80000000 	       900	peicode.h	FUNCTION_61	IF_5
0x4003ed4	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	       901	peicode.h	FUNCTION_61	IF_5
0x4003edb	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       901	peicode.h	FUNCTION_61	IF_5
0x4003ee2	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       901	peicode.h	FUNCTION_61	IF_5
0x4003ee8	            0x8910	                    mov dword [rax], edx	       901	peicode.h	FUNCTION_61	IF_5
0x4003eea	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	       902	peicode.h	FUNCTION_61	IF_5
0x4003ef1	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       902	peicode.h	FUNCTION_61	IF_5
0x4003ef8	        0x4883c004	                              add rax, 4	       902	peicode.h	FUNCTION_61	IF_5
0x4003efc	    0xc70000000080	            mov dword [rax], 0x80000000 	       902	peicode.h	FUNCTION_61	IF_5
0x4003f02	      0xe976010000	                           jmp 0x400407d	       902	peicode.h	FUNCTION_61	IF_5
0x4003f07	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f0e	          0x4889c7	                            mov rdi, rax	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f11	      0xe800000000	                          call 0x4003f16	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f16	          0x8d5004	                      lea edx, [rax + 4]	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f19	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f20	      0xb900000000	                              mov ecx, 0	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f25	      0xbe00000000	                              mov esi, 0	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f2a	          0x4889c7	                            mov rdi, rax	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f2d	      0xe86ff8ffff	          call sym.pe_ILF_make_a_section	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f32	    0x48898508f6ff	            mov qword [rbp - 0x9f8], rax	       914	peicode.h	FUNCTION_61	ELSE_1	CALL_12
0x4003f39	    0x4883bd08f6ff	              cmp qword [rbp - 0x9f8], 0	       915	peicode.h	FUNCTION_61	ELSE_1	IF_7
0x4003f41	     0xf84aa070000	                            je 0x40046f1	       915	peicode.h	FUNCTION_61	ELSE_1	IF_7
0x4003f47	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       919	peicode.h	FUNCTION_61	ELSE_1
0x4003f4e	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	       919	peicode.h	FUNCTION_61	ELSE_1
0x4003f55	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 1	       928	peicode.h	FUNCTION_61	ELSE_1	IF_8
0x4003f5c	            0x7446	                            je 0x4003fa4	       928	peicode.h	FUNCTION_61	ELSE_1	IF_8
0x4003f5e	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       930	peicode.h	FUNCTION_61	ELSE_1	IF_8
0x4003f65	           0xfb600	                   movzx eax, byte [rax]	       930	peicode.h	FUNCTION_61	ELSE_1	IF_8
0x4003f68	    0x8885e7f5ffff	              mov byte [rbp - 0xa19], al	       930	peicode.h	FUNCTION_61	ELSE_1	IF_8
0x4003f6e	    0x80bde7f5ffff	           cmp byte [rbp - 0xa19], 0x5f 	       934	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f75	            0x7513	                           jne 0x4003f8a	       934	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f77	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       934	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f7e	        0x488b4008	                mov rax, qword [rax + 8]	       934	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f82	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	       934	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f86	            0x84c0	                             test al, al	       934	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f88	            0x7512	                           jne 0x4003f9c	       934	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f8a	    0x80bde7f5ffff	           cmp byte [rbp - 0xa19], 0x40 	       935	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f91	            0x7409	                            je 0x4003f9c	       935	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f93	    0x80bde7f5ffff	           cmp byte [rbp - 0xa19], 0x3f 	       935	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f9a	            0x7508	                           jne 0x4003fa4	       935	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003f9c	    0x48838518f6ff	              add qword [rbp - 0x9e8], 1	       936	peicode.h	FUNCTION_61	ELSE_1	IF_8	IF_9
0x4003fa4	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       939	peicode.h	FUNCTION_61	ELSE_1	CALL_13
0x4003fab	          0x4889c7	                            mov rdi, rax	       939	peicode.h	FUNCTION_61	ELSE_1	CALL_13
0x4003fae	      0xe800000000	                          call 0x4003fb3	       939	peicode.h	FUNCTION_61	ELSE_1	CALL_13
0x4003fb3	    0x8985e8f5ffff	            mov dword [rbp - 0xa18], eax	       939	peicode.h	FUNCTION_61	ELSE_1	CALL_13
0x4003fb9	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 3	       940	peicode.h	FUNCTION_61	ELSE_1	IF_10
0x4003fc0	            0x753f	                           jne 0x4004001	       940	peicode.h	FUNCTION_61	ELSE_1	IF_10
0x4003fc2	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       943	peicode.h	FUNCTION_61	ELSE_1	IF_10	CALL_14
0x4003fc9	      0xbe40000000	                           mov esi, 0x40	       943	peicode.h	FUNCTION_61	ELSE_1	IF_10	CALL_14
0x4003fce	          0x4889c7	                            mov rdi, rax	       943	peicode.h	FUNCTION_61	ELSE_1	IF_10	CALL_14
0x4003fd1	      0xe800000000	                          call 0x4003fd6	       943	peicode.h	FUNCTION_61	ELSE_1	IF_10	CALL_14
0x4003fd6	    0x48898530f6ff	            mov qword [rbp - 0x9d0], rax	       943	peicode.h	FUNCTION_61	ELSE_1	IF_10	CALL_14
0x4003fdd	    0x4883bd30f6ff	              cmp qword [rbp - 0x9d0], 0	       945	peicode.h	FUNCTION_61	ELSE_1	IF_10	IF_11
0x4003fe5	            0x741a	                            je 0x4004001	       945	peicode.h	FUNCTION_61	ELSE_1	IF_10	IF_11
0x4003fe7	    0x488b9530f6ff	            mov rdx, qword [rbp - 0x9d0]	       946	peicode.h	FUNCTION_61	ELSE_1	IF_10	IF_11
0x4003fee	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       946	peicode.h	FUNCTION_61	ELSE_1	IF_10	IF_11
0x4003ff5	          0x4829c2	                            sub rdx, rax	       946	peicode.h	FUNCTION_61	ELSE_1	IF_10	IF_11
0x4003ff8	          0x4889d0	                            mov rax, rdx	       946	peicode.h	FUNCTION_61	ELSE_1	IF_10	IF_11
0x4003ffb	    0x8985e8f5ffff	            mov dword [rbp - 0xa18], eax	       946	peicode.h	FUNCTION_61	ELSE_1	IF_10	IF_11
0x4004001	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       949	peicode.h	FUNCTION_61	ELSE_1
0x4004008	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       949	peicode.h	FUNCTION_61	ELSE_1
0x400400f	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       949	peicode.h	FUNCTION_61	ELSE_1
0x4004015	            0x8810	                      mov byte [rax], dl	       949	peicode.h	FUNCTION_61	ELSE_1
0x4004017	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       950	peicode.h	FUNCTION_61	ELSE_1
0x400401e	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       950	peicode.h	FUNCTION_61	ELSE_1
0x4004025	        0x4883c001	                              add rax, 1	       950	peicode.h	FUNCTION_61	ELSE_1
0x4004029	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       950	peicode.h	FUNCTION_61	ELSE_1
0x400402f	          0xc1ea08	                              shr edx, 8	       950	peicode.h	FUNCTION_61	ELSE_1
0x4004032	            0x8810	                      mov byte [rax], dl	       950	peicode.h	FUNCTION_61	ELSE_1
0x4004034	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x400403a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x4004041	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x4004048	        0x488d4802	                      lea rcx, [rax + 2]	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x400404c	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x4004053	          0x4889c6	                            mov rsi, rax	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x4004056	          0x4889cf	                            mov rdi, rcx	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x4004059	      0xe800000000	                          call 0x400405e	       952	peicode.h	FUNCTION_61	ELSE_1	CALL_15
0x400405e	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       953	peicode.h	FUNCTION_61	ELSE_1
0x4004065	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       953	peicode.h	FUNCTION_61	ELSE_1
0x400406c	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	       953	peicode.h	FUNCTION_61	ELSE_1
0x4004072	          0x83c202	                              add edx, 2	       953	peicode.h	FUNCTION_61	ELSE_1
0x4004075	            0x89d2	                            mov edx, edx	       953	peicode.h	FUNCTION_61	ELSE_1
0x4004077	          0x4801d0	                            add rax, rdx	       953	peicode.h	FUNCTION_61	ELSE_1
0x400407a	          0xc60000	                       mov byte [rax], 0	       953	peicode.h	FUNCTION_61	ELSE_1
0x400407d	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 0	       956	peicode.h	FUNCTION_61	IF_12
0x4004084	            0x7478	                            je 0x40040fe	       956	peicode.h	FUNCTION_61	IF_12
0x4004086	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	       958	peicode.h	FUNCTION_61	IF_12	CALL_16
0x400408d	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       958	peicode.h	FUNCTION_61	IF_12	CALL_16
0x4004094	          0x4889d1	                            mov rcx, rdx	       958	peicode.h	FUNCTION_61	IF_12	CALL_16
0x4004097	      0xba3e000000	                           mov edx, 0x3e	       958	peicode.h	FUNCTION_61	IF_12	CALL_16
0x400409c	      0xbe00000000	                              mov esi, 0	       958	peicode.h	FUNCTION_61	IF_12	CALL_16
0x40040a1	          0x4889c7	                            mov rdi, rax	       958	peicode.h	FUNCTION_61	IF_12	CALL_16
0x40040a4	      0xe8ecf2ffff	            call sym.pe_ILF_make_a_reloc	       958	peicode.h	FUNCTION_61	IF_12	CALL_16
0x40040a9	    0x488b9520f6ff	            mov rdx, qword [rbp - 0x9e0]	       959	peicode.h	FUNCTION_61	IF_12	CALL_17
0x40040b0	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       959	peicode.h	FUNCTION_61	IF_12	CALL_17
0x40040b7	          0x4889d6	                            mov rsi, rdx	       959	peicode.h	FUNCTION_61	IF_12	CALL_17
0x40040ba	          0x4889c7	                            mov rdi, rax	       959	peicode.h	FUNCTION_61	IF_12	CALL_17
0x40040bd	      0xe81cf3ffff	             call sym.pe_ILF_save_relocs	       959	peicode.h	FUNCTION_61	IF_12	CALL_17
0x40040c2	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	       961	peicode.h	FUNCTION_61	IF_12	CALL_18
0x40040c9	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       961	peicode.h	FUNCTION_61	IF_12	CALL_18
0x40040d0	          0x4889d1	                            mov rcx, rdx	       961	peicode.h	FUNCTION_61	IF_12	CALL_18
0x40040d3	      0xba3e000000	                           mov edx, 0x3e	       961	peicode.h	FUNCTION_61	IF_12	CALL_18
0x40040d8	      0xbe00000000	                              mov esi, 0	       961	peicode.h	FUNCTION_61	IF_12	CALL_18
0x40040dd	          0x4889c7	                            mov rdi, rax	       961	peicode.h	FUNCTION_61	IF_12	CALL_18
0x40040e0	      0xe8b0f2ffff	            call sym.pe_ILF_make_a_reloc	       961	peicode.h	FUNCTION_61	IF_12	CALL_18
0x40040e5	    0x488b9528f6ff	            mov rdx, qword [rbp - 0x9d8]	       962	peicode.h	FUNCTION_61	IF_12	CALL_19
0x40040ec	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       962	peicode.h	FUNCTION_61	IF_12	CALL_19
0x40040f3	          0x4889d6	                            mov rsi, rdx	       962	peicode.h	FUNCTION_61	IF_12	CALL_19
0x40040f6	          0x4889c7	                            mov rdi, rax	       962	peicode.h	FUNCTION_61	IF_12	CALL_19
0x40040f9	      0xe8e0f2ffff	             call sym.pe_ILF_save_relocs	       962	peicode.h	FUNCTION_61	IF_12	CALL_19
0x40040fe	    0x488b8d28f6ff	            mov rcx, qword [rbp - 0x9d8]	       966	peicode.h	FUNCTION_61	CALL_20
0x4004105	    0x488b95c8f5ff	            mov rdx, qword [rbp - 0xa38]	       966	peicode.h	FUNCTION_61	CALL_20
0x400410c	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       966	peicode.h	FUNCTION_61	CALL_20
0x4004113	    0x41b800000000	                              mov r8d, 0	       966	peicode.h	FUNCTION_61	CALL_20
0x4004119	      0xbe00000000	                              mov esi, 0	       966	peicode.h	FUNCTION_61	CALL_20
0x400411e	          0x4889c7	                            mov rdi, rax	       966	peicode.h	FUNCTION_61	CALL_20
0x4004121	      0xe8c9f3ffff	           call sym.pe_ILF_make_a_symbol	       966	peicode.h	FUNCTION_61	CALL_20
0x4004126	    0x488b85b0f6ff	            mov rax, qword [rbp - 0x950]	       967	peicode.h	FUNCTION_61
0x400412d	        0x4883e808	                              sub rax, 8	       967	peicode.h	FUNCTION_61
0x4004131	    0x48898538f6ff	            mov qword [rbp - 0x9c8], rax	       967	peicode.h	FUNCTION_61
0x4004138	    0x8b8580f6ffff	            mov eax, dword [rbp - 0x980]	       968	peicode.h	FUNCTION_61
0x400413e	          0x83e801	                              sub eax, 1	       968	peicode.h	FUNCTION_61
0x4004141	    0x8985fcf5ffff	            mov dword [rbp - 0xa04], eax	       968	peicode.h	FUNCTION_61
0x4004147	    0x8b85f0f5ffff	            mov eax, dword [rbp - 0xa10]	       971	peicode.h	FUNCTION_61	SWITCH_3
0x400414d	            0x85c0	                           test eax, eax	       971	peicode.h	FUNCTION_61	SWITCH_3
0x400414f	            0x740e	                            je 0x400415f	       971	peicode.h	FUNCTION_61	SWITCH_3
0x4004151	          0x83f801	                              cmp eax, 1	       971	peicode.h	FUNCTION_61	SWITCH_3
0x4004154	     0xf8436020000	                            je 0x4004390	       971	peicode.h	FUNCTION_61	SWITCH_3
0x400415a	      0xe91d020000	                           jmp 0x400437c	       971	peicode.h	FUNCTION_61	SWITCH_3
0x400415f	    0xc785ecf5ffff	              mov dword [rbp - 0xa14], 2	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x4004169	            0xeb5c	                           jmp 0x40041c7	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x400416b	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004171	          0x4863d0	                         movsxd rdx, eax	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004174	          0x4889d0	                            mov rax, rdx	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004177	        0x48c1e002	                              shl rax, 2	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x400417b	          0x4801d0	                            add rax, rdx	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x400417e	          0x4801c0	                            add rax, rax	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004181	          0x4801d0	                            add rax, rdx	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004184	        0x48c1e002	                              shl rax, 2	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004188	    0x480500000000	                              add rax, 0	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x400418e	            0x8b00	                    mov eax, dword [rax]	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004190	            0x85c0	                           test eax, eax	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004192	            0x7502	                           jne 0x4004196	       981	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004194	            0xeb31	                           jmp 0x40041c7	       982	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_13
0x4004196	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x400419c	          0x4863d0	                         movsxd rdx, eax	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x400419f	          0x4889d0	                            mov rax, rdx	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041a2	        0x48c1e002	                              shl rax, 2	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041a6	          0x4801d0	                            add rax, rdx	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041a9	          0x4801c0	                            add rax, rax	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041ac	          0x4801d0	                            add rax, rdx	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041af	        0x48c1e002	                              shl rax, 2	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041b3	    0x480500000000	                              add rax, 0	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041b9	           0xfb700	                   movzx eax, word [rax]	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041bc	           0xfb7c0	                           movzx eax, ax	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041bf	    0x3b85d4f5ffff	            cmp eax, dword [rbp - 0xa2c]	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041c5	            0x7415	                            je 0x40041dc	       983	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041c7	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x40041cd	          0x8d50ff	                      lea edx, [rax - 1]	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x40041d0	    0x8995ecf5ffff	            mov dword [rbp - 0xa14], edx	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x40041d6	            0x85c0	                           test eax, eax	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x40041d8	            0x7591	                           jne 0x400416b	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x40041da	            0xeb01	                           jmp 0x40041dd	       979	peicode.h	FUNCTION_61	SWITCH_3	FOR_1
0x40041dc	              0x90	                                     nop	       984	peicode.h	FUNCTION_61	SWITCH_3	FOR_1	IF_14
0x40041dd	    0x83bdecf5ffff	              cmp dword [rbp - 0xa14], 0	       987	peicode.h	FUNCTION_61	SWITCH_3	IF_15
0x40041e4	            0x7914	                           jns 0x40041fa	       987	peicode.h	FUNCTION_61	SWITCH_3	IF_15
0x40041e6	      0xba00000000	                              mov edx, 0	       988	peicode.h	FUNCTION_61	SWITCH_3	CALL_21
0x40041eb	      0xbedc030000	                          mov esi, 0x3dc	       988	peicode.h	FUNCTION_61	SWITCH_3	CALL_21
0x40041f0	      0xbf00000000	                              mov edi, 0	       988	peicode.h	FUNCTION_61	SWITCH_3	CALL_21
0x40041f5	      0xe800000000	                          call 0x40041fa	       988	peicode.h	FUNCTION_61	SWITCH_3	CALL_21
0x40041fa	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004200	          0x4863d0	                         movsxd rdx, eax	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004203	          0x4889d0	                            mov rax, rdx	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004206	        0x48c1e002	                              shl rax, 2	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x400420a	          0x4801d0	                            add rax, rdx	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x400420d	          0x4801c0	                            add rax, rax	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004210	          0x4801d0	                            add rax, rdx	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004213	        0x48c1e002	                              shl rax, 2	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004217	    0x480500000000	                              add rax, 0	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x400421d	            0x8b10	                    mov edx, dword [rax]	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x400421f	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004226	      0xb910000000	                           mov ecx, 0x10	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x400422b	      0xbe00000000	                              mov esi, 0	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004230	          0x4889c7	                            mov rdi, rax	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004233	      0xe869f5ffff	          call sym.pe_ILF_make_a_section	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x4004238	    0x48898510f6ff	            mov qword [rbp - 0x9f0], rax	       991	peicode.h	FUNCTION_61	SWITCH_3	CALL_22
0x400423f	    0x4883bd10f6ff	              cmp qword [rbp - 0x9f0], 0	       992	peicode.h	FUNCTION_61	SWITCH_3	IF_16
0x4004247	     0xf84a7040000	                            je 0x40046f4	       992	peicode.h	FUNCTION_61	SWITCH_3	IF_16
0x400424d	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004253	          0x4863d0	                         movsxd rdx, eax	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004256	          0x4889d0	                            mov rax, rdx	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004259	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x400425d	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004260	          0x4801c0	                            add rax, rax	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004263	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004266	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x400426a	    0x480500000000	                              add rax, 0	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004270	            0x8b00	                    mov eax, dword [rax]	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004272	            0x89c6	                            mov esi, eax	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004274	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x400427a	          0x4863d0	                         movsxd rdx, eax	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x400427d	          0x4889d0	                            mov rax, rdx	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004280	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004284	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004287	          0x4801c0	                            add rax, rax	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x400428a	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x400428d	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004291	    0x480500000000	                              add rax, 0	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x4004297	        0x488d4802	                      lea rcx, [rax + 2]	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x400429b	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x40042a2	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x40042a9	          0x4889f2	                            mov rdx, rsi	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x40042ac	          0x4889ce	                            mov rsi, rcx	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x40042af	          0x4889c7	                            mov rdi, rax	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x40042b2	      0xe800000000	                          call 0x40042b7	       996	peicode.h	FUNCTION_61	SWITCH_3	CALL_23
0x40042b7	    0x81bdd4f5ffff	        cmp dword [rbp - 0xa2c], 0x8664 	      1013	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18
0x40042c1	            0x7550	                           jne 0x4004313	      1013	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18
0x40042c3	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042c9	          0x4863d0	                         movsxd rdx, eax	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042cc	          0x4889d0	                            mov rax, rdx	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042cf	        0x48c1e002	                              shl rax, 2	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042d3	          0x4801d0	                            add rax, rdx	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042d6	          0x4801c0	                            add rax, rax	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042d9	          0x4801d0	                            add rax, rdx	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042dc	        0x48c1e002	                              shl rax, 2	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042e0	    0x480500000000	                              add rax, 0	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042e6	            0x8b00	                    mov eax, dword [rax]	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042e8	            0x89c6	                            mov esi, eax	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042ea	    0x8b8dfcf5ffff	            mov ecx, dword [rbp - 0xa04]	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042f0	    0x488b9538f6ff	            mov rdx, qword [rbp - 0x9c8]	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042f7	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x40042fe	          0x4189c8	                            mov r8d, ecx	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x4004301	          0x4889d1	                            mov rcx, rdx	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x4004304	      0xba09000000	                              mov edx, 9	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x4004309	          0x4889c7	                            mov rdi, rax	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x400430c	      0xe893efffff	     call sym.pe_ILF_make_a_symbol_reloc	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x4004311	            0xeb4e	                           jmp 0x4004361	      1015	peicode.h	FUNCTION_61	SWITCH_3	ELSE_2	IF_18	CALL_27
0x4004313	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004319	          0x4863d0	                         movsxd rdx, eax	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x400431c	          0x4889d0	                            mov rax, rdx	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x400431f	        0x48c1e002	                              shl rax, 2	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004323	          0x4801d0	                            add rax, rdx	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004326	          0x4801c0	                            add rax, rax	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004329	          0x4801d0	                            add rax, rdx	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x400432c	        0x48c1e002	                              shl rax, 2	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004330	    0x480500000000	                              add rax, 0	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004336	            0x8b00	                    mov eax, dword [rax]	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004338	            0x89c6	                            mov esi, eax	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x400433a	    0x8b8dfcf5ffff	            mov ecx, dword [rbp - 0xa04]	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004340	    0x488b9538f6ff	            mov rdx, qword [rbp - 0x9c8]	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004347	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x400434e	          0x4189c8	                            mov r8d, ecx	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004351	          0x4889d1	                            mov rcx, rdx	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004354	      0xba02000000	                              mov edx, 2	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004359	          0x4889c7	                            mov rdi, rax	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x400435c	      0xe843efffff	     call sym.pe_ILF_make_a_symbol_reloc	      1021	peicode.h	FUNCTION_61	SWITCH_3	ELSE_3	CALL_28
0x4004361	    0x488b9510f6ff	            mov rdx, qword [rbp - 0x9f0]	      1025	peicode.h	FUNCTION_61	SWITCH_3	CALL_29
0x4004368	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1025	peicode.h	FUNCTION_61	SWITCH_3	CALL_29
0x400436f	          0x4889d6	                            mov rsi, rdx	      1025	peicode.h	FUNCTION_61	SWITCH_3	CALL_29
0x4004372	          0x4889c7	                            mov rdi, rax	      1025	peicode.h	FUNCTION_61	SWITCH_3	CALL_29
0x4004375	      0xe864f0ffff	             call sym.pe_ILF_save_relocs	      1025	peicode.h	FUNCTION_61	SWITCH_3	CALL_29
0x400437a	            0xeb15	                           jmp 0x4004391	      1026	peicode.h	FUNCTION_61	SWITCH_3
0x400437c	      0xba00000000	                              mov edx, 0	      1033	peicode.h	FUNCTION_61	SWITCH_3	CALL_30
0x4004381	      0xbe09040000	                          mov esi, 0x409	      1033	peicode.h	FUNCTION_61	SWITCH_3	CALL_30
0x4004386	      0xbf00000000	                              mov edi, 0	      1033	peicode.h	FUNCTION_61	SWITCH_3	CALL_30
0x400438b	      0xe800000000	                          call 0x4004390	      1033	peicode.h	FUNCTION_61	SWITCH_3	CALL_30
0x4004390	              0x90	                                     nop	      1029	peicode.h	FUNCTION_61	SWITCH_3
0x4004391	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	      1037	peicode.h	FUNCTION_61	CALL_31
0x4004398	      0xbaf8080000	                          mov edx, 0x8f8	      1037	peicode.h	FUNCTION_61	CALL_31
0x400439d	      0xbe00000000	                              mov esi, 0	      1037	peicode.h	FUNCTION_61	CALL_31
0x40043a2	          0x4889c7	                            mov rdi, rax	      1037	peicode.h	FUNCTION_61	CALL_31
0x40043a5	      0xe800000000	                          call 0x40043aa	      1037	peicode.h	FUNCTION_61	CALL_31
0x40043aa	    0x8b85d4f5ffff	            mov eax, dword [rbp - 0xa2c]	      1039	peicode.h	FUNCTION_61
0x40043b0	        0x668945c0	               mov word [rbp - 0x40], ax	      1039	peicode.h	FUNCTION_61
0x40043b4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1040	peicode.h	FUNCTION_61
0x40043bc	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1041	peicode.h	FUNCTION_61
0x40043c4	    0x66c745e20401	           mov word [rbp - 0x1e], 0x104 	      1042	peicode.h	FUNCTION_61
0x40043ca	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1044	peicode.h	FUNCTION_61	IF_19	CALL_32
0x40043d1	      0xbe00000000	                              mov esi, 0	      1044	peicode.h	FUNCTION_61	IF_19	CALL_32
0x40043d6	          0x4889c7	                            mov rdi, rax	      1044	peicode.h	FUNCTION_61	IF_19	CALL_32
0x40043d9	      0xe800000000	                          call 0x40043de	      1044	peicode.h	FUNCTION_61	IF_19	CALL_32
0x40043de	            0x85c0	                           test eax, eax	      1044	peicode.h	FUNCTION_61	IF_19	CALL_32
0x40043e0	     0xf8412030000	                            je 0x40046f8	      1044	peicode.h	FUNCTION_61	IF_19	CALL_32
0x40043e6	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x40043ed	        0x488b4008	                mov rax, qword [rax + 8]	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x40043f1	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x40043f8	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x40043ff	    0x488d8df0f6ff	                  lea rcx, [rbp - 0x910]	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x4004406	    0x488b95d8f5ff	            mov rdx, qword [rbp - 0xa28]	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x400440d	          0x4889ce	                            mov rsi, rcx	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x4004410	          0x4889d7	                            mov rdi, rdx	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x4004413	            0xffd0	                                call rax	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x4004415	            0x85c0	                           test eax, eax	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x4004417	     0xf84db020000	                            je 0x40046f8	      1045	peicode.h	FUNCTION_61	IF_19	CALL_33
0x400441d	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x4004424	        0x488b4008	                mov rax, qword [rax + 8]	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x4004428	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x400442f	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x4004436	    0x488db5f0f6ff	                  lea rsi, [rbp - 0x910]	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x400443d	    0x488b8dd8f5ff	            mov rcx, qword [rbp - 0xa28]	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x4004444	      0xba00000000	                              mov edx, 0	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x4004449	          0x4889cf	                            mov rdi, rcx	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x400444c	            0xffd0	                                call rax	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x400444e	          0x4885c0	                           test rax, rax	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x4004451	     0xf84a0020000	                            je 0x40046f7	      1048	peicode.h	FUNCTION_61	IF_20	CALL_34
0x4004457	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1051	peicode.h	FUNCTION_61	CALL_35
0x400445e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1051	peicode.h	FUNCTION_61	CALL_35
0x4004465	    0xc78080000000	               mov dword [rax + 0x80], 1	      1051	peicode.h	FUNCTION_61	CALL_35
0x400446f	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1059	peicode.h	FUNCTION_61	CALL_37
0x4004476	          0x4889c7	                            mov rdi, rax	      1059	peicode.h	FUNCTION_61	CALL_37
0x4004479	      0xe800000000	                          call 0x400447e	      1059	peicode.h	FUNCTION_61	CALL_37
0x400447e	    0x488b9550f6ff	            mov rdx, qword [rbp - 0x9b0]	      1061	peicode.h	FUNCTION_61
0x4004485	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1061	peicode.h	FUNCTION_61
0x400448c	        0x48895010	             mov qword [rax + 0x10], rdx	      1061	peicode.h	FUNCTION_61
0x4004490	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1062	peicode.h	FUNCTION_61
0x4004497	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1062	peicode.h	FUNCTION_61
0x400449a	          0xc1e805	                              shr eax, 5	      1062	peicode.h	FUNCTION_61
0x400449d	      0x25ffff0f00	                        and eax, 0xfffff	      1062	peicode.h	FUNCTION_61
0x40044a2	          0x80cc08	                                or ah, 8	      1062	peicode.h	FUNCTION_61
0x40044a5	            0x89c2	                            mov edx, eax	      1062	peicode.h	FUNCTION_61
0x40044a7	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1062	peicode.h	FUNCTION_61
0x40044ae	    0x81e2ffff0f00	                        and edx, 0xfffff	      1062	peicode.h	FUNCTION_61
0x40044b4	            0x89d1	                            mov ecx, edx	      1062	peicode.h	FUNCTION_61
0x40044b6	          0xc1e105	                              shl ecx, 5	      1062	peicode.h	FUNCTION_61
0x40044b9	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1062	peicode.h	FUNCTION_61
0x40044bc	    0x81e21f0000fe	                     and edx, 0xfe00001f	      1062	peicode.h	FUNCTION_61
0x40044c2	             0x9ca	                             or edx, ecx	      1062	peicode.h	FUNCTION_61
0x40044c4	          0x895044	             mov dword [rax + 0x44], edx	      1062	peicode.h	FUNCTION_61
0x40044c7	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1063	peicode.h	FUNCTION_61
0x40044ce	    0x48c740180000	               mov qword [rax + 0x18], 0	      1063	peicode.h	FUNCTION_61
0x40044d6	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1064	peicode.h	FUNCTION_61
0x40044dd	    0x48c740300000	               mov qword [rax + 0x30], 0	      1064	peicode.h	FUNCTION_61
0x40044e5	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1065	peicode.h	FUNCTION_61
0x40044ec	    0x48c740580000	               mov qword [rax + 0x58], 0	      1065	peicode.h	FUNCTION_61
0x40044f4	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1066	peicode.h	FUNCTION_61	CALL_38
0x40044fb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1066	peicode.h	FUNCTION_61	CALL_38
0x4004502	    0x48c740180000	               mov qword [rax + 0x18], 0	      1066	peicode.h	FUNCTION_61	CALL_38
0x400450a	    0x8b85f0f5ffff	            mov eax, dword [rbp - 0xa10]	      1069	peicode.h	FUNCTION_61	SWITCH_4
0x4004510	            0x85c0	                           test eax, eax	      1069	peicode.h	FUNCTION_61	SWITCH_4
0x4004512	            0x7407	                            je 0x400451b	      1069	peicode.h	FUNCTION_61	SWITCH_4
0x4004514	          0x83f801	                              cmp eax, 1	      1069	peicode.h	FUNCTION_61	SWITCH_4
0x4004517	            0x7440	                            je 0x4004559	      1069	peicode.h	FUNCTION_61	SWITCH_4
0x4004519	            0xeb2a	                           jmp 0x4004545	      1069	peicode.h	FUNCTION_61	SWITCH_4
0x400451b	    0x488b8d10f6ff	            mov rcx, qword [rbp - 0x9f0]	      1072	peicode.h	FUNCTION_61	SWITCH_4	CALL_39
0x4004522	    0x488b95c8f5ff	            mov rdx, qword [rbp - 0xa38]	      1072	peicode.h	FUNCTION_61	SWITCH_4	CALL_39
0x4004529	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1072	peicode.h	FUNCTION_61	SWITCH_4	CALL_39
0x4004530	    0x41b808040000	                          mov r8d, 0x408	      1072	peicode.h	FUNCTION_61	SWITCH_4	CALL_39
0x4004536	      0xbe00000000	                              mov esi, 0	      1072	peicode.h	FUNCTION_61	SWITCH_4	CALL_39
0x400453b	          0x4889c7	                            mov rdi, rax	      1072	peicode.h	FUNCTION_61	SWITCH_4	CALL_39
0x400453e	      0xe8acefffff	           call sym.pe_ILF_make_a_symbol	      1072	peicode.h	FUNCTION_61	SWITCH_4	CALL_39
0x4004543	            0xeb15	                           jmp 0x400455a	      1075	peicode.h	FUNCTION_61	SWITCH_4
0x4004545	      0xba00000000	                              mov edx, 0	      1083	peicode.h	FUNCTION_61	SWITCH_4	CALL_40
0x400454a	      0xbe3b040000	                          mov esi, 0x43b	      1083	peicode.h	FUNCTION_61	SWITCH_4	CALL_40
0x400454f	      0xbf00000000	                              mov edi, 0	      1083	peicode.h	FUNCTION_61	SWITCH_4	CALL_40
0x4004554	      0xe800000000	                          call 0x4004559	      1083	peicode.h	FUNCTION_61	SWITCH_4	CALL_40
0x4004559	              0x90	                                     nop	      1079	peicode.h	FUNCTION_61	SWITCH_4
0x400455a	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	      1087	peicode.h	FUNCTION_61	CALL_41
0x4004561	      0xbe2e000000	                           mov esi, 0x2e	      1087	peicode.h	FUNCTION_61	CALL_41
0x4004566	          0x4889c7	                            mov rdi, rax	      1087	peicode.h	FUNCTION_61	CALL_41
0x4004569	      0xe800000000	                          call 0x400456e	      1087	peicode.h	FUNCTION_61	CALL_41
0x400456e	    0x48898500f6ff	            mov qword [rbp - 0xa00], rax	      1087	peicode.h	FUNCTION_61	CALL_41
0x4004575	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	      1088	peicode.h	FUNCTION_61	IF_22
0x400457d	            0x740a	                            je 0x4004589	      1088	peicode.h	FUNCTION_61	IF_22
0x400457f	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1089	peicode.h	FUNCTION_61	IF_22
0x4004586	          0xc60000	                       mov byte [rax], 0	      1089	peicode.h	FUNCTION_61	IF_22
0x4004589	    0x488b95c0f5ff	            mov rdx, qword [rbp - 0xa40]	      1090	peicode.h	FUNCTION_61	CALL_42
0x4004590	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1090	peicode.h	FUNCTION_61	CALL_42
0x4004597	    0x41b800000000	                              mov r8d, 0	      1090	peicode.h	FUNCTION_61	CALL_42
0x400459d	      0xb900000000	                              mov ecx, 0	      1090	peicode.h	FUNCTION_61	CALL_42
0x40045a2	      0xbe00000000	                              mov esi, 0	      1090	peicode.h	FUNCTION_61	CALL_42
0x40045a7	          0x4889c7	                            mov rdi, rax	      1090	peicode.h	FUNCTION_61	CALL_42
0x40045aa	      0xe840efffff	           call sym.pe_ILF_make_a_symbol	      1090	peicode.h	FUNCTION_61	CALL_42
0x40045af	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	      1091	peicode.h	FUNCTION_61	IF_23
0x40045b7	            0x740a	                            je 0x40045c3	      1091	peicode.h	FUNCTION_61	IF_23
0x40045b9	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1092	peicode.h	FUNCTION_61	IF_23
0x40045c0	          0xc6002e	                    mov byte [rax], 0x2e	      1092	peicode.h	FUNCTION_61	IF_23
0x40045c3	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1095	peicode.h	FUNCTION_61	CALL_43
0x40045ca	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1095	peicode.h	FUNCTION_61	CALL_43
0x40045d1	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      1095	peicode.h	FUNCTION_61	CALL_43
0x40045d8	          0x488910	                    mov qword [rax], rdx	      1095	peicode.h	FUNCTION_61	CALL_43
0x40045db	    0x8b9580f6ffff	            mov edx, dword [rbp - 0x980]	      1096	peicode.h	FUNCTION_61
0x40045e1	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1096	peicode.h	FUNCTION_61
0x40045e8	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      1096	peicode.h	FUNCTION_61
0x40045ee	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1098	peicode.h	FUNCTION_61	CALL_44
0x40045f5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1098	peicode.h	FUNCTION_61	CALL_44
0x40045fc	    0x488b9598f6ff	            mov rdx, qword [rbp - 0x968]	      1098	peicode.h	FUNCTION_61	CALL_44
0x4004603	        0x48895020	             mov qword [rax + 0x20], rdx	      1098	peicode.h	FUNCTION_61	CALL_44
0x4004607	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1099	peicode.h	FUNCTION_61	CALL_45
0x400460e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1099	peicode.h	FUNCTION_61	CALL_45
0x4004615	    0x8b9580f6ffff	            mov edx, dword [rbp - 0x980]	      1099	peicode.h	FUNCTION_61	CALL_45
0x400461b	            0x89d2	                            mov edx, edx	      1099	peicode.h	FUNCTION_61	CALL_45
0x400461d	        0x48895028	             mov qword [rax + 0x28], rdx	      1099	peicode.h	FUNCTION_61	CALL_45
0x4004621	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1101	peicode.h	FUNCTION_61	CALL_46
0x4004628	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1101	peicode.h	FUNCTION_61	CALL_46
0x400462f	    0x488b95d8f6ff	            mov rdx, qword [rbp - 0x928]	      1101	peicode.h	FUNCTION_61	CALL_46
0x4004636	        0x48895058	             mov qword [rax + 0x58], rdx	      1101	peicode.h	FUNCTION_61	CALL_46
0x400463a	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1102	peicode.h	FUNCTION_61	CALL_47
0x4004641	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1102	peicode.h	FUNCTION_61	CALL_47
0x4004648	    0xc74060010000	               mov dword [rax + 0x60], 1	      1102	peicode.h	FUNCTION_61	CALL_47
0x400464f	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1104	peicode.h	FUNCTION_61	CALL_48
0x4004656	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1104	peicode.h	FUNCTION_61	CALL_48
0x400465d	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      1104	peicode.h	FUNCTION_61	CALL_48
0x4004664	        0x48895008	                mov qword [rax + 8], rdx	      1104	peicode.h	FUNCTION_61	CALL_48
0x4004668	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1105	peicode.h	FUNCTION_61	CALL_49
0x400466f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1105	peicode.h	FUNCTION_61	CALL_49
0x4004676	    0x8b9580f6ffff	            mov edx, dword [rbp - 0x980]	      1105	peicode.h	FUNCTION_61	CALL_49
0x400467c	          0x895010	             mov dword [rax + 0x10], edx	      1105	peicode.h	FUNCTION_61	CALL_49
0x400467f	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1107	peicode.h	FUNCTION_61	CALL_50
0x4004686	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1107	peicode.h	FUNCTION_61	CALL_50
0x400468d	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	      1107	peicode.h	FUNCTION_61	CALL_50
0x4004694	        0x48895068	             mov qword [rax + 0x68], rdx	      1107	peicode.h	FUNCTION_61	CALL_50
0x4004698	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1108	peicode.h	FUNCTION_61	CALL_51
0x400469f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1108	peicode.h	FUNCTION_61	CALL_51
0x40046a6	    0xc74078010000	               mov dword [rax + 0x78], 1	      1108	peicode.h	FUNCTION_61	CALL_51
0x40046ad	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1110	peicode.h	FUNCTION_61
0x40046b4	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1110	peicode.h	FUNCTION_61
0x40046b7	          0xc1e805	                              shr eax, 5	      1110	peicode.h	FUNCTION_61
0x40046ba	      0x25ffff0f00	                        and eax, 0xfffff	      1110	peicode.h	FUNCTION_61
0x40046bf	          0x83c810	                            or eax, 0x10	      1110	peicode.h	FUNCTION_61
0x40046c2	            0x89c2	                            mov edx, eax	      1110	peicode.h	FUNCTION_61
0x40046c4	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1110	peicode.h	FUNCTION_61
0x40046cb	    0x81e2ffff0f00	                        and edx, 0xfffff	      1110	peicode.h	FUNCTION_61
0x40046d1	            0x89d1	                            mov ecx, edx	      1110	peicode.h	FUNCTION_61
0x40046d3	          0xc1e105	                              shl ecx, 5	      1110	peicode.h	FUNCTION_61
0x40046d6	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1110	peicode.h	FUNCTION_61
0x40046d9	    0x81e21f0000fe	                     and edx, 0xfe00001f	      1110	peicode.h	FUNCTION_61
0x40046df	             0x9ca	                             or edx, ecx	      1110	peicode.h	FUNCTION_61
0x40046e1	          0x895044	             mov dword [rax + 0x44], edx	      1110	peicode.h	FUNCTION_61
0x40046e4	      0xb801000000	                              mov eax, 1	      1112	peicode.h	FUNCTION_61
0x40046e9	            0xeb44	                           jmp 0x400472f	      1112	peicode.h	FUNCTION_61
0x40046eb	              0x90	                                     nop	       817	peicode.h	FUNCTION_61	IF_2
0x40046ec	            0xeb0a	                           jmp 0x40046f8	       817	peicode.h	FUNCTION_61	IF_2
0x40046ee	              0x90	                                     nop	       896	peicode.h	FUNCTION_61	IF_5	IF_6
0x40046ef	            0xeb07	                           jmp 0x40046f8	       896	peicode.h	FUNCTION_61	IF_5	IF_6
0x40046f1	              0x90	                                     nop	       916	peicode.h	FUNCTION_61	ELSE_1	IF_7
0x40046f2	            0xeb04	                           jmp 0x40046f8	       916	peicode.h	FUNCTION_61	ELSE_1	IF_7
0x40046f4	              0x90	                                     nop	       993	peicode.h	FUNCTION_61	SWITCH_3	IF_16
0x40046f5	            0xeb01	                           jmp 0x40046f8	       993	peicode.h	FUNCTION_61	SWITCH_3	IF_16
0x40046f7	              0x90	                                     nop	      1049	peicode.h	FUNCTION_61	IF_20
0x40046f8	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1115	peicode.h	FUNCTION_61	IF_24
0x40046ff	        0x488b4008	                mov rax, qword [rax + 8]	      1115	peicode.h	FUNCTION_61	IF_24
0x4004703	          0x4885c0	                           test rax, rax	      1115	peicode.h	FUNCTION_61	IF_24
0x4004706	            0x7413	                            je 0x400471b	      1115	peicode.h	FUNCTION_61	IF_24
0x4004708	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1116	peicode.h	FUNCTION_61	CALL_52
0x400470f	        0x488b4008	                mov rax, qword [rax + 8]	      1116	peicode.h	FUNCTION_61	CALL_52
0x4004713	          0x4889c7	                            mov rdi, rax	      1116	peicode.h	FUNCTION_61	CALL_52
0x4004716	      0xe800000000	                          call 0x400471b	      1116	peicode.h	FUNCTION_61	CALL_52
0x400471b	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1117	peicode.h	FUNCTION_61	CALL_53
0x4004722	          0x4889c7	                            mov rdi, rax	      1117	peicode.h	FUNCTION_61	CALL_53
0x4004725	      0xe800000000	                          call 0x400472a	      1117	peicode.h	FUNCTION_61	CALL_53
0x400472a	      0xb800000000	                              mov eax, 0	      1118	peicode.h	FUNCTION_61
0x400472f	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1119	peicode.h	FUNCTION_61
0x4004733	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1119	peicode.h	FUNCTION_61
0x400473c	            0x7405	                            je 0x4004743	      1119	peicode.h	FUNCTION_61
0x400473e	      0xe800000000	                          call 0x4004743	      1119	peicode.h	FUNCTION_61
0x4004743	    0x4881c4400a00	                          add rsp, 0xa40	      1119	peicode.h	FUNCTION_61
0x400474a	              0x5b	                                 pop rbx	      1119	peicode.h	FUNCTION_61
0x400474b	            0x415c	                                 pop r12	      1119	peicode.h	FUNCTION_61
0x400474d	              0x5d	                                 pop rbp	      1119	peicode.h	FUNCTION_61
0x400474e	              0xc3	                                     ret	      1119	peicode.h	FUNCTION_61
pe_mkobject_hook	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,5:CALL,6:DO,0	97
0x4002fda	              0x55	                                push rbp	       284	peicode.h	FUNCTION_53
0x4002fdb	          0x4889e5	                            mov rbp, rsp	       284	peicode.h	FUNCTION_53
0x4002fde	        0x4883ec30	                           sub rsp, 0x30	       284	peicode.h	FUNCTION_53
0x4002fe2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       284	peicode.h	FUNCTION_53
0x4002fe6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       284	peicode.h	FUNCTION_53
0x4002fea	        0x488955d8	             mov qword [rbp - 0x28], rdx	       284	peicode.h	FUNCTION_53
0x4002fee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       285	peicode.h	FUNCTION_53
0x4002ff2	        0x488945f0	             mov qword [rbp - 0x10], rax	       285	peicode.h	FUNCTION_53
0x4002ff6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	peicode.h	FUNCTION_53	IF_1	CALL_1
0x4002ffa	          0x4889c7	                            mov rdi, rax	       288	peicode.h	FUNCTION_53	IF_1	CALL_1
0x4002ffd	      0xe83dffffff	                    call sym.pe_mkobject	       288	peicode.h	FUNCTION_53	IF_1	CALL_1
0x4003002	            0x85c0	                           test eax, eax	       288	peicode.h	FUNCTION_53	IF_1	CALL_1
0x4003004	            0x750a	                           jne 0x4003010	       288	peicode.h	FUNCTION_53	IF_1	CALL_1
0x4003006	      0xb800000000	                              mov eax, 0	       289	peicode.h	FUNCTION_53	IF_1
0x400300b	      0xe968010000	                           jmp 0x4003178	       289	peicode.h	FUNCTION_53	IF_1
0x4003010	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	peicode.h	FUNCTION_53	CALL_2
0x4003014	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       291	peicode.h	FUNCTION_53	CALL_2
0x400301b	        0x488945f8	                mov qword [rbp - 8], rax	       291	peicode.h	FUNCTION_53	CALL_2
0x400301f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	peicode.h	FUNCTION_53
0x4003023	    0x488b80e00800	           mov rax, qword [rax + 0x8e0] 	       292	peicode.h	FUNCTION_53
0x400302a	          0x4889c2	                            mov rdx, rax	       292	peicode.h	FUNCTION_53
0x400302d	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	peicode.h	FUNCTION_53
0x4003031	        0x48895018	             mov qword [rax + 0x18], rdx	       292	peicode.h	FUNCTION_53
0x4003035	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	peicode.h	FUNCTION_53
0x4003039	    0xc740380f0000	            mov dword [rax + 0x38], 0xf 	       296	peicode.h	FUNCTION_53
0x4003040	        0x488b45f8	                mov rax, qword [rbp - 8]	       297	peicode.h	FUNCTION_53
0x4003044	    0xc7403c040000	               mov dword [rax + 0x3c], 4	       297	peicode.h	FUNCTION_53
0x400304b	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	peicode.h	FUNCTION_53
0x400304f	    0xc74040300000	           mov dword [rax + 0x40], 0x30 	       298	peicode.h	FUNCTION_53
0x4003056	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	peicode.h	FUNCTION_53
0x400305a	    0xc74044020000	               mov dword [rax + 0x44], 2	       299	peicode.h	FUNCTION_53
0x4003061	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	peicode.h	FUNCTION_53
0x4003065	    0xc74048120000	           mov dword [rax + 0x48], 0x12 	       300	peicode.h	FUNCTION_53
0x400306c	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	peicode.h	FUNCTION_53
0x4003070	    0xc7404c120000	           mov dword [rax + 0x4c], 0x12 	       301	peicode.h	FUNCTION_53
0x4003077	        0x488b45f8	                mov rax, qword [rbp - 8]	       302	peicode.h	FUNCTION_53
0x400307b	    0xc74050060000	               mov dword [rax + 0x50], 6	       302	peicode.h	FUNCTION_53
0x4003082	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	peicode.h	FUNCTION_53
0x4003086	    0x488b90d80800	           mov rdx, qword [rax + 0x8d8] 	       304	peicode.h	FUNCTION_53
0x400308d	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	peicode.h	FUNCTION_53
0x4003091	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       304	peicode.h	FUNCTION_53
0x4003098	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       306	peicode.h	FUNCTION_53	CALL_3
0x400309c	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	       306	peicode.h	FUNCTION_53	CALL_3
0x40030a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	peicode.h	FUNCTION_53	CALL_4
0x40030a7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       307	peicode.h	FUNCTION_53	CALL_4
0x40030ae	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       308	peicode.h	FUNCTION_53
0x40030b2	    0x488b89e80800	           mov rcx, qword [rcx + 0x8e8] 	       308	peicode.h	FUNCTION_53
0x40030b9	          0x894810	             mov dword [rax + 0x10], ecx	       307	peicode.h	FUNCTION_53	CALL_4
0x40030bc	          0x8b4010	            mov eax, dword [rax + 0x10] 	       307	peicode.h	FUNCTION_53	CALL_4
0x40030bf	            0x4898	                                    cdqe	       306	peicode.h	FUNCTION_53	CALL_3
0x40030c1	        0x48894228	             mov qword [rdx + 0x28], rax	       306	peicode.h	FUNCTION_53	CALL_3
0x40030c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	peicode.h	FUNCTION_53
0x40030c9	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       310	peicode.h	FUNCTION_53
0x40030d0	           0xfb7d0	                           movzx edx, ax	       310	peicode.h	FUNCTION_53
0x40030d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       310	peicode.h	FUNCTION_53
0x40030d7	    0x899098020000	            mov dword [rax + 0x298], edx	       310	peicode.h	FUNCTION_53
0x40030dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       312	peicode.h	FUNCTION_53	IF_2
0x40030e1	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       312	peicode.h	FUNCTION_53	IF_2
0x40030e8	           0xfb7c0	                           movzx eax, ax	       312	peicode.h	FUNCTION_53	IF_2
0x40030eb	      0x2500200000	                         and eax, 0x2000	       312	peicode.h	FUNCTION_53	IF_2
0x40030f0	            0x85c0	                           test eax, eax	       312	peicode.h	FUNCTION_53	IF_2
0x40030f2	            0x740e	                            je 0x4003102	       312	peicode.h	FUNCTION_53	IF_2
0x40030f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       313	peicode.h	FUNCTION_53	IF_2
0x40030f8	    0xc78080020000	              mov dword [rax + 0x280], 1	       313	peicode.h	FUNCTION_53	IF_2
0x4003102	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       315	peicode.h	FUNCTION_53	IF_3
0x4003106	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       315	peicode.h	FUNCTION_53	IF_3
0x400310d	           0xfb7c0	                           movzx eax, ax	       315	peicode.h	FUNCTION_53	IF_3
0x4003110	      0x2500020000	                          and eax, 0x200	       315	peicode.h	FUNCTION_53	IF_3
0x4003115	            0x85c0	                           test eax, eax	       315	peicode.h	FUNCTION_53	IF_3
0x4003117	            0x7531	                           jne 0x400314a	       315	peicode.h	FUNCTION_53	IF_3
0x4003119	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	peicode.h	FUNCTION_53	IF_3
0x400311d	          0x8b4044	            mov eax, dword [rax + 0x44] 	       316	peicode.h	FUNCTION_53	IF_3
0x4003120	          0xc1e805	                              shr eax, 5	       316	peicode.h	FUNCTION_53	IF_3
0x4003123	      0x25ffff0f00	                        and eax, 0xfffff	       316	peicode.h	FUNCTION_53	IF_3
0x4003128	          0x83c808	                               or eax, 8	       316	peicode.h	FUNCTION_53	IF_3
0x400312b	            0x89c2	                            mov edx, eax	       316	peicode.h	FUNCTION_53	IF_3
0x400312d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	peicode.h	FUNCTION_53	IF_3
0x4003131	    0x81e2ffff0f00	                        and edx, 0xfffff	       316	peicode.h	FUNCTION_53	IF_3
0x4003137	            0x89d1	                            mov ecx, edx	       316	peicode.h	FUNCTION_53	IF_3
0x4003139	          0xc1e105	                              shl ecx, 5	       316	peicode.h	FUNCTION_53	IF_3
0x400313c	          0x8b5044	            mov edx, dword [rax + 0x44] 	       316	peicode.h	FUNCTION_53	IF_3
0x400313f	    0x81e21f0000fe	                     and edx, 0xfe00001f	       316	peicode.h	FUNCTION_53	IF_3
0x4003145	             0x9ca	                             or edx, ecx	       316	peicode.h	FUNCTION_53	IF_3
0x4003147	          0x895044	             mov dword [rax + 0x44], edx	       316	peicode.h	FUNCTION_53	IF_3
0x400314a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       319	peicode.h	FUNCTION_53	IF_4
0x400314f	            0x7423	                            je 0x4003174	       319	peicode.h	FUNCTION_53	IF_4
0x4003151	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	peicode.h	FUNCTION_53	IF_4
0x4003155	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       320	peicode.h	FUNCTION_53	IF_4
0x4003159	    0x4805c8000000	                           add rax, 0xc8	       320	peicode.h	FUNCTION_53	IF_4
0x400315f	    0x4881c2c80000	                           add rdx, 0xc8	       320	peicode.h	FUNCTION_53	IF_4
0x4003166	      0xb937000000	                           mov ecx, 0x37	       320	peicode.h	FUNCTION_53	IF_4
0x400316b	          0x4889c7	                            mov rdi, rax	       320	peicode.h	FUNCTION_53	IF_4
0x400316e	          0x4889d6	                            mov rsi, rdx	       320	peicode.h	FUNCTION_53	IF_4
0x4003171	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       320	peicode.h	FUNCTION_53	IF_4
0x4003174	        0x488b45f8	                mov rax, qword [rbp - 8]	       328	peicode.h	FUNCTION_53
0x4003178	              0xc9	                                   leave	       329	peicode.h	FUNCTION_53
0x4003179	              0xc3	                                     ret	       329	peicode.h	FUNCTION_53
pe_ILF_save_relocs	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,5:DO,0	67
0x40033de	              0x55	                                push rbp	       495	peicode.h	FUNCTION_58
0x40033df	          0x4889e5	                            mov rbp, rsp	       495	peicode.h	FUNCTION_58
0x40033e2	        0x4883ec10	                           sub rsp, 0x10	       495	peicode.h	FUNCTION_58
0x40033e6	        0x48897df8	                mov qword [rbp - 8], rdi	       495	peicode.h	FUNCTION_58
0x40033ea	        0x488975f0	             mov qword [rbp - 0x10], rsi	       495	peicode.h	FUNCTION_58
0x40033ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       497	peicode.h	FUNCTION_58	IF_1	CALL_1
0x40033f2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       497	peicode.h	FUNCTION_58	IF_1	CALL_1
0x40033f9	          0x4885c0	                           test rax, rax	       497	peicode.h	FUNCTION_58	IF_1	CALL_1
0x40033fc	            0x7514	                           jne 0x4003412	       497	peicode.h	FUNCTION_58	IF_1	CALL_1
0x40033fe	      0xba00000000	                              mov edx, 0	       499	peicode.h	FUNCTION_58	CALL_2
0x4003403	      0xbef3010000	                          mov esi, 0x1f3	       499	peicode.h	FUNCTION_58	CALL_2
0x4003408	      0xbf00000000	                              mov edi, 0	       499	peicode.h	FUNCTION_58	CALL_2
0x400340d	      0xe800000000	                          call 0x4003412	       499	peicode.h	FUNCTION_58	CALL_2
0x4003412	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       501	peicode.h	FUNCTION_58	CALL_3
0x4003416	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       501	peicode.h	FUNCTION_58	CALL_3
0x400341d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       501	peicode.h	FUNCTION_58	CALL_3
0x4003421	    0x488b92a80000	            mov rdx, qword [rdx + 0xa8] 	       501	peicode.h	FUNCTION_58	CALL_3
0x4003428	          0x488910	                    mov qword [rax], rdx	       501	peicode.h	FUNCTION_58	CALL_3
0x400342b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       502	peicode.h	FUNCTION_58	CALL_4
0x400342f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       502	peicode.h	FUNCTION_58	CALL_4
0x4003436	    0xc74008010000	                  mov dword [rax + 8], 1	       502	peicode.h	FUNCTION_58	CALL_4
0x400343d	        0x488b45f8	                mov rax, qword [rbp - 8]	       504	peicode.h	FUNCTION_58
0x4003441	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       504	peicode.h	FUNCTION_58
0x4003445	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       504	peicode.h	FUNCTION_58
0x4003449	        0x48895078	             mov qword [rax + 0x78], rdx	       504	peicode.h	FUNCTION_58
0x400344d	        0x488b45f8	                mov rax, qword [rbp - 8]	       505	peicode.h	FUNCTION_58
0x4003451	          0x8b5028	            mov edx, dword [rax + 0x28] 	       505	peicode.h	FUNCTION_58
0x4003454	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       505	peicode.h	FUNCTION_58
0x4003458	    0x899088000000	             mov dword [rax + 0x88], edx	       505	peicode.h	FUNCTION_58
0x400345e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       506	peicode.h	FUNCTION_58
0x4003462	          0x8b4020	            mov eax, dword [rax + 0x20] 	       506	peicode.h	FUNCTION_58
0x4003465	          0x83c804	                               or eax, 4	       506	peicode.h	FUNCTION_58
0x4003468	            0x89c2	                            mov edx, eax	       506	peicode.h	FUNCTION_58
0x400346a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       506	peicode.h	FUNCTION_58
0x400346e	          0x895020	             mov dword [rax + 0x20], edx	       506	peicode.h	FUNCTION_58
0x4003471	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	peicode.h	FUNCTION_58
0x4003475	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       508	peicode.h	FUNCTION_58
0x4003479	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	peicode.h	FUNCTION_58
0x400347d	          0x8b4028	            mov eax, dword [rax + 0x28] 	       508	peicode.h	FUNCTION_58
0x4003480	            0x89c0	                            mov eax, eax	       508	peicode.h	FUNCTION_58
0x4003482	        0x48c1e005	                              shl rax, 5	       508	peicode.h	FUNCTION_58
0x4003486	          0x4801c2	                            add rdx, rax	       508	peicode.h	FUNCTION_58
0x4003489	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	peicode.h	FUNCTION_58
0x400348d	        0x48895020	             mov qword [rax + 0x20], rdx	       508	peicode.h	FUNCTION_58
0x4003491	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	peicode.h	FUNCTION_58
0x4003495	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	       509	peicode.h	FUNCTION_58
0x400349c	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	peicode.h	FUNCTION_58
0x40034a0	          0x8b4028	            mov eax, dword [rax + 0x28] 	       509	peicode.h	FUNCTION_58
0x40034a3	            0x89c0	                            mov eax, eax	       509	peicode.h	FUNCTION_58
0x40034a5	        0x48c1e005	                              shl rax, 5	       509	peicode.h	FUNCTION_58
0x40034a9	          0x4801c2	                            add rdx, rax	       509	peicode.h	FUNCTION_58
0x40034ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	peicode.h	FUNCTION_58
0x40034b0	    0x488990a80000	             mov qword [rax + 0xa8], rdx	       509	peicode.h	FUNCTION_58
0x40034b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       510	peicode.h	FUNCTION_58
0x40034bb	    0xc74028000000	               mov dword [rax + 0x28], 0	       510	peicode.h	FUNCTION_58
0x40034c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	peicode.h	FUNCTION_58	CALL_5
0x40034c6	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	       512	peicode.h	FUNCTION_58	CALL_5
0x40034cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	peicode.h	FUNCTION_58	CALL_5
0x40034d1	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       512	peicode.h	FUNCTION_58	CALL_5
0x40034d8	          0x4839c2	                            cmp rdx, rax	       512	peicode.h	FUNCTION_58	CALL_5
0x40034db	            0x720f	                            jb 0x40034ec	       512	peicode.h	FUNCTION_58	CALL_5
0x40034dd	      0xbe00020000	                          mov esi, 0x200	       512	peicode.h	FUNCTION_58	CALL_5
0x40034e2	      0xbf00000000	                              mov edi, 0	       512	peicode.h	FUNCTION_58	CALL_5
0x40034e7	      0xe800000000	                          call 0x40034ec	       512	peicode.h	FUNCTION_58	CALL_5
0x40034ec	              0x90	                                     nop	       513	peicode.h	FUNCTION_58
0x40034ed	              0xc9	                                   leave	       513	peicode.h	FUNCTION_58
0x40034ee	              0xc3	                                     ret	       513	peicode.h	FUNCTION_58
bfd_set_section_alignment	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,0:DO,0	11
0x4000081	              0x55	                                push rbp	      1695	bfd.h	FUNCTION_83
0x4000082	          0x4889e5	                            mov rbp, rsp	      1695	bfd.h	FUNCTION_83
0x4000085	        0x48897df8	                mov qword [rbp - 8], rdi	      1695	bfd.h	FUNCTION_83
0x4000089	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1695	bfd.h	FUNCTION_83
0x400008d	          0x8955ec	             mov dword [rbp - 0x14], edx	      1695	bfd.h	FUNCTION_83
0x4000090	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	bfd.h	FUNCTION_83
0x4000094	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1696	bfd.h	FUNCTION_83
0x4000097	          0x895070	             mov dword [rax + 0x70], edx	      1696	bfd.h	FUNCTION_83
0x400009a	      0xb801000000	                              mov eax, 1	      1697	bfd.h	FUNCTION_83
0x400009f	              0x5d	                                 pop rbp	      1698	bfd.h	FUNCTION_83
0x40000a0	              0xc3	                                     ret	      1698	bfd.h	FUNCTION_83
in_reloc_p	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,0:DO,0	21
0x4002569	              0x55	                                push rbp	       201	coff-x86_64.c	FUNCTION_75
0x400256a	          0x4889e5	                            mov rbp, rsp	       201	coff-x86_64.c	FUNCTION_75
0x400256d	        0x48897df8	                mov qword [rbp - 8], rdi	       201	coff-x86_64.c	FUNCTION_75
0x4002571	        0x488975f0	             mov qword [rbp - 0x10], rsi	       201	coff-x86_64.c	FUNCTION_75
0x4002575	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       202	coff-x86_64.c	FUNCTION_75
0x4002579	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	coff-x86_64.c	FUNCTION_75
0x400257c	            0x85c0	                           test eax, eax	       203	coff-x86_64.c	FUNCTION_75
0x400257e	            0x751d	                           jne 0x400259d	       203	coff-x86_64.c	FUNCTION_75
0x4002580	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       202	coff-x86_64.c	FUNCTION_75
0x4002584	            0x8b00	                    mov eax, dword [rax]	       202	coff-x86_64.c	FUNCTION_75
0x4002586	          0x83f803	                              cmp eax, 3	       202	coff-x86_64.c	FUNCTION_75
0x4002589	            0x7412	                            je 0x400259d	       202	coff-x86_64.c	FUNCTION_75
0x400258b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	coff-x86_64.c	FUNCTION_75
0x400258f	            0x8b00	                    mov eax, dword [rax]	       203	coff-x86_64.c	FUNCTION_75
0x4002591	          0x83f80b	                            cmp eax, 0xb	       203	coff-x86_64.c	FUNCTION_75
0x4002594	            0x7407	                            je 0x400259d	       203	coff-x86_64.c	FUNCTION_75
0x4002596	      0xb801000000	                              mov eax, 1	       203	coff-x86_64.c	FUNCTION_75
0x400259b	            0xeb05	                           jmp 0x40025a2	       203	coff-x86_64.c	FUNCTION_75
0x400259d	      0xb800000000	                              mov eax, 0	       203	coff-x86_64.c	FUNCTION_75
0x40025a2	              0x5d	                                 pop rbp	       204	coff-x86_64.c	FUNCTION_75
0x40025a3	              0xc3	                                     ret	       204	coff-x86_64.c	FUNCTION_75
pe_ILF_make_a_symbol	FOR,0:functions,0:WHILE,0:ELSE,3:SWITCH,0:IF,5:CALL,5:DO,0	176
0x40034ef	              0x55	                                push rbp	       523	peicode.h	FUNCTION_59
0x40034f0	          0x4889e5	                            mov rbp, rsp	       523	peicode.h	FUNCTION_59
0x40034f3	            0x4154	                                push r12	       523	peicode.h	FUNCTION_59
0x40034f5	              0x53	                                push rbx	       523	peicode.h	FUNCTION_59
0x40034f6	        0x4883ec50	                           sub rsp, 0x50	       523	peicode.h	FUNCTION_59
0x40034fa	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       523	peicode.h	FUNCTION_59
0x40034fe	        0x488975c0	             mov qword [rbp - 0x40], rsi	       523	peicode.h	FUNCTION_59
0x4003502	        0x488955b8	             mov qword [rbp - 0x48], rdx	       523	peicode.h	FUNCTION_59
0x4003506	        0x48894db0	             mov qword [rbp - 0x50], rcx	       523	peicode.h	FUNCTION_59
0x400350a	        0x448945ac	             mov dword [rbp - 0x54], r8d	       523	peicode.h	FUNCTION_59
0x400350e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       529	peicode.h	FUNCTION_59	IF_1
0x4003511	          0x83e001	                              and eax, 1	       529	peicode.h	FUNCTION_59	IF_1
0x4003514	            0x85c0	                           test eax, eax	       529	peicode.h	FUNCTION_59	IF_1
0x4003516	            0x7408	                            je 0x4003520	       529	peicode.h	FUNCTION_59	IF_1
0x4003518	    0x66c745d60300	                mov word [rbp - 0x2a], 3	       530	peicode.h	FUNCTION_59	IF_1
0x400351e	            0xeb06	                           jmp 0x4003526	       530	peicode.h	FUNCTION_59	IF_1
0x4003520	    0x66c745d60200	                mov word [rbp - 0x2a], 2	       532	peicode.h	FUNCTION_59	ELSE_1
0x4003526	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       546	peicode.h	FUNCTION_59	CALL_1
0x400352a	          0x8b4040	            mov eax, dword [rax + 0x40] 	       546	peicode.h	FUNCTION_59	CALL_1
0x400352d	          0x83f807	                              cmp eax, 7	       546	peicode.h	FUNCTION_59	CALL_1
0x4003530	            0x760f	                           jbe 0x4003541	       546	peicode.h	FUNCTION_59	CALL_1
0x4003532	      0xbe22020000	                          mov esi, 0x222	       546	peicode.h	FUNCTION_59	CALL_1
0x4003537	      0xbf00000000	                              mov edi, 0	       546	peicode.h	FUNCTION_59	CALL_1
0x400353c	      0xe800000000	                          call 0x4003541	       546	peicode.h	FUNCTION_59	CALL_1
0x4003541	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       548	peicode.h	FUNCTION_59
0x4003545	        0x488b4038	            mov rax, qword [rax + 0x38] 	       548	peicode.h	FUNCTION_59
0x4003549	        0x488945d8	             mov qword [rbp - 0x28], rax	       548	peicode.h	FUNCTION_59
0x400354d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	peicode.h	FUNCTION_59
0x4003551	        0x488b4060	            mov rax, qword [rax + 0x60] 	       549	peicode.h	FUNCTION_59
0x4003555	        0x488945e0	             mov qword [rbp - 0x20], rax	       549	peicode.h	FUNCTION_59
0x4003559	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       550	peicode.h	FUNCTION_59
0x400355d	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       550	peicode.h	FUNCTION_59
0x4003564	        0x488945e8	             mov qword [rbp - 0x18], rax	       550	peicode.h	FUNCTION_59
0x4003568	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       553	peicode.h	FUNCTION_59	CALL_2
0x400356c	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       553	peicode.h	FUNCTION_59	CALL_2
0x4003573	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       553	peicode.h	FUNCTION_59	CALL_2
0x4003577	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       553	peicode.h	FUNCTION_59	CALL_2
0x400357b	      0xbe00000000	                              mov esi, 0	       553	peicode.h	FUNCTION_59	CALL_2
0x4003580	          0x4889c7	                            mov rdi, rax	       553	peicode.h	FUNCTION_59	CALL_2
0x4003583	      0xb800000000	                              mov eax, 0	       553	peicode.h	FUNCTION_59	CALL_2
0x4003588	      0xe800000000	                          call 0x400358d	       553	peicode.h	FUNCTION_59	CALL_2
0x400358d	      0x48837db000	               cmp qword [rbp - 0x50], 0	       555	peicode.h	FUNCTION_59	IF_5
0x4003592	            0x7508	                           jne 0x400359c	       555	peicode.h	FUNCTION_59	IF_5
0x4003594	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       556	peicode.h	FUNCTION_59	IF_5
0x400359c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       559	peicode.h	FUNCTION_59
0x40035a0	          0x488b00	                    mov rax, qword [rax]	       559	peicode.h	FUNCTION_59
0x40035a3	        0x488b4008	                mov rax, qword [rax + 8]	       559	peicode.h	FUNCTION_59
0x40035a7	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       559	peicode.h	FUNCTION_59
0x40035ae	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       559	peicode.h	FUNCTION_59
0x40035b2	        0x488d4a04	                      lea rcx, [rdx + 4]	       559	peicode.h	FUNCTION_59
0x40035b6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       559	peicode.h	FUNCTION_59
0x40035ba	    0x488b92880000	            mov rdx, qword [rdx + 0x88] 	       559	peicode.h	FUNCTION_59
0x40035c1	          0x4889d6	                            mov rsi, rdx	       559	peicode.h	FUNCTION_59
0x40035c4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       559	peicode.h	FUNCTION_59
0x40035c8	    0x488b92800000	            mov rdx, qword [rdx + 0x80] 	       559	peicode.h	FUNCTION_59
0x40035cf	          0x4829d6	                            sub rsi, rdx	       559	peicode.h	FUNCTION_59
0x40035d2	          0x4889f2	                            mov rdx, rsi	       559	peicode.h	FUNCTION_59
0x40035d5	          0x4889ce	                            mov rsi, rcx	       559	peicode.h	FUNCTION_59
0x40035d8	          0x4889d7	                            mov rdi, rdx	       559	peicode.h	FUNCTION_59
0x40035db	            0xffd0	                                call rax	       559	peicode.h	FUNCTION_59
0x40035dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       561	peicode.h	FUNCTION_59
0x40035e1	          0x488b00	                    mov rax, qword [rax]	       561	peicode.h	FUNCTION_59
0x40035e4	        0x488b4008	                mov rax, qword [rax + 8]	       561	peicode.h	FUNCTION_59
0x40035e8	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       561	peicode.h	FUNCTION_59
0x40035ef	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       561	peicode.h	FUNCTION_59
0x40035f3	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       561	peicode.h	FUNCTION_59
0x40035f7	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       561	peicode.h	FUNCTION_59
0x40035fb	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	       561	peicode.h	FUNCTION_59
0x4003601	          0x4863d2	                         movsxd rdx, edx	       561	peicode.h	FUNCTION_59
0x4003604	          0x4889ce	                            mov rsi, rcx	       561	peicode.h	FUNCTION_59
0x4003607	          0x4889d7	                            mov rdi, rdx	       561	peicode.h	FUNCTION_59
0x400360a	            0xffd0	                                call rax	       561	peicode.h	FUNCTION_59
0x400360c	         0xfb745d6	            movzx eax, word [rbp - 0x2a]	       562	peicode.h	FUNCTION_59
0x4003610	            0x89c2	                            mov edx, eax	       562	peicode.h	FUNCTION_59
0x4003612	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	peicode.h	FUNCTION_59
0x4003616	          0x885010	               mov byte [rax + 0x10], dl	       562	peicode.h	FUNCTION_59
0x4003619	         0xfb745d6	            movzx eax, word [rbp - 0x2a]	       568	peicode.h	FUNCTION_59
0x400361d	            0x89c2	                            mov edx, eax	       568	peicode.h	FUNCTION_59
0x400361f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       568	peicode.h	FUNCTION_59
0x4003623	          0x885028	               mov byte [rax + 0x28], dl	       568	peicode.h	FUNCTION_59
0x4003626	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       569	peicode.h	FUNCTION_59
0x400362a	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	       569	peicode.h	FUNCTION_59
0x4003630	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       569	peicode.h	FUNCTION_59
0x4003634	          0x895020	             mov dword [rax + 0x20], edx	       569	peicode.h	FUNCTION_59
0x4003637	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       570	peicode.h	FUNCTION_59
0x400363b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       570	peicode.h	FUNCTION_59
0x400363f	        0x48895010	             mov qword [rax + 0x10], rdx	       570	peicode.h	FUNCTION_59
0x4003643	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       571	peicode.h	FUNCTION_59
0x4003647	    0xc74030010000	               mov dword [rax + 0x30], 1	       571	peicode.h	FUNCTION_59
0x400364e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       573	peicode.h	FUNCTION_59
0x4003652	          0x488b10	                    mov rdx, qword [rax]	       573	peicode.h	FUNCTION_59
0x4003655	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       573	peicode.h	FUNCTION_59
0x4003659	          0x488910	                    mov qword [rax], rdx	       573	peicode.h	FUNCTION_59
0x400365c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       574	peicode.h	FUNCTION_59
0x4003660	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	       574	peicode.h	FUNCTION_59
0x4003667	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       574	peicode.h	FUNCTION_59
0x400366b	        0x48895008	                mov qword [rax + 8], rdx	       574	peicode.h	FUNCTION_59
0x400366f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       575	peicode.h	FUNCTION_59
0x4003672	          0x83c802	                               or eax, 2	       575	peicode.h	FUNCTION_59
0x4003675	            0x89c2	                            mov edx, eax	       575	peicode.h	FUNCTION_59
0x4003677	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       575	peicode.h	FUNCTION_59
0x400367b	          0x895018	             mov dword [rax + 0x18], edx	       575	peicode.h	FUNCTION_59
0x400367e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       576	peicode.h	FUNCTION_59
0x4003682	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       576	peicode.h	FUNCTION_59
0x4003686	        0x48895020	             mov qword [rax + 0x20], rdx	       576	peicode.h	FUNCTION_59
0x400368a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       577	peicode.h	FUNCTION_59
0x400368e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       577	peicode.h	FUNCTION_59
0x4003692	        0x48895030	             mov qword [rax + 0x30], rdx	       577	peicode.h	FUNCTION_59
0x4003696	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       579	peicode.h	FUNCTION_59
0x400369a	        0x488b4050	            mov rax, qword [rax + 0x50] 	       579	peicode.h	FUNCTION_59
0x400369e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       579	peicode.h	FUNCTION_59
0x40036a2	          0x8b5240	            mov edx, dword [rdx + 0x40] 	       579	peicode.h	FUNCTION_59
0x40036a5	            0x8910	                    mov dword [rax], edx	       579	peicode.h	FUNCTION_59
0x40036a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       580	peicode.h	FUNCTION_59
0x40036ab	        0x488b4070	            mov rax, qword [rax + 0x70] 	       580	peicode.h	FUNCTION_59
0x40036af	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       580	peicode.h	FUNCTION_59
0x40036b3	          0x488910	                    mov qword [rax], rdx	       580	peicode.h	FUNCTION_59
0x40036b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       583	peicode.h	FUNCTION_59
0x40036ba	          0x8b4040	            mov eax, dword [rax + 0x40] 	       583	peicode.h	FUNCTION_59
0x40036bd	          0x8d5001	                      lea edx, [rax + 1]	       583	peicode.h	FUNCTION_59
0x40036c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       583	peicode.h	FUNCTION_59
0x40036c4	          0x895040	             mov dword [rax + 0x40], edx	       583	peicode.h	FUNCTION_59
0x40036c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       584	peicode.h	FUNCTION_59
0x40036cb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       584	peicode.h	FUNCTION_59
0x40036cf	        0x488d5048	                   lea rdx, [rax + 0x48]	       584	peicode.h	FUNCTION_59
0x40036d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       584	peicode.h	FUNCTION_59
0x40036d7	        0x48895038	             mov qword [rax + 0x38], rdx	       584	peicode.h	FUNCTION_59
0x40036db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       585	peicode.h	FUNCTION_59
0x40036df	        0x488b4070	            mov rax, qword [rax + 0x70] 	       585	peicode.h	FUNCTION_59
0x40036e3	        0x488d5008	                      lea rdx, [rax + 8]	       585	peicode.h	FUNCTION_59
0x40036e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       585	peicode.h	FUNCTION_59
0x40036eb	        0x48895070	             mov qword [rax + 0x70], rdx	       585	peicode.h	FUNCTION_59
0x40036ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       586	peicode.h	FUNCTION_59
0x40036f3	        0x488b4050	            mov rax, qword [rax + 0x50] 	       586	peicode.h	FUNCTION_59
0x40036f7	        0x488d5004	                      lea rdx, [rax + 4]	       586	peicode.h	FUNCTION_59
0x40036fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       586	peicode.h	FUNCTION_59
0x40036ff	        0x48895050	             mov qword [rax + 0x50], rdx	       586	peicode.h	FUNCTION_59
0x4003703	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	peicode.h	FUNCTION_59
0x4003707	        0x488b4060	            mov rax, qword [rax + 0x60] 	       587	peicode.h	FUNCTION_59
0x400370b	        0x488d5038	                   lea rdx, [rax + 0x38]	       587	peicode.h	FUNCTION_59
0x400370f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	peicode.h	FUNCTION_59
0x4003713	        0x48895060	             mov qword [rax + 0x60], rdx	       587	peicode.h	FUNCTION_59
0x4003717	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       588	peicode.h	FUNCTION_59
0x400371b	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       588	peicode.h	FUNCTION_59
0x4003722	        0x488d5012	                   lea rdx, [rax + 0x12]	       588	peicode.h	FUNCTION_59
0x4003726	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       588	peicode.h	FUNCTION_59
0x400372a	    0x488990a00000	             mov qword [rax + 0xa0], rdx	       588	peicode.h	FUNCTION_59
0x4003731	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	peicode.h	FUNCTION_59	CALL_4
0x4003735	    0x488b98880000	            mov rbx, qword [rax + 0x88] 	       589	peicode.h	FUNCTION_59	CALL_4
0x400373c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       589	peicode.h	FUNCTION_59	CALL_4
0x4003740	          0x4889c7	                            mov rdi, rax	       589	peicode.h	FUNCTION_59	CALL_4
0x4003743	      0xe800000000	                          call 0x4003748	       589	peicode.h	FUNCTION_59	CALL_4
0x4003748	          0x4989c4	                            mov r12, rax	       589	peicode.h	FUNCTION_59	CALL_4
0x400374b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       589	peicode.h	FUNCTION_59	CALL_4
0x400374f	          0x4889c7	                            mov rdi, rax	       589	peicode.h	FUNCTION_59	CALL_4
0x4003752	      0xe800000000	                          call 0x4003757	       589	peicode.h	FUNCTION_59	CALL_4
0x4003757	          0x4c01e0	                            add rax, r12	       589	peicode.h	FUNCTION_59	CALL_4
0x400375a	        0x4883c001	                              add rax, 1	       589	peicode.h	FUNCTION_59	CALL_4
0x400375e	        0x488d1403	                    lea rdx, [rbx + rax]	       589	peicode.h	FUNCTION_59	CALL_4
0x4003762	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	peicode.h	FUNCTION_59	CALL_4
0x4003766	    0x488990880000	             mov qword [rax + 0x88], rdx	       589	peicode.h	FUNCTION_59	CALL_4
0x400376d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       591	peicode.h	FUNCTION_59	CALL_5
0x4003771	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	       591	peicode.h	FUNCTION_59	CALL_5
0x4003778	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       591	peicode.h	FUNCTION_59	CALL_5
0x400377c	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       591	peicode.h	FUNCTION_59	CALL_5
0x4003783	          0x4839c2	                            cmp rdx, rax	       591	peicode.h	FUNCTION_59	CALL_5
0x4003786	            0x720f	                            jb 0x4003797	       591	peicode.h	FUNCTION_59	CALL_5
0x4003788	      0xbe4f020000	                          mov esi, 0x24f	       591	peicode.h	FUNCTION_59	CALL_5
0x400378d	      0xbf00000000	                              mov edi, 0	       591	peicode.h	FUNCTION_59	CALL_5
0x4003792	      0xe800000000	                          call 0x4003797	       591	peicode.h	FUNCTION_59	CALL_5
0x4003797	              0x90	                                     nop	       592	peicode.h	FUNCTION_59
0x4003798	        0x4883c450	                           add rsp, 0x50	       592	peicode.h	FUNCTION_59
0x400379c	              0x5b	                                 pop rbx	       592	peicode.h	FUNCTION_59
0x400379d	            0x415c	                                 pop r12	       592	peicode.h	FUNCTION_59
0x400379f	              0x5d	                                 pop rbp	       592	peicode.h	FUNCTION_59
0x40037a0	              0xc3	                                     ret	       592	peicode.h	FUNCTION_59
coff_set_arch_mach_hook	FOR,0:functions,0:WHILE,0:ELSE,3:SWITCH,6:IF,6:CALL,19:DO,0	27
0x40064cb	              0x55	                                push rbp	      2088	coffcode.h	FUNCTION_17
0x40064cc	          0x4889e5	                            mov rbp, rsp	      2088	coffcode.h	FUNCTION_17
0x40064cf	        0x4883ec30	                           sub rsp, 0x30	      2088	coffcode.h	FUNCTION_17
0x40064d3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2088	coffcode.h	FUNCTION_17
0x40064d7	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2088	coffcode.h	FUNCTION_17
0x40064db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2091	coffcode.h	FUNCTION_17
0x40064df	        0x488945f8	                mov qword [rbp - 8], rax	      2091	coffcode.h	FUNCTION_17
0x40064e3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2094	coffcode.h	FUNCTION_17
0x40064eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2095	coffcode.h	FUNCTION_17	SWITCH_1
0x40064ef	     0xfb780d00800	          movzx eax, word [rax + 0x8d0] 	      2095	coffcode.h	FUNCTION_17	SWITCH_1
0x40064f6	           0xfb7c0	                           movzx eax, ax	      2095	coffcode.h	FUNCTION_17	SWITCH_1
0x40064f9	      0x3d64860000	                         cmp eax, 0x8664	      2095	coffcode.h	FUNCTION_17	SWITCH_1
0x40064fe	            0x7511	                           jne 0x4006511	      2095	coffcode.h	FUNCTION_17	SWITCH_1
0x4006500	    0xc745ec080000	               mov dword [rbp - 0x14], 8	      2112	coffcode.h	FUNCTION_17	SWITCH_1
0x4006507	    0x48c745f00800	               mov qword [rbp - 0x10], 8	      2113	coffcode.h	FUNCTION_17	SWITCH_1
0x400650f	            0xeb08	                           jmp 0x4006519	      2114	coffcode.h	FUNCTION_17	SWITCH_1
0x4006511	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      2335	coffcode.h	FUNCTION_17	SWITCH_1
0x4006518	              0x90	                                     nop	      2336	coffcode.h	FUNCTION_17	SWITCH_1
0x4006519	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2339	coffcode.h	FUNCTION_17	CALL_19
0x400651d	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2339	coffcode.h	FUNCTION_17	CALL_19
0x4006520	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2339	coffcode.h	FUNCTION_17	CALL_19
0x4006524	            0x89ce	                            mov esi, ecx	      2339	coffcode.h	FUNCTION_17	CALL_19
0x4006526	          0x4889c7	                            mov rdi, rax	      2339	coffcode.h	FUNCTION_17	CALL_19
0x4006529	      0xe800000000	                          call 0x400652e	      2339	coffcode.h	FUNCTION_17	CALL_19
0x400652e	      0xb801000000	                              mov eax, 1	      2340	coffcode.h	FUNCTION_17
0x4006533	              0xc9	                                   leave	      2341	coffcode.h	FUNCTION_17
0x4006534	              0xc3	                                     ret	      2341	coffcode.h	FUNCTION_17
coff_write_relocs	FOR,3:functions,0:WHILE,0:ELSE,3:SWITCH,0:IF,14:CALL,22:DO,0	245
0x40065a3	              0x55	                                push rbp	      2483	coffcode.h	FUNCTION_21
0x40065a4	          0x4889e5	                            mov rbp, rsp	      2483	coffcode.h	FUNCTION_21
0x40065a7	              0x53	                                push rbx	      2483	coffcode.h	FUNCTION_21
0x40065a8	    0x4881ec980000	                           sub rsp, 0x98	      2483	coffcode.h	FUNCTION_21
0x40065af	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      2483	coffcode.h	FUNCTION_21
0x40065b6	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      2483	coffcode.h	FUNCTION_21
0x40065bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2483	coffcode.h	FUNCTION_21
0x40065c5	        0x488945e8	             mov qword [rbp - 0x18], rax	      2483	coffcode.h	FUNCTION_21
0x40065c9	            0x31c0	                            xor eax, eax	      2483	coffcode.h	FUNCTION_21
0x40065cb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2486	coffcode.h	FUNCTION_21	FOR_1
0x40065d2	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2486	coffcode.h	FUNCTION_21	FOR_1
0x40065d9	        0x48894580	             mov qword [rbp - 0x80], rax	      2486	coffcode.h	FUNCTION_21	FOR_1
0x40065dd	      0xe9ae030000	                           jmp 0x4006990	      2486	coffcode.h	FUNCTION_21	FOR_1
0x40065e2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2493	coffcode.h	FUNCTION_21	FOR_1
0x40065e6	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2493	coffcode.h	FUNCTION_21	FOR_1
0x40065ed	        0x48894588	             mov qword [rbp - 0x78], rax	      2493	coffcode.h	FUNCTION_21	FOR_1
0x40065f1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x40065f5	    0x488b88980000	            mov rcx, qword [rax + 0x98] 	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x40065fc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x4006603	      0xba00000000	                              mov edx, 0	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x4006608	          0x4889ce	                            mov rsi, rcx	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x400660b	          0x4889c7	                            mov rdi, rax	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x400660e	      0xe800000000	                          call 0x4006613	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x4006613	            0x85c0	                           test eax, eax	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x4006615	            0x740a	                            je 0x4006621	      2515	coffcode.h	FUNCTION_21	FOR_1	IF_3	CALL_4
0x4006617	      0xb800000000	                              mov eax, 0	      2516	coffcode.h	FUNCTION_21	FOR_1	IF_3
0x400661c	      0xe97f030000	                           jmp 0x40069a0	      2516	coffcode.h	FUNCTION_21	FOR_1	IF_3
0x4006621	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x4006628	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x400662f	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x4006635	            0x85c0	                           test eax, eax	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x4006637	     0xf84ae000000	                            je 0x40066eb	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x400663d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x4006641	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x4006647	      0x3dfeff0000	                         cmp eax, 0xfffe	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x400664c	     0xf8699000000	                           jbe 0x40066eb	      2519	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_5
0x4006652	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2524	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_6
0x4006656	      0xba20000000	                           mov edx, 0x20	      2524	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_6
0x400665b	      0xbe00000000	                              mov esi, 0	      2524	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_6
0x4006660	          0x4889c7	                            mov rdi, rax	      2524	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_6
0x4006663	      0xe800000000	                          call 0x4006668	      2524	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_6
0x4006668	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2526	coffcode.h	FUNCTION_21	FOR_1	IF_4
0x400666c	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2526	coffcode.h	FUNCTION_21	FOR_1	IF_4
0x4006672	          0x83c001	                              add eax, 1	      2526	coffcode.h	FUNCTION_21	FOR_1	IF_4
0x4006675	            0x89c0	                            mov eax, eax	      2526	coffcode.h	FUNCTION_21	FOR_1	IF_4
0x4006677	        0x488945b0	             mov qword [rbp - 0x50], rax	      2526	coffcode.h	FUNCTION_21	FOR_1	IF_4
0x400667b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2527	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_7
0x400667f	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2527	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_7
0x4006683	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2527	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_7
0x400668a	          0x4889ce	                            mov rsi, rcx	      2527	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_7
0x400668d	          0x4889c7	                            mov rdi, rax	      2527	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_7
0x4006690	      0xe80ec4ffff	            call sym.coff_swap_reloc_out	      2527	coffcode.h	FUNCTION_21	FOR_1	IF_4	CALL_7
0x4006695	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x400669c	        0x488b4008	                mov rax, qword [rax + 8]	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066a0	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066a7	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066aa	            0x89c1	                            mov ecx, eax	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066ac	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066b3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066b7	          0x4889ce	                            mov rsi, rcx	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066ba	          0x4889c7	                            mov rdi, rax	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066bd	      0xe800000000	                          call 0x40066c2	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066c2	          0x4889c2	                            mov rdx, rax	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066c5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2529	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_10
0x40066cc	        0x488b4008	                mov rax, qword [rax + 8]	      2529	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_10
0x40066d0	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2529	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_10
0x40066d7	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2529	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_10
0x40066da	            0x89c0	                            mov eax, eax	      2529	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_10
0x40066dc	          0x4839c2	                            cmp rdx, rax	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066df	            0x740a	                            je 0x40066eb	      2528	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5	CALL_9
0x40066e1	      0xb800000000	                              mov eax, 0	      2530	coffcode.h	FUNCTION_21	FOR_1	IF_4	IF_5
0x40066e6	      0xe9b5020000	                           jmp 0x40069a0	      2516	coffcode.h	FUNCTION_21	FOR_1	IF_3
0x40066eb	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2534	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x40066f5	      0xe974020000	                           jmp 0x400696e	      2534	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x40066fa	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2537	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006700	    0x488d14c50000	                        lea rdx, [rax*8]	      2537	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006708	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2537	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x400670c	          0x4801d0	                            add rax, rdx	      2537	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x400670f	          0x488b00	                    mov rax, qword [rax]	      2537	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006712	        0x48894590	             mov qword [rbp - 0x70], rax	      2537	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006716	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2539	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_11
0x400671a	      0xba20000000	                           mov edx, 0x20	      2539	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_11
0x400671f	      0xbe00000000	                              mov esi, 0	      2539	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_11
0x4006724	          0x4889c7	                            mov rdi, rax	      2539	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_11
0x4006727	      0xe800000000	                          call 0x400672c	      2539	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_11
0x400672c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006730	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006733	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006736	          0x4885c0	                           test rax, rax	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006739	     0xf84cb000000	                            je 0x400680a	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x400673f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006743	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006746	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006749	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x400674c	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006753	     0xf84b1000000	                            je 0x400680a	      2551	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006759	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2554	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x400675d	          0x488b00	                    mov rax, qword [rax]	      2554	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006760	          0x488b00	                    mov rax, qword [rax]	      2554	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006763	        0x488b4008	                mov rax, qword [rax + 8]	      2554	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006767	        0x48894598	             mov qword [rbp - 0x68], rax	      2554	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x400676b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2555	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006772	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2555	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x4006779	        0x488945a0	             mov qword [rbp - 0x60], rax	      2555	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6
0x400677d	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x4006783	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x4006789	            0xeb60	                           jmp 0x40067eb	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x400678b	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x4006791	            0x4898	                                    cdqe	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x4006793	    0x488d14c50000	                        lea rdx, [rax*8]	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x400679b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x400679f	          0x4801d0	                            add rax, rdx	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067a2	          0x488b00	                    mov rax, qword [rax]	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067a5	        0x488b4008	                mov rax, qword [rax + 8]	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067a9	        0x488945a8	             mov qword [rbp - 0x58], rax	      2559	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067ad	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2561	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x40067b1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2561	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x40067b5	          0x4889d6	                            mov rsi, rdx	      2561	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x40067b8	          0x4889c7	                            mov rdi, rax	      2561	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x40067bb	      0xe800000000	                          call 0x40067c0	      2561	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x40067c0	            0x85c0	                           test eax, eax	      2561	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x40067c2	            0x7520	                           jne 0x40067e4	      2561	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x40067c4	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2564	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067ca	            0x4898	                                    cdqe	      2564	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067cc	    0x488d14c50000	                        lea rdx, [rax*8]	      2564	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067d4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2564	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067d8	          0x4801c2	                            add rdx, rax	      2564	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067db	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2564	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067df	          0x488910	                    mov qword [rax], rdx	      2564	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067e2	            0xeb26	                           jmp 0x400680a	      2565	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x40067e4	    0x83857cffffff	               add dword [rbp - 0x84], 1	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067eb	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067f1	            0x4898	                                    cdqe	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067f3	    0x488d14c50000	                        lea rdx, [rax*8]	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067fb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x40067ff	          0x4801d0	                            add rax, rdx	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x4006802	          0x488b00	                    mov rax, qword [rax]	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x4006805	          0x4885c0	                           test rax, rax	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x4006808	            0x7581	                           jne 0x400678b	      2557	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_6	FOR_3
0x400680a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2570	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x400680e	        0x488b5008	                mov rdx, qword [rax + 8]	      2570	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006812	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2570	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006816	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2570	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x400681a	          0x4801d0	                            add rax, rdx	      2570	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x400681d	        0x488945b0	             mov qword [rbp - 0x50], rax	      2570	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006821	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x4006825	          0x488b00	                    mov rax, qword [rax]	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x4006828	          0x4885c0	                           test rax, rax	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x400682b	     0xf84bb000000	                            je 0x40068ec	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x4006831	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x4006835	          0x488b00	                    mov rax, qword [rax]	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x4006838	          0x488b00	                    mov rax, qword [rax]	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x400683b	          0x4885c0	                           test rax, rax	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x400683e	     0xf84a8000000	                            je 0x40068ec	      2580	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9
0x4006844	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2585	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006848	          0x488b00	                    mov rax, qword [rax]	      2585	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400684b	          0x488b00	                    mov rax, qword [rax]	      2585	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400684e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2585	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006852	    0x483d00000000	                              cmp rax, 0	      2585	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006858	            0x7520	                           jne 0x400687a	      2585	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400685a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2586	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400685e	          0x488b00	                    mov rax, qword [rax]	      2586	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006861	          0x488b00	                    mov rax, qword [rax]	      2586	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006864	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2586	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006867	      0x2500010000	                          and eax, 0x100	      2586	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400686c	            0x85c0	                           test eax, eax	      2586	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400686e	            0x740a	                            je 0x400687a	      2586	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006870	    0x48c745b8ffff	mov qword [rbp - 0x48], 0xffffffffffffffff	      2589	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4006878	            0xeb72	                           jmp 0x40068ec	      2589	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400687a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2592	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x400687e	          0x488b00	                    mov rax, qword [rax]	      2592	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x4006881	          0x488b00	                    mov rax, qword [rax]	      2592	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x4006884	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2592	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x4006888	        0x488945b8	             mov qword [rbp - 0x48], rax	      2592	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x400688c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2595	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4006890	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2595	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4006897	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2595	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x400689e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2595	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x40068a1	            0x4898	                                    cdqe	      2595	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x40068a3	          0x4839c2	                            cmp rdx, rax	      2595	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x40068a6	            0x7e44	                           jle 0x40068ec	      2595	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x40068a8	      0xbf11000000	                           mov edi, 0x11	      2597	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_15
0x40068ad	      0xe800000000	                          call 0x40068b2	      2597	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_15
0x40068b2	        0x488b5db8	             mov rbx, qword [rbp - 0x48]	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068b6	      0xbe00000000	                              mov esi, 0	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068bb	      0xbf00000000	                              mov edi, 0	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068c0	      0xe800000000	                          call 0x40068c5	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068c5	          0x4889c1	                            mov rcx, rax	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068c8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068cf	          0x4889da	                            mov rdx, rbx	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068d2	          0x4889c6	                            mov rsi, rax	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068d5	          0x4889cf	                            mov rdi, rcx	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068d8	      0xb800000000	                              mov eax, 0	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068dd	      0xe800000000	                          call 0x40068e2	      2599	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x40068e2	      0xb800000000	                              mov eax, 0	      2602	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12
0x40068e7	      0xe9b4000000	                           jmp 0x40069a0	      2602	coffcode.h	FUNCTION_21	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12
0x40068ec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2613	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x40068f0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2613	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x40068f4	            0x8b00	                    mov eax, dword [rax]	      2613	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x40068f6	        0x668945c0	               mov word [rbp - 0x40], ax	      2613	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x40068fa	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2617	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_18
0x40068fe	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2617	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_18
0x4006902	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2617	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_18
0x4006909	          0x4889ce	                            mov rsi, rcx	      2617	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_18
0x400690c	          0x4889c7	                            mov rdi, rax	      2617	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_18
0x400690f	      0xe88fc1ffff	            call sym.coff_swap_reloc_out	      2617	coffcode.h	FUNCTION_21	FOR_1	FOR_2	CALL_18
0x4006914	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x400691b	        0x488b4008	                mov rax, qword [rax + 8]	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x400691f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006926	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006929	            0x89c1	                            mov ecx, eax	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x400692b	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006932	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006936	          0x4889ce	                            mov rsi, rcx	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006939	          0x4889c7	                            mov rdi, rax	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x400693c	      0xe800000000	                          call 0x4006941	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006941	          0x4889c2	                            mov rdx, rax	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006944	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2620	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_21
0x400694b	        0x488b4008	                mov rax, qword [rax + 8]	      2620	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_21
0x400694f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2620	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_21
0x4006956	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2620	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_21
0x4006959	            0x89c0	                            mov eax, eax	      2620	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_21
0x400695b	          0x4839c2	                            cmp rdx, rax	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x400695e	            0x7407	                            je 0x4006967	      2619	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13	CALL_20
0x4006960	      0xb800000000	                              mov eax, 0	      2621	coffcode.h	FUNCTION_21	FOR_1	FOR_2	IF_13
0x4006965	            0xeb39	                           jmp 0x40069a0	      2516	coffcode.h	FUNCTION_21	FOR_1	IF_3
0x4006967	    0x838578ffffff	               add dword [rbp - 0x88], 1	      2534	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x400696e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2534	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006972	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2534	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006978	    0x3b8578ffffff	             cmp eax, dword [rbp - 0x88]	      2534	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x400697e	     0xf8776fdffff	                            ja 0x40066fa	      2534	coffcode.h	FUNCTION_21	FOR_1	FOR_2
0x4006984	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2486	coffcode.h	FUNCTION_21	FOR_1
0x4006988	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2486	coffcode.h	FUNCTION_21	FOR_1
0x400698c	        0x48894580	             mov qword [rbp - 0x80], rax	      2486	coffcode.h	FUNCTION_21	FOR_1
0x4006990	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2486	coffcode.h	FUNCTION_21	FOR_1
0x4006995	     0xf8547fcffff	                           jne 0x40065e2	      2486	coffcode.h	FUNCTION_21	FOR_1
0x400699b	      0xb801000000	                              mov eax, 1	      2630	coffcode.h	FUNCTION_21
0x40069a0	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2631	coffcode.h	FUNCTION_21
0x40069a4	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2631	coffcode.h	FUNCTION_21
0x40069ad	            0x7405	                            je 0x40069b4	      2631	coffcode.h	FUNCTION_21
0x40069af	      0xe800000000	                          call 0x40069b4	      2631	coffcode.h	FUNCTION_21
0x40069b4	    0x4881c4980000	                           add rsp, 0x98	      2631	coffcode.h	FUNCTION_21
0x40069bb	              0x5b	                                 pop rbx	      2631	coffcode.h	FUNCTION_21
0x40069bc	              0x5d	                                 pop rbp	      2631	coffcode.h	FUNCTION_21
0x40069bd	              0xc3	                                     ret	      2631	coffcode.h	FUNCTION_21
pex64_get_unwind_info	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,1:IF,4:CALL,6:DO,0	171
0x4000127	              0x55	                                push rbp	       104	pei-x86_64.c	FUNCTION_66
0x4000128	          0x4889e5	                            mov rbp, rsp	       104	pei-x86_64.c	FUNCTION_66
0x400012b	        0x4883ec40	                           sub rsp, 0x40	       104	pei-x86_64.c	FUNCTION_66
0x400012f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       104	pei-x86_64.c	FUNCTION_66
0x4000133	        0x488975d0	             mov qword [rbp - 0x30], rsi	       104	pei-x86_64.c	FUNCTION_66
0x4000137	        0x488955c8	             mov qword [rbp - 0x38], rdx	       104	pei-x86_64.c	FUNCTION_66
0x400013b	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       104	pei-x86_64.c	FUNCTION_66
0x400013f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       105	pei-x86_64.c	FUNCTION_66
0x4000143	        0x488945e8	             mov qword [rbp - 0x18], rax	       105	pei-x86_64.c	FUNCTION_66
0x4000147	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       107	pei-x86_64.c	FUNCTION_66
0x400014b	        0x488945f0	             mov qword [rbp - 0x10], rax	       107	pei-x86_64.c	FUNCTION_66
0x400014f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       108	pei-x86_64.c	FUNCTION_66
0x4000153	        0x488945f8	                mov qword [rbp - 8], rax	       108	pei-x86_64.c	FUNCTION_66
0x4000157	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       110	pei-x86_64.c	FUNCTION_66	CALL_1
0x400015b	      0xba68000000	                           mov edx, 0x68	       110	pei-x86_64.c	FUNCTION_66	CALL_1
0x4000160	      0xbe00000000	                              mov esi, 0	       110	pei-x86_64.c	FUNCTION_66	CALL_1
0x4000165	          0x4889c7	                            mov rdi, rax	       110	pei-x86_64.c	FUNCTION_66	CALL_1
0x4000168	      0xe800000000	                          call 0x400016d	       110	pei-x86_64.c	FUNCTION_66	CALL_1
0x400016d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       112	pei-x86_64.c	FUNCTION_66	IF_1
0x4000171	        0x483b45f8	                cmp rax, qword [rbp - 8]	       112	pei-x86_64.c	FUNCTION_66	IF_1
0x4000175	            0x730e	                           jae 0x4000185	       112	pei-x86_64.c	FUNCTION_66	IF_1
0x4000177	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       112	pei-x86_64.c	FUNCTION_66	IF_1
0x400017b	        0x4883c004	                              add rax, 4	       112	pei-x86_64.c	FUNCTION_66	IF_1
0x400017f	        0x483b45f8	                cmp rax, qword [rbp - 8]	       112	pei-x86_64.c	FUNCTION_66	IF_1
0x4000183	            0x720a	                            jb 0x400018f	       112	pei-x86_64.c	FUNCTION_66	IF_1
0x4000185	      0xb800000000	                              mov eax, 0	       113	pei-x86_64.c	FUNCTION_66	IF_1
0x400018a	      0xe906020000	                           jmp 0x4000395	       113	pei-x86_64.c	FUNCTION_66	IF_1
0x400018f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	pei-x86_64.c	FUNCTION_66	CALL_2
0x4000193	           0xfb600	                   movzx eax, byte [rax]	       115	pei-x86_64.c	FUNCTION_66	CALL_2
0x4000196	          0x83e007	                              and eax, 7	       115	pei-x86_64.c	FUNCTION_66	CALL_2
0x4000199	            0x89c2	                            mov edx, eax	       115	pei-x86_64.c	FUNCTION_66	CALL_2
0x400019b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       115	pei-x86_64.c	FUNCTION_66	CALL_2
0x400019f	          0x885008	                  mov byte [rax + 8], dl	       115	pei-x86_64.c	FUNCTION_66	CALL_2
0x40001a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	pei-x86_64.c	FUNCTION_66	CALL_3
0x40001a6	           0xfb600	                   movzx eax, byte [rax]	       116	pei-x86_64.c	FUNCTION_66	CALL_3
0x40001a9	          0xc0e803	                               shr al, 3	       116	pei-x86_64.c	FUNCTION_66	CALL_3
0x40001ac	            0x89c2	                            mov edx, eax	       116	pei-x86_64.c	FUNCTION_66	CALL_3
0x40001ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       116	pei-x86_64.c	FUNCTION_66	CALL_3
0x40001b2	          0x885009	                  mov byte [rax + 9], dl	       116	pei-x86_64.c	FUNCTION_66	CALL_3
0x40001b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       117	pei-x86_64.c	FUNCTION_66
0x40001b9	         0xfb64001	               movzx eax, byte [rax + 1]	       117	pei-x86_64.c	FUNCTION_66
0x40001bd	           0xfb6d0	                           movzx edx, al	       117	pei-x86_64.c	FUNCTION_66
0x40001c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       117	pei-x86_64.c	FUNCTION_66
0x40001c4	        0x48895010	             mov qword [rax + 0x10], rdx	       117	pei-x86_64.c	FUNCTION_66
0x40001c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	pei-x86_64.c	FUNCTION_66
0x40001cc	         0xfb64002	               movzx eax, byte [rax + 2]	       118	pei-x86_64.c	FUNCTION_66
0x40001d0	           0xfb6d0	                           movzx edx, al	       118	pei-x86_64.c	FUNCTION_66
0x40001d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       118	pei-x86_64.c	FUNCTION_66
0x40001d7	        0x48895018	             mov qword [rax + 0x18], rdx	       118	pei-x86_64.c	FUNCTION_66
0x40001db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001df	         0xfb64003	               movzx eax, byte [rax + 3]	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001e3	          0x83e00f	                            and eax, 0xf	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001e6	            0x89c2	                            mov edx, eax	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001ec	            0x89d1	                            mov ecx, edx	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001ee	          0x83e10f	                            and ecx, 0xf	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001f1	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001f5	          0x83e2f0	                     and edx, 0xfffffff0	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001f8	             0x9ca	                             or edx, ecx	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001fa	          0x885020	               mov byte [rax + 0x20], dl	       119	pei-x86_64.c	FUNCTION_66	CALL_4
0x40001fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x4000201	         0xfb64003	               movzx eax, byte [rax + 3]	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x4000205	          0xc0e804	                               shr al, 4	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x4000208	           0xfb6c0	                           movzx eax, al	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x400020b	          0x83e00f	                            and eax, 0xf	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x400020e	          0x4889c2	                            mov rdx, rax	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x4000211	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x4000215	        0x48895028	             mov qword [rax + 0x28], rdx	       120	pei-x86_64.c	FUNCTION_66	CALL_5
0x4000219	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       121	pei-x86_64.c	FUNCTION_66	CALL_6
0x400021d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       121	pei-x86_64.c	FUNCTION_66	CALL_6
0x4000221	        0x4883c001	                              add rax, 1	       121	pei-x86_64.c	FUNCTION_66	CALL_6
0x4000225	        0x4883e0fe	             and rax, 0xfffffffffffffffe	       121	pei-x86_64.c	FUNCTION_66	CALL_6
0x4000229	        0x488d1400	                    lea rdx, [rax + rax]	       121	pei-x86_64.c	FUNCTION_66	CALL_6
0x400022d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       121	pei-x86_64.c	FUNCTION_66	CALL_6
0x4000231	        0x48895030	             mov qword [rax + 0x30], rdx	       121	pei-x86_64.c	FUNCTION_66	CALL_6
0x4000235	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       122	pei-x86_64.c	FUNCTION_66
0x4000239	        0x488b4030	            mov rax, qword [rax + 0x30] 	       122	pei-x86_64.c	FUNCTION_66
0x400023d	        0x488d5004	                      lea rdx, [rax + 4]	       122	pei-x86_64.c	FUNCTION_66
0x4000241	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       122	pei-x86_64.c	FUNCTION_66
0x4000245	          0x488910	                    mov qword [rax], rdx	       122	pei-x86_64.c	FUNCTION_66
0x4000248	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       123	pei-x86_64.c	FUNCTION_66
0x400024c	        0x488d5004	                      lea rdx, [rax + 4]	       123	pei-x86_64.c	FUNCTION_66
0x4000250	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       123	pei-x86_64.c	FUNCTION_66
0x4000254	        0x48895038	             mov qword [rax + 0x38], rdx	       123	pei-x86_64.c	FUNCTION_66
0x4000258	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       124	pei-x86_64.c	FUNCTION_66
0x400025c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       124	pei-x86_64.c	FUNCTION_66
0x4000260	        0x48895040	             mov qword [rax + 0x40], rdx	       124	pei-x86_64.c	FUNCTION_66
0x4000264	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       126	pei-x86_64.c	FUNCTION_66
0x4000268	          0x488b00	                    mov rax, qword [rax]	       126	pei-x86_64.c	FUNCTION_66
0x400026b	        0x480145f0	            add qword [rbp - 0x10], rax 	       126	pei-x86_64.c	FUNCTION_66
0x400026f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	pei-x86_64.c	FUNCTION_66	IF_2
0x4000273	        0x483b45f8	                cmp rax, qword [rbp - 8]	       127	pei-x86_64.c	FUNCTION_66	IF_2
0x4000277	            0x720a	                            jb 0x4000283	       127	pei-x86_64.c	FUNCTION_66	IF_2
0x4000279	      0xb800000000	                              mov eax, 0	       128	pei-x86_64.c	FUNCTION_66	IF_2
0x400027e	      0xe912010000	                           jmp 0x4000395	       128	pei-x86_64.c	FUNCTION_66	IF_2
0x4000283	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000287	         0xfb64009	               movzx eax, byte [rax + 9]	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400028b	           0xfb6c0	                           movzx eax, al	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400028e	          0x83f801	                              cmp eax, 1	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000291	     0xf8cf9000000	                            jl 0x4000390	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000297	          0x83f803	                              cmp eax, 3	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400029a	     0xf8ea2000000	                           jle 0x4000342	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002a0	          0x83f804	                              cmp eax, 4	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002a3	     0xf85e7000000	                           jne 0x4000390	       130	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       133	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_3
0x40002ad	        0x4883c00c	                            add rax, 0xc	       133	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_3
0x40002b1	        0x483b45f8	                cmp rax, qword [rbp - 8]	       133	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_3
0x40002b5	            0x720a	                            jb 0x40002c1	       133	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_3
0x40002b7	      0xb800000000	                              mov eax, 0	       134	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_3
0x40002bc	      0xe9d4000000	                           jmp 0x4000395	       134	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_3
0x40002c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002c5	        0x488b4008	                mov rax, qword [rax + 8]	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002c9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002cd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002d1	          0x4889d7	                            mov rdi, rdx	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002d4	            0xffd0	                                call rax	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002d6	          0x4889c2	                            mov rdx, rax	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002dd	        0x48895050	             mov qword [rax + 0x50], rdx	       135	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002e5	        0x488b4008	                mov rax, qword [rax + 8]	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002e9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002ed	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002f1	        0x4883c204	                              add rdx, 4	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002f5	          0x4889d7	                            mov rdi, rdx	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002f8	            0xffd0	                                call rax	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002fa	          0x4889c2	                            mov rdx, rax	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x40002fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000301	        0x48895058	             mov qword [rax + 0x58], rdx	       136	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000305	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000309	        0x488b4008	                mov rax, qword [rax + 8]	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400030d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000311	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000315	        0x4883c208	                              add rdx, 8	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000319	          0x4889d7	                            mov rdi, rdx	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400031c	            0xffd0	                                call rax	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400031e	          0x4889c2	                            mov rdx, rax	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000321	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000325	        0x48895060	             mov qword [rax + 0x60], rdx	       137	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000329	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       138	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400032d	          0x488b00	                    mov rax, qword [rax]	       138	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000330	        0x488d500c	                    lea rdx, [rax + 0xc]	       138	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000334	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       138	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000338	          0x488910	                    mov qword [rax], rdx	       138	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400033b	      0xb801000000	                              mov eax, 1	       139	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000340	            0xeb53	                           jmp 0x4000395	       139	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000342	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       143	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_4
0x4000346	        0x4883c004	                              add rax, 4	       143	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_4
0x400034a	        0x483b45f8	                cmp rax, qword [rbp - 8]	       143	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_4
0x400034e	            0x7207	                            jb 0x4000357	       143	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_4
0x4000350	      0xb800000000	                              mov eax, 0	       144	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_4
0x4000355	            0xeb3e	                           jmp 0x4000395	       144	pei-x86_64.c	FUNCTION_66	SWITCH_1	IF_4
0x4000357	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400035b	        0x488b4008	                mov rax, qword [rax + 8]	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400035f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000363	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000367	          0x4889d7	                            mov rdi, rdx	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400036a	            0xffd0	                                call rax	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400036c	          0x4889c2	                            mov rdx, rax	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400036f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000373	        0x48895048	             mov qword [rax + 0x48], rdx	       145	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000377	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       146	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400037b	          0x488b00	                    mov rax, qword [rax]	       146	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400037e	        0x488d5004	                      lea rdx, [rax + 4]	       146	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000382	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       146	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000386	          0x488910	                    mov qword [rax], rdx	       146	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000389	      0xb801000000	                              mov eax, 1	       147	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x400038e	            0xeb05	                           jmp 0x4000395	       147	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000390	      0xb801000000	                              mov eax, 1	       149	pei-x86_64.c	FUNCTION_66	SWITCH_1
0x4000395	              0xc9	                                   leave	       151	pei-x86_64.c	FUNCTION_66
0x4000396	              0xc3	                                     ret	       151	pei-x86_64.c	FUNCTION_66
pe_bfd_read_buildid	FOR,2:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,10:CALL,9:DO,0	182
0x4004b19	              0x55	                                push rbp	      1293	peicode.h	FUNCTION_63
0x4004b1a	          0x4889e5	                            mov rbp, rsp	      1293	peicode.h	FUNCTION_63
0x4004b1d	    0x4881ecc00100	                          sub rsp, 0x1c0	      1293	peicode.h	FUNCTION_63
0x4004b24	    0x4889bd48feff	            mov qword [rbp - 0x1b8], rdi	      1293	peicode.h	FUNCTION_63
0x4004b2b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1293	peicode.h	FUNCTION_63
0x4004b34	        0x488945f8	                mov qword [rbp - 8], rax	      1293	peicode.h	FUNCTION_63
0x4004b38	            0x31c0	                            xor eax, eax	      1293	peicode.h	FUNCTION_63
0x4004b3a	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1294	peicode.h	FUNCTION_63	CALL_1
0x4004b41	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1294	peicode.h	FUNCTION_63	CALL_1
0x4004b48	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1294	peicode.h	FUNCTION_63	CALL_1
0x4004b4f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1295	peicode.h	FUNCTION_63
0x4004b56	    0x4805c8000000	                           add rax, 0xc8	      1295	peicode.h	FUNCTION_63
0x4004b5c	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1295	peicode.h	FUNCTION_63
0x4004b63	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      1297	peicode.h	FUNCTION_63
0x4004b6e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1300	peicode.h	FUNCTION_63
0x4004b75	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1300	peicode.h	FUNCTION_63
0x4004b7c	    0x48898580feff	            mov qword [rbp - 0x180], rax	      1300	peicode.h	FUNCTION_63
0x4004b83	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1301	peicode.h	FUNCTION_63
0x4004b8a	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1301	peicode.h	FUNCTION_63
0x4004b91	    0x48898588feff	            mov qword [rbp - 0x178], rax	      1301	peicode.h	FUNCTION_63
0x4004b98	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      1303	peicode.h	FUNCTION_63	IF_1
0x4004ba0	     0xf84dd020000	                            je 0x4004e83	      1303	peicode.h	FUNCTION_63	IF_1
0x4004ba6	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1306	peicode.h	FUNCTION_63
0x4004bad	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1306	peicode.h	FUNCTION_63
0x4004bb1	    0x48018580feff	           add qword [rbp - 0x180], rax 	      1306	peicode.h	FUNCTION_63
0x4004bb8	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004bbf	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004bc6	    0x48898568feff	            mov qword [rbp - 0x198], rax	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004bcd	            0xeb48	                           jmp 0x4004c17	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004bcf	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004bd6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004bda	    0x483b8580feff	            cmp rax, qword [rbp - 0x180]	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004be1	            0x7722	                            ja 0x4004c05	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004be3	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004bea	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004bee	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004bf5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004bf9	          0x4801d0	                            add rax, rdx	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004bfc	    0x483b8580feff	            cmp rax, qword [rbp - 0x180]	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004c03	            0x771e	                            ja 0x4004c23	      1311	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004c05	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004c0c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004c10	    0x48898568feff	            mov qword [rbp - 0x198], rax	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004c17	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004c1f	            0x75ae	                           jne 0x4004bcf	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004c21	            0xeb01	                           jmp 0x4004c24	      1309	peicode.h	FUNCTION_63	FOR_1
0x4004c23	              0x90	                                     nop	      1312	peicode.h	FUNCTION_63	FOR_1	IF_2
0x4004c24	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      1315	peicode.h	FUNCTION_63	IF_3
0x4004c2c	     0xf8454020000	                            je 0x4004e86	      1315	peicode.h	FUNCTION_63	IF_3
0x4004c32	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1318	peicode.h	FUNCTION_63	IF_4
0x4004c39	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1318	peicode.h	FUNCTION_63	IF_4
0x4004c3c	      0x2500010000	                          and eax, 0x100	      1318	peicode.h	FUNCTION_63	IF_4
0x4004c41	            0x85c0	                           test eax, eax	      1318	peicode.h	FUNCTION_63	IF_4
0x4004c43	     0xf8440020000	                            je 0x4004e89	      1318	peicode.h	FUNCTION_63	IF_4
0x4004c49	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1321	peicode.h	FUNCTION_63
0x4004c50	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1321	peicode.h	FUNCTION_63
0x4004c54	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      1321	peicode.h	FUNCTION_63
0x4004c5b	          0x4829c2	                            sub rdx, rax	      1321	peicode.h	FUNCTION_63
0x4004c5e	          0x4889d0	                            mov rax, rdx	      1321	peicode.h	FUNCTION_63
0x4004c61	    0x48898590feff	            mov qword [rbp - 0x170], rax	      1321	peicode.h	FUNCTION_63
0x4004c68	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1326	peicode.h	FUNCTION_63	IF_5
0x4004c6f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1326	peicode.h	FUNCTION_63	IF_5
0x4004c73	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      1326	peicode.h	FUNCTION_63	IF_5
0x4004c7a	            0x761b	                           jbe 0x4004c97	      1326	peicode.h	FUNCTION_63	IF_5
0x4004c7c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1327	peicode.h	FUNCTION_63	IF_5
0x4004c83	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1327	peicode.h	FUNCTION_63	IF_5
0x4004c87	    0x482b8590feff	            sub rax, qword [rbp - 0x170]	      1327	peicode.h	FUNCTION_63	IF_5
0x4004c8e	    0x483b8588feff	            cmp rax, qword [rbp - 0x178]	      1327	peicode.h	FUNCTION_63	IF_5
0x4004c95	            0x732e	                           jae 0x4004cc5	      1327	peicode.h	FUNCTION_63	IF_5
0x4004c97	      0xbe00000000	                              mov esi, 0	      1330	peicode.h	FUNCTION_63	IF_5	CALL_3
0x4004c9c	      0xbf00000000	                              mov edi, 0	      1330	peicode.h	FUNCTION_63	IF_5	CALL_3
0x4004ca1	      0xe800000000	                          call 0x4004ca6	      1330	peicode.h	FUNCTION_63	IF_5	CALL_3
0x4004ca6	          0x4889c2	                            mov rdx, rax	      1330	peicode.h	FUNCTION_63	IF_5	CALL_3
0x4004ca9	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1329	peicode.h	FUNCTION_63	IF_5	CALL_2
0x4004cb0	          0x4889c6	                            mov rsi, rax	      1329	peicode.h	FUNCTION_63	IF_5	CALL_2
0x4004cb3	          0x4889d7	                            mov rdi, rdx	      1329	peicode.h	FUNCTION_63	IF_5	CALL_2
0x4004cb6	      0xb800000000	                              mov eax, 0	      1329	peicode.h	FUNCTION_63	IF_5	CALL_2
0x4004cbb	      0xe800000000	                          call 0x4004cc0	      1329	peicode.h	FUNCTION_63	IF_5	CALL_2
0x4004cc0	      0xe9cb010000	                           jmp 0x4004e90	      1332	peicode.h	FUNCTION_63	IF_5
0x4004cc5	    0x488d9560feff	                  lea rdx, [rbp - 0x1a0]	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004ccc	    0x488b8d68feff	            mov rcx, qword [rbp - 0x198]	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004cd3	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004cda	          0x4889ce	                            mov rsi, rcx	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004cdd	          0x4889c7	                            mov rdi, rax	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004ce0	      0xe800000000	                          call 0x4004ce5	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004ce5	            0x85c0	                           test eax, eax	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004ce7	            0x7524	                           jne 0x4004d0d	      1336	peicode.h	FUNCTION_63	IF_6	CALL_4
0x4004ce9	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      1338	peicode.h	FUNCTION_63	IF_6	IF_7
0x4004cf0	          0x4885c0	                           test rax, rax	      1338	peicode.h	FUNCTION_63	IF_6	IF_7
0x4004cf3	     0xf8493010000	                            je 0x4004e8c	      1338	peicode.h	FUNCTION_63	IF_6	IF_7
0x4004cf9	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      1339	peicode.h	FUNCTION_63	IF_6	CALL_5
0x4004d00	          0x4889c7	                            mov rdi, rax	      1339	peicode.h	FUNCTION_63	IF_6	CALL_5
0x4004d03	      0xe800000000	                          call 0x4004d08	      1339	peicode.h	FUNCTION_63	IF_6	CALL_5
0x4004d08	      0xe97f010000	                           jmp 0x4004e8c	      1340	peicode.h	FUNCTION_63	IF_6
0x4004d0d	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 0	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004d17	      0xe938010000	                           jmp 0x4004e54	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004d1c	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      1347	peicode.h	FUNCTION_63	FOR_2
0x4004d23	    0x8b855cfeffff	            mov eax, dword [rbp - 0x1a4]	      1347	peicode.h	FUNCTION_63	FOR_2
0x4004d29	        0x48c1e002	                              shl rax, 2	      1347	peicode.h	FUNCTION_63	FOR_2
0x4004d2d	    0x488d0cc50000	                        lea rcx, [rax*8]	      1347	peicode.h	FUNCTION_63	FOR_2
0x4004d35	          0x4829c1	                            sub rcx, rax	      1347	peicode.h	FUNCTION_63	FOR_2
0x4004d38	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      1347	peicode.h	FUNCTION_63	FOR_2
0x4004d3f	          0x4801c8	                            add rax, rcx	      1347	peicode.h	FUNCTION_63	FOR_2
0x4004d42	          0x4801d0	                            add rax, rdx	      1346	peicode.h	FUNCTION_63	FOR_2
0x4004d45	    0x48898598feff	            mov qword [rbp - 0x168], rax	      1346	peicode.h	FUNCTION_63	FOR_2
0x4004d4c	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      1350	peicode.h	FUNCTION_63	FOR_2	CALL_6
0x4004d53	    0x488b8d98feff	            mov rcx, qword [rbp - 0x168]	      1350	peicode.h	FUNCTION_63	FOR_2	CALL_6
0x4004d5a	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1350	peicode.h	FUNCTION_63	FOR_2	CALL_6
0x4004d61	          0x4889ce	                            mov rsi, rcx	      1350	peicode.h	FUNCTION_63	FOR_2	CALL_6
0x4004d64	          0x4889c7	                            mov rdi, rax	      1350	peicode.h	FUNCTION_63	FOR_2	CALL_6
0x4004d67	      0xe800000000	                          call 0x4004d6c	      1350	peicode.h	FUNCTION_63	FOR_2	CALL_6
0x4004d6c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1352	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004d73	        0x4883f802	                              cmp rax, 2	      1352	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004d77	     0xf85d0000000	                           jne 0x4004e4d	      1352	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004d7d	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1355	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004d84	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      1355	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004d8b	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004d92	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1362	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9
0x4004d99	          0x4889c6	                            mov rsi, rax	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004d9c	    0x488b8da0feff	            mov rcx, qword [rbp - 0x160]	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004da3	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004daa	          0x4889c7	                            mov rdi, rax	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004dad	      0xe800000000	                          call 0x4004db2	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004db2	          0x4885c0	                           test rax, rax	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004db5	     0xf84d4000000	                            je 0x4004e8f	      1361	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_7
0x4004dbb	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1366	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9
0x4004dc2	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1366	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9
0x4004dc5	            0x89c0	                            mov eax, eax	      1365	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_8
0x4004dc7	        0x488d5010	                   lea rdx, [rax + 0x10]	      1365	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_8
0x4004dcb	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1365	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_8
0x4004dd2	          0x4889d6	                            mov rsi, rdx	      1365	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_8
0x4004dd5	          0x4889c7	                            mov rdi, rax	      1365	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_8
0x4004dd8	      0xe800000000	                          call 0x4004ddd	      1365	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_8
0x4004ddd	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      1365	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	CALL_8
0x4004de4	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	      1367	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004dec	     0xf849d000000	                            je 0x4004e8f	      1367	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004df2	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1369	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004df9	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1369	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004dfc	            0x89c2	                            mov edx, eax	      1369	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004dfe	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1369	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004e05	          0x488910	                    mov qword [rax], rdx	      1369	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004e08	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1371	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004e0f	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1371	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004e12	            0x89c2	                            mov edx, eax	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e14	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e1b	        0x488d4808	                      lea rcx, [rax + 8]	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e1f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e26	        0x4883c008	                              add rax, 8	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e2a	          0x4889ce	                            mov rsi, rcx	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e2d	          0x4889c7	                            mov rdi, rax	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e30	      0xe800000000	                          call 0x4004e35	      1370	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4004e35	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1372	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004e3c	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      1372	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004e43	    0x488990100100	            mov qword [rax + 0x110], rdx	      1372	peicode.h	FUNCTION_63	FOR_2	IF_8	IF_9	IF_10
0x4004e4a	              0x90	                                     nop	      1375	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004e4b	            0xeb42	                           jmp 0x4004e8f	      1375	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004e4d	    0x83855cfeffff	              add dword [rbp - 0x1a4], 1	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e54	    0x8b8d5cfeffff	            mov ecx, dword [rbp - 0x1a4]	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e5a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e61	        0x48c1e802	                              shr rax, 2	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e65	    0x48ba25499224	          movabs rdx, 0x4924924924924925	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e6f	          0x48f7e2	                                 mul rdx	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e72	          0x4889d0	                            mov rax, rdx	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e75	          0x48d1e8	                              shr rax, 1	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e78	          0x4839c1	                            cmp rcx, rax	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e7b	     0xf829bfeffff	                            jb 0x4004d1c	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e81	            0xeb0d	                           jmp 0x4004e90	      1344	peicode.h	FUNCTION_63	FOR_2
0x4004e83	              0x90	                                     nop	      1304	peicode.h	FUNCTION_63	IF_1
0x4004e84	            0xeb0a	                           jmp 0x4004e90	      1304	peicode.h	FUNCTION_63	IF_1
0x4004e86	              0x90	                                     nop	      1316	peicode.h	FUNCTION_63	IF_3
0x4004e87	            0xeb07	                           jmp 0x4004e90	      1316	peicode.h	FUNCTION_63	IF_3
0x4004e89	              0x90	                                     nop	      1319	peicode.h	FUNCTION_63	IF_4
0x4004e8a	            0xeb04	                           jmp 0x4004e90	      1319	peicode.h	FUNCTION_63	IF_4
0x4004e8c	              0x90	                                     nop	      1340	peicode.h	FUNCTION_63	IF_6
0x4004e8d	            0xeb01	                           jmp 0x4004e90	      1340	peicode.h	FUNCTION_63	IF_6
0x4004e8f	              0x90	                                     nop	      1375	peicode.h	FUNCTION_63	FOR_2	IF_8
0x4004e90	        0x488b45f8	                mov rax, qword [rbp - 8]	      1378	peicode.h	FUNCTION_63
0x4004e94	    0x644833042528	                xor rax, qword fs:[0x28]	      1378	peicode.h	FUNCTION_63
0x4004e9d	            0x7405	                            je 0x4004ea4	      1378	peicode.h	FUNCTION_63
0x4004e9f	      0xe800000000	                          call 0x4004ea4	      1378	peicode.h	FUNCTION_63
0x4004ea4	              0xc9	                                   leave	      1378	peicode.h	FUNCTION_63
0x4004ea5	              0xc3	                                     ret	      1378	peicode.h	FUNCTION_63
coff_set_custom_section_alignment	FOR,1:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,4:CALL,2:DO,0	140
0x4005ec3	              0x55	                                push rbp	      1690	coffcode.h	FUNCTION_11
0x4005ec4	          0x4889e5	                            mov rbp, rsp	      1690	coffcode.h	FUNCTION_11
0x4005ec7	        0x4883ec30	                           sub rsp, 0x30	      1690	coffcode.h	FUNCTION_11
0x4005ecb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1690	coffcode.h	FUNCTION_11
0x4005ecf	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1690	coffcode.h	FUNCTION_11
0x4005ed3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1690	coffcode.h	FUNCTION_11
0x4005ed7	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1690	coffcode.h	FUNCTION_11
0x4005eda	    0xc745f4020000	                mov dword [rbp - 0xc], 2	      1691	coffcode.h	FUNCTION_11
0x4005ee1	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1694	coffcode.h	FUNCTION_11	FOR_1
0x4005ee8	      0xe9bb000000	                           jmp 0x4005fa8	      1694	coffcode.h	FUNCTION_11	FOR_1
0x4005eed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1696	coffcode.h	FUNCTION_11	FOR_1
0x4005ef1	          0x488b00	                    mov rax, qword [rax]	      1696	coffcode.h	FUNCTION_11	FOR_1
0x4005ef4	        0x488945f8	                mov qword [rbp - 8], rax	      1696	coffcode.h	FUNCTION_11	FOR_1
0x4005ef8	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005efb	          0x4889d0	                            mov rax, rdx	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005efe	          0x4801c0	                            add rax, rax	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f01	          0x4801d0	                            add rax, rdx	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f04	        0x48c1e003	                              shl rax, 3	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f08	          0x4889c2	                            mov rdx, rax	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f0f	          0x4801d0	                            add rax, rdx	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f12	          0x8b4008	                mov eax, dword [rax + 8]	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f15	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f18	            0x7533	                           jne 0x4005f4d	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f1a	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f1d	          0x4889d0	                            mov rax, rdx	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f20	          0x4801c0	                            add rax, rax	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f23	          0x4801d0	                            add rax, rdx	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f26	        0x48c1e003	                              shl rax, 3	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f2a	          0x4889c2	                            mov rdx, rax	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f31	          0x4801d0	                            add rax, rdx	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f34	          0x488b00	                    mov rax, qword [rax]	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f37	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f3b	          0x4889d6	                            mov rsi, rdx	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f3e	          0x4889c7	                            mov rdi, rax	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f41	      0xe800000000	                          call 0x4005f46	      1699	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4005f46	            0x85c0	                           test eax, eax	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f48	           0xf94c0	                                 sete al	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f4b	            0xeb53	                           jmp 0x4005fa0	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f4d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f50	          0x4889d0	                            mov rax, rdx	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f53	          0x4801c0	                            add rax, rax	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f56	          0x4801d0	                            add rax, rdx	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f59	        0x48c1e003	                              shl rax, 3	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f5d	          0x4889c2	                            mov rdx, rax	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f64	          0x4801d0	                            add rax, rdx	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f67	          0x8b4008	                mov eax, dword [rax + 8]	      1701	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f6a	            0x89c6	                            mov esi, eax	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f6c	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f6f	          0x4889d0	                            mov rax, rdx	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f72	          0x4801c0	                            add rax, rax	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f75	          0x4801d0	                            add rax, rdx	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f78	        0x48c1e003	                              shl rax, 3	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f7c	          0x4889c2	                            mov rdx, rax	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f83	          0x4801d0	                            add rax, rdx	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f86	          0x488b00	                    mov rax, qword [rax]	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f89	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f8d	          0x4889f2	                            mov rdx, rsi	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f90	          0x4889ce	                            mov rsi, rcx	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f93	          0x4889c7	                            mov rdi, rax	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f96	      0xe800000000	                          call 0x4005f9b	      1700	coffcode.h	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4005f9b	            0x85c0	                           test eax, eax	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005f9d	           0xf94c0	                                 sete al	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005fa0	            0x84c0	                             test al, al	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005fa2	            0x7512	                           jne 0x4005fb6	      1698	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005fa4	        0x8345f001	               add dword [rbp - 0x10], 1	      1694	coffcode.h	FUNCTION_11	FOR_1
0x4005fa8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1694	coffcode.h	FUNCTION_11	FOR_1
0x4005fab	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1694	coffcode.h	FUNCTION_11	FOR_1
0x4005fae	     0xf8239ffffff	                            jb 0x4005eed	      1694	coffcode.h	FUNCTION_11	FOR_1
0x4005fb4	            0xeb01	                           jmp 0x4005fb7	      1694	coffcode.h	FUNCTION_11	FOR_1
0x4005fb6	              0x90	                                     nop	      1702	coffcode.h	FUNCTION_11	FOR_1	IF_1
0x4005fb7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1704	coffcode.h	FUNCTION_11	IF_2
0x4005fba	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1704	coffcode.h	FUNCTION_11	IF_2
0x4005fbd	     0xf83ae000000	                           jae 0x4006071	      1704	coffcode.h	FUNCTION_11	IF_2
0x4005fc3	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fc6	          0x4889d0	                            mov rax, rdx	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fc9	          0x4801c0	                            add rax, rax	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fcc	          0x4801d0	                            add rax, rdx	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fcf	        0x48c1e003	                              shl rax, 3	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fd3	          0x4889c2	                            mov rdx, rax	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fda	          0x4801d0	                            add rax, rdx	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fdd	          0x8b400c	              mov eax, dword [rax + 0xc]	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fe0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fe3	            0x7422	                            je 0x4006007	      1707	coffcode.h	FUNCTION_11	IF_3
0x4005fe5	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005fe8	          0x4889d0	                            mov rax, rdx	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005feb	          0x4801c0	                            add rax, rax	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005fee	          0x4801d0	                            add rax, rdx	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005ff1	        0x48c1e003	                              shl rax, 3	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005ff5	          0x4889c2	                            mov rdx, rax	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005ff8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005ffc	          0x4801d0	                            add rax, rdx	      1708	coffcode.h	FUNCTION_11	IF_3
0x4005fff	          0x8b400c	              mov eax, dword [rax + 0xc]	      1708	coffcode.h	FUNCTION_11	IF_3
0x4006002	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1708	coffcode.h	FUNCTION_11	IF_3
0x4006005	            0x776d	                            ja 0x4006074	      1708	coffcode.h	FUNCTION_11	IF_3
0x4006007	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1711	coffcode.h	FUNCTION_11	IF_4
0x400600a	          0x4889d0	                            mov rax, rdx	      1711	coffcode.h	FUNCTION_11	IF_4
0x400600d	          0x4801c0	                            add rax, rax	      1711	coffcode.h	FUNCTION_11	IF_4
0x4006010	          0x4801d0	                            add rax, rdx	      1711	coffcode.h	FUNCTION_11	IF_4
0x4006013	        0x48c1e003	                              shl rax, 3	      1711	coffcode.h	FUNCTION_11	IF_4
0x4006017	          0x4889c2	                            mov rdx, rax	      1711	coffcode.h	FUNCTION_11	IF_4
0x400601a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1711	coffcode.h	FUNCTION_11	IF_4
0x400601e	          0x4801d0	                            add rax, rdx	      1711	coffcode.h	FUNCTION_11	IF_4
0x4006021	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1711	coffcode.h	FUNCTION_11	IF_4
0x4006024	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1711	coffcode.h	FUNCTION_11	IF_4
0x4006027	            0x7422	                            je 0x400604b	      1711	coffcode.h	FUNCTION_11	IF_4
0x4006029	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1713	coffcode.h	FUNCTION_11	IF_4
0x400602c	          0x4889d0	                            mov rax, rdx	      1713	coffcode.h	FUNCTION_11	IF_4
0x400602f	          0x4801c0	                            add rax, rax	      1713	coffcode.h	FUNCTION_11	IF_4
0x4006032	          0x4801d0	                            add rax, rdx	      1713	coffcode.h	FUNCTION_11	IF_4
0x4006035	        0x48c1e003	                              shl rax, 3	      1713	coffcode.h	FUNCTION_11	IF_4
0x4006039	          0x4889c2	                            mov rdx, rax	      1713	coffcode.h	FUNCTION_11	IF_4
0x400603c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1713	coffcode.h	FUNCTION_11	IF_4
0x4006040	          0x4801d0	                            add rax, rdx	      1713	coffcode.h	FUNCTION_11	IF_4
0x4006043	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1713	coffcode.h	FUNCTION_11	IF_4
0x4006046	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1713	coffcode.h	FUNCTION_11	IF_4
0x4006049	            0x722c	                            jb 0x4006077	      1713	coffcode.h	FUNCTION_11	IF_4
0x400604b	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1718	coffcode.h	FUNCTION_11
0x400604e	          0x4889d0	                            mov rax, rdx	      1718	coffcode.h	FUNCTION_11
0x4006051	          0x4801c0	                            add rax, rax	      1718	coffcode.h	FUNCTION_11
0x4006054	          0x4801d0	                            add rax, rdx	      1718	coffcode.h	FUNCTION_11
0x4006057	        0x48c1e003	                              shl rax, 3	      1718	coffcode.h	FUNCTION_11
0x400605b	          0x4889c2	                            mov rdx, rax	      1718	coffcode.h	FUNCTION_11
0x400605e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1718	coffcode.h	FUNCTION_11
0x4006062	          0x4801d0	                            add rax, rdx	      1718	coffcode.h	FUNCTION_11
0x4006065	          0x8b5014	            mov edx, dword [rax + 0x14] 	      1718	coffcode.h	FUNCTION_11
0x4006068	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1718	coffcode.h	FUNCTION_11
0x400606c	          0x895070	             mov dword [rax + 0x70], edx	      1718	coffcode.h	FUNCTION_11
0x400606f	            0xeb07	                           jmp 0x4006078	      1718	coffcode.h	FUNCTION_11
0x4006071	              0x90	                                     nop	      1705	coffcode.h	FUNCTION_11	IF_2
0x4006072	            0xeb04	                           jmp 0x4006078	      1705	coffcode.h	FUNCTION_11	IF_2
0x4006074	              0x90	                                     nop	      1709	coffcode.h	FUNCTION_11	IF_3
0x4006075	            0xeb01	                           jmp 0x4006078	      1709	coffcode.h	FUNCTION_11	IF_3
0x4006077	              0x90	                                     nop	      1716	coffcode.h	FUNCTION_11	IF_4
0x4006078	              0xc9	                                   leave	      1719	coffcode.h	FUNCTION_11
0x4006079	              0xc3	                                     ret	      1719	coffcode.h	FUNCTION_11
pe_ILF_make_a_symbol_reloc	FOR,0:functions,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:CALL,2:DO,0	68
0x40032a4	              0x55	                                push rbp	       457	peicode.h	FUNCTION_56
0x40032a5	          0x4889e5	                            mov rbp, rsp	       457	peicode.h	FUNCTION_56
0x40032a8	        0x4883ec30	                           sub rsp, 0x30	       457	peicode.h	FUNCTION_56
0x40032ac	        0x48897de8	             mov qword [rbp - 0x18], rdi	       457	peicode.h	FUNCTION_56
0x40032b0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       457	peicode.h	FUNCTION_56
0x40032b4	          0x8955dc	             mov dword [rbp - 0x24], edx	       457	peicode.h	FUNCTION_56
0x40032b7	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       457	peicode.h	FUNCTION_56
0x40032bb	        0x448945d8	             mov dword [rbp - 0x28], r8d	       457	peicode.h	FUNCTION_56
0x40032bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       461	peicode.h	FUNCTION_56
0x40032c3	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       461	peicode.h	FUNCTION_56
0x40032c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       461	peicode.h	FUNCTION_56
0x40032cb	          0x8b4028	            mov eax, dword [rax + 0x28] 	       461	peicode.h	FUNCTION_56
0x40032ce	            0x89c0	                            mov eax, eax	       461	peicode.h	FUNCTION_56
0x40032d0	        0x48c1e005	                              shl rax, 5	       461	peicode.h	FUNCTION_56
0x40032d4	          0x4801d0	                            add rax, rdx	       461	peicode.h	FUNCTION_56
0x40032d7	        0x488945f0	             mov qword [rbp - 0x10], rax	       461	peicode.h	FUNCTION_56
0x40032db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       462	peicode.h	FUNCTION_56
0x40032df	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	       462	peicode.h	FUNCTION_56
0x40032e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       462	peicode.h	FUNCTION_56
0x40032ea	          0x8b4028	            mov eax, dword [rax + 0x28] 	       462	peicode.h	FUNCTION_56
0x40032ed	            0x89c0	                            mov eax, eax	       462	peicode.h	FUNCTION_56
0x40032ef	        0x48c1e005	                              shl rax, 5	       462	peicode.h	FUNCTION_56
0x40032f3	          0x4801d0	                            add rax, rdx	       462	peicode.h	FUNCTION_56
0x40032f6	        0x488945f8	                mov qword [rbp - 8], rax	       462	peicode.h	FUNCTION_56
0x40032fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       464	peicode.h	FUNCTION_56
0x40032fe	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       464	peicode.h	FUNCTION_56
0x4003302	        0x48895008	                mov qword [rax + 8], rdx	       464	peicode.h	FUNCTION_56
0x4003306	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       465	peicode.h	FUNCTION_56
0x400330a	    0x48c740100000	               mov qword [rax + 0x10], 0	       465	peicode.h	FUNCTION_56
0x4003312	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       466	peicode.h	FUNCTION_56	CALL_1
0x4003316	          0x488b00	                    mov rax, qword [rax]	       466	peicode.h	FUNCTION_56	CALL_1
0x4003319	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       466	peicode.h	FUNCTION_56	CALL_1
0x400331c	            0x89d6	                            mov esi, edx	       466	peicode.h	FUNCTION_56	CALL_1
0x400331e	          0x4889c7	                            mov rdi, rax	       466	peicode.h	FUNCTION_56	CALL_1
0x4003321	      0xe800000000	                          call 0x4003326	       466	peicode.h	FUNCTION_56	CALL_1
0x4003326	          0x4889c2	                            mov rdx, rax	       466	peicode.h	FUNCTION_56	CALL_1
0x4003329	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       466	peicode.h	FUNCTION_56	CALL_1
0x400332d	        0x48895018	             mov qword [rax + 0x18], rdx	       466	peicode.h	FUNCTION_56	CALL_1
0x4003331	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       467	peicode.h	FUNCTION_56
0x4003335	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       467	peicode.h	FUNCTION_56
0x4003339	          0x488910	                    mov qword [rax], rdx	       467	peicode.h	FUNCTION_56
0x400333c	        0x488b45f8	                mov rax, qword [rbp - 8]	       469	peicode.h	FUNCTION_56
0x4003340	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       469	peicode.h	FUNCTION_56
0x4003344	          0x488910	                    mov qword [rax], rdx	       469	peicode.h	FUNCTION_56
0x4003347	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       470	peicode.h	FUNCTION_56
0x400334a	        0x488b45f8	                mov rax, qword [rbp - 8]	       470	peicode.h	FUNCTION_56
0x400334e	        0x48895008	                mov qword [rax + 8], rdx	       470	peicode.h	FUNCTION_56
0x4003352	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       471	peicode.h	FUNCTION_56
0x4003356	        0x488b4018	            mov rax, qword [rax + 0x18] 	       471	peicode.h	FUNCTION_56
0x400335a	            0x8b00	                    mov eax, dword [rax]	       471	peicode.h	FUNCTION_56
0x400335c	            0x89c2	                            mov edx, eax	       471	peicode.h	FUNCTION_56
0x400335e	        0x488b45f8	                mov rax, qword [rbp - 8]	       471	peicode.h	FUNCTION_56
0x4003362	        0x66895010	               mov word [rax + 0x10], dx	       471	peicode.h	FUNCTION_56
0x4003366	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       473	peicode.h	FUNCTION_56
0x400336a	          0x8b4028	            mov eax, dword [rax + 0x28] 	       473	peicode.h	FUNCTION_56
0x400336d	          0x8d5001	                      lea edx, [rax + 1]	       473	peicode.h	FUNCTION_56
0x4003370	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       473	peicode.h	FUNCTION_56
0x4003374	          0x895028	             mov dword [rax + 0x28], edx	       473	peicode.h	FUNCTION_56
0x4003377	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	peicode.h	FUNCTION_56	CALL_2
0x400337b	          0x8b4028	            mov eax, dword [rax + 0x28] 	       475	peicode.h	FUNCTION_56	CALL_2
0x400337e	          0x83f808	                              cmp eax, 8	       475	peicode.h	FUNCTION_56	CALL_2
0x4003381	            0x760f	                           jbe 0x4003392	       475	peicode.h	FUNCTION_56	CALL_2
0x4003383	      0xbedb010000	                          mov esi, 0x1db	       475	peicode.h	FUNCTION_56	CALL_2
0x4003388	      0xbf00000000	                              mov edi, 0	       475	peicode.h	FUNCTION_56	CALL_2
0x400338d	      0xe800000000	                          call 0x4003392	       475	peicode.h	FUNCTION_56	CALL_2
0x4003392	              0x90	                                     nop	       476	peicode.h	FUNCTION_56
0x4003393	              0xc9	                                   leave	       476	peicode.h	FUNCTION_56
0x4003394	              0xc3	                                     ret	       476	peicode.h	FUNCTION_56
coff_print_aux	FOR,0:functions,0:WHILE,0:ELSE,2:SWITCH,0:IF,3:CALL,13:DO,0	26
0x4006548	              0x55	                                push rbp	      2406	coffcode.h	FUNCTION_19
0x4006549	          0x4889e5	                            mov rbp, rsp	      2406	coffcode.h	FUNCTION_19
0x400654c	        0x4883ec30	                           sub rsp, 0x30	      2406	coffcode.h	FUNCTION_19
0x4006550	        0x48897df8	                mov qword [rbp - 8], rdi	      2406	coffcode.h	FUNCTION_19
0x4006554	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2406	coffcode.h	FUNCTION_19
0x4006558	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2406	coffcode.h	FUNCTION_19
0x400655c	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2406	coffcode.h	FUNCTION_19
0x4006560	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      2406	coffcode.h	FUNCTION_19
0x4006564	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	      2406	coffcode.h	FUNCTION_19
0x4006568	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2407	coffcode.h	FUNCTION_19	CALL_1
0x400656c	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2407	coffcode.h	FUNCTION_19	CALL_1
0x400656f	            0x85c0	                           test eax, eax	      2407	coffcode.h	FUNCTION_19	CALL_1
0x4006571	            0x750f	                           jne 0x4006582	      2407	coffcode.h	FUNCTION_19	CALL_1
0x4006573	      0xbe67090000	                          mov esi, 0x967	      2407	coffcode.h	FUNCTION_19	CALL_1
0x4006578	      0xbf00000000	                              mov edi, 0	      2407	coffcode.h	FUNCTION_19	CALL_1
0x400657d	      0xe800000000	                          call 0x4006582	      2407	coffcode.h	FUNCTION_19	CALL_1
0x4006582	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2408	coffcode.h	FUNCTION_19	CALL_2
0x4006586	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2408	coffcode.h	FUNCTION_19	CALL_2
0x4006589	            0x85c0	                           test eax, eax	      2408	coffcode.h	FUNCTION_19	CALL_2
0x400658b	            0x740f	                            je 0x400659c	      2408	coffcode.h	FUNCTION_19	CALL_2
0x400658d	      0xbe68090000	                          mov esi, 0x968	      2408	coffcode.h	FUNCTION_19	CALL_2
0x4006592	      0xbf00000000	                              mov edi, 0	      2408	coffcode.h	FUNCTION_19	CALL_2
0x4006597	      0xe800000000	                          call 0x400659c	      2408	coffcode.h	FUNCTION_19	CALL_2
0x400659c	      0xb800000000	                              mov eax, 0	      2445	coffcode.h	FUNCTION_19
0x40065a1	              0xc9	                                   leave	      2446	coffcode.h	FUNCTION_19
0x40065a2	              0xc3	                                     ret	      2446	coffcode.h	FUNCTION_19
coff_canonicalize_reloc	FOR,2:functions,0:WHILE,0:ELSE,1:SWITCH,0:IF,2:CALL,1:DO,0	70
0x400a108	              0x55	                                push rbp	      5096	coffcode.h	FUNCTION_37
0x400a109	          0x4889e5	                            mov rbp, rsp	      5096	coffcode.h	FUNCTION_37
0x400a10c	        0x4883ec40	                           sub rsp, 0x40	      5096	coffcode.h	FUNCTION_37
0x400a110	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5096	coffcode.h	FUNCTION_37
0x400a114	        0x488975d0	             mov qword [rbp - 0x30], rsi	      5096	coffcode.h	FUNCTION_37
0x400a118	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5096	coffcode.h	FUNCTION_37
0x400a11c	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      5096	coffcode.h	FUNCTION_37
0x400a120	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5097	coffcode.h	FUNCTION_37
0x400a124	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5097	coffcode.h	FUNCTION_37
0x400a128	        0x488945f0	             mov qword [rbp - 0x10], rax	      5097	coffcode.h	FUNCTION_37
0x400a12c	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5098	coffcode.h	FUNCTION_37
0x400a133	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5100	coffcode.h	FUNCTION_37	IF_1
0x400a137	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5100	coffcode.h	FUNCTION_37	IF_1
0x400a13a	      0x2580000000	                           and eax, 0x80	      5100	coffcode.h	FUNCTION_37	IF_1
0x400a13f	            0x85c0	                           test eax, eax	      5100	coffcode.h	FUNCTION_37	IF_1
0x400a141	            0x744c	                            je 0x400a18f	      5100	coffcode.h	FUNCTION_37	IF_1
0x400a143	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5105	coffcode.h	FUNCTION_37	IF_1
0x400a147	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      5105	coffcode.h	FUNCTION_37	IF_1
0x400a14e	        0x488945f8	                mov qword [rbp - 8], rax	      5105	coffcode.h	FUNCTION_37	IF_1
0x400a152	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a159	            0xeb23	                           jmp 0x400a17e	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a15b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5109	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a15f	        0x488d5008	                      lea rdx, [rax + 8]	      5109	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a163	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5109	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a167	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5109	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a16b	          0x488910	                    mov qword [rax], rdx	      5109	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a16e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5110	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a172	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5110	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a176	        0x488945f8	                mov qword [rbp - 8], rax	      5110	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a17a	        0x8345ec01	               add dword [rbp - 0x14], 1	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a17e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a182	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a188	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a18b	            0x77ce	                            ja 0x400a15b	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a18d	            0xeb64	                           jmp 0x400a1f3	      5107	coffcode.h	FUNCTION_37	IF_1	FOR_1
0x400a18f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a193	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a19b	          0x4889ce	                            mov rsi, rcx	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a19e	          0x4889c7	                            mov rdi, rax	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a1a1	      0xe847faffff	         call sym.coff_slurp_reloc_table	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a1a6	            0x85c0	                           test eax, eax	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a1a8	            0x7509	                           jne 0x400a1b3	      5115	coffcode.h	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x400a1aa	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      5116	coffcode.h	FUNCTION_37	ELSE_1	IF_2
0x400a1b1	            0xeb57	                           jmp 0x400a20a	      5116	coffcode.h	FUNCTION_37	ELSE_1	IF_2
0x400a1b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5118	coffcode.h	FUNCTION_37	ELSE_1
0x400a1b7	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5118	coffcode.h	FUNCTION_37	ELSE_1
0x400a1bb	        0x488945f0	             mov qword [rbp - 0x10], rax	      5118	coffcode.h	FUNCTION_37	ELSE_1
0x400a1bf	            0xeb1b	                           jmp 0x400a1dc	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5121	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1c5	        0x488d5008	                      lea rdx, [rax + 8]	      5121	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1c9	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5121	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1cd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5121	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1d1	        0x488d4a20	                   lea rcx, [rdx + 0x20]	      5121	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1d5	        0x48894df0	             mov qword [rbp - 0x10], rcx	      5121	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1d9	          0x488910	                    mov qword [rax], rdx	      5121	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1dc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1df	          0x8d5001	                      lea edx, [rax + 1]	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1e2	          0x8955ec	             mov dword [rbp - 0x14], edx	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1e5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1e9	    0x8b9288000000	            mov edx, dword [rdx + 0x88] 	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1ef	            0x39d0	                            cmp eax, edx	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1f1	            0x72ce	                            jb 0x400a1c1	      5120	coffcode.h	FUNCTION_37	ELSE_1	FOR_2
0x400a1f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5123	coffcode.h	FUNCTION_37
0x400a1f7	    0x48c700000000	                      mov qword [rax], 0	      5123	coffcode.h	FUNCTION_37
0x400a1fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5124	coffcode.h	FUNCTION_37
0x400a202	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      5124	coffcode.h	FUNCTION_37
0x400a208	            0x89c0	                            mov eax, eax	      5124	coffcode.h	FUNCTION_37
0x400a20a	              0xc9	                                   leave	      5125	coffcode.h	FUNCTION_37
0x400a20b	              0xc3	                                     ret	      5125	coffcode.h	FUNCTION_37
