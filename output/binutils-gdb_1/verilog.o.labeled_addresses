verilog_write_object_contents	functions,0:WHILE,1:SWITCH,0:FOR,0:CALL,1:DO,0:ELSE,0:IF,1	29
0x400055d	              0x55	                                push rbp	       243	verilog.c	FUNCTION_6
0x400055e	          0x4889e5	                            mov rbp, rsp	       243	verilog.c	FUNCTION_6
0x4000561	        0x4883ec20	                           sub rsp, 0x20	       243	verilog.c	FUNCTION_6
0x4000565	        0x48897de8	             mov qword [rbp - 0x18], rdi	       243	verilog.c	FUNCTION_6
0x4000569	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       244	verilog.c	FUNCTION_6
0x400056d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       244	verilog.c	FUNCTION_6
0x4000574	        0x488945f8	                mov qword [rbp - 8], rax	       244	verilog.c	FUNCTION_6
0x4000578	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	verilog.c	FUNCTION_6
0x400057c	          0x488b00	                    mov rax, qword [rax]	       248	verilog.c	FUNCTION_6
0x400057f	        0x488945f0	             mov qword [rbp - 0x10], rax	       248	verilog.c	FUNCTION_6
0x4000583	            0xeb2d	                           jmp 0x40005b2	       250	verilog.c	FUNCTION_6	WHILE_1
0x4000585	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x4000589	        0x488b4df8	                mov rcx, qword [rbp - 8]	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x400058d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x4000591	          0x4889ce	                            mov rsi, rcx	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x4000594	          0x4889c7	                            mov rdi, rax	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x4000597	      0xe81affffff	          call sym.verilog_write_section	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x400059c	            0x85c0	                           test eax, eax	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x400059e	            0x7507	                           jne 0x40005a7	       252	verilog.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40005a0	      0xb800000000	                              mov eax, 0	       253	verilog.c	FUNCTION_6	WHILE_1	IF_1
0x40005a5	            0xeb17	                           jmp 0x40005be	       253	verilog.c	FUNCTION_6	WHILE_1	IF_1
0x40005a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       254	verilog.c	FUNCTION_6	WHILE_1
0x40005ab	          0x488b00	                    mov rax, qword [rax]	       254	verilog.c	FUNCTION_6	WHILE_1
0x40005ae	        0x488945f0	             mov qword [rbp - 0x10], rax	       254	verilog.c	FUNCTION_6	WHILE_1
0x40005b2	      0x48837df000	               cmp qword [rbp - 0x10], 0	       250	verilog.c	FUNCTION_6	WHILE_1
0x40005b7	            0x75cc	                           jne 0x4000585	       250	verilog.c	FUNCTION_6	WHILE_1
0x40005b9	      0xb801000000	                              mov eax, 1	       256	verilog.c	FUNCTION_6
0x40005be	              0xc9	                                   leave	       257	verilog.c	FUNCTION_6
0x40005bf	              0xc3	                                     ret	       257	verilog.c	FUNCTION_6
verilog_write_record	functions,0:WHILE,0:SWITCH,0:FOR,1:CALL,1:DO,0:ELSE,0:IF,0	71
0x40003b0	              0x55	                                push rbp	       193	verilog.c	FUNCTION_4
0x40003b1	          0x4889e5	                            mov rbp, rsp	       193	verilog.c	FUNCTION_4
0x40003b4	        0x4883c480	             add rsp, 0xffffffffffffff80	       193	verilog.c	FUNCTION_4
0x40003b8	        0x48897d98	             mov qword [rbp - 0x68], rdi	       193	verilog.c	FUNCTION_4
0x40003bc	        0x48897590	             mov qword [rbp - 0x70], rsi	       193	verilog.c	FUNCTION_4
0x40003c0	        0x48895588	             mov qword [rbp - 0x78], rdx	       193	verilog.c	FUNCTION_4
0x40003c4	    0x64488b042528	                mov rax, qword fs:[0x28]	       193	verilog.c	FUNCTION_4
0x40003cd	        0x488945f8	                mov qword [rbp - 8], rax	       193	verilog.c	FUNCTION_4
0x40003d1	            0x31c0	                            xor eax, eax	       193	verilog.c	FUNCTION_4
0x40003d3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       195	verilog.c	FUNCTION_4
0x40003d7	        0x488945a8	             mov qword [rbp - 0x58], rax	       195	verilog.c	FUNCTION_4
0x40003db	        0x488d45c0	                   lea rax, [rbp - 0x40]	       196	verilog.c	FUNCTION_4
0x40003df	        0x488945b0	             mov qword [rbp - 0x50], rax	       196	verilog.c	FUNCTION_4
0x40003e3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       200	verilog.c	FUNCTION_4	FOR_1
0x40003e7	        0x488945a8	             mov qword [rbp - 0x58], rax	       200	verilog.c	FUNCTION_4	FOR_1
0x40003eb	            0xeb58	                           jmp 0x4000445	       200	verilog.c	FUNCTION_4	FOR_1
0x40003ed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       202	verilog.c	FUNCTION_4	FOR_1
0x40003f1	        0x488d5001	                      lea rdx, [rax + 1]	       202	verilog.c	FUNCTION_4	FOR_1
0x40003f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       202	verilog.c	FUNCTION_4	FOR_1
0x40003f9	           0xfb600	                   movzx eax, byte [rax]	       202	verilog.c	FUNCTION_4	FOR_1
0x40003fc	           0xfb6c0	                           movzx eax, al	       202	verilog.c	FUNCTION_4	FOR_1
0x40003ff	          0x83e00f	                            and eax, 0xf	       202	verilog.c	FUNCTION_4	FOR_1
0x4000402	            0x4898	                                    cdqe	       202	verilog.c	FUNCTION_4	FOR_1
0x4000404	     0xfb680000000	                   movzx eax, byte [rax]	       202	verilog.c	FUNCTION_4	FOR_1
0x400040b	            0x8802	                      mov byte [rdx], al	       202	verilog.c	FUNCTION_4	FOR_1
0x400040d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       202	verilog.c	FUNCTION_4	FOR_1
0x4000411	           0xfb600	                   movzx eax, byte [rax]	       202	verilog.c	FUNCTION_4	FOR_1
0x4000414	          0xc0e804	                               shr al, 4	       202	verilog.c	FUNCTION_4	FOR_1
0x4000417	           0xfb6c0	                           movzx eax, al	       202	verilog.c	FUNCTION_4	FOR_1
0x400041a	          0x83e00f	                            and eax, 0xf	       202	verilog.c	FUNCTION_4	FOR_1
0x400041d	            0x4898	                                    cdqe	       202	verilog.c	FUNCTION_4	FOR_1
0x400041f	     0xfb690000000	                   movzx edx, byte [rax]	       202	verilog.c	FUNCTION_4	FOR_1
0x4000426	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       202	verilog.c	FUNCTION_4	FOR_1
0x400042a	            0x8810	                      mov byte [rax], dl	       202	verilog.c	FUNCTION_4	FOR_1
0x400042c	      0x488345b002	               add qword [rbp - 0x50], 2	       203	verilog.c	FUNCTION_4	FOR_1
0x4000431	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       204	verilog.c	FUNCTION_4	FOR_1
0x4000435	        0x488d5001	                      lea rdx, [rax + 1]	       204	verilog.c	FUNCTION_4	FOR_1
0x4000439	        0x488955b0	             mov qword [rbp - 0x50], rdx	       204	verilog.c	FUNCTION_4	FOR_1
0x400043d	          0xc60020	                    mov byte [rax], 0x20	       204	verilog.c	FUNCTION_4	FOR_1
0x4000440	      0x488345a801	               add qword [rbp - 0x58], 1	       200	verilog.c	FUNCTION_4	FOR_1
0x4000445	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       200	verilog.c	FUNCTION_4	FOR_1
0x4000449	        0x483b4588	             cmp rax, qword [rbp - 0x78]	       200	verilog.c	FUNCTION_4	FOR_1
0x400044d	            0x729e	                            jb 0x40003ed	       200	verilog.c	FUNCTION_4	FOR_1
0x400044f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	verilog.c	FUNCTION_4
0x4000453	        0x488d5001	                      lea rdx, [rax + 1]	       206	verilog.c	FUNCTION_4
0x4000457	        0x488955b0	             mov qword [rbp - 0x50], rdx	       206	verilog.c	FUNCTION_4
0x400045b	          0xc6000d	                     mov byte [rax], 0xd	       206	verilog.c	FUNCTION_4
0x400045e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       207	verilog.c	FUNCTION_4
0x4000462	        0x488d5001	                      lea rdx, [rax + 1]	       207	verilog.c	FUNCTION_4
0x4000466	        0x488955b0	             mov qword [rbp - 0x50], rdx	       207	verilog.c	FUNCTION_4
0x400046a	          0xc6000a	                     mov byte [rax], 0xa	       207	verilog.c	FUNCTION_4
0x400046d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       208	verilog.c	FUNCTION_4
0x4000471	        0x488d45c0	                   lea rax, [rbp - 0x40]	       208	verilog.c	FUNCTION_4
0x4000475	          0x4829c2	                            sub rdx, rax	       208	verilog.c	FUNCTION_4
0x4000478	          0x4889d0	                            mov rax, rdx	       208	verilog.c	FUNCTION_4
0x400047b	        0x488945b8	             mov qword [rbp - 0x48], rax	       208	verilog.c	FUNCTION_4
0x400047f	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       210	verilog.c	FUNCTION_4	CALL_1
0x4000483	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       210	verilog.c	FUNCTION_4	CALL_1
0x4000487	        0x488d45c0	                   lea rax, [rbp - 0x40]	       210	verilog.c	FUNCTION_4	CALL_1
0x400048b	          0x4889ce	                            mov rsi, rcx	       210	verilog.c	FUNCTION_4	CALL_1
0x400048e	          0x4889c7	                            mov rdi, rax	       210	verilog.c	FUNCTION_4	CALL_1
0x4000491	      0xe800000000	                          call 0x4000496	       210	verilog.c	FUNCTION_4	CALL_1
0x4000496	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       210	verilog.c	FUNCTION_4	CALL_1
0x400049a	           0xf94c0	                                 sete al	       210	verilog.c	FUNCTION_4	CALL_1
0x400049d	           0xfb6c0	                           movzx eax, al	       210	verilog.c	FUNCTION_4	CALL_1
0x40004a0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       211	verilog.c	FUNCTION_4
0x40004a4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       211	verilog.c	FUNCTION_4
0x40004ad	            0x7405	                            je 0x40004b4	       211	verilog.c	FUNCTION_4
0x40004af	      0xe800000000	                          call 0x40004b4	       211	verilog.c	FUNCTION_4
0x40004b4	              0xc9	                                   leave	       211	verilog.c	FUNCTION_4
0x40004b5	              0xc3	                                     ret	       211	verilog.c	FUNCTION_4
verilog_set_arch_mach	functions,0:WHILE,0:SWITCH,0:FOR,0:CALL,1:DO,0:ELSE,0:IF,1	20
0x4000040	              0x55	                                push rbp	        96	verilog.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        96	verilog.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        96	verilog.c	FUNCTION_1
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	        96	verilog.c	FUNCTION_1
0x400004c	          0x8975f4	              mov dword [rbp - 0xc], esi	        96	verilog.c	FUNCTION_1
0x400004f	        0x488955e8	             mov qword [rbp - 0x18], rdx	        96	verilog.c	FUNCTION_1
0x4000053	        0x837df400	                cmp dword [rbp - 0xc], 0	        97	verilog.c	FUNCTION_1	IF_1
0x4000057	            0x7417	                            je 0x4000070	        97	verilog.c	FUNCTION_1	IF_1
0x4000059	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        98	verilog.c	FUNCTION_1	CALL_1
0x400005d	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        98	verilog.c	FUNCTION_1	CALL_1
0x4000060	        0x488b45f8	                mov rax, qword [rbp - 8]	        98	verilog.c	FUNCTION_1	CALL_1
0x4000064	            0x89ce	                            mov esi, ecx	        98	verilog.c	FUNCTION_1	CALL_1
0x4000066	          0x4889c7	                            mov rdi, rax	        98	verilog.c	FUNCTION_1	CALL_1
0x4000069	      0xe800000000	                          call 0x400006e	        98	verilog.c	FUNCTION_1	CALL_1
0x400006e	            0xeb14	                           jmp 0x4000084	        98	verilog.c	FUNCTION_1	CALL_1
0x4000070	        0x488b45f8	                mov rax, qword [rbp - 8]	       100	verilog.c	FUNCTION_1
0x4000074	    0x48c780c00000	               mov qword [rax + 0xc0], 0	       100	verilog.c	FUNCTION_1
0x400007f	      0xb801000000	                              mov eax, 1	       101	verilog.c	FUNCTION_1
0x4000084	              0xc9	                                   leave	       102	verilog.c	FUNCTION_1
0x4000085	              0xc3	                                     ret	       102	verilog.c	FUNCTION_1
verilog_write_address	functions,0:WHILE,0:SWITCH,0:FOR,0:CALL,1:DO,0:ELSE,0:IF,0	97
0x4000233	              0x55	                                push rbp	       163	verilog.c	FUNCTION_3
0x4000234	          0x4889e5	                            mov rbp, rsp	       163	verilog.c	FUNCTION_3
0x4000237	        0x4883ec40	                           sub rsp, 0x40	       163	verilog.c	FUNCTION_3
0x400023b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       163	verilog.c	FUNCTION_3
0x400023f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       163	verilog.c	FUNCTION_3
0x4000243	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	verilog.c	FUNCTION_3
0x400024c	        0x488945f8	                mov qword [rbp - 8], rax	       163	verilog.c	FUNCTION_3
0x4000250	            0x31c0	                            xor eax, eax	       163	verilog.c	FUNCTION_3
0x4000252	        0x488d45e0	                   lea rax, [rbp - 0x20]	       165	verilog.c	FUNCTION_3
0x4000256	        0x488945d0	             mov qword [rbp - 0x30], rax	       165	verilog.c	FUNCTION_3
0x400025a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       169	verilog.c	FUNCTION_3
0x400025e	        0x488d5001	                      lea rdx, [rax + 1]	       169	verilog.c	FUNCTION_3
0x4000262	        0x488955d0	             mov qword [rbp - 0x30], rdx	       169	verilog.c	FUNCTION_3
0x4000266	          0xc60040	                    mov byte [rax], 0x40	       169	verilog.c	FUNCTION_3
0x4000269	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       170	verilog.c	FUNCTION_3
0x400026d	        0x488d5001	                      lea rdx, [rax + 1]	       170	verilog.c	FUNCTION_3
0x4000271	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       170	verilog.c	FUNCTION_3
0x4000275	        0x48c1e818	                           shr rax, 0x18	       170	verilog.c	FUNCTION_3
0x4000279	          0x83e00f	                            and eax, 0xf	       170	verilog.c	FUNCTION_3
0x400027c	     0xfb680000000	                   movzx eax, byte [rax]	       170	verilog.c	FUNCTION_3
0x4000283	            0x8802	                      mov byte [rdx], al	       170	verilog.c	FUNCTION_3
0x4000285	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       170	verilog.c	FUNCTION_3
0x4000289	        0x48c1e81c	                           shr rax, 0x1c	       170	verilog.c	FUNCTION_3
0x400028d	          0x83e00f	                            and eax, 0xf	       170	verilog.c	FUNCTION_3
0x4000290	     0xfb690000000	                   movzx edx, byte [rax]	       170	verilog.c	FUNCTION_3
0x4000297	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       170	verilog.c	FUNCTION_3
0x400029b	            0x8810	                      mov byte [rax], dl	       170	verilog.c	FUNCTION_3
0x400029d	      0x488345d002	               add qword [rbp - 0x30], 2	       171	verilog.c	FUNCTION_3
0x40002a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	verilog.c	FUNCTION_3
0x40002a6	        0x488d5001	                      lea rdx, [rax + 1]	       172	verilog.c	FUNCTION_3
0x40002aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       172	verilog.c	FUNCTION_3
0x40002ae	        0x48c1e810	                           shr rax, 0x10	       172	verilog.c	FUNCTION_3
0x40002b2	          0x83e00f	                            and eax, 0xf	       172	verilog.c	FUNCTION_3
0x40002b5	     0xfb680000000	                   movzx eax, byte [rax]	       172	verilog.c	FUNCTION_3
0x40002bc	            0x8802	                      mov byte [rdx], al	       172	verilog.c	FUNCTION_3
0x40002be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       172	verilog.c	FUNCTION_3
0x40002c2	        0x48c1e814	                           shr rax, 0x14	       172	verilog.c	FUNCTION_3
0x40002c6	          0x83e00f	                            and eax, 0xf	       172	verilog.c	FUNCTION_3
0x40002c9	     0xfb690000000	                   movzx edx, byte [rax]	       172	verilog.c	FUNCTION_3
0x40002d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	verilog.c	FUNCTION_3
0x40002d4	            0x8810	                      mov byte [rax], dl	       172	verilog.c	FUNCTION_3
0x40002d6	      0x488345d002	               add qword [rbp - 0x30], 2	       173	verilog.c	FUNCTION_3
0x40002db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	verilog.c	FUNCTION_3
0x40002df	        0x488d5001	                      lea rdx, [rax + 1]	       174	verilog.c	FUNCTION_3
0x40002e3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       174	verilog.c	FUNCTION_3
0x40002e7	        0x48c1e808	                              shr rax, 8	       174	verilog.c	FUNCTION_3
0x40002eb	          0x83e00f	                            and eax, 0xf	       174	verilog.c	FUNCTION_3
0x40002ee	     0xfb680000000	                   movzx eax, byte [rax]	       174	verilog.c	FUNCTION_3
0x40002f5	            0x8802	                      mov byte [rdx], al	       174	verilog.c	FUNCTION_3
0x40002f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       174	verilog.c	FUNCTION_3
0x40002fb	        0x48c1e80c	                            shr rax, 0xc	       174	verilog.c	FUNCTION_3
0x40002ff	          0x83e00f	                            and eax, 0xf	       174	verilog.c	FUNCTION_3
0x4000302	     0xfb690000000	                   movzx edx, byte [rax]	       174	verilog.c	FUNCTION_3
0x4000309	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	verilog.c	FUNCTION_3
0x400030d	            0x8810	                      mov byte [rax], dl	       174	verilog.c	FUNCTION_3
0x400030f	      0x488345d002	               add qword [rbp - 0x30], 2	       175	verilog.c	FUNCTION_3
0x4000314	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       176	verilog.c	FUNCTION_3
0x4000318	        0x488d5001	                      lea rdx, [rax + 1]	       176	verilog.c	FUNCTION_3
0x400031c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       176	verilog.c	FUNCTION_3
0x4000320	          0x83e00f	                            and eax, 0xf	       176	verilog.c	FUNCTION_3
0x4000323	     0xfb680000000	                   movzx eax, byte [rax]	       176	verilog.c	FUNCTION_3
0x400032a	            0x8802	                      mov byte [rdx], al	       176	verilog.c	FUNCTION_3
0x400032c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       176	verilog.c	FUNCTION_3
0x4000330	        0x48c1e804	                              shr rax, 4	       176	verilog.c	FUNCTION_3
0x4000334	          0x83e00f	                            and eax, 0xf	       176	verilog.c	FUNCTION_3
0x4000337	     0xfb690000000	                   movzx edx, byte [rax]	       176	verilog.c	FUNCTION_3
0x400033e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       176	verilog.c	FUNCTION_3
0x4000342	            0x8810	                      mov byte [rax], dl	       176	verilog.c	FUNCTION_3
0x4000344	      0x488345d002	               add qword [rbp - 0x30], 2	       177	verilog.c	FUNCTION_3
0x4000349	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       178	verilog.c	FUNCTION_3
0x400034d	        0x488d5001	                      lea rdx, [rax + 1]	       178	verilog.c	FUNCTION_3
0x4000351	        0x488955d0	             mov qword [rbp - 0x30], rdx	       178	verilog.c	FUNCTION_3
0x4000355	          0xc6000d	                     mov byte [rax], 0xd	       178	verilog.c	FUNCTION_3
0x4000358	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       179	verilog.c	FUNCTION_3
0x400035c	        0x488d5001	                      lea rdx, [rax + 1]	       179	verilog.c	FUNCTION_3
0x4000360	        0x488955d0	             mov qword [rbp - 0x30], rdx	       179	verilog.c	FUNCTION_3
0x4000364	          0xc6000a	                     mov byte [rax], 0xa	       179	verilog.c	FUNCTION_3
0x4000367	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       180	verilog.c	FUNCTION_3
0x400036b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       180	verilog.c	FUNCTION_3
0x400036f	          0x4829c2	                            sub rdx, rax	       180	verilog.c	FUNCTION_3
0x4000372	          0x4889d0	                            mov rax, rdx	       180	verilog.c	FUNCTION_3
0x4000375	        0x488945d8	             mov qword [rbp - 0x28], rax	       180	verilog.c	FUNCTION_3
0x4000379	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       182	verilog.c	FUNCTION_3	CALL_1
0x400037d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       182	verilog.c	FUNCTION_3	CALL_1
0x4000381	        0x488d45e0	                   lea rax, [rbp - 0x20]	       182	verilog.c	FUNCTION_3	CALL_1
0x4000385	          0x4889ce	                            mov rsi, rcx	       182	verilog.c	FUNCTION_3	CALL_1
0x4000388	          0x4889c7	                            mov rdi, rax	       182	verilog.c	FUNCTION_3	CALL_1
0x400038b	      0xe800000000	                          call 0x4000390	       182	verilog.c	FUNCTION_3	CALL_1
0x4000390	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       182	verilog.c	FUNCTION_3	CALL_1
0x4000394	           0xf94c0	                                 sete al	       182	verilog.c	FUNCTION_3	CALL_1
0x4000397	           0xfb6c0	                           movzx eax, al	       182	verilog.c	FUNCTION_3	CALL_1
0x400039a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       183	verilog.c	FUNCTION_3
0x400039e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       183	verilog.c	FUNCTION_3
0x40003a7	            0x7405	                            je 0x40003ae	       183	verilog.c	FUNCTION_3
0x40003a9	      0xe800000000	                          call 0x40003ae	       183	verilog.c	FUNCTION_3
0x40003ae	              0xc9	                                   leave	       183	verilog.c	FUNCTION_3
0x40003af	              0xc3	                                     ret	       183	verilog.c	FUNCTION_3
verilog_init	functions,0:WHILE,0:SWITCH,0:FOR,0:CALL,1:DO,0:ELSE,0:IF,1	10
0x40005c0	              0x55	                                push rbp	       263	verilog.c	FUNCTION_7
0x40005c1	          0x4889e5	                            mov rbp, rsp	       263	verilog.c	FUNCTION_7
0x40005c4	    0x8b0500000000	            mov eax, dword [0x040005ca] 	       266	verilog.c	FUNCTION_7	IF_1
0x40005ca	            0x85c0	                           test eax, eax	       266	verilog.c	FUNCTION_7	IF_1
0x40005cc	            0x750f	                           jne 0x40005dd	       266	verilog.c	FUNCTION_7	IF_1
0x40005ce	    0xc70500000000	               mov dword [0x040005d8], 1	       268	verilog.c	FUNCTION_7	IF_1
0x40005d8	      0xe800000000	                          call 0x40005dd	       269	verilog.c	FUNCTION_7	IF_1	CALL_1
0x40005dd	              0x90	                                     nop	       271	verilog.c	FUNCTION_7
0x40005de	              0x5d	                                 pop rbp	       271	verilog.c	FUNCTION_7
0x40005df	              0xc3	                                     ret	       271	verilog.c	FUNCTION_7
verilog_write_section	functions,0:WHILE,1:SWITCH,0:FOR,0:CALL,2:DO,0:ELSE,0:IF,2	48
0x40004b6	              0x55	                                push rbp	       217	verilog.c	FUNCTION_5
0x40004b7	          0x4889e5	                            mov rbp, rsp	       217	verilog.c	FUNCTION_5
0x40004ba	        0x4883ec30	                           sub rsp, 0x30	       217	verilog.c	FUNCTION_5
0x40004be	        0x48897de8	             mov qword [rbp - 0x18], rdi	       217	verilog.c	FUNCTION_5
0x40004c2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       217	verilog.c	FUNCTION_5
0x40004c6	        0x488955d8	             mov qword [rbp - 0x28], rdx	       217	verilog.c	FUNCTION_5
0x40004ca	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       218	verilog.c	FUNCTION_5
0x40004d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       219	verilog.c	FUNCTION_5
0x40004d5	        0x488b4008	                mov rax, qword [rax + 8]	       219	verilog.c	FUNCTION_5
0x40004d9	        0x488945f8	                mov qword [rbp - 8], rax	       219	verilog.c	FUNCTION_5
0x40004dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       221	verilog.c	FUNCTION_5	CALL_1
0x40004e1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       221	verilog.c	FUNCTION_5	CALL_1
0x40004e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       221	verilog.c	FUNCTION_5	CALL_1
0x40004e9	          0x4889d6	                            mov rsi, rdx	       221	verilog.c	FUNCTION_5	CALL_1
0x40004ec	          0x4889c7	                            mov rdi, rax	       221	verilog.c	FUNCTION_5	CALL_1
0x40004ef	      0xe83ffdffff	          call sym.verilog_write_address	       221	verilog.c	FUNCTION_5	CALL_1
0x40004f4	            0xeb50	                           jmp 0x4000546	       222	verilog.c	FUNCTION_5	WHILE_1
0x40004f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       224	verilog.c	FUNCTION_5	WHILE_1
0x40004fa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       224	verilog.c	FUNCTION_5	WHILE_1
0x40004fe	          0x2b45f0	             sub eax, dword [rbp - 0x10]	       224	verilog.c	FUNCTION_5	WHILE_1
0x4000501	          0x8945f4	              mov dword [rbp - 0xc], eax	       224	verilog.c	FUNCTION_5	WHILE_1
0x4000504	        0x837df410	            cmp dword [rbp - 0xc], 0x10 	       226	verilog.c	FUNCTION_5	WHILE_1	IF_1
0x4000508	            0x7607	                           jbe 0x4000511	       226	verilog.c	FUNCTION_5	WHILE_1	IF_1
0x400050a	    0xc745f4100000	            mov dword [rbp - 0xc], 0x10 	       227	verilog.c	FUNCTION_5	WHILE_1	IF_1
0x4000511	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x4000514	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x4000518	          0x4801c2	                            add rdx, rax	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x400051b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x400051f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x4000523	          0x4889ce	                            mov rsi, rcx	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x4000526	          0x4889c7	                            mov rdi, rax	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x4000529	      0xe882feffff	           call sym.verilog_write_record	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x400052e	            0x85c0	                           test eax, eax	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x4000530	            0x7507	                           jne 0x4000539	       229	verilog.c	FUNCTION_5	WHILE_1	IF_2	CALL_2
0x4000532	      0xb800000000	                              mov eax, 0	       232	verilog.c	FUNCTION_5	WHILE_1	IF_2
0x4000537	            0xeb22	                           jmp 0x400055b	       232	verilog.c	FUNCTION_5	WHILE_1	IF_2
0x4000539	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       234	verilog.c	FUNCTION_5	WHILE_1
0x400053c	           0x145f0	             add dword [rbp - 0x10], eax	       234	verilog.c	FUNCTION_5	WHILE_1
0x400053f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       235	verilog.c	FUNCTION_5	WHILE_1
0x4000542	        0x480145f8	                add qword [rbp - 8], rax	       235	verilog.c	FUNCTION_5	WHILE_1
0x4000546	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       222	verilog.c	FUNCTION_5	WHILE_1
0x4000549	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       222	verilog.c	FUNCTION_5	WHILE_1
0x400054d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       222	verilog.c	FUNCTION_5	WHILE_1
0x4000551	          0x4839c2	                            cmp rdx, rax	       222	verilog.c	FUNCTION_5	WHILE_1
0x4000554	            0x72a0	                            jb 0x40004f6	       222	verilog.c	FUNCTION_5	WHILE_1
0x4000556	      0xb801000000	                              mov eax, 1	       238	verilog.c	FUNCTION_5
0x400055b	              0xc9	                                   leave	       239	verilog.c	FUNCTION_5
0x400055c	              0xc3	                                     ret	       239	verilog.c	FUNCTION_5
verilog_set_section_contents	functions,0:WHILE,0:SWITCH,0:FOR,1:CALL,3:DO,0:ELSE,1:IF,5	115
0x4000086	              0x55	                                push rbp	       112	verilog.c	FUNCTION_2
0x4000087	          0x4889e5	                            mov rbp, rsp	       112	verilog.c	FUNCTION_2
0x400008a	        0x4883ec50	                           sub rsp, 0x50	       112	verilog.c	FUNCTION_2
0x400008e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       112	verilog.c	FUNCTION_2
0x4000092	        0x488975d0	             mov qword [rbp - 0x30], rsi	       112	verilog.c	FUNCTION_2
0x4000096	        0x488955c8	             mov qword [rbp - 0x38], rdx	       112	verilog.c	FUNCTION_2
0x400009a	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       112	verilog.c	FUNCTION_2
0x400009e	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       112	verilog.c	FUNCTION_2
0x40000a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       113	verilog.c	FUNCTION_2
0x40000a6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       113	verilog.c	FUNCTION_2
0x40000ad	        0x488945e8	             mov qword [rbp - 0x18], rax	       113	verilog.c	FUNCTION_2
0x40000b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       116	verilog.c	FUNCTION_2	CALL_1
0x40000b5	      0xbe20000000	                           mov esi, 0x20	       116	verilog.c	FUNCTION_2	CALL_1
0x40000ba	          0x4889c7	                            mov rdi, rax	       116	verilog.c	FUNCTION_2	CALL_1
0x40000bd	      0xe800000000	                          call 0x40000c2	       116	verilog.c	FUNCTION_2	CALL_1
0x40000c2	        0x488945f0	             mov qword [rbp - 0x10], rax	       116	verilog.c	FUNCTION_2	CALL_1
0x40000c6	      0x48837df000	               cmp qword [rbp - 0x10], 0	       117	verilog.c	FUNCTION_2	IF_1
0x40000cb	            0x750a	                           jne 0x40000d7	       117	verilog.c	FUNCTION_2	IF_1
0x40000cd	      0xb800000000	                              mov eax, 0	       118	verilog.c	FUNCTION_2	IF_1
0x40000d2	      0xe95a010000	                           jmp 0x4000231	       118	verilog.c	FUNCTION_2	IF_1
0x40000d7	      0x48837db800	               cmp qword [rbp - 0x48], 0	       120	verilog.c	FUNCTION_2	IF_2
0x40000dc	     0xf844a010000	                            je 0x400022c	       120	verilog.c	FUNCTION_2	IF_2
0x40000e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       121	verilog.c	FUNCTION_2	IF_2
0x40000e6	          0x8b4020	            mov eax, dword [rax + 0x20] 	       121	verilog.c	FUNCTION_2	IF_2
0x40000e9	          0x83e001	                              and eax, 1	       121	verilog.c	FUNCTION_2	IF_2
0x40000ec	            0x85c0	                           test eax, eax	       121	verilog.c	FUNCTION_2	IF_2
0x40000ee	     0xf8438010000	                            je 0x400022c	       121	verilog.c	FUNCTION_2	IF_2
0x40000f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       122	verilog.c	FUNCTION_2	IF_2
0x40000f8	          0x8b4020	            mov eax, dword [rax + 0x20] 	       122	verilog.c	FUNCTION_2	IF_2
0x40000fb	          0x83e002	                              and eax, 2	       122	verilog.c	FUNCTION_2	IF_2
0x40000fe	            0x85c0	                           test eax, eax	       122	verilog.c	FUNCTION_2	IF_2
0x4000100	     0xf8426010000	                            je 0x400022c	       122	verilog.c	FUNCTION_2	IF_2
0x4000106	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       126	verilog.c	FUNCTION_2	IF_2	CALL_2
0x400010a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       126	verilog.c	FUNCTION_2	IF_2	CALL_2
0x400010e	          0x4889d6	                            mov rsi, rdx	       126	verilog.c	FUNCTION_2	IF_2	CALL_2
0x4000111	          0x4889c7	                            mov rdi, rax	       126	verilog.c	FUNCTION_2	IF_2	CALL_2
0x4000114	      0xe800000000	                          call 0x4000119	       126	verilog.c	FUNCTION_2	IF_2	CALL_2
0x4000119	        0x488945f8	                mov qword [rbp - 8], rax	       126	verilog.c	FUNCTION_2	IF_2	CALL_2
0x400011d	      0x48837df800	                  cmp qword [rbp - 8], 0	       127	verilog.c	FUNCTION_2	IF_2	IF_3
0x4000122	            0x750a	                           jne 0x400012e	       127	verilog.c	FUNCTION_2	IF_2	IF_3
0x4000124	      0xb800000000	                              mov eax, 0	       128	verilog.c	FUNCTION_2	IF_2	IF_3
0x4000129	      0xe903010000	                           jmp 0x4000231	       128	verilog.c	FUNCTION_2	IF_2	IF_3
0x400012e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       129	verilog.c	FUNCTION_2	IF_2	CALL_3
0x4000132	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       129	verilog.c	FUNCTION_2	IF_2	CALL_3
0x4000136	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	verilog.c	FUNCTION_2	IF_2	CALL_3
0x400013a	          0x4889ce	                            mov rsi, rcx	       129	verilog.c	FUNCTION_2	IF_2	CALL_3
0x400013d	          0x4889c7	                            mov rdi, rax	       129	verilog.c	FUNCTION_2	IF_2	CALL_3
0x4000140	      0xe800000000	                          call 0x4000145	       129	verilog.c	FUNCTION_2	IF_2	CALL_3
0x4000145	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       131	verilog.c	FUNCTION_2	IF_2
0x4000149	        0x488b55f8	                mov rdx, qword [rbp - 8]	       131	verilog.c	FUNCTION_2	IF_2
0x400014d	        0x48895008	                mov qword [rax + 8], rdx	       131	verilog.c	FUNCTION_2	IF_2
0x4000151	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       132	verilog.c	FUNCTION_2	IF_2
0x4000155	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       132	verilog.c	FUNCTION_2	IF_2
0x4000159	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       132	verilog.c	FUNCTION_2	IF_2
0x400015d	          0x4801c2	                            add rdx, rax	       132	verilog.c	FUNCTION_2	IF_2
0x4000160	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       132	verilog.c	FUNCTION_2	IF_2
0x4000164	        0x48895010	             mov qword [rax + 0x10], rdx	       132	verilog.c	FUNCTION_2	IF_2
0x4000168	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       133	verilog.c	FUNCTION_2	IF_2
0x400016c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       133	verilog.c	FUNCTION_2	IF_2
0x4000170	        0x48895018	             mov qword [rax + 0x18], rdx	       133	verilog.c	FUNCTION_2	IF_2
0x4000174	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	verilog.c	FUNCTION_2	IF_2	IF_4
0x4000178	        0x488b4008	                mov rax, qword [rax + 8]	       137	verilog.c	FUNCTION_2	IF_2	IF_4
0x400017c	          0x4885c0	                           test rax, rax	       137	verilog.c	FUNCTION_2	IF_2	IF_4
0x400017f	            0x7441	                            je 0x40001c2	       137	verilog.c	FUNCTION_2	IF_2	IF_4
0x4000181	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       138	verilog.c	FUNCTION_2	IF_2	IF_4
0x4000185	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       138	verilog.c	FUNCTION_2	IF_2	IF_4
0x4000189	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	verilog.c	FUNCTION_2	IF_2	IF_4
0x400018d	        0x488b4008	                mov rax, qword [rax + 8]	       138	verilog.c	FUNCTION_2	IF_2	IF_4
0x4000191	        0x488b4010	            mov rax, qword [rax + 0x10] 	       138	verilog.c	FUNCTION_2	IF_2	IF_4
0x4000195	          0x4839c2	                            cmp rdx, rax	       138	verilog.c	FUNCTION_2	IF_2	IF_4
0x4000198	            0x7228	                            jb 0x40001c2	       138	verilog.c	FUNCTION_2	IF_2	IF_4
0x400019a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	verilog.c	FUNCTION_2	IF_2	IF_4
0x400019e	        0x488b4008	                mov rax, qword [rax + 8]	       140	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001a2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       140	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001a6	          0x488910	                    mov qword [rax], rdx	       140	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       141	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001ad	    0x48c700000000	                      mov qword [rax], 0	       141	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001b8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       142	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001bc	        0x48895008	                mov qword [rax + 8], rdx	       142	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001c0	            0xeb6a	                           jmp 0x400022c	       142	verilog.c	FUNCTION_2	IF_2	IF_4
0x40001c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001c6	        0x488945e0	             mov qword [rbp - 0x20], rax	       148	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001ca	            0xeb0b	                           jmp 0x40001d7	       148	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       150	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001d0	          0x488b00	                    mov rax, qword [rax]	       150	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001d3	        0x488945e0	             mov qword [rbp - 0x20], rax	       150	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001db	          0x488b00	                    mov rax, qword [rax]	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001de	          0x4885c0	                           test rax, rax	       148	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001e1	            0x7418	                            je 0x40001fb	       148	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001e7	          0x488b00	                    mov rax, qword [rax]	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001ea	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001f2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001f6	          0x4839c2	                            cmp rdx, rax	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001f9	            0x72d1	                            jb 0x40001cc	       149	verilog.c	FUNCTION_2	IF_2	ELSE_1	FOR_1
0x40001fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       152	verilog.c	FUNCTION_2	IF_2	ELSE_1
0x40001ff	          0x488b10	                    mov rdx, qword [rax]	       152	verilog.c	FUNCTION_2	IF_2	ELSE_1
0x4000202	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       152	verilog.c	FUNCTION_2	IF_2	ELSE_1
0x4000206	          0x488910	                    mov qword [rax], rdx	       152	verilog.c	FUNCTION_2	IF_2	ELSE_1
0x4000209	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       153	verilog.c	FUNCTION_2	IF_2	ELSE_1
0x400020d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       153	verilog.c	FUNCTION_2	IF_2	ELSE_1
0x4000211	          0x488910	                    mov qword [rax], rdx	       153	verilog.c	FUNCTION_2	IF_2	ELSE_1
0x4000214	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	verilog.c	FUNCTION_2	IF_2	ELSE_1	IF_5
0x4000218	          0x488b00	                    mov rax, qword [rax]	       154	verilog.c	FUNCTION_2	IF_2	ELSE_1	IF_5
0x400021b	          0x4885c0	                           test rax, rax	       154	verilog.c	FUNCTION_2	IF_2	ELSE_1	IF_5
0x400021e	            0x750c	                           jne 0x400022c	       154	verilog.c	FUNCTION_2	IF_2	ELSE_1	IF_5
0x4000220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	verilog.c	FUNCTION_2	IF_2	ELSE_1	IF_5
0x4000224	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       155	verilog.c	FUNCTION_2	IF_2	ELSE_1	IF_5
0x4000228	        0x48895008	                mov qword [rax + 8], rdx	       155	verilog.c	FUNCTION_2	IF_2	ELSE_1	IF_5
0x400022c	      0xb801000000	                              mov eax, 1	       158	verilog.c	FUNCTION_2
0x4000231	              0xc9	                                   leave	       159	verilog.c	FUNCTION_2
0x4000232	              0xc3	                                     ret	       159	verilog.c	FUNCTION_2
verilog_mkobject	functions,0:WHILE,0:SWITCH,0:FOR,0:CALL,2:DO,0:ELSE,0:IF,1	24
0x40005e0	              0x55	                                push rbp	       277	verilog.c	FUNCTION_8
0x40005e1	          0x4889e5	                            mov rbp, rsp	       277	verilog.c	FUNCTION_8
0x40005e4	        0x4883ec20	                           sub rsp, 0x20	       277	verilog.c	FUNCTION_8
0x40005e8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       277	verilog.c	FUNCTION_8
0x40005ec	      0xe8cfffffff	                   call sym.verilog_init	       280	verilog.c	FUNCTION_8	CALL_1
0x40005f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	verilog.c	FUNCTION_8	CALL_2
0x40005f5	      0xbe10000000	                           mov esi, 0x10	       282	verilog.c	FUNCTION_8	CALL_2
0x40005fa	          0x4889c7	                            mov rdi, rax	       282	verilog.c	FUNCTION_8	CALL_2
0x40005fd	      0xe800000000	                          call 0x4000602	       282	verilog.c	FUNCTION_8	CALL_2
0x4000602	        0x488945f8	                mov qword [rbp - 8], rax	       282	verilog.c	FUNCTION_8	CALL_2
0x4000606	      0x48837df800	                  cmp qword [rbp - 8], 0	       283	verilog.c	FUNCTION_8	IF_1
0x400060b	            0x7507	                           jne 0x4000614	       283	verilog.c	FUNCTION_8	IF_1
0x400060d	      0xb800000000	                              mov eax, 0	       284	verilog.c	FUNCTION_8	IF_1
0x4000612	            0xeb2b	                           jmp 0x400063f	       284	verilog.c	FUNCTION_8	IF_1
0x4000614	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       286	verilog.c	FUNCTION_8
0x4000618	        0x488b55f8	                mov rdx, qword [rbp - 8]	       286	verilog.c	FUNCTION_8
0x400061c	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       286	verilog.c	FUNCTION_8
0x4000623	        0x488b45f8	                mov rax, qword [rbp - 8]	       287	verilog.c	FUNCTION_8
0x4000627	    0x48c700000000	                      mov qword [rax], 0	       287	verilog.c	FUNCTION_8
0x400062e	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	verilog.c	FUNCTION_8
0x4000632	    0x48c740080000	                  mov qword [rax + 8], 0	       288	verilog.c	FUNCTION_8
0x400063a	      0xb801000000	                              mov eax, 1	       290	verilog.c	FUNCTION_8
0x400063f	              0xc9	                                   leave	       291	verilog.c	FUNCTION_8
0x4000640	              0xc3	                                     ret	       291	verilog.c	FUNCTION_8
