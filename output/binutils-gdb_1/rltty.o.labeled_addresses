rl_tty_set_default_bindings	DO,0:FOR,0:CALL,1:WHILE,0:IF,0:SWITCH,0:functions,0:ELSE,0	11
0x400096b	              0x55	                                push rbp	       890	rltty.c	FUNCTION_20
0x400096c	          0x4889e5	                            mov rbp, rsp	       890	rltty.c	FUNCTION_20
0x400096f	        0x4883ec10	                           sub rsp, 0x10	       890	rltty.c	FUNCTION_20
0x4000973	        0x48897df8	                mov qword [rbp - 8], rdi	       890	rltty.c	FUNCTION_20
0x4000977	        0x488b45f8	                mov rax, qword [rbp - 8]	       891	rltty.c	FUNCTION_20	CALL_1
0x400097b	          0x4889c7	                            mov rdi, rax	       891	rltty.c	FUNCTION_20	CALL_1
0x400097e	      0xb800000000	                              mov eax, 0	       891	rltty.c	FUNCTION_20	CALL_1
0x4000983	      0xe800000000	                          call 0x4000988	       891	rltty.c	FUNCTION_20	CALL_1
0x4000988	              0x90	                                     nop	       892	rltty.c	FUNCTION_20
0x4000989	              0xc9	                                   leave	       892	rltty.c	FUNCTION_20
0x400098a	              0xc3	                                     ret	       892	rltty.c	FUNCTION_20
rltty_set_default_bindings	DO,0:FOR,0:CALL,3:WHILE,0:IF,1:SWITCH,0:functions,0:ELSE,0	47
0x40008be	              0x55	                                push rbp	       873	rltty.c	FUNCTION_19
0x40008bf	          0x4889e5	                            mov rbp, rsp	       873	rltty.c	FUNCTION_19
0x40008c2	        0x4883ec70	                           sub rsp, 0x70	       873	rltty.c	FUNCTION_19
0x40008c6	        0x48897d98	             mov qword [rbp - 0x68], rdi	       873	rltty.c	FUNCTION_19
0x40008ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       873	rltty.c	FUNCTION_19
0x40008d3	        0x488945f8	                mov qword [rbp - 8], rax	       873	rltty.c	FUNCTION_19
0x40008d7	            0x31c0	                            xor eax, eax	       873	rltty.c	FUNCTION_19
0x40008d9	    0x488b05000000	            mov rax, qword [0x040008e0] 	       878	rltty.c	FUNCTION_19	CALL_1
0x40008e0	          0x4889c7	                            mov rdi, rax	       878	rltty.c	FUNCTION_19	CALL_1
0x40008e3	      0xe800000000	                          call 0x40008e8	       878	rltty.c	FUNCTION_19	CALL_1
0x40008e8	          0x8945ac	             mov dword [rbp - 0x54], eax	       878	rltty.c	FUNCTION_19	CALL_1
0x40008eb	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       880	rltty.c	FUNCTION_19	IF_1	CALL_2
0x40008ef	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       880	rltty.c	FUNCTION_19	IF_1	CALL_2
0x40008f2	          0x4889d6	                            mov rsi, rdx	       880	rltty.c	FUNCTION_19	IF_1	CALL_2
0x40008f5	            0x89c7	                            mov edi, eax	       880	rltty.c	FUNCTION_19	IF_1	CALL_2
0x40008f7	      0xe83cf9ffff	               call sym.get_tty_settings	       880	rltty.c	FUNCTION_19	IF_1	CALL_2
0x40008fc	            0x85c0	                           test eax, eax	       880	rltty.c	FUNCTION_19	IF_1	CALL_2
0x40008fe	            0x7554	                           jne 0x4000954	       880	rltty.c	FUNCTION_19	IF_1	CALL_2
0x4000900	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       881	rltty.c	FUNCTION_19	CALL_3
0x4000904	        0x4883ec40	                           sub rsp, 0x40	       881	rltty.c	FUNCTION_19	CALL_3
0x4000908	          0x4889e0	                            mov rax, rsp	       881	rltty.c	FUNCTION_19	CALL_3
0x400090b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       881	rltty.c	FUNCTION_19	CALL_3
0x400090f	          0x488908	                    mov qword [rax], rcx	       881	rltty.c	FUNCTION_19	CALL_3
0x4000912	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       881	rltty.c	FUNCTION_19	CALL_3
0x4000916	        0x48894808	                mov qword [rax + 8], rcx	       881	rltty.c	FUNCTION_19	CALL_3
0x400091a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       881	rltty.c	FUNCTION_19	CALL_3
0x400091e	        0x48894810	             mov qword [rax + 0x10], rcx	       881	rltty.c	FUNCTION_19	CALL_3
0x4000922	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       881	rltty.c	FUNCTION_19	CALL_3
0x4000926	        0x48894818	             mov qword [rax + 0x18], rcx	       881	rltty.c	FUNCTION_19	CALL_3
0x400092a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       881	rltty.c	FUNCTION_19	CALL_3
0x400092e	        0x48894820	             mov qword [rax + 0x20], rcx	       881	rltty.c	FUNCTION_19	CALL_3
0x4000932	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       881	rltty.c	FUNCTION_19	CALL_3
0x4000936	        0x48894828	             mov qword [rax + 0x28], rcx	       881	rltty.c	FUNCTION_19	CALL_3
0x400093a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       881	rltty.c	FUNCTION_19	CALL_3
0x400093e	        0x48894830	             mov qword [rax + 0x30], rcx	       881	rltty.c	FUNCTION_19	CALL_3
0x4000942	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       881	rltty.c	FUNCTION_19	CALL_3
0x4000945	          0x894838	             mov dword [rax + 0x38], ecx	       881	rltty.c	FUNCTION_19	CALL_3
0x4000948	          0x4889d7	                            mov rdi, rdx	       881	rltty.c	FUNCTION_19	CALL_3
0x400094b	      0xe8f7feffff	     call sym._rl_bind_tty_special_chars	       881	rltty.c	FUNCTION_19	CALL_3
0x4000950	        0x4883c440	                           add rsp, 0x40	       881	rltty.c	FUNCTION_19	CALL_3
0x4000954	              0x90	                                     nop	       883	rltty.c	FUNCTION_19
0x4000955	        0x488b45f8	                mov rax, qword [rbp - 8]	       883	rltty.c	FUNCTION_19
0x4000959	    0x644833042528	                xor rax, qword fs:[0x28]	       883	rltty.c	FUNCTION_19
0x4000962	            0x7405	                            je 0x4000969	       883	rltty.c	FUNCTION_19
0x4000964	      0xe800000000	                          call 0x4000969	       883	rltty.c	FUNCTION_19
0x4000969	              0xc9	                                   leave	       883	rltty.c	FUNCTION_19
0x400096a	              0xc3	                                     ret	       883	rltty.c	FUNCTION_19
_rl_disable_tty_signals	DO,0:FOR,0:CALL,6:WHILE,0:IF,3:SWITCH,0:functions,0:ELSE,0	58
0x4000ad3	              0x55	                                push rbp	       939	rltty.c	FUNCTION_24
0x4000ad4	          0x4889e5	                            mov rbp, rsp	       939	rltty.c	FUNCTION_24
0x4000ad7	    0x8b0500000000	            mov eax, dword [0x04000add] 	       940	rltty.c	FUNCTION_24	IF_1
0x4000add	            0x85c0	                           test eax, eax	       940	rltty.c	FUNCTION_24	IF_1
0x4000adf	            0x740a	                            je 0x4000aeb	       940	rltty.c	FUNCTION_24	IF_1
0x4000ae1	      0xb800000000	                              mov eax, 0	       941	rltty.c	FUNCTION_24	IF_1
0x4000ae6	      0xe900010000	                           jmp 0x4000beb	       941	rltty.c	FUNCTION_24	IF_1
0x4000aeb	    0x488b05000000	            mov rax, qword [0x04000af2] 	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000af2	          0x4889c7	                            mov rdi, rax	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000af5	      0xe800000000	                          call 0x4000afa	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000afa	      0xbe00000000	                              mov esi, 0	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000aff	            0x89c7	                            mov edi, eax	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000b01	      0xe8baf6ffff	              call sym._get_tty_settings	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000b06	            0x85c0	                           test eax, eax	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000b08	            0x790a	                           jns 0x4000b14	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000b0a	      0xb8ffffffff	                     mov eax, 0xffffffff	       944	rltty.c	FUNCTION_24	IF_2
0x4000b0f	      0xe9d7000000	                           jmp 0x4000beb	       944	rltty.c	FUNCTION_24	IF_2
0x4000b14	    0x488b05000000	            mov rax, qword [0x04000b1b] 	       946	rltty.c	FUNCTION_24
0x4000b1b	    0x488905000000	            mov qword [0x04000b22], rax 	       946	rltty.c	FUNCTION_24
0x4000b22	    0x488b05000000	            mov rax, qword [0x04000b29] 	       946	rltty.c	FUNCTION_24
0x4000b29	    0x488905000000	            mov qword [0x04000b30], rax 	       946	rltty.c	FUNCTION_24
0x4000b30	    0x488b05000000	            mov rax, qword [0x04000b37] 	       946	rltty.c	FUNCTION_24
0x4000b37	    0x488905000000	            mov qword [0x04000b3e], rax 	       946	rltty.c	FUNCTION_24
0x4000b3e	    0x488b05000000	            mov rax, qword [0x04000b45] 	       946	rltty.c	FUNCTION_24
0x4000b45	    0x488905000000	            mov qword [0x04000b4c], rax 	       946	rltty.c	FUNCTION_24
0x4000b4c	    0x488b05000000	            mov rax, qword [0x04000b53] 	       946	rltty.c	FUNCTION_24
0x4000b53	    0x488905000000	            mov qword [0x04000b5a], rax 	       946	rltty.c	FUNCTION_24
0x4000b5a	    0x488b05000000	            mov rax, qword [0x04000b61] 	       946	rltty.c	FUNCTION_24
0x4000b61	    0x488905000000	            mov qword [0x04000b68], rax 	       946	rltty.c	FUNCTION_24
0x4000b68	    0x488b05000000	            mov rax, qword [0x04000b6f] 	       946	rltty.c	FUNCTION_24
0x4000b6f	    0x488905000000	            mov qword [0x04000b76], rax 	       946	rltty.c	FUNCTION_24
0x4000b76	    0x8b0500000000	            mov eax, dword [0x04000b7c] 	       946	rltty.c	FUNCTION_24
0x4000b7c	    0x890500000000	            mov dword [0x04000b82], eax 	       946	rltty.c	FUNCTION_24
0x4000b82	    0x8b0500000000	            mov eax, dword [0x04000b88] 	       948	rltty.c	FUNCTION_24
0x4000b88	          0x83e0fe	                     and eax, 0xfffffffe	       948	rltty.c	FUNCTION_24
0x4000b8b	    0x890500000000	            mov dword [0x04000b91], eax 	       948	rltty.c	FUNCTION_24
0x4000b91	    0x8b0500000000	            mov eax, dword [0x04000b97] 	       949	rltty.c	FUNCTION_24
0x4000b97	          0x80e4fb	                            and ah, 0xfb	       949	rltty.c	FUNCTION_24
0x4000b9a	    0x890500000000	            mov dword [0x04000ba0], eax 	       949	rltty.c	FUNCTION_24
0x4000ba0	    0x488b05000000	            mov rax, qword [0x04000ba7] 	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000ba7	          0x4889c7	                            mov rdi, rax	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000baa	      0xe800000000	                          call 0x4000baf	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000baf	      0xbe00000000	                              mov esi, 0	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000bb4	            0x89c7	                            mov edi, eax	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000bb6	      0xe8c4f6ffff	              call sym._set_tty_settings	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000bbb	            0x85c0	                           test eax, eax	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000bbd	            0x791d	                           jns 0x4000bdc	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000bbf	    0x488b05000000	            mov rax, qword [0x04000bc6] 	       952	rltty.c	FUNCTION_24	CALL_6
0x4000bc6	          0x4889c7	                            mov rdi, rax	       952	rltty.c	FUNCTION_24	CALL_6
0x4000bc9	      0xe800000000	                          call 0x4000bce	       952	rltty.c	FUNCTION_24	CALL_6
0x4000bce	      0xbe00000000	                              mov esi, 0	       952	rltty.c	FUNCTION_24	CALL_6
0x4000bd3	            0x89c7	                            mov edi, eax	       952	rltty.c	FUNCTION_24	CALL_6
0x4000bd5	      0xe8a5f6ffff	              call sym._set_tty_settings	       952	rltty.c	FUNCTION_24	CALL_6
0x4000bda	            0xeb0f	                           jmp 0x4000beb	       952	rltty.c	FUNCTION_24	CALL_6
0x4000bdc	    0xc70500000000	               mov dword [0x04000be6], 1	       954	rltty.c	FUNCTION_24
0x4000be6	      0xb800000000	                              mov eax, 0	       955	rltty.c	FUNCTION_24
0x4000beb	              0x5d	                                 pop rbp	       956	rltty.c	FUNCTION_24
0x4000bec	              0xc3	                                     ret	       956	rltty.c	FUNCTION_24
set_special_char	DO,0:FOR,0:CALL,0:WHILE,0:IF,1:SWITCH,0:functions,0:ELSE,0	31
0x40007e7	              0x55	                                push rbp	       836	rltty.c	FUNCTION_17
0x40007e8	          0x4889e5	                            mov rbp, rsp	       836	rltty.c	FUNCTION_17
0x40007eb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       836	rltty.c	FUNCTION_17
0x40007ef	        0x488975e0	             mov qword [rbp - 0x20], rsi	       836	rltty.c	FUNCTION_17
0x40007f3	          0x8955dc	             mov dword [rbp - 0x24], edx	       836	rltty.c	FUNCTION_17
0x40007f6	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       836	rltty.c	FUNCTION_17
0x40007fa	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       839	rltty.c	FUNCTION_17
0x40007fe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       839	rltty.c	FUNCTION_17
0x4000801	            0x4898	                                    cdqe	       839	rltty.c	FUNCTION_17
0x4000803	       0xfb6440211	     movzx eax, byte [rdx + rax + 0x11] 	       839	rltty.c	FUNCTION_17
0x4000808	          0x8845ff	                  mov byte [rbp - 1], al	       839	rltty.c	FUNCTION_17
0x400080b	        0x807dff00	                   cmp byte [rbp - 1], 0	       840	rltty.c	FUNCTION_17	IF_1
0x400080f	            0x7433	                            je 0x4000844	       840	rltty.c	FUNCTION_17	IF_1
0x4000811	         0xfb645ff	               movzx eax, byte [rbp - 1]	       840	rltty.c	FUNCTION_17	IF_1
0x4000815	        0x48c1e004	                              shl rax, 4	       840	rltty.c	FUNCTION_17	IF_1
0x4000819	          0x4889c2	                            mov rdx, rax	       840	rltty.c	FUNCTION_17	IF_1
0x400081c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       840	rltty.c	FUNCTION_17	IF_1
0x4000820	          0x4801d0	                            add rax, rdx	       840	rltty.c	FUNCTION_17	IF_1
0x4000823	           0xfb600	                   movzx eax, byte [rax]	       840	rltty.c	FUNCTION_17	IF_1
0x4000826	            0x84c0	                             test al, al	       840	rltty.c	FUNCTION_17	IF_1
0x4000828	            0x751a	                           jne 0x4000844	       840	rltty.c	FUNCTION_17	IF_1
0x400082a	         0xfb645ff	               movzx eax, byte [rbp - 1]	       841	rltty.c	FUNCTION_17	IF_1
0x400082e	        0x48c1e004	                              shl rax, 4	       841	rltty.c	FUNCTION_17	IF_1
0x4000832	          0x4889c2	                            mov rdx, rax	       841	rltty.c	FUNCTION_17	IF_1
0x4000835	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	rltty.c	FUNCTION_17	IF_1
0x4000839	          0x4801c2	                            add rdx, rax	       841	rltty.c	FUNCTION_17	IF_1
0x400083c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       841	rltty.c	FUNCTION_17	IF_1
0x4000840	        0x48894208	                mov qword [rdx + 8], rax	       841	rltty.c	FUNCTION_17	IF_1
0x4000844	              0x90	                                     nop	       842	rltty.c	FUNCTION_17
0x4000845	              0x5d	                                 pop rbp	       842	rltty.c	FUNCTION_17
0x4000846	              0xc3	                                     ret	       842	rltty.c	FUNCTION_17
get_tty_settings	DO,0:FOR,0:CALL,3:WHILE,0:IF,1:SWITCH,0:functions,0:ELSE,0	22
0x4000238	              0x55	                                push rbp	       457	rltty.c	FUNCTION_8
0x4000239	          0x4889e5	                            mov rbp, rsp	       457	rltty.c	FUNCTION_8
0x400023c	        0x4883ec10	                           sub rsp, 0x10	       457	rltty.c	FUNCTION_8
0x4000240	          0x897dfc	                mov dword [rbp - 4], edi	       457	rltty.c	FUNCTION_8
0x4000243	        0x488975f0	             mov qword [rbp - 0x10], rsi	       457	rltty.c	FUNCTION_8
0x4000247	          0x8b45fc	                mov eax, dword [rbp - 4]	       458	rltty.c	FUNCTION_8	CALL_1
0x400024a	            0x89c7	                            mov edi, eax	       458	rltty.c	FUNCTION_8	CALL_1
0x400024c	      0xe8effdffff	                    call sym.set_winsize	       458	rltty.c	FUNCTION_8	CALL_1
0x4000251	      0xe800000000	                          call 0x4000256	       460	rltty.c	FUNCTION_8
0x4000256	    0xc70000000000	                      mov dword [rax], 0	       460	rltty.c	FUNCTION_8
0x400025c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000260	          0x8b45fc	                mov eax, dword [rbp - 4]	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000263	          0x4889d6	                            mov rsi, rdx	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000266	            0x89c7	                            mov edi, eax	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000268	      0xe853ffffff	              call sym._get_tty_settings	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x400026d	            0x85c0	                           test eax, eax	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x400026f	            0x7907	                           jns 0x4000278	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000271	      0xb8ffffffff	                     mov eax, 0xffffffff	       462	rltty.c	FUNCTION_8	IF_1
0x4000276	            0xeb05	                           jmp 0x400027d	       462	rltty.c	FUNCTION_8	IF_1
0x4000278	      0xb800000000	                              mov eax, 0	       468	rltty.c	FUNCTION_8
0x400027d	              0xc9	                                   leave	       469	rltty.c	FUNCTION_8
0x400027e	              0xc3	                                     ret	       469	rltty.c	FUNCTION_8
rl_deprep_terminal	DO,0:FOR,0:CALL,9:WHILE,0:IF,3:SWITCH,0:functions,0:ELSE,0	43
0x40006d1	              0x55	                                push rbp	       672	rltty.c	FUNCTION_14
0x40006d2	          0x4889e5	                            mov rbp, rsp	       672	rltty.c	FUNCTION_14
0x40006d5	        0x4883ec10	                           sub rsp, 0x10	       672	rltty.c	FUNCTION_14
0x40006d9	    0x8b0500000000	            mov eax, dword [0x040006df] 	       675	rltty.c	FUNCTION_14	IF_1
0x40006df	            0x85c0	                           test eax, eax	       675	rltty.c	FUNCTION_14	IF_1
0x40006e1	     0xf8491000000	                            je 0x4000778	       675	rltty.c	FUNCTION_14	IF_1
0x40006e7	      0xe800000000	                          call 0x40006ec	       679	rltty.c	FUNCTION_14	CALL_1
0x40006ec	    0x488b05000000	            mov rax, qword [0x040006f3] 	       681	rltty.c	FUNCTION_14	CALL_3
0x40006f3	          0x4885c0	                           test rax, rax	       681	rltty.c	FUNCTION_14	CALL_3
0x40006f6	            0x7411	                            je 0x4000709	       681	rltty.c	FUNCTION_14	CALL_3
0x40006f8	    0x488b05000000	            mov rax, qword [0x040006ff] 	       681	rltty.c	FUNCTION_14	CALL_3
0x40006ff	          0x4889c7	                            mov rdi, rax	       681	rltty.c	FUNCTION_14	CALL_3
0x4000702	      0xe800000000	                          call 0x4000707	       681	rltty.c	FUNCTION_14	CALL_3
0x4000707	            0xeb0f	                           jmp 0x4000718	       681	rltty.c	FUNCTION_14	CALL_3
0x4000709	    0x488b05000000	            mov rax, qword [0x04000710] 	       681	rltty.c	FUNCTION_14	CALL_3
0x4000710	          0x4889c7	                            mov rdi, rax	       681	rltty.c	FUNCTION_14	CALL_3
0x4000713	      0xe800000000	                          call 0x4000718	       681	rltty.c	FUNCTION_14	CALL_3
0x4000718	          0x8945fc	                mov dword [rbp - 4], eax	       681	rltty.c	FUNCTION_14	CALL_3
0x400071b	    0x8b0500000000	            mov eax, dword [0x04000721] 	       683	rltty.c	FUNCTION_14	IF_2
0x4000721	            0x85c0	                           test eax, eax	       683	rltty.c	FUNCTION_14	IF_2
0x4000723	            0x740a	                            je 0x400072f	       683	rltty.c	FUNCTION_14	IF_2
0x4000725	      0xbf00000000	                              mov edi, 0	       684	rltty.c	FUNCTION_14	CALL_4
0x400072a	      0xe800000000	                          call 0x400072f	       684	rltty.c	FUNCTION_14	CALL_4
0x400072f	    0x488b05000000	            mov rax, qword [0x04000736] 	       686	rltty.c	FUNCTION_14	CALL_5
0x4000736	          0x4889c7	                            mov rdi, rax	       686	rltty.c	FUNCTION_14	CALL_5
0x4000739	      0xe800000000	                          call 0x400073e	       686	rltty.c	FUNCTION_14	CALL_5
0x400073e	          0x8b45fc	                mov eax, dword [rbp - 4]	       688	rltty.c	FUNCTION_14	IF_3	CALL_6
0x4000741	      0xbe00000000	                              mov esi, 0	       688	rltty.c	FUNCTION_14	IF_3	CALL_6
0x4000746	            0x89c7	                            mov edi, eax	       688	rltty.c	FUNCTION_14	IF_3	CALL_6
0x4000748	      0xe87ffbffff	               call sym.set_tty_settings	       688	rltty.c	FUNCTION_14	IF_3	CALL_6
0x400074d	            0x85c0	                           test eax, eax	       688	rltty.c	FUNCTION_14	IF_3	CALL_6
0x400074f	            0x7907	                           jns 0x4000758	       688	rltty.c	FUNCTION_14	IF_3	CALL_6
0x4000751	      0xe800000000	                          call 0x4000756	       690	rltty.c	FUNCTION_14	IF_3	CALL_7
0x4000756	            0xeb21	                           jmp 0x4000779	       691	rltty.c	FUNCTION_14	IF_3
0x4000758	    0xc70500000000	               mov dword [0x04000762], 0	       694	rltty.c	FUNCTION_14
0x4000762	    0x8b0500000000	            mov eax, dword [0x04000768] 	       695	rltty.c	FUNCTION_14	CALL_8
0x4000768	          0x83e0fb	                     and eax, 0xfffffffb	       695	rltty.c	FUNCTION_14	CALL_8
0x400076b	    0x890500000000	            mov dword [0x04000771], eax 	       695	rltty.c	FUNCTION_14	CALL_8
0x4000771	      0xe800000000	                          call 0x4000776	       697	rltty.c	FUNCTION_14	CALL_9
0x4000776	            0xeb01	                           jmp 0x4000779	       697	rltty.c	FUNCTION_14	CALL_9
0x4000778	              0x90	                                     nop	       676	rltty.c	FUNCTION_14	IF_1
0x4000779	              0xc9	                                   leave	       698	rltty.c	FUNCTION_14
0x400077a	              0xc3	                                     ret	       698	rltty.c	FUNCTION_14
rl_prep_terminal	DO,0:FOR,0:CALL,18:WHILE,0:IF,10:SWITCH,0:functions,0:ELSE,2	181
0x40003de	              0x55	                                push rbp	       597	rltty.c	FUNCTION_13
0x40003df	          0x4889e5	                            mov rbp, rsp	       597	rltty.c	FUNCTION_13
0x40003e2	        0x4883ec70	                           sub rsp, 0x70	       597	rltty.c	FUNCTION_13
0x40003e6	          0x897d9c	             mov dword [rbp - 0x64], edi	       597	rltty.c	FUNCTION_13
0x40003e9	    0x64488b042528	                mov rax, qword fs:[0x28]	       597	rltty.c	FUNCTION_13
0x40003f2	        0x488945f8	                mov qword [rbp - 8], rax	       597	rltty.c	FUNCTION_13
0x40003f6	            0x31c0	                            xor eax, eax	       597	rltty.c	FUNCTION_13
0x40003f8	    0x8b0500000000	            mov eax, dword [0x040003fe] 	       601	rltty.c	FUNCTION_13	IF_1
0x40003fe	            0x85c0	                           test eax, eax	       601	rltty.c	FUNCTION_13	IF_1
0x4000400	     0xf85b4020000	                           jne 0x40006ba	       601	rltty.c	FUNCTION_13	IF_1
0x4000406	      0xe800000000	                          call 0x400040b	       605	rltty.c	FUNCTION_13	CALL_1
0x400040b	    0x488b05000000	            mov rax, qword [0x04000412] 	       607	rltty.c	FUNCTION_13	CALL_3
0x4000412	          0x4885c0	                           test rax, rax	       607	rltty.c	FUNCTION_13	CALL_3
0x4000415	            0x7411	                            je 0x4000428	       607	rltty.c	FUNCTION_13	CALL_3
0x4000417	    0x488b05000000	            mov rax, qword [0x0400041e] 	       607	rltty.c	FUNCTION_13	CALL_3
0x400041e	          0x4889c7	                            mov rdi, rax	       607	rltty.c	FUNCTION_13	CALL_3
0x4000421	      0xe800000000	                          call 0x4000426	       607	rltty.c	FUNCTION_13	CALL_3
0x4000426	            0xeb0f	                           jmp 0x4000437	       607	rltty.c	FUNCTION_13	CALL_3
0x4000428	    0x488b05000000	            mov rax, qword [0x0400042f] 	       607	rltty.c	FUNCTION_13	CALL_3
0x400042f	          0x4889c7	                            mov rdi, rax	       607	rltty.c	FUNCTION_13	CALL_3
0x4000432	      0xe800000000	                          call 0x4000437	       607	rltty.c	FUNCTION_13	CALL_3
0x4000437	          0x8945ac	             mov dword [rbp - 0x54], eax	       607	rltty.c	FUNCTION_13	CALL_3
0x400043a	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       609	rltty.c	FUNCTION_13	IF_2	CALL_4
0x400043e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       609	rltty.c	FUNCTION_13	IF_2	CALL_4
0x4000441	          0x4889d6	                            mov rsi, rdx	       609	rltty.c	FUNCTION_13	IF_2	CALL_4
0x4000444	            0x89c7	                            mov edi, eax	       609	rltty.c	FUNCTION_13	IF_2	CALL_4
0x4000446	      0xe8edfdffff	               call sym.get_tty_settings	       609	rltty.c	FUNCTION_13	IF_2	CALL_4
0x400044b	            0x85c0	                           test eax, eax	       609	rltty.c	FUNCTION_13	IF_2	CALL_4
0x400044d	            0x7938	                           jns 0x4000487	       609	rltty.c	FUNCTION_13	IF_2	CALL_4
0x400044f	      0xe800000000	                          call 0x4000454	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000454	            0x8b00	                    mov eax, dword [rax]	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000456	          0x83f819	                           cmp eax, 0x19	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000459	            0x7418	                            je 0x4000473	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400045b	      0xe800000000	                          call 0x4000460	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000460	            0x8b00	                    mov eax, dword [rax]	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000462	          0x83f816	                           cmp eax, 0x16	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000465	            0x740c	                            je 0x4000473	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000467	      0xe800000000	                          call 0x400046c	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400046c	            0x8b00	                    mov eax, dword [rax]	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400046e	          0x83f85f	                           cmp eax, 0x5f	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000471	            0x750a	                           jne 0x400047d	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000473	    0xc70500000000	               mov dword [0x0400047d], 1	       618	rltty.c	FUNCTION_13	IF_2	IF_3	IF_4
0x400047d	      0xe800000000	                          call 0x4000482	       620	rltty.c	FUNCTION_13	IF_2	CALL_5
0x4000482	      0xe934020000	                           jmp 0x40006bb	       621	rltty.c	FUNCTION_13	IF_2
0x4000487	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       624	rltty.c	FUNCTION_13
0x400048b	    0x488905000000	            mov qword [0x04000492], rax 	       624	rltty.c	FUNCTION_13
0x4000492	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       624	rltty.c	FUNCTION_13
0x4000496	    0x488905000000	            mov qword [0x0400049d], rax 	       624	rltty.c	FUNCTION_13
0x400049d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       624	rltty.c	FUNCTION_13
0x40004a1	    0x488905000000	            mov qword [0x040004a8], rax 	       624	rltty.c	FUNCTION_13
0x40004a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	rltty.c	FUNCTION_13
0x40004ac	    0x488905000000	            mov qword [0x040004b3], rax 	       624	rltty.c	FUNCTION_13
0x40004b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       624	rltty.c	FUNCTION_13
0x40004b7	    0x488905000000	            mov qword [0x040004be], rax 	       624	rltty.c	FUNCTION_13
0x40004be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       624	rltty.c	FUNCTION_13
0x40004c2	    0x488905000000	            mov qword [0x040004c9], rax 	       624	rltty.c	FUNCTION_13
0x40004c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       624	rltty.c	FUNCTION_13
0x40004cd	    0x488905000000	            mov qword [0x040004d4], rax 	       624	rltty.c	FUNCTION_13
0x40004d4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       624	rltty.c	FUNCTION_13
0x40004d7	    0x890500000000	            mov dword [0x040004dd], eax 	       624	rltty.c	FUNCTION_13
0x40004dd	    0x8b0500000000	            mov eax, dword [0x040004e3] 	       626	rltty.c	FUNCTION_13	IF_5
0x40004e3	            0x85c0	                           test eax, eax	       626	rltty.c	FUNCTION_13	IF_5
0x40004e5	            0x7425	                            je 0x400050c	       626	rltty.c	FUNCTION_13	IF_5
0x40004e7	    0x8b0500000000	            mov eax, dword [0x040004ed] 	       631	rltty.c	FUNCTION_13	IF_5	IF_6
0x40004ed	            0x85c0	                           test eax, eax	       631	rltty.c	FUNCTION_13	IF_5	IF_6
0x40004ef	            0x750c	                           jne 0x40004fd	       631	rltty.c	FUNCTION_13	IF_5	IF_6
0x40004f1	      0xbf00000000	                              mov edi, 0	       632	rltty.c	FUNCTION_13	IF_5	CALL_6
0x40004f6	      0xe800000000	                          call 0x40004fb	       632	rltty.c	FUNCTION_13	IF_5	CALL_6
0x40004fb	            0xeb0f	                           jmp 0x400050c	       632	rltty.c	FUNCTION_13	IF_5	CALL_6
0x40004fd	    0x488b05000000	            mov rax, qword [0x04000504] 	       635	rltty.c	FUNCTION_13	IF_5	CALL_7
0x4000504	          0x4889c7	                            mov rdi, rax	       635	rltty.c	FUNCTION_13	IF_5	CALL_7
0x4000507	      0xe800000000	                          call 0x400050c	       635	rltty.c	FUNCTION_13	IF_5	CALL_7
0x400050c	      0xbf00000000	                              mov edi, 0	       637	rltty.c	FUNCTION_13	CALL_8
0x4000511	      0xe88ffbffff	                 call sym.save_tty_chars	       637	rltty.c	FUNCTION_13	CALL_8
0x4000516	    0x8b0500000000	            mov eax, dword [0x0400051c] 	       638	rltty.c	FUNCTION_13	CALL_9
0x400051c	       0xd00000400	                         or eax, 0x40000	       638	rltty.c	FUNCTION_13	CALL_9
0x4000521	    0x890500000000	            mov dword [0x04000527], eax 	       638	rltty.c	FUNCTION_13	CALL_9
0x4000527	    0x8b0500000000	            mov eax, dword [0x0400052d] 	       639	rltty.c	FUNCTION_13	IF_7
0x400052d	            0x85c0	                           test eax, eax	       639	rltty.c	FUNCTION_13	IF_7
0x400052f	     0xf84b5000000	                            je 0x40005ea	       639	rltty.c	FUNCTION_13	IF_7
0x4000535	    0x8b0500000000	            mov eax, dword [0x0400053b] 	       644	rltty.c	FUNCTION_13	IF_7	IF_8
0x400053b	            0x85c0	                           test eax, eax	       644	rltty.c	FUNCTION_13	IF_7	IF_8
0x400053d	            0x7554	                           jne 0x4000593	       644	rltty.c	FUNCTION_13	IF_7	IF_8
0x400053f	        0x4883ec40	                           sub rsp, 0x40	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000543	          0x4889e0	                            mov rax, rsp	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000546	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400054a	          0x488910	                    mov qword [rax], rdx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400054d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000551	        0x48895008	                mov qword [rax + 8], rdx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000555	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000559	        0x48895010	             mov qword [rax + 0x10], rdx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400055d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000561	        0x48895018	             mov qword [rax + 0x18], rdx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000565	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000569	        0x48895020	             mov qword [rax + 0x20], rdx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400056d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000571	        0x48895028	             mov qword [rax + 0x28], rdx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000575	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000579	        0x48895030	             mov qword [rax + 0x30], rdx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400057d	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000580	          0x895038	             mov dword [rax + 0x38], edx	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000583	      0xbf00000000	                              mov edi, 0	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000588	      0xe8ba020000	     call sym._rl_bind_tty_special_chars	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400058d	        0x4883c440	                           add rsp, 0x40	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000591	            0xeb57	                           jmp 0x40005ea	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000593	    0x488b15000000	            mov rdx, qword [0x0400059a] 	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x400059a	        0x4883ec40	                           sub rsp, 0x40	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x400059e	          0x4889e0	                            mov rax, rsp	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005a1	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005a5	          0x488908	                    mov qword [rax], rcx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005a8	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005ac	        0x48894808	                mov qword [rax + 8], rcx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005b0	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005b4	        0x48894810	             mov qword [rax + 0x10], rcx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005b8	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005bc	        0x48894818	             mov qword [rax + 0x18], rcx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005c0	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005c4	        0x48894820	             mov qword [rax + 0x20], rcx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005c8	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005cc	        0x48894828	             mov qword [rax + 0x28], rcx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005d0	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005d4	        0x48894830	             mov qword [rax + 0x30], rcx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005d8	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005db	          0x894838	             mov dword [rax + 0x38], ecx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005de	          0x4889d7	                            mov rdi, rdx	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005e1	      0xe861020000	     call sym._rl_bind_tty_special_chars	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005e6	        0x4883c440	                           add rsp, 0x40	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40005ea	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       651	rltty.c	FUNCTION_13	CALL_12
0x40005ee	          0x8b559c	             mov edx, dword [rbp - 0x64]	       651	rltty.c	FUNCTION_13	CALL_12
0x40005f1	        0x4883ec40	                           sub rsp, 0x40	       651	rltty.c	FUNCTION_13	CALL_12
0x40005f5	          0x4889e0	                            mov rax, rsp	       651	rltty.c	FUNCTION_13	CALL_12
0x40005f8	    0x488b35000000	            mov rsi, qword [0x040005ff] 	       651	rltty.c	FUNCTION_13	CALL_12
0x40005ff	          0x488930	                    mov qword [rax], rsi	       651	rltty.c	FUNCTION_13	CALL_12
0x4000602	    0x488b35000000	            mov rsi, qword [0x04000609] 	       651	rltty.c	FUNCTION_13	CALL_12
0x4000609	        0x48897008	                mov qword [rax + 8], rsi	       651	rltty.c	FUNCTION_13	CALL_12
0x400060d	    0x488b35000000	            mov rsi, qword [0x04000614] 	       651	rltty.c	FUNCTION_13	CALL_12
0x4000614	        0x48897010	             mov qword [rax + 0x10], rsi	       651	rltty.c	FUNCTION_13	CALL_12
0x4000618	    0x488b35000000	            mov rsi, qword [0x0400061f] 	       651	rltty.c	FUNCTION_13	CALL_12
0x400061f	        0x48897018	             mov qword [rax + 0x18], rsi	       651	rltty.c	FUNCTION_13	CALL_12
0x4000623	    0x488b35000000	            mov rsi, qword [0x0400062a] 	       651	rltty.c	FUNCTION_13	CALL_12
0x400062a	        0x48897020	             mov qword [rax + 0x20], rsi	       651	rltty.c	FUNCTION_13	CALL_12
0x400062e	    0x488b35000000	            mov rsi, qword [0x04000635] 	       651	rltty.c	FUNCTION_13	CALL_12
0x4000635	        0x48897028	             mov qword [rax + 0x28], rsi	       651	rltty.c	FUNCTION_13	CALL_12
0x4000639	    0x488b35000000	            mov rsi, qword [0x04000640] 	       651	rltty.c	FUNCTION_13	CALL_12
0x4000640	        0x48897030	             mov qword [rax + 0x30], rsi	       651	rltty.c	FUNCTION_13	CALL_12
0x4000644	    0x8b3500000000	            mov esi, dword [0x0400064a] 	       651	rltty.c	FUNCTION_13	CALL_12
0x400064a	          0x897038	             mov dword [rax + 0x38], esi	       651	rltty.c	FUNCTION_13	CALL_12
0x400064d	          0x4889ce	                            mov rsi, rcx	       651	rltty.c	FUNCTION_13	CALL_12
0x4000650	            0x89d7	                            mov edi, edx	       651	rltty.c	FUNCTION_13	CALL_12
0x4000652	      0xe8a7fcffff	      call sym.prepare_terminal_settings	       651	rltty.c	FUNCTION_13	CALL_12
0x4000657	        0x4883c440	                           add rsp, 0x40	       651	rltty.c	FUNCTION_13	CALL_12
0x400065b	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       653	rltty.c	FUNCTION_13	IF_9	CALL_13
0x400065f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       653	rltty.c	FUNCTION_13	IF_9	CALL_13
0x4000662	          0x4889d6	                            mov rsi, rdx	       653	rltty.c	FUNCTION_13	IF_9	CALL_13
0x4000665	            0x89c7	                            mov edi, eax	       653	rltty.c	FUNCTION_13	IF_9	CALL_13
0x4000667	      0xe860fcffff	               call sym.set_tty_settings	       653	rltty.c	FUNCTION_13	IF_9	CALL_13
0x400066c	            0x85c0	                           test eax, eax	       653	rltty.c	FUNCTION_13	IF_9	CALL_13
0x400066e	            0x7907	                           jns 0x4000677	       653	rltty.c	FUNCTION_13	IF_9	CALL_13
0x4000670	      0xe800000000	                          call 0x4000675	       655	rltty.c	FUNCTION_13	IF_9	CALL_14
0x4000675	            0xeb44	                           jmp 0x40006bb	       656	rltty.c	FUNCTION_13	IF_9
0x4000677	    0x8b0500000000	            mov eax, dword [0x0400067d] 	       659	rltty.c	FUNCTION_13	IF_10
0x400067d	            0x85c0	                           test eax, eax	       659	rltty.c	FUNCTION_13	IF_10
0x400067f	            0x740a	                            je 0x400068b	       659	rltty.c	FUNCTION_13	IF_10
0x4000681	      0xbf01000000	                              mov edi, 1	       660	rltty.c	FUNCTION_13	CALL_15
0x4000686	      0xe800000000	                          call 0x400068b	       660	rltty.c	FUNCTION_13	CALL_15
0x400068b	    0x488b05000000	            mov rax, qword [0x04000692] 	       662	rltty.c	FUNCTION_13	CALL_16
0x4000692	          0x4889c7	                            mov rdi, rax	       662	rltty.c	FUNCTION_13	CALL_16
0x4000695	      0xe800000000	                          call 0x400069a	       662	rltty.c	FUNCTION_13	CALL_16
0x400069a	    0xc70500000000	               mov dword [0x040006a4], 1	       663	rltty.c	FUNCTION_13
0x40006a4	    0x8b0500000000	            mov eax, dword [0x040006aa] 	       664	rltty.c	FUNCTION_13	CALL_17
0x40006aa	          0x83c804	                               or eax, 4	       664	rltty.c	FUNCTION_13	CALL_17
0x40006ad	    0x890500000000	            mov dword [0x040006b3], eax 	       664	rltty.c	FUNCTION_13	CALL_17
0x40006b3	      0xe800000000	                          call 0x40006b8	       666	rltty.c	FUNCTION_13	CALL_18
0x40006b8	            0xeb01	                           jmp 0x40006bb	       666	rltty.c	FUNCTION_13	CALL_18
0x40006ba	              0x90	                                     nop	       602	rltty.c	FUNCTION_13	IF_1
0x40006bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       667	rltty.c	FUNCTION_13
0x40006bf	    0x644833042528	                xor rax, qword fs:[0x28]	       667	rltty.c	FUNCTION_13
0x40006c8	            0x7405	                            je 0x40006cf	       667	rltty.c	FUNCTION_13
0x40006ca	      0xe800000000	                          call 0x40006cf	       667	rltty.c	FUNCTION_13
0x40006cf	              0xc9	                                   leave	       667	rltty.c	FUNCTION_13
0x40006d0	              0xc3	                                     ret	       667	rltty.c	FUNCTION_13
_set_tty_settings	DO,0:FOR,0:CALL,0:WHILE,1:IF,1:SWITCH,0:functions,0:ELSE,0	24
0x400027f	              0x55	                                push rbp	       475	rltty.c	FUNCTION_9
0x4000280	          0x4889e5	                            mov rbp, rsp	       475	rltty.c	FUNCTION_9
0x4000283	        0x4883ec10	                           sub rsp, 0x10	       475	rltty.c	FUNCTION_9
0x4000287	          0x897dfc	                mov dword [rbp - 4], edi	       475	rltty.c	FUNCTION_9
0x400028a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       475	rltty.c	FUNCTION_9
0x400028e	            0xeb1e	                           jmp 0x40002ae	       476	rltty.c	FUNCTION_9	WHILE_1
0x4000290	      0xe800000000	                          call 0x4000295	       478	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x4000295	            0x8b00	                    mov eax, dword [rax]	       478	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x4000297	          0x83f804	                              cmp eax, 4	       478	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x400029a	            0x7407	                            je 0x40002a3	       478	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x400029c	      0xb8ffffffff	                     mov eax, 0xffffffff	       479	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x40002a1	            0xeb27	                           jmp 0x40002ca	       479	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x40002a3	      0xe800000000	                          call 0x40002a8	       480	rltty.c	FUNCTION_9	WHILE_1
0x40002a8	    0xc70000000000	                      mov dword [rax], 0	       480	rltty.c	FUNCTION_9	WHILE_1
0x40002ae	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       476	rltty.c	FUNCTION_9	WHILE_1
0x40002b2	          0x8b45fc	                mov eax, dword [rbp - 4]	       476	rltty.c	FUNCTION_9	WHILE_1
0x40002b5	      0xbe01000000	                              mov esi, 1	       476	rltty.c	FUNCTION_9	WHILE_1
0x40002ba	            0x89c7	                            mov edi, eax	       476	rltty.c	FUNCTION_9	WHILE_1
0x40002bc	      0xe800000000	                          call 0x40002c1	       476	rltty.c	FUNCTION_9	WHILE_1
0x40002c1	            0x85c0	                           test eax, eax	       476	rltty.c	FUNCTION_9	WHILE_1
0x40002c3	            0x78cb	                            js 0x4000290	       476	rltty.c	FUNCTION_9	WHILE_1
0x40002c5	      0xb800000000	                              mov eax, 0	       482	rltty.c	FUNCTION_9
0x40002ca	              0xc9	                                   leave	       483	rltty.c	FUNCTION_9
0x40002cb	              0xc3	                                     ret	       483	rltty.c	FUNCTION_9
_get_tty_settings	DO,0:FOR,0:CALL,1:WHILE,1:IF,3:SWITCH,0:functions,0:ELSE,1	38
0x40001c0	              0x55	                                push rbp	       424	rltty.c	FUNCTION_7
0x40001c1	          0x4889e5	                            mov rbp, rsp	       424	rltty.c	FUNCTION_7
0x40001c4	        0x4883ec20	                           sub rsp, 0x20	       424	rltty.c	FUNCTION_7
0x40001c8	          0x897dec	             mov dword [rbp - 0x14], edi	       424	rltty.c	FUNCTION_7
0x40001cb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       424	rltty.c	FUNCTION_7
0x40001cf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       429	rltty.c	FUNCTION_7	WHILE_1
0x40001d3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       429	rltty.c	FUNCTION_7	WHILE_1
0x40001d6	          0x4889d6	                            mov rsi, rdx	       429	rltty.c	FUNCTION_7	WHILE_1
0x40001d9	            0x89c7	                            mov edi, eax	       429	rltty.c	FUNCTION_7	WHILE_1
0x40001db	      0xe800000000	                          call 0x40001e0	       429	rltty.c	FUNCTION_7	WHILE_1
0x40001e0	          0x8945fc	                mov dword [rbp - 4], eax	       429	rltty.c	FUNCTION_7	WHILE_1
0x40001e3	        0x837dfc00	                  cmp dword [rbp - 4], 0	       430	rltty.c	FUNCTION_7	WHILE_1	IF_1
0x40001e7	            0x7913	                           jns 0x40001fc	       430	rltty.c	FUNCTION_7	WHILE_1	IF_1
0x40001e9	      0xe800000000	                          call 0x40001ee	       432	rltty.c	FUNCTION_7	WHILE_1	IF_1	IF_2
0x40001ee	            0x8b00	                    mov eax, dword [rax]	       432	rltty.c	FUNCTION_7	WHILE_1	IF_1	IF_2
0x40001f0	          0x83f804	                              cmp eax, 4	       432	rltty.c	FUNCTION_7	WHILE_1	IF_1	IF_2
0x40001f3	            0x74da	                            je 0x40001cf	       432	rltty.c	FUNCTION_7	WHILE_1	IF_1	IF_2
0x40001f5	      0xb8ffffffff	                     mov eax, 0xffffffff	       433	rltty.c	FUNCTION_7	WHILE_1	IF_1	IF_2
0x40001fa	            0xeb3a	                           jmp 0x4000236	       433	rltty.c	FUNCTION_7	WHILE_1	IF_1	IF_2
0x40001fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       437	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x4000200	          0x8b400c	              mov eax, dword [rax + 0xc]	       437	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x4000203	      0x2500100000	                         and eax, 0x1000	       437	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x4000208	            0x85c0	                           test eax, eax	       437	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x400020a	            0x7424	                            je 0x4000230	       437	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x400020c	      0xbf00000000	                              mov edi, 0	       440	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3	CALL_1
0x4000211	      0xb800000000	                              mov eax, 0	       440	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3	CALL_1
0x4000216	      0xe800000000	                          call 0x400021b	       440	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3	CALL_1
0x400021b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       441	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x400021f	          0x8b400c	              mov eax, dword [rax + 0xc]	       441	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x4000222	          0x80e4ef	                            and ah, 0xef	       441	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x4000225	            0x89c2	                            mov edx, eax	       441	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x4000227	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       441	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x400022b	          0x89500c	              mov dword [rax + 0xc], edx	       441	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x400022e	            0xeb01	                           jmp 0x4000231	       442	rltty.c	FUNCTION_7	WHILE_1	ELSE_1	IF_3
0x4000230	              0x90	                                     nop	       447	rltty.c	FUNCTION_7	WHILE_1
0x4000231	      0xb800000000	                              mov eax, 0	       450	rltty.c	FUNCTION_7
0x4000236	              0xc9	                                   leave	       451	rltty.c	FUNCTION_7
0x4000237	              0xc3	                                     ret	       451	rltty.c	FUNCTION_7
save_tty_chars	DO,0:FOR,0:CALL,0:WHILE,0:IF,0:SWITCH,0:functions,0:ELSE,0	61
0x40000a5	              0x55	                                push rbp	       356	rltty.c	FUNCTION_5
0x40000a6	          0x4889e5	                            mov rbp, rsp	       356	rltty.c	FUNCTION_5
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       356	rltty.c	FUNCTION_5
0x40000ad	    0x488b05000000	            mov rax, qword [0x040000b4] 	       357	rltty.c	FUNCTION_5
0x40000b4	    0x488b15000000	            mov rdx, qword [0x040000bb] 	       357	rltty.c	FUNCTION_5
0x40000bb	    0x488905000000	            mov qword [0x040000c2], rax 	       357	rltty.c	FUNCTION_5
0x40000c2	    0x488915000000	            mov qword [0x040000c9], rdx 	       357	rltty.c	FUNCTION_5
0x40000c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       359	rltty.c	FUNCTION_5
0x40000cd	         0xfb64015	           movzx eax, byte [rax + 0x15] 	       359	rltty.c	FUNCTION_5
0x40000d1	    0x880500000000	               mov byte [0x040000d7], al	       359	rltty.c	FUNCTION_5
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	rltty.c	FUNCTION_5
0x40000db	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	       360	rltty.c	FUNCTION_5
0x40000df	    0x880500000000	               mov byte [0x040000e5], al	       360	rltty.c	FUNCTION_5
0x40000e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       362	rltty.c	FUNCTION_5
0x40000e9	         0xfb64021	           movzx eax, byte [rax + 0x21] 	       362	rltty.c	FUNCTION_5
0x40000ed	    0x880500000000	               mov byte [0x040000f3], al	       362	rltty.c	FUNCTION_5
0x40000f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	rltty.c	FUNCTION_5
0x40000f7	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       364	rltty.c	FUNCTION_5
0x40000fb	    0x880500000000	               mov byte [0x04000101], al	       364	rltty.c	FUNCTION_5
0x4000101	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	rltty.c	FUNCTION_5
0x4000105	         0xfb6401f	           movzx eax, byte [rax + 0x1f] 	       366	rltty.c	FUNCTION_5
0x4000109	    0x880500000000	               mov byte [0x0400010f], al	       366	rltty.c	FUNCTION_5
0x400010f	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	rltty.c	FUNCTION_5
0x4000113	         0xfb64014	           movzx eax, byte [rax + 0x14] 	       368	rltty.c	FUNCTION_5
0x4000117	    0x880500000000	               mov byte [0x0400011d], al	       368	rltty.c	FUNCTION_5
0x400011d	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	rltty.c	FUNCTION_5
0x4000121	         0xfb6401d	           movzx eax, byte [rax + 0x1d] 	       370	rltty.c	FUNCTION_5
0x4000125	    0x880500000000	               mov byte [0x0400012b], al	       370	rltty.c	FUNCTION_5
0x400012b	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	rltty.c	FUNCTION_5
0x400012f	         0xfb64011	           movzx eax, byte [rax + 0x11] 	       372	rltty.c	FUNCTION_5
0x4000133	    0x880500000000	               mov byte [0x04000139], al	       372	rltty.c	FUNCTION_5
0x4000139	     0xfb605000000	           movzx eax, byte [0x04000140] 	       372	rltty.c	FUNCTION_5
0x4000140	           0xfb6c0	                           movzx eax, al	       372	rltty.c	FUNCTION_5
0x4000143	    0x890500000000	            mov dword [0x04000149], eax 	       372	rltty.c	FUNCTION_5
0x4000149	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	rltty.c	FUNCTION_5
0x400014d	         0xfb64012	           movzx eax, byte [rax + 0x12] 	       373	rltty.c	FUNCTION_5
0x4000151	    0x880500000000	               mov byte [0x04000157], al	       373	rltty.c	FUNCTION_5
0x4000157	     0xfb605000000	           movzx eax, byte [0x0400015e] 	       373	rltty.c	FUNCTION_5
0x400015e	           0xfb6c0	                           movzx eax, al	       373	rltty.c	FUNCTION_5
0x4000161	    0x890500000000	            mov dword [0x04000167], eax 	       373	rltty.c	FUNCTION_5
0x4000167	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	rltty.c	FUNCTION_5
0x400016b	         0xfb6401b	           movzx eax, byte [rax + 0x1b] 	       375	rltty.c	FUNCTION_5
0x400016f	    0x880500000000	               mov byte [0x04000175], al	       375	rltty.c	FUNCTION_5
0x4000175	     0xfb605000000	           movzx eax, byte [0x0400017c] 	       375	rltty.c	FUNCTION_5
0x400017c	           0xfb6c0	                           movzx eax, al	       375	rltty.c	FUNCTION_5
0x400017f	    0x890500000000	            mov dword [0x04000185], eax 	       375	rltty.c	FUNCTION_5
0x4000185	        0x488b45f8	                mov rax, qword [rbp - 8]	       381	rltty.c	FUNCTION_5
0x4000189	         0xfb64019	           movzx eax, byte [rax + 0x19] 	       381	rltty.c	FUNCTION_5
0x400018d	    0x880500000000	               mov byte [0x04000193], al	       381	rltty.c	FUNCTION_5
0x4000193	        0x488b45f8	                mov rax, qword [rbp - 8]	       384	rltty.c	FUNCTION_5
0x4000197	         0xfb6401a	           movzx eax, byte [rax + 0x1a] 	       384	rltty.c	FUNCTION_5
0x400019b	    0x880500000000	               mov byte [0x040001a1], al	       384	rltty.c	FUNCTION_5
0x40001a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       387	rltty.c	FUNCTION_5
0x40001a5	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       387	rltty.c	FUNCTION_5
0x40001a9	    0x880500000000	               mov byte [0x040001af], al	       387	rltty.c	FUNCTION_5
0x40001af	        0x488b45f8	                mov rax, qword [rbp - 8]	       390	rltty.c	FUNCTION_5
0x40001b3	         0xfb6401e	           movzx eax, byte [rax + 0x1e] 	       390	rltty.c	FUNCTION_5
0x40001b7	    0x880500000000	               mov byte [0x040001bd], al	       390	rltty.c	FUNCTION_5
0x40001bd	              0x90	                                     nop	       395	rltty.c	FUNCTION_5
0x40001be	              0x5d	                                 pop rbp	       395	rltty.c	FUNCTION_5
0x40001bf	              0xc3	                                     ret	       395	rltty.c	FUNCTION_5
set_winsize	DO,0:FOR,0:CALL,2:WHILE,0:IF,1:SWITCH,0:functions,0:ELSE,0	28
0x4000040	              0x55	                                push rbp	        79	rltty.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        79	rltty.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        79	rltty.c	FUNCTION_1
0x4000048	          0x897dec	             mov dword [rbp - 0x14], edi	        79	rltty.c	FUNCTION_1
0x400004b	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	rltty.c	FUNCTION_1
0x4000054	        0x488945f8	                mov qword [rbp - 8], rax	        79	rltty.c	FUNCTION_1
0x4000058	            0x31c0	                            xor eax, eax	        79	rltty.c	FUNCTION_1
0x400005a	        0x488d55f0	                   lea rdx, [rbp - 0x10]	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x400005e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000061	      0xbe13540000	                         mov esi, 0x5413	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000066	            0x89c7	                            mov edi, eax	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000068	      0xb800000000	                              mov eax, 0	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x400006d	      0xe800000000	                          call 0x4000072	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000072	            0x85c0	                           test eax, eax	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000074	            0x7518	                           jne 0x400008e	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000076	        0x488d55f0	                   lea rdx, [rbp - 0x10]	        84	rltty.c	FUNCTION_1	CALL_2
0x400007a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        84	rltty.c	FUNCTION_1	CALL_2
0x400007d	      0xbe14540000	                         mov esi, 0x5414	        84	rltty.c	FUNCTION_1	CALL_2
0x4000082	            0x89c7	                            mov edi, eax	        84	rltty.c	FUNCTION_1	CALL_2
0x4000084	      0xb800000000	                              mov eax, 0	        84	rltty.c	FUNCTION_1	CALL_2
0x4000089	      0xe800000000	                          call 0x400008e	        84	rltty.c	FUNCTION_1	CALL_2
0x400008e	              0x90	                                     nop	        86	rltty.c	FUNCTION_1
0x400008f	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	rltty.c	FUNCTION_1
0x4000093	    0x644833042528	                xor rax, qword fs:[0x28]	        86	rltty.c	FUNCTION_1
0x400009c	            0x7405	                            je 0x40000a3	        86	rltty.c	FUNCTION_1
0x400009e	      0xe800000000	                          call 0x40000a3	        86	rltty.c	FUNCTION_1
0x40000a3	              0xc9	                                   leave	        86	rltty.c	FUNCTION_1
0x40000a4	              0xc3	                                     ret	        86	rltty.c	FUNCTION_1
_rl_bind_tty_special_chars	DO,0:FOR,0:CALL,0:WHILE,0:IF,0:SWITCH,0:functions,0:ELSE,0	31
0x4000847	              0x55	                                push rbp	       853	rltty.c	FUNCTION_18
0x4000848	          0x4889e5	                            mov rbp, rsp	       853	rltty.c	FUNCTION_18
0x400084b	        0x4883ec08	                              sub rsp, 8	       853	rltty.c	FUNCTION_18
0x400084f	        0x48897df8	                mov qword [rbp - 8], rdi	       853	rltty.c	FUNCTION_18
0x4000853	        0x488b45f8	                mov rax, qword [rbp - 8]	       854	rltty.c	FUNCTION_18
0x4000857	      0xb900000000	                              mov ecx, 0	       854	rltty.c	FUNCTION_18
0x400085c	      0xba02000000	                              mov edx, 2	       854	rltty.c	FUNCTION_18
0x4000861	        0x488d7510	                   lea rsi, [rbp + 0x10]	       854	rltty.c	FUNCTION_18
0x4000865	          0x4889c7	                            mov rdi, rax	       854	rltty.c	FUNCTION_18
0x4000868	      0xe87affffff	               call sym.set_special_char	       854	rltty.c	FUNCTION_18
0x400086d	        0x488b45f8	                mov rax, qword [rbp - 8]	       855	rltty.c	FUNCTION_18
0x4000871	      0xb900000000	                              mov ecx, 0	       855	rltty.c	FUNCTION_18
0x4000876	      0xba03000000	                              mov edx, 3	       855	rltty.c	FUNCTION_18
0x400087b	        0x488d7510	                   lea rsi, [rbp + 0x10]	       855	rltty.c	FUNCTION_18
0x400087f	          0x4889c7	                            mov rdi, rax	       855	rltty.c	FUNCTION_18
0x4000882	      0xe860ffffff	               call sym.set_special_char	       855	rltty.c	FUNCTION_18
0x4000887	        0x488b45f8	                mov rax, qword [rbp - 8]	       858	rltty.c	FUNCTION_18
0x400088b	      0xb900000000	                              mov ecx, 0	       858	rltty.c	FUNCTION_18
0x4000890	      0xba0f000000	                            mov edx, 0xf	       858	rltty.c	FUNCTION_18
0x4000895	        0x488d7510	                   lea rsi, [rbp + 0x10]	       858	rltty.c	FUNCTION_18
0x4000899	          0x4889c7	                            mov rdi, rax	       858	rltty.c	FUNCTION_18
0x400089c	      0xe846ffffff	               call sym.set_special_char	       858	rltty.c	FUNCTION_18
0x40008a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	rltty.c	FUNCTION_18
0x40008a5	      0xb900000000	                              mov ecx, 0	       862	rltty.c	FUNCTION_18
0x40008aa	      0xba0e000000	                            mov edx, 0xe	       862	rltty.c	FUNCTION_18
0x40008af	        0x488d7510	                   lea rsi, [rbp + 0x10]	       862	rltty.c	FUNCTION_18
0x40008b3	          0x4889c7	                            mov rdi, rax	       862	rltty.c	FUNCTION_18
0x40008b6	      0xe82cffffff	               call sym.set_special_char	       862	rltty.c	FUNCTION_18
0x40008bb	              0x90	                                     nop	       864	rltty.c	FUNCTION_18
0x40008bc	              0xc9	                                   leave	       864	rltty.c	FUNCTION_18
0x40008bd	              0xc3	                                     ret	       864	rltty.c	FUNCTION_18
rl_tty_unset_default_bindings	DO,0:FOR,0:CALL,1:WHILE,0:IF,1:SWITCH,0:functions,0:ELSE,0	87
0x400098b	              0x55	                                push rbp	       901	rltty.c	FUNCTION_21
0x400098c	          0x4889e5	                            mov rbp, rsp	       901	rltty.c	FUNCTION_21
0x400098f	        0x48897df8	                mov qword [rbp - 8], rdi	       901	rltty.c	FUNCTION_21
0x4000993	    0x8b0500000000	            mov eax, dword [0x04000999] 	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000999	      0x2500000400	                        and eax, 0x40000	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x400099e	            0x85c0	                           test eax, eax	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x40009a0	     0xf842a010000	                            je 0x4000ad0	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x40009a6	     0xfb605000000	           movzx eax, byte [0x040009ad] 	       906	rltty.c	FUNCTION_21
0x40009ad	            0x84c0	                             test al, al	       906	rltty.c	FUNCTION_21
0x40009af	            0x743f	                            je 0x40009f0	       906	rltty.c	FUNCTION_21
0x40009b1	     0xfb605000000	           movzx eax, byte [0x040009b8] 	       906	rltty.c	FUNCTION_21
0x40009b8	           0xfb6c0	                           movzx eax, al	       906	rltty.c	FUNCTION_21
0x40009bb	        0x48c1e004	                              shl rax, 4	       906	rltty.c	FUNCTION_21
0x40009bf	          0x4889c2	                            mov rdx, rax	       906	rltty.c	FUNCTION_21
0x40009c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       906	rltty.c	FUNCTION_21
0x40009c6	          0x4801d0	                            add rax, rdx	       906	rltty.c	FUNCTION_21
0x40009c9	           0xfb600	                   movzx eax, byte [rax]	       906	rltty.c	FUNCTION_21
0x40009cc	            0x84c0	                             test al, al	       906	rltty.c	FUNCTION_21
0x40009ce	            0x7520	                           jne 0x40009f0	       906	rltty.c	FUNCTION_21
0x40009d0	     0xfb605000000	           movzx eax, byte [0x040009d7] 	       906	rltty.c	FUNCTION_21
0x40009d7	           0xfb6c0	                           movzx eax, al	       906	rltty.c	FUNCTION_21
0x40009da	        0x48c1e004	                              shl rax, 4	       906	rltty.c	FUNCTION_21
0x40009de	          0x4889c2	                            mov rdx, rax	       906	rltty.c	FUNCTION_21
0x40009e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       906	rltty.c	FUNCTION_21
0x40009e5	          0x4801d0	                            add rax, rdx	       906	rltty.c	FUNCTION_21
0x40009e8	    0x48c740080000	                  mov qword [rax + 8], 0	       906	rltty.c	FUNCTION_21
0x40009f0	     0xfb605000000	           movzx eax, byte [0x040009f7] 	       907	rltty.c	FUNCTION_21
0x40009f7	            0x84c0	                             test al, al	       907	rltty.c	FUNCTION_21
0x40009f9	            0x743f	                            je 0x4000a3a	       907	rltty.c	FUNCTION_21
0x40009fb	     0xfb605000000	           movzx eax, byte [0x04000a02] 	       907	rltty.c	FUNCTION_21
0x4000a02	           0xfb6c0	                           movzx eax, al	       907	rltty.c	FUNCTION_21
0x4000a05	        0x48c1e004	                              shl rax, 4	       907	rltty.c	FUNCTION_21
0x4000a09	          0x4889c2	                            mov rdx, rax	       907	rltty.c	FUNCTION_21
0x4000a0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       907	rltty.c	FUNCTION_21
0x4000a10	          0x4801d0	                            add rax, rdx	       907	rltty.c	FUNCTION_21
0x4000a13	           0xfb600	                   movzx eax, byte [rax]	       907	rltty.c	FUNCTION_21
0x4000a16	            0x84c0	                             test al, al	       907	rltty.c	FUNCTION_21
0x4000a18	            0x7520	                           jne 0x4000a3a	       907	rltty.c	FUNCTION_21
0x4000a1a	     0xfb605000000	           movzx eax, byte [0x04000a21] 	       907	rltty.c	FUNCTION_21
0x4000a21	           0xfb6c0	                           movzx eax, al	       907	rltty.c	FUNCTION_21
0x4000a24	        0x48c1e004	                              shl rax, 4	       907	rltty.c	FUNCTION_21
0x4000a28	          0x4889c2	                            mov rdx, rax	       907	rltty.c	FUNCTION_21
0x4000a2b	        0x488b45f8	                mov rax, qword [rbp - 8]	       907	rltty.c	FUNCTION_21
0x4000a2f	          0x4801d0	                            add rax, rdx	       907	rltty.c	FUNCTION_21
0x4000a32	    0x48c740080000	                  mov qword [rax + 8], 0	       907	rltty.c	FUNCTION_21
0x4000a3a	     0xfb605000000	           movzx eax, byte [0x04000a41] 	       910	rltty.c	FUNCTION_21
0x4000a41	            0x84c0	                             test al, al	       910	rltty.c	FUNCTION_21
0x4000a43	            0x743f	                            je 0x4000a84	       910	rltty.c	FUNCTION_21
0x4000a45	     0xfb605000000	           movzx eax, byte [0x04000a4c] 	       910	rltty.c	FUNCTION_21
0x4000a4c	           0xfb6c0	                           movzx eax, al	       910	rltty.c	FUNCTION_21
0x4000a4f	        0x48c1e004	                              shl rax, 4	       910	rltty.c	FUNCTION_21
0x4000a53	          0x4889c2	                            mov rdx, rax	       910	rltty.c	FUNCTION_21
0x4000a56	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	rltty.c	FUNCTION_21
0x4000a5a	          0x4801d0	                            add rax, rdx	       910	rltty.c	FUNCTION_21
0x4000a5d	           0xfb600	                   movzx eax, byte [rax]	       910	rltty.c	FUNCTION_21
0x4000a60	            0x84c0	                             test al, al	       910	rltty.c	FUNCTION_21
0x4000a62	            0x7520	                           jne 0x4000a84	       910	rltty.c	FUNCTION_21
0x4000a64	     0xfb605000000	           movzx eax, byte [0x04000a6b] 	       910	rltty.c	FUNCTION_21
0x4000a6b	           0xfb6c0	                           movzx eax, al	       910	rltty.c	FUNCTION_21
0x4000a6e	        0x48c1e004	                              shl rax, 4	       910	rltty.c	FUNCTION_21
0x4000a72	          0x4889c2	                            mov rdx, rax	       910	rltty.c	FUNCTION_21
0x4000a75	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	rltty.c	FUNCTION_21
0x4000a79	          0x4801d0	                            add rax, rdx	       910	rltty.c	FUNCTION_21
0x4000a7c	    0x48c740080000	                  mov qword [rax + 8], 0	       910	rltty.c	FUNCTION_21
0x4000a84	     0xfb605000000	           movzx eax, byte [0x04000a8b] 	       914	rltty.c	FUNCTION_21
0x4000a8b	            0x84c0	                             test al, al	       914	rltty.c	FUNCTION_21
0x4000a8d	            0x7442	                            je 0x4000ad1	       914	rltty.c	FUNCTION_21
0x4000a8f	     0xfb605000000	           movzx eax, byte [0x04000a96] 	       914	rltty.c	FUNCTION_21
0x4000a96	           0xfb6c0	                           movzx eax, al	       914	rltty.c	FUNCTION_21
0x4000a99	        0x48c1e004	                              shl rax, 4	       914	rltty.c	FUNCTION_21
0x4000a9d	          0x4889c2	                            mov rdx, rax	       914	rltty.c	FUNCTION_21
0x4000aa0	        0x488b45f8	                mov rax, qword [rbp - 8]	       914	rltty.c	FUNCTION_21
0x4000aa4	          0x4801d0	                            add rax, rdx	       914	rltty.c	FUNCTION_21
0x4000aa7	           0xfb600	                   movzx eax, byte [rax]	       914	rltty.c	FUNCTION_21
0x4000aaa	            0x84c0	                             test al, al	       914	rltty.c	FUNCTION_21
0x4000aac	            0x7523	                           jne 0x4000ad1	       914	rltty.c	FUNCTION_21
0x4000aae	     0xfb605000000	           movzx eax, byte [0x04000ab5] 	       914	rltty.c	FUNCTION_21
0x4000ab5	           0xfb6c0	                           movzx eax, al	       914	rltty.c	FUNCTION_21
0x4000ab8	        0x48c1e004	                              shl rax, 4	       914	rltty.c	FUNCTION_21
0x4000abc	          0x4889c2	                            mov rdx, rax	       914	rltty.c	FUNCTION_21
0x4000abf	        0x488b45f8	                mov rax, qword [rbp - 8]	       914	rltty.c	FUNCTION_21
0x4000ac3	          0x4801d0	                            add rax, rdx	       914	rltty.c	FUNCTION_21
0x4000ac6	    0x48c740080000	                  mov qword [rax + 8], 0	       914	rltty.c	FUNCTION_21
0x4000ace	            0xeb01	                           jmp 0x4000ad1	       914	rltty.c	FUNCTION_21
0x4000ad0	              0x90	                                     nop	       904	rltty.c	FUNCTION_21	IF_1
0x4000ad1	              0x5d	                                 pop rbp	       916	rltty.c	FUNCTION_21
0x4000ad2	              0xc3	                                     ret	       916	rltty.c	FUNCTION_21
set_tty_settings	DO,0:FOR,0:CALL,4:WHILE,0:IF,2:SWITCH,0:functions,0:ELSE,0	17
0x40002cc	              0x55	                                push rbp	       489	rltty.c	FUNCTION_10
0x40002cd	          0x4889e5	                            mov rbp, rsp	       489	rltty.c	FUNCTION_10
0x40002d0	        0x4883ec10	                           sub rsp, 0x10	       489	rltty.c	FUNCTION_10
0x40002d4	          0x897dfc	                mov dword [rbp - 4], edi	       489	rltty.c	FUNCTION_10
0x40002d7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       489	rltty.c	FUNCTION_10
0x40002db	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40002df	          0x8b45fc	                mov eax, dword [rbp - 4]	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40002e2	          0x4889d6	                            mov rsi, rdx	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40002e5	            0x89c7	                            mov edi, eax	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40002e7	      0xe893ffffff	              call sym._set_tty_settings	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40002ec	            0x85c0	                           test eax, eax	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40002ee	            0x7907	                           jns 0x40002f7	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40002f0	      0xb8ffffffff	                     mov eax, 0xffffffff	       491	rltty.c	FUNCTION_10	IF_1
0x40002f5	            0xeb05	                           jmp 0x40002fc	       491	rltty.c	FUNCTION_10	IF_1
0x40002f7	      0xb800000000	                              mov eax, 0	       511	rltty.c	FUNCTION_10
0x40002fc	              0xc9	                                   leave	       512	rltty.c	FUNCTION_10
0x40002fd	              0xc3	                                     ret	       512	rltty.c	FUNCTION_10
_rl_restore_tty_signals	DO,0:FOR,0:CALL,2:WHILE,0:IF,2:SWITCH,0:functions,0:ELSE,0	21
0x4000bed	              0x55	                                push rbp	       960	rltty.c	FUNCTION_25
0x4000bee	          0x4889e5	                            mov rbp, rsp	       960	rltty.c	FUNCTION_25
0x4000bf1	        0x4883ec10	                           sub rsp, 0x10	       960	rltty.c	FUNCTION_25
0x4000bf5	    0x8b0500000000	            mov eax, dword [0x04000bfb] 	       963	rltty.c	FUNCTION_25	IF_1
0x4000bfb	            0x85c0	                           test eax, eax	       963	rltty.c	FUNCTION_25	IF_1
0x4000bfd	            0x7507	                           jne 0x4000c06	       963	rltty.c	FUNCTION_25	IF_1
0x4000bff	      0xb800000000	                              mov eax, 0	       964	rltty.c	FUNCTION_25	IF_1
0x4000c04	            0xeb31	                           jmp 0x4000c37	       964	rltty.c	FUNCTION_25	IF_1
0x4000c06	    0x488b05000000	            mov rax, qword [0x04000c0d] 	       966	rltty.c	FUNCTION_25	CALL_2
0x4000c0d	          0x4889c7	                            mov rdi, rax	       966	rltty.c	FUNCTION_25	CALL_2
0x4000c10	      0xe800000000	                          call 0x4000c15	       966	rltty.c	FUNCTION_25	CALL_2
0x4000c15	      0xbe00000000	                              mov esi, 0	       966	rltty.c	FUNCTION_25	CALL_2
0x4000c1a	            0x89c7	                            mov edi, eax	       966	rltty.c	FUNCTION_25	CALL_2
0x4000c1c	      0xe85ef6ffff	              call sym._set_tty_settings	       966	rltty.c	FUNCTION_25	CALL_2
0x4000c21	          0x8945fc	                mov dword [rbp - 4], eax	       966	rltty.c	FUNCTION_25	CALL_2
0x4000c24	        0x837dfc00	                  cmp dword [rbp - 4], 0	       968	rltty.c	FUNCTION_25	IF_2
0x4000c28	            0x750a	                           jne 0x4000c34	       968	rltty.c	FUNCTION_25	IF_2
0x4000c2a	    0xc70500000000	               mov dword [0x04000c34], 0	       969	rltty.c	FUNCTION_25	IF_2
0x4000c34	          0x8b45fc	                mov eax, dword [rbp - 4]	       971	rltty.c	FUNCTION_25
0x4000c37	              0xc9	                                   leave	       972	rltty.c	FUNCTION_25
0x4000c38	              0xc3	                                     ret	       972	rltty.c	FUNCTION_25
