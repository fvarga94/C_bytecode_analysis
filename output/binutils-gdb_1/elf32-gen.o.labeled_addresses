check_for_relocs	FOR,0:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0:CALL,4	37
0x4000086	              0x55	                                push rbp	        64	elf32-gen.c	FUNCTION_3
0x4000087	          0x4889e5	                            mov rbp, rsp	        64	elf32-gen.c	FUNCTION_3
0x400008a	              0x53	                                push rbx	        64	elf32-gen.c	FUNCTION_3
0x400008b	        0x4883ec38	                           sub rsp, 0x38	        64	elf32-gen.c	FUNCTION_3
0x400008f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        64	elf32-gen.c	FUNCTION_3
0x4000093	        0x488975d0	             mov qword [rbp - 0x30], rsi	        64	elf32-gen.c	FUNCTION_3
0x4000097	        0x488955c8	             mov qword [rbp - 0x38], rdx	        64	elf32-gen.c	FUNCTION_3
0x400009b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        65	elf32-gen.c	FUNCTION_3	IF_1
0x400009f	          0x8b4020	            mov eax, dword [rax + 0x20] 	        65	elf32-gen.c	FUNCTION_3	IF_1
0x40000a2	          0x83e004	                              and eax, 4	        65	elf32-gen.c	FUNCTION_3	IF_1
0x40000a5	            0x85c0	                           test eax, eax	        65	elf32-gen.c	FUNCTION_3	IF_1
0x40000a7	            0x7456	                            je 0x40000ff	        65	elf32-gen.c	FUNCTION_3	IF_1
0x40000a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        69	elf32-gen.c	FUNCTION_3	IF_1	CALL_1
0x40000ad	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        69	elf32-gen.c	FUNCTION_3	IF_1	CALL_1
0x40000b4	        0x488945e8	             mov qword [rbp - 0x18], rax	        69	elf32-gen.c	FUNCTION_3	IF_1	CALL_1
0x40000b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	elf32-gen.c	FUNCTION_3	IF_1
0x40000bc	         0xfb7403a	           movzx eax, word [rax + 0x3a] 	        72	elf32-gen.c	FUNCTION_3	IF_1
0x40000c0	           0xfb7d8	                           movzx ebx, ax	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000c3	      0xbe00000000	                              mov esi, 0	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000c8	      0xbf00000000	                              mov edi, 0	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000cd	      0xe800000000	                          call 0x40000d2	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000d2	          0x4889c1	                            mov rcx, rax	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000d9	            0x89da	                            mov edx, ebx	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000db	          0x4889c6	                            mov rsi, rax	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000de	          0x4889cf	                            mov rdi, rcx	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000e1	      0xb800000000	                              mov eax, 0	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000e6	      0xe800000000	                          call 0x40000eb	        71	elf32-gen.c	FUNCTION_3	IF_1	CALL_3
0x40000eb	      0xbf03000000	                              mov edi, 3	        74	elf32-gen.c	FUNCTION_3	IF_1	CALL_4
0x40000f0	      0xe800000000	                          call 0x40000f5	        74	elf32-gen.c	FUNCTION_3	IF_1	CALL_4
0x40000f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        75	elf32-gen.c	FUNCTION_3	IF_1
0x40000f9	    0xc70001000000	                      mov dword [rax], 1	        75	elf32-gen.c	FUNCTION_3	IF_1
0x40000ff	              0x90	                                     nop	        77	elf32-gen.c	FUNCTION_3
0x4000100	        0x4883c438	                           add rsp, 0x38	        77	elf32-gen.c	FUNCTION_3
0x4000104	              0x5b	                                 pop rbx	        77	elf32-gen.c	FUNCTION_3
0x4000105	              0x5d	                                 pop rbp	        77	elf32-gen.c	FUNCTION_3
0x4000106	              0xc3	                                     ret	        77	elf32-gen.c	FUNCTION_3
elf32_generic_link_add_symbols	FOR,0:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0:CALL,2	30
0x4000107	              0x55	                                push rbp	        81	elf32-gen.c	FUNCTION_4
0x4000108	          0x4889e5	                            mov rbp, rsp	        81	elf32-gen.c	FUNCTION_4
0x400010b	        0x4883ec20	                           sub rsp, 0x20	        81	elf32-gen.c	FUNCTION_4
0x400010f	        0x48897de8	             mov qword [rbp - 0x18], rdi	        81	elf32-gen.c	FUNCTION_4
0x4000113	        0x488975e0	             mov qword [rbp - 0x20], rsi	        81	elf32-gen.c	FUNCTION_4
0x4000117	    0x64488b042528	                mov rax, qword fs:[0x28]	        81	elf32-gen.c	FUNCTION_4
0x4000120	        0x488945f8	                mov qword [rbp - 8], rax	        81	elf32-gen.c	FUNCTION_4
0x4000124	            0x31c0	                            xor eax, eax	        81	elf32-gen.c	FUNCTION_4
0x4000126	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        82	elf32-gen.c	FUNCTION_4
0x400012d	        0x488d55f4	                    lea rdx, [rbp - 0xc]	        85	elf32-gen.c	FUNCTION_4	CALL_1
0x4000131	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	elf32-gen.c	FUNCTION_4	CALL_1
0x4000135	      0xbe00000000	                              mov esi, 0	        85	elf32-gen.c	FUNCTION_4	CALL_1
0x400013a	          0x4889c7	                            mov rdi, rax	        85	elf32-gen.c	FUNCTION_4	CALL_1
0x400013d	      0xe800000000	                          call 0x4000142	        85	elf32-gen.c	FUNCTION_4	CALL_1
0x4000142	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        87	elf32-gen.c	FUNCTION_4	IF_1
0x4000145	            0x85c0	                           test eax, eax	        87	elf32-gen.c	FUNCTION_4	IF_1
0x4000147	            0x7407	                            je 0x4000150	        87	elf32-gen.c	FUNCTION_4	IF_1
0x4000149	      0xb800000000	                              mov eax, 0	        88	elf32-gen.c	FUNCTION_4	IF_1
0x400014e	            0xeb13	                           jmp 0x4000163	        88	elf32-gen.c	FUNCTION_4	IF_1
0x4000150	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        89	elf32-gen.c	FUNCTION_4	CALL_2
0x4000154	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	elf32-gen.c	FUNCTION_4	CALL_2
0x4000158	          0x4889d6	                            mov rsi, rdx	        89	elf32-gen.c	FUNCTION_4	CALL_2
0x400015b	          0x4889c7	                            mov rdi, rax	        89	elf32-gen.c	FUNCTION_4	CALL_2
0x400015e	      0xe800000000	                          call 0x4000163	        89	elf32-gen.c	FUNCTION_4	CALL_2
0x4000163	        0x488b4df8	                mov rcx, qword [rbp - 8]	        90	elf32-gen.c	FUNCTION_4
0x4000167	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        90	elf32-gen.c	FUNCTION_4
0x4000170	            0x7405	                            je 0x4000177	        90	elf32-gen.c	FUNCTION_4
0x4000172	      0xe800000000	                          call 0x4000177	        90	elf32-gen.c	FUNCTION_4
0x4000177	              0xc9	                                   leave	        90	elf32-gen.c	FUNCTION_4
0x4000178	              0xc3	                                     ret	        90	elf32-gen.c	FUNCTION_4
elf_generic_info_to_howto_rel	FOR,0:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:CALL,0	10
0x4000063	              0x55	                                push rbp	        57	elf32-gen.c	FUNCTION_2
0x4000064	          0x4889e5	                            mov rbp, rsp	        57	elf32-gen.c	FUNCTION_2
0x4000067	        0x48897df8	                mov qword [rbp - 8], rdi	        57	elf32-gen.c	FUNCTION_2
0x400006b	        0x488975f0	             mov qword [rbp - 0x10], rsi	        57	elf32-gen.c	FUNCTION_2
0x400006f	        0x488955e8	             mov qword [rbp - 0x18], rdx	        57	elf32-gen.c	FUNCTION_2
0x4000073	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        58	elf32-gen.c	FUNCTION_2
0x4000077	    0x48c740180000	               mov qword [rax + 0x18], 0	        58	elf32-gen.c	FUNCTION_2
0x400007f	      0xb801000000	                              mov eax, 1	        59	elf32-gen.c	FUNCTION_2
0x4000084	              0x5d	                                 pop rbp	        60	elf32-gen.c	FUNCTION_2
0x4000085	              0xc3	                                     ret	        60	elf32-gen.c	FUNCTION_2
elf_generic_info_to_howto	FOR,0:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:CALL,0	10
0x4000040	              0x55	                                push rbp	        48	elf32-gen.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        48	elf32-gen.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        48	elf32-gen.c	FUNCTION_1
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	        48	elf32-gen.c	FUNCTION_1
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	        48	elf32-gen.c	FUNCTION_1
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        49	elf32-gen.c	FUNCTION_1
0x4000054	    0x48c740180000	               mov qword [rax + 0x18], 0	        49	elf32-gen.c	FUNCTION_1
0x400005c	      0xb801000000	                              mov eax, 1	        50	elf32-gen.c	FUNCTION_1
0x4000061	              0x5d	                                 pop rbp	        51	elf32-gen.c	FUNCTION_1
0x4000062	              0xc3	                                     ret	        51	elf32-gen.c	FUNCTION_1
