f_type_print_base	SWITCH,1:CALL,62:IF,11:ELSE,6:DO,0:FOR,1:functions,0:WHILE,0	265
0x40002e0	            0x4157	                                push r15	       275	f-typeprint.c	FUNCTION_4
0x40002e2	            0x4156	                                push r14	       275	f-typeprint.c	FUNCTION_4
0x40002e4	            0x4155	                                push r13	       275	f-typeprint.c	FUNCTION_4
0x40002e6	            0x4154	                                push r12	       275	f-typeprint.c	FUNCTION_4
0x40002e8	          0x4189cd	                           mov r13d, ecx	       275	f-typeprint.c	FUNCTION_4
0x40002eb	              0x55	                                push rbp	       275	f-typeprint.c	FUNCTION_4
0x40002ec	              0x53	                                push rbx	       275	f-typeprint.c	FUNCTION_4
0x40002ed	          0x4889fd	                            mov rbp, rdi	       275	f-typeprint.c	FUNCTION_4
0x40002f0	          0x4889f3	                            mov rbx, rsi	       275	f-typeprint.c	FUNCTION_4
0x40002f3	          0x4189d4	                           mov r12d, edx	       275	f-typeprint.c	FUNCTION_4
0x40002f6	        0x4883ec18	                           sub rsp, 0x18	       275	f-typeprint.c	FUNCTION_4
0x40002fa	      0xe800000000	                          call 0x40002ff	       279	f-typeprint.c	FUNCTION_4
0x40002ff	      0xbf00000000	                              mov edi, 0	       281	f-typeprint.c	FUNCTION_4	CALL_1
0x4000304	      0xe800000000	                          call 0x4000309	       281	f-typeprint.c	FUNCTION_4	CALL_1
0x4000309	          0x4885ed	                           test rbp, rbp	       282	f-typeprint.c	FUNCTION_4	IF_1
0x400030c	     0xf845e030000	                            je 0x4000670	       282	f-typeprint.c	FUNCTION_4	IF_1
0x4000312	          0x4585e4	                         test r12d, r12d	       291	f-typeprint.c	FUNCTION_4	IF_2	CALL_3
0x4000315	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       291	f-typeprint.c	FUNCTION_4	IF_2	CALL_3
0x4000319	            0x7e45	                           jle 0x4000360	       291	f-typeprint.c	FUNCTION_4	IF_2	CALL_3
0x400031b	          0x803817	                    cmp byte [rax], 0x17	       302	f-typeprint.c	FUNCTION_4	IF_5	CALL_8
0x400031e	            0x7510	                           jne 0x4000330	       302	f-typeprint.c	FUNCTION_4	IF_5	CALL_8
0x4000320	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       308	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_12
0x4000324	          0x4531e4	                          xor r12d, r12d	       308	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_12
0x4000327	            0xebd1	                           jmp 0x40002fa	       309	f-typeprint.c	FUNCTION_4	SWITCH_1
0x4000329	     0xf1f80000000	                         nop dword [rax]	       309	f-typeprint.c	FUNCTION_4	SWITCH_1
0x4000330	          0x4889ef	                            mov rdi, rbp	       303	f-typeprint.c	FUNCTION_4	CALL_9
0x4000333	      0xe800000000	                          call 0x4000338	       303	f-typeprint.c	FUNCTION_4	CALL_9
0x4000338	          0x4889c5	                            mov rbp, rax	       303	f-typeprint.c	FUNCTION_4	CALL_9
0x400033b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       305	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_10
0x400033f	        0x440fb630	                  movzx r14d, byte [rax]	       305	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_10
0x4000343	        0x4180fe1a	                          cmp r14b, 0x1a	       305	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_10
0x4000347	     0xf87e3020000	                            ja 0x4000630	       305	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_10
0x400034d	        0x410fb6d6	                         movzx edx, r14b	       305	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_10
0x4000351	    0xff24d5000000	                       jmp qword [rdx*8]	       305	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_10
0x4000358	     0xf1f84000000	                   nop dword [rax + rax]	       305	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_10
0x4000360	        0x4c8b4008	                 mov r8, qword [rax + 8]	       291	f-typeprint.c	FUNCTION_4	IF_2	CALL_3
0x4000364	          0x4d85c0	                             test r8, r8	       291	f-typeprint.c	FUNCTION_4	IF_2	CALL_3
0x4000367	            0x74b2	                            je 0x400031b	       291	f-typeprint.c	FUNCTION_4	IF_2	CALL_3
0x4000369	           0xfb600	                   movzx eax, byte [rax]	       294	f-typeprint.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400036c	            0x3c04	                               cmp al, 4	       294	f-typeprint.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400036e	     0xf8423030000	                            je 0x4000697	       294	f-typeprint.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000374	            0x3c03	                               cmp al, 3	       293	f-typeprint.c	FUNCTION_4	IF_2
0x4000376	      0xb900000000	                              mov ecx, 0	       293	f-typeprint.c	FUNCTION_4	IF_2
0x400037b	      0xb800000000	                              mov eax, 0	       293	f-typeprint.c	FUNCTION_4	IF_2
0x4000380	        0x480f44c8	                          cmove rcx, rax	       293	f-typeprint.c	FUNCTION_4	IF_2
0x4000384	        0x4883c418	                           add rsp, 0x18	       415	f-typeprint.c	FUNCTION_4
0x4000388	          0x4889de	                            mov rsi, rbx	       298	f-typeprint.c	FUNCTION_4	IF_2	CALL_7
0x400038b	          0x4489ef	                           mov edi, r13d	       298	f-typeprint.c	FUNCTION_4	IF_2	CALL_7
0x400038e	              0x5b	                                 pop rbx	       415	f-typeprint.c	FUNCTION_4
0x400038f	              0x5d	                                 pop rbp	       415	f-typeprint.c	FUNCTION_4
0x4000390	            0x415c	                                 pop r12	       415	f-typeprint.c	FUNCTION_4
0x4000392	            0x415d	                                 pop r13	       415	f-typeprint.c	FUNCTION_4
0x4000394	            0x415e	                                 pop r14	       415	f-typeprint.c	FUNCTION_4
0x4000396	            0x415f	                                 pop r15	       415	f-typeprint.c	FUNCTION_4
0x4000398	      0xba00000000	                              mov edx, 0	       298	f-typeprint.c	FUNCTION_4	IF_2	CALL_7
0x400039d	            0x31c0	                            xor eax, eax	       298	f-typeprint.c	FUNCTION_4	IF_2	CALL_7
0x400039f	      0xe900000000	                           jmp 0x40003a4	       298	f-typeprint.c	FUNCTION_4	IF_2	CALL_7
0x40003a4	         0xf1f4000	                         nop dword [rax]	       298	f-typeprint.c	FUNCTION_4	IF_2	CALL_7
0x40003a8	        0x488b4808	                mov rcx, qword [rax + 8]	       400	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_56
0x40003ac	      0xba00000000	                              mov edx, 0	       400	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_56
0x40003b1	        0x4883c418	                           add rsp, 0x18	       415	f-typeprint.c	FUNCTION_4
0x40003b5	          0x4889de	                            mov rsi, rbx	       400	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_56
0x40003b8	          0x4489ef	                           mov edi, r13d	       400	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_56
0x40003bb	              0x5b	                                 pop rbx	       415	f-typeprint.c	FUNCTION_4
0x40003bc	              0x5d	                                 pop rbp	       415	f-typeprint.c	FUNCTION_4
0x40003bd	            0x415c	                                 pop r12	       415	f-typeprint.c	FUNCTION_4
0x40003bf	            0x415d	                                 pop r13	       415	f-typeprint.c	FUNCTION_4
0x40003c1	            0x415e	                                 pop r14	       415	f-typeprint.c	FUNCTION_4
0x40003c3	            0x415f	                                 pop r15	       415	f-typeprint.c	FUNCTION_4
0x40003c5	            0x31c0	                            xor eax, eax	       400	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_56
0x40003c7	      0xe900000000	                           jmp 0x40003cc	       400	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_56
0x40003cc	         0xf1f4000	                         nop dword [rax]	       400	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_56
0x40003d0	      0xba00000000	                              mov edx, 0	       336	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_26
0x40003d5	        0x4883c418	                           add rsp, 0x18	       415	f-typeprint.c	FUNCTION_4
0x40003d9	          0x4889de	                            mov rsi, rbx	       336	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_26
0x40003dc	          0x4489ef	                           mov edi, r13d	       336	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_26
0x40003df	              0x5b	                                 pop rbx	       415	f-typeprint.c	FUNCTION_4
0x40003e0	              0x5d	                                 pop rbp	       415	f-typeprint.c	FUNCTION_4
0x40003e1	            0x415c	                                 pop r12	       415	f-typeprint.c	FUNCTION_4
0x40003e3	            0x415d	                                 pop r13	       415	f-typeprint.c	FUNCTION_4
0x40003e5	            0x415e	                                 pop r14	       415	f-typeprint.c	FUNCTION_4
0x40003e7	            0x415f	                                 pop r15	       415	f-typeprint.c	FUNCTION_4
0x40003e9	            0x31c0	                            xor eax, eax	       336	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_26
0x40003eb	      0xe900000000	                           jmp 0x40003f0	       336	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_26
0x40003f0	      0xba00000000	                              mov edx, 0	       322	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_19
0x40003f5	          0x4489ef	                           mov edi, r13d	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x40003f8	            0x31c0	                            xor eax, eax	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x40003fa	          0x4889de	                            mov rsi, rbx	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x40003fd	      0xe800000000	                          call 0x4000402	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000402	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       328	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000406	          0x4531ed	                          xor r13d, r13d	       328	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000409	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       328	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_24
0x400040d	      0xe9e8feffff	                           jmp 0x40002fa	       329	f-typeprint.c	FUNCTION_4	SWITCH_1
0x4000412	    0x660f1f440000	                    nop word [rax + rax]	       329	f-typeprint.c	FUNCTION_4	SWITCH_1
0x4000418	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       312	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_14
0x400041c	      0xe9d9feffff	                           jmp 0x40002fa	       313	f-typeprint.c	FUNCTION_4	SWITCH_1
0x4000421	     0xf1f80000000	                         nop dword [rax]	       313	f-typeprint.c	FUNCTION_4	SWITCH_1
0x4000428	        0x4180fe04	                             cmp r14b, 4	       374	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_9	CALL_37
0x400042c	     0xf844e020000	                            je 0x4000680	       374	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_9	CALL_37
0x4000432	      0xba00000000	                              mov edx, 0	       377	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_39
0x4000437	          0x4889de	                            mov rsi, rbx	       377	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_39
0x400043a	          0x4489ef	                           mov edi, r13d	       377	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_39
0x400043d	            0x31c0	                            xor eax, eax	       377	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_39
0x400043f	      0xe800000000	                          call 0x4000444	       377	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_39
0x4000444	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       378	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_41
0x4000448	          0x4889de	                            mov rsi, rbx	       378	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_41
0x400044b	        0x488b7808	                mov rdi, qword [rax + 8]	       378	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_41
0x400044f	      0xe800000000	                          call 0x4000454	       378	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_41
0x4000454	          0x4585e4	                         test r12d, r12d	       381	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10
0x4000457	     0xf8efb010000	                           jle 0x4000658	       381	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10
0x400045d	          0x4889de	                            mov rsi, rbx	       383	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_42
0x4000460	      0xbf00000000	                              mov edi, 0	       383	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_42
0x4000465	      0xe800000000	                          call 0x400046a	       383	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_42
0x400046a	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x400046e	      0x66837a0400	                   cmp word [rdx + 4], 0	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000473	     0xf8e96000000	                           jle 0x400050f	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000479	        0x418d4504	                      lea eax, [r13 + 4]	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x400047d	        0x4183ec01	                             sub r12d, 1	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000481	          0x4531ff	                          xor r15d, r15d	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000484	        0x8944240c	              mov dword [rsp + 0xc], eax	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000488	     0xf1f84000000	                   nop dword [rax + rax]	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000490	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       386	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_45
0x4000494	          0x4d89fe	                            mov r14, r15	       386	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_45
0x4000497	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       387	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x400049b	        0x49c1e605	                              shl r14, 5	       387	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x400049f	          0x4889de	                            mov rsi, rbx	       387	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004a2	      0x4a8b7c3210	      mov rdi, qword [rdx + r14 + 0x10] 	       387	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004a7	          0x4489e2	                           mov edx, r12d	       387	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004aa	      0xe800000000	                          call 0x40004af	       387	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004af	          0x4889de	                            mov rsi, rbx	       388	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_46
0x40004b2	      0xbf00000000	                              mov edi, 0	       388	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_46
0x40004b7	      0xe800000000	                          call 0x40004bc	       388	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_46
0x40004bc	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       389	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_48
0x40004c0	          0x4889de	                            mov rsi, rbx	       389	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_48
0x40004c3	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       389	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_48
0x40004c7	      0x4a8b7c3218	      mov rdi, qword [rdx + r14 + 0x18] 	       389	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_48
0x40004cc	      0xe800000000	                          call 0x40004d1	       389	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_48
0x40004d1	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       390	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_50
0x40004d5	            0x31c9	                            xor ecx, ecx	       391	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004d7	          0x4531c0	                            xor r8d, r8d	       391	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004da	          0x4889de	                            mov rsi, rbx	       391	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004dd	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       390	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_50
0x40004e1	      0x4a8b7c3210	      mov rdi, qword [rdx + r14 + 0x10] 	       391	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004e6	          0x4489e2	                           mov edx, r12d	       391	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004e9	      0xe852fbffff	call sym.f_type_print_varspec_suffix_type__ui_file__int_int_int_int__clone.isra.0__clone.constprop.1	       391	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1
0x40004ee	          0x4889de	                            mov rsi, rbx	       392	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_51
0x40004f1	      0xbf00000000	                              mov edi, 0	       392	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_51
0x40004f6	      0xe800000000	                          call 0x40004fb	       392	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_51
0x40004fb	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x40004ff	        0x418d4f01	                      lea ecx, [r15 + 1]	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000503	        0x4983c701	                              add r15, 1	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x4000507	         0xfbf7204	               movsx esi, word [rdx + 4]	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x400050b	            0x39ce	                            cmp esi, ecx	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x400050d	            0x7f81	                            jg 0x4000490	       384	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	FOR_1	CALL_43
0x400050f	          0x4889de	                            mov rsi, rbx	       394	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_52
0x4000512	          0x4489ef	                           mov edi, r13d	       394	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_52
0x4000515	            0x31c0	                            xor eax, eax	       394	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_52
0x4000517	      0xba00000000	                              mov edx, 0	       394	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_52
0x400051c	      0xe800000000	                          call 0x4000521	       394	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_52
0x4000521	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       395	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_54
0x4000525	          0x4889de	                            mov rsi, rbx	       395	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_54
0x4000528	        0x488b7808	                mov rdi, qword [rax + 8]	       395	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_54
0x400052c	        0x4883c418	                           add rsp, 0x18	       415	f-typeprint.c	FUNCTION_4
0x4000530	              0x5b	                                 pop rbx	       415	f-typeprint.c	FUNCTION_4
0x4000531	              0x5d	                                 pop rbp	       415	f-typeprint.c	FUNCTION_4
0x4000532	            0x415c	                                 pop r12	       415	f-typeprint.c	FUNCTION_4
0x4000534	            0x415d	                                 pop r13	       415	f-typeprint.c	FUNCTION_4
0x4000536	            0x415e	                                 pop r14	       415	f-typeprint.c	FUNCTION_4
0x4000538	            0x415f	                                 pop r15	       415	f-typeprint.c	FUNCTION_4
0x400053a	      0xe900000000	                           jmp 0x400053f	       395	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_54
0x400053f	              0x90	                                     nop	       395	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_10	CALL_54
0x4000540	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       315	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_6	CALL_15
0x4000544	          0x4885ed	                           test rbp, rbp	       315	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_6	CALL_15
0x4000547	     0xf85adfdffff	                           jne 0x40002fa	       315	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_6	CALL_15
0x400054d	        0x4883c418	                           add rsp, 0x18	       415	f-typeprint.c	FUNCTION_4
0x4000551	          0x4889df	                            mov rdi, rbx	       316	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000554	              0x5b	                                 pop rbx	       415	f-typeprint.c	FUNCTION_4
0x4000555	              0x5d	                                 pop rbp	       415	f-typeprint.c	FUNCTION_4
0x4000556	            0x415c	                                 pop r12	       415	f-typeprint.c	FUNCTION_4
0x4000558	            0x415d	                                 pop r13	       415	f-typeprint.c	FUNCTION_4
0x400055a	            0x415e	                                 pop r14	       415	f-typeprint.c	FUNCTION_4
0x400055c	            0x415f	                                 pop r15	       415	f-typeprint.c	FUNCTION_4
0x400055e	      0xe900000000	                           jmp 0x4000563	       316	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000563	       0xf1f440000	                   nop dword [rax + rax]	       316	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000568	        0x488b4008	                mov rax, qword [rax + 8]	       354	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_7	CALL_31
0x400056c	      0xbf00000000	                              mov edi, 0	       354	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_7	CALL_31
0x4000571	      0xb905000000	                              mov ecx, 5	       354	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_7	CALL_31
0x4000576	      0xba00000000	                              mov edx, 0	       355	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_32
0x400057b	          0x4889c6	                            mov rsi, rax	       354	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_7	CALL_31
0x400057e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       354	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_7	CALL_31
0x4000580	     0xf844ffeffff	                            je 0x40003d5	       354	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_7	CALL_31
0x4000586	          0x4889c1	                            mov rcx, rax	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000589	      0xba00000000	                              mov edx, 0	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x400058e	      0xe91efeffff	                           jmp 0x40003b1	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000593	       0xf1f440000	                   nop dword [rax + rax]	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000598	      0xba00000000	                              mov edx, 0	       332	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_25
0x400059d	      0xe933feffff	                           jmp 0x40003d5	       332	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_25
0x40005a2	    0x660f1f440000	                    nop word [rax + rax]	       332	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_25
0x40005a8	      0xba00000000	                              mov edx, 0	       345	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_29
0x40005ad	      0xe923feffff	                           jmp 0x40003d5	       345	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_29
0x40005b2	    0x660f1f440000	                    nop word [rax + rax]	       345	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_29
0x40005b8	        0x488b4020	            mov rax, qword [rax + 0x20] 	       363	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_8	CALL_33
0x40005bc	      0xba00000000	                              mov edx, 0	       364	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_34
0x40005c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       363	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_8	CALL_33
0x40005c5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       363	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_8	CALL_33
0x40005c9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       363	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_8	CALL_33
0x40005cd	          0x8b4010	            mov eax, dword [rax + 0x10] 	       363	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_8	CALL_33
0x40005d0	            0x85c0	                           test eax, eax	       363	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_8	CALL_33
0x40005d2	     0xf84fdfdffff	                            je 0x40003d5	       363	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_8	CALL_33
0x40005d8	          0x4889ef	                            mov rdi, rbp	       367	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_35
0x40005db	      0xe800000000	                          call 0x40005e0	       367	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_35
0x40005e0	        0x4883c418	                           add rsp, 0x18	       415	f-typeprint.c	FUNCTION_4
0x40005e4	          0x4889df	                            mov rdi, rbx	       368	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_36
0x40005e7	            0x89c2	                            mov edx, eax	       368	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_36
0x40005e9	              0x5b	                                 pop rbx	       415	f-typeprint.c	FUNCTION_4
0x40005ea	              0x5d	                                 pop rbp	       415	f-typeprint.c	FUNCTION_4
0x40005eb	            0x415c	                                 pop r12	       415	f-typeprint.c	FUNCTION_4
0x40005ed	            0x415d	                                 pop r13	       415	f-typeprint.c	FUNCTION_4
0x40005ef	            0x415e	                                 pop r14	       415	f-typeprint.c	FUNCTION_4
0x40005f1	            0x415f	                                 pop r15	       415	f-typeprint.c	FUNCTION_4
0x40005f3	      0xbe00000000	                              mov esi, 0	       368	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_36
0x40005f8	            0x31c0	                            xor eax, eax	       368	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_36
0x40005fa	      0xe900000000	                           jmp 0x40005ff	       368	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_36
0x40005ff	              0x90	                                     nop	       368	f-typeprint.c	FUNCTION_4	SWITCH_1	ELSE_4	CALL_36
0x4000600	        0x488b4808	                mov rcx, qword [rax + 8]	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000604	          0x4885c9	                           test rcx, rcx	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000607	            0x7580	                           jne 0x4000589	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000609	      0xbf00000000	                              mov edi, 0	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x400060e	      0xe800000000	                          call 0x4000613	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000613	      0xe96effffff	                           jmp 0x4000586	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000618	     0xf1f84000000	                   nop dword [rax + rax]	       340	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_28
0x4000620	      0xba00000000	                              mov edx, 0	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000625	      0xe9cbfdffff	                           jmp 0x40003f5	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x400062a	    0x660f1f440000	                    nop word [rax + rax]	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000630	        0x488b4008	                mov rax, qword [rax + 8]	       327	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000634	          0x4885c0	                           test rax, rax	       409	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_11	CALL_57
0x4000637	     0xf8549ffffff	                           jne 0x4000586	       409	f-typeprint.c	FUNCTION_4	SWITCH_1	IF_11	CALL_57
0x400063d	      0xbf00000000	                              mov edi, 0	       412	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_62
0x4000642	      0xe800000000	                          call 0x4000647	       412	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_62
0x4000647	        0x410fbef6	                         movsx esi, r14b	       412	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_62
0x400064b	          0x4889c7	                            mov rdi, rax	       412	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_62
0x400064e	            0x31c0	                            xor eax, eax	       412	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_62
0x4000650	      0xe800000000	                          call 0x4000655	       412	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_62
0x4000655	           0xf1f00	                         nop dword [rax]	       412	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_62
0x4000658	        0x4883c418	                           add rsp, 0x18	       415	f-typeprint.c	FUNCTION_4
0x400065c	              0x5b	                                 pop rbx	       415	f-typeprint.c	FUNCTION_4
0x400065d	              0x5d	                                 pop rbp	       415	f-typeprint.c	FUNCTION_4
0x400065e	            0x415c	                                 pop r12	       415	f-typeprint.c	FUNCTION_4
0x4000660	            0x415d	                                 pop r13	       415	f-typeprint.c	FUNCTION_4
0x4000662	            0x415e	                                 pop r14	       415	f-typeprint.c	FUNCTION_4
0x4000664	            0x415f	                                 pop r15	       415	f-typeprint.c	FUNCTION_4
0x4000666	              0xc3	                                     ret	       415	f-typeprint.c	FUNCTION_4
0x4000667	    0x660f1f840000	                    nop word [rax + rax]	       415	f-typeprint.c	FUNCTION_4
0x4000670	          0x4889de	                            mov rsi, rbx	       284	f-typeprint.c	FUNCTION_4	IF_1	CALL_2
0x4000673	      0xbf00000000	                              mov edi, 0	       284	f-typeprint.c	FUNCTION_4	IF_1	CALL_2
0x4000678	      0xe9affeffff	                           jmp 0x400052c	       284	f-typeprint.c	FUNCTION_4	IF_1	CALL_2
0x400067d	           0xf1f00	                         nop dword [rax]	       284	f-typeprint.c	FUNCTION_4	IF_1	CALL_2
0x4000680	      0xba00000000	                              mov edx, 0	       375	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_38
0x4000685	          0x4889de	                            mov rsi, rbx	       375	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_38
0x4000688	          0x4489ef	                           mov edi, r13d	       375	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_38
0x400068b	            0x31c0	                            xor eax, eax	       375	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_38
0x400068d	      0xe800000000	                          call 0x4000692	       375	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_38
0x4000692	      0xe9adfdffff	                           jmp 0x4000444	       375	f-typeprint.c	FUNCTION_4	SWITCH_1	CALL_38
0x4000697	      0xb900000000	                              mov ecx, 0	       295	f-typeprint.c	FUNCTION_4	IF_2	IF_3
0x400069c	      0xe9e3fcffff	                           jmp 0x4000384	       295	f-typeprint.c	FUNCTION_4	IF_2	IF_3
f_print_type	SWITCH,0:CALL,12:IF,4:ELSE,0:DO,0:FOR,0:functions,0:WHILE,0	87
0x40006b0	            0x4156	                                push r14	        53	f-typeprint.c	FUNCTION_1
0x40006b2	            0x4155	                                push r13	        53	f-typeprint.c	FUNCTION_1
0x40006b4	          0x4589c6	                           mov r14d, r8d	        53	f-typeprint.c	FUNCTION_1
0x40006b7	            0x4154	                                push r12	        53	f-typeprint.c	FUNCTION_1
0x40006b9	              0x55	                                push rbp	        53	f-typeprint.c	FUNCTION_1
0x40006ba	          0x4989f4	                            mov r12, rsi	        53	f-typeprint.c	FUNCTION_1
0x40006bd	              0x53	                                push rbx	        53	f-typeprint.c	FUNCTION_1
0x40006be	          0x4889d5	                            mov rbp, rdx	        53	f-typeprint.c	FUNCTION_1
0x40006c1	          0x4889fb	                            mov rbx, rdi	        53	f-typeprint.c	FUNCTION_1
0x40006c4	          0x4189cd	                           mov r13d, ecx	        53	f-typeprint.c	FUNCTION_1
0x40006c7	      0xe800000000	                          call 0x40006cc	        56	f-typeprint.c	FUNCTION_1	IF_1	CALL_1
0x40006cc	            0x85c0	                           test eax, eax	        56	f-typeprint.c	FUNCTION_1	IF_1	CALL_1
0x40006ce	     0xf85b4000000	                           jne 0x4000788	        56	f-typeprint.c	FUNCTION_1	IF_1	CALL_1
0x40006d4	          0x4889df	                            mov rdi, rbx	        62	f-typeprint.c	FUNCTION_1	IF_2	CALL_3
0x40006d7	      0xe800000000	                          call 0x40006dc	        62	f-typeprint.c	FUNCTION_1	IF_2	CALL_3
0x40006dc	            0x85c0	                           test eax, eax	        62	f-typeprint.c	FUNCTION_1	IF_2	CALL_3
0x40006de	            0x7570	                           jne 0x4000750	        62	f-typeprint.c	FUNCTION_1	IF_2	CALL_3
0x40006e0	          0x4489f1	                           mov ecx, r14d	        68	f-typeprint.c	FUNCTION_1	CALL_5
0x40006e3	          0x4489ea	                           mov edx, r13d	        68	f-typeprint.c	FUNCTION_1	CALL_5
0x40006e6	          0x4889ee	                            mov rsi, rbp	        68	f-typeprint.c	FUNCTION_1	CALL_5
0x40006e9	          0x4889df	                            mov rdi, rbx	        68	f-typeprint.c	FUNCTION_1	CALL_5
0x40006ec	      0xe800000000	                          call 0x40006f1	        68	f-typeprint.c	FUNCTION_1	CALL_5
0x40006f1	          0x4d85e4	                           test r12, r12	        70	f-typeprint.c	FUNCTION_1	IF_3
0x40006f4	            0x746a	                            je 0x4000760	        70	f-typeprint.c	FUNCTION_1	IF_3
0x40006f6	      0x41803c2400	                       cmp byte [r12], 0	        70	f-typeprint.c	FUNCTION_1	IF_3
0x40006fb	            0x7463	                            je 0x4000760	        70	f-typeprint.c	FUNCTION_1	IF_3
0x40006fd	          0x4889ee	                            mov rsi, rbp	        78	f-typeprint.c	FUNCTION_1	CALL_8
0x4000700	      0xbf00000000	                              mov edi, 0	        78	f-typeprint.c	FUNCTION_1	CALL_8
0x4000705	      0xe800000000	                          call 0x400070a	        78	f-typeprint.c	FUNCTION_1	CALL_8
0x400070a	            0x31c9	                            xor ecx, ecx	        79	f-typeprint.c	FUNCTION_1	CALL_9
0x400070c	          0x4489ea	                           mov edx, r13d	        79	f-typeprint.c	FUNCTION_1	CALL_9
0x400070f	          0x4889ee	                            mov rsi, rbp	        79	f-typeprint.c	FUNCTION_1	CALL_9
0x4000712	          0x4889df	                            mov rdi, rbx	        79	f-typeprint.c	FUNCTION_1	CALL_9
0x4000715	      0xe800000000	                          call 0x400071a	        79	f-typeprint.c	FUNCTION_1	CALL_9
0x400071a	          0x4d85e4	                           test r12, r12	        81	f-typeprint.c	FUNCTION_1	IF_4
0x400071d	     0xf848d000000	                            je 0x40007b0	        81	f-typeprint.c	FUNCTION_1	IF_4
0x4000723	          0x4889ee	                            mov rsi, rbp	        85	f-typeprint.c	FUNCTION_1	IF_4	CALL_10
0x4000726	          0x4c89e7	                            mov rdi, r12	        85	f-typeprint.c	FUNCTION_1	IF_4	CALL_10
0x4000729	      0xe800000000	                          call 0x400072e	        85	f-typeprint.c	FUNCTION_1	IF_4	CALL_10
0x400072e	          0x4489ea	                           mov edx, r13d	        92	f-typeprint.c	FUNCTION_1	IF_4	CALL_12
0x4000731	          0x4889ee	                            mov rsi, rbp	        92	f-typeprint.c	FUNCTION_1	IF_4	CALL_12
0x4000734	          0x4889df	                            mov rdi, rbx	        92	f-typeprint.c	FUNCTION_1	IF_4	CALL_12
0x4000737	              0x5b	                                 pop rbx	        94	f-typeprint.c	FUNCTION_1
0x4000738	              0x5d	                                 pop rbp	        94	f-typeprint.c	FUNCTION_1
0x4000739	            0x415c	                                 pop r12	        94	f-typeprint.c	FUNCTION_1
0x400073b	            0x415d	                                 pop r13	        94	f-typeprint.c	FUNCTION_1
0x400073d	            0x415e	                                 pop r14	        94	f-typeprint.c	FUNCTION_1
0x400073f	          0x4531c0	                            xor r8d, r8d	        92	f-typeprint.c	FUNCTION_1	IF_4	CALL_12
0x4000742	            0x31c9	                            xor ecx, ecx	        92	f-typeprint.c	FUNCTION_1	IF_4	CALL_12
0x4000744	      0xe9f7f8ffff	jmp sym.f_type_print_varspec_suffix_type__ui_file__int_int_int_int__clone.isra.0__clone.constprop.1	        92	f-typeprint.c	FUNCTION_1	IF_4	CALL_12
0x4000749	     0xf1f80000000	                         nop dword [rax]	        92	f-typeprint.c	FUNCTION_1	IF_4	CALL_12
0x4000750	              0x5b	                                 pop rbx	        94	f-typeprint.c	FUNCTION_1
0x4000751	          0x4889ef	                            mov rdi, rbp	        64	f-typeprint.c	FUNCTION_1	IF_2	CALL_4
0x4000754	              0x5d	                                 pop rbp	        94	f-typeprint.c	FUNCTION_1
0x4000755	            0x415c	                                 pop r12	        94	f-typeprint.c	FUNCTION_1
0x4000757	            0x415d	                                 pop r13	        94	f-typeprint.c	FUNCTION_1
0x4000759	            0x415e	                                 pop r14	        94	f-typeprint.c	FUNCTION_1
0x400075b	      0xe900000000	                           jmp 0x4000760	        64	f-typeprint.c	FUNCTION_1	IF_2	CALL_4
0x4000760	          0x4585ed	                         test r13d, r13d	        73	f-typeprint.c	FUNCTION_1	IF_3	CALL_7
0x4000763	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        69	f-typeprint.c	FUNCTION_1	CALL_6
0x4000767	            0x7e37	                           jle 0x40007a0	        73	f-typeprint.c	FUNCTION_1	IF_3	CALL_7
0x4000769	           0xfb600	                   movzx eax, byte [rax]	        74	f-typeprint.c	FUNCTION_1	IF_3
0x400076c	            0x3c12	                            cmp al, 0x12	        74	f-typeprint.c	FUNCTION_1	IF_3
0x400076e	            0x779a	                            ja 0x400070a	        74	f-typeprint.c	FUNCTION_1	IF_3
0x4000770	      0xba86800400	                        mov edx, 0x48086	        74	f-typeprint.c	FUNCTION_1	IF_3
0x4000775	        0x480fa3c2	                             bt rdx, rax	        74	f-typeprint.c	FUNCTION_1	IF_3
0x4000779	     0xf827effffff	                            jb 0x40006fd	        74	f-typeprint.c	FUNCTION_1	IF_3
0x400077f	            0xeb89	                           jmp 0x400070a	        74	f-typeprint.c	FUNCTION_1	IF_3
0x4000781	     0xf1f80000000	                         nop dword [rax]	        74	f-typeprint.c	FUNCTION_1	IF_3
0x4000788	              0x5b	                                 pop rbx	        94	f-typeprint.c	FUNCTION_1
0x4000789	          0x4889ef	                            mov rdi, rbp	        58	f-typeprint.c	FUNCTION_1	IF_1	CALL_2
0x400078c	              0x5d	                                 pop rbp	        94	f-typeprint.c	FUNCTION_1
0x400078d	            0x415c	                                 pop r12	        94	f-typeprint.c	FUNCTION_1
0x400078f	            0x415d	                                 pop r13	        94	f-typeprint.c	FUNCTION_1
0x4000791	            0x415e	                                 pop r14	        94	f-typeprint.c	FUNCTION_1
0x4000793	      0xe900000000	                           jmp 0x4000798	        58	f-typeprint.c	FUNCTION_1	IF_1	CALL_2
0x4000798	     0xf1f84000000	                   nop dword [rax + rax]	        58	f-typeprint.c	FUNCTION_1	IF_1	CALL_2
0x40007a0	      0x4883780800	                  cmp qword [rax + 8], 0	        73	f-typeprint.c	FUNCTION_1	IF_3	CALL_7
0x40007a5	     0xf855fffffff	                           jne 0x400070a	        73	f-typeprint.c	FUNCTION_1	IF_3	CALL_7
0x40007ab	            0xebbc	                           jmp 0x4000769	        73	f-typeprint.c	FUNCTION_1	IF_3	CALL_7
0x40007ad	           0xf1f00	                         nop dword [rax]	        73	f-typeprint.c	FUNCTION_1	IF_3	CALL_7
0x40007b0	              0x5b	                                 pop rbx	        94	f-typeprint.c	FUNCTION_1
0x40007b1	              0x5d	                                 pop rbp	        94	f-typeprint.c	FUNCTION_1
0x40007b2	            0x415c	                                 pop r12	        94	f-typeprint.c	FUNCTION_1
0x40007b4	            0x415d	                                 pop r13	        94	f-typeprint.c	FUNCTION_1
0x40007b6	            0x415e	                                 pop r14	        94	f-typeprint.c	FUNCTION_1
0x40007b8	              0xc3	                                     ret	        94	f-typeprint.c	FUNCTION_1
f_type_print_varspec_prefix	SWITCH,1:CALL,9:IF,3:ELSE,0:DO,0:FOR,0:functions,0:WHILE,0	54
0x4000240	          0x4885ff	                           test rdi, rdi	       108	f-typeprint.c	FUNCTION_2	IF_1
0x4000243	            0x7437	                            je 0x400027c	       108	f-typeprint.c	FUNCTION_2	IF_1
0x4000245	            0x4154	                                push r12	       107	f-typeprint.c	FUNCTION_2
0x4000247	              0x55	                                push rbp	       107	f-typeprint.c	FUNCTION_2
0x4000248	          0x4989f4	                            mov r12, rsi	       107	f-typeprint.c	FUNCTION_2
0x400024b	              0x53	                                push rbx	       107	f-typeprint.c	FUNCTION_2
0x400024c	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x4000250	          0x4889fb	                            mov rbx, rdi	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x4000253	            0x89cd	                            mov ebp, ecx	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x4000255	      0x4883780800	                  cmp qword [rax + 8], 0	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x400025a	            0x7404	                            je 0x4000260	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x400025c	            0x85d2	                           test edx, edx	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x400025e	            0x7e18	                           jle 0x4000278	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x4000260	      0xe800000000	                          call 0x4000265	       114	f-typeprint.c	FUNCTION_2
0x4000265	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x4000269	           0xfb602	                   movzx eax, byte [rdx]	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x400026c	            0x3c02	                               cmp al, 2	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x400026e	            0x7410	                            je 0x4000280	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x4000270	            0x3c07	                               cmp al, 7	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x4000272	            0x743c	                            je 0x40002b0	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x4000274	            0x3c01	                               cmp al, 1	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x4000276	            0x7428	                            je 0x40002a0	       116	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_2
0x4000278	              0x5b	                                 pop rbx	       153	f-typeprint.c	FUNCTION_2
0x4000279	              0x5d	                                 pop rbp	       153	f-typeprint.c	FUNCTION_2
0x400027a	            0x415c	                                 pop r12	       153	f-typeprint.c	FUNCTION_2
0x400027c	            0xf3c3	                                     ret	       153	f-typeprint.c	FUNCTION_2
0x400027e	            0x6690	                                     nop	       153	f-typeprint.c	FUNCTION_2
0x4000280	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	       129	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_9
0x4000284	            0x31ed	                            xor ebp, ebp	       129	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_9
0x4000286	          0x4885db	                           test rbx, rbx	       108	f-typeprint.c	FUNCTION_2	IF_1
0x4000289	            0x74ed	                            je 0x4000278	       108	f-typeprint.c	FUNCTION_2	IF_1
0x400028b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x400028f	      0x4883780800	                  cmp qword [rax + 8], 0	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x4000294	            0x74ca	                            je 0x4000260	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x4000296	            0xebe0	                           jmp 0x4000278	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x4000298	     0xf1f84000000	                   nop dword [rax + rax]	       111	f-typeprint.c	FUNCTION_2	IF_2	CALL_1
0x40002a0	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	       119	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_4
0x40002a4	      0xbd01000000	                              mov ebp, 1	       119	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_4
0x40002a9	            0xebdb	                           jmp 0x4000286	       120	f-typeprint.c	FUNCTION_2	SWITCH_1
0x40002ab	       0xf1f440000	                   nop dword [rax + rax]	       120	f-typeprint.c	FUNCTION_2	SWITCH_1
0x40002b0	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       123	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_6
0x40002b4	            0x31c9	                            xor ecx, ecx	       123	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_6
0x40002b6	            0x31d2	                            xor edx, edx	       123	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_6
0x40002b8	          0x4c89e6	                            mov rsi, r12	       123	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_6
0x40002bb	      0xe800000000	                          call 0x40002c0	       123	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_6
0x40002c0	            0x85ed	                           test ebp, ebp	       124	f-typeprint.c	FUNCTION_2	SWITCH_1	IF_3
0x40002c2	            0x74b4	                            je 0x4000278	       124	f-typeprint.c	FUNCTION_2	SWITCH_1	IF_3
0x40002c4	              0x5b	                                 pop rbx	       153	f-typeprint.c	FUNCTION_2
0x40002c5	          0x4c89e7	                            mov rdi, r12	       125	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_7
0x40002c8	      0xbe00000000	                              mov esi, 0	       125	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_7
0x40002cd	            0x31c0	                            xor eax, eax	       125	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_7
0x40002cf	              0x5d	                                 pop rbp	       153	f-typeprint.c	FUNCTION_2
0x40002d0	            0x415c	                                 pop r12	       153	f-typeprint.c	FUNCTION_2
0x40002d2	      0xe900000000	                           jmp 0x40002d7	       125	f-typeprint.c	FUNCTION_2	SWITCH_1	CALL_7
