pe_ILF_make_a_symbol_reloc	IF,0:CALL,2:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	68
0x4001072	              0x55	                                push rbp	       457	peicode.h	FUNCTION_9
0x4001073	          0x4889e5	                            mov rbp, rsp	       457	peicode.h	FUNCTION_9
0x4001076	        0x4883ec30	                           sub rsp, 0x30	       457	peicode.h	FUNCTION_9
0x400107a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       457	peicode.h	FUNCTION_9
0x400107e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       457	peicode.h	FUNCTION_9
0x4001082	          0x8955dc	             mov dword [rbp - 0x24], edx	       457	peicode.h	FUNCTION_9
0x4001085	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       457	peicode.h	FUNCTION_9
0x4001089	        0x448945d8	             mov dword [rbp - 0x28], r8d	       457	peicode.h	FUNCTION_9
0x400108d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       461	peicode.h	FUNCTION_9
0x4001091	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       461	peicode.h	FUNCTION_9
0x4001095	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       461	peicode.h	FUNCTION_9
0x4001099	          0x8b4028	            mov eax, dword [rax + 0x28] 	       461	peicode.h	FUNCTION_9
0x400109c	            0x89c0	                            mov eax, eax	       461	peicode.h	FUNCTION_9
0x400109e	        0x48c1e005	                              shl rax, 5	       461	peicode.h	FUNCTION_9
0x40010a2	          0x4801d0	                            add rax, rdx	       461	peicode.h	FUNCTION_9
0x40010a5	        0x488945f0	             mov qword [rbp - 0x10], rax	       461	peicode.h	FUNCTION_9
0x40010a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       462	peicode.h	FUNCTION_9
0x40010ad	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	       462	peicode.h	FUNCTION_9
0x40010b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       462	peicode.h	FUNCTION_9
0x40010b8	          0x8b4028	            mov eax, dword [rax + 0x28] 	       462	peicode.h	FUNCTION_9
0x40010bb	            0x89c0	                            mov eax, eax	       462	peicode.h	FUNCTION_9
0x40010bd	        0x48c1e005	                              shl rax, 5	       462	peicode.h	FUNCTION_9
0x40010c1	          0x4801d0	                            add rax, rdx	       462	peicode.h	FUNCTION_9
0x40010c4	        0x488945f8	                mov qword [rbp - 8], rax	       462	peicode.h	FUNCTION_9
0x40010c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       464	peicode.h	FUNCTION_9
0x40010cc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       464	peicode.h	FUNCTION_9
0x40010d0	        0x48895008	                mov qword [rax + 8], rdx	       464	peicode.h	FUNCTION_9
0x40010d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       465	peicode.h	FUNCTION_9
0x40010d8	    0x48c740100000	               mov qword [rax + 0x10], 0	       465	peicode.h	FUNCTION_9
0x40010e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       466	peicode.h	FUNCTION_9	CALL_1
0x40010e4	          0x488b00	                    mov rax, qword [rax]	       466	peicode.h	FUNCTION_9	CALL_1
0x40010e7	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       466	peicode.h	FUNCTION_9	CALL_1
0x40010ea	            0x89d6	                            mov esi, edx	       466	peicode.h	FUNCTION_9	CALL_1
0x40010ec	          0x4889c7	                            mov rdi, rax	       466	peicode.h	FUNCTION_9	CALL_1
0x40010ef	      0xe800000000	                          call 0x40010f4	       466	peicode.h	FUNCTION_9	CALL_1
0x40010f4	          0x4889c2	                            mov rdx, rax	       466	peicode.h	FUNCTION_9	CALL_1
0x40010f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       466	peicode.h	FUNCTION_9	CALL_1
0x40010fb	        0x48895018	             mov qword [rax + 0x18], rdx	       466	peicode.h	FUNCTION_9	CALL_1
0x40010ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       467	peicode.h	FUNCTION_9
0x4001103	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       467	peicode.h	FUNCTION_9
0x4001107	          0x488910	                    mov qword [rax], rdx	       467	peicode.h	FUNCTION_9
0x400110a	        0x488b45f8	                mov rax, qword [rbp - 8]	       469	peicode.h	FUNCTION_9
0x400110e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       469	peicode.h	FUNCTION_9
0x4001112	          0x488910	                    mov qword [rax], rdx	       469	peicode.h	FUNCTION_9
0x4001115	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       470	peicode.h	FUNCTION_9
0x4001118	        0x488b45f8	                mov rax, qword [rbp - 8]	       470	peicode.h	FUNCTION_9
0x400111c	        0x48895008	                mov qword [rax + 8], rdx	       470	peicode.h	FUNCTION_9
0x4001120	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       471	peicode.h	FUNCTION_9
0x4001124	        0x488b4018	            mov rax, qword [rax + 0x18] 	       471	peicode.h	FUNCTION_9
0x4001128	            0x8b00	                    mov eax, dword [rax]	       471	peicode.h	FUNCTION_9
0x400112a	            0x89c2	                            mov edx, eax	       471	peicode.h	FUNCTION_9
0x400112c	        0x488b45f8	                mov rax, qword [rbp - 8]	       471	peicode.h	FUNCTION_9
0x4001130	        0x66895010	               mov word [rax + 0x10], dx	       471	peicode.h	FUNCTION_9
0x4001134	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       473	peicode.h	FUNCTION_9
0x4001138	          0x8b4028	            mov eax, dword [rax + 0x28] 	       473	peicode.h	FUNCTION_9
0x400113b	          0x8d5001	                      lea edx, [rax + 1]	       473	peicode.h	FUNCTION_9
0x400113e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       473	peicode.h	FUNCTION_9
0x4001142	          0x895028	             mov dword [rax + 0x28], edx	       473	peicode.h	FUNCTION_9
0x4001145	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	peicode.h	FUNCTION_9	CALL_2
0x4001149	          0x8b4028	            mov eax, dword [rax + 0x28] 	       475	peicode.h	FUNCTION_9	CALL_2
0x400114c	          0x83f808	                              cmp eax, 8	       475	peicode.h	FUNCTION_9	CALL_2
0x400114f	            0x760f	                           jbe 0x4001160	       475	peicode.h	FUNCTION_9	CALL_2
0x4001151	      0xbedb010000	                          mov esi, 0x1db	       475	peicode.h	FUNCTION_9	CALL_2
0x4001156	      0xbf00000000	                              mov edi, 0	       475	peicode.h	FUNCTION_9	CALL_2
0x400115b	      0xe800000000	                          call 0x4001160	       475	peicode.h	FUNCTION_9	CALL_2
0x4001160	              0x90	                                     nop	       476	peicode.h	FUNCTION_9
0x4001161	              0xc9	                                   leave	       476	peicode.h	FUNCTION_9
0x4001162	              0xc3	                                     ret	       476	peicode.h	FUNCTION_9
coff_read_word	IF,2:CALL,1:ELSE,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	47
0x4005249	              0x55	                                push rbp	      3254	coffcode.h	FUNCTION_43
0x400524a	          0x4889e5	                            mov rbp, rsp	      3254	coffcode.h	FUNCTION_43
0x400524d	        0x4883ec30	                           sub rsp, 0x30	      3254	coffcode.h	FUNCTION_43
0x4005251	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3254	coffcode.h	FUNCTION_43
0x4005255	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3254	coffcode.h	FUNCTION_43
0x4005259	    0x64488b042528	                mov rax, qword fs:[0x28]	      3254	coffcode.h	FUNCTION_43
0x4005262	        0x488945f8	                mov qword [rbp - 8], rax	      3254	coffcode.h	FUNCTION_43
0x4005266	            0x31c0	                            xor eax, eax	      3254	coffcode.h	FUNCTION_43
0x4005268	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3258	coffcode.h	FUNCTION_43	CALL_1
0x400526c	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3258	coffcode.h	FUNCTION_43	CALL_1
0x4005270	      0xbe02000000	                              mov esi, 2	      3258	coffcode.h	FUNCTION_43	CALL_1
0x4005275	          0x4889c7	                            mov rdi, rax	      3258	coffcode.h	FUNCTION_43	CALL_1
0x4005278	      0xe800000000	                          call 0x400527d	      3258	coffcode.h	FUNCTION_43	CALL_1
0x400527d	          0x8945ec	             mov dword [rbp - 0x14], eax	      3258	coffcode.h	FUNCTION_43	CALL_1
0x4005280	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3259	coffcode.h	FUNCTION_43	IF_1
0x4005284	            0x7f11	                            jg 0x4005297	      3259	coffcode.h	FUNCTION_43	IF_1
0x4005286	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3261	coffcode.h	FUNCTION_43	IF_1
0x400528a	    0xc70000000000	                      mov dword [rax], 0	      3261	coffcode.h	FUNCTION_43	IF_1
0x4005290	      0xb800000000	                              mov eax, 0	      3262	coffcode.h	FUNCTION_43	IF_1
0x4005295	            0xeb46	                           jmp 0x40052dd	      3262	coffcode.h	FUNCTION_43	IF_1
0x4005297	        0x837dec01	               cmp dword [rbp - 0x14], 1	      3265	coffcode.h	FUNCTION_43	IF_2
0x400529b	            0x750f	                           jne 0x40052ac	      3265	coffcode.h	FUNCTION_43	IF_2
0x400529d	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      3266	coffcode.h	FUNCTION_43	IF_2
0x40052a1	           0xfb6d0	                           movzx edx, al	      3266	coffcode.h	FUNCTION_43	IF_2
0x40052a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3266	coffcode.h	FUNCTION_43	IF_2
0x40052a8	            0x8910	                    mov dword [rax], edx	      3266	coffcode.h	FUNCTION_43	IF_2
0x40052aa	            0xeb1b	                           jmp 0x40052c7	      3266	coffcode.h	FUNCTION_43	IF_2
0x40052ac	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052b0	           0xfb6c0	                           movzx eax, al	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052b3	         0xfb655f1	             movzx edx, byte [rbp - 0xf]	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052b7	           0xfb6d2	                           movzx edx, dl	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052ba	          0xc1e208	                              shl edx, 8	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052bd	             0x1d0	                            add eax, edx	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052bf	            0x89c2	                            mov edx, eax	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052c5	            0x8910	                    mov dword [rax], edx	      3268	coffcode.h	FUNCTION_43	ELSE_1
0x40052c7	    0x8b1500000000	            mov edx, dword [0x040052cd] 	      3270	coffcode.h	FUNCTION_43
0x40052cd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3270	coffcode.h	FUNCTION_43
0x40052d0	             0x1d0	                            add eax, edx	      3270	coffcode.h	FUNCTION_43
0x40052d2	    0x890500000000	            mov dword [0x040052d8], eax 	      3270	coffcode.h	FUNCTION_43
0x40052d8	      0xb801000000	                              mov eax, 1	      3272	coffcode.h	FUNCTION_43
0x40052dd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3273	coffcode.h	FUNCTION_43
0x40052e1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3273	coffcode.h	FUNCTION_43
0x40052ea	            0x7405	                            je 0x40052f1	      3273	coffcode.h	FUNCTION_43
0x40052ec	      0xe800000000	                          call 0x40052f1	      3273	coffcode.h	FUNCTION_43
0x40052f1	              0xc9	                                   leave	      3273	coffcode.h	FUNCTION_43
0x40052f2	              0xc3	                                     ret	      3273	coffcode.h	FUNCTION_43
pe_ILF_object_p	IF,8:CALL,20:ELSE,0:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0	250
0x400249d	              0x55	                                push rbp	      1126	peicode.h	FUNCTION_15
0x400249e	          0x4889e5	                            mov rbp, rsp	      1126	peicode.h	FUNCTION_15
0x40024a1	        0x4883ec60	                           sub rsp, 0x60	      1126	peicode.h	FUNCTION_15
0x40024a5	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1126	peicode.h	FUNCTION_15
0x40024a9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1126	peicode.h	FUNCTION_15
0x40024b2	        0x488945f8	                mov qword [rbp - 8], rax	      1126	peicode.h	FUNCTION_15
0x40024b6	            0x31c0	                            xor eax, eax	      1126	peicode.h	FUNCTION_15
0x40024b8	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1139	peicode.h	FUNCTION_15	IF_1	CALL_1
0x40024bc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1139	peicode.h	FUNCTION_15	IF_1	CALL_1
0x40024c0	      0xbe0e000000	                            mov esi, 0xe	      1139	peicode.h	FUNCTION_15	IF_1	CALL_1
0x40024c5	          0x4889c7	                            mov rdi, rax	      1139	peicode.h	FUNCTION_15	IF_1	CALL_1
0x40024c8	      0xe800000000	                          call 0x40024cd	      1139	peicode.h	FUNCTION_15	IF_1	CALL_1
0x40024cd	        0x4883f80e	                            cmp rax, 0xe	      1139	peicode.h	FUNCTION_15	IF_1	CALL_1
0x40024d1	            0x740a	                            je 0x40024dd	      1139	peicode.h	FUNCTION_15	IF_1	CALL_1
0x40024d3	      0xb800000000	                              mov eax, 0	      1140	peicode.h	FUNCTION_15	IF_1
0x40024d8	      0xe979030000	                           jmp 0x4002856	      1140	peicode.h	FUNCTION_15	IF_1
0x40024dd	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1142	peicode.h	FUNCTION_15
0x40024e1	        0x488945c0	             mov qword [rbp - 0x40], rax	      1142	peicode.h	FUNCTION_15
0x40024e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1144	peicode.h	FUNCTION_15
0x40024e9	        0x488b4008	                mov rax, qword [rax + 8]	      1144	peicode.h	FUNCTION_15
0x40024ed	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1144	peicode.h	FUNCTION_15
0x40024f4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1144	peicode.h	FUNCTION_15
0x40024f8	          0x4889d7	                            mov rdi, rdx	      1144	peicode.h	FUNCTION_15
0x40024fb	            0xffd0	                                call rax	      1144	peicode.h	FUNCTION_15
0x40024fd	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1144	peicode.h	FUNCTION_15
0x4002500	      0x488345c002	               add qword [rbp - 0x40], 2	      1145	peicode.h	FUNCTION_15
0x4002505	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1148	peicode.h	FUNCTION_15
0x400250c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400250f	      0x3da6010000	                          cmp eax, 0x1a6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002514	     0xf84f9000000	                            je 0x4002613	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400251a	      0x3da6010000	                          cmp eax, 0x1a6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400251f	            0x7758	                            ja 0x4002579	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002521	      0x3d66010000	                          cmp eax, 0x166	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002526	     0xf84ea000000	                            je 0x4002616	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400252c	      0x3d66010000	                          cmp eax, 0x166	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002531	            0x7723	                            ja 0x4002556	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002533	      0x3d4c010000	                          cmp eax, 0x14c	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002538	     0xf848f000000	                            je 0x40025cd	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400253e	      0x3d62010000	                          cmp eax, 0x162	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002543	     0xf84cd000000	                            je 0x4002616	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002549	            0x85c0	                           test eax, eax	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400254b	     0xf84c8000000	                            je 0x4002619	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002551	      0xe980000000	                           jmp 0x40025d6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002556	      0x3d84010000	                          cmp eax, 0x184	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400255b	     0xf84b8000000	                            je 0x4002619	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002561	      0x3da2010000	                          cmp eax, 0x1a2	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002566	     0xf84a7000000	                            je 0x4002613	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400256c	      0x3d68010000	                          cmp eax, 0x168	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002571	     0xf849f000000	                            je 0x4002616	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002577	            0xeb5d	                           jmp 0x40025d6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002579	      0x3d66020000	                          cmp eax, 0x266	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400257e	     0xf8492000000	                            je 0x4002616	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002584	      0x3d66020000	                          cmp eax, 0x266	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002589	            0x771b	                            ja 0x40025a6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400258b	      0x3dc2010000	                          cmp eax, 0x1c2	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002590	     0xf8486000000	                            je 0x400261c	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x4002596	      0x3d00020000	                          cmp eax, 0x200	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400259b	            0x747c	                            je 0x4002619	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x400259d	      0x3dc0010000	                          cmp eax, 0x1c0	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025a2	            0x747b	                            je 0x400261f	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025a4	            0xeb30	                           jmp 0x40025d6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025a6	      0x3d66030000	                          cmp eax, 0x366	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025ab	            0x7469	                            je 0x4002616	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025ad	      0x3d66030000	                          cmp eax, 0x366	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025b2	            0x7709	                            ja 0x40025bd	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025b4	      0x3d84020000	                          cmp eax, 0x284	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025b9	            0x745e	                            je 0x4002619	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025bb	            0xeb19	                           jmp 0x40025d6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025bd	      0x3d66040000	                          cmp eax, 0x466	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025c2	            0x7452	                            je 0x4002616	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025c4	      0x3d64860000	                         cmp eax, 0x8664	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025c9	            0x7457	                            je 0x4002622	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025cb	            0xeb09	                           jmp 0x40025d6	      1150	peicode.h	FUNCTION_15	SWITCH_1
0x40025cd	    0xc745b04c0100	          mov dword [rbp - 0x50], 0x14c 	      1160	peicode.h	FUNCTION_15	SWITCH_1
0x40025d4	            0xeb4d	                           jmp 0x4002623	      1162	peicode.h	FUNCTION_15	SWITCH_1
0x40025d6	      0xbe00000000	                              mov esi, 0	      1211	peicode.h	FUNCTION_15	SWITCH_1	CALL_3
0x40025db	      0xbf00000000	                              mov edi, 0	      1211	peicode.h	FUNCTION_15	SWITCH_1	CALL_3
0x40025e0	      0xe800000000	                          call 0x40025e5	      1211	peicode.h	FUNCTION_15	SWITCH_1	CALL_3
0x40025e5	          0x4889c1	                            mov rcx, rax	      1211	peicode.h	FUNCTION_15	SWITCH_1	CALL_3
0x40025e8	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1209	peicode.h	FUNCTION_15	SWITCH_1	CALL_2
0x40025eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1209	peicode.h	FUNCTION_15	SWITCH_1	CALL_2
0x40025ef	          0x4889c6	                            mov rsi, rax	      1209	peicode.h	FUNCTION_15	SWITCH_1	CALL_2
0x40025f2	          0x4889cf	                            mov rdi, rcx	      1209	peicode.h	FUNCTION_15	SWITCH_1	CALL_2
0x40025f5	      0xb800000000	                              mov eax, 0	      1209	peicode.h	FUNCTION_15	SWITCH_1	CALL_2
0x40025fa	      0xe800000000	                          call 0x40025ff	      1209	peicode.h	FUNCTION_15	SWITCH_1	CALL_2
0x40025ff	      0xbf0a000000	                            mov edi, 0xa	      1214	peicode.h	FUNCTION_15	SWITCH_1	CALL_4
0x4002604	      0xe800000000	                          call 0x4002609	      1214	peicode.h	FUNCTION_15	SWITCH_1	CALL_4
0x4002609	      0xb800000000	                              mov eax, 0	      1216	peicode.h	FUNCTION_15	SWITCH_1
0x400260e	      0xe943020000	                           jmp 0x4002856	      1216	peicode.h	FUNCTION_15	SWITCH_1
0x4002613	              0x90	                                     nop	      1187	peicode.h	FUNCTION_15	SWITCH_1
0x4002614	            0xeb0d	                           jmp 0x4002623	      1187	peicode.h	FUNCTION_15	SWITCH_1
0x4002616	              0x90	                                     nop	      1180	peicode.h	FUNCTION_15	SWITCH_1
0x4002617	            0xeb0a	                           jmp 0x4002623	      1180	peicode.h	FUNCTION_15	SWITCH_1
0x4002619	              0x90	                                     nop	      1156	peicode.h	FUNCTION_15	SWITCH_1
0x400261a	            0xeb07	                           jmp 0x4002623	      1156	peicode.h	FUNCTION_15	SWITCH_1
0x400261c	              0x90	                                     nop	      1204	peicode.h	FUNCTION_15	SWITCH_1
0x400261d	            0xeb04	                           jmp 0x4002623	      1204	peicode.h	FUNCTION_15	SWITCH_1
0x400261f	              0x90	                                     nop	      1193	peicode.h	FUNCTION_15	SWITCH_1
0x4002620	            0xeb01	                           jmp 0x4002623	      1193	peicode.h	FUNCTION_15	SWITCH_1
0x4002622	              0x90	                                     nop	      1168	peicode.h	FUNCTION_15	SWITCH_1
0x4002623	        0x837db000	               cmp dword [rbp - 0x50], 0	      1220	peicode.h	FUNCTION_15	IF_3
0x4002627	            0x753d	                           jne 0x4002666	      1220	peicode.h	FUNCTION_15	IF_3
0x4002629	      0xbe00000000	                              mov esi, 0	      1224	peicode.h	FUNCTION_15	IF_3	CALL_6
0x400262e	      0xbf00000000	                              mov edi, 0	      1224	peicode.h	FUNCTION_15	IF_3	CALL_6
0x4002633	      0xe800000000	                          call 0x4002638	      1224	peicode.h	FUNCTION_15	IF_3	CALL_6
0x4002638	          0x4889c1	                            mov rcx, rax	      1224	peicode.h	FUNCTION_15	IF_3	CALL_6
0x400263b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1222	peicode.h	FUNCTION_15	IF_3	CALL_5
0x400263e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1222	peicode.h	FUNCTION_15	IF_3	CALL_5
0x4002642	          0x4889c6	                            mov rsi, rax	      1222	peicode.h	FUNCTION_15	IF_3	CALL_5
0x4002645	          0x4889cf	                            mov rdi, rcx	      1222	peicode.h	FUNCTION_15	IF_3	CALL_5
0x4002648	      0xb800000000	                              mov eax, 0	      1222	peicode.h	FUNCTION_15	IF_3	CALL_5
0x400264d	      0xe800000000	                          call 0x4002652	      1222	peicode.h	FUNCTION_15	IF_3	CALL_5
0x4002652	      0xbf03000000	                              mov edi, 3	      1227	peicode.h	FUNCTION_15	IF_3	CALL_7
0x4002657	      0xe800000000	                          call 0x400265c	      1227	peicode.h	FUNCTION_15	IF_3	CALL_7
0x400265c	      0xb800000000	                              mov eax, 0	      1229	peicode.h	FUNCTION_15	IF_3
0x4002661	      0xe9f0010000	                           jmp 0x4002856	      1229	peicode.h	FUNCTION_15	IF_3
0x4002666	      0x488345c004	               add qword [rbp - 0x40], 4	      1234	peicode.h	FUNCTION_15
0x400266b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1236	peicode.h	FUNCTION_15
0x400266f	        0x488b4008	                mov rax, qword [rax + 8]	      1236	peicode.h	FUNCTION_15
0x4002673	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1236	peicode.h	FUNCTION_15
0x400267a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1236	peicode.h	FUNCTION_15
0x400267e	          0x4889d7	                            mov rdi, rdx	      1236	peicode.h	FUNCTION_15
0x4002681	            0xffd0	                                call rax	      1236	peicode.h	FUNCTION_15
0x4002683	        0x488945c8	             mov qword [rbp - 0x38], rax	      1236	peicode.h	FUNCTION_15
0x4002687	      0x488345c004	               add qword [rbp - 0x40], 4	      1237	peicode.h	FUNCTION_15
0x400268c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1239	peicode.h	FUNCTION_15	IF_4
0x4002691	            0x753a	                           jne 0x40026cd	      1239	peicode.h	FUNCTION_15	IF_4
0x4002693	      0xbe00000000	                              mov esi, 0	      1242	peicode.h	FUNCTION_15	IF_4	CALL_9
0x4002698	      0xbf00000000	                              mov edi, 0	      1242	peicode.h	FUNCTION_15	IF_4	CALL_9
0x400269d	      0xe800000000	                          call 0x40026a2	      1242	peicode.h	FUNCTION_15	IF_4	CALL_9
0x40026a2	          0x4889c2	                            mov rdx, rax	      1242	peicode.h	FUNCTION_15	IF_4	CALL_9
0x40026a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1241	peicode.h	FUNCTION_15	IF_4	CALL_8
0x40026a9	          0x4889c6	                            mov rsi, rax	      1241	peicode.h	FUNCTION_15	IF_4	CALL_8
0x40026ac	          0x4889d7	                            mov rdi, rdx	      1241	peicode.h	FUNCTION_15	IF_4	CALL_8
0x40026af	      0xb800000000	                              mov eax, 0	      1241	peicode.h	FUNCTION_15	IF_4	CALL_8
0x40026b4	      0xe800000000	                          call 0x40026b9	      1241	peicode.h	FUNCTION_15	IF_4	CALL_8
0x40026b9	      0xbf0a000000	                            mov edi, 0xa	      1243	peicode.h	FUNCTION_15	IF_4	CALL_10
0x40026be	      0xe800000000	                          call 0x40026c3	      1243	peicode.h	FUNCTION_15	IF_4	CALL_10
0x40026c3	      0xb800000000	                              mov eax, 0	      1245	peicode.h	FUNCTION_15	IF_4
0x40026c8	      0xe989010000	                           jmp 0x4002856	      1245	peicode.h	FUNCTION_15	IF_4
0x40026cd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1248	peicode.h	FUNCTION_15
0x40026d1	        0x488b4008	                mov rax, qword [rax + 8]	      1248	peicode.h	FUNCTION_15
0x40026d5	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1248	peicode.h	FUNCTION_15
0x40026dc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1248	peicode.h	FUNCTION_15
0x40026e0	          0x4889d7	                            mov rdi, rdx	      1248	peicode.h	FUNCTION_15
0x40026e3	            0xffd0	                                call rax	      1248	peicode.h	FUNCTION_15
0x40026e5	          0x8945b8	             mov dword [rbp - 0x48], eax	      1248	peicode.h	FUNCTION_15
0x40026e8	      0x488345c002	               add qword [rbp - 0x40], 2	      1249	peicode.h	FUNCTION_15
0x40026ed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1251	peicode.h	FUNCTION_15
0x40026f1	        0x488b4008	                mov rax, qword [rax + 8]	      1251	peicode.h	FUNCTION_15
0x40026f5	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1251	peicode.h	FUNCTION_15
0x40026fc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1251	peicode.h	FUNCTION_15
0x4002700	          0x4889d7	                            mov rdi, rdx	      1251	peicode.h	FUNCTION_15
0x4002703	            0xffd0	                                call rax	      1251	peicode.h	FUNCTION_15
0x4002705	          0x8945bc	             mov dword [rbp - 0x44], eax	      1251	peicode.h	FUNCTION_15
0x4002708	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1255	peicode.h	FUNCTION_15	CALL_11
0x400270c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1255	peicode.h	FUNCTION_15	CALL_11
0x4002710	          0x4889d6	                            mov rsi, rdx	      1255	peicode.h	FUNCTION_15	CALL_11
0x4002713	          0x4889c7	                            mov rdi, rax	      1255	peicode.h	FUNCTION_15	CALL_11
0x4002716	      0xe800000000	                          call 0x400271b	      1255	peicode.h	FUNCTION_15	CALL_11
0x400271b	        0x488945c0	             mov qword [rbp - 0x40], rax	      1255	peicode.h	FUNCTION_15	CALL_11
0x400271f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1256	peicode.h	FUNCTION_15	IF_5
0x4002724	            0x750a	                           jne 0x4002730	      1256	peicode.h	FUNCTION_15	IF_5
0x4002726	      0xb800000000	                              mov eax, 0	      1257	peicode.h	FUNCTION_15	IF_5
0x400272b	      0xe926010000	                           jmp 0x4002856	      1257	peicode.h	FUNCTION_15	IF_5
0x4002730	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x4002734	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x4002738	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x400273c	          0x4889ce	                            mov rsi, rcx	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x400273f	          0x4889c7	                            mov rdi, rax	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x4002742	      0xe800000000	                          call 0x4002747	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x4002747	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x400274b	            0x741d	                            je 0x400276a	      1259	peicode.h	FUNCTION_15	IF_6	CALL_12
0x400274d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1261	peicode.h	FUNCTION_15	IF_6	CALL_13
0x4002751	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1261	peicode.h	FUNCTION_15	IF_6	CALL_13
0x4002755	          0x4889d6	                            mov rsi, rdx	      1261	peicode.h	FUNCTION_15	IF_6	CALL_13
0x4002758	          0x4889c7	                            mov rdi, rax	      1261	peicode.h	FUNCTION_15	IF_6	CALL_13
0x400275b	      0xe800000000	                          call 0x4002760	      1261	peicode.h	FUNCTION_15	IF_6	CALL_13
0x4002760	      0xb800000000	                              mov eax, 0	      1262	peicode.h	FUNCTION_15	IF_6
0x4002765	      0xe9ec000000	                           jmp 0x4002856	      1262	peicode.h	FUNCTION_15	IF_6
0x400276a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1265	peicode.h	FUNCTION_15
0x400276e	        0x488945d0	             mov qword [rbp - 0x30], rax	      1265	peicode.h	FUNCTION_15
0x4002772	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1267	peicode.h	FUNCTION_15	CALL_14
0x4002776	        0x488d50ff	                      lea rdx, [rax - 1]	      1267	peicode.h	FUNCTION_15	CALL_14
0x400277a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1267	peicode.h	FUNCTION_15	CALL_14
0x400277e	          0x4889d6	                            mov rsi, rdx	      1267	peicode.h	FUNCTION_15	CALL_14
0x4002781	          0x4889c7	                            mov rdi, rax	      1267	peicode.h	FUNCTION_15	CALL_14
0x4002784	      0xe800000000	                          call 0x4002789	      1267	peicode.h	FUNCTION_15	CALL_14
0x4002789	        0x488d5001	                      lea rdx, [rax + 1]	      1267	peicode.h	FUNCTION_15	CALL_14
0x400278d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1267	peicode.h	FUNCTION_15	CALL_14
0x4002791	          0x4801d0	                            add rax, rdx	      1267	peicode.h	FUNCTION_15	CALL_14
0x4002794	        0x488945d8	             mov qword [rbp - 0x28], rax	      1267	peicode.h	FUNCTION_15	CALL_14
0x4002798	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1270	peicode.h	FUNCTION_15	IF_7
0x400279c	        0x488d50ff	                      lea rdx, [rax - 1]	      1270	peicode.h	FUNCTION_15	IF_7
0x40027a0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1270	peicode.h	FUNCTION_15	IF_7
0x40027a4	          0x4801d0	                            add rax, rdx	      1270	peicode.h	FUNCTION_15	IF_7
0x40027a7	           0xfb600	                   movzx eax, byte [rax]	      1270	peicode.h	FUNCTION_15	IF_7
0x40027aa	            0x84c0	                             test al, al	      1270	peicode.h	FUNCTION_15	IF_7
0x40027ac	            0x7514	                           jne 0x40027c2	      1270	peicode.h	FUNCTION_15	IF_7
0x40027ae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1271	peicode.h	FUNCTION_15	IF_7
0x40027b2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1271	peicode.h	FUNCTION_15	IF_7
0x40027b6	          0x4829c2	                            sub rdx, rax	      1271	peicode.h	FUNCTION_15	IF_7
0x40027b9	          0x4889d0	                            mov rax, rdx	      1271	peicode.h	FUNCTION_15	IF_7
0x40027bc	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1271	peicode.h	FUNCTION_15	IF_7
0x40027c0	            0x724a	                            jb 0x400280c	      1271	peicode.h	FUNCTION_15	IF_7
0x40027c2	      0xbe00000000	                              mov esi, 0	      1274	peicode.h	FUNCTION_15	IF_7	CALL_16
0x40027c7	      0xbf00000000	                              mov edi, 0	      1274	peicode.h	FUNCTION_15	IF_7	CALL_16
0x40027cc	      0xe800000000	                          call 0x40027d1	      1274	peicode.h	FUNCTION_15	IF_7	CALL_16
0x40027d1	          0x4889c2	                            mov rdx, rax	      1274	peicode.h	FUNCTION_15	IF_7	CALL_16
0x40027d4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1273	peicode.h	FUNCTION_15	IF_7	CALL_15
0x40027d8	          0x4889c6	                            mov rsi, rax	      1273	peicode.h	FUNCTION_15	IF_7	CALL_15
0x40027db	          0x4889d7	                            mov rdi, rdx	      1273	peicode.h	FUNCTION_15	IF_7	CALL_15
0x40027de	      0xb800000000	                              mov eax, 0	      1273	peicode.h	FUNCTION_15	IF_7	CALL_15
0x40027e3	      0xe800000000	                          call 0x40027e8	      1273	peicode.h	FUNCTION_15	IF_7	CALL_15
0x40027e8	      0xbf0a000000	                            mov edi, 0xa	      1275	peicode.h	FUNCTION_15	IF_7	CALL_17
0x40027ed	      0xe800000000	                          call 0x40027f2	      1275	peicode.h	FUNCTION_15	IF_7	CALL_17
0x40027f2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1276	peicode.h	FUNCTION_15	IF_7	CALL_18
0x40027f6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1276	peicode.h	FUNCTION_15	IF_7	CALL_18
0x40027fa	          0x4889d6	                            mov rsi, rdx	      1276	peicode.h	FUNCTION_15	IF_7	CALL_18
0x40027fd	          0x4889c7	                            mov rdi, rax	      1276	peicode.h	FUNCTION_15	IF_7	CALL_18
0x4002800	      0xe800000000	                          call 0x4002805	      1276	peicode.h	FUNCTION_15	IF_7	CALL_18
0x4002805	      0xb800000000	                              mov eax, 0	      1277	peicode.h	FUNCTION_15	IF_7
0x400280a	            0xeb4a	                           jmp 0x4002856	      1277	peicode.h	FUNCTION_15	IF_7
0x400280c	        0x448b45bc	             mov r8d, dword [rbp - 0x44]	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002810	          0x8b7db8	             mov edi, dword [rbp - 0x48]	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002813	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002817	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x400281b	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x400281e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002822	          0x4589c1	                            mov r9d, r8d	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002825	          0x4189f8	                            mov r8d, edi	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002828	          0x4889c7	                            mov rdi, rax	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x400282b	      0xe84defffff	             call sym.pe_ILF_build_a_bfd	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002830	            0x85c0	                           test eax, eax	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002832	            0x751a	                           jne 0x400284e	      1281	peicode.h	FUNCTION_15	IF_8	CALL_19
0x4002834	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1284	peicode.h	FUNCTION_15	IF_8	CALL_20
0x4002838	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1284	peicode.h	FUNCTION_15	IF_8	CALL_20
0x400283c	          0x4889d6	                            mov rsi, rdx	      1284	peicode.h	FUNCTION_15	IF_8	CALL_20
0x400283f	          0x4889c7	                            mov rdi, rax	      1284	peicode.h	FUNCTION_15	IF_8	CALL_20
0x4002842	      0xe800000000	                          call 0x4002847	      1284	peicode.h	FUNCTION_15	IF_8	CALL_20
0x4002847	      0xb800000000	                              mov eax, 0	      1285	peicode.h	FUNCTION_15	IF_8
0x400284c	            0xeb08	                           jmp 0x4002856	      1285	peicode.h	FUNCTION_15	IF_8
0x400284e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1288	peicode.h	FUNCTION_15
0x4002852	        0x488b4008	                mov rax, qword [rax + 8]	      1288	peicode.h	FUNCTION_15
0x4002856	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1289	peicode.h	FUNCTION_15
0x400285a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1289	peicode.h	FUNCTION_15
0x4002863	            0x7405	                            je 0x400286a	      1289	peicode.h	FUNCTION_15
0x4002865	      0xe800000000	                          call 0x400286a	      1289	peicode.h	FUNCTION_15
0x400286a	              0xc9	                                   leave	      1289	peicode.h	FUNCTION_15
0x400286b	              0xc3	                                     ret	      1289	peicode.h	FUNCTION_15
sec_to_styp_flags	IF,15:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	124
0x400305a	              0x55	                                push rbp	       639	coffcode.h	FUNCTION_21
0x400305b	          0x4889e5	                            mov rbp, rsp	       639	coffcode.h	FUNCTION_21
0x400305e	        0x4883ec20	                           sub rsp, 0x20	       639	coffcode.h	FUNCTION_21
0x4003062	        0x48897de8	             mov qword [rbp - 0x18], rdi	       639	coffcode.h	FUNCTION_21
0x4003066	          0x8975e4	             mov dword [rbp - 0x1c], esi	       639	coffcode.h	FUNCTION_21
0x4003069	    0x48c745f80000	                  mov qword [rbp - 8], 0	       640	coffcode.h	FUNCTION_21
0x4003071	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       641	coffcode.h	FUNCTION_21
0x4003078	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       643	coffcode.h	FUNCTION_21	IF_1
0x400307c	      0xba06000000	                              mov edx, 6	       643	coffcode.h	FUNCTION_21	IF_1
0x4003081	      0xbe00000000	                              mov esi, 0	       643	coffcode.h	FUNCTION_21	IF_1
0x4003086	          0x4889c7	                            mov rdi, rax	       643	coffcode.h	FUNCTION_21	IF_1
0x4003089	      0xe800000000	                          call 0x400308e	       643	coffcode.h	FUNCTION_21	IF_1
0x400308e	            0x85c0	                           test eax, eax	       643	coffcode.h	FUNCTION_21	IF_1
0x4003090	            0x7468	                            je 0x40030fa	       643	coffcode.h	FUNCTION_21	IF_1
0x4003092	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       644	coffcode.h	FUNCTION_21	IF_1
0x4003096	      0xba07000000	                              mov edx, 7	       644	coffcode.h	FUNCTION_21	IF_1
0x400309b	      0xbe00000000	                              mov esi, 0	       644	coffcode.h	FUNCTION_21	IF_1
0x40030a0	          0x4889c7	                            mov rdi, rax	       644	coffcode.h	FUNCTION_21	IF_1
0x40030a3	      0xe800000000	                          call 0x40030a8	       644	coffcode.h	FUNCTION_21	IF_1
0x40030a8	            0x85c0	                           test eax, eax	       644	coffcode.h	FUNCTION_21	IF_1
0x40030aa	            0x744e	                            je 0x40030fa	       644	coffcode.h	FUNCTION_21	IF_1
0x40030ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	coffcode.h	FUNCTION_21	IF_1
0x40030b0	      0xba11000000	                           mov edx, 0x11	       646	coffcode.h	FUNCTION_21	IF_1
0x40030b5	      0xbe00000000	                              mov esi, 0	       646	coffcode.h	FUNCTION_21	IF_1
0x40030ba	          0x4889c7	                            mov rdi, rax	       646	coffcode.h	FUNCTION_21	IF_1
0x40030bd	      0xe800000000	                          call 0x40030c2	       646	coffcode.h	FUNCTION_21	IF_1
0x40030c2	            0x85c0	                           test eax, eax	       646	coffcode.h	FUNCTION_21	IF_1
0x40030c4	            0x7434	                            je 0x40030fa	       646	coffcode.h	FUNCTION_21	IF_1
0x40030c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	coffcode.h	FUNCTION_21	IF_1
0x40030ca	      0xba11000000	                           mov edx, 0x11	       647	coffcode.h	FUNCTION_21	IF_1
0x40030cf	      0xbe00000000	                              mov esi, 0	       647	coffcode.h	FUNCTION_21	IF_1
0x40030d4	          0x4889c7	                            mov rdi, rax	       647	coffcode.h	FUNCTION_21	IF_1
0x40030d7	      0xe800000000	                          call 0x40030dc	       647	coffcode.h	FUNCTION_21	IF_1
0x40030dc	            0x85c0	                           test eax, eax	       647	coffcode.h	FUNCTION_21	IF_1
0x40030de	            0x741a	                            je 0x40030fa	       647	coffcode.h	FUNCTION_21	IF_1
0x40030e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	coffcode.h	FUNCTION_21	IF_1
0x40030e4	      0xba05000000	                              mov edx, 5	       649	coffcode.h	FUNCTION_21	IF_1
0x40030e9	      0xbe00000000	                              mov esi, 0	       649	coffcode.h	FUNCTION_21	IF_1
0x40030ee	          0x4889c7	                            mov rdi, rax	       649	coffcode.h	FUNCTION_21	IF_1
0x40030f1	      0xe800000000	                          call 0x40030f6	       649	coffcode.h	FUNCTION_21	IF_1
0x40030f6	            0x85c0	                           test eax, eax	       649	coffcode.h	FUNCTION_21	IF_1
0x40030f8	            0x7507	                           jne 0x4003101	       649	coffcode.h	FUNCTION_21	IF_1
0x40030fa	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       650	coffcode.h	FUNCTION_21	IF_1
0x4003101	        0x837df400	                cmp dword [rbp - 0xc], 0	       661	coffcode.h	FUNCTION_21	IF_2
0x4003105	            0x740e	                            je 0x4003115	       661	coffcode.h	FUNCTION_21	IF_2
0x4003107	    0x8165e400000e	         and dword [rbp - 0x1c], 0xe0000	       663	coffcode.h	FUNCTION_21	IF_2
0x400310e	    0x814de4082000	           or dword [rbp - 0x1c], 0x2008	       666	coffcode.h	FUNCTION_21	IF_2
0x4003115	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       672	coffcode.h	FUNCTION_21	IF_3
0x4003118	          0x83e010	                           and eax, 0x10	       672	coffcode.h	FUNCTION_21	IF_3
0x400311b	            0x85c0	                           test eax, eax	       672	coffcode.h	FUNCTION_21	IF_3
0x400311d	            0x7405	                            je 0x4003124	       672	coffcode.h	FUNCTION_21	IF_3
0x400311f	      0x48834df820	                or qword [rbp - 8], 0x20	       673	coffcode.h	FUNCTION_21	IF_3
0x4003124	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       674	coffcode.h	FUNCTION_21	IF_4
0x4003127	      0x2520200000	                         and eax, 0x2020	       674	coffcode.h	FUNCTION_21	IF_4
0x400312c	            0x85c0	                           test eax, eax	       674	coffcode.h	FUNCTION_21	IF_4
0x400312e	            0x7405	                            je 0x4003135	       674	coffcode.h	FUNCTION_21	IF_4
0x4003130	      0x48834df840	                or qword [rbp - 8], 0x40	       675	coffcode.h	FUNCTION_21	IF_4
0x4003135	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       676	coffcode.h	FUNCTION_21	IF_5
0x4003138	          0x83e001	                              and eax, 1	       676	coffcode.h	FUNCTION_21	IF_5
0x400313b	            0x85c0	                           test eax, eax	       676	coffcode.h	FUNCTION_21	IF_5
0x400313d	            0x7412	                            je 0x4003151	       676	coffcode.h	FUNCTION_21	IF_5
0x400313f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       676	coffcode.h	FUNCTION_21	IF_5
0x4003142	          0x83e002	                              and eax, 2	       676	coffcode.h	FUNCTION_21	IF_5
0x4003145	            0x85c0	                           test eax, eax	       676	coffcode.h	FUNCTION_21	IF_5
0x4003147	            0x7508	                           jne 0x4003151	       676	coffcode.h	FUNCTION_21	IF_5
0x4003149	    0x48814df88000	                or qword [rbp - 8], 0x80	       677	coffcode.h	FUNCTION_21	IF_5
0x4003151	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       681	coffcode.h	FUNCTION_21	IF_6
0x4003154	      0x2500100000	                         and eax, 0x1000	       681	coffcode.h	FUNCTION_21	IF_6
0x4003159	            0x85c0	                           test eax, eax	       681	coffcode.h	FUNCTION_21	IF_6
0x400315b	            0x7408	                            je 0x4003165	       681	coffcode.h	FUNCTION_21	IF_6
0x400315d	    0x48814df80010	              or qword [rbp - 8], 0x1000	       682	coffcode.h	FUNCTION_21	IF_6
0x4003165	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       683	coffcode.h	FUNCTION_21	IF_7
0x4003168	      0x2500200000	                         and eax, 0x2000	       683	coffcode.h	FUNCTION_21	IF_7
0x400316d	            0x85c0	                           test eax, eax	       683	coffcode.h	FUNCTION_21	IF_7
0x400316f	            0x7408	                            je 0x4003179	       683	coffcode.h	FUNCTION_21	IF_7
0x4003171	    0x48814df80000	           or qword [rbp - 8], 0x2000000	       684	coffcode.h	FUNCTION_21	IF_7
0x4003179	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       685	coffcode.h	FUNCTION_21	IF_8
0x400317c	      0x2500800000	                         and eax, 0x8000	       685	coffcode.h	FUNCTION_21	IF_8
0x4003181	            0x85c0	                           test eax, eax	       685	coffcode.h	FUNCTION_21	IF_8
0x4003183	            0x740e	                            je 0x4003193	       685	coffcode.h	FUNCTION_21	IF_8
0x4003185	        0x837df400	                cmp dword [rbp - 0xc], 0	       685	coffcode.h	FUNCTION_21	IF_8
0x4003189	            0x7508	                           jne 0x4003193	       685	coffcode.h	FUNCTION_21	IF_8
0x400318b	    0x48814df80008	               or qword [rbp - 8], 0x800	       686	coffcode.h	FUNCTION_21	IF_8
0x4003193	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       687	coffcode.h	FUNCTION_21	IF_9
0x4003196	      0x2500020000	                          and eax, 0x200	       687	coffcode.h	FUNCTION_21	IF_9
0x400319b	            0x85c0	                           test eax, eax	       687	coffcode.h	FUNCTION_21	IF_9
0x400319d	            0x740e	                            je 0x40031ad	       687	coffcode.h	FUNCTION_21	IF_9
0x400319f	        0x837df400	                cmp dword [rbp - 0xc], 0	       687	coffcode.h	FUNCTION_21	IF_9
0x40031a3	            0x7508	                           jne 0x40031ad	       687	coffcode.h	FUNCTION_21	IF_9
0x40031a5	    0x48814df80008	               or qword [rbp - 8], 0x800	       688	coffcode.h	FUNCTION_21	IF_9
0x40031ad	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       691	coffcode.h	FUNCTION_21	IF_10
0x40031b0	      0x2500000200	                        and eax, 0x20000	       691	coffcode.h	FUNCTION_21	IF_10
0x40031b5	            0x85c0	                           test eax, eax	       691	coffcode.h	FUNCTION_21	IF_10
0x40031b7	            0x7408	                            je 0x40031c1	       691	coffcode.h	FUNCTION_21	IF_10
0x40031b9	    0x48814df80010	              or qword [rbp - 8], 0x1000	       692	coffcode.h	FUNCTION_21	IF_10
0x40031c1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       694	coffcode.h	FUNCTION_21	IF_11
0x40031c4	      0x2500000c00	                        and eax, 0xc0000	       694	coffcode.h	FUNCTION_21	IF_11
0x40031c9	            0x85c0	                           test eax, eax	       693	coffcode.h	FUNCTION_21	IF_11
0x40031cb	            0x7408	                            je 0x40031d5	       693	coffcode.h	FUNCTION_21	IF_11
0x40031cd	    0x48814df80010	              or qword [rbp - 8], 0x1000	       696	coffcode.h	FUNCTION_21	IF_11
0x40031d5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       700	coffcode.h	FUNCTION_21	IF_12
0x40031d8	      0x2500000040	                     and eax, 0x40000000	       700	coffcode.h	FUNCTION_21	IF_12
0x40031dd	            0x85c0	                           test eax, eax	       700	coffcode.h	FUNCTION_21	IF_12
0x40031df	            0x7508	                           jne 0x40031e9	       700	coffcode.h	FUNCTION_21	IF_12
0x40031e1	    0x48814df80000	          or qword [rbp - 8], 0x40000000	       701	coffcode.h	FUNCTION_21	IF_12
0x40031e9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       702	coffcode.h	FUNCTION_21	IF_13
0x40031ec	          0x83e008	                              and eax, 8	       702	coffcode.h	FUNCTION_21	IF_13
0x40031ef	            0x85c0	                           test eax, eax	       702	coffcode.h	FUNCTION_21	IF_13
0x40031f1	            0x7509	                           jne 0x40031fc	       702	coffcode.h	FUNCTION_21	IF_13
0x40031f3	      0xb800000080	                     mov eax, 0x80000000	       703	coffcode.h	FUNCTION_21	IF_13
0x40031f8	        0x480945f8	                 or qword [rbp - 8], rax	       703	coffcode.h	FUNCTION_21	IF_13
0x40031fc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       704	coffcode.h	FUNCTION_21	IF_14
0x40031ff	          0x83e010	                           and eax, 0x10	       704	coffcode.h	FUNCTION_21	IF_14
0x4003202	            0x85c0	                           test eax, eax	       704	coffcode.h	FUNCTION_21	IF_14
0x4003204	            0x7408	                            je 0x400320e	       704	coffcode.h	FUNCTION_21	IF_14
0x4003206	    0x48814df80000	          or qword [rbp - 8], 0x20000000	       705	coffcode.h	FUNCTION_21	IF_14
0x400320e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       706	coffcode.h	FUNCTION_21	IF_15
0x4003211	      0x2500000008	                   and eax, section_end.	       706	coffcode.h	FUNCTION_21	IF_15
0x4003216	            0x85c0	                           test eax, eax	       706	coffcode.h	FUNCTION_21	IF_15
0x4003218	            0x7408	                            je 0x4003222	       706	coffcode.h	FUNCTION_21	IF_15
0x400321a	    0x48814df80000	          or qword [rbp - 8], 0x10000000	       707	coffcode.h	FUNCTION_21	IF_15
0x4003222	        0x488b45f8	                mov rax, qword [rbp - 8]	       709	coffcode.h	FUNCTION_21
0x4003226	              0xc9	                                   leave	       710	coffcode.h	FUNCTION_21
0x4003227	              0xc3	                                     ret	       710	coffcode.h	FUNCTION_21
coff_new_section_hook	IF,5:CALL,11:ELSE,2:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0	50
0x4003e04	              0x55	                                push rbp	      1750	coffcode.h	FUNCTION_29
0x4003e05	          0x4889e5	                            mov rbp, rsp	      1750	coffcode.h	FUNCTION_29
0x4003e08	        0x4883ec30	                           sub rsp, 0x30	      1750	coffcode.h	FUNCTION_29
0x4003e0c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1750	coffcode.h	FUNCTION_29
0x4003e10	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1750	coffcode.h	FUNCTION_29
0x4003e14	        0xc645ef03	                mov byte [rbp - 0x11], 3	      1753	coffcode.h	FUNCTION_29
0x4003e18	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1755	coffcode.h	FUNCTION_29
0x4003e1c	    0xc74070020000	               mov dword [rax + 0x70], 2	      1755	coffcode.h	FUNCTION_29
0x4003e23	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1780	coffcode.h	FUNCTION_29	IF_4	CALL_8
0x4003e27	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1780	coffcode.h	FUNCTION_29	IF_4	CALL_8
0x4003e2b	          0x4889d6	                            mov rsi, rdx	      1780	coffcode.h	FUNCTION_29	IF_4	CALL_8
0x4003e2e	          0x4889c7	                            mov rdi, rax	      1780	coffcode.h	FUNCTION_29	IF_4	CALL_8
0x4003e31	      0xe800000000	                          call 0x4003e36	      1780	coffcode.h	FUNCTION_29	IF_4	CALL_8
0x4003e36	            0x85c0	                           test eax, eax	      1780	coffcode.h	FUNCTION_29	IF_4	CALL_8
0x4003e38	            0x750a	                           jne 0x4003e44	      1780	coffcode.h	FUNCTION_29	IF_4	CALL_8
0x4003e3a	      0xb800000000	                              mov eax, 0	      1781	coffcode.h	FUNCTION_29	IF_4
0x4003e3f	      0xe984000000	                           jmp 0x4003ec8	      1781	coffcode.h	FUNCTION_29	IF_4
0x4003e44	    0x48c745f03002	          mov qword [rbp - 0x10], 0x230 	      1788	coffcode.h	FUNCTION_29
0x4003e4c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1789	coffcode.h	FUNCTION_29	CALL_9
0x4003e50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1789	coffcode.h	FUNCTION_29	CALL_9
0x4003e54	          0x4889d6	                            mov rsi, rdx	      1789	coffcode.h	FUNCTION_29	CALL_9
0x4003e57	          0x4889c7	                            mov rdi, rax	      1789	coffcode.h	FUNCTION_29	CALL_9
0x4003e5a	      0xe800000000	                          call 0x4003e5f	      1789	coffcode.h	FUNCTION_29	CALL_9
0x4003e5f	        0x488945f8	                mov qword [rbp - 8], rax	      1789	coffcode.h	FUNCTION_29	CALL_9
0x4003e63	      0x48837df800	                  cmp qword [rbp - 8], 0	      1790	coffcode.h	FUNCTION_29	IF_5
0x4003e68	            0x7507	                           jne 0x4003e71	      1790	coffcode.h	FUNCTION_29	IF_5
0x4003e6a	      0xb800000000	                              mov eax, 0	      1791	coffcode.h	FUNCTION_29	IF_5
0x4003e6f	            0xeb57	                           jmp 0x4003ec8	      1791	coffcode.h	FUNCTION_29	IF_5
0x4003e71	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	coffcode.h	FUNCTION_29
0x4003e75	    0xc74030010000	               mov dword [rax + 0x30], 1	      1799	coffcode.h	FUNCTION_29
0x4003e7c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1800	coffcode.h	FUNCTION_29
0x4003e80	    0x66c740260000	                mov word [rax + 0x26], 0	      1800	coffcode.h	FUNCTION_29
0x4003e86	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	coffcode.h	FUNCTION_29
0x4003e8a	         0xfb655ef	            movzx edx, byte [rbp - 0x11]	      1801	coffcode.h	FUNCTION_29
0x4003e8e	          0x885028	               mov byte [rax + 0x28], dl	      1801	coffcode.h	FUNCTION_29
0x4003e91	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1803	coffcode.h	FUNCTION_29	CALL_10
0x4003e95	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1803	coffcode.h	FUNCTION_29	CALL_10
0x4003e9c	          0x4889c2	                            mov rdx, rax	      1803	coffcode.h	FUNCTION_29	CALL_10
0x4003e9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	coffcode.h	FUNCTION_29	CALL_10
0x4003ea3	        0x48894230	             mov qword [rdx + 0x30], rax	      1803	coffcode.h	FUNCTION_29	CALL_10
0x4003ea7	      0xba08000000	                              mov edx, 8	      1805	coffcode.h	FUNCTION_29	CALL_11
0x4003eac	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1805	coffcode.h	FUNCTION_29	CALL_11
0x4003eb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1805	coffcode.h	FUNCTION_29	CALL_11
0x4003eb4	            0x89d1	                            mov ecx, edx	      1805	coffcode.h	FUNCTION_29	CALL_11
0x4003eb6	      0xba00000000	                              mov edx, 0	      1805	coffcode.h	FUNCTION_29	CALL_11
0x4003ebb	          0x4889c7	                            mov rdi, rax	      1805	coffcode.h	FUNCTION_29	CALL_11
0x4003ebe	      0xe88afdffff	call sym.coff_set_custom_section_alignment	      1805	coffcode.h	FUNCTION_29	CALL_11
0x4003ec3	      0xb801000000	                              mov eax, 1	      1809	coffcode.h	FUNCTION_29
0x4003ec8	              0xc9	                                   leave	      1810	coffcode.h	FUNCTION_29
0x4003ec9	              0xc3	                                     ret	      1810	coffcode.h	FUNCTION_29
pe_mkobject	IF,1:CALL,3:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	35
0x4000d0d	              0x55	                                push rbp	       258	peicode.h	FUNCTION_5
0x4000d0e	          0x4889e5	                            mov rbp, rsp	       258	peicode.h	FUNCTION_5
0x4000d11	        0x4883ec20	                           sub rsp, 0x20	       258	peicode.h	FUNCTION_5
0x4000d15	        0x48897de8	             mov qword [rbp - 0x18], rdi	       258	peicode.h	FUNCTION_5
0x4000d19	    0x48c745f0b802	          mov qword [rbp - 0x10], 0x2b8 	       260	peicode.h	FUNCTION_5
0x4000d21	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d29	          0x4889d6	                            mov rsi, rdx	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d2c	          0x4889c7	                            mov rdi, rax	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d2f	      0xe800000000	                          call 0x4000d34	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d34	          0x4889c2	                            mov rdx, rax	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d3b	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       262	peicode.h	FUNCTION_5	CALL_1
0x4000d42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	peicode.h	FUNCTION_5	IF_1
0x4000d46	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       264	peicode.h	FUNCTION_5	IF_1
0x4000d4d	          0x4885c0	                           test rax, rax	       264	peicode.h	FUNCTION_5	IF_1
0x4000d50	            0x7507	                           jne 0x4000d59	       264	peicode.h	FUNCTION_5	IF_1
0x4000d52	      0xb800000000	                              mov eax, 0	       265	peicode.h	FUNCTION_5	IF_1
0x4000d57	            0xeb4d	                           jmp 0x4000da6	       265	peicode.h	FUNCTION_5	IF_1
0x4000d59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       267	peicode.h	FUNCTION_5	CALL_2
0x4000d5d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       267	peicode.h	FUNCTION_5	CALL_2
0x4000d64	        0x488945f8	                mov qword [rbp - 8], rax	       267	peicode.h	FUNCTION_5	CALL_2
0x4000d68	        0x488b45f8	                mov rax, qword [rbp - 8]	       269	peicode.h	FUNCTION_5
0x4000d6c	    0xc78080000000	               mov dword [rax + 0x80], 1	       269	peicode.h	FUNCTION_5
0x4000d76	        0x488b45f8	                mov rax, qword [rbp - 8]	       272	peicode.h	FUNCTION_5
0x4000d7a	    0x48c780900200	              mov qword [rax + 0x290], 0	       272	peicode.h	FUNCTION_5
0x4000d85	        0x488b45f8	                mov rax, qword [rbp - 8]	       274	peicode.h	FUNCTION_5	CALL_3
0x4000d89	    0x4805c8000000	                           add rax, 0xc8	       274	peicode.h	FUNCTION_5	CALL_3
0x4000d8f	      0xbab8010000	                          mov edx, 0x1b8	       274	peicode.h	FUNCTION_5	CALL_3
0x4000d94	      0xbe00000000	                              mov esi, 0	       274	peicode.h	FUNCTION_5	CALL_3
0x4000d99	          0x4889c7	                            mov rdi, rax	       274	peicode.h	FUNCTION_5	CALL_3
0x4000d9c	      0xe800000000	                          call 0x4000da1	       274	peicode.h	FUNCTION_5	CALL_3
0x4000da1	      0xb801000000	                              mov eax, 1	       275	peicode.h	FUNCTION_5
0x4000da6	              0xc9	                                   leave	       276	peicode.h	FUNCTION_5
0x4000da7	              0xc3	                                     ret	       276	peicode.h	FUNCTION_5
pe_ILF_build_a_bfd	IF,24:CALL,53:ELSE,3:SWITCH,4:DO,0:FOR,1:functions,0:WHILE,0	677
0x400177d	              0x55	                                push rbp	       752	peicode.h	FUNCTION_14
0x400177e	          0x4889e5	                            mov rbp, rsp	       752	peicode.h	FUNCTION_14
0x4001781	            0x4154	                                push r12	       752	peicode.h	FUNCTION_14
0x4001783	              0x53	                                push rbx	       752	peicode.h	FUNCTION_14
0x4001784	    0x4881ec400a00	                          sub rsp, 0xa40	       752	peicode.h	FUNCTION_14
0x400178b	    0x4889bdd8f5ff	            mov qword [rbp - 0xa28], rdi	       752	peicode.h	FUNCTION_14
0x4001792	    0x89b5d4f5ffff	            mov dword [rbp - 0xa2c], esi	       752	peicode.h	FUNCTION_14
0x4001798	    0x488995c8f5ff	            mov qword [rbp - 0xa38], rdx	       752	peicode.h	FUNCTION_14
0x400179f	    0x48898dc0f5ff	            mov qword [rbp - 0xa40], rcx	       752	peicode.h	FUNCTION_14
0x40017a6	    0x448985d0f5ff	            mov dword [rbp - 0xa30], r8d	       752	peicode.h	FUNCTION_14
0x40017ad	    0x44898dbcf5ff	            mov dword [rbp - 0xa44], r9d	       752	peicode.h	FUNCTION_14
0x40017b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       752	peicode.h	FUNCTION_14
0x40017bd	        0x488945e8	             mov qword [rbp - 0x18], rax	       752	peicode.h	FUNCTION_14
0x40017c1	            0x31c0	                            xor eax, eax	       752	peicode.h	FUNCTION_14
0x40017c3	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	       758	peicode.h	FUNCTION_14
0x40017ce	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	       758	peicode.h	FUNCTION_14
0x40017d9	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	       763	peicode.h	FUNCTION_14
0x40017df	          0x83e003	                              and eax, 3	       763	peicode.h	FUNCTION_14
0x40017e2	    0x8985f0f5ffff	            mov dword [rbp - 0xa10], eax	       763	peicode.h	FUNCTION_14
0x40017e8	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	       764	peicode.h	FUNCTION_14
0x40017ee	          0x83e01c	                           and eax, 0x1c	       764	peicode.h	FUNCTION_14
0x40017f1	          0xc1e802	                              shr eax, 2	       764	peicode.h	FUNCTION_14
0x40017f4	    0x8985f4f5ffff	            mov dword [rbp - 0xa0c], eax	       764	peicode.h	FUNCTION_14
0x40017fa	    0x8b85f0f5ffff	            mov eax, dword [rbp - 0xa10]	       766	peicode.h	FUNCTION_14	SWITCH_1
0x4001800	          0x83f801	                              cmp eax, 1	       766	peicode.h	FUNCTION_14	SWITCH_1
0x4001803	            0x7677	                           jbe 0x400187c	       766	peicode.h	FUNCTION_14	SWITCH_1
0x4001805	          0x83f802	                              cmp eax, 2	       766	peicode.h	FUNCTION_14	SWITCH_1
0x4001808	            0x7539	                           jne 0x4001843	       766	peicode.h	FUNCTION_14	SWITCH_1
0x400180a	      0xbe00000000	                              mov esi, 0	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x400180f	      0xbf00000000	                              mov edi, 0	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x4001814	      0xe800000000	                          call 0x4001819	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x4001819	          0x4889c1	                            mov rcx, rax	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x400181c	    0x8b95f0f5ffff	            mov edx, dword [rbp - 0xa10]	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x4001822	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x4001829	          0x4889c6	                            mov rsi, rax	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x400182c	          0x4889cf	                            mov rdi, rcx	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x400182f	      0xb800000000	                              mov eax, 0	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x4001834	      0xe800000000	                          call 0x4001839	       775	peicode.h	FUNCTION_14	SWITCH_1	CALL_2
0x4001839	      0xb800000000	                              mov eax, 0	       777	peicode.h	FUNCTION_14	SWITCH_1
0x400183e	      0xe93a0c0000	                           jmp 0x400247d	       777	peicode.h	FUNCTION_14	SWITCH_1
0x4001843	      0xbe00000000	                              mov esi, 0	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x4001848	      0xbf00000000	                              mov edi, 0	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x400184d	      0xe800000000	                          call 0x4001852	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x4001852	          0x4889c1	                            mov rcx, rax	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x4001855	    0x8b95f0f5ffff	            mov edx, dword [rbp - 0xa10]	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x400185b	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x4001862	          0x4889c6	                            mov rsi, rax	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x4001865	          0x4889cf	                            mov rdi, rcx	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x4001868	      0xb800000000	                              mov eax, 0	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x400186d	      0xe800000000	                          call 0x4001872	       781	peicode.h	FUNCTION_14	SWITCH_1	CALL_4
0x4001872	      0xb800000000	                              mov eax, 0	       783	peicode.h	FUNCTION_14	SWITCH_1
0x4001877	      0xe9010c0000	                           jmp 0x400247d	       783	peicode.h	FUNCTION_14	SWITCH_1
0x400187c	              0x90	                                     nop	       770	peicode.h	FUNCTION_14	SWITCH_1
0x400187d	    0x8b85f4f5ffff	            mov eax, dword [rbp - 0xa0c]	       786	peicode.h	FUNCTION_14	SWITCH_2
0x4001883	          0x83f803	                              cmp eax, 3	       786	peicode.h	FUNCTION_14	SWITCH_2
0x4001886	            0x7639	                           jbe 0x40018c1	       786	peicode.h	FUNCTION_14	SWITCH_2
0x4001888	      0xbe00000000	                              mov esi, 0	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x400188d	      0xbf00000000	                              mov edi, 0	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x4001892	      0xe800000000	                          call 0x4001897	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x4001897	          0x4889c1	                            mov rcx, rax	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x400189a	    0x8b95f4f5ffff	            mov edx, dword [rbp - 0xa0c]	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x40018a0	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x40018a7	          0x4889c6	                            mov rsi, rax	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x40018aa	          0x4889cf	                            mov rdi, rcx	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x40018ad	      0xb800000000	                              mov eax, 0	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x40018b2	      0xe800000000	                          call 0x40018b7	       796	peicode.h	FUNCTION_14	SWITCH_2	CALL_6
0x40018b7	      0xb800000000	                              mov eax, 0	       798	peicode.h	FUNCTION_14	SWITCH_2
0x40018bc	      0xe9bc0b0000	                           jmp 0x400247d	       798	peicode.h	FUNCTION_14	SWITCH_2
0x40018c1	              0x90	                                     nop	       792	peicode.h	FUNCTION_14	SWITCH_2
0x40018c2	      0xbf10000000	                           mov edi, 0x10	       809	peicode.h	FUNCTION_14	CALL_7
0x40018c7	      0xe800000000	                          call 0x40018cc	       809	peicode.h	FUNCTION_14	CALL_7
0x40018cc	    0x48898550f6ff	            mov qword [rbp - 0x9b0], rax	       809	peicode.h	FUNCTION_14	CALL_7
0x40018d3	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	       810	peicode.h	FUNCTION_14	IF_1
0x40018da	          0x4885c0	                           test rax, rax	       810	peicode.h	FUNCTION_14	IF_1
0x40018dd	            0x750a	                           jne 0x40018e9	       810	peicode.h	FUNCTION_14	IF_1
0x40018df	      0xb800000000	                              mov eax, 0	       811	peicode.h	FUNCTION_14	IF_1
0x40018e4	      0xe9940b0000	                           jmp 0x400247d	       811	peicode.h	FUNCTION_14	IF_1
0x40018e9	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       813	peicode.h	FUNCTION_14	CALL_8
0x40018f0	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_14	CALL_8
0x40018f3	      0xe800000000	                          call 0x40018f8	       813	peicode.h	FUNCTION_14	CALL_8
0x40018f8	        0x4883c004	                              add rax, 4	       813	peicode.h	FUNCTION_14	CALL_8
0x40018fc	        0x488d1c00	                    lea rbx, [rax + rax]	       813	peicode.h	FUNCTION_14	CALL_8
0x4001900	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       813	peicode.h	FUNCTION_14	CALL_8
0x4001907	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_14	CALL_8
0x400190a	      0xe800000000	                          call 0x400190f	       813	peicode.h	FUNCTION_14	CALL_8
0x400190f	          0x4801c3	                            add rbx, rax	       813	peicode.h	FUNCTION_14	CALL_8
0x4001912	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       813	peicode.h	FUNCTION_14	CALL_8
0x4001919	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_14	CALL_8
0x400191c	      0xe800000000	                          call 0x4001921	       813	peicode.h	FUNCTION_14	CALL_8
0x4001921	          0x4801c3	                            add rbx, rax	       813	peicode.h	FUNCTION_14	CALL_8
0x4001924	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       813	peicode.h	FUNCTION_14	CALL_8
0x400192b	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_14	CALL_8
0x400192e	      0xe800000000	                          call 0x4001933	       813	peicode.h	FUNCTION_14	CALL_8
0x4001933	          0x4801d8	                            add rax, rbx	       813	peicode.h	FUNCTION_14	CALL_8
0x4001936	    0x4805c1090000	                          add rax, 0x9c1	       813	peicode.h	FUNCTION_14	CALL_8
0x400193c	          0x4889c7	                            mov rdi, rax	       813	peicode.h	FUNCTION_14	CALL_8
0x400193f	      0xe800000000	                          call 0x4001944	       813	peicode.h	FUNCTION_14	CALL_8
0x4001944	    0x48898500f6ff	            mov qword [rbp - 0xa00], rax	       813	peicode.h	FUNCTION_14	CALL_8
0x400194b	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	       814	peicode.h	FUNCTION_14
0x4001952	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	       814	peicode.h	FUNCTION_14
0x4001959	        0x48895008	                mov qword [rax + 8], rdx	       814	peicode.h	FUNCTION_14
0x400195d	    0x488b9d50f6ff	            mov rbx, qword [rbp - 0x9b0]	       815	peicode.h	FUNCTION_14
0x4001964	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       815	peicode.h	FUNCTION_14
0x400196b	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_14
0x400196e	      0xe800000000	                          call 0x4001973	       815	peicode.h	FUNCTION_14
0x4001973	        0x4883c004	                              add rax, 4	       815	peicode.h	FUNCTION_14
0x4001977	        0x4c8d2400	                    lea r12, [rax + rax]	       815	peicode.h	FUNCTION_14
0x400197b	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       815	peicode.h	FUNCTION_14
0x4001982	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_14
0x4001985	      0xe800000000	                          call 0x400198a	       815	peicode.h	FUNCTION_14
0x400198a	          0x4901c4	                            add r12, rax	       815	peicode.h	FUNCTION_14
0x400198d	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       815	peicode.h	FUNCTION_14
0x4001994	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_14
0x4001997	      0xe800000000	                          call 0x400199c	       815	peicode.h	FUNCTION_14
0x400199c	          0x4901c4	                            add r12, rax	       815	peicode.h	FUNCTION_14
0x400199f	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       815	peicode.h	FUNCTION_14
0x40019a6	          0x4889c7	                            mov rdi, rax	       815	peicode.h	FUNCTION_14
0x40019a9	      0xe800000000	                          call 0x40019ae	       815	peicode.h	FUNCTION_14
0x40019ae	          0x4c01e0	                            add rax, r12	       815	peicode.h	FUNCTION_14
0x40019b1	    0x4805c1090000	                          add rax, 0x9c1	       815	peicode.h	FUNCTION_14
0x40019b7	          0x488903	                    mov qword [rbx], rax	       815	peicode.h	FUNCTION_14
0x40019ba	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	       816	peicode.h	FUNCTION_14	IF_2
0x40019c2	     0xf84710a0000	                            je 0x4002439	       816	peicode.h	FUNCTION_14	IF_2
0x40019c8	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       821	peicode.h	FUNCTION_14
0x40019cf	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	       821	peicode.h	FUNCTION_14
0x40019d6	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       822	peicode.h	FUNCTION_14
0x40019dd	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	       822	peicode.h	FUNCTION_14
0x40019e4	    0xc78580f6ffff	              mov dword [rbp - 0x980], 0	       823	peicode.h	FUNCTION_14
0x40019ee	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x240	       824	peicode.h	FUNCTION_14
0x40019f9	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       826	peicode.h	FUNCTION_14
0x4001a00	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	       826	peicode.h	FUNCTION_14
0x4001a07	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       827	peicode.h	FUNCTION_14
0x4001a0e	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	       827	peicode.h	FUNCTION_14
0x4001a15	    0x48838500f6ff	           add qword [rbp - 0xa00], 0x20	       828	peicode.h	FUNCTION_14
0x4001a1d	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       830	peicode.h	FUNCTION_14
0x4001a24	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	       830	peicode.h	FUNCTION_14
0x4001a2b	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       831	peicode.h	FUNCTION_14
0x4001a32	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	       831	peicode.h	FUNCTION_14
0x4001a39	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x1c0	       832	peicode.h	FUNCTION_14
0x4001a44	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       834	peicode.h	FUNCTION_14
0x4001a4b	    0x488985a8f6ff	            mov qword [rbp - 0x958], rax	       834	peicode.h	FUNCTION_14
0x4001a52	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       835	peicode.h	FUNCTION_14
0x4001a59	    0x488985b0f6ff	            mov qword [rbp - 0x950], rax	       835	peicode.h	FUNCTION_14
0x4001a60	    0x48838500f6ff	          add qword [rbp - 0xa00], 0x40 	       836	peicode.h	FUNCTION_14
0x4001a68	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       838	peicode.h	FUNCTION_14
0x4001a6f	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       838	peicode.h	FUNCTION_14
0x4001a76	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       839	peicode.h	FUNCTION_14
0x4001a7d	    0x488985e0f6ff	            mov qword [rbp - 0x920], rax	       839	peicode.h	FUNCTION_14
0x4001a84	    0x48818500f6ff	           add qword [rbp - 0xa00], 0x90	       840	peicode.h	FUNCTION_14
0x4001a8f	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       842	peicode.h	FUNCTION_14
0x4001a96	    0x48898560f6ff	            mov qword [rbp - 0x9a0], rax	       842	peicode.h	FUNCTION_14
0x4001a9d	    0xc78568f6ffff	              mov dword [rbp - 0x998], 0	       843	peicode.h	FUNCTION_14
0x4001aa7	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x100	       844	peicode.h	FUNCTION_14
0x4001ab2	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       846	peicode.h	FUNCTION_14
0x4001ab9	    0x488985e8f6ff	            mov qword [rbp - 0x918], rax	       846	peicode.h	FUNCTION_14
0x4001ac0	    0x48818500f6ff	          add qword [rbp - 0xa00], 0x100	       847	peicode.h	FUNCTION_14
0x4001acb	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       849	peicode.h	FUNCTION_14
0x4001ad2	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	       849	peicode.h	FUNCTION_14
0x4001ad9	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       850	peicode.h	FUNCTION_14
0x4001ae0	        0x4883c004	                              add rax, 4	       850	peicode.h	FUNCTION_14
0x4001ae4	    0x488985c8f6ff	            mov qword [rbp - 0x938], rax	       850	peicode.h	FUNCTION_14
0x4001aeb	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       851	peicode.h	FUNCTION_14
0x4001af2	          0x4889c7	                            mov rdi, rax	       851	peicode.h	FUNCTION_14
0x4001af5	      0xe800000000	                          call 0x4001afa	       851	peicode.h	FUNCTION_14
0x4001afa	        0x4883c004	                              add rax, 4	       851	peicode.h	FUNCTION_14
0x4001afe	        0x488d1c00	                    lea rbx, [rax + rax]	       851	peicode.h	FUNCTION_14
0x4001b02	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       851	peicode.h	FUNCTION_14
0x4001b09	          0x4889c7	                            mov rdi, rax	       851	peicode.h	FUNCTION_14
0x4001b0c	      0xe800000000	                          call 0x4001b11	       851	peicode.h	FUNCTION_14
0x4001b11	          0x4801d8	                            add rax, rbx	       851	peicode.h	FUNCTION_14
0x4001b14	        0x4883c04f	                           add rax, 0x4f	       851	peicode.h	FUNCTION_14
0x4001b18	    0x48018500f6ff	           add qword [rbp - 0xa00], rax 	       851	peicode.h	FUNCTION_14
0x4001b1f	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       852	peicode.h	FUNCTION_14
0x4001b26	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       852	peicode.h	FUNCTION_14
0x4001b2d	    0xc785f8f5ffff	              mov dword [rbp - 0xa08], 8	       867	peicode.h	FUNCTION_14	CALL_9
0x4001b37	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       869	peicode.h	FUNCTION_14	IF_3
0x4001b3e	          0x4889c7	                            mov rdi, rax	       869	peicode.h	FUNCTION_14	IF_3
0x4001b41	      0xe800000000	                          call 0x4001b46	       869	peicode.h	FUNCTION_14	IF_3
0x4001b46	        0x4883c004	                              add rax, 4	       869	peicode.h	FUNCTION_14	IF_3
0x4001b4a	        0x488d1c00	                    lea rbx, [rax + rax]	       869	peicode.h	FUNCTION_14	IF_3
0x4001b4e	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       869	peicode.h	FUNCTION_14	IF_3
0x4001b55	          0x4889c7	                            mov rdi, rax	       869	peicode.h	FUNCTION_14	IF_3
0x4001b58	      0xe800000000	                          call 0x4001b5d	       869	peicode.h	FUNCTION_14	IF_3
0x4001b5d	          0x4801d8	                            add rax, rbx	       869	peicode.h	FUNCTION_14	IF_3
0x4001b60	        0x488d504f	                   lea rdx, [rax + 0x4f]	       869	peicode.h	FUNCTION_14	IF_3
0x4001b64	    0x8b85f8f5ffff	            mov eax, dword [rbp - 0xa08]	       869	peicode.h	FUNCTION_14	IF_3
0x4001b6a	          0x83e801	                              sub eax, 1	       869	peicode.h	FUNCTION_14	IF_3
0x4001b6d	            0x89c0	                            mov eax, eax	       869	peicode.h	FUNCTION_14	IF_3
0x4001b6f	          0x4821d0	                            and rax, rdx	       869	peicode.h	FUNCTION_14	IF_3
0x4001b72	          0x4885c0	                           test rax, rax	       869	peicode.h	FUNCTION_14	IF_3
0x4001b75	            0x744e	                            je 0x4001bc5	       869	peicode.h	FUNCTION_14	IF_3
0x4001b77	    0x8b9df8f5ffff	            mov ebx, dword [rbp - 0xa08]	       870	peicode.h	FUNCTION_14	IF_3
0x4001b7d	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       870	peicode.h	FUNCTION_14	IF_3
0x4001b84	          0x4889c7	                            mov rdi, rax	       870	peicode.h	FUNCTION_14	IF_3
0x4001b87	      0xe800000000	                          call 0x4001b8c	       870	peicode.h	FUNCTION_14	IF_3
0x4001b8c	        0x4883c004	                              add rax, 4	       870	peicode.h	FUNCTION_14	IF_3
0x4001b90	        0x4c8d2400	                    lea r12, [rax + rax]	       870	peicode.h	FUNCTION_14	IF_3
0x4001b94	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	       870	peicode.h	FUNCTION_14	IF_3
0x4001b9b	          0x4889c7	                            mov rdi, rax	       870	peicode.h	FUNCTION_14	IF_3
0x4001b9e	      0xe800000000	                          call 0x4001ba3	       870	peicode.h	FUNCTION_14	IF_3
0x4001ba3	          0x4c01e0	                            add rax, r12	       870	peicode.h	FUNCTION_14	IF_3
0x4001ba6	        0x488d504f	                   lea rdx, [rax + 0x4f]	       870	peicode.h	FUNCTION_14	IF_3
0x4001baa	    0x8b85f8f5ffff	            mov eax, dword [rbp - 0xa08]	       870	peicode.h	FUNCTION_14	IF_3
0x4001bb0	          0x83e801	                              sub eax, 1	       870	peicode.h	FUNCTION_14	IF_3
0x4001bb3	            0x89c0	                            mov eax, eax	       870	peicode.h	FUNCTION_14	IF_3
0x4001bb5	          0x4821d0	                            and rax, rdx	       870	peicode.h	FUNCTION_14	IF_3
0x4001bb8	          0x4829c3	                            sub rbx, rax	       870	peicode.h	FUNCTION_14	IF_3
0x4001bbb	          0x4889d8	                            mov rax, rbx	       870	peicode.h	FUNCTION_14	IF_3
0x4001bbe	    0x48018500f6ff	           add qword [rbp - 0xa00], rax 	       870	peicode.h	FUNCTION_14	IF_3
0x4001bc5	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	       874	peicode.h	FUNCTION_14
0x4001bcc	    0x48898548f6ff	            mov qword [rbp - 0x9b8], rax	       874	peicode.h	FUNCTION_14
0x4001bd3	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       875	peicode.h	FUNCTION_14
0x4001bda	    0x48898540f6ff	            mov qword [rbp - 0x9c0], rax	       875	peicode.h	FUNCTION_14
0x4001be1	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 0	       876	peicode.h	FUNCTION_14
0x4001beb	    0x8b85d4f5ffff	            mov eax, dword [rbp - 0xa2c]	       877	peicode.h	FUNCTION_14
0x4001bf1	    0x66898558f6ff	              mov word [rbp - 0x9a8], ax	       877	peicode.h	FUNCTION_14
0x4001bf8	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       886	peicode.h	FUNCTION_14	CALL_10
0x4001bff	      0xb900000000	                              mov ecx, 0	       886	peicode.h	FUNCTION_14	CALL_10
0x4001c04	      0xba04000000	                              mov edx, 4	       886	peicode.h	FUNCTION_14	CALL_10
0x4001c09	      0xbe00000000	                              mov esi, 0	       886	peicode.h	FUNCTION_14	CALL_10
0x4001c0e	          0x4889c7	                            mov rdi, rax	       886	peicode.h	FUNCTION_14	CALL_10
0x4001c11	      0xe859f9ffff	          call sym.pe_ILF_make_a_section	       886	peicode.h	FUNCTION_14	CALL_10
0x4001c16	    0x48898520f6ff	            mov qword [rbp - 0x9e0], rax	       886	peicode.h	FUNCTION_14	CALL_10
0x4001c1d	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       887	peicode.h	FUNCTION_14	CALL_11
0x4001c24	      0xb900000000	                              mov ecx, 0	       887	peicode.h	FUNCTION_14	CALL_11
0x4001c29	      0xba04000000	                              mov edx, 4	       887	peicode.h	FUNCTION_14	CALL_11
0x4001c2e	      0xbe00000000	                              mov esi, 0	       887	peicode.h	FUNCTION_14	CALL_11
0x4001c33	          0x4889c7	                            mov rdi, rax	       887	peicode.h	FUNCTION_14	CALL_11
0x4001c36	      0xe834f9ffff	          call sym.pe_ILF_make_a_section	       887	peicode.h	FUNCTION_14	CALL_11
0x4001c3b	    0x48898528f6ff	            mov qword [rbp - 0x9d8], rax	       887	peicode.h	FUNCTION_14	CALL_11
0x4001c42	    0x4883bd20f6ff	              cmp qword [rbp - 0x9e0], 0	       888	peicode.h	FUNCTION_14	IF_4
0x4001c4a	     0xf84f6070000	                            je 0x4002446	       888	peicode.h	FUNCTION_14	IF_4
0x4001c50	    0x4883bd28f6ff	              cmp qword [rbp - 0x9d8], 0	       888	peicode.h	FUNCTION_14	IF_4
0x4001c58	     0xf84e8070000	                            je 0x4002446	       888	peicode.h	FUNCTION_14	IF_4
0x4001c5e	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 0	       892	peicode.h	FUNCTION_14	IF_5
0x4001c65	            0x754a	                           jne 0x4001cb1	       892	peicode.h	FUNCTION_14	IF_5
0x4001c67	    0x83bdd0f5ffff	              cmp dword [rbp - 0xa30], 0	       894	peicode.h	FUNCTION_14	IF_5	IF_6
0x4001c6e	     0xf84c8070000	                            je 0x400243c	       894	peicode.h	FUNCTION_14	IF_5	IF_6
0x4001c74	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	       904	peicode.h	FUNCTION_14	IF_5
0x4001c7b	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       904	peicode.h	FUNCTION_14	IF_5
0x4001c82	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       904	peicode.h	FUNCTION_14	IF_5
0x4001c88	    0x81ca00000080	                      or edx, 0x80000000	       904	peicode.h	FUNCTION_14	IF_5
0x4001c8e	            0x8910	                    mov dword [rax], edx	       904	peicode.h	FUNCTION_14	IF_5
0x4001c90	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	       905	peicode.h	FUNCTION_14	IF_5
0x4001c97	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       905	peicode.h	FUNCTION_14	IF_5
0x4001c9e	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       905	peicode.h	FUNCTION_14	IF_5
0x4001ca4	    0x81ca00000080	                      or edx, 0x80000000	       905	peicode.h	FUNCTION_14	IF_5
0x4001caa	            0x8910	                    mov dword [rax], edx	       905	peicode.h	FUNCTION_14	IF_5
0x4001cac	      0xe976010000	                           jmp 0x4001e27	       905	peicode.h	FUNCTION_14	IF_5
0x4001cb1	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cb8	          0x4889c7	                            mov rdi, rax	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cbb	      0xe800000000	                          call 0x4001cc0	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cc0	          0x8d5004	                      lea edx, [rax + 4]	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cc3	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cca	      0xb900000000	                              mov ecx, 0	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001ccf	      0xbe00000000	                              mov esi, 0	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cd4	          0x4889c7	                            mov rdi, rax	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cd7	      0xe893f8ffff	          call sym.pe_ILF_make_a_section	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001cdc	    0x48898508f6ff	            mov qword [rbp - 0x9f8], rax	       914	peicode.h	FUNCTION_14	ELSE_1	CALL_12
0x4001ce3	    0x4883bd08f6ff	              cmp qword [rbp - 0x9f8], 0	       915	peicode.h	FUNCTION_14	ELSE_1	IF_7
0x4001ceb	     0xf844e070000	                            je 0x400243f	       915	peicode.h	FUNCTION_14	ELSE_1	IF_7
0x4001cf1	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	       919	peicode.h	FUNCTION_14	ELSE_1
0x4001cf8	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	       919	peicode.h	FUNCTION_14	ELSE_1
0x4001cff	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 1	       928	peicode.h	FUNCTION_14	ELSE_1	IF_8
0x4001d06	            0x7446	                            je 0x4001d4e	       928	peicode.h	FUNCTION_14	ELSE_1	IF_8
0x4001d08	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       930	peicode.h	FUNCTION_14	ELSE_1	IF_8
0x4001d0f	           0xfb600	                   movzx eax, byte [rax]	       930	peicode.h	FUNCTION_14	ELSE_1	IF_8
0x4001d12	    0x8885e7f5ffff	              mov byte [rbp - 0xa19], al	       930	peicode.h	FUNCTION_14	ELSE_1	IF_8
0x4001d18	    0x80bde7f5ffff	           cmp byte [rbp - 0xa19], 0x5f 	       934	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d1f	            0x7513	                           jne 0x4001d34	       934	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d21	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	       934	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d28	        0x488b4008	                mov rax, qword [rax + 8]	       934	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d2c	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	       934	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d30	            0x84c0	                             test al, al	       934	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d32	            0x7512	                           jne 0x4001d46	       934	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d34	    0x80bde7f5ffff	           cmp byte [rbp - 0xa19], 0x40 	       935	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d3b	            0x7409	                            je 0x4001d46	       935	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d3d	    0x80bde7f5ffff	           cmp byte [rbp - 0xa19], 0x3f 	       935	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d44	            0x7508	                           jne 0x4001d4e	       935	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d46	    0x48838518f6ff	              add qword [rbp - 0x9e8], 1	       936	peicode.h	FUNCTION_14	ELSE_1	IF_8	IF_9
0x4001d4e	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       939	peicode.h	FUNCTION_14	ELSE_1	CALL_13
0x4001d55	          0x4889c7	                            mov rdi, rax	       939	peicode.h	FUNCTION_14	ELSE_1	CALL_13
0x4001d58	      0xe800000000	                          call 0x4001d5d	       939	peicode.h	FUNCTION_14	ELSE_1	CALL_13
0x4001d5d	    0x8985e8f5ffff	            mov dword [rbp - 0xa18], eax	       939	peicode.h	FUNCTION_14	ELSE_1	CALL_13
0x4001d63	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 3	       940	peicode.h	FUNCTION_14	ELSE_1	IF_10
0x4001d6a	            0x753f	                           jne 0x4001dab	       940	peicode.h	FUNCTION_14	ELSE_1	IF_10
0x4001d6c	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       943	peicode.h	FUNCTION_14	ELSE_1	IF_10	CALL_14
0x4001d73	      0xbe40000000	                           mov esi, 0x40	       943	peicode.h	FUNCTION_14	ELSE_1	IF_10	CALL_14
0x4001d78	          0x4889c7	                            mov rdi, rax	       943	peicode.h	FUNCTION_14	ELSE_1	IF_10	CALL_14
0x4001d7b	      0xe800000000	                          call 0x4001d80	       943	peicode.h	FUNCTION_14	ELSE_1	IF_10	CALL_14
0x4001d80	    0x48898530f6ff	            mov qword [rbp - 0x9d0], rax	       943	peicode.h	FUNCTION_14	ELSE_1	IF_10	CALL_14
0x4001d87	    0x4883bd30f6ff	              cmp qword [rbp - 0x9d0], 0	       945	peicode.h	FUNCTION_14	ELSE_1	IF_10	IF_11
0x4001d8f	            0x741a	                            je 0x4001dab	       945	peicode.h	FUNCTION_14	ELSE_1	IF_10	IF_11
0x4001d91	    0x488b9530f6ff	            mov rdx, qword [rbp - 0x9d0]	       946	peicode.h	FUNCTION_14	ELSE_1	IF_10	IF_11
0x4001d98	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       946	peicode.h	FUNCTION_14	ELSE_1	IF_10	IF_11
0x4001d9f	          0x4829c2	                            sub rdx, rax	       946	peicode.h	FUNCTION_14	ELSE_1	IF_10	IF_11
0x4001da2	          0x4889d0	                            mov rax, rdx	       946	peicode.h	FUNCTION_14	ELSE_1	IF_10	IF_11
0x4001da5	    0x8985e8f5ffff	            mov dword [rbp - 0xa18], eax	       946	peicode.h	FUNCTION_14	ELSE_1	IF_10	IF_11
0x4001dab	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       949	peicode.h	FUNCTION_14	ELSE_1
0x4001db2	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       949	peicode.h	FUNCTION_14	ELSE_1
0x4001db9	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       949	peicode.h	FUNCTION_14	ELSE_1
0x4001dbf	            0x8810	                      mov byte [rax], dl	       949	peicode.h	FUNCTION_14	ELSE_1
0x4001dc1	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       950	peicode.h	FUNCTION_14	ELSE_1
0x4001dc8	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       950	peicode.h	FUNCTION_14	ELSE_1
0x4001dcf	        0x4883c001	                              add rax, 1	       950	peicode.h	FUNCTION_14	ELSE_1
0x4001dd3	    0x8b95d0f5ffff	            mov edx, dword [rbp - 0xa30]	       950	peicode.h	FUNCTION_14	ELSE_1
0x4001dd9	          0xc1ea08	                              shr edx, 8	       950	peicode.h	FUNCTION_14	ELSE_1
0x4001ddc	            0x8810	                      mov byte [rax], dl	       950	peicode.h	FUNCTION_14	ELSE_1
0x4001dde	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001de4	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001deb	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001df2	        0x488d4802	                      lea rcx, [rax + 2]	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001df6	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001dfd	          0x4889c6	                            mov rsi, rax	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001e00	          0x4889cf	                            mov rdi, rcx	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001e03	      0xe800000000	                          call 0x4001e08	       952	peicode.h	FUNCTION_14	ELSE_1	CALL_15
0x4001e08	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	       953	peicode.h	FUNCTION_14	ELSE_1
0x4001e0f	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       953	peicode.h	FUNCTION_14	ELSE_1
0x4001e16	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	       953	peicode.h	FUNCTION_14	ELSE_1
0x4001e1c	          0x83c202	                              add edx, 2	       953	peicode.h	FUNCTION_14	ELSE_1
0x4001e1f	            0x89d2	                            mov edx, edx	       953	peicode.h	FUNCTION_14	ELSE_1
0x4001e21	          0x4801d0	                            add rax, rdx	       953	peicode.h	FUNCTION_14	ELSE_1
0x4001e24	          0xc60000	                       mov byte [rax], 0	       953	peicode.h	FUNCTION_14	ELSE_1
0x4001e27	    0x83bdf4f5ffff	              cmp dword [rbp - 0xa0c], 0	       956	peicode.h	FUNCTION_14	IF_12
0x4001e2e	            0x7478	                            je 0x4001ea8	       956	peicode.h	FUNCTION_14	IF_12
0x4001e30	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	       958	peicode.h	FUNCTION_14	IF_12	CALL_16
0x4001e37	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       958	peicode.h	FUNCTION_14	IF_12	CALL_16
0x4001e3e	          0x4889d1	                            mov rcx, rdx	       958	peicode.h	FUNCTION_14	IF_12	CALL_16
0x4001e41	      0xba3e000000	                           mov edx, 0x3e	       958	peicode.h	FUNCTION_14	IF_12	CALL_16
0x4001e46	      0xbe00000000	                              mov esi, 0	       958	peicode.h	FUNCTION_14	IF_12	CALL_16
0x4001e4b	          0x4889c7	                            mov rdi, rax	       958	peicode.h	FUNCTION_14	IF_12	CALL_16
0x4001e4e	      0xe810f3ffff	            call sym.pe_ILF_make_a_reloc	       958	peicode.h	FUNCTION_14	IF_12	CALL_16
0x4001e53	    0x488b9520f6ff	            mov rdx, qword [rbp - 0x9e0]	       959	peicode.h	FUNCTION_14	IF_12	CALL_17
0x4001e5a	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       959	peicode.h	FUNCTION_14	IF_12	CALL_17
0x4001e61	          0x4889d6	                            mov rsi, rdx	       959	peicode.h	FUNCTION_14	IF_12	CALL_17
0x4001e64	          0x4889c7	                            mov rdi, rax	       959	peicode.h	FUNCTION_14	IF_12	CALL_17
0x4001e67	      0xe840f3ffff	             call sym.pe_ILF_save_relocs	       959	peicode.h	FUNCTION_14	IF_12	CALL_17
0x4001e6c	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	       961	peicode.h	FUNCTION_14	IF_12	CALL_18
0x4001e73	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       961	peicode.h	FUNCTION_14	IF_12	CALL_18
0x4001e7a	          0x4889d1	                            mov rcx, rdx	       961	peicode.h	FUNCTION_14	IF_12	CALL_18
0x4001e7d	      0xba3e000000	                           mov edx, 0x3e	       961	peicode.h	FUNCTION_14	IF_12	CALL_18
0x4001e82	      0xbe00000000	                              mov esi, 0	       961	peicode.h	FUNCTION_14	IF_12	CALL_18
0x4001e87	          0x4889c7	                            mov rdi, rax	       961	peicode.h	FUNCTION_14	IF_12	CALL_18
0x4001e8a	      0xe8d4f2ffff	            call sym.pe_ILF_make_a_reloc	       961	peicode.h	FUNCTION_14	IF_12	CALL_18
0x4001e8f	    0x488b9528f6ff	            mov rdx, qword [rbp - 0x9d8]	       962	peicode.h	FUNCTION_14	IF_12	CALL_19
0x4001e96	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       962	peicode.h	FUNCTION_14	IF_12	CALL_19
0x4001e9d	          0x4889d6	                            mov rsi, rdx	       962	peicode.h	FUNCTION_14	IF_12	CALL_19
0x4001ea0	          0x4889c7	                            mov rdi, rax	       962	peicode.h	FUNCTION_14	IF_12	CALL_19
0x4001ea3	      0xe804f3ffff	             call sym.pe_ILF_save_relocs	       962	peicode.h	FUNCTION_14	IF_12	CALL_19
0x4001ea8	    0x488b8d28f6ff	            mov rcx, qword [rbp - 0x9d8]	       966	peicode.h	FUNCTION_14	CALL_20
0x4001eaf	    0x488b95c8f5ff	            mov rdx, qword [rbp - 0xa38]	       966	peicode.h	FUNCTION_14	CALL_20
0x4001eb6	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       966	peicode.h	FUNCTION_14	CALL_20
0x4001ebd	    0x41b800000000	                              mov r8d, 0	       966	peicode.h	FUNCTION_14	CALL_20
0x4001ec3	      0xbe00000000	                              mov esi, 0	       966	peicode.h	FUNCTION_14	CALL_20
0x4001ec8	          0x4889c7	                            mov rdi, rax	       966	peicode.h	FUNCTION_14	CALL_20
0x4001ecb	      0xe8edf3ffff	           call sym.pe_ILF_make_a_symbol	       966	peicode.h	FUNCTION_14	CALL_20
0x4001ed0	    0x488b85b0f6ff	            mov rax, qword [rbp - 0x950]	       967	peicode.h	FUNCTION_14
0x4001ed7	        0x4883e808	                              sub rax, 8	       967	peicode.h	FUNCTION_14
0x4001edb	    0x48898538f6ff	            mov qword [rbp - 0x9c8], rax	       967	peicode.h	FUNCTION_14
0x4001ee2	    0x8b8580f6ffff	            mov eax, dword [rbp - 0x980]	       968	peicode.h	FUNCTION_14
0x4001ee8	          0x83e801	                              sub eax, 1	       968	peicode.h	FUNCTION_14
0x4001eeb	    0x8985fcf5ffff	            mov dword [rbp - 0xa04], eax	       968	peicode.h	FUNCTION_14
0x4001ef1	    0x8b85f0f5ffff	            mov eax, dword [rbp - 0xa10]	       971	peicode.h	FUNCTION_14	SWITCH_3
0x4001ef7	            0x85c0	                           test eax, eax	       971	peicode.h	FUNCTION_14	SWITCH_3
0x4001ef9	            0x740e	                            je 0x4001f09	       971	peicode.h	FUNCTION_14	SWITCH_3
0x4001efb	          0x83f801	                              cmp eax, 1	       971	peicode.h	FUNCTION_14	SWITCH_3
0x4001efe	     0xf84da010000	                            je 0x40020de	       971	peicode.h	FUNCTION_14	SWITCH_3
0x4001f04	      0xe9c1010000	                           jmp 0x40020ca	       971	peicode.h	FUNCTION_14	SWITCH_3
0x4001f09	    0xc785ecf5ffff	              mov dword [rbp - 0xa14], 2	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f13	            0xeb5c	                           jmp 0x4001f71	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f15	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f1b	          0x4863d0	                         movsxd rdx, eax	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f1e	          0x4889d0	                            mov rax, rdx	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f21	        0x48c1e002	                              shl rax, 2	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f25	          0x4801d0	                            add rax, rdx	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f28	          0x4801c0	                            add rax, rax	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f2b	          0x4801d0	                            add rax, rdx	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f2e	        0x48c1e002	                              shl rax, 2	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f32	    0x480500000000	                              add rax, 0	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f38	            0x8b00	                    mov eax, dword [rax]	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f3a	            0x85c0	                           test eax, eax	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f3c	            0x7502	                           jne 0x4001f40	       981	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f3e	            0xeb31	                           jmp 0x4001f71	       982	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_13
0x4001f40	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f46	          0x4863d0	                         movsxd rdx, eax	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f49	          0x4889d0	                            mov rax, rdx	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f4c	        0x48c1e002	                              shl rax, 2	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f50	          0x4801d0	                            add rax, rdx	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f53	          0x4801c0	                            add rax, rax	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f56	          0x4801d0	                            add rax, rdx	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f59	        0x48c1e002	                              shl rax, 2	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f5d	    0x480500000000	                              add rax, 0	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f63	           0xfb700	                   movzx eax, word [rax]	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f66	           0xfb7c0	                           movzx eax, ax	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f69	    0x3b85d4f5ffff	            cmp eax, dword [rbp - 0xa2c]	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f6f	            0x7415	                            je 0x4001f86	       983	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f71	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f77	          0x8d50ff	                      lea edx, [rax - 1]	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f7a	    0x8995ecf5ffff	            mov dword [rbp - 0xa14], edx	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f80	            0x85c0	                           test eax, eax	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f82	            0x7591	                           jne 0x4001f15	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f84	            0xeb01	                           jmp 0x4001f87	       979	peicode.h	FUNCTION_14	SWITCH_3	FOR_1
0x4001f86	              0x90	                                     nop	       984	peicode.h	FUNCTION_14	SWITCH_3	FOR_1	IF_14
0x4001f87	    0x83bdecf5ffff	              cmp dword [rbp - 0xa14], 0	       987	peicode.h	FUNCTION_14	SWITCH_3	IF_15
0x4001f8e	            0x7914	                           jns 0x4001fa4	       987	peicode.h	FUNCTION_14	SWITCH_3	IF_15
0x4001f90	      0xba00000000	                              mov edx, 0	       988	peicode.h	FUNCTION_14	SWITCH_3	CALL_21
0x4001f95	      0xbedc030000	                          mov esi, 0x3dc	       988	peicode.h	FUNCTION_14	SWITCH_3	CALL_21
0x4001f9a	      0xbf00000000	                              mov edi, 0	       988	peicode.h	FUNCTION_14	SWITCH_3	CALL_21
0x4001f9f	      0xe800000000	                          call 0x4001fa4	       988	peicode.h	FUNCTION_14	SWITCH_3	CALL_21
0x4001fa4	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001faa	          0x4863d0	                         movsxd rdx, eax	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fad	          0x4889d0	                            mov rax, rdx	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fb0	        0x48c1e002	                              shl rax, 2	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fb4	          0x4801d0	                            add rax, rdx	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fb7	          0x4801c0	                            add rax, rax	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fba	          0x4801d0	                            add rax, rdx	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fbd	        0x48c1e002	                              shl rax, 2	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fc1	    0x480500000000	                              add rax, 0	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fc7	            0x8b10	                    mov edx, dword [rax]	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fc9	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fd0	      0xb910000000	                           mov ecx, 0x10	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fd5	      0xbe00000000	                              mov esi, 0	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fda	          0x4889c7	                            mov rdi, rax	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fdd	      0xe88df5ffff	          call sym.pe_ILF_make_a_section	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fe2	    0x48898510f6ff	            mov qword [rbp - 0x9f0], rax	       991	peicode.h	FUNCTION_14	SWITCH_3	CALL_22
0x4001fe9	    0x4883bd10f6ff	              cmp qword [rbp - 0x9f0], 0	       992	peicode.h	FUNCTION_14	SWITCH_3	IF_16
0x4001ff1	     0xf844b040000	                            je 0x4002442	       992	peicode.h	FUNCTION_14	SWITCH_3	IF_16
0x4001ff7	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4001ffd	          0x4863d0	                         movsxd rdx, eax	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002000	          0x4889d0	                            mov rax, rdx	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002003	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002007	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400200a	          0x4801c0	                            add rax, rax	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400200d	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002010	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002014	    0x480500000000	                              add rax, 0	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400201a	            0x8b00	                    mov eax, dword [rax]	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400201c	            0x89c6	                            mov esi, eax	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400201e	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002024	          0x4863d0	                         movsxd rdx, eax	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002027	          0x4889d0	                            mov rax, rdx	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400202a	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400202e	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002031	          0x4801c0	                            add rax, rax	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002034	          0x4801d0	                            add rax, rdx	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002037	        0x48c1e002	                              shl rax, 2	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400203b	    0x480500000000	                              add rax, 0	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002041	        0x488d4802	                      lea rcx, [rax + 2]	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002045	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400204c	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002053	          0x4889f2	                            mov rdx, rsi	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002056	          0x4889ce	                            mov rsi, rcx	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002059	          0x4889c7	                            mov rdi, rax	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x400205c	      0xe800000000	                          call 0x4002061	       996	peicode.h	FUNCTION_14	SWITCH_3	CALL_23
0x4002061	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002067	          0x4863d0	                         movsxd rdx, eax	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x400206a	          0x4889d0	                            mov rax, rdx	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x400206d	        0x48c1e002	                              shl rax, 2	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002071	          0x4801d0	                            add rax, rdx	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002074	          0x4801c0	                            add rax, rax	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002077	          0x4801d0	                            add rax, rdx	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x400207a	        0x48c1e002	                              shl rax, 2	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x400207e	    0x480500000000	                              add rax, 0	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002084	            0x8b00	                    mov eax, dword [rax]	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002086	            0x89c6	                            mov esi, eax	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002088	    0x8b8dfcf5ffff	            mov ecx, dword [rbp - 0xa04]	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x400208e	    0x488b9538f6ff	            mov rdx, qword [rbp - 0x9c8]	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x4002095	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x400209c	          0x4189c8	                            mov r8d, ecx	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x400209f	          0x4889d1	                            mov rcx, rdx	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x40020a2	      0xba02000000	                              mov edx, 2	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x40020a7	          0x4889c7	                            mov rdi, rax	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x40020aa	      0xe8c3efffff	     call sym.pe_ILF_make_a_symbol_reloc	      1021	peicode.h	FUNCTION_14	SWITCH_3	ELSE_3	CALL_28
0x40020af	    0x488b9510f6ff	            mov rdx, qword [rbp - 0x9f0]	      1025	peicode.h	FUNCTION_14	SWITCH_3	CALL_29
0x40020b6	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1025	peicode.h	FUNCTION_14	SWITCH_3	CALL_29
0x40020bd	          0x4889d6	                            mov rsi, rdx	      1025	peicode.h	FUNCTION_14	SWITCH_3	CALL_29
0x40020c0	          0x4889c7	                            mov rdi, rax	      1025	peicode.h	FUNCTION_14	SWITCH_3	CALL_29
0x40020c3	      0xe8e4f0ffff	             call sym.pe_ILF_save_relocs	      1025	peicode.h	FUNCTION_14	SWITCH_3	CALL_29
0x40020c8	            0xeb15	                           jmp 0x40020df	      1026	peicode.h	FUNCTION_14	SWITCH_3
0x40020ca	      0xba00000000	                              mov edx, 0	      1033	peicode.h	FUNCTION_14	SWITCH_3	CALL_30
0x40020cf	      0xbe09040000	                          mov esi, 0x409	      1033	peicode.h	FUNCTION_14	SWITCH_3	CALL_30
0x40020d4	      0xbf00000000	                              mov edi, 0	      1033	peicode.h	FUNCTION_14	SWITCH_3	CALL_30
0x40020d9	      0xe800000000	                          call 0x40020de	      1033	peicode.h	FUNCTION_14	SWITCH_3	CALL_30
0x40020de	              0x90	                                     nop	      1029	peicode.h	FUNCTION_14	SWITCH_3
0x40020df	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	      1037	peicode.h	FUNCTION_14	CALL_31
0x40020e6	      0xbaf8080000	                          mov edx, 0x8f8	      1037	peicode.h	FUNCTION_14	CALL_31
0x40020eb	      0xbe00000000	                              mov esi, 0	      1037	peicode.h	FUNCTION_14	CALL_31
0x40020f0	          0x4889c7	                            mov rdi, rax	      1037	peicode.h	FUNCTION_14	CALL_31
0x40020f3	      0xe800000000	                          call 0x40020f8	      1037	peicode.h	FUNCTION_14	CALL_31
0x40020f8	    0x8b85d4f5ffff	            mov eax, dword [rbp - 0xa2c]	      1039	peicode.h	FUNCTION_14
0x40020fe	        0x668945c0	               mov word [rbp - 0x40], ax	      1039	peicode.h	FUNCTION_14
0x4002102	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1040	peicode.h	FUNCTION_14
0x400210a	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1041	peicode.h	FUNCTION_14
0x4002112	    0x66c745e20401	           mov word [rbp - 0x1e], 0x104 	      1042	peicode.h	FUNCTION_14
0x4002118	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1044	peicode.h	FUNCTION_14	IF_19	CALL_32
0x400211f	      0xbe00000000	                              mov esi, 0	      1044	peicode.h	FUNCTION_14	IF_19	CALL_32
0x4002124	          0x4889c7	                            mov rdi, rax	      1044	peicode.h	FUNCTION_14	IF_19	CALL_32
0x4002127	      0xe800000000	                          call 0x400212c	      1044	peicode.h	FUNCTION_14	IF_19	CALL_32
0x400212c	            0x85c0	                           test eax, eax	      1044	peicode.h	FUNCTION_14	IF_19	CALL_32
0x400212e	     0xf8412030000	                            je 0x4002446	      1044	peicode.h	FUNCTION_14	IF_19	CALL_32
0x4002134	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x400213b	        0x488b4008	                mov rax, qword [rax + 8]	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x400213f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x4002146	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x400214d	    0x488d8df0f6ff	                  lea rcx, [rbp - 0x910]	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x4002154	    0x488b95d8f5ff	            mov rdx, qword [rbp - 0xa28]	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x400215b	          0x4889ce	                            mov rsi, rcx	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x400215e	          0x4889d7	                            mov rdi, rdx	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x4002161	            0xffd0	                                call rax	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x4002163	            0x85c0	                           test eax, eax	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x4002165	     0xf84db020000	                            je 0x4002446	      1045	peicode.h	FUNCTION_14	IF_19	CALL_33
0x400216b	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x4002172	        0x488b4008	                mov rax, qword [rax + 8]	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x4002176	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x400217d	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x4002184	    0x488db5f0f6ff	                  lea rsi, [rbp - 0x910]	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x400218b	    0x488b8dd8f5ff	            mov rcx, qword [rbp - 0xa28]	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x4002192	      0xba00000000	                              mov edx, 0	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x4002197	          0x4889cf	                            mov rdi, rcx	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x400219a	            0xffd0	                                call rax	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x400219c	          0x4885c0	                           test rax, rax	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x400219f	     0xf84a0020000	                            je 0x4002445	      1048	peicode.h	FUNCTION_14	IF_20	CALL_34
0x40021a5	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1051	peicode.h	FUNCTION_14	CALL_35
0x40021ac	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1051	peicode.h	FUNCTION_14	CALL_35
0x40021b3	    0xc78080000000	               mov dword [rax + 0x80], 1	      1051	peicode.h	FUNCTION_14	CALL_35
0x40021bd	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1059	peicode.h	FUNCTION_14	CALL_37
0x40021c4	          0x4889c7	                            mov rdi, rax	      1059	peicode.h	FUNCTION_14	CALL_37
0x40021c7	      0xe800000000	                          call 0x40021cc	      1059	peicode.h	FUNCTION_14	CALL_37
0x40021cc	    0x488b9550f6ff	            mov rdx, qword [rbp - 0x9b0]	      1061	peicode.h	FUNCTION_14
0x40021d3	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1061	peicode.h	FUNCTION_14
0x40021da	        0x48895010	             mov qword [rax + 0x10], rdx	      1061	peicode.h	FUNCTION_14
0x40021de	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1062	peicode.h	FUNCTION_14
0x40021e5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1062	peicode.h	FUNCTION_14
0x40021e8	          0xc1e805	                              shr eax, 5	      1062	peicode.h	FUNCTION_14
0x40021eb	      0x25ffff0f00	                        and eax, 0xfffff	      1062	peicode.h	FUNCTION_14
0x40021f0	          0x80cc08	                                or ah, 8	      1062	peicode.h	FUNCTION_14
0x40021f3	            0x89c2	                            mov edx, eax	      1062	peicode.h	FUNCTION_14
0x40021f5	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1062	peicode.h	FUNCTION_14
0x40021fc	    0x81e2ffff0f00	                        and edx, 0xfffff	      1062	peicode.h	FUNCTION_14
0x4002202	            0x89d1	                            mov ecx, edx	      1062	peicode.h	FUNCTION_14
0x4002204	          0xc1e105	                              shl ecx, 5	      1062	peicode.h	FUNCTION_14
0x4002207	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1062	peicode.h	FUNCTION_14
0x400220a	    0x81e21f0000fe	                     and edx, 0xfe00001f	      1062	peicode.h	FUNCTION_14
0x4002210	             0x9ca	                             or edx, ecx	      1062	peicode.h	FUNCTION_14
0x4002212	          0x895044	             mov dword [rax + 0x44], edx	      1062	peicode.h	FUNCTION_14
0x4002215	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1063	peicode.h	FUNCTION_14
0x400221c	    0x48c740180000	               mov qword [rax + 0x18], 0	      1063	peicode.h	FUNCTION_14
0x4002224	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1064	peicode.h	FUNCTION_14
0x400222b	    0x48c740300000	               mov qword [rax + 0x30], 0	      1064	peicode.h	FUNCTION_14
0x4002233	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1065	peicode.h	FUNCTION_14
0x400223a	    0x48c740580000	               mov qword [rax + 0x58], 0	      1065	peicode.h	FUNCTION_14
0x4002242	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1066	peicode.h	FUNCTION_14	CALL_38
0x4002249	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1066	peicode.h	FUNCTION_14	CALL_38
0x4002250	    0x48c740180000	               mov qword [rax + 0x18], 0	      1066	peicode.h	FUNCTION_14	CALL_38
0x4002258	    0x8b85f0f5ffff	            mov eax, dword [rbp - 0xa10]	      1069	peicode.h	FUNCTION_14	SWITCH_4
0x400225e	            0x85c0	                           test eax, eax	      1069	peicode.h	FUNCTION_14	SWITCH_4
0x4002260	            0x7407	                            je 0x4002269	      1069	peicode.h	FUNCTION_14	SWITCH_4
0x4002262	          0x83f801	                              cmp eax, 1	      1069	peicode.h	FUNCTION_14	SWITCH_4
0x4002265	            0x7440	                            je 0x40022a7	      1069	peicode.h	FUNCTION_14	SWITCH_4
0x4002267	            0xeb2a	                           jmp 0x4002293	      1069	peicode.h	FUNCTION_14	SWITCH_4
0x4002269	    0x488b8d10f6ff	            mov rcx, qword [rbp - 0x9f0]	      1072	peicode.h	FUNCTION_14	SWITCH_4	CALL_39
0x4002270	    0x488b95c8f5ff	            mov rdx, qword [rbp - 0xa38]	      1072	peicode.h	FUNCTION_14	SWITCH_4	CALL_39
0x4002277	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1072	peicode.h	FUNCTION_14	SWITCH_4	CALL_39
0x400227e	    0x41b808040000	                          mov r8d, 0x408	      1072	peicode.h	FUNCTION_14	SWITCH_4	CALL_39
0x4002284	      0xbe00000000	                              mov esi, 0	      1072	peicode.h	FUNCTION_14	SWITCH_4	CALL_39
0x4002289	          0x4889c7	                            mov rdi, rax	      1072	peicode.h	FUNCTION_14	SWITCH_4	CALL_39
0x400228c	      0xe82cf0ffff	           call sym.pe_ILF_make_a_symbol	      1072	peicode.h	FUNCTION_14	SWITCH_4	CALL_39
0x4002291	            0xeb15	                           jmp 0x40022a8	      1075	peicode.h	FUNCTION_14	SWITCH_4
0x4002293	      0xba00000000	                              mov edx, 0	      1083	peicode.h	FUNCTION_14	SWITCH_4	CALL_40
0x4002298	      0xbe3b040000	                          mov esi, 0x43b	      1083	peicode.h	FUNCTION_14	SWITCH_4	CALL_40
0x400229d	      0xbf00000000	                              mov edi, 0	      1083	peicode.h	FUNCTION_14	SWITCH_4	CALL_40
0x40022a2	      0xe800000000	                          call 0x40022a7	      1083	peicode.h	FUNCTION_14	SWITCH_4	CALL_40
0x40022a7	              0x90	                                     nop	      1079	peicode.h	FUNCTION_14	SWITCH_4
0x40022a8	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	      1087	peicode.h	FUNCTION_14	CALL_41
0x40022af	      0xbe2e000000	                           mov esi, 0x2e	      1087	peicode.h	FUNCTION_14	CALL_41
0x40022b4	          0x4889c7	                            mov rdi, rax	      1087	peicode.h	FUNCTION_14	CALL_41
0x40022b7	      0xe800000000	                          call 0x40022bc	      1087	peicode.h	FUNCTION_14	CALL_41
0x40022bc	    0x48898500f6ff	            mov qword [rbp - 0xa00], rax	      1087	peicode.h	FUNCTION_14	CALL_41
0x40022c3	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	      1088	peicode.h	FUNCTION_14	IF_22
0x40022cb	            0x740a	                            je 0x40022d7	      1088	peicode.h	FUNCTION_14	IF_22
0x40022cd	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1089	peicode.h	FUNCTION_14	IF_22
0x40022d4	          0xc60000	                       mov byte [rax], 0	      1089	peicode.h	FUNCTION_14	IF_22
0x40022d7	    0x488b95c0f5ff	            mov rdx, qword [rbp - 0xa40]	      1090	peicode.h	FUNCTION_14	CALL_42
0x40022de	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1090	peicode.h	FUNCTION_14	CALL_42
0x40022e5	    0x41b800000000	                              mov r8d, 0	      1090	peicode.h	FUNCTION_14	CALL_42
0x40022eb	      0xb900000000	                              mov ecx, 0	      1090	peicode.h	FUNCTION_14	CALL_42
0x40022f0	      0xbe00000000	                              mov esi, 0	      1090	peicode.h	FUNCTION_14	CALL_42
0x40022f5	          0x4889c7	                            mov rdi, rax	      1090	peicode.h	FUNCTION_14	CALL_42
0x40022f8	      0xe8c0efffff	           call sym.pe_ILF_make_a_symbol	      1090	peicode.h	FUNCTION_14	CALL_42
0x40022fd	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	      1091	peicode.h	FUNCTION_14	IF_23
0x4002305	            0x740a	                            je 0x4002311	      1091	peicode.h	FUNCTION_14	IF_23
0x4002307	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1092	peicode.h	FUNCTION_14	IF_23
0x400230e	          0xc6002e	                    mov byte [rax], 0x2e	      1092	peicode.h	FUNCTION_14	IF_23
0x4002311	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1095	peicode.h	FUNCTION_14	CALL_43
0x4002318	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1095	peicode.h	FUNCTION_14	CALL_43
0x400231f	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      1095	peicode.h	FUNCTION_14	CALL_43
0x4002326	          0x488910	                    mov qword [rax], rdx	      1095	peicode.h	FUNCTION_14	CALL_43
0x4002329	    0x8b9580f6ffff	            mov edx, dword [rbp - 0x980]	      1096	peicode.h	FUNCTION_14
0x400232f	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1096	peicode.h	FUNCTION_14
0x4002336	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      1096	peicode.h	FUNCTION_14
0x400233c	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1098	peicode.h	FUNCTION_14	CALL_44
0x4002343	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1098	peicode.h	FUNCTION_14	CALL_44
0x400234a	    0x488b9598f6ff	            mov rdx, qword [rbp - 0x968]	      1098	peicode.h	FUNCTION_14	CALL_44
0x4002351	        0x48895020	             mov qword [rax + 0x20], rdx	      1098	peicode.h	FUNCTION_14	CALL_44
0x4002355	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1099	peicode.h	FUNCTION_14	CALL_45
0x400235c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1099	peicode.h	FUNCTION_14	CALL_45
0x4002363	    0x8b9580f6ffff	            mov edx, dword [rbp - 0x980]	      1099	peicode.h	FUNCTION_14	CALL_45
0x4002369	            0x89d2	                            mov edx, edx	      1099	peicode.h	FUNCTION_14	CALL_45
0x400236b	        0x48895028	             mov qword [rax + 0x28], rdx	      1099	peicode.h	FUNCTION_14	CALL_45
0x400236f	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1101	peicode.h	FUNCTION_14	CALL_46
0x4002376	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1101	peicode.h	FUNCTION_14	CALL_46
0x400237d	    0x488b95d8f6ff	            mov rdx, qword [rbp - 0x928]	      1101	peicode.h	FUNCTION_14	CALL_46
0x4002384	        0x48895058	             mov qword [rax + 0x58], rdx	      1101	peicode.h	FUNCTION_14	CALL_46
0x4002388	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1102	peicode.h	FUNCTION_14	CALL_47
0x400238f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1102	peicode.h	FUNCTION_14	CALL_47
0x4002396	    0xc74060010000	               mov dword [rax + 0x60], 1	      1102	peicode.h	FUNCTION_14	CALL_47
0x400239d	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1104	peicode.h	FUNCTION_14	CALL_48
0x40023a4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1104	peicode.h	FUNCTION_14	CALL_48
0x40023ab	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      1104	peicode.h	FUNCTION_14	CALL_48
0x40023b2	        0x48895008	                mov qword [rax + 8], rdx	      1104	peicode.h	FUNCTION_14	CALL_48
0x40023b6	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1105	peicode.h	FUNCTION_14	CALL_49
0x40023bd	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1105	peicode.h	FUNCTION_14	CALL_49
0x40023c4	    0x8b9580f6ffff	            mov edx, dword [rbp - 0x980]	      1105	peicode.h	FUNCTION_14	CALL_49
0x40023ca	          0x895010	             mov dword [rax + 0x10], edx	      1105	peicode.h	FUNCTION_14	CALL_49
0x40023cd	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1107	peicode.h	FUNCTION_14	CALL_50
0x40023d4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1107	peicode.h	FUNCTION_14	CALL_50
0x40023db	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	      1107	peicode.h	FUNCTION_14	CALL_50
0x40023e2	        0x48895068	             mov qword [rax + 0x68], rdx	      1107	peicode.h	FUNCTION_14	CALL_50
0x40023e6	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1108	peicode.h	FUNCTION_14	CALL_51
0x40023ed	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1108	peicode.h	FUNCTION_14	CALL_51
0x40023f4	    0xc74078010000	               mov dword [rax + 0x78], 1	      1108	peicode.h	FUNCTION_14	CALL_51
0x40023fb	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1110	peicode.h	FUNCTION_14
0x4002402	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1110	peicode.h	FUNCTION_14
0x4002405	          0xc1e805	                              shr eax, 5	      1110	peicode.h	FUNCTION_14
0x4002408	      0x25ffff0f00	                        and eax, 0xfffff	      1110	peicode.h	FUNCTION_14
0x400240d	          0x83c810	                            or eax, 0x10	      1110	peicode.h	FUNCTION_14
0x4002410	            0x89c2	                            mov edx, eax	      1110	peicode.h	FUNCTION_14
0x4002412	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1110	peicode.h	FUNCTION_14
0x4002419	    0x81e2ffff0f00	                        and edx, 0xfffff	      1110	peicode.h	FUNCTION_14
0x400241f	            0x89d1	                            mov ecx, edx	      1110	peicode.h	FUNCTION_14
0x4002421	          0xc1e105	                              shl ecx, 5	      1110	peicode.h	FUNCTION_14
0x4002424	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1110	peicode.h	FUNCTION_14
0x4002427	    0x81e21f0000fe	                     and edx, 0xfe00001f	      1110	peicode.h	FUNCTION_14
0x400242d	             0x9ca	                             or edx, ecx	      1110	peicode.h	FUNCTION_14
0x400242f	          0x895044	             mov dword [rax + 0x44], edx	      1110	peicode.h	FUNCTION_14
0x4002432	      0xb801000000	                              mov eax, 1	      1112	peicode.h	FUNCTION_14
0x4002437	            0xeb44	                           jmp 0x400247d	      1112	peicode.h	FUNCTION_14
0x4002439	              0x90	                                     nop	       817	peicode.h	FUNCTION_14	IF_2
0x400243a	            0xeb0a	                           jmp 0x4002446	       817	peicode.h	FUNCTION_14	IF_2
0x400243c	              0x90	                                     nop	       896	peicode.h	FUNCTION_14	IF_5	IF_6
0x400243d	            0xeb07	                           jmp 0x4002446	       896	peicode.h	FUNCTION_14	IF_5	IF_6
0x400243f	              0x90	                                     nop	       916	peicode.h	FUNCTION_14	ELSE_1	IF_7
0x4002440	            0xeb04	                           jmp 0x4002446	       916	peicode.h	FUNCTION_14	ELSE_1	IF_7
0x4002442	              0x90	                                     nop	       993	peicode.h	FUNCTION_14	SWITCH_3	IF_16
0x4002443	            0xeb01	                           jmp 0x4002446	       993	peicode.h	FUNCTION_14	SWITCH_3	IF_16
0x4002445	              0x90	                                     nop	      1049	peicode.h	FUNCTION_14	IF_20
0x4002446	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1115	peicode.h	FUNCTION_14	IF_24
0x400244d	        0x488b4008	                mov rax, qword [rax + 8]	      1115	peicode.h	FUNCTION_14	IF_24
0x4002451	          0x4885c0	                           test rax, rax	      1115	peicode.h	FUNCTION_14	IF_24
0x4002454	            0x7413	                            je 0x4002469	      1115	peicode.h	FUNCTION_14	IF_24
0x4002456	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1116	peicode.h	FUNCTION_14	CALL_52
0x400245d	        0x488b4008	                mov rax, qword [rax + 8]	      1116	peicode.h	FUNCTION_14	CALL_52
0x4002461	          0x4889c7	                            mov rdi, rax	      1116	peicode.h	FUNCTION_14	CALL_52
0x4002464	      0xe800000000	                          call 0x4002469	      1116	peicode.h	FUNCTION_14	CALL_52
0x4002469	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1117	peicode.h	FUNCTION_14	CALL_53
0x4002470	          0x4889c7	                            mov rdi, rax	      1117	peicode.h	FUNCTION_14	CALL_53
0x4002473	      0xe800000000	                          call 0x4002478	      1117	peicode.h	FUNCTION_14	CALL_53
0x4002478	      0xb800000000	                              mov eax, 0	      1118	peicode.h	FUNCTION_14
0x400247d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1119	peicode.h	FUNCTION_14
0x4002481	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1119	peicode.h	FUNCTION_14
0x400248a	            0x7405	                            je 0x4002491	      1119	peicode.h	FUNCTION_14
0x400248c	      0xe800000000	                          call 0x4002491	      1119	peicode.h	FUNCTION_14
0x4002491	    0x4881c4400a00	                          add rsp, 0xa40	      1119	peicode.h	FUNCTION_14
0x4002498	              0x5b	                                 pop rbx	      1119	peicode.h	FUNCTION_14
0x4002499	            0x415c	                                 pop r12	      1119	peicode.h	FUNCTION_14
0x400249b	              0x5d	                                 pop rbp	      1119	peicode.h	FUNCTION_14
0x400249c	              0xc3	                                     ret	      1119	peicode.h	FUNCTION_14
styp_to_sec_flags	IF,8:CALL,6:ELSE,1:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,1	238
0x40037da	              0x55	                                push rbp	      1167	coffcode.h	FUNCTION_24
0x40037db	          0x4889e5	                            mov rbp, rsp	      1167	coffcode.h	FUNCTION_24
0x40037de	        0x4883ec60	                           sub rsp, 0x60	      1167	coffcode.h	FUNCTION_24
0x40037e2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1167	coffcode.h	FUNCTION_24
0x40037e6	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1167	coffcode.h	FUNCTION_24
0x40037ea	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1167	coffcode.h	FUNCTION_24
0x40037ee	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1167	coffcode.h	FUNCTION_24
0x40037f2	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1167	coffcode.h	FUNCTION_24
0x40037f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1168	coffcode.h	FUNCTION_24
0x40037fa	        0x488945f0	             mov qword [rbp - 0x10], rax	      1168	coffcode.h	FUNCTION_24
0x40037fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1169	coffcode.h	FUNCTION_24
0x4003802	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1169	coffcode.h	FUNCTION_24
0x4003806	        0x488945e0	             mov qword [rbp - 0x20], rax	      1169	coffcode.h	FUNCTION_24
0x400380a	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1171	coffcode.h	FUNCTION_24
0x4003811	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1172	coffcode.h	FUNCTION_24
0x4003818	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1174	coffcode.h	FUNCTION_24	IF_1
0x400381c	      0xba06000000	                              mov edx, 6	      1174	coffcode.h	FUNCTION_24	IF_1
0x4003821	      0xbe00000000	                              mov esi, 0	      1174	coffcode.h	FUNCTION_24	IF_1
0x4003826	          0x4889c7	                            mov rdi, rax	      1174	coffcode.h	FUNCTION_24	IF_1
0x4003829	      0xe800000000	                          call 0x400382e	      1174	coffcode.h	FUNCTION_24	IF_1
0x400382e	            0x85c0	                           test eax, eax	      1174	coffcode.h	FUNCTION_24	IF_1
0x4003830	            0x7468	                            je 0x400389a	      1174	coffcode.h	FUNCTION_24	IF_1
0x4003832	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1175	coffcode.h	FUNCTION_24	IF_1
0x4003836	      0xba07000000	                              mov edx, 7	      1175	coffcode.h	FUNCTION_24	IF_1
0x400383b	      0xbe00000000	                              mov esi, 0	      1175	coffcode.h	FUNCTION_24	IF_1
0x4003840	          0x4889c7	                            mov rdi, rax	      1175	coffcode.h	FUNCTION_24	IF_1
0x4003843	      0xe800000000	                          call 0x4003848	      1175	coffcode.h	FUNCTION_24	IF_1
0x4003848	            0x85c0	                           test eax, eax	      1175	coffcode.h	FUNCTION_24	IF_1
0x400384a	            0x744e	                            je 0x400389a	      1175	coffcode.h	FUNCTION_24	IF_1
0x400384c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1177	coffcode.h	FUNCTION_24	IF_1
0x4003850	      0xba11000000	                           mov edx, 0x11	      1177	coffcode.h	FUNCTION_24	IF_1
0x4003855	      0xbe00000000	                              mov esi, 0	      1177	coffcode.h	FUNCTION_24	IF_1
0x400385a	          0x4889c7	                            mov rdi, rax	      1177	coffcode.h	FUNCTION_24	IF_1
0x400385d	      0xe800000000	                          call 0x4003862	      1177	coffcode.h	FUNCTION_24	IF_1
0x4003862	            0x85c0	                           test eax, eax	      1177	coffcode.h	FUNCTION_24	IF_1
0x4003864	            0x7434	                            je 0x400389a	      1177	coffcode.h	FUNCTION_24	IF_1
0x4003866	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1178	coffcode.h	FUNCTION_24	IF_1
0x400386a	      0xba11000000	                           mov edx, 0x11	      1178	coffcode.h	FUNCTION_24	IF_1
0x400386f	      0xbe00000000	                              mov esi, 0	      1178	coffcode.h	FUNCTION_24	IF_1
0x4003874	          0x4889c7	                            mov rdi, rax	      1178	coffcode.h	FUNCTION_24	IF_1
0x4003877	      0xe800000000	                          call 0x400387c	      1178	coffcode.h	FUNCTION_24	IF_1
0x400387c	            0x85c0	                           test eax, eax	      1178	coffcode.h	FUNCTION_24	IF_1
0x400387e	            0x741a	                            je 0x400389a	      1178	coffcode.h	FUNCTION_24	IF_1
0x4003880	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1180	coffcode.h	FUNCTION_24	IF_1
0x4003884	      0xba05000000	                              mov edx, 5	      1180	coffcode.h	FUNCTION_24	IF_1
0x4003889	      0xbe00000000	                              mov esi, 0	      1180	coffcode.h	FUNCTION_24	IF_1
0x400388e	          0x4889c7	                            mov rdi, rax	      1180	coffcode.h	FUNCTION_24	IF_1
0x4003891	      0xe800000000	                          call 0x4003896	      1180	coffcode.h	FUNCTION_24	IF_1
0x4003896	            0x85c0	                           test eax, eax	      1180	coffcode.h	FUNCTION_24	IF_1
0x4003898	            0x7507	                           jne 0x40038a1	      1180	coffcode.h	FUNCTION_24	IF_1
0x400389a	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1181	coffcode.h	FUNCTION_24	IF_1
0x40038a1	    0xc745d4080000	               mov dword [rbp - 0x2c], 8	      1183	coffcode.h	FUNCTION_24
0x40038a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1186	coffcode.h	FUNCTION_24	IF_2
0x40038ac	      0x2500000040	                     and eax, 0x40000000	      1186	coffcode.h	FUNCTION_24	IF_2
0x40038b1	          0x4885c0	                           test rax, rax	      1186	coffcode.h	FUNCTION_24	IF_2
0x40038b4	     0xf85ec020000	                           jne 0x4003ba6	      1186	coffcode.h	FUNCTION_24	IF_2
0x40038ba	    0x814dd4000000	       or dword [rbp - 0x2c], 0x40000000	      1187	coffcode.h	FUNCTION_24	IF_2
0x40038c1	      0xe9e0020000	                           jmp 0x4003ba6	      1190	coffcode.h	FUNCTION_24	WHILE_1
0x40038c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1192	coffcode.h	FUNCTION_24	WHILE_1
0x40038ca	          0x48f7d8	                                 neg rax	      1192	coffcode.h	FUNCTION_24	WHILE_1
0x40038cd	        0x482345e0	             and rax, qword [rbp - 0x20]	      1192	coffcode.h	FUNCTION_24	WHILE_1
0x40038d1	        0x488945f8	                mov qword [rbp - 8], rax	      1192	coffcode.h	FUNCTION_24	WHILE_1
0x40038d5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1193	coffcode.h	FUNCTION_24	WHILE_1
0x40038dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1195	coffcode.h	FUNCTION_24	WHILE_1
0x40038e1	          0x48f7d0	                                 not rax	      1195	coffcode.h	FUNCTION_24	WHILE_1
0x40038e4	        0x482145e0	             and qword [rbp - 0x20], rax	      1195	coffcode.h	FUNCTION_24	WHILE_1
0x40038e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40038ec	    0x483d00020000	                          cmp rax, 0x200	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40038f2	     0xf843b020000	                            je 0x4003b33	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40038f8	    0x483d00020000	                          cmp rax, 0x200	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40038fe	     0xf8784000000	                            ja 0x4003988	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003904	        0x4883f810	                           cmp rax, 0x10	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003908	     0xf8436010000	                            je 0x4003a44	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400390e	        0x4883f810	                           cmp rax, 0x10	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003912	            0x7738	                            ja 0x400394c	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003914	        0x4883f802	                              cmp rax, 2	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003918	     0xf8440010000	                            je 0x4003a5e	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400391e	        0x4883f802	                              cmp rax, 2	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003922	            0x770f	                            ja 0x4003933	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003924	        0x4883f801	                              cmp rax, 1	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003928	     0xf84fc000000	                            je 0x4003a2a	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400392e	      0xe933020000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003933	        0x4883f804	                              cmp rax, 4	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003937	     0xf84fa000000	                            je 0x4003a37	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400393d	        0x4883f808	                              cmp rax, 8	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003941	     0xf8418020000	                            je 0x4003b5f	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003947	      0xe91a020000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400394c	        0x4883f840	                           cmp rax, 0x40	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003950	     0xf84c2010000	                            je 0x4003b18	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003956	        0x4883f840	                           cmp rax, 0x40	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400395a	            0x770f	                            ja 0x400396b	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400395c	        0x4883f820	                           cmp rax, 0x20	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003960	     0xf84ac010000	                            je 0x4003b12	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003966	      0xe9fb010000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400396b	    0x483d80000000	                           cmp rax, 0x80	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003971	     0xf84b6010000	                            je 0x4003b2d	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003977	    0x483d00010000	                          cmp rax, 0x100	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400397d	     0xf84f3000000	                            je 0x4003a76	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003983	      0xe9de010000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003988	    0x483d00000004	cmp rax, loc.imp._bfd_nodynamic_canonicalize_dynamic_reloc 	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400398e	     0xf84ef000000	                            je 0x4003a83	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003994	    0x483d00000004	cmp rax, loc.imp._bfd_nodynamic_canonicalize_dynamic_reloc 	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400399a	            0x7742	                            ja 0x40039de	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x400399c	    0x483d00080000	                          cmp rax, 0x800	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039a2	     0xf845b010000	                            je 0x4003b03	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039a8	    0x483d00080000	                          cmp rax, 0x800	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039ae	            0x7711	                            ja 0x40039c1	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039b0	    0x483d00040000	                          cmp rax, 0x400	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039b6	     0xf8495000000	                            je 0x4003a51	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039bc	      0xe9a5010000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039c1	    0x483d00100000	                         cmp rax, 0x1000	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039c7	     0xf846f010000	                            je 0x4003b3c	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039cd	    0x483d00000002	                      cmp rax, 0x2000000	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039d3	     0xf84fd000000	                            je 0x4003ad6	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039d9	      0xe988010000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039de	    0x483d00000020	                     cmp rax, 0x20000000	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039e4	     0xf84da000000	                            je 0x4003ac4	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039ea	    0x483d00000020	                     cmp rax, 0x20000000	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039f0	            0x771d	                            ja 0x4003a0f	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039f2	    0x483d00000008	                   cmp rax, section_end.	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039f8	     0xf8492000000	                            je 0x4003a90	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x40039fe	    0x483d00000010	                     cmp rax, 0x10000000	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a04	     0xf84f0000000	                            je 0x4003afa	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a0a	      0xe957010000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a0f	    0x483d00000040	                     cmp rax, 0x40000000	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a15	            0x7453	                            je 0x4003a6a	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a17	      0xba00000080	                     mov edx, 0x80000000	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a1c	          0x4839d0	                            cmp rax, rdx	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a1f	     0xf84a8000000	                            je 0x4003acd	      1201	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a25	      0xe93c010000	                           jmp 0x4003b66	      1298	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a2a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1204	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a32	      0xe92f010000	                           jmp 0x4003b66	      1205	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a37	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1207	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a3f	      0xe922010000	                           jmp 0x4003b66	      1208	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a44	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1210	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a4c	      0xe915010000	                           jmp 0x4003b66	      1211	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a51	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1213	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a59	      0xe908010000	                           jmp 0x4003b66	      1214	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a5e	    0x814dd4000200	            or dword [rbp - 0x2c], 0x200	      1217	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a65	      0xe9fc000000	                           jmp 0x4003b66	      1218	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a6a	    0x8165d4ffffff	      and dword [rbp - 0x2c], 0xbfffffff	      1221	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a71	      0xe9f0000000	                           jmp 0x4003b66	      1222	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a76	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1227	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a7e	      0xe9e3000000	                           jmp 0x4003b66	      1228	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a83	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1230	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a8b	      0xe9d6000000	                           jmp 0x4003b66	      1231	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003a90	      0xbe00000000	                              mov esi, 0	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003a95	      0xbf00000000	                              mov edi, 0	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003a9a	      0xe800000000	                          call 0x4003a9f	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003a9f	          0x4889c7	                            mov rdi, rax	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003aa2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003aa6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003aaa	          0x4889d1	                            mov rcx, rdx	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003aad	      0xba00000000	                              mov edx, 0	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003ab2	          0x4889c6	                            mov rsi, rax	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003ab5	      0xb800000000	                              mov eax, 0	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003aba	      0xe800000000	                          call 0x4003abf	      1237	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_2
0x4003abf	      0xe9a2000000	                           jmp 0x4003b66	      1240	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003ac4	        0x834dd410	             or dword [rbp - 0x2c], 0x10	      1242	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003ac8	      0xe999000000	                           jmp 0x4003b66	      1243	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003acd	        0x8365d4f7	      and dword [rbp - 0x2c], 0xfffffff7	      1245	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003ad1	      0xe990000000	                           jmp 0x4003b66	      1246	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003ad6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1253	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x4003ada	            0x7515	                           jne 0x4003af1	      1253	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x4003adc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1255	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003ae0	      0xbe00000000	                              mov esi, 0	      1255	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003ae5	          0x4889c7	                            mov rdi, rax	      1255	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003ae8	      0xe800000000	                          call 0x4003aed	      1255	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003aed	            0x85c0	                           test eax, eax	      1255	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003aef	            0x7571	                           jne 0x4003b62	      1255	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003af1	    0x814dd4082000	           or dword [rbp - 0x2c], 0x2008	      1259	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x4003af8	            0xeb68	                           jmp 0x4003b62	      1261	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003afa	    0x814dd4000000	     or dword [rbp - 0x2c], section_end.	      1263	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b01	            0xeb63	                           jmp 0x4003b66	      1264	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b03	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1266	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_4
0x4003b07	            0x755c	                           jne 0x4003b65	      1266	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_4
0x4003b09	    0x814dd4008000	           or dword [rbp - 0x2c], 0x8000	      1267	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_4
0x4003b10	            0xeb53	                           jmp 0x4003b65	      1268	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b12	        0x834dd413	             or dword [rbp - 0x2c], 0x13	      1270	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b16	            0xeb4e	                           jmp 0x4003b66	      1271	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b18	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1273	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_5
0x4003b1c	            0x7409	                            je 0x4003b27	      1273	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_5
0x4003b1e	    0x814dd4002000	           or dword [rbp - 0x2c], 0x2000	      1274	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	IF_5
0x4003b25	            0xeb3f	                           jmp 0x4003b66	      1277	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b27	        0x834dd423	            or dword [rbp - 0x2c], 0x23 	      1276	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	ELSE_1
0x4003b2b	            0xeb39	                           jmp 0x4003b66	      1277	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b2d	        0x834dd401	                or dword [rbp - 0x2c], 1	      1279	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b31	            0xeb33	                           jmp 0x4003b66	      1280	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b33	    0x814dd4002000	           or dword [rbp - 0x2c], 0x2000	      1289	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b3a	            0xeb2a	                           jmp 0x4003b66	      1291	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b3c	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b40	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b44	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b48	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b4b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b4f	          0x4989f8	                             mov r8, rdi	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b52	          0x4889c7	                            mov rdi, rax	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b55	      0xe8cef6ffff	                  call sym.handle_COMDAT	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b5a	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1294	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x4003b5d	            0xeb07	                           jmp 0x4003b66	      1295	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b5f	              0x90	                                     nop	      1225	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b60	            0xeb04	                           jmp 0x4003b66	      1225	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b62	              0x90	                                     nop	      1261	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b63	            0xeb01	                           jmp 0x4003b66	      1261	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b65	              0x90	                                     nop	      1268	coffcode.h	FUNCTION_24	WHILE_1	SWITCH_1
0x4003b66	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1302	coffcode.h	FUNCTION_24	WHILE_1	IF_6
0x4003b6b	            0x7439	                            je 0x4003ba6	      1302	coffcode.h	FUNCTION_24	WHILE_1	IF_6
0x4003b6d	      0xbe00000000	                              mov esi, 0	      1306	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_6
0x4003b72	      0xbf00000000	                              mov edi, 0	      1306	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_6
0x4003b77	      0xe800000000	                          call 0x4003b7c	      1306	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_6
0x4003b7c	          0x4889c7	                            mov rdi, rax	      1306	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_6
0x4003b7f	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b83	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b87	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b8b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b8f	          0x4989f0	                             mov r8, rsi	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b92	          0x4889c6	                            mov rsi, rax	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b95	      0xb800000000	                              mov eax, 0	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b9a	      0xe800000000	                          call 0x4003b9f	      1304	coffcode.h	FUNCTION_24	WHILE_1	IF_6	CALL_5
0x4003b9f	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1308	coffcode.h	FUNCTION_24	WHILE_1	IF_6
0x4003ba6	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1190	coffcode.h	FUNCTION_24	WHILE_1
0x4003bab	     0xf8515fdffff	                           jne 0x40038c6	      1190	coffcode.h	FUNCTION_24	WHILE_1
0x4003bb1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1319	coffcode.h	FUNCTION_24	IF_7
0x4003bb5	      0xba0d000000	                            mov edx, 0xd	      1319	coffcode.h	FUNCTION_24	IF_7
0x4003bba	      0xbe00000000	                              mov esi, 0	      1319	coffcode.h	FUNCTION_24	IF_7
0x4003bbf	          0x4889c7	                            mov rdi, rax	      1319	coffcode.h	FUNCTION_24	IF_7
0x4003bc2	      0xe800000000	                          call 0x4003bc7	      1319	coffcode.h	FUNCTION_24	IF_7
0x4003bc7	            0x85c0	                           test eax, eax	      1319	coffcode.h	FUNCTION_24	IF_7
0x4003bc9	            0x7507	                           jne 0x4003bd2	      1319	coffcode.h	FUNCTION_24	IF_7
0x4003bcb	    0x814dd4000002	          or dword [rbp - 0x2c], 0x20000	      1320	coffcode.h	FUNCTION_24	IF_7
0x4003bd2	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1323	coffcode.h	FUNCTION_24	IF_8
0x4003bd7	            0x7409	                            je 0x4003be2	      1323	coffcode.h	FUNCTION_24	IF_8
0x4003bd9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1324	coffcode.h	FUNCTION_24	IF_8
0x4003bdd	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1324	coffcode.h	FUNCTION_24	IF_8
0x4003be0	            0x8910	                    mov dword [rax], edx	      1324	coffcode.h	FUNCTION_24	IF_8
0x4003be2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1326	coffcode.h	FUNCTION_24
0x4003be5	              0xc9	                                   leave	      1327	coffcode.h	FUNCTION_24
0x4003be6	              0xc3	                                     ret	      1327	coffcode.h	FUNCTION_24
coff_swap_filehdr_in	IF,1:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	99
0x40008fd	              0x55	                                push rbp	       170	peicode.h	FUNCTION_3
0x40008fe	          0x4889e5	                            mov rbp, rsp	       170	peicode.h	FUNCTION_3
0x4000901	        0x4883ec30	                           sub rsp, 0x30	       170	peicode.h	FUNCTION_3
0x4000905	        0x48897de8	             mov qword [rbp - 0x18], rdi	       170	peicode.h	FUNCTION_3
0x4000909	        0x488975e0	             mov qword [rbp - 0x20], rsi	       170	peicode.h	FUNCTION_3
0x400090d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       170	peicode.h	FUNCTION_3
0x4000911	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       171	peicode.h	FUNCTION_3
0x4000915	        0x488945f0	             mov qword [rbp - 0x10], rax	       171	peicode.h	FUNCTION_3
0x4000919	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       172	peicode.h	FUNCTION_3
0x400091d	        0x488945f8	                mov qword [rbp - 8], rax	       172	peicode.h	FUNCTION_3
0x4000921	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	peicode.h	FUNCTION_3
0x4000925	        0x488b4008	                mov rax, qword [rax + 8]	       174	peicode.h	FUNCTION_3
0x4000929	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       174	peicode.h	FUNCTION_3
0x4000930	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       174	peicode.h	FUNCTION_3
0x4000934	        0x4883c204	                              add rdx, 4	       174	peicode.h	FUNCTION_3
0x4000938	          0x4889d7	                            mov rdi, rdx	       174	peicode.h	FUNCTION_3
0x400093b	            0xffd0	                                call rax	       174	peicode.h	FUNCTION_3
0x400093d	            0x89c2	                            mov edx, eax	       174	peicode.h	FUNCTION_3
0x400093f	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	peicode.h	FUNCTION_3
0x4000943	    0x668990d00800	              mov word [rax + 0x8d0], dx	       174	peicode.h	FUNCTION_3
0x400094a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       175	peicode.h	FUNCTION_3
0x400094e	        0x488b4008	                mov rax, qword [rax + 8]	       175	peicode.h	FUNCTION_3
0x4000952	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       175	peicode.h	FUNCTION_3
0x4000959	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       175	peicode.h	FUNCTION_3
0x400095d	        0x4883c206	                              add rdx, 6	       175	peicode.h	FUNCTION_3
0x4000961	          0x4889d7	                            mov rdi, rdx	       175	peicode.h	FUNCTION_3
0x4000964	            0xffd0	                                call rax	       175	peicode.h	FUNCTION_3
0x4000966	            0x89c2	                            mov edx, eax	       175	peicode.h	FUNCTION_3
0x4000968	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	peicode.h	FUNCTION_3
0x400096c	    0x8990d4080000	            mov dword [rax + 0x8d4], edx	       175	peicode.h	FUNCTION_3
0x4000972	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       176	peicode.h	FUNCTION_3
0x4000976	        0x488b4008	                mov rax, qword [rax + 8]	       176	peicode.h	FUNCTION_3
0x400097a	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       176	peicode.h	FUNCTION_3
0x4000981	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       176	peicode.h	FUNCTION_3
0x4000985	        0x4883c208	                              add rdx, 8	       176	peicode.h	FUNCTION_3
0x4000989	          0x4889d7	                            mov rdi, rdx	       176	peicode.h	FUNCTION_3
0x400098c	            0xffd0	                                call rax	       176	peicode.h	FUNCTION_3
0x400098e	          0x4889c2	                            mov rdx, rax	       176	peicode.h	FUNCTION_3
0x4000991	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	peicode.h	FUNCTION_3
0x4000995	    0x488990d80800	            mov qword [rax + 0x8d8], rdx	       176	peicode.h	FUNCTION_3
0x400099c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	peicode.h	FUNCTION_3
0x40009a0	        0x488b4008	                mov rax, qword [rax + 8]	       177	peicode.h	FUNCTION_3
0x40009a4	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       177	peicode.h	FUNCTION_3
0x40009ab	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       177	peicode.h	FUNCTION_3
0x40009af	        0x4883c210	                           add rdx, 0x10	       177	peicode.h	FUNCTION_3
0x40009b3	          0x4889d7	                            mov rdi, rdx	       177	peicode.h	FUNCTION_3
0x40009b6	            0xffd0	                                call rax	       177	peicode.h	FUNCTION_3
0x40009b8	          0x4889c2	                            mov rdx, rax	       177	peicode.h	FUNCTION_3
0x40009bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	peicode.h	FUNCTION_3
0x40009bf	    0x488990e80800	            mov qword [rax + 0x8e8], rdx	       177	peicode.h	FUNCTION_3
0x40009c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       178	peicode.h	FUNCTION_3
0x40009ca	        0x488b4008	                mov rax, qword [rax + 8]	       178	peicode.h	FUNCTION_3
0x40009ce	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       178	peicode.h	FUNCTION_3
0x40009d5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       178	peicode.h	FUNCTION_3
0x40009d9	        0x4883c216	                           add rdx, 0x16	       178	peicode.h	FUNCTION_3
0x40009dd	          0x4889d7	                            mov rdi, rdx	       178	peicode.h	FUNCTION_3
0x40009e0	            0xffd0	                                call rax	       178	peicode.h	FUNCTION_3
0x40009e2	            0x89c2	                            mov edx, eax	       178	peicode.h	FUNCTION_3
0x40009e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	peicode.h	FUNCTION_3
0x40009e8	    0x668990f20800	              mov word [rax + 0x8f2], dx	       178	peicode.h	FUNCTION_3
0x40009ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	peicode.h	FUNCTION_3
0x40009f3	        0x488b4008	                mov rax, qword [rax + 8]	       179	peicode.h	FUNCTION_3
0x40009f7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       179	peicode.h	FUNCTION_3
0x40009fe	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       179	peicode.h	FUNCTION_3
0x4000a02	        0x4883c20c	                            add rdx, 0xc	       179	peicode.h	FUNCTION_3
0x4000a06	          0x4889d7	                            mov rdi, rdx	       179	peicode.h	FUNCTION_3
0x4000a09	            0xffd0	                                call rax	       179	peicode.h	FUNCTION_3
0x4000a0b	          0x4889c2	                            mov rdx, rax	       179	peicode.h	FUNCTION_3
0x4000a0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	peicode.h	FUNCTION_3
0x4000a12	    0x488990e00800	            mov qword [rax + 0x8e0], rdx	       179	peicode.h	FUNCTION_3
0x4000a19	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	peicode.h	FUNCTION_3	IF_1
0x4000a1d	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       183	peicode.h	FUNCTION_3	IF_1
0x4000a24	          0x4885c0	                           test rax, rax	       183	peicode.h	FUNCTION_3	IF_1
0x4000a27	            0x743a	                            je 0x4000a63	       183	peicode.h	FUNCTION_3	IF_1
0x4000a29	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	peicode.h	FUNCTION_3	IF_1
0x4000a2d	    0x488b80e00800	           mov rax, qword [rax + 0x8e0] 	       183	peicode.h	FUNCTION_3	IF_1
0x4000a34	          0x4885c0	                           test rax, rax	       183	peicode.h	FUNCTION_3	IF_1
0x4000a37	            0x752a	                           jne 0x4000a63	       183	peicode.h	FUNCTION_3	IF_1
0x4000a39	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	peicode.h	FUNCTION_3	IF_1
0x4000a3d	    0x48c780e80800	              mov qword [rax + 0x8e8], 0	       185	peicode.h	FUNCTION_3	IF_1
0x4000a48	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	peicode.h	FUNCTION_3	IF_1
0x4000a4c	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       186	peicode.h	FUNCTION_3	IF_1
0x4000a53	          0x83c808	                               or eax, 8	       186	peicode.h	FUNCTION_3	IF_1
0x4000a56	            0x89c2	                            mov edx, eax	       186	peicode.h	FUNCTION_3	IF_1
0x4000a58	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	peicode.h	FUNCTION_3	IF_1
0x4000a5c	    0x668990f20800	              mov word [rax + 0x8f2], dx	       186	peicode.h	FUNCTION_3	IF_1
0x4000a63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	peicode.h	FUNCTION_3
0x4000a67	        0x488b4008	                mov rax, qword [rax + 8]	       189	peicode.h	FUNCTION_3
0x4000a6b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       189	peicode.h	FUNCTION_3
0x4000a72	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       189	peicode.h	FUNCTION_3
0x4000a76	        0x4883c214	                           add rdx, 0x14	       189	peicode.h	FUNCTION_3
0x4000a7a	          0x4889d7	                            mov rdi, rdx	       189	peicode.h	FUNCTION_3
0x4000a7d	            0xffd0	                                call rax	       189	peicode.h	FUNCTION_3
0x4000a7f	            0x89c2	                            mov edx, eax	       189	peicode.h	FUNCTION_3
0x4000a81	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	peicode.h	FUNCTION_3
0x4000a85	    0x668990f00800	              mov word [rax + 0x8f0], dx	       189	peicode.h	FUNCTION_3
0x4000a8c	              0x90	                                     nop	       190	peicode.h	FUNCTION_3
0x4000a8d	              0xc9	                                   leave	       190	peicode.h	FUNCTION_3
0x4000a8e	              0xc3	                                     ret	       190	peicode.h	FUNCTION_3
coff_set_custom_section_alignment	IF,4:CALL,2:ELSE,0:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0	140
0x4003c4d	              0x55	                                push rbp	      1690	coffcode.h	FUNCTION_28
0x4003c4e	          0x4889e5	                            mov rbp, rsp	      1690	coffcode.h	FUNCTION_28
0x4003c51	        0x4883ec30	                           sub rsp, 0x30	      1690	coffcode.h	FUNCTION_28
0x4003c55	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1690	coffcode.h	FUNCTION_28
0x4003c59	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1690	coffcode.h	FUNCTION_28
0x4003c5d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1690	coffcode.h	FUNCTION_28
0x4003c61	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1690	coffcode.h	FUNCTION_28
0x4003c64	    0xc745f4020000	                mov dword [rbp - 0xc], 2	      1691	coffcode.h	FUNCTION_28
0x4003c6b	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1694	coffcode.h	FUNCTION_28	FOR_1
0x4003c72	      0xe9bb000000	                           jmp 0x4003d32	      1694	coffcode.h	FUNCTION_28	FOR_1
0x4003c77	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1696	coffcode.h	FUNCTION_28	FOR_1
0x4003c7b	          0x488b00	                    mov rax, qword [rax]	      1696	coffcode.h	FUNCTION_28	FOR_1
0x4003c7e	        0x488945f8	                mov qword [rbp - 8], rax	      1696	coffcode.h	FUNCTION_28	FOR_1
0x4003c82	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c85	          0x4889d0	                            mov rax, rdx	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c88	          0x4801c0	                            add rax, rax	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c8b	          0x4801d0	                            add rax, rdx	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c8e	        0x48c1e003	                              shl rax, 3	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c92	          0x4889c2	                            mov rdx, rax	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c95	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c99	          0x4801d0	                            add rax, rdx	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c9c	          0x8b4008	                mov eax, dword [rax + 8]	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003c9f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003ca2	            0x7533	                           jne 0x4003cd7	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003ca4	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003ca7	          0x4889d0	                            mov rax, rdx	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003caa	          0x4801c0	                            add rax, rax	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cad	          0x4801d0	                            add rax, rdx	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cb0	        0x48c1e003	                              shl rax, 3	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cb4	          0x4889c2	                            mov rdx, rax	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cbb	          0x4801d0	                            add rax, rdx	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cbe	          0x488b00	                    mov rax, qword [rax]	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cc1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cc5	          0x4889d6	                            mov rsi, rdx	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cc8	          0x4889c7	                            mov rdi, rax	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003ccb	      0xe800000000	                          call 0x4003cd0	      1699	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_1
0x4003cd0	            0x85c0	                           test eax, eax	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cd2	           0xf94c0	                                 sete al	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cd5	            0xeb53	                           jmp 0x4003d2a	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cd7	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cda	          0x4889d0	                            mov rax, rdx	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cdd	          0x4801c0	                            add rax, rax	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003ce0	          0x4801d0	                            add rax, rdx	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003ce3	        0x48c1e003	                              shl rax, 3	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003ce7	          0x4889c2	                            mov rdx, rax	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cee	          0x4801d0	                            add rax, rdx	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cf1	          0x8b4008	                mov eax, dword [rax + 8]	      1701	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003cf4	            0x89c6	                            mov esi, eax	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003cf6	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003cf9	          0x4889d0	                            mov rax, rdx	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003cfc	          0x4801c0	                            add rax, rax	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003cff	          0x4801d0	                            add rax, rdx	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d02	        0x48c1e003	                              shl rax, 3	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d06	          0x4889c2	                            mov rdx, rax	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d0d	          0x4801d0	                            add rax, rdx	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d10	          0x488b00	                    mov rax, qword [rax]	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d13	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d17	          0x4889f2	                            mov rdx, rsi	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d1a	          0x4889ce	                            mov rsi, rcx	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d1d	          0x4889c7	                            mov rdi, rax	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d20	      0xe800000000	                          call 0x4003d25	      1700	coffcode.h	FUNCTION_28	FOR_1	IF_1	CALL_2
0x4003d25	            0x85c0	                           test eax, eax	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003d27	           0xf94c0	                                 sete al	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003d2a	            0x84c0	                             test al, al	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003d2c	            0x7512	                           jne 0x4003d40	      1698	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003d2e	        0x8345f001	               add dword [rbp - 0x10], 1	      1694	coffcode.h	FUNCTION_28	FOR_1
0x4003d32	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1694	coffcode.h	FUNCTION_28	FOR_1
0x4003d35	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1694	coffcode.h	FUNCTION_28	FOR_1
0x4003d38	     0xf8239ffffff	                            jb 0x4003c77	      1694	coffcode.h	FUNCTION_28	FOR_1
0x4003d3e	            0xeb01	                           jmp 0x4003d41	      1694	coffcode.h	FUNCTION_28	FOR_1
0x4003d40	              0x90	                                     nop	      1702	coffcode.h	FUNCTION_28	FOR_1	IF_1
0x4003d41	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1704	coffcode.h	FUNCTION_28	IF_2
0x4003d44	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1704	coffcode.h	FUNCTION_28	IF_2
0x4003d47	     0xf83ae000000	                           jae 0x4003dfb	      1704	coffcode.h	FUNCTION_28	IF_2
0x4003d4d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d50	          0x4889d0	                            mov rax, rdx	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d53	          0x4801c0	                            add rax, rax	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d56	          0x4801d0	                            add rax, rdx	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d59	        0x48c1e003	                              shl rax, 3	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d5d	          0x4889c2	                            mov rdx, rax	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d64	          0x4801d0	                            add rax, rdx	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d67	          0x8b400c	              mov eax, dword [rax + 0xc]	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d6a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d6d	            0x7422	                            je 0x4003d91	      1707	coffcode.h	FUNCTION_28	IF_3
0x4003d6f	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d72	          0x4889d0	                            mov rax, rdx	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d75	          0x4801c0	                            add rax, rax	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d78	          0x4801d0	                            add rax, rdx	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d7b	        0x48c1e003	                              shl rax, 3	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d7f	          0x4889c2	                            mov rdx, rax	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d86	          0x4801d0	                            add rax, rdx	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d89	          0x8b400c	              mov eax, dword [rax + 0xc]	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d8c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d8f	            0x776d	                            ja 0x4003dfe	      1708	coffcode.h	FUNCTION_28	IF_3
0x4003d91	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003d94	          0x4889d0	                            mov rax, rdx	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003d97	          0x4801c0	                            add rax, rax	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003d9a	          0x4801d0	                            add rax, rdx	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003d9d	        0x48c1e003	                              shl rax, 3	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003da1	          0x4889c2	                            mov rdx, rax	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003da4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003da8	          0x4801d0	                            add rax, rdx	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003dab	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003dae	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003db1	            0x7422	                            je 0x4003dd5	      1711	coffcode.h	FUNCTION_28	IF_4
0x4003db3	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003db6	          0x4889d0	                            mov rax, rdx	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003db9	          0x4801c0	                            add rax, rax	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dbc	          0x4801d0	                            add rax, rdx	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dbf	        0x48c1e003	                              shl rax, 3	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dc3	          0x4889c2	                            mov rdx, rax	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dca	          0x4801d0	                            add rax, rdx	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dcd	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dd0	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dd3	            0x722c	                            jb 0x4003e01	      1713	coffcode.h	FUNCTION_28	IF_4
0x4003dd5	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1718	coffcode.h	FUNCTION_28
0x4003dd8	          0x4889d0	                            mov rax, rdx	      1718	coffcode.h	FUNCTION_28
0x4003ddb	          0x4801c0	                            add rax, rax	      1718	coffcode.h	FUNCTION_28
0x4003dde	          0x4801d0	                            add rax, rdx	      1718	coffcode.h	FUNCTION_28
0x4003de1	        0x48c1e003	                              shl rax, 3	      1718	coffcode.h	FUNCTION_28
0x4003de5	          0x4889c2	                            mov rdx, rax	      1718	coffcode.h	FUNCTION_28
0x4003de8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1718	coffcode.h	FUNCTION_28
0x4003dec	          0x4801d0	                            add rax, rdx	      1718	coffcode.h	FUNCTION_28
0x4003def	          0x8b5014	            mov edx, dword [rax + 0x14] 	      1718	coffcode.h	FUNCTION_28
0x4003df2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1718	coffcode.h	FUNCTION_28
0x4003df6	          0x895070	             mov dword [rax + 0x70], edx	      1718	coffcode.h	FUNCTION_28
0x4003df9	            0xeb07	                           jmp 0x4003e02	      1718	coffcode.h	FUNCTION_28
0x4003dfb	              0x90	                                     nop	      1705	coffcode.h	FUNCTION_28	IF_2
0x4003dfc	            0xeb04	                           jmp 0x4003e02	      1705	coffcode.h	FUNCTION_28	IF_2
0x4003dfe	              0x90	                                     nop	      1709	coffcode.h	FUNCTION_28	IF_3
0x4003dff	            0xeb01	                           jmp 0x4003e02	      1709	coffcode.h	FUNCTION_28	IF_3
0x4003e01	              0x90	                                     nop	      1716	coffcode.h	FUNCTION_28	IF_4
0x4003e02	              0xc9	                                   leave	      1719	coffcode.h	FUNCTION_28
0x4003e03	              0xc3	                                     ret	      1719	coffcode.h	FUNCTION_28
pe_print_private_bfd_data	IF,2:CALL,3:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	33
0x4000f48	              0x55	                                push rbp	       333	peicode.h	FUNCTION_7
0x4000f49	          0x4889e5	                            mov rbp, rsp	       333	peicode.h	FUNCTION_7
0x4000f4c	        0x4883ec20	                           sub rsp, 0x20	       333	peicode.h	FUNCTION_7
0x4000f50	        0x48897de8	             mov qword [rbp - 0x18], rdi	       333	peicode.h	FUNCTION_7
0x4000f54	        0x488975e0	             mov qword [rbp - 0x20], rsi	       333	peicode.h	FUNCTION_7
0x4000f58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       334	peicode.h	FUNCTION_7
0x4000f5c	        0x488945f8	                mov qword [rbp - 8], rax	       334	peicode.h	FUNCTION_7
0x4000f60	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       336	peicode.h	FUNCTION_7	IF_1	CALL_1
0x4000f64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	peicode.h	FUNCTION_7	IF_1	CALL_1
0x4000f68	          0x4889d6	                            mov rsi, rdx	       336	peicode.h	FUNCTION_7	IF_1	CALL_1
0x4000f6b	          0x4889c7	                            mov rdi, rax	       336	peicode.h	FUNCTION_7	IF_1	CALL_1
0x4000f6e	      0xe800000000	                          call 0x4000f73	       336	peicode.h	FUNCTION_7	IF_1	CALL_1
0x4000f73	            0x85c0	                           test eax, eax	       336	peicode.h	FUNCTION_7	IF_1	CALL_1
0x4000f75	            0x7507	                           jne 0x4000f7e	       336	peicode.h	FUNCTION_7	IF_1	CALL_1
0x4000f77	      0xb800000000	                              mov eax, 0	       337	peicode.h	FUNCTION_7	IF_1
0x4000f7c	            0xeb3b	                           jmp 0x4000fb9	       337	peicode.h	FUNCTION_7	IF_1
0x4000f7e	    0x488b05000000	            mov rax, qword [0x04000f85] 	       339	peicode.h	FUNCTION_7	IF_2
0x4000f85	          0x4885c0	                           test rax, rax	       339	peicode.h	FUNCTION_7	IF_2
0x4000f88	            0x7507	                           jne 0x4000f91	       339	peicode.h	FUNCTION_7	IF_2
0x4000f8a	      0xb801000000	                              mov eax, 1	       340	peicode.h	FUNCTION_7	IF_2
0x4000f8f	            0xeb28	                           jmp 0x4000fb9	       340	peicode.h	FUNCTION_7	IF_2
0x4000f91	        0x488b45f8	                mov rax, qword [rbp - 8]	       342	peicode.h	FUNCTION_7	CALL_2
0x4000f95	          0x4889c6	                            mov rsi, rax	       342	peicode.h	FUNCTION_7	CALL_2
0x4000f98	      0xbf0a000000	                            mov edi, 0xa	       342	peicode.h	FUNCTION_7	CALL_2
0x4000f9d	      0xe800000000	                          call 0x4000fa2	       342	peicode.h	FUNCTION_7	CALL_2
0x4000fa2	    0x488b05000000	            mov rax, qword [0x04000fa9] 	       344	peicode.h	FUNCTION_7	CALL_3
0x4000fa9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       344	peicode.h	FUNCTION_7	CALL_3
0x4000fad	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       344	peicode.h	FUNCTION_7	CALL_3
0x4000fb1	          0x4889ce	                            mov rsi, rcx	       344	peicode.h	FUNCTION_7	CALL_3
0x4000fb4	          0x4889d7	                            mov rdi, rdx	       344	peicode.h	FUNCTION_7	CALL_3
0x4000fb7	            0xffd0	                                call rax	       344	peicode.h	FUNCTION_7	CALL_3
0x4000fb9	              0xc9	                                   leave	       345	peicode.h	FUNCTION_7
0x4000fba	              0xc3	                                     ret	       345	peicode.h	FUNCTION_7
coff_compute_section_file_positions	IF,34:CALL,44:ELSE,6:SWITCH,0:DO,0:FOR,7:functions,0:WHILE,0	608
0x4004882	              0x55	                                push rbp	      2881	coffcode.h	FUNCTION_42
0x4004883	          0x4889e5	                            mov rbp, rsp	      2881	coffcode.h	FUNCTION_42
0x4004886	              0x53	                                push rbx	      2881	coffcode.h	FUNCTION_42
0x4004887	    0x4881ec980000	                           sub rsp, 0x98	      2881	coffcode.h	FUNCTION_42
0x400488e	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      2881	coffcode.h	FUNCTION_42
0x4004895	    0x64488b042528	                mov rax, qword fs:[0x28]	      2881	coffcode.h	FUNCTION_42
0x400489e	        0x488945e8	             mov qword [rbp - 0x18], rax	      2881	coffcode.h	FUNCTION_42
0x40048a2	            0x31c0	                            xor eax, eax	      2881	coffcode.h	FUNCTION_42
0x40048a4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2883	coffcode.h	FUNCTION_42	CALL_1
0x40048ab	        0x488b4008	                mov rax, qword [rax + 8]	      2883	coffcode.h	FUNCTION_42	CALL_1
0x40048af	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2883	coffcode.h	FUNCTION_42	CALL_1
0x40048b6	          0x8b4050	            mov eax, dword [rax + 0x50] 	      2883	coffcode.h	FUNCTION_42	CALL_1
0x40048b9	            0x89c0	                            mov eax, eax	      2883	coffcode.h	FUNCTION_42	CALL_1
0x40048bb	        0x48894598	             mov qword [rbp - 0x68], rax	      2883	coffcode.h	FUNCTION_42	CALL_1
0x40048bf	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2887	coffcode.h	FUNCTION_42
0x40048c7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2894	coffcode.h	FUNCTION_42	IF_1	CALL_2
0x40048ce	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2894	coffcode.h	FUNCTION_42	IF_1	CALL_2
0x40048d5	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2894	coffcode.h	FUNCTION_42	IF_1	CALL_2
0x40048dc	          0x4885c0	                           test rax, rax	      2894	coffcode.h	FUNCTION_42	IF_1	CALL_2
0x40048df	            0x7531	                           jne 0x4004912	      2894	coffcode.h	FUNCTION_42	IF_1	CALL_2
0x40048e1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x40048e8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x40048ef	          0x4885c0	                           test rax, rax	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x40048f2	     0xf8485000000	                            je 0x400497d	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x40048f8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x40048ff	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x4004906	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x400490d	          0x4885c0	                           test rax, rax	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x4004910	            0x746b	                            je 0x400497d	      2895	coffcode.h	FUNCTION_42	IF_1	CALL_4
0x4004912	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2897	coffcode.h	FUNCTION_42	IF_1	CALL_5
0x4004919	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2897	coffcode.h	FUNCTION_42	IF_1	CALL_5
0x4004920	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      2897	coffcode.h	FUNCTION_42	IF_1	CALL_5
0x4004927	          0x894584	             mov dword [rbp - 0x7c], eax	      2897	coffcode.h	FUNCTION_42	IF_1	CALL_5
0x400492a	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2901	coffcode.h	FUNCTION_42	IF_1	IF_2
0x400492e	            0x7507	                           jne 0x4004937	      2901	coffcode.h	FUNCTION_42	IF_1	IF_2
0x4004930	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      2902	coffcode.h	FUNCTION_42	IF_1	IF_2
0x4004937	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2905	coffcode.h	FUNCTION_42	IF_1	IF_3
0x400493b	            0x7947	                           jns 0x4004984	      2905	coffcode.h	FUNCTION_42	IF_1	IF_3
0x400493d	      0xbf13000000	                           mov edi, 0x13	      2907	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_6
0x4004942	      0xe800000000	                          call 0x4004947	      2907	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_6
0x4004947	      0xbe00000000	                              mov esi, 0	      2910	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_8
0x400494c	      0xbf00000000	                              mov edi, 0	      2910	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_8
0x4004951	      0xe800000000	                          call 0x4004956	      2910	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_8
0x4004956	          0x4889c1	                            mov rcx, rax	      2910	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_8
0x4004959	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      2908	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_7
0x400495c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2908	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_7
0x4004963	          0x4889c6	                            mov rsi, rax	      2908	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_7
0x4004966	          0x4889cf	                            mov rdi, rcx	      2908	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_7
0x4004969	      0xb800000000	                              mov eax, 0	      2908	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_7
0x400496e	      0xe800000000	                          call 0x4004973	      2908	coffcode.h	FUNCTION_42	IF_1	IF_3	CALL_7
0x4004973	      0xb800000000	                              mov eax, 0	      2911	coffcode.h	FUNCTION_42	IF_1	IF_3
0x4004978	      0xe9ae080000	                           jmp 0x400522b	      2911	coffcode.h	FUNCTION_42	IF_1	IF_3
0x400497d	    0xc74584000200	          mov dword [rbp - 0x7c], 0x200 	      2915	coffcode.h	FUNCTION_42	ELSE_1
0x4004984	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2962	coffcode.h	FUNCTION_42	IF_9
0x400498b	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2962	coffcode.h	FUNCTION_42	IF_9
0x4004992	          0x4885c0	                           test rax, rax	      2962	coffcode.h	FUNCTION_42	IF_9
0x4004995	            0x7437	                            je 0x40049ce	      2962	coffcode.h	FUNCTION_42	IF_9
0x4004997	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2965	coffcode.h	FUNCTION_42	IF_9
0x400499e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049a1	          0xc1e805	                              shr eax, 5	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049a4	      0x25ffff0f00	                        and eax, 0xfffff	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049a9	          0x83c802	                               or eax, 2	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049ac	            0x89c2	                            mov edx, eax	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049ae	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049b5	    0x81e2ffff0f00	                        and edx, 0xfffff	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049bb	            0x89d1	                            mov ecx, edx	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049bd	          0xc1e105	                              shl ecx, 5	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049c0	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049c3	    0x81e21f0000fe	                     and edx, 0xfe00001f	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049c9	             0x9ca	                             or edx, ecx	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049cb	          0x895044	             mov dword [rax + 0x44], edx	      2965	coffcode.h	FUNCTION_42	IF_9
0x40049ce	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2967	coffcode.h	FUNCTION_42	IF_10
0x40049d5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2967	coffcode.h	FUNCTION_42	IF_10
0x40049d8	          0xc1e805	                              shr eax, 5	      2967	coffcode.h	FUNCTION_42	IF_10
0x40049db	      0x25ffff0f00	                        and eax, 0xfffff	      2967	coffcode.h	FUNCTION_42	IF_10
0x40049e0	          0x83e002	                              and eax, 2	      2967	coffcode.h	FUNCTION_42	IF_10
0x40049e3	            0x85c0	                           test eax, eax	      2967	coffcode.h	FUNCTION_42	IF_10
0x40049e5	            0x741b	                            je 0x4004a02	      2967	coffcode.h	FUNCTION_42	IF_10
0x40049e7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2968	coffcode.h	FUNCTION_42	CALL_16
0x40049ee	        0x488b4008	                mov rax, qword [rax + 8]	      2968	coffcode.h	FUNCTION_42	CALL_16
0x40049f2	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2968	coffcode.h	FUNCTION_42	CALL_16
0x40049f9	          0x8b4054	            mov eax, dword [rax + 0x54] 	      2968	coffcode.h	FUNCTION_42	CALL_16
0x40049fc	            0x89c0	                            mov eax, eax	      2968	coffcode.h	FUNCTION_42	CALL_16
0x40049fe	        0x48014598	            add qword [rbp - 0x68], rax 	      2968	coffcode.h	FUNCTION_42	CALL_16
0x4004a02	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a09	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a0f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a16	        0x488b4008	                mov rax, qword [rax + 8]	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a1a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a21	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a24	           0xfafc2	                           imul eax, edx	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a27	            0x89c0	                            mov eax, eax	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a29	        0x48014598	            add qword [rbp - 0x68], rax 	      2976	coffcode.h	FUNCTION_42	CALL_19
0x4004a2d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3002	coffcode.h	FUNCTION_42	IF_13	CALL_21
0x4004a34	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3002	coffcode.h	FUNCTION_42	IF_13	CALL_21
0x4004a3b	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      3002	coffcode.h	FUNCTION_42	IF_13	CALL_21
0x4004a42	    0x483dff0f0000	                          cmp rax, 0xfff	      3002	coffcode.h	FUNCTION_42	IF_13	CALL_21
0x4004a48	            0x7739	                            ja 0x4004a83	      3002	coffcode.h	FUNCTION_42	IF_13	CALL_21
0x4004a4a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a51	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a54	          0xc1e805	                              shr eax, 5	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a57	      0x25ffff0f00	                        and eax, 0xfffff	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a5c	      0x25fffe0f00	                        and eax, 0xffeff	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a61	            0x89c2	                            mov edx, eax	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a63	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a6a	    0x81e2ffff0f00	                        and edx, 0xfffff	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a70	            0x89d1	                            mov ecx, edx	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a72	          0xc1e105	                              shl ecx, 5	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a75	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a78	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a7e	             0x9ca	                             or edx, ecx	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a80	          0x895044	             mov dword [rax + 0x44], edx	      3003	coffcode.h	FUNCTION_42	IF_13
0x4004a83	    0xc74588000000	               mov dword [rbp - 0x78], 0	      3006	coffcode.h	FUNCTION_42
0x4004a8a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004a91	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004a98	        0x48894590	             mov qword [rbp - 0x70], rax	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004a9c	            0xeb10	                           jmp 0x4004aae	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004a9e	        0x83458801	               add dword [rbp - 0x78], 1	      3008	coffcode.h	FUNCTION_42	FOR_3
0x4004aa2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004aa6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004aaa	        0x48894590	             mov qword [rbp - 0x70], rax	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004aae	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004ab3	            0x75e9	                           jne 0x4004a9e	      3007	coffcode.h	FUNCTION_42	FOR_3
0x4004ab5	          0x8b4588	             mov eax, dword [rbp - 0x78]	      3011	coffcode.h	FUNCTION_42
0x4004ab8	          0x83c001	                              add eax, 1	      3011	coffcode.h	FUNCTION_42
0x4004abb	            0x89c0	                            mov eax, eax	      3011	coffcode.h	FUNCTION_42
0x4004abd	        0x48c1e003	                              shl rax, 3	      3011	coffcode.h	FUNCTION_42
0x4004ac1	        0x488945a8	             mov qword [rbp - 0x58], rax	      3011	coffcode.h	FUNCTION_42
0x4004ac5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3012	coffcode.h	FUNCTION_42	CALL_22
0x4004ac9	          0x4889c7	                            mov rdi, rax	      3012	coffcode.h	FUNCTION_42	CALL_22
0x4004acc	      0xe800000000	                          call 0x4004ad1	      3012	coffcode.h	FUNCTION_42	CALL_22
0x4004ad1	        0x488945b0	             mov qword [rbp - 0x50], rax	      3012	coffcode.h	FUNCTION_42	CALL_22
0x4004ad5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      3013	coffcode.h	FUNCTION_42	IF_14
0x4004ada	            0x750a	                           jne 0x4004ae6	      3013	coffcode.h	FUNCTION_42	IF_14
0x4004adc	      0xb800000000	                              mov eax, 0	      3014	coffcode.h	FUNCTION_42	IF_14
0x4004ae1	      0xe945070000	                           jmp 0x400522b	      3014	coffcode.h	FUNCTION_42	IF_14
0x4004ae6	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      3016	coffcode.h	FUNCTION_42
0x4004aed	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004af4	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004afb	        0x48894590	             mov qword [rbp - 0x70], rax	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004aff	            0xeb29	                           jmp 0x4004b2a	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004b01	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3019	coffcode.h	FUNCTION_42	FOR_4
0x4004b04	    0x488d14c50000	                        lea rdx, [rax*8]	      3019	coffcode.h	FUNCTION_42	FOR_4
0x4004b0c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3019	coffcode.h	FUNCTION_42	FOR_4
0x4004b10	          0x4801c2	                            add rdx, rax	      3019	coffcode.h	FUNCTION_42	FOR_4
0x4004b13	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3019	coffcode.h	FUNCTION_42	FOR_4
0x4004b17	          0x488902	                    mov qword [rdx], rax	      3019	coffcode.h	FUNCTION_42	FOR_4
0x4004b1a	        0x83458c01	               add dword [rbp - 0x74], 1	      3020	coffcode.h	FUNCTION_42	FOR_4
0x4004b1e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004b22	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004b26	        0x48894590	             mov qword [rbp - 0x70], rax	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004b2a	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004b2f	            0x75d0	                           jne 0x4004b01	      3017	coffcode.h	FUNCTION_42	FOR_4
0x4004b31	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3022	coffcode.h	FUNCTION_42
0x4004b34	    0x488d14c50000	                        lea rdx, [rax*8]	      3022	coffcode.h	FUNCTION_42
0x4004b3c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3022	coffcode.h	FUNCTION_42
0x4004b40	          0x4801d0	                            add rax, rdx	      3022	coffcode.h	FUNCTION_42
0x4004b43	    0x48c700000000	                      mov qword [rax], 0	      3022	coffcode.h	FUNCTION_42
0x4004b4a	          0x8b7588	             mov esi, dword [rbp - 0x78]	      3024	coffcode.h	FUNCTION_42	CALL_23
0x4004b4d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3024	coffcode.h	FUNCTION_42	CALL_23
0x4004b51	      0xb900000000	                              mov ecx, 0	      3024	coffcode.h	FUNCTION_42	CALL_23
0x4004b56	      0xba08000000	                              mov edx, 8	      3024	coffcode.h	FUNCTION_42	CALL_23
0x4004b5b	          0x4889c7	                            mov rdi, rax	      3024	coffcode.h	FUNCTION_42	CALL_23
0x4004b5e	      0xe800000000	                          call 0x4004b63	      3024	coffcode.h	FUNCTION_42	CALL_23
0x4004b63	    0xc74580010000	               mov dword [rbp - 0x80], 1	      3028	coffcode.h	FUNCTION_42
0x4004b6a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3029	coffcode.h	FUNCTION_42
0x4004b71	    0x48c780900000	               mov qword [rax + 0x90], 0	      3029	coffcode.h	FUNCTION_42
0x4004b7c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3030	coffcode.h	FUNCTION_42
0x4004b83	    0x48c780980000	               mov qword [rax + 0x98], 0	      3030	coffcode.h	FUNCTION_42
0x4004b8e	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      3031	coffcode.h	FUNCTION_42	FOR_5
0x4004b95	      0xe9d0000000	                           jmp 0x4004c6a	      3031	coffcode.h	FUNCTION_42	FOR_5
0x4004b9a	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3033	coffcode.h	FUNCTION_42	FOR_5
0x4004b9d	    0x488d14c50000	                        lea rdx, [rax*8]	      3033	coffcode.h	FUNCTION_42	FOR_5
0x4004ba5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3033	coffcode.h	FUNCTION_42	FOR_5
0x4004ba9	          0x4801d0	                            add rax, rdx	      3033	coffcode.h	FUNCTION_42	FOR_5
0x4004bac	          0x488b00	                    mov rax, qword [rax]	      3033	coffcode.h	FUNCTION_42	FOR_5
0x4004baf	        0x48894590	             mov qword [rbp - 0x70], rax	      3033	coffcode.h	FUNCTION_42	FOR_5
0x4004bb3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bb7	        0x488945b8	             mov qword [rbp - 0x48], rax	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bbb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bc2	        0x488945c0	             mov qword [rbp - 0x40], rax	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bc6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bca	    0x48c740100000	               mov qword [rax + 0x10], 0	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bd2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bd6	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bdd	          0x4885c0	                           test rax, rax	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004be0	            0x7428	                            je 0x4004c0a	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004be2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004be6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bf1	        0x48895018	             mov qword [rax + 0x18], rdx	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bf5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004bf9	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c00	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c04	        0x48895010	             mov qword [rax + 0x10], rdx	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c08	            0xeb1b	                           jmp 0x4004c25	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c0e	    0x48c740180000	               mov qword [rax + 0x18], 0	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c16	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c1a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c1e	    0x488990900000	             mov qword [rax + 0x90], rdx	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c25	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c29	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c2d	    0x488990980000	             mov qword [rax + 0x98], rdx	      3034	coffcode.h	FUNCTION_42	FOR_5
0x4004c34	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3041	coffcode.h	FUNCTION_42	FOR_5	IF_15
0x4004c38	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3041	coffcode.h	FUNCTION_42	FOR_5	IF_15
0x4004c3c	          0x4885c0	                           test rax, rax	      3041	coffcode.h	FUNCTION_42	FOR_5	IF_15
0x4004c3f	            0x7510	                           jne 0x4004c51	      3041	coffcode.h	FUNCTION_42	FOR_5	IF_15
0x4004c41	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3048	coffcode.h	FUNCTION_42	FOR_5	IF_15
0x4004c45	    0xc780d8000000	               mov dword [rax + 0xd8], 1	      3048	coffcode.h	FUNCTION_42	FOR_5	IF_15
0x4004c4f	            0xeb15	                           jmp 0x4004c66	      3048	coffcode.h	FUNCTION_42	FOR_5	IF_15
0x4004c51	          0x8b4580	             mov eax, dword [rbp - 0x80]	      3051	coffcode.h	FUNCTION_42	FOR_5	ELSE_4
0x4004c54	          0x8d5001	                      lea edx, [rax + 1]	      3051	coffcode.h	FUNCTION_42	FOR_5	ELSE_4
0x4004c57	          0x895580	             mov dword [rbp - 0x80], edx	      3051	coffcode.h	FUNCTION_42	FOR_5	ELSE_4
0x4004c5a	            0x89c2	                            mov edx, eax	      3051	coffcode.h	FUNCTION_42	FOR_5	ELSE_4
0x4004c5c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3051	coffcode.h	FUNCTION_42	FOR_5	ELSE_4
0x4004c60	    0x8990d8000000	             mov dword [rax + 0xd8], edx	      3051	coffcode.h	FUNCTION_42	FOR_5	ELSE_4
0x4004c66	        0x83458c01	               add dword [rbp - 0x74], 1	      3031	coffcode.h	FUNCTION_42	FOR_5
0x4004c6a	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3031	coffcode.h	FUNCTION_42	FOR_5
0x4004c6d	          0x3b4588	             cmp eax, dword [rbp - 0x78]	      3031	coffcode.h	FUNCTION_42	FOR_5
0x4004c70	     0xf8224ffffff	                            jb 0x4004b9a	      3031	coffcode.h	FUNCTION_42	FOR_5
0x4004c76	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3054	coffcode.h	FUNCTION_42	CALL_24
0x4004c7a	          0x4889c7	                            mov rdi, rax	      3054	coffcode.h	FUNCTION_42	CALL_24
0x4004c7d	      0xe800000000	                          call 0x4004c82	      3054	coffcode.h	FUNCTION_42	CALL_24
0x4004c82	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3065	coffcode.h	FUNCTION_42	IF_16	CALL_25
0x4004c89	        0x488b4008	                mov rax, qword [rax + 8]	      3065	coffcode.h	FUNCTION_42	IF_16	CALL_25
0x4004c8d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3065	coffcode.h	FUNCTION_42	IF_16	CALL_25
0x4004c94	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      3065	coffcode.h	FUNCTION_42	IF_16	CALL_25
0x4004c9a	          0x3b4580	             cmp eax, dword [rbp - 0x80]	      3065	coffcode.h	FUNCTION_42	IF_16	CALL_25
0x4004c9d	            0x7740	                            ja 0x4004cdf	      3065	coffcode.h	FUNCTION_42	IF_16	CALL_25
0x4004c9f	      0xbf13000000	                           mov edi, 0x13	      3067	coffcode.h	FUNCTION_42	IF_16	CALL_26
0x4004ca4	      0xe800000000	                          call 0x4004ca9	      3067	coffcode.h	FUNCTION_42	IF_16	CALL_26
0x4004ca9	      0xbe00000000	                              mov esi, 0	      3070	coffcode.h	FUNCTION_42	IF_16	CALL_28
0x4004cae	      0xbf00000000	                              mov edi, 0	      3070	coffcode.h	FUNCTION_42	IF_16	CALL_28
0x4004cb3	      0xe800000000	                          call 0x4004cb8	      3070	coffcode.h	FUNCTION_42	IF_16	CALL_28
0x4004cb8	          0x4889c1	                            mov rcx, rax	      3070	coffcode.h	FUNCTION_42	IF_16	CALL_28
0x4004cbb	          0x8b5580	             mov edx, dword [rbp - 0x80]	      3068	coffcode.h	FUNCTION_42	IF_16	CALL_27
0x4004cbe	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3068	coffcode.h	FUNCTION_42	IF_16	CALL_27
0x4004cc5	          0x4889c6	                            mov rsi, rax	      3068	coffcode.h	FUNCTION_42	IF_16	CALL_27
0x4004cc8	          0x4889cf	                            mov rdi, rcx	      3068	coffcode.h	FUNCTION_42	IF_16	CALL_27
0x4004ccb	      0xb800000000	                              mov eax, 0	      3068	coffcode.h	FUNCTION_42	IF_16	CALL_27
0x4004cd0	      0xe800000000	                          call 0x4004cd5	      3068	coffcode.h	FUNCTION_42	IF_16	CALL_27
0x4004cd5	      0xb800000000	                              mov eax, 0	      3071	coffcode.h	FUNCTION_42	IF_16
0x4004cda	      0xe94c050000	                           jmp 0x400522b	      3071	coffcode.h	FUNCTION_42	IF_16
0x4004cdf	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      3074	coffcode.h	FUNCTION_42
0x4004ce9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3075	coffcode.h	FUNCTION_42	FOR_7
0x4004cf0	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3075	coffcode.h	FUNCTION_42	FOR_7
0x4004cf7	        0x48894590	             mov qword [rbp - 0x70], rax	      3075	coffcode.h	FUNCTION_42	FOR_7
0x4004cfb	      0xe96f040000	                           jmp 0x400516f	      3075	coffcode.h	FUNCTION_42	FOR_7
0x4004d00	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3082	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_29
0x4004d04	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3082	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_29
0x4004d0b	          0x4885c0	                           test rax, rax	      3082	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_29
0x4004d0e	            0x7546	                           jne 0x4004d56	      3082	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_29
0x4004d10	    0x48c745e06000	           mov qword [rbp - 0x20], 0x60 	      3084	coffcode.h	FUNCTION_42	FOR_7	IF_17
0x4004d18	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d1c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d23	          0x4889d6	                            mov rsi, rdx	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d26	          0x4889c7	                            mov rdi, rax	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d29	      0xe800000000	                          call 0x4004d2e	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d2e	          0x4889c2	                            mov rdx, rax	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d31	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d35	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      3086	coffcode.h	FUNCTION_42	FOR_7	IF_17	CALL_30
0x4004d3c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3087	coffcode.h	FUNCTION_42	FOR_7	IF_17	IF_18
0x4004d40	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3087	coffcode.h	FUNCTION_42	FOR_7	IF_17	IF_18
0x4004d47	          0x4885c0	                           test rax, rax	      3087	coffcode.h	FUNCTION_42	FOR_7	IF_17	IF_18
0x4004d4a	            0x750a	                           jne 0x4004d56	      3087	coffcode.h	FUNCTION_42	FOR_7	IF_17	IF_18
0x4004d4c	      0xb800000000	                              mov eax, 0	      3088	coffcode.h	FUNCTION_42	FOR_7	IF_17	IF_18
0x4004d51	      0xe9d5040000	                           jmp 0x400522b	      3088	coffcode.h	FUNCTION_42	FOR_7	IF_17	IF_18
0x4004d56	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3090	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_31
0x4004d5a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3090	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_31
0x4004d61	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3090	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_31
0x4004d65	          0x4885c0	                           test rax, rax	      3090	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_31
0x4004d68	            0x754b	                           jne 0x4004db5	      3090	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_31
0x4004d6a	    0x48c745c81000	           mov qword [rbp - 0x38], 0x10 	      3092	coffcode.h	FUNCTION_42	FOR_7	IF_19
0x4004d72	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d76	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d7d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d81	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d88	          0x4889d6	                            mov rsi, rdx	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d8b	          0x4889c7	                            mov rdi, rax	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d8e	      0xe800000000	                          call 0x4004d93	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d93	        0x48894358	             mov qword [rbx + 0x58], rax	      3094	coffcode.h	FUNCTION_42	FOR_7	IF_19	CALL_33
0x4004d97	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3095	coffcode.h	FUNCTION_42	FOR_7	IF_19	IF_20	CALL_34
0x4004d9b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3095	coffcode.h	FUNCTION_42	FOR_7	IF_19	IF_20	CALL_34
0x4004da2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3095	coffcode.h	FUNCTION_42	FOR_7	IF_19	IF_20	CALL_34
0x4004da6	          0x4885c0	                           test rax, rax	      3095	coffcode.h	FUNCTION_42	FOR_7	IF_19	IF_20	CALL_34
0x4004da9	            0x750a	                           jne 0x4004db5	      3095	coffcode.h	FUNCTION_42	FOR_7	IF_19	IF_20	CALL_34
0x4004dab	      0xb800000000	                              mov eax, 0	      3096	coffcode.h	FUNCTION_42	FOR_7	IF_19	IF_20
0x4004db0	      0xe976040000	                           jmp 0x400522b	      3096	coffcode.h	FUNCTION_42	FOR_7	IF_19	IF_20
0x4004db5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3098	coffcode.h	FUNCTION_42	FOR_7	IF_21	CALL_35
0x4004db9	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3098	coffcode.h	FUNCTION_42	FOR_7	IF_21	CALL_35
0x4004dc0	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3098	coffcode.h	FUNCTION_42	FOR_7	IF_21	CALL_35
0x4004dc4	          0x488b00	                    mov rax, qword [rax]	      3098	coffcode.h	FUNCTION_42	FOR_7	IF_21	CALL_35
0x4004dc7	          0x4885c0	                           test rax, rax	      3098	coffcode.h	FUNCTION_42	FOR_7	IF_21	CALL_35
0x4004dca	            0x751a	                           jne 0x4004de6	      3098	coffcode.h	FUNCTION_42	FOR_7	IF_21	CALL_35
0x4004dcc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3099	coffcode.h	FUNCTION_42	FOR_7	CALL_36
0x4004dd0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3099	coffcode.h	FUNCTION_42	FOR_7	CALL_36
0x4004dd7	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3099	coffcode.h	FUNCTION_42	FOR_7	CALL_36
0x4004ddb	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3099	coffcode.h	FUNCTION_42	FOR_7	CALL_36
0x4004ddf	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3099	coffcode.h	FUNCTION_42	FOR_7	CALL_36
0x4004de3	          0x488910	                    mov qword [rax], rdx	      3099	coffcode.h	FUNCTION_42	FOR_7	CALL_36
0x4004de6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3103	coffcode.h	FUNCTION_42	FOR_7	IF_22
0x4004dea	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3103	coffcode.h	FUNCTION_42	FOR_7	IF_22
0x4004ded	      0x2500010000	                          and eax, 0x100	      3103	coffcode.h	FUNCTION_42	FOR_7	IF_22
0x4004df2	            0x85c0	                           test eax, eax	      3103	coffcode.h	FUNCTION_42	FOR_7	IF_22
0x4004df4	     0xf8465030000	                            je 0x400515f	      3103	coffcode.h	FUNCTION_42	FOR_7	IF_22
0x4004dfa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3106	coffcode.h	FUNCTION_42	FOR_7
0x4004dfe	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3106	coffcode.h	FUNCTION_42	FOR_7
0x4004e02	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3106	coffcode.h	FUNCTION_42	FOR_7
0x4004e06	        0x48895040	             mov qword [rax + 0x40], rdx	      3106	coffcode.h	FUNCTION_42	FOR_7
0x4004e0a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3110	coffcode.h	FUNCTION_42	FOR_7	IF_23
0x4004e0e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3110	coffcode.h	FUNCTION_42	FOR_7	IF_23
0x4004e12	          0x4885c0	                           test rax, rax	      3110	coffcode.h	FUNCTION_42	FOR_7	IF_23
0x4004e15	     0xf8447030000	                            je 0x4005162	      3110	coffcode.h	FUNCTION_42	FOR_7	IF_23
0x4004e1b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3117	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e22	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3117	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e25	          0xc1e805	                              shr eax, 5	      3117	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e28	      0x25ffff0f00	                        and eax, 0xfffff	      3117	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e2d	          0x83e002	                              and eax, 2	      3117	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e30	            0x85c0	                           test eax, eax	      3117	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e32	     0xf849c000000	                            je 0x4004ed4	      3117	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e38	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3121	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e3c	        0x488945d0	             mov qword [rbp - 0x30], rax	      3121	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e40	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e44	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e47	      0xba01000000	                              mov edx, 1	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e4c	            0x89c1	                            mov ecx, eax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e4e	            0xd3e2	                             shl edx, cl	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e50	            0x89d0	                            mov eax, edx	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e52	          0x4863d0	                         movsxd rdx, eax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e55	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e59	          0x4801d0	                            add rax, rdx	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e5c	        0x488d50ff	                      lea rdx, [rax - 1]	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e60	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e64	          0x4839c2	                            cmp rdx, rax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e67	            0x723e	                            jb 0x4004ea7	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e69	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e6d	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e70	      0xba01000000	                              mov edx, 1	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e75	            0x89c1	                            mov ecx, eax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e77	            0xd3e2	                             shl edx, cl	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e79	            0x89d0	                            mov eax, edx	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e7b	          0x83e801	                              sub eax, 1	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e7e	          0x4863d0	                         movsxd rdx, eax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e81	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e85	          0x4801c2	                            add rdx, rax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e88	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e8c	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e8f	      0xbe01000000	                              mov esi, 1	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e94	            0x89c1	                            mov ecx, eax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e96	            0xd3e6	                             shl esi, cl	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e98	            0x89f0	                            mov eax, esi	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e9a	          0x83e801	                              sub eax, 1	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e9d	            0x4898	                                    cdqe	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004e9f	          0x48f7d0	                                 not rax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004ea2	          0x4821d0	                            and rax, rdx	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004ea5	            0xeb07	                           jmp 0x4004eae	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004ea7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004eae	        0x48894598	             mov qword [rbp - 0x68], rax	      3123	coffcode.h	FUNCTION_42	FOR_7	IF_24
0x4004eb2	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3157	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004eb7	            0x741b	                            je 0x4004ed4	      3157	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004eb9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3158	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004ebd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3158	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004ec1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3158	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004ec5	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      3158	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004ec9	          0x4801c2	                            add rdx, rax	      3158	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004ecc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3158	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004ed0	        0x48895038	             mov qword [rax + 0x38], rdx	      3158	coffcode.h	FUNCTION_42	FOR_7	IF_24	IF_28
0x4004ed4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3166	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004edb	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3166	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004ede	          0xc1e805	                              shr eax, 5	      3166	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004ee1	      0x25ffff0f00	                        and eax, 0xfffff	      3166	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004ee6	      0x2500010000	                          and eax, 0x100	      3166	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004eeb	            0x85c0	                           test eax, eax	      3166	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004eed	            0x7439	                            je 0x4004f28	      3166	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004eef	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3167	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004ef3	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3167	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004ef6	          0x83e001	                              and eax, 1	      3167	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004ef9	            0x85c0	                           test eax, eax	      3167	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004efb	            0x742b	                            je 0x4004f28	      3167	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004efd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f01	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f05	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f09	          0x4829c2	                            sub rdx, rax	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f0c	          0x4889d0	                            mov rax, rdx	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f0f	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f12	          0x4863ca	                         movsxd rcx, edx	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f15	      0xba00000000	                              mov edx, 0	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f1a	          0x48f7f1	                                 div rcx	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f1d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f21	          0x4801d0	                            add rax, rdx	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f24	        0x48894598	             mov qword [rbp - 0x68], rax	      3168	coffcode.h	FUNCTION_42	FOR_7	IF_29
0x4004f28	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3170	coffcode.h	FUNCTION_42	FOR_7
0x4004f2c	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3170	coffcode.h	FUNCTION_42	FOR_7
0x4004f30	    0x488990900000	             mov qword [rax + 0x90], rdx	      3170	coffcode.h	FUNCTION_42	FOR_7
0x4004f37	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f3b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f3f	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f42	            0x4898	                                    cdqe	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f44	          0x4801d0	                            add rax, rdx	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f47	        0x488d50ff	                      lea rdx, [rax - 1]	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f4b	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f4e	            0xf7d8	                                 neg eax	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f50	            0x4898	                                    cdqe	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f52	          0x4821c2	                            and rdx, rax	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f55	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f59	        0x48895038	             mov qword [rax + 0x38], rdx	      3174	coffcode.h	FUNCTION_42	FOR_7
0x4004f5d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3177	coffcode.h	FUNCTION_42	FOR_7
0x4004f61	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3177	coffcode.h	FUNCTION_42	FOR_7
0x4004f65	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3177	coffcode.h	FUNCTION_42	FOR_7
0x4004f69	          0x4801d0	                            add rax, rdx	      3177	coffcode.h	FUNCTION_42	FOR_7
0x4004f6c	        0x48894598	             mov qword [rbp - 0x68], rax	      3177	coffcode.h	FUNCTION_42	FOR_7
0x4004f70	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3181	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f77	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3181	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f7a	          0xc1e805	                              shr eax, 5	      3181	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f7d	      0x25ffff0f00	                        and eax, 0xfffff	      3181	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f82	          0x83e002	                              and eax, 2	      3181	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f85	            0x85c0	                           test eax, eax	      3181	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f87	     0xf85c3000000	                           jne 0x4005050	      3181	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f8d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3185	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f91	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3185	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f95	        0x488945d8	             mov qword [rbp - 0x28], rax	      3185	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f99	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004f9d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fa1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fa5	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fa8	      0xbe01000000	                              mov esi, 1	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fad	            0x89c1	                            mov ecx, eax	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004faf	            0xd3e6	                             shl esi, cl	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fb1	            0x89f0	                            mov eax, esi	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fb3	            0x4898	                                    cdqe	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fb5	          0x4801d0	                            add rax, rdx	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fb8	        0x488d50ff	                      lea rdx, [rax - 1]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fbc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fc0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fc4	          0x4839c2	                            cmp rdx, rax	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fc7	            0x7241	                            jb 0x400500a	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fc9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fcd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fd1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fd5	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fd8	      0xbe01000000	                              mov esi, 1	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fdd	            0x89c1	                            mov ecx, eax	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fdf	            0xd3e6	                             shl esi, cl	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fe1	            0x89f0	                            mov eax, esi	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fe3	          0x83e801	                              sub eax, 1	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fe6	            0x4898	                                    cdqe	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fe8	          0x4801c2	                            add rdx, rax	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004feb	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004fef	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004ff2	      0xbe01000000	                              mov esi, 1	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004ff7	            0x89c1	                            mov ecx, eax	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004ff9	            0xd3e6	                             shl esi, cl	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004ffb	            0x89f0	                            mov eax, esi	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4004ffd	          0x83e801	                              sub eax, 1	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005000	            0x4898	                                    cdqe	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005002	          0x48f7d0	                                 not rax	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005005	          0x4821c2	                            and rdx, rax	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005008	            0xeb07	                           jmp 0x4005011	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x400500a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005011	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005015	        0x48895038	             mov qword [rax + 0x38], rdx	      3186	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005019	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3188	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x400501d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3188	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005021	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3188	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005025	           0xf95c0	                                setne al	      3188	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005028	           0xfb6c0	                           movzx eax, al	      3188	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x400502b	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3188	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005031	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005035	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005039	        0x482b45d8	             sub rax, qword [rbp - 0x28]	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x400503d	          0x4889c2	                            mov rdx, rax	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005040	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005044	          0x4801d0	                            add rax, rdx	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005047	        0x48894598	             mov qword [rbp - 0x68], rax	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x400504b	      0xe9a9000000	                           jmp 0x40050f9	      3189	coffcode.h	FUNCTION_42	FOR_7	IF_30
0x4005050	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3193	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005054	        0x488945d0	             mov qword [rbp - 0x30], rax	      3193	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005058	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400505c	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400505f	      0xba01000000	                              mov edx, 1	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005064	            0x89c1	                            mov ecx, eax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005066	            0xd3e2	                             shl edx, cl	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005068	            0x89d0	                            mov eax, edx	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400506a	          0x4863d0	                         movsxd rdx, eax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400506d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005071	          0x4801d0	                            add rax, rdx	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005074	        0x488d50ff	                      lea rdx, [rax - 1]	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005078	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400507c	          0x4839c2	                            cmp rdx, rax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400507f	            0x723e	                            jb 0x40050bf	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005081	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005085	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005088	      0xba01000000	                              mov edx, 1	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400508d	            0x89c1	                            mov ecx, eax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400508f	            0xd3e2	                             shl edx, cl	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005091	            0x89d0	                            mov eax, edx	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005093	          0x83e801	                              sub eax, 1	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005096	          0x4863d0	                         movsxd rdx, eax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x4005099	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x400509d	          0x4801c2	                            add rdx, rax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050a0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050a4	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050a7	      0xbe01000000	                              mov esi, 1	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050ac	            0x89c1	                            mov ecx, eax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050ae	            0xd3e6	                             shl esi, cl	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050b0	            0x89f0	                            mov eax, esi	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050b2	          0x83e801	                              sub eax, 1	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050b5	            0x4898	                                    cdqe	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050b7	          0x48f7d0	                                 not rax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050ba	          0x4821d0	                            and rax, rdx	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050bd	            0xeb07	                           jmp 0x40050c6	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050bf	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050c6	        0x48894598	             mov qword [rbp - 0x68], rax	      3194	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050ca	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3195	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050ce	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      3195	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050d2	           0xf95c0	                                setne al	      3195	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050d5	           0xfb6c0	                           movzx eax, al	      3195	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050d8	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3195	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050de	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3196	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050e2	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3196	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050e6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3196	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050ea	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      3196	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050ee	          0x4801c2	                            add rdx, rax	      3196	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050f1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3196	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050f5	        0x48895038	             mov qword [rax + 0x38], rdx	      3196	coffcode.h	FUNCTION_42	FOR_7	ELSE_6
0x40050f9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x40050fd	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x4005104	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x4005108	          0x488b10	                    mov rdx, qword [rax]	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x400510b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x400510f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x4005113	          0x4839c2	                            cmp rdx, rax	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x4005116	            0x730a	                           jae 0x4005122	      3204	coffcode.h	FUNCTION_42	FOR_7	IF_31	CALL_39
0x4005118	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      3205	coffcode.h	FUNCTION_42	FOR_7	IF_31
0x4005122	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3212	coffcode.h	FUNCTION_42	FOR_7	IF_32	CALL_40
0x4005126	          0x488b00	                    mov rax, qword [rax]	      3212	coffcode.h	FUNCTION_42	FOR_7	IF_32	CALL_40
0x4005129	      0xbe00000000	                              mov esi, 0	      3212	coffcode.h	FUNCTION_42	FOR_7	IF_32	CALL_40
0x400512e	          0x4889c7	                            mov rdi, rax	      3212	coffcode.h	FUNCTION_42	FOR_7	IF_32	CALL_40
0x4005131	      0xe800000000	                          call 0x4005136	      3212	coffcode.h	FUNCTION_42	FOR_7	IF_32	CALL_40
0x4005136	            0x85c0	                           test eax, eax	      3212	coffcode.h	FUNCTION_42	FOR_7	IF_32	CALL_40
0x4005138	            0x751b	                           jne 0x4005155	      3212	coffcode.h	FUNCTION_42	FOR_7	IF_32	CALL_40
0x400513a	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      3213	coffcode.h	FUNCTION_42	FOR_7	CALL_41
0x400513e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3213	coffcode.h	FUNCTION_42	FOR_7	CALL_41
0x4005145	      0xba00000000	                              mov edx, 0	      3213	coffcode.h	FUNCTION_42	FOR_7	CALL_41
0x400514a	          0x4889ce	                            mov rsi, rcx	      3213	coffcode.h	FUNCTION_42	FOR_7	CALL_41
0x400514d	          0x4889c7	                            mov rdi, rax	      3213	coffcode.h	FUNCTION_42	FOR_7	CALL_41
0x4005150	      0xe8ebaeffff	            call sym.bfd_set_section_vma	      3213	coffcode.h	FUNCTION_42	FOR_7	CALL_41
0x4005155	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3217	coffcode.h	FUNCTION_42	FOR_7
0x4005159	        0x488945a0	             mov qword [rbp - 0x60], rax	      3217	coffcode.h	FUNCTION_42	FOR_7
0x400515d	            0xeb04	                           jmp 0x4005163	      3217	coffcode.h	FUNCTION_42	FOR_7
0x400515f	              0x90	                                     nop	      3104	coffcode.h	FUNCTION_42	FOR_7	IF_22
0x4005160	            0xeb01	                           jmp 0x4005163	      3104	coffcode.h	FUNCTION_42	FOR_7	IF_22
0x4005162	              0x90	                                     nop	      3111	coffcode.h	FUNCTION_42	FOR_7	IF_23
0x4005163	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3077	coffcode.h	FUNCTION_42	FOR_7
0x4005167	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3077	coffcode.h	FUNCTION_42	FOR_7
0x400516b	        0x48894590	             mov qword [rbp - 0x70], rax	      3077	coffcode.h	FUNCTION_42	FOR_7
0x400516f	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3075	coffcode.h	FUNCTION_42	FOR_7
0x4005174	     0xf8586fbffff	                           jne 0x4004d00	      3075	coffcode.h	FUNCTION_42	FOR_7
0x400517a	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      3226	coffcode.h	FUNCTION_42	IF_33
0x4005181	            0x7452	                            je 0x40051d5	      3226	coffcode.h	FUNCTION_42	IF_33
0x4005183	    0xc6857bffffff	                mov byte [rbp - 0x85], 0	      3230	coffcode.h	FUNCTION_42	IF_33
0x400518a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x400518e	        0x488d48ff	                      lea rcx, [rax - 1]	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x4005192	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x4005199	      0xba00000000	                              mov edx, 0	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x400519e	          0x4889ce	                            mov rsi, rcx	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x40051a1	          0x4889c7	                            mov rdi, rax	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x40051a4	      0xe800000000	                          call 0x40051a9	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x40051a9	            0x85c0	                           test eax, eax	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x40051ab	            0x7521	                           jne 0x40051ce	      3231	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_42
0x40051ad	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3232	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_43
0x40051b4	    0x488d857bffff	                   lea rax, [rbp - 0x85]	      3232	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_43
0x40051bb	      0xbe01000000	                              mov esi, 1	      3232	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_43
0x40051c0	          0x4889c7	                            mov rdi, rax	      3232	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_43
0x40051c3	      0xe800000000	                          call 0x40051c8	      3232	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_43
0x40051c8	        0x4883f801	                              cmp rax, 1	      3232	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_43
0x40051cc	            0x7407	                            je 0x40051d5	      3232	coffcode.h	FUNCTION_42	IF_33	IF_34	CALL_43
0x40051ce	      0xb800000000	                              mov eax, 0	      3233	coffcode.h	FUNCTION_42	IF_33	IF_34
0x40051d3	            0xeb56	                           jmp 0x400522b	      3233	coffcode.h	FUNCTION_42	IF_33	IF_34
0x40051d5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3239	coffcode.h	FUNCTION_42
0x40051d9	        0x488d5003	                      lea rdx, [rax + 3]	      3239	coffcode.h	FUNCTION_42
0x40051dd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3239	coffcode.h	FUNCTION_42
0x40051e1	          0x4839c2	                            cmp rdx, rax	      3239	coffcode.h	FUNCTION_42
0x40051e4	            0x720e	                            jb 0x40051f4	      3239	coffcode.h	FUNCTION_42
0x40051e6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3239	coffcode.h	FUNCTION_42
0x40051ea	        0x4883c003	                              add rax, 3	      3239	coffcode.h	FUNCTION_42
0x40051ee	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      3239	coffcode.h	FUNCTION_42
0x40051f2	            0xeb07	                           jmp 0x40051fb	      3239	coffcode.h	FUNCTION_42
0x40051f4	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3239	coffcode.h	FUNCTION_42
0x40051fb	        0x48894598	             mov qword [rbp - 0x68], rax	      3239	coffcode.h	FUNCTION_42
0x40051ff	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3241	coffcode.h	FUNCTION_42	CALL_44
0x4005206	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3241	coffcode.h	FUNCTION_42	CALL_44
0x400520d	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3241	coffcode.h	FUNCTION_42	CALL_44
0x4005211	        0x48895030	             mov qword [rax + 0x30], rdx	      3241	coffcode.h	FUNCTION_42	CALL_44
0x4005215	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3242	coffcode.h	FUNCTION_42
0x400521c	         0xfb65047	           movzx edx, byte [rax + 0x47] 	      3242	coffcode.h	FUNCTION_42
0x4005220	          0x83ca40	                            or edx, 0x40	      3242	coffcode.h	FUNCTION_42
0x4005223	          0x885047	               mov byte [rax + 0x47], dl	      3242	coffcode.h	FUNCTION_42
0x4005226	      0xb801000000	                              mov eax, 1	      3244	coffcode.h	FUNCTION_42
0x400522b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3245	coffcode.h	FUNCTION_42
0x400522f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3245	coffcode.h	FUNCTION_42
0x4005238	            0x7405	                            je 0x400523f	      3245	coffcode.h	FUNCTION_42
0x400523a	      0xe800000000	                          call 0x400523f	      3245	coffcode.h	FUNCTION_42
0x400523f	    0x4881c4980000	                           add rsp, 0x98	      3245	coffcode.h	FUNCTION_42
0x4005246	              0x5b	                                 pop rbx	      3245	coffcode.h	FUNCTION_42
0x4005247	              0x5d	                                 pop rbp	      3245	coffcode.h	FUNCTION_42
0x4005248	              0xc3	                                     ret	      3245	coffcode.h	FUNCTION_42
bfd_coff_set_long_section_names_allowed	IF,0:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	12
0x4003033	              0x55	                                push rbp	       466	coffcode.h	FUNCTION_18
0x4003034	          0x4889e5	                            mov rbp, rsp	       466	coffcode.h	FUNCTION_18
0x4003037	        0x48897df8	                mov qword [rbp - 8], rdi	       466	coffcode.h	FUNCTION_18
0x400303b	          0x8975f4	              mov dword [rbp - 0xc], esi	       466	coffcode.h	FUNCTION_18
0x400303e	        0x488b45f8	                mov rax, qword [rbp - 8]	       467	coffcode.h	FUNCTION_18	CALL_1
0x4003042	        0x488b4008	                mov rax, qword [rax + 8]	       467	coffcode.h	FUNCTION_18	CALL_1
0x4003046	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       467	coffcode.h	FUNCTION_18	CALL_1
0x400304d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       467	coffcode.h	FUNCTION_18	CALL_1
0x4003050	          0x895074	             mov dword [rax + 0x74], edx	       467	coffcode.h	FUNCTION_18	CALL_1
0x4003053	      0xb801000000	                              mov eax, 1	       468	coffcode.h	FUNCTION_18
0x4003058	              0x5d	                                 pop rbp	       469	coffcode.h	FUNCTION_18
0x4003059	              0xc3	                                     ret	       469	coffcode.h	FUNCTION_18
handle_COMDAT	IF,10:CALL,35:ELSE,0:SWITCH,2:DO,0:FOR,0:functions,0:WHILE,1	304
0x4003228	              0x55	                                push rbp	       881	coffcode.h	FUNCTION_23
0x4003229	          0x4889e5	                            mov rbp, rsp	       881	coffcode.h	FUNCTION_23
0x400322c	              0x53	                                push rbx	       881	coffcode.h	FUNCTION_23
0x400322d	    0x4881ec080100	                          sub rsp, 0x108	       881	coffcode.h	FUNCTION_23
0x4003234	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       881	coffcode.h	FUNCTION_23
0x400323b	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       881	coffcode.h	FUNCTION_23
0x4003241	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       881	coffcode.h	FUNCTION_23
0x4003248	    0x48898d00ffff	            mov qword [rbp - 0x100], rcx	       881	coffcode.h	FUNCTION_23
0x400324f	    0x4c8985f8feff	             mov qword [rbp - 0x108], r8	       881	coffcode.h	FUNCTION_23
0x4003256	    0x64488b042528	                mov rax, qword fs:[0x28]	       881	coffcode.h	FUNCTION_23
0x400325f	        0x488945e8	             mov qword [rbp - 0x18], rax	       881	coffcode.h	FUNCTION_23
0x4003263	            0x31c0	                            xor eax, eax	       881	coffcode.h	FUNCTION_23
0x4003265	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       882	coffcode.h	FUNCTION_23
0x400326c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       882	coffcode.h	FUNCTION_23
0x4003273	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       884	coffcode.h	FUNCTION_23
0x400327d	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       885	coffcode.h	FUNCTION_23
0x4003288	    0x818d14ffffff	          or dword [rbp - 0xec], 0x20000	       887	coffcode.h	FUNCTION_23
0x4003292	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       906	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x4003299	          0x4889c7	                            mov rdi, rax	       906	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x400329c	      0xe800000000	                          call 0x40032a1	       906	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x40032a1	            0x85c0	                           test eax, eax	       906	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x40032a3	            0x750b	                           jne 0x40032b0	       906	coffcode.h	FUNCTION_23	IF_1	CALL_1
0x40032a5	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       907	coffcode.h	FUNCTION_23	IF_1
0x40032ab	      0xe910050000	                           jmp 0x40037c0	       907	coffcode.h	FUNCTION_23	IF_1
0x40032b0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       909	coffcode.h	FUNCTION_23	CALL_2
0x40032b7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       909	coffcode.h	FUNCTION_23	CALL_2
0x40032be	        0x488b4058	            mov rax, qword [rax + 0x58] 	       909	coffcode.h	FUNCTION_23	CALL_2
0x40032c2	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       909	coffcode.h	FUNCTION_23	CALL_2
0x40032c9	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       909	coffcode.h	FUNCTION_23	CALL_2
0x40032d0	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       909	coffcode.h	FUNCTION_23	CALL_2
0x40032d7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       910	coffcode.h	FUNCTION_23	CALL_4
0x40032de	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       910	coffcode.h	FUNCTION_23	CALL_4
0x40032e5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       910	coffcode.h	FUNCTION_23	CALL_4
0x40032e9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       910	coffcode.h	FUNCTION_23	CALL_4
0x40032f0	        0x488b4008	                mov rax, qword [rax + 8]	       910	coffcode.h	FUNCTION_23	CALL_4
0x40032f4	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       910	coffcode.h	FUNCTION_23	CALL_4
0x40032fb	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       910	coffcode.h	FUNCTION_23	CALL_4
0x40032fe	            0x89c0	                            mov eax, eax	       910	coffcode.h	FUNCTION_23	CALL_4
0x4003300	        0x480fafd0	                           imul rdx, rax	       910	coffcode.h	FUNCTION_23	CALL_4
0x4003304	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       910	coffcode.h	FUNCTION_23	CALL_4
0x400330b	          0x4801d0	                            add rax, rdx	       910	coffcode.h	FUNCTION_23	CALL_4
0x400330e	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       910	coffcode.h	FUNCTION_23	CALL_4
0x4003315	      0xe98c040000	                           jmp 0x40037a6	       912	coffcode.h	FUNCTION_23	WHILE_1
0x400331a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x4003321	        0x488b4008	                mov rax, qword [rax + 8]	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x4003325	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x400332c	        0x488b4008	                mov rax, qword [rax + 8]	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x4003330	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x4003337	    0x488bb530ffff	             mov rsi, qword [rbp - 0xd0]	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x400333e	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x4003345	          0x4889cf	                            mov rdi, rcx	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x4003348	            0xffd0	                                call rax	       918	coffcode.h	FUNCTION_23	WHILE_1	CALL_5
0x400334a	          0x8b5588	             mov edx, dword [rbp - 0x78]	       922	coffcode.h	FUNCTION_23	WHILE_1	IF_2
0x400334d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       922	coffcode.h	FUNCTION_23	WHILE_1	IF_2
0x4003354	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	       922	coffcode.h	FUNCTION_23	WHILE_1	IF_2
0x400335a	            0x39c2	                            cmp edx, eax	       922	coffcode.h	FUNCTION_23	WHILE_1	IF_2
0x400335c	     0xf8517040000	                           jne 0x4003779	       922	coffcode.h	FUNCTION_23	WHILE_1	IF_2
0x4003362	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       949	coffcode.h	FUNCTION_23	WHILE_1	IF_2	CALL_7
0x4003366	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       949	coffcode.h	FUNCTION_23	WHILE_1	IF_2	CALL_7
0x400336d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       949	coffcode.h	FUNCTION_23	WHILE_1	IF_2	CALL_7
0x4003374	          0x4889ce	                            mov rsi, rcx	       949	coffcode.h	FUNCTION_23	WHILE_1	IF_2	CALL_7
0x4003377	          0x4889c7	                            mov rdi, rax	       949	coffcode.h	FUNCTION_23	WHILE_1	IF_2	CALL_7
0x400337a	      0xe800000000	                          call 0x400337f	       949	coffcode.h	FUNCTION_23	WHILE_1	IF_2	CALL_7
0x400337f	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       949	coffcode.h	FUNCTION_23	WHILE_1	IF_2	CALL_7
0x4003386	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       952	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3
0x400338e	            0x752e	                           jne 0x40033be	       952	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3
0x4003390	      0xbe00000000	                              mov esi, 0	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x4003395	      0xbf00000000	                              mov edi, 0	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x400339a	      0xe800000000	                          call 0x400339f	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x400339f	          0x4889c2	                            mov rdx, rax	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x40033a2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x40033a9	          0x4889c6	                            mov rsi, rax	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x40033ac	          0x4889d7	                            mov rdi, rdx	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x40033af	      0xb800000000	                              mov eax, 0	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x40033b4	      0xe800000000	                          call 0x40033b9	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x40033b9	      0xe9fc030000	                           jmp 0x40037ba	       954	coffcode.h	FUNCTION_23	WHILE_1	IF_2	IF_3	CALL_9
0x40033be	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       959	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40033c4	          0x83f801	                              cmp eax, 1	       959	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40033c7	     0xf8476020000	                            je 0x4003643	       959	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40033cd	          0x83f802	                              cmp eax, 2	       959	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40033d0	     0xf841a020000	                            je 0x40035f0	       959	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40033d6	            0x85c0	                           test eax, eax	       959	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40033d8	     0xf859b030000	                           jne 0x4003779	       959	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40033de	         0xfb64590	            movzx eax, byte [rbp - 0x70]	       982	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x40033e2	            0x3c03	                               cmp al, 3	       982	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x40033e4	            0x7408	                            je 0x40033ee	       982	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x40033e6	         0xfb64590	            movzx eax, byte [rbp - 0x70]	       983	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x40033ea	            0x3c02	                               cmp al, 2	       983	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x40033ec	            0x7517	                           jne 0x4003405	       983	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x40033ee	         0xfb7458e	            movzx eax, word [rbp - 0x72]	       984	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40033f2	           0xfb7c0	                           movzx eax, ax	       984	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40033f5	          0x83e00f	                            and eax, 0xf	       984	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40033f8	            0x85c0	                           test eax, eax	       984	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40033fa	            0x7509	                           jne 0x4003405	       984	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_10
0x40033fc	        0x488b4580	             mov rax, qword [rbp - 0x80]	       985	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x4003400	          0x4885c0	                           test rax, rax	       982	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x4003403	            0x7435	                            je 0x400343a	       982	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4
0x4003405	      0xbe00000000	                              mov esi, 0	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x400340a	      0xbf00000000	                              mov edi, 0	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x400340f	      0xe800000000	                          call 0x4003414	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x4003414	          0x4889c1	                            mov rcx, rax	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x4003417	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x400341e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x4003425	          0x4889c6	                            mov rsi, rax	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x4003428	          0x4889cf	                            mov rdi, rcx	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x400342b	      0xb800000000	                              mov eax, 0	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x4003430	      0xe800000000	                          call 0x4003435	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x4003435	      0xe980030000	                           jmp 0x40037ba	       989	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_4	CALL_12
0x400343a	         0xfb64590	            movzx eax, byte [rbp - 0x70]	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x400343e	            0x3c03	                               cmp al, 3	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4003440	            0x7551	                           jne 0x4003493	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4003442	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4003449	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4003450	          0x4889d6	                            mov rsi, rdx	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4003453	          0x4889c7	                            mov rdi, rax	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x4003456	      0xe800000000	                          call 0x400345b	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x400345b	            0x85c0	                           test eax, eax	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x400345d	            0x7434	                            je 0x4003493	       999	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_13
0x400345f	      0xbe00000000	                              mov esi, 0	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4003464	      0xbf00000000	                              mov edi, 0	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4003469	      0xe800000000	                          call 0x400346e	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x400346e	          0x4889c7	                            mov rdi, rax	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4003471	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4003478	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x400347f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4003486	          0x4889c6	                            mov rsi, rax	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4003489	      0xb800000000	                              mov eax, 0	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x400348e	      0xe800000000	                          call 0x4003493	      1001	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_5	CALL_15
0x4003493	    0xc7852cffffff	               mov dword [rbp - 0xd4], 1	      1005	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x400349d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034a4	        0x488b4008	                mov rax, qword [rax + 8]	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034a8	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034af	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034b2	            0x89c2	                            mov edx, eax	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034b4	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034bb	          0x4801d0	                            add rax, rdx	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034be	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034c5	            0x7235	                            jb 0x40034fc	      1008	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_16
0x40034c7	      0xbe00000000	                              mov esi, 0	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034cc	      0xbf00000000	                              mov edi, 0	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034d1	      0xe800000000	                          call 0x40034d6	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034d6	          0x4889c1	                            mov rcx, rax	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034d9	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034e0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034e7	          0x4889c6	                            mov rsi, rax	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034ea	          0x4889cf	                            mov rdi, rcx	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034ed	      0xb800000000	                              mov eax, 0	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034f2	      0xe800000000	                          call 0x40034f7	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034f7	      0xe97d020000	                           jmp 0x4003779	      1011	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_6	CALL_18
0x40034fc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003503	        0x488b4008	                mov rax, qword [rax + 8]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003507	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400350e	          0x488b00	                    mov rax, qword [rax]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003511	         0xfb65591	            movzx edx, byte [rbp - 0x6f]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003515	        0x440fb6c2	                           movzx r8d, dl	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003519	         0xfb65590	            movzx edx, byte [rbp - 0x70]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400351d	           0xfb6ca	                           movzx ecx, dl	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003520	         0xfb7558e	            movzx edx, word [rbp - 0x72]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003524	           0xfb7d2	                           movzx edx, dx	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003527	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400352e	        0x488b7608	                mov rsi, qword [rsi + 8]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003532	    0x488bb6680300	           mov rsi, qword [rsi + 0x368] 	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003539	          0x8b765c	            mov esi, dword [rsi + 0x5c] 	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400353c	            0x89f7	                            mov edi, esi	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400353e	    0x488bb530ffff	             mov rsi, qword [rbp - 0xd0]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003545	        0x4c8d1437	                    lea r10, [rdi + rsi]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003549	    0x488bbd18ffff	             mov rdi, qword [rbp - 0xe8]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003550	        0x4883ec08	                              sub rsp, 8	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003554	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003558	              0x56	                                push rsi	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003559	          0x4589c1	                            mov r9d, r8d	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400355c	    0x41b800000000	                              mov r8d, 0	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003562	          0x4c89d6	                            mov rsi, r10	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003565	            0xffd0	                                call rax	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x4003567	        0x4883c410	                           add rsp, 0x10	      1017	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_20
0x400356b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1021	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_21
0x4003572	      0xbe24000000	                           mov esi, 0x24	      1021	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_21
0x4003577	          0x4889c7	                            mov rdi, rax	      1021	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_21
0x400357a	      0xe800000000	                          call 0x400357f	      1021	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_21
0x400357f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1021	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_21
0x4003586	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      1022	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_7
0x400358e	            0x7412	                            je 0x40035a2	      1022	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_7
0x4003590	    0xc7852cffffff	               mov dword [rbp - 0xd4], 2	      1025	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_7
0x400359a	    0x48838538ffff	               add qword [rbp - 0xc8], 1	      1027	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_7
0x40035a2	         0xfb645ba	            movzx eax, byte [rbp - 0x46]	      1046	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035a6	           0xfb6c0	                           movzx eax, al	      1046	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035a9	          0x83f805	                              cmp eax, 5	      1046	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035ac	            0x773c	                            ja 0x40035ea	      1046	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035ae	            0x89c0	                            mov eax, eax	      1046	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035b0	    0x488b04c50000	                  mov rax, qword [rax*8]	      1046	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035b8	            0xffe0	                                 jmp rax	      1046	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035ba	    0x81a514ffffff	      and dword [rbp - 0xec], 0xfffdffff	      1052	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035c4	            0xeb25	                           jmp 0x40035eb	      1054	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035c6	    0x818d14ffffff	          or dword [rbp - 0xec], 0x80000	      1061	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035d0	            0xeb19	                           jmp 0x40035eb	      1062	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035d2	    0x818d14ffffff	          or dword [rbp - 0xec], 0xc0000	      1066	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035dc	            0xeb0d	                           jmp 0x40035eb	      1067	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035de	    0x81a514ffffff	      and dword [rbp - 0xec], 0xfffdffff	      1081	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035e8	            0xeb01	                           jmp 0x40035eb	      1083	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035ea	              0x90	                                     nop	      1089	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	SWITCH_2
0x40035eb	      0xe989010000	                           jmp 0x4003779	      1092	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x40035f0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40035f7	        0x488d5001	                      lea rdx, [rax + 1]	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x40035fb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x4003602	          0x4889d6	                            mov rsi, rdx	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x4003605	          0x4889c7	                            mov rdi, rax	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x4003608	      0xe800000000	                          call 0x400360d	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x400360d	            0x85c0	                           test eax, eax	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x400360f	            0x7432	                            je 0x4003643	      1101	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_22
0x4003611	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003615	           0xfb6c0	                           movzx eax, al	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003618	          0x83c001	                              add eax, 1	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x400361b	            0x89c2	                            mov edx, eax	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x400361d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003624	        0x488b4008	                mov rax, qword [rax + 8]	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003628	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x400362f	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003632	           0xfafc2	                           imul eax, edx	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003635	            0x89c0	                            mov eax, eax	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003637	    0x48018530ffff	            add qword [rbp - 0xd0], rax 	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x400363e	      0xe963010000	                           jmp 0x40037a6	      1105	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_8	CALL_23
0x4003643	    0x48c78560ffff	           mov qword [rbp - 0xa0], 0x10 	      1121	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x400364e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1122	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_24
0x4003655	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      1122	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_24
0x400365c	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1123	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4003663	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1123	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_25
0x400366a	          0x4889d6	                            mov rsi, rdx	      1123	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_25
0x400366d	          0x4889c7	                            mov rdi, rax	      1123	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4003670	      0xe800000000	                          call 0x4003675	      1123	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4003675	        0x48894340	             mov qword [rbx + 0x40], rax	      1123	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_25
0x4003679	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1124	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4003680	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1124	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4003687	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1124	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x400368b	          0x4885c0	                           test rax, rax	      1124	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x400368e	            0x7514	                           jne 0x40036a4	      1124	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_9	CALL_26
0x4003690	      0xba00000000	                              mov edx, 0	      1125	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_27
0x4003695	      0xbe65040000	                          mov esi, 0x465	      1125	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_27
0x400369a	      0xbf00000000	                              mov edi, 0	      1125	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_27
0x400369f	      0xe800000000	                          call 0x40036a4	      1125	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_27
0x40036a4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1127	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_28
0x40036ab	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1127	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_28
0x40036b2	        0x488b4840	            mov rcx, qword [rax + 0x40] 	      1127	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_28
0x40036b6	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036bd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036c4	          0x4829c2	                            sub rdx, rax	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036c7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036ce	        0x488b4008	                mov rax, qword [rax + 8]	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036d2	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036d9	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036dc	            0x89c6	                            mov esi, eax	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036de	          0x4889d0	                            mov rax, rdx	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036e1	            0x4899	                                     cqo	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036e3	          0x48f7fe	                                idiv rsi	      1128	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_29
0x40036e6	        0x48894108	                mov qword [rcx + 8], rax	      1127	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_28
0x40036ea	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1130	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_30
0x40036f1	          0x4889c7	                            mov rdi, rax	      1130	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_30
0x40036f4	      0xe800000000	                          call 0x40036f9	      1130	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_30
0x40036f9	        0x4883c001	                              add rax, 1	      1130	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_30
0x40036fd	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1130	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_30
0x4003704	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1131	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_31
0x400370b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1131	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_31
0x4003712	          0x4889d6	                            mov rsi, rdx	      1131	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_31
0x4003715	          0x4889c7	                            mov rdi, rax	      1131	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_31
0x4003718	      0xe800000000	                          call 0x400371d	      1131	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_31
0x400371d	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1131	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_31
0x4003724	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      1132	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_10
0x400372c	            0x7514	                           jne 0x4003742	      1132	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	IF_10
0x400372e	      0xba00000000	                              mov edx, 0	      1133	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_32
0x4003733	      0xbe6d040000	                          mov esi, 0x46d	      1133	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_32
0x4003738	      0xbf00000000	                              mov edi, 0	      1133	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_32
0x400373d	      0xe800000000	                          call 0x4003742	      1133	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_32
0x4003742	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1135	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_33
0x4003749	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1135	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_33
0x4003750	          0x4889d6	                            mov rsi, rdx	      1135	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_33
0x4003753	          0x4889c7	                            mov rdi, rax	      1135	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_33
0x4003756	      0xe800000000	                          call 0x400375b	      1135	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_33
0x400375b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1136	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_34
0x4003762	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1136	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_34
0x4003769	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1136	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1	CALL_34
0x400376d	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1137	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x4003774	          0x488910	                    mov qword [rax], rdx	      1137	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x4003777	            0xeb41	                           jmp 0x40037ba	      1140	coffcode.h	FUNCTION_23	WHILE_1	IF_2	SWITCH_1
0x4003779	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x400377d	           0xfb6c0	                           movzx eax, al	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x4003780	          0x83c001	                              add eax, 1	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x4003783	            0x89c2	                            mov edx, eax	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x4003785	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x400378c	        0x488b4008	                mov rax, qword [rax + 8]	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x4003790	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x4003797	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x400379a	           0xfafc2	                           imul eax, edx	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x400379d	            0x89c0	                            mov eax, eax	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x400379f	    0x48018530ffff	            add qword [rbp - 0xd0], rax 	      1144	coffcode.h	FUNCTION_23	WHILE_1	CALL_35
0x40037a6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       912	coffcode.h	FUNCTION_23	WHILE_1
0x40037ad	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       912	coffcode.h	FUNCTION_23	WHILE_1
0x40037b4	     0xf8260fbffff	                            jb 0x400331a	       912	coffcode.h	FUNCTION_23	WHILE_1
0x40037ba	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      1148	coffcode.h	FUNCTION_23
0x40037c0	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1149	coffcode.h	FUNCTION_23
0x40037c4	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1149	coffcode.h	FUNCTION_23
0x40037cd	            0x7405	                            je 0x40037d4	      1149	coffcode.h	FUNCTION_23
0x40037cf	      0xe800000000	                          call 0x40037d4	      1149	coffcode.h	FUNCTION_23
0x40037d4	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1149	coffcode.h	FUNCTION_23
0x40037d8	              0xc9	                                   leave	      1149	coffcode.h	FUNCTION_23
0x40037d9	              0xc3	                                     ret	      1149	coffcode.h	FUNCTION_23
coff_i386_reloc_name_lookup	IF,1:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0	42
0x4000703	              0x55	                                push rbp	       587	coff-i386.c	FUNCTION_70
0x4000704	          0x4889e5	                            mov rbp, rsp	       587	coff-i386.c	FUNCTION_70
0x4000707	        0x4883ec20	                           sub rsp, 0x20	       587	coff-i386.c	FUNCTION_70
0x400070b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       587	coff-i386.c	FUNCTION_70
0x400070f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       587	coff-i386.c	FUNCTION_70
0x4000713	    0xc745fc000000	                  mov dword [rbp - 4], 0	       590	coff-i386.c	FUNCTION_70	FOR_1
0x400071a	            0xeb69	                           jmp 0x4000785	       590	coff-i386.c	FUNCTION_70	FOR_1
0x400071c	          0x8b55fc	                mov edx, dword [rbp - 4]	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x400071f	          0x4889d0	                            mov rax, rdx	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000722	        0x48c1e002	                              shl rax, 2	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000726	          0x4801d0	                            add rax, rdx	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000729	        0x48c1e004	                              shl rax, 4	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x400072d	    0x480500000000	                              add rax, 0	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000733	          0x488b00	                    mov rax, qword [rax]	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000736	          0x4885c0	                           test rax, rax	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000739	            0x7446	                            je 0x4000781	       591	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x400073b	          0x8b55fc	                mov edx, dword [rbp - 4]	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400073e	          0x4889d0	                            mov rax, rdx	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000741	        0x48c1e002	                              shl rax, 2	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000745	          0x4801d0	                            add rax, rdx	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000748	        0x48c1e004	                              shl rax, 4	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400074c	    0x480500000000	                              add rax, 0	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000752	          0x488b00	                    mov rax, qword [rax]	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000755	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000759	          0x4889d6	                            mov rsi, rdx	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400075c	          0x4889c7	                            mov rdi, rax	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400075f	      0xe800000000	                          call 0x4000764	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000764	            0x85c0	                           test eax, eax	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000766	            0x7519	                           jne 0x4000781	       592	coff-i386.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4000768	          0x8b55fc	                mov edx, dword [rbp - 4]	       593	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x400076b	          0x4889d0	                            mov rax, rdx	       593	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x400076e	        0x48c1e002	                              shl rax, 2	       593	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000772	          0x4801d0	                            add rax, rdx	       593	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000775	        0x48c1e004	                              shl rax, 4	       593	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000779	    0x480500000000	                              add rax, 0	       593	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x400077f	            0xeb0f	                           jmp 0x4000790	       593	coff-i386.c	FUNCTION_70	FOR_1	IF_1
0x4000781	        0x8345fc01	                  add dword [rbp - 4], 1	       590	coff-i386.c	FUNCTION_70	FOR_1
0x4000785	        0x837dfc14	               cmp dword [rbp - 4], 0x14	       590	coff-i386.c	FUNCTION_70	FOR_1
0x4000789	            0x7691	                           jbe 0x400071c	       590	coff-i386.c	FUNCTION_70	FOR_1
0x400078b	      0xb800000000	                              mov eax, 0	       595	coff-i386.c	FUNCTION_70
0x4000790	              0xc9	                                   leave	       596	coff-i386.c	FUNCTION_70
0x4000791	              0xc3	                                     ret	       596	coff-i386.c	FUNCTION_70
coff_swap_scnhdr_in	IF,2:CALL,10:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	169
0x4000a8f	              0x55	                                push rbp	       204	peicode.h	FUNCTION_4
0x4000a90	          0x4889e5	                            mov rbp, rsp	       204	peicode.h	FUNCTION_4
0x4000a93	              0x53	                                push rbx	       204	peicode.h	FUNCTION_4
0x4000a94	        0x4883ec38	                           sub rsp, 0x38	       204	peicode.h	FUNCTION_4
0x4000a98	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       204	peicode.h	FUNCTION_4
0x4000a9c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       204	peicode.h	FUNCTION_4
0x4000aa0	        0x488955c8	             mov qword [rbp - 0x38], rdx	       204	peicode.h	FUNCTION_4
0x4000aa4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       205	peicode.h	FUNCTION_4
0x4000aa8	        0x488945e0	             mov qword [rbp - 0x20], rax	       205	peicode.h	FUNCTION_4
0x4000aac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       206	peicode.h	FUNCTION_4
0x4000ab0	        0x488945e8	             mov qword [rbp - 0x18], rax	       206	peicode.h	FUNCTION_4
0x4000ab4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       208	peicode.h	FUNCTION_4	CALL_1
0x4000ab8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       208	peicode.h	FUNCTION_4	CALL_1
0x4000abc	          0x488b12	                    mov rdx, qword [rdx]	       208	peicode.h	FUNCTION_4	CALL_1
0x4000abf	          0x488910	                    mov qword [rax], rdx	       208	peicode.h	FUNCTION_4	CALL_1
0x4000ac2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ac6	        0x488b4008	                mov rax, qword [rax + 8]	       210	peicode.h	FUNCTION_4	CALL_2
0x4000aca	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ad1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ad5	        0x4883c20c	                            add rdx, 0xc	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ad9	          0x4889d7	                            mov rdi, rdx	       210	peicode.h	FUNCTION_4	CALL_2
0x4000adc	            0xffd0	                                call rax	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ade	          0x4889c2	                            mov rdx, rax	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ae1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ae5	        0x48895010	             mov qword [rax + 0x10], rdx	       210	peicode.h	FUNCTION_4	CALL_2
0x4000ae9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       211	peicode.h	FUNCTION_4	CALL_3
0x4000aed	        0x488b4008	                mov rax, qword [rax + 8]	       211	peicode.h	FUNCTION_4	CALL_3
0x4000af1	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       211	peicode.h	FUNCTION_4	CALL_3
0x4000af8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       211	peicode.h	FUNCTION_4	CALL_3
0x4000afc	        0x4883c208	                              add rdx, 8	       211	peicode.h	FUNCTION_4	CALL_3
0x4000b00	          0x4889d7	                            mov rdi, rdx	       211	peicode.h	FUNCTION_4	CALL_3
0x4000b03	            0xffd0	                                call rax	       211	peicode.h	FUNCTION_4	CALL_3
0x4000b05	          0x4889c2	                            mov rdx, rax	       211	peicode.h	FUNCTION_4	CALL_3
0x4000b08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	peicode.h	FUNCTION_4	CALL_3
0x4000b0c	        0x48895008	                mov qword [rax + 8], rdx	       211	peicode.h	FUNCTION_4	CALL_3
0x4000b10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b14	        0x488b4008	                mov rax, qword [rax + 8]	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b18	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b1f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b23	        0x4883c210	                           add rdx, 0x10	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b27	          0x4889d7	                            mov rdi, rdx	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b2a	            0xffd0	                                call rax	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b2c	          0x4889c2	                            mov rdx, rax	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b33	        0x48895018	             mov qword [rax + 0x18], rdx	       212	peicode.h	FUNCTION_4	CALL_4
0x4000b37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b3b	        0x488b4008	                mov rax, qword [rax + 8]	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b3f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b46	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b4a	        0x4883c214	                           add rdx, 0x14	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b4e	          0x4889d7	                            mov rdi, rdx	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b51	            0xffd0	                                call rax	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b53	          0x4889c2	                            mov rdx, rax	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b5a	        0x48895020	             mov qword [rax + 0x20], rdx	       213	peicode.h	FUNCTION_4	CALL_5
0x4000b5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b62	        0x488b4008	                mov rax, qword [rax + 8]	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b66	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b6d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b71	        0x4883c218	                           add rdx, 0x18	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b75	          0x4889d7	                            mov rdi, rdx	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b78	            0xffd0	                                call rax	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b7a	          0x4889c2	                            mov rdx, rax	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b81	        0x48895028	             mov qword [rax + 0x28], rdx	       214	peicode.h	FUNCTION_4	CALL_6
0x4000b85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       215	peicode.h	FUNCTION_4	CALL_7
0x4000b89	        0x488b4008	                mov rax, qword [rax + 8]	       215	peicode.h	FUNCTION_4	CALL_7
0x4000b8d	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       215	peicode.h	FUNCTION_4	CALL_7
0x4000b94	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       215	peicode.h	FUNCTION_4	CALL_7
0x4000b98	        0x4883c21c	                           add rdx, 0x1c	       215	peicode.h	FUNCTION_4	CALL_7
0x4000b9c	          0x4889d7	                            mov rdi, rdx	       215	peicode.h	FUNCTION_4	CALL_7
0x4000b9f	            0xffd0	                                call rax	       215	peicode.h	FUNCTION_4	CALL_7
0x4000ba1	          0x4889c2	                            mov rdx, rax	       215	peicode.h	FUNCTION_4	CALL_7
0x4000ba4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       215	peicode.h	FUNCTION_4	CALL_7
0x4000ba8	        0x48895030	             mov qword [rax + 0x30], rdx	       215	peicode.h	FUNCTION_4	CALL_7
0x4000bac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	peicode.h	FUNCTION_4
0x4000bb0	        0x488b4008	                mov rax, qword [rax + 8]	       216	peicode.h	FUNCTION_4
0x4000bb4	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       216	peicode.h	FUNCTION_4
0x4000bbb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       216	peicode.h	FUNCTION_4
0x4000bbf	        0x4883c224	                           add rdx, 0x24	       216	peicode.h	FUNCTION_4
0x4000bc3	          0x4889d7	                            mov rdi, rdx	       216	peicode.h	FUNCTION_4
0x4000bc6	            0xffd0	                                call rax	       216	peicode.h	FUNCTION_4
0x4000bc8	          0x4889c2	                            mov rdx, rax	       216	peicode.h	FUNCTION_4
0x4000bcb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	peicode.h	FUNCTION_4
0x4000bcf	        0x48895048	             mov qword [rax + 0x48], rdx	       216	peicode.h	FUNCTION_4
0x4000bd3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       222	peicode.h	FUNCTION_4
0x4000bd7	        0x488b4008	                mov rax, qword [rax + 8]	       222	peicode.h	FUNCTION_4
0x4000bdb	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       222	peicode.h	FUNCTION_4
0x4000be2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       222	peicode.h	FUNCTION_4
0x4000be6	        0x4883c222	                           add rdx, 0x22	       222	peicode.h	FUNCTION_4
0x4000bea	          0x4889d7	                            mov rdi, rdx	       222	peicode.h	FUNCTION_4
0x4000bed	            0xffd0	                                call rax	       222	peicode.h	FUNCTION_4
0x4000bef	          0x4889c3	                            mov rbx, rax	       222	peicode.h	FUNCTION_4
0x4000bf2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       223	peicode.h	FUNCTION_4
0x4000bf6	        0x488b4008	                mov rax, qword [rax + 8]	       223	peicode.h	FUNCTION_4
0x4000bfa	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       223	peicode.h	FUNCTION_4
0x4000c01	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       223	peicode.h	FUNCTION_4
0x4000c05	        0x4883c220	                           add rdx, 0x20	       223	peicode.h	FUNCTION_4
0x4000c09	          0x4889d7	                            mov rdi, rdx	       223	peicode.h	FUNCTION_4
0x4000c0c	            0xffd0	                                call rax	       223	peicode.h	FUNCTION_4
0x4000c0e	        0x48c1e010	                           shl rax, 0x10	       223	peicode.h	FUNCTION_4
0x4000c12	        0x488d1403	                    lea rdx, [rbx + rax]	       223	peicode.h	FUNCTION_4
0x4000c16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	peicode.h	FUNCTION_4
0x4000c1a	        0x48895040	             mov qword [rax + 0x40], rdx	       222	peicode.h	FUNCTION_4
0x4000c1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       224	peicode.h	FUNCTION_4
0x4000c22	    0x48c740380000	               mov qword [rax + 0x38], 0	       224	peicode.h	FUNCTION_4
0x4000c2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	peicode.h	FUNCTION_4	IF_1
0x4000c2e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       230	peicode.h	FUNCTION_4	IF_1
0x4000c32	          0x4885c0	                           test rax, rax	       230	peicode.h	FUNCTION_4	IF_1
0x4000c35	            0x7437	                            je 0x4000c6e	       230	peicode.h	FUNCTION_4	IF_1
0x4000c37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c3b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c43	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c4a	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c51	          0x4801c2	                            add rdx, rax	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c58	        0x48895010	             mov qword [rax + 0x10], rdx	       232	peicode.h	FUNCTION_4	IF_1	CALL_8
0x4000c5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       235	peicode.h	FUNCTION_4	IF_1
0x4000c60	        0x488b4010	            mov rax, qword [rax + 0x10] 	       235	peicode.h	FUNCTION_4	IF_1
0x4000c64	            0x89c2	                            mov edx, eax	       235	peicode.h	FUNCTION_4	IF_1
0x4000c66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       235	peicode.h	FUNCTION_4	IF_1
0x4000c6a	        0x48895010	             mov qword [rax + 0x10], rdx	       235	peicode.h	FUNCTION_4	IF_1
0x4000c6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       244	peicode.h	FUNCTION_4	IF_2
0x4000c72	        0x488b4008	                mov rax, qword [rax + 8]	       244	peicode.h	FUNCTION_4	IF_2
0x4000c76	          0x4885c0	                           test rax, rax	       244	peicode.h	FUNCTION_4	IF_2
0x4000c79	     0xf8486000000	                            je 0x4000d05	       244	peicode.h	FUNCTION_4	IF_2
0x4000c7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       245	peicode.h	FUNCTION_4	IF_2
0x4000c83	        0x488b4048	            mov rax, qword [rax + 0x48] 	       245	peicode.h	FUNCTION_4	IF_2
0x4000c87	      0x2580000000	                           and eax, 0x80	       245	peicode.h	FUNCTION_4	IF_2
0x4000c8c	          0x4885c0	                           test rax, rax	       245	peicode.h	FUNCTION_4	IF_2
0x4000c8f	            0x742e	                            je 0x4000cbf	       245	peicode.h	FUNCTION_4	IF_2
0x4000c91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000c95	        0x488b4008	                mov rax, qword [rax + 8]	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000c99	          0x488b00	                    mov rax, qword [rax]	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000c9c	      0xba04000000	                              mov edx, 4	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000ca1	      0xbe00000000	                              mov esi, 0	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000ca6	          0x4889c7	                            mov rdi, rax	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000ca9	      0xe800000000	                          call 0x4000cae	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000cae	            0x85c0	                           test eax, eax	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000cb0	            0x7543	                           jne 0x4000cf5	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000cb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000cb6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000cba	          0x4885c0	                           test rax, rax	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000cbd	            0x7436	                            je 0x4000cf5	       246	peicode.h	FUNCTION_4	IF_2	CALL_9
0x4000cbf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cc3	        0x488b4008	                mov rax, qword [rax + 8]	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cc7	          0x488b00	                    mov rax, qword [rax]	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cca	      0xba04000000	                              mov edx, 4	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000ccf	      0xbe00000000	                              mov esi, 0	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cd4	          0x4889c7	                            mov rdi, rax	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cd7	      0xe800000000	                          call 0x4000cdc	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cdc	            0x85c0	                           test eax, eax	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cde	            0x7525	                           jne 0x4000d05	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000ce0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000ce4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000ce8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cec	        0x488b4008	                mov rax, qword [rax + 8]	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cf0	          0x4839c2	                            cmp rdx, rax	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cf3	            0x7610	                           jbe 0x4000d05	       247	peicode.h	FUNCTION_4	IF_2	CALL_10
0x4000cf5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	peicode.h	FUNCTION_4	IF_2
0x4000cf9	        0x488b5008	                mov rdx, qword [rax + 8]	       252	peicode.h	FUNCTION_4	IF_2
0x4000cfd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	peicode.h	FUNCTION_4	IF_2
0x4000d01	        0x48895018	             mov qword [rax + 0x18], rdx	       252	peicode.h	FUNCTION_4	IF_2
0x4000d05	              0x90	                                     nop	       254	peicode.h	FUNCTION_4
0x4000d06	        0x4883c438	                           add rsp, 0x38	       254	peicode.h	FUNCTION_4
0x4000d0a	              0x5b	                                 pop rbx	       254	peicode.h	FUNCTION_4
0x4000d0b	              0x5d	                                 pop rbp	       254	peicode.h	FUNCTION_4
0x4000d0c	              0xc3	                                     ret	       254	peicode.h	FUNCTION_4
coff_set_arch_mach_hook	IF,6:CALL,19:ELSE,3:SWITCH,6:DO,0:FOR,0:functions,0:WHILE,0	35
0x4004255	              0x55	                                push rbp	      2088	coffcode.h	FUNCTION_34
0x4004256	          0x4889e5	                            mov rbp, rsp	      2088	coffcode.h	FUNCTION_34
0x4004259	        0x4883ec30	                           sub rsp, 0x30	      2088	coffcode.h	FUNCTION_34
0x400425d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2088	coffcode.h	FUNCTION_34
0x4004261	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2088	coffcode.h	FUNCTION_34
0x4004265	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2091	coffcode.h	FUNCTION_34
0x4004269	        0x488945f0	             mov qword [rbp - 0x10], rax	      2091	coffcode.h	FUNCTION_34
0x400426d	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2094	coffcode.h	FUNCTION_34
0x4004275	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x4004279	     0xfb780d00800	          movzx eax, word [rax + 0x8d0] 	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x4004280	           0xfb7c0	                           movzx eax, ax	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x4004283	      0x3d4c010000	                          cmp eax, 0x14c	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x4004288	            0x741e	                            je 0x40042a8	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x400428a	      0x3d4c010000	                          cmp eax, 0x14c	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x400428f	            0x7f09	                            jg 0x400429a	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x4004291	      0x3d0d010000	                          cmp eax, 0x10d	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x4004296	            0x7410	                            je 0x40042a8	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x4004298	            0xeb17	                           jmp 0x40042b1	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x400429a	      0x3d54010000	                          cmp eax, 0x154	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x400429f	            0x7407	                            je 0x40042a8	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x40042a1	      0x3d75010000	                          cmp eax, 0x175	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x40042a6	            0x7509	                           jne 0x40042b1	      2095	coffcode.h	FUNCTION_34	SWITCH_1
0x40042a8	    0xc745ec080000	               mov dword [rbp - 0x14], 8	      2107	coffcode.h	FUNCTION_34	SWITCH_1
0x40042af	            0xeb08	                           jmp 0x40042b9	      2108	coffcode.h	FUNCTION_34	SWITCH_1
0x40042b1	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      2335	coffcode.h	FUNCTION_34	SWITCH_1
0x40042b8	              0x90	                                     nop	      2336	coffcode.h	FUNCTION_34	SWITCH_1
0x40042b9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2339	coffcode.h	FUNCTION_34	CALL_19
0x40042bd	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2339	coffcode.h	FUNCTION_34	CALL_19
0x40042c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2339	coffcode.h	FUNCTION_34	CALL_19
0x40042c4	            0x89ce	                            mov esi, ecx	      2339	coffcode.h	FUNCTION_34	CALL_19
0x40042c6	          0x4889c7	                            mov rdi, rax	      2339	coffcode.h	FUNCTION_34	CALL_19
0x40042c9	      0xe800000000	                          call 0x40042ce	      2339	coffcode.h	FUNCTION_34	CALL_19
0x40042ce	      0xb801000000	                              mov eax, 1	      2340	coffcode.h	FUNCTION_34
0x40042d3	              0xc9	                                   leave	      2341	coffcode.h	FUNCTION_34
0x40042d4	              0xc3	                                     ret	      2341	coffcode.h	FUNCTION_34
coff_bad_format_hook	IF,1:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	27
0x4003be7	              0x55	                                push rbp	      1647	coffcode.h	FUNCTION_25
0x4003be8	          0x4889e5	                            mov rbp, rsp	      1647	coffcode.h	FUNCTION_25
0x4003beb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1647	coffcode.h	FUNCTION_25
0x4003bef	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1647	coffcode.h	FUNCTION_25
0x4003bf3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1648	coffcode.h	FUNCTION_25
0x4003bf7	        0x488945f8	                mov qword [rbp - 8], rax	      1648	coffcode.h	FUNCTION_25
0x4003bfb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003bff	     0xfb780d00800	          movzx eax, word [rax + 0x8d0] 	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c06	        0x663d4c01	                           cmp ax, 0x14c	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c0a	            0x743a	                            je 0x4003c46	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c10	     0xfb780d00800	          movzx eax, word [rax + 0x8d0] 	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c17	        0x663d7501	                           cmp ax, 0x175	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c1b	            0x7429	                            je 0x4003c46	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c1d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c21	     0xfb780d00800	          movzx eax, word [rax + 0x8d0] 	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c28	        0x663d5401	                           cmp ax, 0x154	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c2c	            0x7418	                            je 0x4003c46	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c32	     0xfb780d00800	          movzx eax, word [rax + 0x8d0] 	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c39	        0x663d0d01	                           cmp ax, 0x10d	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c3d	            0x7407	                            je 0x4003c46	      1650	coffcode.h	FUNCTION_25	IF_1
0x4003c3f	      0xb800000000	                              mov eax, 0	      1651	coffcode.h	FUNCTION_25	IF_1
0x4003c44	            0xeb05	                           jmp 0x4003c4b	      1651	coffcode.h	FUNCTION_25	IF_1
0x4003c46	      0xb801000000	                              mov eax, 1	      1653	coffcode.h	FUNCTION_25
0x4003c4b	              0x5d	                                 pop rbp	      1654	coffcode.h	FUNCTION_25
0x4003c4c	              0xc3	                                     ret	      1654	coffcode.h	FUNCTION_25
pe_bfd_object_p	IF,16:CALL,26:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	229
0x4002bf9	              0x55	                                push rbp	      1382	peicode.h	FUNCTION_17
0x4002bfa	          0x4889e5	                            mov rbp, rsp	      1382	peicode.h	FUNCTION_17
0x4002bfd	    0x4881ec700c00	                          sub rsp, 0xc70	      1382	peicode.h	FUNCTION_17
0x4002c04	    0x4889bd98f3ff	            mov qword [rbp - 0xc68], rdi	      1382	peicode.h	FUNCTION_17
0x4002c0b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1382	peicode.h	FUNCTION_17
0x4002c14	        0x488945f8	                mov qword [rbp - 8], rax	      1382	peicode.h	FUNCTION_17
0x4002c18	            0x31c0	                            xor eax, eax	      1382	peicode.h	FUNCTION_17
0x4002c1a	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1394	peicode.h	FUNCTION_17	IF_1	CALL_1
0x4002c21	      0xba00000000	                              mov edx, 0	      1394	peicode.h	FUNCTION_17	IF_1	CALL_1
0x4002c26	      0xbe00000000	                              mov esi, 0	      1394	peicode.h	FUNCTION_17	IF_1	CALL_1
0x4002c2b	          0x4889c7	                            mov rdi, rax	      1394	peicode.h	FUNCTION_17	IF_1	CALL_1
0x4002c2e	      0xe800000000	                          call 0x4002c33	      1394	peicode.h	FUNCTION_17	IF_1	CALL_1
0x4002c33	            0x85c0	                           test eax, eax	      1394	peicode.h	FUNCTION_17	IF_1	CALL_1
0x4002c35	            0x751e	                           jne 0x4002c55	      1394	peicode.h	FUNCTION_17	IF_1	CALL_1
0x4002c37	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1395	peicode.h	FUNCTION_17	IF_1	CALL_2
0x4002c3e	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1395	peicode.h	FUNCTION_17	IF_1	CALL_2
0x4002c42	      0xbe06000000	                              mov esi, 6	      1395	peicode.h	FUNCTION_17	IF_1	CALL_2
0x4002c47	          0x4889c7	                            mov rdi, rax	      1395	peicode.h	FUNCTION_17	IF_1	CALL_2
0x4002c4a	      0xe800000000	                          call 0x4002c4f	      1395	peicode.h	FUNCTION_17	IF_1	CALL_2
0x4002c4f	        0x4883f806	                              cmp rax, 6	      1395	peicode.h	FUNCTION_17	IF_1	CALL_2
0x4002c53	            0x741e	                            je 0x4002c73	      1395	peicode.h	FUNCTION_17	IF_1	CALL_2
0x4002c55	      0xe800000000	                          call 0x4002c5a	      1397	peicode.h	FUNCTION_17	IF_1	IF_2	CALL_3
0x4002c5a	          0x83f801	                              cmp eax, 1	      1397	peicode.h	FUNCTION_17	IF_1	IF_2	CALL_3
0x4002c5d	            0x740a	                            je 0x4002c69	      1397	peicode.h	FUNCTION_17	IF_1	IF_2	CALL_3
0x4002c5f	      0xbf03000000	                              mov edi, 3	      1398	peicode.h	FUNCTION_17	IF_1	CALL_4
0x4002c64	      0xe800000000	                          call 0x4002c69	      1398	peicode.h	FUNCTION_17	IF_1	CALL_4
0x4002c69	      0xb800000000	                              mov eax, 0	      1399	peicode.h	FUNCTION_17	IF_1
0x4002c6e	      0xe9aa030000	                           jmp 0x400301d	      1399	peicode.h	FUNCTION_17	IF_1
0x4002c73	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c7a	        0x488b4008	                mov rax, qword [rax + 8]	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c7e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c85	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c89	          0x4889d7	                            mov rdi, rdx	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c8c	            0xffd0	                                call rax	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c8e	          0x4889c2	                            mov rdx, rax	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c91	      0xb80000ffff	                     mov eax, 0xffff0000	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c96	          0x4839c2	                            cmp rdx, rax	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c99	            0x7538	                           jne 0x4002cd3	      1403	peicode.h	FUNCTION_17	IF_3
0x4002c9b	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1404	peicode.h	FUNCTION_17	IF_3
0x4002ca2	        0x488b4008	                mov rax, qword [rax + 8]	      1404	peicode.h	FUNCTION_17	IF_3
0x4002ca6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1404	peicode.h	FUNCTION_17	IF_3
0x4002cad	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1404	peicode.h	FUNCTION_17	IF_3
0x4002cb1	        0x4883c004	                              add rax, 4	      1404	peicode.h	FUNCTION_17	IF_3
0x4002cb5	          0x4889c7	                            mov rdi, rax	      1404	peicode.h	FUNCTION_17	IF_3
0x4002cb8	            0xffd2	                                call rdx	      1404	peicode.h	FUNCTION_17	IF_3
0x4002cba	          0x4885c0	                           test rax, rax	      1404	peicode.h	FUNCTION_17	IF_3
0x4002cbd	            0x7514	                           jne 0x4002cd3	      1404	peicode.h	FUNCTION_17	IF_3
0x4002cbf	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1405	peicode.h	FUNCTION_17	CALL_5
0x4002cc6	          0x4889c7	                            mov rdi, rax	      1405	peicode.h	FUNCTION_17	CALL_5
0x4002cc9	      0xe8cff7ffff	                call sym.pe_ILF_object_p	      1405	peicode.h	FUNCTION_17	CALL_5
0x4002cce	      0xe94a030000	                           jmp 0x400301d	      1405	peicode.h	FUNCTION_17	CALL_5
0x4002cd3	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1407	peicode.h	FUNCTION_17	IF_4	CALL_6
0x4002cda	      0xba00000000	                              mov edx, 0	      1407	peicode.h	FUNCTION_17	IF_4	CALL_6
0x4002cdf	      0xbe00000000	                              mov esi, 0	      1407	peicode.h	FUNCTION_17	IF_4	CALL_6
0x4002ce4	          0x4889c7	                            mov rdi, rax	      1407	peicode.h	FUNCTION_17	IF_4	CALL_6
0x4002ce7	      0xe800000000	                          call 0x4002cec	      1407	peicode.h	FUNCTION_17	IF_4	CALL_6
0x4002cec	            0x85c0	                           test eax, eax	      1407	peicode.h	FUNCTION_17	IF_4	CALL_6
0x4002cee	            0x7523	                           jne 0x4002d13	      1407	peicode.h	FUNCTION_17	IF_4	CALL_6
0x4002cf0	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1408	peicode.h	FUNCTION_17	IF_4	CALL_7
0x4002cf7	    0x488d85f0f3ff	                  lea rax, [rbp - 0xc10]	      1408	peicode.h	FUNCTION_17	IF_4	CALL_7
0x4002cfe	      0xbe80000000	                           mov esi, 0x80	      1408	peicode.h	FUNCTION_17	IF_4	CALL_7
0x4002d03	          0x4889c7	                            mov rdi, rax	      1408	peicode.h	FUNCTION_17	IF_4	CALL_7
0x4002d06	      0xe800000000	                          call 0x4002d0b	      1408	peicode.h	FUNCTION_17	IF_4	CALL_7
0x4002d0b	    0x483d80000000	                           cmp rax, 0x80	      1408	peicode.h	FUNCTION_17	IF_4	CALL_7
0x4002d11	            0x741e	                            je 0x4002d31	      1408	peicode.h	FUNCTION_17	IF_4	CALL_7
0x4002d13	      0xe800000000	                          call 0x4002d18	      1411	peicode.h	FUNCTION_17	IF_4	IF_5	CALL_8
0x4002d18	          0x83f801	                              cmp eax, 1	      1411	peicode.h	FUNCTION_17	IF_4	IF_5	CALL_8
0x4002d1b	            0x740a	                            je 0x4002d27	      1411	peicode.h	FUNCTION_17	IF_4	IF_5	CALL_8
0x4002d1d	      0xbf03000000	                              mov edi, 3	      1412	peicode.h	FUNCTION_17	IF_4	CALL_9
0x4002d22	      0xe800000000	                          call 0x4002d27	      1412	peicode.h	FUNCTION_17	IF_4	CALL_9
0x4002d27	      0xb800000000	                              mov eax, 0	      1413	peicode.h	FUNCTION_17	IF_4
0x4002d2c	      0xe9ec020000	                           jmp 0x400301d	      1413	peicode.h	FUNCTION_17	IF_4
0x4002d31	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d38	        0x488b4008	                mov rax, qword [rax + 8]	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d3c	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d43	    0x488d95f0f3ff	                  lea rdx, [rbp - 0xc10]	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d4a	          0x4889d7	                            mov rdi, rdx	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d4d	            0xffd0	                                call rax	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d4f	    0x483d4d5a0000	                         cmp rax, 0x5a4d	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d55	            0x7414	                            je 0x4002d6b	      1426	peicode.h	FUNCTION_17	IF_6
0x4002d57	      0xbf03000000	                              mov edi, 3	      1428	peicode.h	FUNCTION_17	IF_6	CALL_10
0x4002d5c	      0xe800000000	                          call 0x4002d61	      1428	peicode.h	FUNCTION_17	IF_6	CALL_10
0x4002d61	      0xb800000000	                              mov eax, 0	      1429	peicode.h	FUNCTION_17	IF_6
0x4002d66	      0xe9b2020000	                           jmp 0x400301d	      1429	peicode.h	FUNCTION_17	IF_6
0x4002d6b	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1432	peicode.h	FUNCTION_17
0x4002d72	        0x488b4008	                mov rax, qword [rax + 8]	      1432	peicode.h	FUNCTION_17
0x4002d76	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1432	peicode.h	FUNCTION_17
0x4002d7d	    0x488d95f0f3ff	                  lea rdx, [rbp - 0xc10]	      1432	peicode.h	FUNCTION_17
0x4002d84	        0x4883c23c	                           add rdx, 0x3c	      1432	peicode.h	FUNCTION_17
0x4002d88	          0x4889d7	                            mov rdi, rdx	      1432	peicode.h	FUNCTION_17
0x4002d8b	            0xffd0	                                call rax	      1432	peicode.h	FUNCTION_17
0x4002d8d	    0x488985b0f3ff	            mov qword [rbp - 0xc50], rax	      1432	peicode.h	FUNCTION_17
0x4002d94	    0x488b8db0f3ff	            mov rcx, qword [rbp - 0xc50]	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002d9b	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002da2	      0xba00000000	                              mov edx, 0	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002da7	          0x4889ce	                            mov rsi, rcx	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002daa	          0x4889c7	                            mov rdi, rax	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002dad	      0xe800000000	                          call 0x4002db2	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002db2	            0x85c0	                           test eax, eax	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002db4	            0x7521	                           jne 0x4002dd7	      1433	peicode.h	FUNCTION_17	IF_7	CALL_11
0x4002db6	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1434	peicode.h	FUNCTION_17	IF_7	CALL_12
0x4002dbd	    0x488d85d0f3ff	                  lea rax, [rbp - 0xc30]	      1434	peicode.h	FUNCTION_17	IF_7	CALL_12
0x4002dc4	      0xbe18000000	                           mov esi, 0x18	      1434	peicode.h	FUNCTION_17	IF_7	CALL_12
0x4002dc9	          0x4889c7	                            mov rdi, rax	      1434	peicode.h	FUNCTION_17	IF_7	CALL_12
0x4002dcc	      0xe800000000	                          call 0x4002dd1	      1434	peicode.h	FUNCTION_17	IF_7	CALL_12
0x4002dd1	        0x4883f818	                           cmp rax, 0x18	      1434	peicode.h	FUNCTION_17	IF_7	CALL_12
0x4002dd5	            0x741e	                            je 0x4002df5	      1434	peicode.h	FUNCTION_17	IF_7	CALL_12
0x4002dd7	      0xe800000000	                          call 0x4002ddc	      1437	peicode.h	FUNCTION_17	IF_7	IF_8	CALL_13
0x4002ddc	          0x83f801	                              cmp eax, 1	      1437	peicode.h	FUNCTION_17	IF_7	IF_8	CALL_13
0x4002ddf	            0x740a	                            je 0x4002deb	      1437	peicode.h	FUNCTION_17	IF_7	IF_8	CALL_13
0x4002de1	      0xbf03000000	                              mov edi, 3	      1438	peicode.h	FUNCTION_17	IF_7	CALL_14
0x4002de6	      0xe800000000	                          call 0x4002deb	      1438	peicode.h	FUNCTION_17	IF_7	CALL_14
0x4002deb	      0xb800000000	                              mov eax, 0	      1439	peicode.h	FUNCTION_17	IF_7
0x4002df0	      0xe928020000	                           jmp 0x400301d	      1439	peicode.h	FUNCTION_17	IF_7
0x4002df5	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1442	peicode.h	FUNCTION_17	IF_9
0x4002dfc	        0x488b4008	                mov rax, qword [rax + 8]	      1442	peicode.h	FUNCTION_17	IF_9
0x4002e00	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1442	peicode.h	FUNCTION_17	IF_9
0x4002e07	    0x488d95d0f3ff	                  lea rdx, [rbp - 0xc30]	      1442	peicode.h	FUNCTION_17	IF_9
0x4002e0e	          0x4889d7	                            mov rdi, rdx	      1442	peicode.h	FUNCTION_17	IF_9
0x4002e11	            0xffd0	                                call rax	      1442	peicode.h	FUNCTION_17	IF_9
0x4002e13	    0x483d50450000	                         cmp rax, 0x4550	      1442	peicode.h	FUNCTION_17	IF_9
0x4002e19	            0x7414	                            je 0x4002e2f	      1442	peicode.h	FUNCTION_17	IF_9
0x4002e1b	      0xbf03000000	                              mov edi, 3	      1444	peicode.h	FUNCTION_17	IF_9	CALL_15
0x4002e20	      0xe800000000	                          call 0x4002e25	      1444	peicode.h	FUNCTION_17	IF_9	CALL_15
0x4002e25	      0xb800000000	                              mov eax, 0	      1445	peicode.h	FUNCTION_17	IF_9
0x4002e2a	      0xe9ee010000	                           jmp 0x400301d	      1445	peicode.h	FUNCTION_17	IF_9
0x4002e2f	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e36	        0x488b4008	                mov rax, qword [rax + 8]	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e3a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e41	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e48	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e4f	    0x488db5d0f3ff	                  lea rsi, [rbp - 0xc30]	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e56	    0x488b8d98f3ff	            mov rcx, qword [rbp - 0xc68]	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e5d	          0x4889cf	                            mov rdi, rcx	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e60	            0xffd0	                                call rax	      1450	peicode.h	FUNCTION_17	CALL_16
0x4002e62	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e69	        0x488b4008	                mov rax, qword [rax + 8]	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e6d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e74	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e7b	    0x488d8df0f6ff	                  lea rcx, [rbp - 0x910]	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e82	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e89	          0x4889ce	                            mov rsi, rcx	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e8c	          0x4889d7	                            mov rdi, rdx	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e8f	            0xffd0	                                call rax	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e91	            0x85c0	                           test eax, eax	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e93	            0x7420	                            je 0x4002eb5	      1452	peicode.h	FUNCTION_17	IF_10	CALL_17
0x4002e95	         0xfb745e0	            movzx eax, word [rbp - 0x20]	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002e99	           0xfb7d0	                           movzx edx, ax	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002e9c	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002ea3	        0x488b4008	                mov rax, qword [rax + 8]	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002ea7	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002eae	          0x8b4054	            mov eax, dword [rax + 0x54] 	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002eb1	            0x39c2	                            cmp edx, eax	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002eb3	            0x7614	                           jbe 0x4002ec9	      1453	peicode.h	FUNCTION_17	IF_10	CALL_18
0x4002eb5	      0xbf03000000	                              mov edi, 3	      1455	peicode.h	FUNCTION_17	IF_10	CALL_19
0x4002eba	      0xe800000000	                          call 0x4002ebf	      1455	peicode.h	FUNCTION_17	IF_10	CALL_19
0x4002ebf	      0xb800000000	                              mov eax, 0	      1456	peicode.h	FUNCTION_17	IF_10
0x4002ec4	      0xe954010000	                           jmp 0x400301d	      1456	peicode.h	FUNCTION_17	IF_10
0x4002ec9	         0xfb745e0	            movzx eax, word [rbp - 0x20]	      1460	peicode.h	FUNCTION_17
0x4002ecd	           0xfb7c0	                           movzx eax, ax	      1460	peicode.h	FUNCTION_17
0x4002ed0	    0x488985b8f3ff	            mov qword [rbp - 0xc48], rax	      1460	peicode.h	FUNCTION_17
0x4002ed7	    0x4883bdb8f3ff	              cmp qword [rbp - 0xc48], 0	      1462	peicode.h	FUNCTION_17	IF_11
0x4002edf	     0xf84e0000000	                            je 0x4002fc5	      1462	peicode.h	FUNCTION_17	IF_11
0x4002ee5	    0x488b85b8f3ff	            mov rax, qword [rbp - 0xc48]	      1464	peicode.h	FUNCTION_17	IF_11
0x4002eec	    0x488985a8f3ff	            mov qword [rbp - 0xc58], rax	      1464	peicode.h	FUNCTION_17	IF_11
0x4002ef3	    0x4881bda8f3ff	          cmp qword [rbp - 0xc58], 0xdf 	      1468	peicode.h	FUNCTION_17	IF_11	IF_12
0x4002efe	            0x770b	                            ja 0x4002f0b	      1468	peicode.h	FUNCTION_17	IF_11	IF_12
0x4002f00	    0x48c785a8f3ff	          mov qword [rbp - 0xc58], 0xe0 	      1469	peicode.h	FUNCTION_17	IF_11	IF_12
0x4002f0b	    0x488b95a8f3ff	            mov rdx, qword [rbp - 0xc58]	      1471	peicode.h	FUNCTION_17	IF_11	CALL_20
0x4002f12	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1471	peicode.h	FUNCTION_17	IF_11	CALL_20
0x4002f19	          0x4889d6	                            mov rsi, rdx	      1471	peicode.h	FUNCTION_17	IF_11	CALL_20
0x4002f1c	          0x4889c7	                            mov rdi, rax	      1471	peicode.h	FUNCTION_17	IF_11	CALL_20
0x4002f1f	      0xe800000000	                          call 0x4002f24	      1471	peicode.h	FUNCTION_17	IF_11	CALL_20
0x4002f24	    0x488985c0f3ff	            mov qword [rbp - 0xc40], rax	      1471	peicode.h	FUNCTION_17	IF_11	CALL_20
0x4002f2b	    0x4883bdc0f3ff	              cmp qword [rbp - 0xc40], 0	      1472	peicode.h	FUNCTION_17	IF_11	IF_13
0x4002f33	            0x750a	                           jne 0x4002f3f	      1472	peicode.h	FUNCTION_17	IF_11	IF_13
0x4002f35	      0xb800000000	                              mov eax, 0	      1473	peicode.h	FUNCTION_17	IF_11	IF_13
0x4002f3a	      0xe9de000000	                           jmp 0x400301d	      1473	peicode.h	FUNCTION_17	IF_11	IF_13
0x4002f3f	    0x488b8db8f3ff	            mov rcx, qword [rbp - 0xc48]	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f46	    0x488b9598f3ff	            mov rdx, qword [rbp - 0xc68]	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f4d	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f54	          0x4889ce	                            mov rsi, rcx	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f57	          0x4889c7	                            mov rdi, rax	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f5a	      0xe800000000	                          call 0x4002f5f	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f5f	          0x4889c2	                            mov rdx, rax	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f62	    0x488b85b8f3ff	            mov rax, qword [rbp - 0xc48]	      1475	peicode.h	FUNCTION_17	IF_11	IF_14
0x4002f69	          0x4839c2	                            cmp rdx, rax	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f6c	            0x740a	                            je 0x4002f78	      1474	peicode.h	FUNCTION_17	IF_11	IF_14	CALL_21
0x4002f6e	      0xb800000000	                              mov eax, 0	      1476	peicode.h	FUNCTION_17	IF_11	IF_14
0x4002f73	      0xe9a5000000	                           jmp 0x400301d	      1476	peicode.h	FUNCTION_17	IF_11	IF_14
0x4002f78	      0xbf00000000	                              mov edi, 0	      1478	peicode.h	FUNCTION_17	IF_11	CALL_22
0x4002f7d	      0xe800000000	                          call 0x4002f82	      1478	peicode.h	FUNCTION_17	IF_11	CALL_22
0x4002f82	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002f89	        0x488b4008	                mov rax, qword [rax + 8]	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002f8d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002f94	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002f9b	    0x488d9570f4ff	                  lea rdx, [rbp - 0xb90]	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002fa2	    0x488bb5c0f3ff	            mov rsi, qword [rbp - 0xc40]	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002fa9	    0x488b8d98f3ff	            mov rcx, qword [rbp - 0xc68]	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002fb0	          0x4889cf	                            mov rdi, rcx	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002fb3	            0xffd0	                                call rax	      1479	peicode.h	FUNCTION_17	IF_11	CALL_23
0x4002fb5	      0xe800000000	                          call 0x4002fba	      1480	peicode.h	FUNCTION_17	IF_11	IF_15	CALL_24
0x4002fba	            0x85c0	                           test eax, eax	      1480	peicode.h	FUNCTION_17	IF_11	IF_15	CALL_24
0x4002fbc	            0x7407	                            je 0x4002fc5	      1480	peicode.h	FUNCTION_17	IF_11	IF_15	CALL_24
0x4002fbe	      0xb800000000	                              mov eax, 0	      1481	peicode.h	FUNCTION_17	IF_11	IF_15
0x4002fc3	            0xeb58	                           jmp 0x400301d	      1481	peicode.h	FUNCTION_17	IF_11	IF_15
0x4002fc5	    0x4883bdb8f3ff	              cmp qword [rbp - 0xc48], 0	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fcd	            0x7409	                            je 0x4002fd8	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fcf	    0x488d8570f4ff	                  lea rax, [rbp - 0xb90]	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fd6	            0xeb05	                           jmp 0x4002fdd	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fd8	      0xb800000000	                              mov eax, 0	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fdd	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fe0	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fe7	    0x488bbd98f3ff	            mov rdi, qword [rbp - 0xc68]	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002fee	          0x4889c1	                            mov rcx, rax	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002ff1	      0xe800000000	                          call 0x4002ff6	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002ff6	    0x488985c8f3ff	            mov qword [rbp - 0xc38], rax	      1485	peicode.h	FUNCTION_17	CALL_25
0x4002ffd	    0x4883bdc8f3ff	              cmp qword [rbp - 0xc38], 0	      1491	peicode.h	FUNCTION_17	IF_16
0x4003005	            0x740f	                            je 0x4003016	      1491	peicode.h	FUNCTION_17	IF_16
0x4003007	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      1494	peicode.h	FUNCTION_17	IF_16	CALL_26
0x400300e	          0x4889c7	                            mov rdi, rax	      1494	peicode.h	FUNCTION_17	IF_16	CALL_26
0x4003011	      0xe856f8ffff	            call sym.pe_bfd_read_buildid	      1494	peicode.h	FUNCTION_17	IF_16	CALL_26
0x4003016	    0x488b85c8f3ff	            mov rax, qword [rbp - 0xc38]	      1497	peicode.h	FUNCTION_17
0x400301d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1498	peicode.h	FUNCTION_17
0x4003021	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1498	peicode.h	FUNCTION_17
0x400302a	            0x7405	                            je 0x4003031	      1498	peicode.h	FUNCTION_17
0x400302c	      0xe800000000	                          call 0x4003031	      1498	peicode.h	FUNCTION_17
0x4003031	              0xc9	                                   leave	      1498	peicode.h	FUNCTION_17
0x4003032	              0xc3	                                     ret	      1498	peicode.h	FUNCTION_17
coff_pe_i386_relocate_section	IF,1:CALL,2:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	31
0x40003ce	              0x55	                                push rbp	       424	coff-i386.c	FUNCTION_67
0x40003cf	          0x4889e5	                            mov rbp, rsp	       424	coff-i386.c	FUNCTION_67
0x40003d2	        0x4883ec30	                           sub rsp, 0x30	       424	coff-i386.c	FUNCTION_67
0x40003d6	        0x48897df8	                mov qword [rbp - 8], rdi	       424	coff-i386.c	FUNCTION_67
0x40003da	        0x488975f0	             mov qword [rbp - 0x10], rsi	       424	coff-i386.c	FUNCTION_67
0x40003de	        0x488955e8	             mov qword [rbp - 0x18], rdx	       424	coff-i386.c	FUNCTION_67
0x40003e2	        0x48894de0	             mov qword [rbp - 0x20], rcx	       424	coff-i386.c	FUNCTION_67
0x40003e6	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       424	coff-i386.c	FUNCTION_67
0x40003ea	        0x4c894dd0	              mov qword [rbp - 0x30], r9	       424	coff-i386.c	FUNCTION_67
0x40003ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       425	coff-i386.c	FUNCTION_67	IF_1	CALL_1
0x40003f2	           0xfb600	                   movzx eax, byte [rax]	       425	coff-i386.c	FUNCTION_67	IF_1	CALL_1
0x40003f5	          0x83e003	                              and eax, 3	       425	coff-i386.c	FUNCTION_67	IF_1	CALL_1
0x40003f8	            0x3c02	                               cmp al, 2	       425	coff-i386.c	FUNCTION_67	IF_1	CALL_1
0x40003fa	            0x7507	                           jne 0x4000403	       425	coff-i386.c	FUNCTION_67	IF_1	CALL_1
0x40003fc	      0xb801000000	                              mov eax, 1	       426	coff-i386.c	FUNCTION_67	IF_1
0x4000401	            0xeb30	                           jmp 0x4000433	       426	coff-i386.c	FUNCTION_67	IF_1
0x4000403	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x4000407	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x400040b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x400040f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x4000413	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x4000417	        0x488b45f8	                mov rax, qword [rbp - 8]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x400041b	          0xff7518	                 push qword [rbp + 0x18]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x400041e	          0xff7510	                 push qword [rbp + 0x10]	       428	coff-i386.c	FUNCTION_67	CALL_2
0x4000421	          0x4d89c1	                              mov r9, r8	       428	coff-i386.c	FUNCTION_67	CALL_2
0x4000424	          0x4989f8	                             mov r8, rdi	       428	coff-i386.c	FUNCTION_67	CALL_2
0x4000427	          0x4889c7	                            mov rdi, rax	       428	coff-i386.c	FUNCTION_67	CALL_2
0x400042a	      0xe800000000	                          call 0x400042f	       428	coff-i386.c	FUNCTION_67	CALL_2
0x400042f	        0x4883c410	                           add rsp, 0x10	       428	coff-i386.c	FUNCTION_67	CALL_2
0x4000433	              0xc9	                                   leave	       431	coff-i386.c	FUNCTION_67
0x4000434	              0xc3	                                     ret	       431	coff-i386.c	FUNCTION_67
coff_swap_reloc_out	IF,0:CALL,2:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	43
0x400085f	              0x55	                                push rbp	       145	peicode.h	FUNCTION_2
0x4000860	          0x4889e5	                            mov rbp, rsp	       145	peicode.h	FUNCTION_2
0x4000863	        0x4883ec30	                           sub rsp, 0x30	       145	peicode.h	FUNCTION_2
0x4000867	        0x48897de8	             mov qword [rbp - 0x18], rdi	       145	peicode.h	FUNCTION_2
0x400086b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       145	peicode.h	FUNCTION_2
0x400086f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       145	peicode.h	FUNCTION_2
0x4000873	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       146	peicode.h	FUNCTION_2
0x4000877	        0x488945f0	             mov qword [rbp - 0x10], rax	       146	peicode.h	FUNCTION_2
0x400087b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       147	peicode.h	FUNCTION_2
0x400087f	        0x488945f8	                mov qword [rbp - 8], rax	       147	peicode.h	FUNCTION_2
0x4000883	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	peicode.h	FUNCTION_2
0x4000887	        0x488b4008	                mov rax, qword [rax + 8]	       149	peicode.h	FUNCTION_2
0x400088b	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       149	peicode.h	FUNCTION_2
0x4000892	        0x488b4df8	                mov rcx, qword [rbp - 8]	       149	peicode.h	FUNCTION_2
0x4000896	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       149	peicode.h	FUNCTION_2
0x400089a	          0x488b12	                    mov rdx, qword [rdx]	       149	peicode.h	FUNCTION_2
0x400089d	          0x4889ce	                            mov rsi, rcx	       149	peicode.h	FUNCTION_2
0x40008a0	          0x4889d7	                            mov rdi, rdx	       149	peicode.h	FUNCTION_2
0x40008a3	            0xffd0	                                call rax	       149	peicode.h	FUNCTION_2
0x40008a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	peicode.h	FUNCTION_2
0x40008a9	        0x488b4008	                mov rax, qword [rax + 8]	       150	peicode.h	FUNCTION_2
0x40008ad	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       150	peicode.h	FUNCTION_2
0x40008b4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       150	peicode.h	FUNCTION_2
0x40008b8	        0x488d4a04	                      lea rcx, [rdx + 4]	       150	peicode.h	FUNCTION_2
0x40008bc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       150	peicode.h	FUNCTION_2
0x40008c0	        0x488b5208	                mov rdx, qword [rdx + 8]	       150	peicode.h	FUNCTION_2
0x40008c4	          0x4889ce	                            mov rsi, rcx	       150	peicode.h	FUNCTION_2
0x40008c7	          0x4889d7	                            mov rdi, rdx	       150	peicode.h	FUNCTION_2
0x40008ca	            0xffd0	                                call rax	       150	peicode.h	FUNCTION_2
0x40008cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	peicode.h	FUNCTION_2
0x40008d0	        0x488b4008	                mov rax, qword [rax + 8]	       151	peicode.h	FUNCTION_2
0x40008d4	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       151	peicode.h	FUNCTION_2
0x40008db	        0x488b55f8	                mov rdx, qword [rbp - 8]	       151	peicode.h	FUNCTION_2
0x40008df	        0x488d4a08	                      lea rcx, [rdx + 8]	       151	peicode.h	FUNCTION_2
0x40008e3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       151	peicode.h	FUNCTION_2
0x40008e7	         0xfb75210	           movzx edx, word [rdx + 0x10] 	       151	peicode.h	FUNCTION_2
0x40008eb	           0xfb7d2	                           movzx edx, dx	       151	peicode.h	FUNCTION_2
0x40008ee	          0x4889ce	                            mov rsi, rcx	       151	peicode.h	FUNCTION_2
0x40008f1	          0x4889d7	                            mov rdi, rdx	       151	peicode.h	FUNCTION_2
0x40008f4	            0xffd0	                                call rax	       151	peicode.h	FUNCTION_2
0x40008f6	      0xb80a000000	                            mov eax, 0xa	       159	peicode.h	FUNCTION_2
0x40008fb	              0xc9	                                   leave	       160	peicode.h	FUNCTION_2
0x40008fc	              0xc3	                                     ret	       160	peicode.h	FUNCTION_2
coff_classify_symbol	IF,9:CALL,6:ELSE,1:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0	94
0x4007850	              0x55	                                push rbp	      4822	coffcode.h	FUNCTION_52
0x4007851	          0x4889e5	                            mov rbp, rsp	      4822	coffcode.h	FUNCTION_52
0x4007854	              0x53	                                push rbx	      4822	coffcode.h	FUNCTION_52
0x4007855	        0x4883ec38	                           sub rsp, 0x38	      4822	coffcode.h	FUNCTION_52
0x4007859	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4822	coffcode.h	FUNCTION_52
0x400785d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4822	coffcode.h	FUNCTION_52
0x4007861	    0x64488b042528	                mov rax, qword fs:[0x28]	      4822	coffcode.h	FUNCTION_52
0x400786a	        0x488945e8	             mov qword [rbp - 0x18], rax	      4822	coffcode.h	FUNCTION_52
0x400786e	            0x31c0	                            xor eax, eax	      4822	coffcode.h	FUNCTION_52
0x4007870	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007874	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007878	           0xfb6c0	                           movzx eax, al	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x400787b	          0x83f817	                           cmp eax, 0x17	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x400787e	            0x7418	                            je 0x4007898	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007880	          0x83f817	                           cmp eax, 0x17	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007883	            0x7f07	                            jg 0x400788c	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007885	          0x83f802	                              cmp eax, 2	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007888	            0x740e	                            je 0x4007898	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x400788a	            0xeb42	                           jmp 0x40078ce	      4849	coffcode.h	FUNCTION_52	SWITCH_1	ELSE_1
0x400788c	          0x83f869	                           cmp eax, 0x69	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x400788f	            0x7407	                            je 0x4007898	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007891	          0x83f87f	                           cmp eax, 0x7f	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007894	            0x7402	                            je 0x4007898	      4825	coffcode.h	FUNCTION_52	SWITCH_1
0x4007896	            0xeb36	                           jmp 0x40078ce	      4849	coffcode.h	FUNCTION_52	SWITCH_1	ELSE_1
0x4007898	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4839	coffcode.h	FUNCTION_52	SWITCH_1	IF_1
0x400789c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4839	coffcode.h	FUNCTION_52	SWITCH_1	IF_1
0x400789f	            0x85c0	                           test eax, eax	      4839	coffcode.h	FUNCTION_52	SWITCH_1	IF_1
0x40078a1	            0x7521	                           jne 0x40078c4	      4839	coffcode.h	FUNCTION_52	SWITCH_1	IF_1
0x40078a3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4841	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	IF_2
0x40078a7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4841	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	IF_2
0x40078ab	          0x4885c0	                           test rax, rax	      4841	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	IF_2
0x40078ae	            0x750a	                           jne 0x40078ba	      4841	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	IF_2
0x40078b0	      0xb802000000	                              mov eax, 2	      4842	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	IF_2
0x40078b5	      0xe9c3000000	                           jmp 0x400797d	      4842	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	IF_2
0x40078ba	      0xb801000000	                              mov eax, 1	      4844	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	ELSE_1
0x40078bf	      0xe9b9000000	                           jmp 0x400797d	      4844	coffcode.h	FUNCTION_52	SWITCH_1	IF_1	ELSE_1
0x40078c4	      0xb800000000	                              mov eax, 0	      4846	coffcode.h	FUNCTION_52	SWITCH_1	ELSE_1
0x40078c9	      0xe9af000000	                           jmp 0x400797d	      4846	coffcode.h	FUNCTION_52	SWITCH_1	ELSE_1
0x40078ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4853	coffcode.h	FUNCTION_52	ELSE_1	IF_3
0x40078d2	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      4853	coffcode.h	FUNCTION_52	ELSE_1	IF_3
0x40078d6	            0x3c03	                               cmp al, 3	      4853	coffcode.h	FUNCTION_52	ELSE_1	IF_3
0x40078d8	            0x751f	                           jne 0x40078f9	      4853	coffcode.h	FUNCTION_52	ELSE_1	IF_3
0x40078da	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4855	coffcode.h	FUNCTION_52	ELSE_1	IF_3	IF_4
0x40078de	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4855	coffcode.h	FUNCTION_52	ELSE_1	IF_3	IF_4
0x40078e1	            0x85c0	                           test eax, eax	      4855	coffcode.h	FUNCTION_52	ELSE_1	IF_3	IF_4
0x40078e3	            0x750a	                           jne 0x40078ef	      4855	coffcode.h	FUNCTION_52	ELSE_1	IF_3	IF_4
0x40078e5	      0xb803000000	                              mov eax, 3	      4860	coffcode.h	FUNCTION_52	ELSE_1	IF_3	IF_4
0x40078ea	      0xe98e000000	                           jmp 0x400797d	      4860	coffcode.h	FUNCTION_52	ELSE_1	IF_3	IF_4
0x40078ef	      0xb803000000	                              mov eax, 3	      4879	coffcode.h	FUNCTION_52	ELSE_1	IF_3
0x40078f4	      0xe984000000	                           jmp 0x400797d	      4879	coffcode.h	FUNCTION_52	ELSE_1	IF_3
0x40078f9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4882	coffcode.h	FUNCTION_52	IF_7
0x40078fd	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      4882	coffcode.h	FUNCTION_52	IF_7
0x4007901	            0x3c68	                            cmp al, 0x68	      4882	coffcode.h	FUNCTION_52	IF_7
0x4007903	            0x7525	                           jne 0x400792a	      4882	coffcode.h	FUNCTION_52	IF_7
0x4007905	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4887	coffcode.h	FUNCTION_52	IF_7
0x4007909	    0x48c740100000	               mov qword [rax + 0x10], 0	      4887	coffcode.h	FUNCTION_52	IF_7
0x4007911	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4888	coffcode.h	FUNCTION_52	IF_7	IF_8
0x4007915	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4888	coffcode.h	FUNCTION_52	IF_7	IF_8
0x4007918	            0x85c0	                           test eax, eax	      4888	coffcode.h	FUNCTION_52	IF_7	IF_8
0x400791a	            0x7507	                           jne 0x4007923	      4888	coffcode.h	FUNCTION_52	IF_7	IF_8
0x400791c	      0xb802000000	                              mov eax, 2	      4889	coffcode.h	FUNCTION_52	IF_7	IF_8
0x4007921	            0xeb5a	                           jmp 0x400797d	      4889	coffcode.h	FUNCTION_52	IF_7	IF_8
0x4007923	      0xb804000000	                              mov eax, 4	      4890	coffcode.h	FUNCTION_52	IF_7
0x4007928	            0xeb53	                           jmp 0x400797d	      4890	coffcode.h	FUNCTION_52	IF_7
0x400792a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4895	coffcode.h	FUNCTION_52	IF_9
0x400792e	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4895	coffcode.h	FUNCTION_52	IF_9
0x4007931	            0x85c0	                           test eax, eax	      4895	coffcode.h	FUNCTION_52	IF_9
0x4007933	            0x7543	                           jne 0x4007978	      4895	coffcode.h	FUNCTION_52	IF_9
0x4007935	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007939	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x400793d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007941	          0x4889ce	                            mov rsi, rcx	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007944	          0x4889c7	                            mov rdi, rax	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007947	      0xe800000000	                          call 0x400794c	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x400794c	          0x4889c3	                            mov rbx, rax	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x400794f	      0xbe00000000	                              mov esi, 0	      4901	coffcode.h	FUNCTION_52	IF_9	CALL_5
0x4007954	      0xbf00000000	                              mov edi, 0	      4901	coffcode.h	FUNCTION_52	IF_9	CALL_5
0x4007959	      0xe800000000	                          call 0x400795e	      4901	coffcode.h	FUNCTION_52	IF_9	CALL_5
0x400795e	          0x4889c1	                            mov rcx, rax	      4901	coffcode.h	FUNCTION_52	IF_9	CALL_5
0x4007961	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007965	          0x4889da	                            mov rdx, rbx	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007968	          0x4889c6	                            mov rsi, rax	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x400796b	          0x4889cf	                            mov rdi, rcx	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x400796e	      0xb800000000	                              mov eax, 0	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007973	      0xe800000000	                          call 0x4007978	      4899	coffcode.h	FUNCTION_52	IF_9	CALL_4
0x4007978	      0xb803000000	                              mov eax, 3	      4905	coffcode.h	FUNCTION_52
0x400797d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4906	coffcode.h	FUNCTION_52
0x4007981	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4906	coffcode.h	FUNCTION_52
0x400798a	            0x7405	                            je 0x4007991	      4906	coffcode.h	FUNCTION_52
0x400798c	      0xe800000000	                          call 0x4007991	      4906	coffcode.h	FUNCTION_52
0x4007991	        0x4883c438	                           add rsp, 0x38	      4906	coffcode.h	FUNCTION_52
0x4007995	              0x5b	                                 pop rbx	      4906	coffcode.h	FUNCTION_52
0x4007996	              0x5d	                                 pop rbp	      4906	coffcode.h	FUNCTION_52
0x4007997	              0xc3	                                     ret	      4906	coffcode.h	FUNCTION_52
coff_canonicalize_reloc	IF,2:CALL,1:ELSE,1:SWITCH,0:DO,0:FOR,2:functions,0:WHILE,0	70
0x4007eb3	              0x55	                                push rbp	      5096	coffcode.h	FUNCTION_54
0x4007eb4	          0x4889e5	                            mov rbp, rsp	      5096	coffcode.h	FUNCTION_54
0x4007eb7	        0x4883ec40	                           sub rsp, 0x40	      5096	coffcode.h	FUNCTION_54
0x4007ebb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5096	coffcode.h	FUNCTION_54
0x4007ebf	        0x488975d0	             mov qword [rbp - 0x30], rsi	      5096	coffcode.h	FUNCTION_54
0x4007ec3	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5096	coffcode.h	FUNCTION_54
0x4007ec7	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      5096	coffcode.h	FUNCTION_54
0x4007ecb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5097	coffcode.h	FUNCTION_54
0x4007ecf	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5097	coffcode.h	FUNCTION_54
0x4007ed3	        0x488945f0	             mov qword [rbp - 0x10], rax	      5097	coffcode.h	FUNCTION_54
0x4007ed7	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5098	coffcode.h	FUNCTION_54
0x4007ede	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5100	coffcode.h	FUNCTION_54	IF_1
0x4007ee2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5100	coffcode.h	FUNCTION_54	IF_1
0x4007ee5	      0x2580000000	                           and eax, 0x80	      5100	coffcode.h	FUNCTION_54	IF_1
0x4007eea	            0x85c0	                           test eax, eax	      5100	coffcode.h	FUNCTION_54	IF_1
0x4007eec	            0x744c	                            je 0x4007f3a	      5100	coffcode.h	FUNCTION_54	IF_1
0x4007eee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5105	coffcode.h	FUNCTION_54	IF_1
0x4007ef2	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      5105	coffcode.h	FUNCTION_54	IF_1
0x4007ef9	        0x488945f8	                mov qword [rbp - 8], rax	      5105	coffcode.h	FUNCTION_54	IF_1
0x4007efd	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f04	            0xeb23	                           jmp 0x4007f29	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f06	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5109	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f0a	        0x488d5008	                      lea rdx, [rax + 8]	      5109	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f0e	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5109	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f12	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5109	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f16	          0x488910	                    mov qword [rax], rdx	      5109	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f19	        0x488b45f8	                mov rax, qword [rbp - 8]	      5110	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f1d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5110	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f21	        0x488945f8	                mov qword [rbp - 8], rax	      5110	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f25	        0x8345ec01	               add dword [rbp - 0x14], 1	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f2d	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f33	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f36	            0x77ce	                            ja 0x4007f06	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f38	            0xeb64	                           jmp 0x4007f9e	      5107	coffcode.h	FUNCTION_54	IF_1	FOR_1
0x4007f3a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f3e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f46	          0x4889ce	                            mov rsi, rcx	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f49	          0x4889c7	                            mov rdi, rax	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f4c	      0xe847faffff	         call sym.coff_slurp_reloc_table	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f51	            0x85c0	                           test eax, eax	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f53	            0x7509	                           jne 0x4007f5e	      5115	coffcode.h	FUNCTION_54	ELSE_1	IF_2	CALL_1
0x4007f55	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      5116	coffcode.h	FUNCTION_54	ELSE_1	IF_2
0x4007f5c	            0xeb57	                           jmp 0x4007fb5	      5116	coffcode.h	FUNCTION_54	ELSE_1	IF_2
0x4007f5e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5118	coffcode.h	FUNCTION_54	ELSE_1
0x4007f62	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5118	coffcode.h	FUNCTION_54	ELSE_1
0x4007f66	        0x488945f0	             mov qword [rbp - 0x10], rax	      5118	coffcode.h	FUNCTION_54	ELSE_1
0x4007f6a	            0xeb1b	                           jmp 0x4007f87	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5121	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f70	        0x488d5008	                      lea rdx, [rax + 8]	      5121	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f74	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5121	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f78	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5121	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f7c	        0x488d4a20	                   lea rcx, [rdx + 0x20]	      5121	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f80	        0x48894df0	             mov qword [rbp - 0x10], rcx	      5121	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f84	          0x488910	                    mov qword [rax], rdx	      5121	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f87	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f8a	          0x8d5001	                      lea edx, [rax + 1]	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f8d	          0x8955ec	             mov dword [rbp - 0x14], edx	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f90	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f94	    0x8b9288000000	            mov edx, dword [rdx + 0x88] 	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f9a	            0x39d0	                            cmp eax, edx	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f9c	            0x72ce	                            jb 0x4007f6c	      5120	coffcode.h	FUNCTION_54	ELSE_1	FOR_2
0x4007f9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5123	coffcode.h	FUNCTION_54
0x4007fa2	    0x48c700000000	                      mov qword [rax], 0	      5123	coffcode.h	FUNCTION_54
0x4007fa9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5124	coffcode.h	FUNCTION_54
0x4007fad	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      5124	coffcode.h	FUNCTION_54
0x4007fb3	            0x89c0	                            mov eax, eax	      5124	coffcode.h	FUNCTION_54
0x4007fb5	              0xc9	                                   leave	      5125	coffcode.h	FUNCTION_54
0x4007fb6	              0xc3	                                     ret	      5125	coffcode.h	FUNCTION_54
dummy_reloc16_extra_cases	IF,0:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	13
0x4007fe6	              0x55	                                push rbp	      5161	coffcode.h	FUNCTION_56
0x4007fe7	          0x4889e5	                            mov rbp, rsp	      5161	coffcode.h	FUNCTION_56
0x4007fea	        0x4883ec30	                           sub rsp, 0x30	      5161	coffcode.h	FUNCTION_56
0x4007fee	        0x48897df8	                mov qword [rbp - 8], rdi	      5161	coffcode.h	FUNCTION_56
0x4007ff2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5161	coffcode.h	FUNCTION_56
0x4007ff6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5161	coffcode.h	FUNCTION_56
0x4007ffa	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5161	coffcode.h	FUNCTION_56
0x4007ffe	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      5161	coffcode.h	FUNCTION_56
0x4008002	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      5161	coffcode.h	FUNCTION_56
0x4008006	      0xba00000000	                              mov edx, 0	      5162	coffcode.h	FUNCTION_56	CALL_1
0x400800b	      0xbe2a140000	                         mov esi, 0x142a	      5162	coffcode.h	FUNCTION_56	CALL_1
0x4008010	      0xbf00000000	                              mov edi, 0	      5162	coffcode.h	FUNCTION_56	CALL_1
0x4008015	      0xe800000000	     call sym.coff_link_output_has_begun	      5162	coffcode.h	FUNCTION_56	CALL_1
coff_slurp_reloc_table	IF,8:CALL,13:ELSE,2:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0	321
0x4007998	              0x55	                                push rbp	      4958	coffcode.h	FUNCTION_53
0x4007999	          0x4889e5	                            mov rbp, rsp	      4958	coffcode.h	FUNCTION_53
0x400799c	            0x4154	                                push r12	      4958	coffcode.h	FUNCTION_53
0x400799e	              0x53	                                push rbx	      4958	coffcode.h	FUNCTION_53
0x400799f	    0x4881ec900000	                           sub rsp, 0x90	      4958	coffcode.h	FUNCTION_53
0x40079a6	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      4958	coffcode.h	FUNCTION_53
0x40079ad	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      4958	coffcode.h	FUNCTION_53
0x40079b4	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      4958	coffcode.h	FUNCTION_53
0x40079bb	    0x64488b042528	                mov rax, qword fs:[0x28]	      4958	coffcode.h	FUNCTION_53
0x40079c4	        0x488945e8	             mov qword [rbp - 0x18], rax	      4958	coffcode.h	FUNCTION_53
0x40079c8	            0x31c0	                            xor eax, eax	      4958	coffcode.h	FUNCTION_53
0x40079ca	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4965	coffcode.h	FUNCTION_53	IF_1
0x40079d1	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4965	coffcode.h	FUNCTION_53	IF_1
0x40079d5	          0x4885c0	                           test rax, rax	      4965	coffcode.h	FUNCTION_53	IF_1
0x40079d8	            0x740a	                            je 0x40079e4	      4965	coffcode.h	FUNCTION_53	IF_1
0x40079da	      0xb801000000	                              mov eax, 1	      4966	coffcode.h	FUNCTION_53	IF_1
0x40079df	      0xe9af040000	                           jmp 0x4007e93	      4966	coffcode.h	FUNCTION_53	IF_1
0x40079e4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4967	coffcode.h	FUNCTION_53	IF_2
0x40079eb	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4967	coffcode.h	FUNCTION_53	IF_2
0x40079f1	            0x85c0	                           test eax, eax	      4967	coffcode.h	FUNCTION_53	IF_2
0x40079f3	            0x750a	                           jne 0x40079ff	      4967	coffcode.h	FUNCTION_53	IF_2
0x40079f5	      0xb801000000	                              mov eax, 1	      4968	coffcode.h	FUNCTION_53	IF_2
0x40079fa	      0xe994040000	                           jmp 0x4007e93	      4968	coffcode.h	FUNCTION_53	IF_2
0x40079ff	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4969	coffcode.h	FUNCTION_53	IF_3
0x4007a06	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4969	coffcode.h	FUNCTION_53	IF_3
0x4007a09	      0x2580000000	                           and eax, 0x80	      4969	coffcode.h	FUNCTION_53	IF_3
0x4007a0e	            0x85c0	                           test eax, eax	      4969	coffcode.h	FUNCTION_53	IF_3
0x4007a10	            0x740a	                            je 0x4007a1c	      4969	coffcode.h	FUNCTION_53	IF_3
0x4007a12	      0xb801000000	                              mov eax, 1	      4970	coffcode.h	FUNCTION_53	IF_3
0x4007a17	      0xe977040000	                           jmp 0x4007e93	      4970	coffcode.h	FUNCTION_53	IF_3
0x4007a1c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4971	coffcode.h	FUNCTION_53	IF_4	CALL_1
0x4007a23	          0x4889c7	                            mov rdi, rax	      4971	coffcode.h	FUNCTION_53	IF_4	CALL_1
0x4007a26	      0xe86ff7ffff	        call sym.coff_slurp_symbol_table	      4971	coffcode.h	FUNCTION_53	IF_4	CALL_1
0x4007a2b	            0x85c0	                           test eax, eax	      4971	coffcode.h	FUNCTION_53	IF_4	CALL_1
0x4007a2d	            0x750a	                           jne 0x4007a39	      4971	coffcode.h	FUNCTION_53	IF_4	CALL_1
0x4007a2f	      0xb800000000	                              mov eax, 0	      4972	coffcode.h	FUNCTION_53	IF_4
0x4007a34	      0xe95a040000	                           jmp 0x4007e93	      4972	coffcode.h	FUNCTION_53	IF_4
0x4007a39	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a40	        0x488b4008	                mov rax, qword [rax + 8]	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a44	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a4b	          0x8b4064	            mov eax, dword [rax + 0x64] 	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a4e	            0x89c2	                            mov edx, eax	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a50	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a57	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a5d	            0x89c0	                            mov eax, eax	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a5f	        0x480fafc2	                           imul rax, rdx	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a63	        0x48894598	             mov qword [rbp - 0x68], rax	      4974	coffcode.h	FUNCTION_53	CALL_2
0x4007a67	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a6e	    0x488b88980000	            mov rcx, qword [rax + 0x98] 	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a75	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a79	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a80	          0x4889ce	                            mov rsi, rcx	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a83	          0x4889c7	                            mov rdi, rax	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a86	      0xe810eeffff	                   call sym.buy_and_read	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a8b	        0x488945a0	             mov qword [rbp - 0x60], rax	      4975	coffcode.h	FUNCTION_53	CALL_3
0x4007a8f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4976	coffcode.h	FUNCTION_53
0x4007a96	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4976	coffcode.h	FUNCTION_53
0x4007a9c	            0x89c0	                            mov eax, eax	      4976	coffcode.h	FUNCTION_53
0x4007a9e	        0x48c1e005	                              shl rax, 5	      4976	coffcode.h	FUNCTION_53
0x4007aa2	        0x48894598	             mov qword [rbp - 0x68], rax	      4976	coffcode.h	FUNCTION_53
0x4007aa6	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4977	coffcode.h	FUNCTION_53	CALL_4
0x4007aaa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4977	coffcode.h	FUNCTION_53	CALL_4
0x4007ab1	          0x4889d6	                            mov rsi, rdx	      4977	coffcode.h	FUNCTION_53	CALL_4
0x4007ab4	          0x4889c7	                            mov rdi, rax	      4977	coffcode.h	FUNCTION_53	CALL_4
0x4007ab7	      0xe800000000	                          call 0x4007abc	      4977	coffcode.h	FUNCTION_53	CALL_4
0x4007abc	        0x488945a8	             mov qword [rbp - 0x58], rax	      4977	coffcode.h	FUNCTION_53	CALL_4
0x4007ac0	      0x48837da800	               cmp qword [rbp - 0x58], 0	      4979	coffcode.h	FUNCTION_53	IF_5
0x4007ac5	            0x7407	                            je 0x4007ace	      4979	coffcode.h	FUNCTION_53	IF_5
0x4007ac7	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4979	coffcode.h	FUNCTION_53	IF_5
0x4007acc	            0x750a	                           jne 0x4007ad8	      4979	coffcode.h	FUNCTION_53	IF_5
0x4007ace	      0xb800000000	                              mov eax, 0	      4980	coffcode.h	FUNCTION_53	IF_5
0x4007ad3	      0xe9bb030000	                           jmp 0x4007e93	      4980	coffcode.h	FUNCTION_53	IF_5
0x4007ad8	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      4982	coffcode.h	FUNCTION_53	FOR_1
0x4007adf	      0xe985030000	                           jmp 0x4007e69	      4982	coffcode.h	FUNCTION_53	FOR_1
0x4007ae4	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      4990	coffcode.h	FUNCTION_53	FOR_1
0x4007ae7	        0x48c1e005	                              shl rax, 5	      4990	coffcode.h	FUNCTION_53	FOR_1
0x4007aeb	          0x4889c2	                            mov rdx, rax	      4990	coffcode.h	FUNCTION_53	FOR_1
0x4007aee	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4990	coffcode.h	FUNCTION_53	FOR_1
0x4007af2	          0x4801d0	                            add rax, rdx	      4990	coffcode.h	FUNCTION_53	FOR_1
0x4007af5	        0x488945b0	             mov qword [rbp - 0x50], rax	      4990	coffcode.h	FUNCTION_53	FOR_1
0x4007af9	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007afc	          0x4889d0	                            mov rax, rdx	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007aff	        0x48c1e002	                              shl rax, 2	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007b03	          0x4801d0	                            add rax, rdx	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007b06	          0x4801c0	                            add rax, rax	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007b09	          0x4889c2	                            mov rdx, rax	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007b0c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007b10	          0x4801d0	                            add rax, rdx	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007b13	        0x488945b8	             mov qword [rbp - 0x48], rax	      4991	coffcode.h	FUNCTION_53	FOR_1
0x4007b17	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4993	coffcode.h	FUNCTION_53	FOR_1
0x4007b1f	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      4994	coffcode.h	FUNCTION_53	FOR_1	CALL_5
0x4007b23	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      4994	coffcode.h	FUNCTION_53	FOR_1	CALL_5
0x4007b27	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4994	coffcode.h	FUNCTION_53	FOR_1	CALL_5
0x4007b2e	          0x4889ce	                            mov rsi, rcx	      4994	coffcode.h	FUNCTION_53	FOR_1	CALL_5
0x4007b31	          0x4889c7	                            mov rdi, rax	      4994	coffcode.h	FUNCTION_53	FOR_1	CALL_5
0x4007b34	      0xe8908cffff	             call sym.coff_swap_reloc_in	      4994	coffcode.h	FUNCTION_53	FOR_1	CALL_5
0x4007b39	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4999	coffcode.h	FUNCTION_53	FOR_1
0x4007b3d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4999	coffcode.h	FUNCTION_53	FOR_1
0x4007b41	        0x48895008	                mov qword [rax + 8], rdx	      4999	coffcode.h	FUNCTION_53	FOR_1
0x4007b45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5001	coffcode.h	FUNCTION_53	FOR_1	IF_6
0x4007b49	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      5001	coffcode.h	FUNCTION_53	FOR_1	IF_6
0x4007b4d	     0xf84c5000000	                            je 0x4007c18	      5001	coffcode.h	FUNCTION_53	FOR_1	IF_6
0x4007b53	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      5001	coffcode.h	FUNCTION_53	FOR_1	IF_6
0x4007b5b	     0xf84b7000000	                            je 0x4007c18	      5001	coffcode.h	FUNCTION_53	FOR_1	IF_6
0x4007b61	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b65	          0x4885c0	                           test rax, rax	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b68	            0x781c	                            js 0x4007b86	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b6a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b6e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b75	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b7c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b7f	            0x4898	                                    cdqe	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b81	          0x4839c2	                            cmp rdx, rax	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b84	            0x7c48	                            jl 0x4007bce	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007b86	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      5005	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_8
0x4007b8a	      0xbe00000000	                              mov esi, 0	      5007	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_9
0x4007b8f	      0xbf00000000	                              mov edi, 0	      5007	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_9
0x4007b94	      0xe800000000	                          call 0x4007b99	      5007	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_9
0x4007b99	          0x4889c1	                            mov rcx, rax	      5007	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_9
0x4007b9c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5005	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_8
0x4007ba3	          0x4889da	                            mov rdx, rbx	      5005	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_8
0x4007ba6	          0x4889c6	                            mov rsi, rax	      5005	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_8
0x4007ba9	          0x4889cf	                            mov rdi, rcx	      5005	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_8
0x4007bac	      0xb800000000	                              mov eax, 0	      5005	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_8
0x4007bb1	      0xe800000000	                          call 0x4007bb6	      5005	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_8
0x4007bb6	    0x488b15000000	            mov rdx, qword [0x04007bbd] 	      5009	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7
0x4007bbd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5009	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7
0x4007bc1	          0x488910	                    mov qword [rax], rdx	      5009	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7
0x4007bc4	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5010	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7
0x4007bcc	            0xeb60	                           jmp 0x4007c2e	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007bce	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007bd5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007bdc	        0x488b4008	                mov rax, qword [rax + 8]	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007be0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007be4	        0x48c1e202	                              shl rdx, 2	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007be8	          0x4801d0	                            add rax, rdx	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007beb	            0x8b00	                    mov eax, dword [rax]	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007bed	            0x89c0	                            mov eax, eax	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007bef	    0x488d14c50000	                        lea rdx, [rax*8]	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007bf7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007bfe	          0x4801c2	                            add rdx, rax	      5015	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1	CALL_10
0x4007c01	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5014	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1
0x4007c05	          0x488910	                    mov qword [rax], rdx	      5014	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1
0x4007c08	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5016	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1
0x4007c0c	          0x488b00	                    mov rax, qword [rax]	      5016	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1
0x4007c0f	          0x488b00	                    mov rax, qword [rax]	      5016	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1
0x4007c12	        0x48894588	             mov qword [rbp - 0x78], rax	      5016	coffcode.h	FUNCTION_53	FOR_1	IF_6	ELSE_1
0x4007c16	            0xeb16	                           jmp 0x4007c2e	      5003	coffcode.h	FUNCTION_53	FOR_1	IF_6	IF_7	CALL_7
0x4007c18	    0x488b15000000	            mov rdx, qword [0x04007c1f] 	      5021	coffcode.h	FUNCTION_53	FOR_1	ELSE_2
0x4007c1f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5021	coffcode.h	FUNCTION_53	FOR_1	ELSE_2
0x4007c23	          0x488910	                    mov qword [rax], rdx	      5021	coffcode.h	FUNCTION_53	FOR_1	ELSE_2
0x4007c26	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5022	coffcode.h	FUNCTION_53	FOR_1	ELSE_2
0x4007c2e	    0x48c745900000	               mov qword [rbp - 0x70], 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c36	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c3b	            0x7456	                            je 0x4007c93	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c3d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c41	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c44	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c4b	            0x7446	                            je 0x4007c93	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c4d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c54	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c5b	          0x488b10	                    mov rdx, qword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c5e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c62	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c65	          0x4889c1	                            mov rcx, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c68	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c6f	          0x4829c1	                            sub rcx, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c72	          0x4889c8	                            mov rax, rcx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c75	        0x48c1f803	                              sar rax, 3	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c79	          0x4889c1	                            mov rcx, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c7c	          0x4889c8	                            mov rax, rcx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c7f	        0x48c1e003	                              shl rax, 3	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c83	          0x4801c8	                            add rax, rcx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c86	        0x48c1e003	                              shl rax, 3	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c8a	          0x4801d0	                            add rax, rdx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c8d	        0x48894590	             mov qword [rbp - 0x70], rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c91	            0xeb4f	                           jmp 0x4007ce2	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c93	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c98	            0x7448	                            je 0x4007ce2	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c9a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007c9e	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007ca1	        0x488b4008	                mov rax, qword [rax + 8]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007ca5	          0x8b4008	                mov eax, dword [rax + 8]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007ca8	          0x83f802	                              cmp eax, 2	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cab	            0x7413	                            je 0x4007cc0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cad	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cb1	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cb4	        0x488b4008	                mov rax, qword [rax + 8]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cb8	          0x8b4008	                mov eax, dword [rax + 8]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cbb	          0x83f804	                              cmp eax, 4	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cbe	            0x7519	                           jne 0x4007cd9	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cc0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cc4	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cc7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cce	          0x4885c0	                           test rax, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cd1	            0x7406	                            je 0x4007cd9	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cd3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cd7	            0xeb05	                           jmp 0x4007cde	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cd9	      0xb800000000	                              mov eax, 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cde	        0x48894590	             mov qword [rbp - 0x70], rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007ce2	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007ce7	            0x742b	                            je 0x4007d14	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007ce9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007ced	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cf1	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cf4	            0x85c0	                           test eax, eax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cf6	            0x751c	                           jne 0x4007d14	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cf8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007cfc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d00	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d04	          0x48f7d8	                                 neg rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d07	          0x4889c2	                            mov rdx, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d0a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d0e	        0x48895010	             mov qword [rax + 0x10], rdx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d12	            0xeb57	                           jmp 0x4007d6b	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d14	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d19	            0x7444	                            je 0x4007d5f	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d1b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d1f	          0x488b00	                    mov rax, qword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d22	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d29	            0x7534	                           jne 0x4007d5f	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d2b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d2f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d33	          0x4885c0	                           test rax, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d36	            0x7427	                            je 0x4007d5f	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d38	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d3c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d40	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d44	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d48	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d4c	          0x4801d0	                            add rax, rdx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d4f	          0x48f7d8	                                 neg rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d52	          0x4889c2	                            mov rdx, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d55	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d59	        0x48895010	             mov qword [rax + 0x10], rdx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d5d	            0xeb0c	                           jmp 0x4007d6b	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d5f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d63	    0x48c740100000	               mov qword [rax + 0x10], 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d6b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d70	            0x744c	                            je 0x4007dbe	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d72	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d76	        0x6683f814	                            cmp ax, 0x14	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d7a	            0x7742	                            ja 0x4007dbe	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d7c	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d80	           0xfb7c0	                           movzx eax, ax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d83	          0x4863d0	                         movsxd rdx, eax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d86	          0x4889d0	                            mov rax, rdx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d89	        0x48c1e002	                              shl rax, 2	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d8d	          0x4801d0	                            add rax, rdx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d90	        0x48c1e004	                              shl rax, 4	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d94	    0x480500000000	                              add rax, 0	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d9a	            0x8b00	                    mov eax, dword [rax]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d9c	            0x85c0	                           test eax, eax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007d9e	            0x741e	                            je 0x4007dbe	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007da0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007da4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007da8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007daf	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007db3	          0x4801c2	                            add rdx, rax	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007db6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007dba	        0x48895010	             mov qword [rax + 0x10], rdx	      5033	coffcode.h	FUNCTION_53	FOR_1
0x4007dbe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5036	coffcode.h	FUNCTION_53	FOR_1
0x4007dc2	        0x488b5008	                mov rdx, qword [rax + 8]	      5036	coffcode.h	FUNCTION_53	FOR_1
0x4007dc6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5036	coffcode.h	FUNCTION_53	FOR_1
0x4007dcd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5036	coffcode.h	FUNCTION_53	FOR_1
0x4007dd1	          0x4829c2	                            sub rdx, rax	      5036	coffcode.h	FUNCTION_53	FOR_1
0x4007dd4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5036	coffcode.h	FUNCTION_53	FOR_1
0x4007dd8	        0x48895008	                mov qword [rax + 8], rdx	      5036	coffcode.h	FUNCTION_53	FOR_1
0x4007ddc	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007de0	        0x6683f814	                            cmp ax, 0x14	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007de4	            0x771e	                            ja 0x4007e04	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007de6	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007dea	           0xfb7d0	                           movzx edx, ax	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007ded	          0x4889d0	                            mov rax, rdx	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007df0	        0x48c1e002	                              shl rax, 2	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007df4	          0x4801d0	                            add rax, rdx	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007df7	        0x48c1e004	                              shl rax, 4	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007dfb	    0x488d90000000	                          lea rdx, [rax]	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007e02	            0xeb05	                           jmp 0x4007e09	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007e04	      0xba00000000	                              mov edx, 0	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007e09	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007e0d	        0x48895018	             mov qword [rax + 0x18], rdx	      5040	coffcode.h	FUNCTION_53	FOR_1
0x4007e11	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5043	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e15	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5043	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e19	          0x4885c0	                           test rax, rax	      5043	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e1c	            0x7547	                           jne 0x4007e65	      5043	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e1e	        0x4c8b65c0	             mov r12, qword [rbp - 0x40]	      5048	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e22	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      5048	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e26	           0xfb7d8	                           movzx ebx, ax	      5045	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_11
0x4007e29	      0xbe00000000	                              mov esi, 0	      5047	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_12
0x4007e2e	      0xbf00000000	                              mov edi, 0	      5047	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_12
0x4007e33	      0xe800000000	                          call 0x4007e38	      5047	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_12
0x4007e38	          0x4889c7	                            mov rdi, rax	      5047	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_12
0x4007e3b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5045	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_11
0x4007e42	          0x4c89e1	                            mov rcx, r12	      5045	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_11
0x4007e45	            0x89da	                            mov edx, ebx	      5045	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_11
0x4007e47	          0x4889c6	                            mov rsi, rax	      5045	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_11
0x4007e4a	      0xb800000000	                              mov eax, 0	      5045	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_11
0x4007e4f	      0xe800000000	                          call 0x4007e54	      5045	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_11
0x4007e54	      0xbf11000000	                           mov edi, 0x11	      5049	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_13
0x4007e59	      0xe800000000	                          call 0x4007e5e	      5049	coffcode.h	FUNCTION_53	FOR_1	IF_8	CALL_13
0x4007e5e	      0xb800000000	                              mov eax, 0	      5050	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e63	            0xeb2e	                           jmp 0x4007e93	      5050	coffcode.h	FUNCTION_53	FOR_1	IF_8
0x4007e65	        0x83458401	               add dword [rbp - 0x7c], 1	      4982	coffcode.h	FUNCTION_53	FOR_1
0x4007e69	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4982	coffcode.h	FUNCTION_53	FOR_1
0x4007e70	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4982	coffcode.h	FUNCTION_53	FOR_1
0x4007e76	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      4982	coffcode.h	FUNCTION_53	FOR_1
0x4007e79	     0xf8765fcffff	                            ja 0x4007ae4	      4982	coffcode.h	FUNCTION_53	FOR_1
0x4007e7f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5054	coffcode.h	FUNCTION_53
0x4007e86	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      5054	coffcode.h	FUNCTION_53
0x4007e8a	        0x48895078	             mov qword [rax + 0x78], rdx	      5054	coffcode.h	FUNCTION_53
0x4007e8e	      0xb801000000	                              mov eax, 1	      5055	coffcode.h	FUNCTION_53
0x4007e93	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      5056	coffcode.h	FUNCTION_53
0x4007e97	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5056	coffcode.h	FUNCTION_53
0x4007ea0	            0x7405	                            je 0x4007ea7	      5056	coffcode.h	FUNCTION_53
0x4007ea2	      0xe800000000	                          call 0x4007ea7	      5056	coffcode.h	FUNCTION_53
0x4007ea7	    0x4881c4900000	                           add rsp, 0x90	      5056	coffcode.h	FUNCTION_53
0x4007eae	              0x5b	                                 pop rbx	      5056	coffcode.h	FUNCTION_53
0x4007eaf	            0x415c	                                 pop r12	      5056	coffcode.h	FUNCTION_53
0x4007eb1	              0x5d	                                 pop rbp	      5056	coffcode.h	FUNCTION_53
0x4007eb2	              0xc3	                                     ret	      5056	coffcode.h	FUNCTION_53
coff_slurp_symbol_table	IF,18:CALL,21:ELSE,5:SWITCH,2:DO,0:FOR,1:functions,0:WHILE,2	436
0x400719a	              0x55	                                push rbp	      4451	coffcode.h	ELSE_4	FUNCTION_51
0x400719b	          0x4889e5	                            mov rbp, rsp	      4451	coffcode.h	ELSE_4	FUNCTION_51
0x400719e	            0x4155	                                push r13	      4451	coffcode.h	ELSE_4	FUNCTION_51
0x40071a0	            0x4154	                                push r12	      4451	coffcode.h	ELSE_4	FUNCTION_51
0x40071a2	              0x53	                                push rbx	      4451	coffcode.h	ELSE_4	FUNCTION_51
0x40071a3	        0x4883ec68	                           sub rsp, 0x68	      4451	coffcode.h	ELSE_4	FUNCTION_51
0x40071a7	        0x48897d88	             mov qword [rbp - 0x78], rdi	      4451	coffcode.h	ELSE_4	FUNCTION_51
0x40071ab	    0xc74598000000	               mov dword [rbp - 0x68], 0	      4456	coffcode.h	ELSE_4	FUNCTION_51
0x40071b2	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      4457	coffcode.h	ELSE_4	FUNCTION_51
0x40071b9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4459	coffcode.h	ELSE_4	FUNCTION_51	IF_1	CALL_1
0x40071bd	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4459	coffcode.h	ELSE_4	FUNCTION_51	IF_1	CALL_1
0x40071c4	          0x488b00	                    mov rax, qword [rax]	      4459	coffcode.h	ELSE_4	FUNCTION_51	IF_1	CALL_1
0x40071c7	          0x4885c0	                           test rax, rax	      4459	coffcode.h	ELSE_4	FUNCTION_51	IF_1	CALL_1
0x40071ca	            0x740a	                            je 0x40071d6	      4459	coffcode.h	ELSE_4	FUNCTION_51	IF_1	CALL_1
0x40071cc	      0xb801000000	                              mov eax, 1	      4460	coffcode.h	ELSE_4	FUNCTION_51	IF_1
0x40071d1	      0xe96f060000	                           jmp 0x4007845	      4460	coffcode.h	ELSE_4	FUNCTION_51	IF_1
0x40071d6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4463	coffcode.h	ELSE_4	FUNCTION_51	IF_2	CALL_2
0x40071da	          0x4889c7	                            mov rdi, rax	      4463	coffcode.h	ELSE_4	FUNCTION_51	IF_2	CALL_2
0x40071dd	      0xe800000000	                          call 0x40071e2	      4463	coffcode.h	ELSE_4	FUNCTION_51	IF_2	CALL_2
0x40071e2	        0x488945b8	             mov qword [rbp - 0x48], rax	      4463	coffcode.h	ELSE_4	FUNCTION_51	IF_2	CALL_2
0x40071e6	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4463	coffcode.h	ELSE_4	FUNCTION_51	IF_2	CALL_2
0x40071eb	            0x750a	                           jne 0x40071f7	      4463	coffcode.h	ELSE_4	FUNCTION_51	IF_2	CALL_2
0x40071ed	      0xb800000000	                              mov eax, 0	      4464	coffcode.h	ELSE_4	FUNCTION_51	IF_2
0x40071f2	      0xe94e060000	                           jmp 0x4007845	      4464	coffcode.h	ELSE_4	FUNCTION_51	IF_2
0x40071f7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4467	coffcode.h	ELSE_4	FUNCTION_51	CALL_3
0x40071fb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4467	coffcode.h	ELSE_4	FUNCTION_51	CALL_3
0x4007202	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4467	coffcode.h	ELSE_4	FUNCTION_51	CALL_3
0x4007206	        0x488945c0	             mov qword [rbp - 0x40], rax	      4467	coffcode.h	ELSE_4	FUNCTION_51	CALL_3
0x400720a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4468	coffcode.h	ELSE_4	FUNCTION_51
0x400720e	          0x4889d0	                            mov rax, rdx	      4468	coffcode.h	ELSE_4	FUNCTION_51
0x4007211	        0x48c1e003	                              shl rax, 3	      4468	coffcode.h	ELSE_4	FUNCTION_51
0x4007215	          0x4801d0	                            add rax, rdx	      4468	coffcode.h	ELSE_4	FUNCTION_51
0x4007218	        0x48c1e003	                              shl rax, 3	      4468	coffcode.h	ELSE_4	FUNCTION_51
0x400721c	        0x488945c0	             mov qword [rbp - 0x40], rax	      4468	coffcode.h	ELSE_4	FUNCTION_51
0x4007220	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4469	coffcode.h	ELSE_4	FUNCTION_51	CALL_4
0x4007224	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4469	coffcode.h	ELSE_4	FUNCTION_51	CALL_4
0x4007228	          0x4889d6	                            mov rsi, rdx	      4469	coffcode.h	ELSE_4	FUNCTION_51	CALL_4
0x400722b	          0x4889c7	                            mov rdi, rax	      4469	coffcode.h	ELSE_4	FUNCTION_51	CALL_4
0x400722e	      0xe800000000	                          call 0x4007233	      4469	coffcode.h	ELSE_4	FUNCTION_51	CALL_4
0x4007233	        0x488945c8	             mov qword [rbp - 0x38], rax	      4469	coffcode.h	ELSE_4	FUNCTION_51	CALL_4
0x4007237	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4470	coffcode.h	ELSE_4	FUNCTION_51	IF_3
0x400723c	            0x750a	                           jne 0x4007248	      4470	coffcode.h	ELSE_4	FUNCTION_51	IF_3
0x400723e	      0xb800000000	                              mov eax, 0	      4471	coffcode.h	ELSE_4	FUNCTION_51	IF_3
0x4007243	      0xe9fd050000	                           jmp 0x4007845	      4471	coffcode.h	ELSE_4	FUNCTION_51	IF_3
0x4007248	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4473	coffcode.h	ELSE_4	FUNCTION_51	CALL_5
0x400724c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4473	coffcode.h	ELSE_4	FUNCTION_51	CALL_5
0x4007253	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4473	coffcode.h	ELSE_4	FUNCTION_51	CALL_5
0x4007257	        0x488945c0	             mov qword [rbp - 0x40], rax	      4473	coffcode.h	ELSE_4	FUNCTION_51	CALL_5
0x400725b	      0x48c165c002	               shl qword [rbp - 0x40], 2	      4474	coffcode.h	ELSE_4	FUNCTION_51
0x4007260	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4475	coffcode.h	ELSE_4	FUNCTION_51	CALL_6
0x4007264	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4475	coffcode.h	ELSE_4	FUNCTION_51	CALL_6
0x4007268	          0x4889d6	                            mov rsi, rdx	      4475	coffcode.h	ELSE_4	FUNCTION_51	CALL_6
0x400726b	          0x4889c7	                            mov rdi, rax	      4475	coffcode.h	ELSE_4	FUNCTION_51	CALL_6
0x400726e	      0xe800000000	                          call 0x4007273	      4475	coffcode.h	ELSE_4	FUNCTION_51	CALL_6
0x4007273	        0x488945d0	             mov qword [rbp - 0x30], rax	      4475	coffcode.h	ELSE_4	FUNCTION_51	CALL_6
0x4007277	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4477	coffcode.h	ELSE_4	FUNCTION_51	IF_4
0x400727c	            0x750a	                           jne 0x4007288	      4477	coffcode.h	ELSE_4	FUNCTION_51	IF_4
0x400727e	      0xb800000000	                              mov eax, 0	      4478	coffcode.h	ELSE_4	FUNCTION_51	IF_4
0x4007283	      0xe9bd050000	                           jmp 0x4007845	      4478	coffcode.h	ELSE_4	FUNCTION_51	IF_4
0x4007288	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4481	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1
0x400728c	        0x488945a8	             mov qword [rbp - 0x58], rax	      4481	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1
0x4007290	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4482	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	CALL_7
0x4007294	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4482	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	CALL_7
0x400729b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4482	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	CALL_7
0x400729f	          0x8945a4	             mov dword [rbp - 0x5c], eax	      4482	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	CALL_7
0x40072a2	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      4483	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1
0x40072a9	      0xe901050000	                           jmp 0x40077af	      4485	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072ae	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4487	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072b1	        0x48c1e003	                              shl rax, 3	      4487	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072b5	    0x488d14c50000	                        lea rdx, [rax*8]	      4487	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072bd	          0x4829c2	                            sub rdx, rax	      4487	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4487	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072c4	          0x4801d0	                            add rax, rdx	      4487	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072c7	        0x488945d8	             mov qword [rbp - 0x28], rax	      4487	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072cb	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4488	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072ce	    0x488d14850000	                        lea rdx, [rax*4]	      4488	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4488	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072da	          0x4801c2	                            add rdx, rax	      4488	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072dd	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4488	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072e0	            0x8902	                    mov dword [rdx], eax	      4488	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072e2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4490	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072e6	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4490	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072ea	          0x488910	                    mov qword [rax], rdx	      4490	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40072ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4491	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_8
0x40072f1	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4491	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_8
0x40072f4	            0x85c0	                           test eax, eax	      4491	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_8
0x40072f6	            0x750f	                           jne 0x4007307	      4491	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_8
0x40072f8	      0xbe8b110000	                         mov esi, 0x118b	      4491	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_8
0x40072fd	      0xbf00000000	                              mov edi, 0	      4491	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_8
0x4007302	      0xe800000000	                          call 0x4007307	      4491	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_8
0x4007307	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4492	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x400730b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4492	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x400730f	          0x4889c2	                            mov rdx, rax	      4492	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007312	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4492	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007316	        0x48895008	                mov qword [rax + 8], rdx	      4492	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x400731a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4494	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x400731e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4494	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007322	        0x48895008	                mov qword [rax + 8], rdx	      4494	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007326	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x400732a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x400732d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x4007331	            0x89d6	                            mov esi, edx	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x4007333	          0x4889c7	                            mov rdi, rax	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x4007336	      0xe800000000	                          call 0x400733b	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x400733b	          0x4889c2	                            mov rdx, rax	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x400733e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x4007342	        0x48895020	             mov qword [rax + 0x20], rdx	      4495	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	CALL_9
0x4007346	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4497	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x400734a	    0xc74018000000	               mov dword [rax + 0x18], 0	      4497	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007351	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4499	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007355	    0x48c740100000	               mov qword [rax + 0x10], 0	      4499	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x400735d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4500	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007361	    0xc74040000000	               mov dword [rax + 0x40], 0	      4500	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x4007368	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400736c	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007370	           0xfb6c0	                           movzx eax, al	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007373	          0x83f812	                           cmp eax, 0x12	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007376	            0x7f7c	                            jg 0x40073f4	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007378	          0x83f80f	                            cmp eax, 0xf	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400737b	     0xf8dac020000	                           jge 0x400762d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007381	          0x83f806	                              cmp eax, 6	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007384	     0xf8448020000	                            je 0x40075d2	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400738a	          0x83f806	                              cmp eax, 6	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400738d	            0x7f3b	                            jg 0x40073ca	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400738f	          0x83f802	                              cmp eax, 2	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007392	     0xf84b2000000	                            je 0x400744a	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007398	          0x83f802	                              cmp eax, 2	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400739b	            0x7f16	                            jg 0x40073b3	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400739d	            0x85c0	                           test eax, eax	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400739f	     0xf8431030000	                            je 0x40076d6	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073a5	          0x83f801	                              cmp eax, 1	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073a8	     0xf847f020000	                            je 0x400762d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073ae	      0xe948030000	                           jmp 0x40076fb	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073b3	          0x83f803	                              cmp eax, 3	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073b6	     0xf8416020000	                            je 0x40075d2	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073bc	          0x83f804	                              cmp eax, 4	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073bf	     0xf8468020000	                            je 0x400762d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073c5	      0xe931030000	                           jmp 0x40076fb	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073ca	          0x83f80a	                            cmp eax, 0xa	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073cd	     0xf847a020000	                            je 0x400764d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073d3	          0x83f80a	                            cmp eax, 0xa	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073d6	            0x7f0e	                            jg 0x40073e6	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073d8	          0x83f808	                              cmp eax, 8	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073db	     0xf8c1a030000	                            jl 0x40076fb	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073e1	      0xe947020000	                           jmp 0x400762d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073e6	          0x83f80d	                            cmp eax, 0xd	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073e9	     0xf8f0c030000	                            jg 0x40076fb	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073ef	      0xe939020000	                           jmp 0x400762d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073f4	          0x83f867	                           cmp eax, 0x67	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073f7	     0xf8450020000	                            je 0x400764d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40073fd	          0x83f867	                           cmp eax, 0x67	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007400	            0x7f25	                            jg 0x4007427	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007402	          0x83f865	                           cmp eax, 0x65	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007405	     0xf8f22020000	                            jg 0x400762d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400740b	          0x83f864	                           cmp eax, 0x64	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400740e	     0xf8d59020000	                           jge 0x400766d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007414	          0x83f814	                           cmp eax, 0x14	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007417	     0xf8499020000	                            je 0x40076b6	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400741d	          0x83f817	                           cmp eax, 0x17	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007420	            0x7428	                            je 0x400744a	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007422	      0xe9d4020000	                           jmp 0x40076fb	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007427	          0x83f86a	                           cmp eax, 0x6a	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400742a	     0xf841b030000	                            je 0x400774b	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007430	          0x83f86a	                           cmp eax, 0x6a	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007433	            0x7c15	                            jl 0x400744a	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007435	          0x83f87f	                           cmp eax, 0x7f	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007438	            0x7410	                            je 0x400744a	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400743a	      0x3dff000000	                           cmp eax, 0xff	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400743f	     0xf8428020000	                            je 0x400766d	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007445	      0xe9b1020000	                           jmp 0x40076fb	      4502	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400744a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x400744e	        0x488d5008	                      lea rdx, [rax + 8]	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x4007452	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x4007456	          0x4889d6	                            mov rsi, rdx	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x4007459	          0x4889c7	                            mov rdi, rax	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x400745c	      0xe8ef030000	           call sym.coff_classify_symbol	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x4007461	          0x83f804	                              cmp eax, 4	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x4007464	     0xf8701010000	                            ja 0x400756b	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x400746a	            0x89c0	                            mov eax, eax	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x400746c	    0x488b04c50000	                  mov rax, qword [rax*8]	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x4007474	            0xffe0	                                 jmp rax	      4525	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	CALL_10
0x4007476	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4528	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400747a	    0xc74018020000	               mov dword [rax + 0x18], 2	      4528	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007481	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4532	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007485	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4532	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007489	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4532	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400748d	        0x48895010	             mov qword [rax + 0x10], rdx	      4532	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007491	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4537	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x4007495	         0xfb74026	           movzx eax, word [rax + 0x26] 	      4537	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x4007499	           0xfb7c0	                           movzx eax, ax	      4537	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x400749c	          0x83e030	                           and eax, 0x30	      4537	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x400749f	        0x4883f820	                           cmp rax, 0x20	      4537	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40074a3	     0xf85be000000	                           jne 0x4007567	      4537	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5	CALL_11
0x40074a9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4540	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x40074ad	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4540	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x40074b0	       0xd08040000	                           or eax, 0x408	      4540	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x40074b5	            0x89c2	                            mov edx, eax	      4540	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x40074b7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4540	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x40074bb	          0x895018	             mov dword [rax + 0x18], edx	      4540	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x40074be	      0xe9a4000000	                           jmp 0x4007567	      4541	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4544	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074c7	    0x48c740200000	               mov qword [rax + 0x20], 0	      4544	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4545	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074d3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4545	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074d7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4545	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074db	        0x48895010	             mov qword [rax + 0x10], rdx	      4545	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074df	      0xe987000000	                           jmp 0x400756b	      4546	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074e4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4549	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074e8	    0x48c740200000	               mov qword [rax + 0x20], 0	      4549	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074f0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4550	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074f4	    0x48c740100000	               mov qword [rax + 0x10], 0	      4550	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074fc	            0xeb6d	                           jmp 0x400756b	      4551	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x40074fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4554	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007502	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4554	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007505	       0xd02010000	                           or eax, 0x102	      4554	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400750a	            0x89c2	                            mov edx, eax	      4554	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400750c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4554	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007510	          0x895018	             mov dword [rax + 0x18], edx	      4554	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007513	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4555	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007517	    0x48c740100000	               mov qword [rax + 0x10], 0	      4555	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400751f	            0xeb4a	                           jmp 0x400756b	      4556	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007521	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4559	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007525	    0xc74018010000	               mov dword [rax + 0x18], 1	      4559	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400752c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4563	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007530	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4563	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007534	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4563	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007538	        0x48895010	             mov qword [rax + 0x10], rdx	      4563	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400753c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4568	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x4007540	         0xfb74026	           movzx eax, word [rax + 0x26] 	      4568	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x4007544	           0xfb7c0	                           movzx eax, ax	      4568	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x4007547	          0x83e030	                           and eax, 0x30	      4568	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x400754a	        0x4883f820	                           cmp rax, 0x20	      4568	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x400754e	            0x751a	                           jne 0x400756a	      4568	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6	CALL_12
0x4007550	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4569	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x4007554	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4569	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x4007557	       0xd08040000	                           or eax, 0x408	      4569	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x400755c	            0x89c2	                            mov edx, eax	      4569	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x400755e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4569	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x4007562	          0x895018	             mov dword [rax + 0x18], edx	      4569	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2	IF_6
0x4007565	            0xeb03	                           jmp 0x400756a	      4570	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007567	              0x90	                                     nop	      4541	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x4007568	            0xeb01	                           jmp 0x400756b	      4541	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400756a	              0x90	                                     nop	      4570	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	SWITCH_2
0x400756b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4580	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x400756f	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4580	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x4007573	            0x3c69	                            cmp al, 0x69	      4580	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x4007575	            0x7512	                           jne 0x4007589	      4580	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x4007577	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4581	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x400757b	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4581	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x400757e	             0xc80	                             or al, 0x80	      4581	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x4007580	            0x89c2	                            mov edx, eax	      4581	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x4007582	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4581	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x4007586	          0x895018	             mov dword [rax + 0x18], edx	      4581	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_8
0x4007589	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4583	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x400758d	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4583	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x4007591	            0x3c68	                            cmp al, 0x68	      4583	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x4007593	            0x7516	                           jne 0x40075ab	      4583	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x4007595	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4584	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x4007599	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4584	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x400759c	            0x85c0	                           test eax, eax	      4584	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x400759e	            0x7e0b	                           jle 0x40075ab	      4584	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40075a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4585	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40075a4	    0xc74018010000	               mov dword [rax + 0x18], 1	      4585	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_9
0x40075ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4587	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075af	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4587	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075b3	            0x3c7f	                            cmp al, 0x7f	      4587	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075b5	     0xf85ad010000	                           jne 0x4007768	      4587	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4592	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075bf	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4592	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075c2	             0xc80	                             or al, 0x80	      4592	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075c4	            0x89c2	                            mov edx, eax	      4592	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075c6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4592	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075ca	          0x895018	             mov dword [rax + 0x18], edx	      4592	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_10
0x40075cd	      0xe996010000	                           jmp 0x4007768	      4594	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x40075d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4607	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x40075d6	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4607	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x40075d9	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      4607	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x40075dc	            0x750d	                           jne 0x40075eb	      4607	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x40075de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4608	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x40075e2	    0xc74018040000	               mov dword [rax + 0x18], 4	      4608	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x40075e9	            0xeb0b	                           jmp 0x40075f6	      4608	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	IF_11
0x40075eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4610	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2
0x40075ef	    0xc74018010000	               mov dword [rax + 0x18], 1	      4610	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2
0x40075f6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4614	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x40075fa	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4614	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x40075fe	          0x4885c0	                           test rax, rax	      4614	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4007601	            0x7415	                            je 0x4007618	      4614	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4007603	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4619	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4007607	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4619	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x400760b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4619	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x400760f	        0x48895010	             mov qword [rax + 0x10], rdx	      4619	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_2	IF_12
0x4007613	      0xe954010000	                           jmp 0x400776c	      4627	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007618	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4626	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x400761c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4626	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x4007620	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4626	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x4007624	        0x48895010	             mov qword [rax + 0x10], rdx	      4626	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_3
0x4007628	      0xe93f010000	                           jmp 0x400776c	      4627	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400762d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4642	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007631	    0xc74018040000	               mov dword [rax + 0x18], 4	      4642	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007638	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4643	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400763c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4643	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007640	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4643	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007644	        0x48895010	             mov qword [rax + 0x10], rdx	      4643	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007648	      0xe91f010000	                           jmp 0x400776c	      4644	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400764d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4664	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007651	    0xc74018040000	               mov dword [rax + 0x18], 4	      4664	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007658	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4665	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400765c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4665	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007660	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4665	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007664	        0x48895010	             mov qword [rax + 0x10], rdx	      4665	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007668	      0xe9ff000000	                           jmp 0x400776c	      4666	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400766d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4717	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007671	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4717	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007675	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4717	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007679	        0x48895010	             mov qword [rax + 0x10], rdx	      4717	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400767d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4718	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x4007681	        0x488b4008	                mov rax, qword [rax + 8]	      4718	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x4007685	      0xbe00000000	                              mov esi, 0	      4718	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x400768a	          0x4889c7	                            mov rdi, rax	      4718	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x400768d	      0xe800000000	                          call 0x4007692	      4718	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x4007692	            0x85c0	                           test eax, eax	      4718	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x4007694	            0x7410	                            je 0x40076a6	      4718	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15	CALL_15
0x4007696	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4722	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15
0x400769a	    0xc74018040000	               mov dword [rax + 0x18], 4	      4722	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_15
0x40076a1	      0xe9c6000000	                           jmp 0x400776c	      4733	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4725	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	ELSE_5
0x40076aa	    0xc74018040002	        mov dword [rax + 0x18], 0x20004 	      4725	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	ELSE_5
0x40076b1	      0xe9b6000000	                           jmp 0x400776c	      4733	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4736	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076ba	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4736	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076be	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4736	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076c2	        0x48895010	             mov qword [rax + 0x10], rdx	      4736	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076c6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4737	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076ca	    0xc74018020000	               mov dword [rax + 0x18], 2	      4737	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076d1	      0xe996000000	                           jmp 0x400776c	      4738	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x40076d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4743	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076da	         0xfb74026	           movzx eax, word [rax + 0x26] 	      4743	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076de	          0x6685c0	                             test ax, ax	      4743	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076e1	            0x7518	                           jne 0x40076fb	      4743	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4744	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076e7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4744	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076eb	          0x4885c0	                           test rax, rax	      4744	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076ee	            0x750b	                           jne 0x40076fb	      4744	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4745	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076f4	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4745	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076f7	            0x85c0	                           test eax, eax	      4745	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076f9	            0x7470	                            je 0x400776b	      4745	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x40076fb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x40076ff	        0x4c8b6808	                mov r13, qword [rax + 8]	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4007703	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4773	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007707	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4773	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400770b	          0x4c8b20	                    mov r12, qword [rax]	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400770e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4772	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007712	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4772	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007716	           0xfb6d8	                           movzx ebx, al	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4007719	      0xbe00000000	                              mov esi, 0	      4771	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x400771e	      0xbf00000000	                              mov edi, 0	      4771	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x4007723	      0xe800000000	                          call 0x4007728	      4771	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x4007728	          0x4889c7	                            mov rdi, rax	      4771	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_17
0x400772b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400772f	          0x4d89e8	                             mov r8, r13	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4007732	          0x4c89e1	                            mov rcx, r12	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4007735	            0x89da	                            mov edx, ebx	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4007737	          0x4889c6	                            mov rsi, rax	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400773a	      0xb800000000	                              mov eax, 0	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x400773f	      0xe800000000	                          call 0x4007744	      4769	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	CALL_16
0x4007744	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      4774	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400774b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4779	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400774f	    0xc74018040000	               mov dword [rax + 0x18], 4	      4779	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007756	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4780	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400775a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4780	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x400775e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4780	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007762	        0x48895010	             mov qword [rax + 0x10], rdx	      4780	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007766	            0xeb04	                           jmp 0x400776c	      4781	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4
0x4007768	              0x90	                                     nop	      4594	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x4007769	            0xeb01	                           jmp 0x400776c	      4594	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1
0x400776b	              0x90	                                     nop	      4746	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	SWITCH_1	ELSE_4	IF_16
0x400776c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4784	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007770	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4784	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007774	        0x48895030	             mov qword [rax + 0x30], rdx	      4784	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007778	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4785	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x400777c	    0x48c740280000	               mov qword [rax + 0x28], 0	      4785	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007784	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4786	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007788	    0x48c740380000	               mov qword [rax + 0x38], 0	      4786	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007790	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4788	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007794	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      4788	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x4007798	           0xfb6d0	                           movzx edx, al	      4788	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x400779b	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4788	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x400779e	             0x1d0	                            add eax, edx	      4788	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x40077a0	          0x83c001	                              add eax, 1	      4788	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x40077a3	          0x8945a0	             mov dword [rbp - 0x60], eax	      4788	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x40077a6	      0x488345a848	           add qword [rbp - 0x58], 0x48 	      4789	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x40077ab	        0x83459801	               add dword [rbp - 0x68], 1	      4790	coffcode.h	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4
0x40077af	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4485	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40077b2	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      4485	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40077b5	     0xf82f3faffff	                            jb 0x40072ae	      4485	coffcode.h	ELSE_4	FUNCTION_51	ELSE_1	WHILE_1
0x40077bb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4794	coffcode.h	FUNCTION_51	ELSE_4	CALL_18
0x40077bf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4794	coffcode.h	FUNCTION_51	ELSE_4	CALL_18
0x40077c6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4794	coffcode.h	FUNCTION_51	ELSE_4	CALL_18
0x40077ca	          0x488910	                    mov qword [rax], rdx	      4794	coffcode.h	FUNCTION_51	ELSE_4	CALL_18
0x40077cd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4795	coffcode.h	FUNCTION_51	ELSE_4	CALL_19
0x40077d1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4795	coffcode.h	FUNCTION_51	ELSE_4	CALL_19
0x40077d8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4795	coffcode.h	FUNCTION_51	ELSE_4	CALL_19
0x40077dc	        0x48895020	             mov qword [rax + 0x20], rdx	      4795	coffcode.h	FUNCTION_51	ELSE_4	CALL_19
0x40077e0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4797	coffcode.h	FUNCTION_51	ELSE_4
0x40077e4	          0x8b5598	             mov edx, dword [rbp - 0x68]	      4797	coffcode.h	FUNCTION_51	ELSE_4
0x40077e7	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      4797	coffcode.h	FUNCTION_51	ELSE_4
0x40077ed	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4798	coffcode.h	FUNCTION_51	ELSE_4	CALL_20
0x40077f1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4798	coffcode.h	FUNCTION_51	ELSE_4	CALL_20
0x40077f8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4798	coffcode.h	FUNCTION_51	ELSE_4	CALL_20
0x40077fc	        0x48895008	                mov qword [rax + 8], rdx	      4798	coffcode.h	FUNCTION_51	ELSE_4	CALL_20
0x4007800	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4803	coffcode.h	FUNCTION_51	ELSE_4
0x4007804	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4803	coffcode.h	FUNCTION_51	ELSE_4
0x400780b	        0x488945b0	             mov qword [rbp - 0x50], rax	      4803	coffcode.h	FUNCTION_51	ELSE_4
0x400780f	            0xeb2a	                           jmp 0x400783b	      4804	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2
0x4007811	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4806	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18	CALL_21
0x4007815	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4806	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18	CALL_21
0x4007819	          0x4889d6	                            mov rsi, rdx	      4806	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18	CALL_21
0x400781c	          0x4889c7	                            mov rdi, rax	      4806	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18	CALL_21
0x400781f	      0xe884f1ffff	          call sym.coff_slurp_line_table	      4806	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18	CALL_21
0x4007824	            0x85c0	                           test eax, eax	      4806	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18	CALL_21
0x4007826	            0x7507	                           jne 0x400782f	      4806	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18	CALL_21
0x4007828	      0xb800000000	                              mov eax, 0	      4807	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18
0x400782d	            0xeb16	                           jmp 0x4007845	      4807	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2	IF_18
0x400782f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4808	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2
0x4007833	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4808	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2
0x4007837	        0x488945b0	             mov qword [rbp - 0x50], rax	      4808	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2
0x400783b	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4804	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2
0x4007840	            0x75cf	                           jne 0x4007811	      4804	coffcode.h	FUNCTION_51	ELSE_4	WHILE_2
0x4007842	          0x8b459c	             mov eax, dword [rbp - 0x64]	      4812	coffcode.h	FUNCTION_51	ELSE_4
0x4007845	        0x4883c468	                           add rsp, 0x68	      4813	coffcode.h	FUNCTION_51	ELSE_4
0x4007849	              0x5b	                                 pop rbx	      4813	coffcode.h	FUNCTION_51	ELSE_4
0x400784a	            0x415c	                                 pop r12	      4813	coffcode.h	FUNCTION_51	ELSE_4
0x400784c	            0x415d	                                 pop r13	      4813	coffcode.h	FUNCTION_51	ELSE_4
0x400784e	              0x5d	                                 pop rbp	      4813	coffcode.h	FUNCTION_51	ELSE_4
0x400784f	              0xc3	                                     ret	      4813	coffcode.h	FUNCTION_51	ELSE_4
coff_compute_checksum	IF,1:CALL,2:ELSE,0:SWITCH,0:DO,1:FOR,0:functions,0:WHILE,0	50
0x40052f3	              0x55	                                push rbp	      3277	coffcode.h	FUNCTION_44
0x40052f4	          0x4889e5	                            mov rbp, rsp	      3277	coffcode.h	FUNCTION_44
0x40052f7	        0x4883ec30	                           sub rsp, 0x30	      3277	coffcode.h	FUNCTION_44
0x40052fb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3277	coffcode.h	FUNCTION_44
0x40052ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      3277	coffcode.h	FUNCTION_44
0x4005308	        0x488945f8	                mov qword [rbp - 8], rax	      3277	coffcode.h	FUNCTION_44
0x400530c	            0x31c0	                            xor eax, eax	      3277	coffcode.h	FUNCTION_44
0x400530e	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3283	coffcode.h	FUNCTION_44
0x4005315	    0xc70500000000	               mov dword [0x0400531f], 0	      3284	coffcode.h	FUNCTION_44
0x400531f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3285	coffcode.h	FUNCTION_44
0x4005327	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x400532b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x400532f	      0xba00000000	                              mov edx, 0	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x4005334	          0x4889ce	                            mov rsi, rcx	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x4005337	          0x4889c7	                            mov rdi, rax	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x400533a	      0xe800000000	                          call 0x400533f	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x400533f	            0x85c0	                           test eax, eax	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x4005341	            0x7407	                            je 0x400534a	      3289	coffcode.h	FUNCTION_44	DO_1	IF_1	CALL_1
0x4005343	      0xb800000000	                              mov eax, 0	      3290	coffcode.h	FUNCTION_44	DO_1	IF_1
0x4005348	            0xeb4c	                           jmp 0x4005396	      3290	coffcode.h	FUNCTION_44	DO_1	IF_1
0x400534a	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	      3292	coffcode.h	FUNCTION_44	DO_1	CALL_2
0x400534e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3292	coffcode.h	FUNCTION_44	DO_1	CALL_2
0x4005352	          0x4889d6	                            mov rsi, rdx	      3292	coffcode.h	FUNCTION_44	DO_1	CALL_2
0x4005355	          0x4889c7	                            mov rdi, rax	      3292	coffcode.h	FUNCTION_44	DO_1	CALL_2
0x4005358	      0xe8ecfeffff	                 call sym.coff_read_word	      3292	coffcode.h	FUNCTION_44	DO_1	CALL_2
0x400535d	          0x8945ec	             mov dword [rbp - 0x14], eax	      3292	coffcode.h	FUNCTION_44	DO_1	CALL_2
0x4005360	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3293	coffcode.h	FUNCTION_44	DO_1
0x4005363	           0x145e8	             add dword [rbp - 0x18], eax	      3293	coffcode.h	FUNCTION_44	DO_1
0x4005366	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3294	coffcode.h	FUNCTION_44	DO_1
0x4005369	          0xc1e810	                           shr eax, 0x10	      3294	coffcode.h	FUNCTION_44	DO_1
0x400536c	            0x89c2	                            mov edx, eax	      3294	coffcode.h	FUNCTION_44	DO_1
0x400536e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3294	coffcode.h	FUNCTION_44	DO_1
0x4005371	             0x1d0	                            add eax, edx	      3294	coffcode.h	FUNCTION_44	DO_1
0x4005373	      0x25ffff0000	                         and eax, 0xffff	      3294	coffcode.h	FUNCTION_44	DO_1
0x4005378	          0x8945e8	             mov dword [rbp - 0x18], eax	      3294	coffcode.h	FUNCTION_44	DO_1
0x400537b	      0x488345f002	               add qword [rbp - 0x10], 2	      3295	coffcode.h	FUNCTION_44	DO_1
0x4005380	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3297	coffcode.h	FUNCTION_44
0x4005384	            0x75a1	                           jne 0x4005327	      3297	coffcode.h	FUNCTION_44
0x4005386	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3299	coffcode.h	FUNCTION_44
0x4005389	          0xc1e810	                           shr eax, 0x10	      3299	coffcode.h	FUNCTION_44
0x400538c	            0x89c2	                            mov edx, eax	      3299	coffcode.h	FUNCTION_44
0x400538e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3299	coffcode.h	FUNCTION_44
0x4005391	             0x1d0	                            add eax, edx	      3299	coffcode.h	FUNCTION_44
0x4005393	           0xfb7c0	                           movzx eax, ax	      3299	coffcode.h	FUNCTION_44
0x4005396	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3300	coffcode.h	FUNCTION_44
0x400539a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3300	coffcode.h	FUNCTION_44
0x40053a3	            0x7405	                            je 0x40053aa	      3300	coffcode.h	FUNCTION_44
0x40053a5	      0xe800000000	                          call 0x40053aa	      3300	coffcode.h	FUNCTION_44
0x40053aa	              0xc9	                                   leave	      3300	coffcode.h	FUNCTION_44
0x40053ab	              0xc3	                                     ret	      3300	coffcode.h	FUNCTION_44
bfd_set_section_alignment	IF,0:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	11
0x4000081	              0x55	                                push rbp	      1695	bfd.h	FUNCTION_74
0x4000082	          0x4889e5	                            mov rbp, rsp	      1695	bfd.h	FUNCTION_74
0x4000085	        0x48897df8	                mov qword [rbp - 8], rdi	      1695	bfd.h	FUNCTION_74
0x4000089	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1695	bfd.h	FUNCTION_74
0x400008d	          0x8955ec	             mov dword [rbp - 0x14], edx	      1695	bfd.h	FUNCTION_74
0x4000090	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	bfd.h	FUNCTION_74
0x4000094	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1696	bfd.h	FUNCTION_74
0x4000097	          0x895070	             mov dword [rax + 0x70], edx	      1696	bfd.h	FUNCTION_74
0x400009a	      0xb801000000	                              mov eax, 1	      1697	bfd.h	FUNCTION_74
0x400009f	              0x5d	                                 pop rbp	      1698	bfd.h	FUNCTION_74
0x40000a0	              0xc3	                                     ret	      1698	bfd.h	FUNCTION_74
coff_swap_reloc_in	IF,0:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	42
0x40007c9	              0x55	                                push rbp	       131	peicode.h	FUNCTION_1
0x40007ca	          0x4889e5	                            mov rbp, rsp	       131	peicode.h	FUNCTION_1
0x40007cd	        0x4883ec30	                           sub rsp, 0x30	       131	peicode.h	FUNCTION_1
0x40007d1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       131	peicode.h	FUNCTION_1
0x40007d5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       131	peicode.h	FUNCTION_1
0x40007d9	        0x488955d8	             mov qword [rbp - 0x28], rdx	       131	peicode.h	FUNCTION_1
0x40007dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       132	peicode.h	FUNCTION_1
0x40007e1	        0x488945f0	             mov qword [rbp - 0x10], rax	       132	peicode.h	FUNCTION_1
0x40007e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	peicode.h	FUNCTION_1
0x40007e9	        0x488945f8	                mov qword [rbp - 8], rax	       133	peicode.h	FUNCTION_1
0x40007ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       135	peicode.h	FUNCTION_1
0x40007f1	        0x488b4008	                mov rax, qword [rax + 8]	       135	peicode.h	FUNCTION_1
0x40007f5	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       135	peicode.h	FUNCTION_1
0x40007fc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       135	peicode.h	FUNCTION_1
0x4000800	          0x4889d7	                            mov rdi, rdx	       135	peicode.h	FUNCTION_1
0x4000803	            0xffd0	                                call rax	       135	peicode.h	FUNCTION_1
0x4000805	          0x4889c2	                            mov rdx, rax	       135	peicode.h	FUNCTION_1
0x4000808	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	peicode.h	FUNCTION_1
0x400080c	          0x488910	                    mov qword [rax], rdx	       135	peicode.h	FUNCTION_1
0x400080f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       136	peicode.h	FUNCTION_1
0x4000813	        0x488b4008	                mov rax, qword [rax + 8]	       136	peicode.h	FUNCTION_1
0x4000817	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       136	peicode.h	FUNCTION_1
0x400081e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       136	peicode.h	FUNCTION_1
0x4000822	        0x4883c204	                              add rdx, 4	       136	peicode.h	FUNCTION_1
0x4000826	          0x4889d7	                            mov rdi, rdx	       136	peicode.h	FUNCTION_1
0x4000829	            0xffd0	                                call rax	       136	peicode.h	FUNCTION_1
0x400082b	          0x4889c2	                            mov rdx, rax	       136	peicode.h	FUNCTION_1
0x400082e	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	peicode.h	FUNCTION_1
0x4000832	        0x48895008	                mov qword [rax + 8], rdx	       136	peicode.h	FUNCTION_1
0x4000836	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	peicode.h	FUNCTION_1
0x400083a	        0x488b4008	                mov rax, qword [rax + 8]	       137	peicode.h	FUNCTION_1
0x400083e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       137	peicode.h	FUNCTION_1
0x4000845	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       137	peicode.h	FUNCTION_1
0x4000849	        0x4883c208	                              add rdx, 8	       137	peicode.h	FUNCTION_1
0x400084d	          0x4889d7	                            mov rdi, rdx	       137	peicode.h	FUNCTION_1
0x4000850	            0xffd0	                                call rax	       137	peicode.h	FUNCTION_1
0x4000852	            0x89c2	                            mov edx, eax	       137	peicode.h	FUNCTION_1
0x4000854	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	peicode.h	FUNCTION_1
0x4000858	        0x66895010	               mov word [rax + 0x10], dx	       137	peicode.h	FUNCTION_1
0x400085c	              0x90	                                     nop	       141	peicode.h	FUNCTION_1
0x400085d	              0xc9	                                   leave	       141	peicode.h	FUNCTION_1
0x400085e	              0xc3	                                     ret	       141	peicode.h	FUNCTION_1
coff_set_alignment_hook	IF,0:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	213
0x4003eca	              0x55	                                push rbp	      1841	coffcode.h	FUNCTION_31
0x4003ecb	          0x4889e5	                            mov rbp, rsp	      1841	coffcode.h	FUNCTION_31
0x4003ece	              0x53	                                push rbx	      1841	coffcode.h	FUNCTION_31
0x4003ecf	    0x4881ec980000	                           sub rsp, 0x98	      1841	coffcode.h	FUNCTION_31
0x4003ed6	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1841	coffcode.h	FUNCTION_31
0x4003edd	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1841	coffcode.h	FUNCTION_31
0x4003ee4	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      1841	coffcode.h	FUNCTION_31
0x4003eeb	    0x64488b042528	                mov rax, qword fs:[0x28]	      1841	coffcode.h	FUNCTION_31
0x4003ef4	        0x488945e8	             mov qword [rbp - 0x18], rax	      1841	coffcode.h	FUNCTION_31
0x4003ef8	            0x31c0	                            xor eax, eax	      1841	coffcode.h	FUNCTION_31
0x4003efa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1842	coffcode.h	FUNCTION_31
0x4003f01	        0x48894590	             mov qword [rbp - 0x70], rax	      1842	coffcode.h	FUNCTION_31
0x4003f05	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1845	coffcode.h	FUNCTION_31
0x4003f09	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1845	coffcode.h	FUNCTION_31
0x4003f0d	      0x250000f000	                       and eax, 0xf00000	      1844	coffcode.h	FUNCTION_31
0x4003f12	          0x89458c	             mov dword [rbp - 0x74], eax	      1844	coffcode.h	FUNCTION_31
0x4003f15	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f18	      0x3d00007000	                       cmp eax, 0x700000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f1d	            0x7478	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f1f	      0x3d00007000	                       cmp eax, 0x700000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f24	            0x7735	                            ja 0x4003f5b	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f26	      0x3d00003000	                       cmp eax, 0x300000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f2b	            0x746a	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f2d	      0x3d00003000	                       cmp eax, 0x300000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f32	            0x7710	                            ja 0x4003f44	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f34	      0x3d00001000	                       cmp eax, 0x100000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f39	            0x745c	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f3b	      0x3d00002000	                       cmp eax, 0x200000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f40	            0x7455	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f42	            0xeb67	                           jmp 0x4003fab	      1867	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f44	      0x3d00005000	                       cmp eax, 0x500000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f49	            0x744c	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f4b	      0x3d00006000	                       cmp eax, 0x600000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f50	            0x7445	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f52	      0x3d00004000	                       cmp eax, 0x400000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f57	            0x743e	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f59	            0xeb50	                           jmp 0x4003fab	      1867	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f5b	      0x3d0000b000	                       cmp eax, 0xb00000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f60	            0x7435	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f62	      0x3d0000b000	                       cmp eax, 0xb00000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f67	            0x7717	                            ja 0x4003f80	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f69	      0x3d00009000	                       cmp eax, 0x900000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f6e	            0x7427	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f70	      0x3d0000a000	                       cmp eax, 0xa00000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f75	            0x7420	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f77	      0x3d00008000	                       cmp eax, 0x800000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f7c	            0x7419	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f7e	            0xeb2b	                           jmp 0x4003fab	      1867	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f80	      0x3d0000d000	                       cmp eax, 0xd00000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f85	            0x7410	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f87	      0x3d0000e000	                       cmp eax, 0xe00000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f8c	            0x7409	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f8e	      0x3d0000c000	                       cmp eax, 0xc00000	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f93	            0x7402	                            je 0x4003f97	      1847	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f95	            0xeb14	                           jmp 0x4003fab	      1867	coffcode.h	FUNCTION_31	SWITCH_1
0x4003f97	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1864	coffcode.h	FUNCTION_31	SWITCH_1	CALL_1
0x4003f9a	          0xc1e814	                           shr eax, 0x14	      1864	coffcode.h	FUNCTION_31	SWITCH_1	CALL_1
0x4003f9d	          0x8d50ff	                      lea edx, [rax - 1]	      1864	coffcode.h	FUNCTION_31	SWITCH_1	CALL_1
0x4003fa0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1864	coffcode.h	FUNCTION_31	SWITCH_1	CALL_1
0x4003fa7	          0x895070	             mov dword [rax + 0x70], edx	      1864	coffcode.h	FUNCTION_31	SWITCH_1	CALL_1
0x4003faa	              0x90	                                     nop	      1865	coffcode.h	FUNCTION_31	SWITCH_1
0x4003fab	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1874	coffcode.h	FUNCTION_31	IF_1	CALL_2
0x4003fb2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1874	coffcode.h	FUNCTION_31	IF_1	CALL_2
0x4003fb9	          0x4885c0	                           test rax, rax	      1874	coffcode.h	FUNCTION_31	IF_1	CALL_2
0x4003fbc	            0x7556	                           jne 0x4004014	      1874	coffcode.h	FUNCTION_31	IF_1	CALL_2
0x4003fbe	    0x48c745986000	           mov qword [rbp - 0x68], 0x60 	      1876	coffcode.h	FUNCTION_31	IF_1
0x4003fc6	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fca	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fd1	          0x4889d6	                            mov rsi, rdx	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fd4	          0x4889c7	                            mov rdi, rax	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fd7	      0xe800000000	                          call 0x4003fdc	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fdc	          0x4889c2	                            mov rdx, rax	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fdf	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fe6	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1877	coffcode.h	FUNCTION_31	IF_1	CALL_3
0x4003fed	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1878	coffcode.h	FUNCTION_31	IF_1	IF_2
0x4003ff4	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1878	coffcode.h	FUNCTION_31	IF_1	IF_2
0x4003ffb	          0x4885c0	                           test rax, rax	      1878	coffcode.h	FUNCTION_31	IF_1	IF_2
0x4003ffe	            0x7514	                           jne 0x4004014	      1878	coffcode.h	FUNCTION_31	IF_1	IF_2
0x4004000	      0xba00000000	                              mov edx, 0	      1880	coffcode.h	FUNCTION_31	IF_1	CALL_4
0x4004005	      0xbe58070000	                          mov esi, 0x758	      1880	coffcode.h	FUNCTION_31	IF_1	CALL_4
0x400400a	      0xbf00000000	                              mov edi, 0	      1880	coffcode.h	FUNCTION_31	IF_1	CALL_4
0x400400f	      0xe800000000	                          call 0x4004014	      1880	coffcode.h	FUNCTION_31	IF_1	CALL_4
0x4004014	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1883	coffcode.h	FUNCTION_31	IF_3	CALL_5
0x400401b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1883	coffcode.h	FUNCTION_31	IF_3	CALL_5
0x4004022	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1883	coffcode.h	FUNCTION_31	IF_3	CALL_5
0x4004026	          0x4885c0	                           test rax, rax	      1883	coffcode.h	FUNCTION_31	IF_3	CALL_5
0x4004029	            0x755b	                           jne 0x4004086	      1883	coffcode.h	FUNCTION_31	IF_3	CALL_5
0x400402b	    0x48c745981000	           mov qword [rbp - 0x68], 0x10 	      1885	coffcode.h	FUNCTION_31	IF_3
0x4004033	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x400403a	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x4004041	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x4004045	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x400404c	          0x4889d6	                            mov rsi, rdx	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x400404f	          0x4889c7	                            mov rdi, rax	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x4004052	      0xe800000000	                          call 0x4004057	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x4004057	        0x48894358	             mov qword [rbx + 0x58], rax	      1886	coffcode.h	FUNCTION_31	IF_3	CALL_7
0x400405b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1887	coffcode.h	FUNCTION_31	IF_3	IF_4	CALL_8
0x4004062	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1887	coffcode.h	FUNCTION_31	IF_3	IF_4	CALL_8
0x4004069	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1887	coffcode.h	FUNCTION_31	IF_3	IF_4	CALL_8
0x400406d	          0x4885c0	                           test rax, rax	      1887	coffcode.h	FUNCTION_31	IF_3	IF_4	CALL_8
0x4004070	            0x7514	                           jne 0x4004086	      1887	coffcode.h	FUNCTION_31	IF_3	IF_4	CALL_8
0x4004072	      0xba00000000	                              mov edx, 0	      1889	coffcode.h	FUNCTION_31	IF_3	CALL_9
0x4004077	      0xbe61070000	                          mov esi, 0x761	      1889	coffcode.h	FUNCTION_31	IF_3	CALL_9
0x400407c	      0xbf00000000	                              mov edi, 0	      1889	coffcode.h	FUNCTION_31	IF_3	CALL_9
0x4004081	      0xe800000000	                          call 0x4004086	      1889	coffcode.h	FUNCTION_31	IF_3	CALL_9
0x4004086	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1891	coffcode.h	FUNCTION_31	CALL_10
0x400408d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1891	coffcode.h	FUNCTION_31	CALL_10
0x4004094	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1891	coffcode.h	FUNCTION_31	CALL_10
0x4004098	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1891	coffcode.h	FUNCTION_31	CALL_10
0x400409c	        0x488b5208	                mov rdx, qword [rdx + 8]	      1891	coffcode.h	FUNCTION_31	CALL_10
0x40040a0	          0x488910	                    mov qword [rax], rdx	      1891	coffcode.h	FUNCTION_31	CALL_10
0x40040a3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1892	coffcode.h	FUNCTION_31	CALL_11
0x40040aa	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1892	coffcode.h	FUNCTION_31	CALL_11
0x40040b1	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1892	coffcode.h	FUNCTION_31	CALL_11
0x40040b5	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1892	coffcode.h	FUNCTION_31	CALL_11
0x40040b9	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      1892	coffcode.h	FUNCTION_31	CALL_11
0x40040bd	        0x48895008	                mov qword [rax + 8], rdx	      1892	coffcode.h	FUNCTION_31	CALL_11
0x40040c1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1894	coffcode.h	FUNCTION_31
0x40040c5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1894	coffcode.h	FUNCTION_31
0x40040c9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1894	coffcode.h	FUNCTION_31
0x40040d0	        0x48895030	             mov qword [rax + 0x30], rdx	      1894	coffcode.h	FUNCTION_31
0x40040d4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1897	coffcode.h	FUNCTION_31	IF_5
0x40040d8	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1897	coffcode.h	FUNCTION_31	IF_5
0x40040dc	      0x2500000001	                      and eax, 0x1000000	      1897	coffcode.h	FUNCTION_31	IF_5
0x40040e1	          0x4885c0	                           test rax, rax	      1897	coffcode.h	FUNCTION_31	IF_5
0x40040e4	     0xf840b010000	                            je 0x40041f5	      1897	coffcode.h	FUNCTION_31	IF_5
0x40040ea	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1901	coffcode.h	FUNCTION_31	IF_5	CALL_12
0x40040f1	          0x4889c7	                            mov rdi, rax	      1901	coffcode.h	FUNCTION_31	IF_5	CALL_12
0x40040f4	      0xe800000000	                          call 0x40040f9	      1901	coffcode.h	FUNCTION_31	IF_5	CALL_12
0x40040f9	        0x488945a0	             mov qword [rbp - 0x60], rax	      1901	coffcode.h	FUNCTION_31	IF_5	CALL_12
0x40040fd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1902	coffcode.h	FUNCTION_31	IF_5	CALL_13
0x4004104	        0x488b4008	                mov rax, qword [rax + 8]	      1902	coffcode.h	FUNCTION_31	IF_5	CALL_13
0x4004108	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1902	coffcode.h	FUNCTION_31	IF_5	CALL_13
0x400410f	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1902	coffcode.h	FUNCTION_31	IF_5	CALL_13
0x4004112	            0x89c0	                            mov eax, eax	      1902	coffcode.h	FUNCTION_31	IF_5	CALL_13
0x4004114	        0x488945a8	             mov qword [rbp - 0x58], rax	      1902	coffcode.h	FUNCTION_31	IF_5	CALL_13
0x4004118	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x400411c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x4004120	          0x4889c1	                            mov rcx, rax	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x4004123	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x400412a	      0xba00000000	                              mov edx, 0	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x400412f	          0x4889ce	                            mov rsi, rcx	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x4004132	          0x4889c7	                            mov rdi, rax	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x4004135	      0xe800000000	                          call 0x400413a	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x400413a	            0x85c0	                           test eax, eax	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x400413c	     0xf85ee000000	                           jne 0x4004230	      1904	coffcode.h	FUNCTION_31	IF_5	IF_6	CALL_14
0x4004142	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x4004149	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x400414d	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x4004151	          0x4889ce	                            mov rsi, rcx	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x4004154	          0x4889c7	                            mov rdi, rax	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x4004157	      0xe800000000	                          call 0x400415c	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x400415c	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x4004160	     0xf85cd000000	                           jne 0x4004233	      1906	coffcode.h	FUNCTION_31	IF_5	IF_7	CALL_15
0x4004166	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1909	coffcode.h	FUNCTION_31	IF_5	CALL_16
0x400416a	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1909	coffcode.h	FUNCTION_31	IF_5	CALL_16
0x400416e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1909	coffcode.h	FUNCTION_31	IF_5	CALL_16
0x4004175	          0x4889ce	                            mov rsi, rcx	      1909	coffcode.h	FUNCTION_31	IF_5	CALL_16
0x4004178	          0x4889c7	                            mov rdi, rax	      1909	coffcode.h	FUNCTION_31	IF_5	CALL_16
0x400417b	      0xe849c6ffff	             call sym.coff_swap_reloc_in	      1909	coffcode.h	FUNCTION_31	IF_5	CALL_16
0x4004180	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x4004184	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x400418b	      0xba00000000	                              mov edx, 0	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x4004190	          0x4889ce	                            mov rsi, rcx	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x4004193	          0x4889c7	                            mov rdi, rax	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x4004196	      0xe800000000	                          call 0x400419b	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x400419b	            0x85c0	                           test eax, eax	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x400419d	     0xf8593000000	                           jne 0x4004236	      1910	coffcode.h	FUNCTION_31	IF_5	IF_8	CALL_17
0x40041a3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041a7	        0x488d50ff	                      lea rdx, [rax - 1]	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041ab	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041af	        0x48895038	             mov qword [rax + 0x38], rdx	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041b3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041b7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041bb	            0x89c2	                            mov edx, eax	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041bd	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041c4	    0x899088000000	             mov dword [rax + 0x88], edx	      1912	coffcode.h	FUNCTION_31	IF_5
0x40041ca	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041d1	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041d8	          0x4889c2	                            mov rdx, rax	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041df	          0x4801d0	                            add rax, rdx	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041e2	          0x4889c2	                            mov rdx, rax	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041e5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041ec	    0x488990980000	             mov qword [rax + 0x98], rdx	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041f3	            0xeb42	                           jmp 0x4004237	      1913	coffcode.h	FUNCTION_31	IF_5
0x40041f5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1915	coffcode.h	FUNCTION_31	ELSE_1	IF_9
0x40041f9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1915	coffcode.h	FUNCTION_31	ELSE_1	IF_9
0x40041fd	    0x483dffff0000	                         cmp rax, 0xffff	      1915	coffcode.h	FUNCTION_31	ELSE_1	IF_9
0x4004203	            0x7532	                           jne 0x4004237	      1915	coffcode.h	FUNCTION_31	ELSE_1	IF_9
0x4004205	      0xbe00000000	                              mov esi, 0	      1917	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_19
0x400420a	      0xbf00000000	                              mov edi, 0	      1917	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_19
0x400420f	      0xe800000000	                          call 0x4004214	      1917	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_19
0x4004214	          0x4889c2	                            mov rdx, rax	      1917	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_19
0x4004217	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1916	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_18
0x400421e	          0x4889c6	                            mov rsi, rax	      1916	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_18
0x4004221	          0x4889d7	                            mov rdi, rdx	      1916	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_18
0x4004224	      0xb800000000	                              mov eax, 0	      1916	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_18
0x4004229	      0xe800000000	                          call 0x400422e	      1916	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_18
0x400422e	            0xeb07	                           jmp 0x4004237	      1916	coffcode.h	FUNCTION_31	ELSE_1	IF_9	CALL_18
0x4004230	              0x90	                                     nop	      1905	coffcode.h	FUNCTION_31	IF_5	IF_6
0x4004231	            0xeb04	                           jmp 0x4004237	      1905	coffcode.h	FUNCTION_31	IF_5	IF_6
0x4004233	              0x90	                                     nop	      1907	coffcode.h	FUNCTION_31	IF_5	IF_7
0x4004234	            0xeb01	                           jmp 0x4004237	      1907	coffcode.h	FUNCTION_31	IF_5	IF_7
0x4004236	              0x90	                                     nop	      1911	coffcode.h	FUNCTION_31	IF_5	IF_8
0x4004237	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1919	coffcode.h	FUNCTION_31
0x400423b	    0x644833042528	                xor rax, qword fs:[0x28]	      1919	coffcode.h	FUNCTION_31
0x4004244	            0x7405	                            je 0x400424b	      1919	coffcode.h	FUNCTION_31
0x4004246	      0xe800000000	                          call 0x400424b	      1919	coffcode.h	FUNCTION_31
0x400424b	    0x4881c4980000	                           add rsp, 0x98	      1919	coffcode.h	FUNCTION_31
0x4004252	              0x5b	                                 pop rbx	      1919	coffcode.h	FUNCTION_31
0x4004253	              0x5d	                                 pop rbp	      1919	coffcode.h	FUNCTION_31
0x4004254	              0xc3	                                     ret	      1919	coffcode.h	FUNCTION_31
pe_ILF_make_a_section	IF,3:CALL,9:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	142
0x400156f	              0x55	                                push rbp	       601	peicode.h	FUNCTION_13
0x4001570	          0x4889e5	                            mov rbp, rsp	       601	peicode.h	FUNCTION_13
0x4001573	        0x4883ec30	                           sub rsp, 0x30	       601	peicode.h	FUNCTION_13
0x4001577	        0x48897de8	             mov qword [rbp - 0x18], rdi	       601	peicode.h	FUNCTION_13
0x400157b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       601	peicode.h	FUNCTION_13
0x400157f	          0x8955dc	             mov dword [rbp - 0x24], edx	       601	peicode.h	FUNCTION_13
0x4001582	          0x894dd8	             mov dword [rbp - 0x28], ecx	       601	peicode.h	FUNCTION_13
0x4001585	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       605	peicode.h	FUNCTION_13	CALL_1
0x4001589	          0x488b00	                    mov rax, qword [rax]	       605	peicode.h	FUNCTION_13	CALL_1
0x400158c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       605	peicode.h	FUNCTION_13	CALL_1
0x4001590	          0x4889d6	                            mov rsi, rdx	       605	peicode.h	FUNCTION_13	CALL_1
0x4001593	          0x4889c7	                            mov rdi, rax	       605	peicode.h	FUNCTION_13	CALL_1
0x4001596	      0xe800000000	                          call 0x400159b	       605	peicode.h	FUNCTION_13	CALL_1
0x400159b	        0x488945f8	                mov qword [rbp - 8], rax	       605	peicode.h	FUNCTION_13	CALL_1
0x400159f	      0x48837df800	                  cmp qword [rbp - 8], 0	       606	peicode.h	FUNCTION_13	IF_1
0x40015a4	            0x750a	                           jne 0x40015b0	       606	peicode.h	FUNCTION_13	IF_1
0x40015a6	      0xb800000000	                              mov eax, 0	       607	peicode.h	FUNCTION_13	IF_1
0x40015ab	      0xe9cb010000	                           jmp 0x400177b	       607	peicode.h	FUNCTION_13	IF_1
0x40015b0	    0xc745f0034120	        mov dword [rbp - 0x10], 0x204103	       609	peicode.h	FUNCTION_13
0x40015b7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       611	peicode.h	FUNCTION_13	CALL_2
0x40015ba	           0xb45d8	              or eax, dword [rbp - 0x28]	       611	peicode.h	FUNCTION_13	CALL_2
0x40015bd	            0x89c2	                            mov edx, eax	       611	peicode.h	FUNCTION_13	CALL_2
0x40015bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       611	peicode.h	FUNCTION_13	CALL_2
0x40015c3	          0x488b00	                    mov rax, qword [rax]	       611	peicode.h	FUNCTION_13	CALL_2
0x40015c6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       611	peicode.h	FUNCTION_13	CALL_2
0x40015ca	          0x4889ce	                            mov rsi, rcx	       611	peicode.h	FUNCTION_13	CALL_2
0x40015cd	          0x4889c7	                            mov rdi, rax	       611	peicode.h	FUNCTION_13	CALL_2
0x40015d0	      0xe800000000	                          call 0x40015d5	       611	peicode.h	FUNCTION_13	CALL_2
0x40015d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       613	peicode.h	FUNCTION_13	CALL_3
0x40015d9	          0x488b00	                    mov rax, qword [rax]	       613	peicode.h	FUNCTION_13	CALL_3
0x40015dc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       613	peicode.h	FUNCTION_13	CALL_3
0x40015e0	      0xba02000000	                              mov edx, 2	       613	peicode.h	FUNCTION_13	CALL_3
0x40015e5	          0x4889ce	                            mov rsi, rcx	       613	peicode.h	FUNCTION_13	CALL_3
0x40015e8	          0x4889c7	                            mov rdi, rax	       613	peicode.h	FUNCTION_13	CALL_3
0x40015eb	      0xe891eaffff	      call sym.bfd_set_section_alignment	       613	peicode.h	FUNCTION_13	CALL_3
0x40015f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	peicode.h	FUNCTION_13	CALL_4
0x40015f4	        0x488b5008	                mov rdx, qword [rax + 8]	       616	peicode.h	FUNCTION_13	CALL_4
0x40015f8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       616	peicode.h	FUNCTION_13	CALL_4
0x40015fb	        0x488d0c02	                    lea rcx, [rdx + rax]	       616	peicode.h	FUNCTION_13	CALL_4
0x40015ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	peicode.h	FUNCTION_13	CALL_4
0x4001603	        0x488b4010	            mov rax, qword [rax + 0x10] 	       616	peicode.h	FUNCTION_13	CALL_4
0x4001607	        0x488b5008	                mov rdx, qword [rax + 8]	       616	peicode.h	FUNCTION_13	CALL_4
0x400160b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	peicode.h	FUNCTION_13	CALL_4
0x400160f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       616	peicode.h	FUNCTION_13	CALL_4
0x4001613	          0x488b00	                    mov rax, qword [rax]	       616	peicode.h	FUNCTION_13	CALL_4
0x4001616	          0x4801d0	                            add rax, rdx	       616	peicode.h	FUNCTION_13	CALL_4
0x4001619	          0x4839c1	                            cmp rcx, rax	       616	peicode.h	FUNCTION_13	CALL_4
0x400161c	            0x720f	                            jb 0x400162d	       616	peicode.h	FUNCTION_13	CALL_4
0x400161e	      0xbe68020000	                          mov esi, 0x268	       616	peicode.h	FUNCTION_13	CALL_4
0x4001623	      0xbf00000000	                              mov edi, 0	       616	peicode.h	FUNCTION_13	CALL_4
0x4001628	      0xe800000000	                          call 0x400162d	       616	peicode.h	FUNCTION_13	CALL_4
0x400162d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       620	peicode.h	FUNCTION_13	CALL_5
0x4001630	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       620	peicode.h	FUNCTION_13	CALL_5
0x4001634	          0x488b00	                    mov rax, qword [rax]	       620	peicode.h	FUNCTION_13	CALL_5
0x4001637	        0x488b4df8	                mov rcx, qword [rbp - 8]	       620	peicode.h	FUNCTION_13	CALL_5
0x400163b	          0x4889ce	                            mov rsi, rcx	       620	peicode.h	FUNCTION_13	CALL_5
0x400163e	          0x4889c7	                            mov rdi, rax	       620	peicode.h	FUNCTION_13	CALL_5
0x4001641	      0xe800000000	                          call 0x4001646	       620	peicode.h	FUNCTION_13	CALL_5
0x4001646	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       621	peicode.h	FUNCTION_13
0x400164a	        0x488b5008	                mov rdx, qword [rax + 8]	       621	peicode.h	FUNCTION_13
0x400164e	        0x488b45f8	                mov rax, qword [rbp - 8]	       621	peicode.h	FUNCTION_13
0x4001652	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       621	peicode.h	FUNCTION_13
0x4001659	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	peicode.h	FUNCTION_13
0x400165d	          0x8b4078	            mov eax, dword [rax + 0x78] 	       622	peicode.h	FUNCTION_13
0x4001660	          0x8d4801	                      lea ecx, [rax + 1]	       622	peicode.h	FUNCTION_13
0x4001663	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       622	peicode.h	FUNCTION_13
0x4001667	          0x894a78	             mov dword [rdx + 0x78], ecx	       622	peicode.h	FUNCTION_13
0x400166a	            0x89c2	                            mov edx, eax	       622	peicode.h	FUNCTION_13
0x400166c	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	peicode.h	FUNCTION_13
0x4001670	    0x8990d8000000	             mov dword [rax + 0xd8], edx	       622	peicode.h	FUNCTION_13
0x4001676	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       625	peicode.h	FUNCTION_13
0x400167a	        0x488b5008	                mov rdx, qword [rax + 8]	       625	peicode.h	FUNCTION_13
0x400167e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       625	peicode.h	FUNCTION_13
0x4001681	          0x4801c2	                            add rdx, rax	       625	peicode.h	FUNCTION_13
0x4001684	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       625	peicode.h	FUNCTION_13
0x4001688	        0x48895008	                mov qword [rax + 8], rdx	       625	peicode.h	FUNCTION_13
0x400168c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       631	peicode.h	FUNCTION_13	IF_2
0x400168f	          0x83e001	                              and eax, 1	       631	peicode.h	FUNCTION_13	IF_2
0x4001692	            0x85c0	                           test eax, eax	       631	peicode.h	FUNCTION_13	IF_2
0x4001694	            0x7414	                            je 0x40016aa	       631	peicode.h	FUNCTION_13	IF_2
0x4001696	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       632	peicode.h	FUNCTION_13	IF_2
0x400169a	        0x488b4008	                mov rax, qword [rax + 8]	       632	peicode.h	FUNCTION_13	IF_2
0x400169e	        0x488d50ff	                      lea rdx, [rax - 1]	       632	peicode.h	FUNCTION_13	IF_2
0x40016a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       632	peicode.h	FUNCTION_13	IF_2
0x40016a6	        0x48895008	                mov qword [rax + 8], rdx	       632	peicode.h	FUNCTION_13	IF_2
0x40016aa	    0xc745f4080000	                mov dword [rbp - 0xc], 8	       642	peicode.h	FUNCTION_13	CALL_6
0x40016b1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       644	peicode.h	FUNCTION_13	IF_3
0x40016b4	          0x83e801	                              sub eax, 1	       644	peicode.h	FUNCTION_13	IF_3
0x40016b7	          0x2345dc	             and eax, dword [rbp - 0x24]	       644	peicode.h	FUNCTION_13	IF_3
0x40016ba	            0x85c0	                           test eax, eax	       644	peicode.h	FUNCTION_13	IF_3
0x40016bc	            0x7425	                            je 0x40016e3	       644	peicode.h	FUNCTION_13	IF_3
0x40016be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	peicode.h	FUNCTION_13	IF_3
0x40016c2	        0x488b4008	                mov rax, qword [rax + 8]	       645	peicode.h	FUNCTION_13	IF_3
0x40016c6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       645	peicode.h	FUNCTION_13	IF_3
0x40016c9	          0x83ea01	                              sub edx, 1	       645	peicode.h	FUNCTION_13	IF_3
0x40016cc	          0x2355dc	             and edx, dword [rbp - 0x24]	       645	peicode.h	FUNCTION_13	IF_3
0x40016cf	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       645	peicode.h	FUNCTION_13	IF_3
0x40016d2	            0x29d1	                            sub ecx, edx	       645	peicode.h	FUNCTION_13	IF_3
0x40016d4	            0x89ca	                            mov edx, ecx	       645	peicode.h	FUNCTION_13	IF_3
0x40016d6	            0x89d2	                            mov edx, edx	       645	peicode.h	FUNCTION_13	IF_3
0x40016d8	          0x4801c2	                            add rdx, rax	       645	peicode.h	FUNCTION_13	IF_3
0x40016db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	peicode.h	FUNCTION_13	IF_3
0x40016df	        0x48895008	                mov qword [rax + 8], rdx	       645	peicode.h	FUNCTION_13	IF_3
0x40016e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	peicode.h	FUNCTION_13
0x40016e7	        0x488b5008	                mov rdx, qword [rax + 8]	       649	peicode.h	FUNCTION_13
0x40016eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	peicode.h	FUNCTION_13
0x40016ef	    0x488990e00000	             mov qword [rax + 0xe0], rdx	       649	peicode.h	FUNCTION_13
0x40016f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	peicode.h	FUNCTION_13
0x40016fa	        0x488b4008	                mov rax, qword [rax + 8]	       650	peicode.h	FUNCTION_13
0x40016fe	        0x488d5060	                   lea rdx, [rax + 0x60]	       650	peicode.h	FUNCTION_13
0x4001702	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	peicode.h	FUNCTION_13
0x4001706	        0x48895008	                mov qword [rax + 8], rdx	       650	peicode.h	FUNCTION_13
0x400170a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	peicode.h	FUNCTION_13	CALL_7
0x400170e	        0x488b5008	                mov rdx, qword [rax + 8]	       652	peicode.h	FUNCTION_13	CALL_7
0x4001712	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	peicode.h	FUNCTION_13	CALL_7
0x4001716	        0x488b4010	            mov rax, qword [rax + 0x10] 	       652	peicode.h	FUNCTION_13	CALL_7
0x400171a	        0x488b4808	                mov rcx, qword [rax + 8]	       652	peicode.h	FUNCTION_13	CALL_7
0x400171e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	peicode.h	FUNCTION_13	CALL_7
0x4001722	        0x488b4010	            mov rax, qword [rax + 0x10] 	       652	peicode.h	FUNCTION_13	CALL_7
0x4001726	          0x488b00	                    mov rax, qword [rax]	       652	peicode.h	FUNCTION_13	CALL_7
0x4001729	          0x4801c8	                            add rax, rcx	       652	peicode.h	FUNCTION_13	CALL_7
0x400172c	          0x4839c2	                            cmp rdx, rax	       652	peicode.h	FUNCTION_13	CALL_7
0x400172f	            0x760f	                           jbe 0x4001740	       652	peicode.h	FUNCTION_13	CALL_7
0x4001731	      0xbe8c020000	                          mov esi, 0x28c	       652	peicode.h	FUNCTION_13	CALL_7
0x4001736	      0xbf00000000	                              mov edi, 0	       652	peicode.h	FUNCTION_13	CALL_7
0x400173b	      0xe800000000	                          call 0x4001740	       652	peicode.h	FUNCTION_13	CALL_7
0x4001740	        0x488b4df8	                mov rcx, qword [rbp - 8]	       655	peicode.h	FUNCTION_13	CALL_8
0x4001744	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       655	peicode.h	FUNCTION_13	CALL_8
0x4001748	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       655	peicode.h	FUNCTION_13	CALL_8
0x400174c	    0x41b801000000	                              mov r8d, 1	       655	peicode.h	FUNCTION_13	CALL_8
0x4001752	      0xbe00000000	                              mov esi, 0	       655	peicode.h	FUNCTION_13	CALL_8
0x4001757	          0x4889c7	                            mov rdi, rax	       655	peicode.h	FUNCTION_13	CALL_8
0x400175a	      0xe85efbffff	           call sym.pe_ILF_make_a_symbol	       655	peicode.h	FUNCTION_13	CALL_8
0x400175f	        0x488b45f8	                mov rax, qword [rbp - 8]	       658	peicode.h	FUNCTION_13	CALL_9
0x4001763	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       658	peicode.h	FUNCTION_13	CALL_9
0x400176a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       658	peicode.h	FUNCTION_13	CALL_9
0x400176e	          0x8b5240	            mov edx, dword [rdx + 0x40] 	       658	peicode.h	FUNCTION_13	CALL_9
0x4001771	          0x83ea01	                              sub edx, 1	       658	peicode.h	FUNCTION_13	CALL_9
0x4001774	          0x895030	             mov dword [rax + 0x30], edx	       658	peicode.h	FUNCTION_13	CALL_9
0x4001777	        0x488b45f8	                mov rax, qword [rbp - 8]	       660	peicode.h	FUNCTION_13
0x400177b	              0xc9	                                   leave	       661	peicode.h	FUNCTION_13
0x400177c	              0xc3	                                     ret	       661	peicode.h	FUNCTION_13
pe_ILF_make_a_symbol	IF,5:CALL,5:ELSE,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	176
0x40012bd	              0x55	                                push rbp	       523	peicode.h	FUNCTION_12
0x40012be	          0x4889e5	                            mov rbp, rsp	       523	peicode.h	FUNCTION_12
0x40012c1	            0x4154	                                push r12	       523	peicode.h	FUNCTION_12
0x40012c3	              0x53	                                push rbx	       523	peicode.h	FUNCTION_12
0x40012c4	        0x4883ec50	                           sub rsp, 0x50	       523	peicode.h	FUNCTION_12
0x40012c8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       523	peicode.h	FUNCTION_12
0x40012cc	        0x488975c0	             mov qword [rbp - 0x40], rsi	       523	peicode.h	FUNCTION_12
0x40012d0	        0x488955b8	             mov qword [rbp - 0x48], rdx	       523	peicode.h	FUNCTION_12
0x40012d4	        0x48894db0	             mov qword [rbp - 0x50], rcx	       523	peicode.h	FUNCTION_12
0x40012d8	        0x448945ac	             mov dword [rbp - 0x54], r8d	       523	peicode.h	FUNCTION_12
0x40012dc	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       529	peicode.h	FUNCTION_12	IF_1
0x40012df	          0x83e001	                              and eax, 1	       529	peicode.h	FUNCTION_12	IF_1
0x40012e2	            0x85c0	                           test eax, eax	       529	peicode.h	FUNCTION_12	IF_1
0x40012e4	            0x7408	                            je 0x40012ee	       529	peicode.h	FUNCTION_12	IF_1
0x40012e6	    0x66c745d60300	                mov word [rbp - 0x2a], 3	       530	peicode.h	FUNCTION_12	IF_1
0x40012ec	            0xeb06	                           jmp 0x40012f4	       530	peicode.h	FUNCTION_12	IF_1
0x40012ee	    0x66c745d60200	                mov word [rbp - 0x2a], 2	       532	peicode.h	FUNCTION_12	ELSE_1
0x40012f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       546	peicode.h	FUNCTION_12	CALL_1
0x40012f8	          0x8b4040	            mov eax, dword [rax + 0x40] 	       546	peicode.h	FUNCTION_12	CALL_1
0x40012fb	          0x83f807	                              cmp eax, 7	       546	peicode.h	FUNCTION_12	CALL_1
0x40012fe	            0x760f	                           jbe 0x400130f	       546	peicode.h	FUNCTION_12	CALL_1
0x4001300	      0xbe22020000	                          mov esi, 0x222	       546	peicode.h	FUNCTION_12	CALL_1
0x4001305	      0xbf00000000	                              mov edi, 0	       546	peicode.h	FUNCTION_12	CALL_1
0x400130a	      0xe800000000	                          call 0x400130f	       546	peicode.h	FUNCTION_12	CALL_1
0x400130f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       548	peicode.h	FUNCTION_12
0x4001313	        0x488b4038	            mov rax, qword [rax + 0x38] 	       548	peicode.h	FUNCTION_12
0x4001317	        0x488945d8	             mov qword [rbp - 0x28], rax	       548	peicode.h	FUNCTION_12
0x400131b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	peicode.h	FUNCTION_12
0x400131f	        0x488b4060	            mov rax, qword [rax + 0x60] 	       549	peicode.h	FUNCTION_12
0x4001323	        0x488945e0	             mov qword [rbp - 0x20], rax	       549	peicode.h	FUNCTION_12
0x4001327	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       550	peicode.h	FUNCTION_12
0x400132b	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       550	peicode.h	FUNCTION_12
0x4001332	        0x488945e8	             mov qword [rbp - 0x18], rax	       550	peicode.h	FUNCTION_12
0x4001336	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       553	peicode.h	FUNCTION_12	CALL_2
0x400133a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       553	peicode.h	FUNCTION_12	CALL_2
0x4001341	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       553	peicode.h	FUNCTION_12	CALL_2
0x4001345	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       553	peicode.h	FUNCTION_12	CALL_2
0x4001349	      0xbe00000000	                              mov esi, 0	       553	peicode.h	FUNCTION_12	CALL_2
0x400134e	          0x4889c7	                            mov rdi, rax	       553	peicode.h	FUNCTION_12	CALL_2
0x4001351	      0xb800000000	                              mov eax, 0	       553	peicode.h	FUNCTION_12	CALL_2
0x4001356	      0xe800000000	                          call 0x400135b	       553	peicode.h	FUNCTION_12	CALL_2
0x400135b	      0x48837db000	               cmp qword [rbp - 0x50], 0	       555	peicode.h	FUNCTION_12	IF_5
0x4001360	            0x7508	                           jne 0x400136a	       555	peicode.h	FUNCTION_12	IF_5
0x4001362	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       556	peicode.h	FUNCTION_12	IF_5
0x400136a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       559	peicode.h	FUNCTION_12
0x400136e	          0x488b00	                    mov rax, qword [rax]	       559	peicode.h	FUNCTION_12
0x4001371	        0x488b4008	                mov rax, qword [rax + 8]	       559	peicode.h	FUNCTION_12
0x4001375	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       559	peicode.h	FUNCTION_12
0x400137c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       559	peicode.h	FUNCTION_12
0x4001380	        0x488d4a04	                      lea rcx, [rdx + 4]	       559	peicode.h	FUNCTION_12
0x4001384	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       559	peicode.h	FUNCTION_12
0x4001388	    0x488b92880000	            mov rdx, qword [rdx + 0x88] 	       559	peicode.h	FUNCTION_12
0x400138f	          0x4889d6	                            mov rsi, rdx	       559	peicode.h	FUNCTION_12
0x4001392	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       559	peicode.h	FUNCTION_12
0x4001396	    0x488b92800000	            mov rdx, qword [rdx + 0x80] 	       559	peicode.h	FUNCTION_12
0x400139d	          0x4829d6	                            sub rsi, rdx	       559	peicode.h	FUNCTION_12
0x40013a0	          0x4889f2	                            mov rdx, rsi	       559	peicode.h	FUNCTION_12
0x40013a3	          0x4889ce	                            mov rsi, rcx	       559	peicode.h	FUNCTION_12
0x40013a6	          0x4889d7	                            mov rdi, rdx	       559	peicode.h	FUNCTION_12
0x40013a9	            0xffd0	                                call rax	       559	peicode.h	FUNCTION_12
0x40013ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       561	peicode.h	FUNCTION_12
0x40013af	          0x488b00	                    mov rax, qword [rax]	       561	peicode.h	FUNCTION_12
0x40013b2	        0x488b4008	                mov rax, qword [rax + 8]	       561	peicode.h	FUNCTION_12
0x40013b6	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       561	peicode.h	FUNCTION_12
0x40013bd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       561	peicode.h	FUNCTION_12
0x40013c1	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       561	peicode.h	FUNCTION_12
0x40013c5	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       561	peicode.h	FUNCTION_12
0x40013c9	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	       561	peicode.h	FUNCTION_12
0x40013cf	          0x4863d2	                         movsxd rdx, edx	       561	peicode.h	FUNCTION_12
0x40013d2	          0x4889ce	                            mov rsi, rcx	       561	peicode.h	FUNCTION_12
0x40013d5	          0x4889d7	                            mov rdi, rdx	       561	peicode.h	FUNCTION_12
0x40013d8	            0xffd0	                                call rax	       561	peicode.h	FUNCTION_12
0x40013da	         0xfb745d6	            movzx eax, word [rbp - 0x2a]	       562	peicode.h	FUNCTION_12
0x40013de	            0x89c2	                            mov edx, eax	       562	peicode.h	FUNCTION_12
0x40013e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	peicode.h	FUNCTION_12
0x40013e4	          0x885010	               mov byte [rax + 0x10], dl	       562	peicode.h	FUNCTION_12
0x40013e7	         0xfb745d6	            movzx eax, word [rbp - 0x2a]	       568	peicode.h	FUNCTION_12
0x40013eb	            0x89c2	                            mov edx, eax	       568	peicode.h	FUNCTION_12
0x40013ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       568	peicode.h	FUNCTION_12
0x40013f1	          0x885028	               mov byte [rax + 0x28], dl	       568	peicode.h	FUNCTION_12
0x40013f4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       569	peicode.h	FUNCTION_12
0x40013f8	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	       569	peicode.h	FUNCTION_12
0x40013fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       569	peicode.h	FUNCTION_12
0x4001402	          0x895020	             mov dword [rax + 0x20], edx	       569	peicode.h	FUNCTION_12
0x4001405	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       570	peicode.h	FUNCTION_12
0x4001409	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       570	peicode.h	FUNCTION_12
0x400140d	        0x48895010	             mov qword [rax + 0x10], rdx	       570	peicode.h	FUNCTION_12
0x4001411	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       571	peicode.h	FUNCTION_12
0x4001415	    0xc74030010000	               mov dword [rax + 0x30], 1	       571	peicode.h	FUNCTION_12
0x400141c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       573	peicode.h	FUNCTION_12
0x4001420	          0x488b10	                    mov rdx, qword [rax]	       573	peicode.h	FUNCTION_12
0x4001423	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       573	peicode.h	FUNCTION_12
0x4001427	          0x488910	                    mov qword [rax], rdx	       573	peicode.h	FUNCTION_12
0x400142a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       574	peicode.h	FUNCTION_12
0x400142e	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	       574	peicode.h	FUNCTION_12
0x4001435	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       574	peicode.h	FUNCTION_12
0x4001439	        0x48895008	                mov qword [rax + 8], rdx	       574	peicode.h	FUNCTION_12
0x400143d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       575	peicode.h	FUNCTION_12
0x4001440	          0x83c802	                               or eax, 2	       575	peicode.h	FUNCTION_12
0x4001443	            0x89c2	                            mov edx, eax	       575	peicode.h	FUNCTION_12
0x4001445	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       575	peicode.h	FUNCTION_12
0x4001449	          0x895018	             mov dword [rax + 0x18], edx	       575	peicode.h	FUNCTION_12
0x400144c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       576	peicode.h	FUNCTION_12
0x4001450	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       576	peicode.h	FUNCTION_12
0x4001454	        0x48895020	             mov qword [rax + 0x20], rdx	       576	peicode.h	FUNCTION_12
0x4001458	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       577	peicode.h	FUNCTION_12
0x400145c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       577	peicode.h	FUNCTION_12
0x4001460	        0x48895030	             mov qword [rax + 0x30], rdx	       577	peicode.h	FUNCTION_12
0x4001464	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       579	peicode.h	FUNCTION_12
0x4001468	        0x488b4050	            mov rax, qword [rax + 0x50] 	       579	peicode.h	FUNCTION_12
0x400146c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       579	peicode.h	FUNCTION_12
0x4001470	          0x8b5240	            mov edx, dword [rdx + 0x40] 	       579	peicode.h	FUNCTION_12
0x4001473	            0x8910	                    mov dword [rax], edx	       579	peicode.h	FUNCTION_12
0x4001475	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       580	peicode.h	FUNCTION_12
0x4001479	        0x488b4070	            mov rax, qword [rax + 0x70] 	       580	peicode.h	FUNCTION_12
0x400147d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       580	peicode.h	FUNCTION_12
0x4001481	          0x488910	                    mov qword [rax], rdx	       580	peicode.h	FUNCTION_12
0x4001484	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       583	peicode.h	FUNCTION_12
0x4001488	          0x8b4040	            mov eax, dword [rax + 0x40] 	       583	peicode.h	FUNCTION_12
0x400148b	          0x8d5001	                      lea edx, [rax + 1]	       583	peicode.h	FUNCTION_12
0x400148e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       583	peicode.h	FUNCTION_12
0x4001492	          0x895040	             mov dword [rax + 0x40], edx	       583	peicode.h	FUNCTION_12
0x4001495	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       584	peicode.h	FUNCTION_12
0x4001499	        0x488b4038	            mov rax, qword [rax + 0x38] 	       584	peicode.h	FUNCTION_12
0x400149d	        0x488d5048	                   lea rdx, [rax + 0x48]	       584	peicode.h	FUNCTION_12
0x40014a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       584	peicode.h	FUNCTION_12
0x40014a5	        0x48895038	             mov qword [rax + 0x38], rdx	       584	peicode.h	FUNCTION_12
0x40014a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       585	peicode.h	FUNCTION_12
0x40014ad	        0x488b4070	            mov rax, qword [rax + 0x70] 	       585	peicode.h	FUNCTION_12
0x40014b1	        0x488d5008	                      lea rdx, [rax + 8]	       585	peicode.h	FUNCTION_12
0x40014b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       585	peicode.h	FUNCTION_12
0x40014b9	        0x48895070	             mov qword [rax + 0x70], rdx	       585	peicode.h	FUNCTION_12
0x40014bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       586	peicode.h	FUNCTION_12
0x40014c1	        0x488b4050	            mov rax, qword [rax + 0x50] 	       586	peicode.h	FUNCTION_12
0x40014c5	        0x488d5004	                      lea rdx, [rax + 4]	       586	peicode.h	FUNCTION_12
0x40014c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       586	peicode.h	FUNCTION_12
0x40014cd	        0x48895050	             mov qword [rax + 0x50], rdx	       586	peicode.h	FUNCTION_12
0x40014d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	peicode.h	FUNCTION_12
0x40014d5	        0x488b4060	            mov rax, qword [rax + 0x60] 	       587	peicode.h	FUNCTION_12
0x40014d9	        0x488d5038	                   lea rdx, [rax + 0x38]	       587	peicode.h	FUNCTION_12
0x40014dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	peicode.h	FUNCTION_12
0x40014e1	        0x48895060	             mov qword [rax + 0x60], rdx	       587	peicode.h	FUNCTION_12
0x40014e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       588	peicode.h	FUNCTION_12
0x40014e9	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       588	peicode.h	FUNCTION_12
0x40014f0	        0x488d5012	                   lea rdx, [rax + 0x12]	       588	peicode.h	FUNCTION_12
0x40014f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       588	peicode.h	FUNCTION_12
0x40014f8	    0x488990a00000	             mov qword [rax + 0xa0], rdx	       588	peicode.h	FUNCTION_12
0x40014ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	peicode.h	FUNCTION_12	CALL_4
0x4001503	    0x488b98880000	            mov rbx, qword [rax + 0x88] 	       589	peicode.h	FUNCTION_12	CALL_4
0x400150a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       589	peicode.h	FUNCTION_12	CALL_4
0x400150e	          0x4889c7	                            mov rdi, rax	       589	peicode.h	FUNCTION_12	CALL_4
0x4001511	      0xe800000000	                          call 0x4001516	       589	peicode.h	FUNCTION_12	CALL_4
0x4001516	          0x4989c4	                            mov r12, rax	       589	peicode.h	FUNCTION_12	CALL_4
0x4001519	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       589	peicode.h	FUNCTION_12	CALL_4
0x400151d	          0x4889c7	                            mov rdi, rax	       589	peicode.h	FUNCTION_12	CALL_4
0x4001520	      0xe800000000	                          call 0x4001525	       589	peicode.h	FUNCTION_12	CALL_4
0x4001525	          0x4c01e0	                            add rax, r12	       589	peicode.h	FUNCTION_12	CALL_4
0x4001528	        0x4883c001	                              add rax, 1	       589	peicode.h	FUNCTION_12	CALL_4
0x400152c	        0x488d1403	                    lea rdx, [rbx + rax]	       589	peicode.h	FUNCTION_12	CALL_4
0x4001530	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	peicode.h	FUNCTION_12	CALL_4
0x4001534	    0x488990880000	             mov qword [rax + 0x88], rdx	       589	peicode.h	FUNCTION_12	CALL_4
0x400153b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       591	peicode.h	FUNCTION_12	CALL_5
0x400153f	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	       591	peicode.h	FUNCTION_12	CALL_5
0x4001546	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       591	peicode.h	FUNCTION_12	CALL_5
0x400154a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       591	peicode.h	FUNCTION_12	CALL_5
0x4001551	          0x4839c2	                            cmp rdx, rax	       591	peicode.h	FUNCTION_12	CALL_5
0x4001554	            0x720f	                            jb 0x4001565	       591	peicode.h	FUNCTION_12	CALL_5
0x4001556	      0xbe4f020000	                          mov esi, 0x24f	       591	peicode.h	FUNCTION_12	CALL_5
0x400155b	      0xbf00000000	                              mov edi, 0	       591	peicode.h	FUNCTION_12	CALL_5
0x4001560	      0xe800000000	                          call 0x4001565	       591	peicode.h	FUNCTION_12	CALL_5
0x4001565	              0x90	                                     nop	       592	peicode.h	FUNCTION_12
0x4001566	        0x4883c450	                           add rsp, 0x50	       592	peicode.h	FUNCTION_12
0x400156a	              0x5b	                                 pop rbx	       592	peicode.h	FUNCTION_12
0x400156b	            0x415c	                                 pop r12	       592	peicode.h	FUNCTION_12
0x400156d	              0x5d	                                 pop rbp	       592	peicode.h	FUNCTION_12
0x400156e	              0xc3	                                     ret	       592	peicode.h	FUNCTION_12
coff_set_arch_mach	IF,2:CALL,2:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	38
0x400479c	              0x55	                                push rbp	      2837	coffcode.h	FUNCTION_40
0x400479d	          0x4889e5	                            mov rbp, rsp	      2837	coffcode.h	FUNCTION_40
0x40047a0	        0x4883ec30	                           sub rsp, 0x30	      2837	coffcode.h	FUNCTION_40
0x40047a4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2837	coffcode.h	FUNCTION_40
0x40047a8	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2837	coffcode.h	FUNCTION_40
0x40047ab	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2837	coffcode.h	FUNCTION_40
0x40047af	    0x64488b042528	                mov rax, qword fs:[0x28]	      2837	coffcode.h	FUNCTION_40
0x40047b8	        0x488945f8	                mov qword [rbp - 8], rax	      2837	coffcode.h	FUNCTION_40
0x40047bc	            0x31c0	                            xor eax, eax	      2837	coffcode.h	FUNCTION_40
0x40047be	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047c2	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047c9	            0x89ce	                            mov esi, ecx	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047cb	          0x4889c7	                            mov rdi, rax	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047ce	      0xe800000000	                          call 0x40047d3	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047d3	            0x85c0	                           test eax, eax	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047d5	            0x7507	                           jne 0x40047de	      2841	coffcode.h	FUNCTION_40	IF_1	CALL_1
0x40047d7	      0xb800000000	                              mov eax, 0	      2842	coffcode.h	FUNCTION_40	IF_1
0x40047dc	            0xeb2d	                           jmp 0x400480b	      2842	coffcode.h	FUNCTION_40	IF_1
0x40047de	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2844	coffcode.h	FUNCTION_40	IF_2
0x40047e2	            0x7422	                            je 0x4004806	      2844	coffcode.h	FUNCTION_40	IF_2
0x40047e4	        0x488d55f2	                    lea rdx, [rbp - 0xe]	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047e8	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047f0	          0x4889ce	                            mov rsi, rcx	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047f3	          0x4889c7	                            mov rdi, rax	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047f6	      0xe863ffffff	                 call sym.coff_set_flags	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047fb	            0x85c0	                           test eax, eax	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047fd	            0x7507	                           jne 0x4004806	      2845	coffcode.h	FUNCTION_40	IF_2	CALL_2
0x40047ff	      0xb800000000	                              mov eax, 0	      2846	coffcode.h	FUNCTION_40	IF_2
0x4004804	            0xeb05	                           jmp 0x400480b	      2846	coffcode.h	FUNCTION_40	IF_2
0x4004806	      0xb801000000	                              mov eax, 1	      2848	coffcode.h	FUNCTION_40
0x400480b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2849	coffcode.h	FUNCTION_40
0x400480f	    0x644833342528	                xor rsi, qword fs:[0x28]	      2849	coffcode.h	FUNCTION_40
0x4004818	            0x7405	                            je 0x400481f	      2849	coffcode.h	FUNCTION_40
0x400481a	      0xe800000000	                          call 0x400481f	      2849	coffcode.h	FUNCTION_40
0x400481f	              0xc9	                                   leave	      2849	coffcode.h	FUNCTION_40
0x4004820	              0xc3	                                     ret	      2849	coffcode.h	FUNCTION_40
coff_set_flags	IF,7:CALL,15:ELSE,2:SWITCH,5:DO,0:FOR,0:functions,0:WHILE,0	19
0x400475e	              0x55	                                push rbp	      2640	coffcode.h	FUNCTION_39
0x400475f	          0x4889e5	                            mov rbp, rsp	      2640	coffcode.h	FUNCTION_39
0x4004762	        0x4883ec20	                           sub rsp, 0x20	      2640	coffcode.h	FUNCTION_39
0x4004766	        0x48897df8	                mov qword [rbp - 8], rdi	      2640	coffcode.h	FUNCTION_39
0x400476a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2640	coffcode.h	FUNCTION_39
0x400476e	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2640	coffcode.h	FUNCTION_39
0x4004772	        0x488b45f8	                mov rax, qword [rbp - 8]	      2641	coffcode.h	FUNCTION_39	SWITCH_1	CALL_1
0x4004776	          0x4889c7	                            mov rdi, rax	      2641	coffcode.h	FUNCTION_39	SWITCH_1	CALL_1
0x4004779	      0xe800000000	                          call 0x400477e	      2641	coffcode.h	FUNCTION_39	SWITCH_1	CALL_1
0x400477e	          0x83f808	                              cmp eax, 8	      2641	coffcode.h	FUNCTION_39	SWITCH_1	CALL_1
0x4004781	            0x7408	                            je 0x400478b	      2641	coffcode.h	FUNCTION_39	SWITCH_1	CALL_1
0x4004783	              0x90	                                     nop	      2827	coffcode.h	FUNCTION_39	SWITCH_1
0x4004784	      0xb800000000	                              mov eax, 0	      2830	coffcode.h	FUNCTION_39
0x4004789	            0xeb0f	                           jmp 0x400479a	      2830	coffcode.h	FUNCTION_39
0x400478b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2761	coffcode.h	FUNCTION_39	SWITCH_1
0x400478f	    0xc7004c010000	                  mov dword [rax], 0x14c	      2761	coffcode.h	FUNCTION_39	SWITCH_1
0x4004795	      0xb801000000	                              mov eax, 1	      2770	coffcode.h	FUNCTION_39	SWITCH_1
0x400479a	              0xc9	                                   leave	      2831	coffcode.h	FUNCTION_39
0x400479b	              0xc3	                                     ret	      2831	coffcode.h	FUNCTION_39
in_reloc_p	IF,0:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	21
0x4000393	              0x55	                                push rbp	       193	coff-i386.c	FUNCTION_66
0x4000394	          0x4889e5	                            mov rbp, rsp	       193	coff-i386.c	FUNCTION_66
0x4000397	        0x48897df8	                mov qword [rbp - 8], rdi	       193	coff-i386.c	FUNCTION_66
0x400039b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       193	coff-i386.c	FUNCTION_66
0x400039f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       194	coff-i386.c	FUNCTION_66
0x40003a3	          0x8b4010	            mov eax, dword [rax + 0x10] 	       194	coff-i386.c	FUNCTION_66
0x40003a6	            0x85c0	                           test eax, eax	       195	coff-i386.c	FUNCTION_66
0x40003a8	            0x751d	                           jne 0x40003c7	       195	coff-i386.c	FUNCTION_66
0x40003aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       194	coff-i386.c	FUNCTION_66
0x40003ae	            0x8b00	                    mov eax, dword [rax]	       194	coff-i386.c	FUNCTION_66
0x40003b0	          0x83f807	                              cmp eax, 7	       194	coff-i386.c	FUNCTION_66
0x40003b3	            0x7412	                            je 0x40003c7	       194	coff-i386.c	FUNCTION_66
0x40003b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       195	coff-i386.c	FUNCTION_66
0x40003b9	            0x8b00	                    mov eax, dword [rax]	       195	coff-i386.c	FUNCTION_66
0x40003bb	          0x83f80b	                            cmp eax, 0xb	       195	coff-i386.c	FUNCTION_66
0x40003be	            0x7407	                            je 0x40003c7	       195	coff-i386.c	FUNCTION_66
0x40003c0	      0xb801000000	                              mov eax, 1	       195	coff-i386.c	FUNCTION_66
0x40003c5	            0xeb05	                           jmp 0x40003cc	       195	coff-i386.c	FUNCTION_66
0x40003c7	      0xb800000000	                              mov eax, 0	       195	coff-i386.c	FUNCTION_66
0x40003cc	              0x5d	                                 pop rbp	       196	coff-i386.c	FUNCTION_66
0x40003cd	              0xc3	                                     ret	       196	coff-i386.c	FUNCTION_66
sort_by_secaddr	IF,2:CALL,0:ELSE,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	29
0x4004821	              0x55	                                push rbp	      2858	coffcode.h	FUNCTION_41
0x4004822	          0x4889e5	                            mov rbp, rsp	      2858	coffcode.h	FUNCTION_41
0x4004825	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2858	coffcode.h	FUNCTION_41
0x4004829	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2858	coffcode.h	FUNCTION_41
0x400482d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2859	coffcode.h	FUNCTION_41
0x4004831	          0x488b00	                    mov rax, qword [rax]	      2859	coffcode.h	FUNCTION_41
0x4004834	        0x488945f0	             mov qword [rbp - 0x10], rax	      2859	coffcode.h	FUNCTION_41
0x4004838	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2860	coffcode.h	FUNCTION_41
0x400483c	          0x488b00	                    mov rax, qword [rax]	      2860	coffcode.h	FUNCTION_41
0x400483f	        0x488945f8	                mov qword [rbp - 8], rax	      2860	coffcode.h	FUNCTION_41
0x4004843	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2862	coffcode.h	FUNCTION_41	IF_1
0x4004847	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2862	coffcode.h	FUNCTION_41	IF_1
0x400484b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2862	coffcode.h	FUNCTION_41	IF_1
0x400484f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2862	coffcode.h	FUNCTION_41	IF_1
0x4004853	          0x4839c2	                            cmp rdx, rax	      2862	coffcode.h	FUNCTION_41	IF_1
0x4004856	            0x7307	                           jae 0x400485f	      2862	coffcode.h	FUNCTION_41	IF_1
0x4004858	      0xb8ffffffff	                     mov eax, 0xffffffff	      2863	coffcode.h	FUNCTION_41	IF_1
0x400485d	            0xeb21	                           jmp 0x4004880	      2863	coffcode.h	FUNCTION_41	IF_1
0x400485f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2864	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x4004863	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2864	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x4004867	        0x488b45f8	                mov rax, qword [rbp - 8]	      2864	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x400486b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2864	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x400486f	          0x4839c2	                            cmp rdx, rax	      2864	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x4004872	            0x7607	                           jbe 0x400487b	      2864	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x4004874	      0xb801000000	                              mov eax, 1	      2865	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x4004879	            0xeb05	                           jmp 0x4004880	      2865	coffcode.h	FUNCTION_41	ELSE_1	IF_2
0x400487b	      0xb800000000	                              mov eax, 0	      2867	coffcode.h	FUNCTION_41
0x4004880	              0x5d	                                 pop rbp	      2868	coffcode.h	FUNCTION_41
0x4004881	              0xc3	                                     ret	      2868	coffcode.h	FUNCTION_41
coff_i386_reloc_type_lookup	IF,0:CALL,1:ELSE,0:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0	32
0x4000693	              0x55	                                push rbp	       557	coff-i386.c	FUNCTION_69
0x4000694	          0x4889e5	                            mov rbp, rsp	       557	coff-i386.c	FUNCTION_69
0x4000697	        0x4883ec10	                           sub rsp, 0x10	       557	coff-i386.c	FUNCTION_69
0x400069b	        0x48897df8	                mov qword [rbp - 8], rdi	       557	coff-i386.c	FUNCTION_69
0x400069f	          0x8975f4	              mov dword [rbp - 0xc], esi	       557	coff-i386.c	FUNCTION_69
0x40006a2	        0x837df43e	            cmp dword [rbp - 0xc], 0x3e 	       558	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006a6	            0x7745	                            ja 0x40006ed	       558	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006a8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       558	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006ab	    0x488b04c50000	                  mov rax, qword [rax*8]	       558	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006b3	            0xffe0	                                 jmp rax	       558	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006b5	      0xb800000000	                              mov eax, 0	       561	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006ba	            0xeb45	                           jmp 0x4000701	       561	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006bc	      0xb800000000	                              mov eax, 0	       563	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006c1	            0xeb3e	                           jmp 0x4000701	       563	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006c3	      0xb800000000	                              mov eax, 0	       565	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006c8	            0xeb37	                           jmp 0x4000701	       565	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006ca	      0xb800000000	                              mov eax, 0	       567	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006cf	            0xeb30	                           jmp 0x4000701	       567	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006d1	      0xb800000000	                              mov eax, 0	       569	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006d6	            0xeb29	                           jmp 0x4000701	       569	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006d8	      0xb800000000	                              mov eax, 0	       571	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006dd	            0xeb22	                           jmp 0x4000701	       571	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006df	      0xb800000000	                              mov eax, 0	       573	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006e4	            0xeb1b	                           jmp 0x4000701	       573	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006e6	      0xb800000000	                              mov eax, 0	       576	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006eb	            0xeb14	                           jmp 0x4000701	       576	coff-i386.c	FUNCTION_69	SWITCH_1
0x40006ed	      0xbe43020000	                          mov esi, 0x243	       579	coff-i386.c	FUNCTION_69	SWITCH_1	CALL_1
0x40006f2	      0xbf00000000	                              mov edi, 0	       579	coff-i386.c	FUNCTION_69	SWITCH_1	CALL_1
0x40006f7	      0xe800000000	                          call 0x40006fc	       579	coff-i386.c	FUNCTION_69	SWITCH_1	CALL_1
0x40006fc	      0xb800000000	                              mov eax, 0	       580	coff-i386.c	FUNCTION_69	SWITCH_1
0x4000701	              0xc9	                                   leave	       582	coff-i386.c	FUNCTION_69
0x4000702	              0xc3	                                     ret	       582	coff-i386.c	FUNCTION_69
pe_bfd_read_buildid	IF,10:CALL,9:ELSE,0:SWITCH,0:DO,0:FOR,2:functions,0:WHILE,0	182
0x400286c	              0x55	                                push rbp	      1293	peicode.h	FUNCTION_16
0x400286d	          0x4889e5	                            mov rbp, rsp	      1293	peicode.h	FUNCTION_16
0x4002870	    0x4881ecc00100	                          sub rsp, 0x1c0	      1293	peicode.h	FUNCTION_16
0x4002877	    0x4889bd48feff	            mov qword [rbp - 0x1b8], rdi	      1293	peicode.h	FUNCTION_16
0x400287e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1293	peicode.h	FUNCTION_16
0x4002887	        0x488945f8	                mov qword [rbp - 8], rax	      1293	peicode.h	FUNCTION_16
0x400288b	            0x31c0	                            xor eax, eax	      1293	peicode.h	FUNCTION_16
0x400288d	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1294	peicode.h	FUNCTION_16	CALL_1
0x4002894	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1294	peicode.h	FUNCTION_16	CALL_1
0x400289b	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1294	peicode.h	FUNCTION_16	CALL_1
0x40028a2	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1295	peicode.h	FUNCTION_16
0x40028a9	    0x4805c8000000	                           add rax, 0xc8	      1295	peicode.h	FUNCTION_16
0x40028af	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1295	peicode.h	FUNCTION_16
0x40028b6	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      1297	peicode.h	FUNCTION_16
0x40028c1	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1300	peicode.h	FUNCTION_16
0x40028c8	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1300	peicode.h	FUNCTION_16
0x40028cf	    0x48898580feff	            mov qword [rbp - 0x180], rax	      1300	peicode.h	FUNCTION_16
0x40028d6	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1301	peicode.h	FUNCTION_16
0x40028dd	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1301	peicode.h	FUNCTION_16
0x40028e4	    0x48898588feff	            mov qword [rbp - 0x178], rax	      1301	peicode.h	FUNCTION_16
0x40028eb	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      1303	peicode.h	FUNCTION_16	IF_1
0x40028f3	     0xf84dd020000	                            je 0x4002bd6	      1303	peicode.h	FUNCTION_16	IF_1
0x40028f9	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1306	peicode.h	FUNCTION_16
0x4002900	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1306	peicode.h	FUNCTION_16
0x4002904	    0x48018580feff	           add qword [rbp - 0x180], rax 	      1306	peicode.h	FUNCTION_16
0x400290b	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002912	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002919	    0x48898568feff	            mov qword [rbp - 0x198], rax	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002920	            0xeb48	                           jmp 0x400296a	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002922	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002929	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x400292d	    0x483b8580feff	            cmp rax, qword [rbp - 0x180]	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002934	            0x7722	                            ja 0x4002958	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002936	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x400293d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002941	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002948	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x400294c	          0x4801d0	                            add rax, rdx	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x400294f	    0x483b8580feff	            cmp rax, qword [rbp - 0x180]	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002956	            0x771e	                            ja 0x4002976	      1311	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002958	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1309	peicode.h	FUNCTION_16	FOR_1
0x400295f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002963	    0x48898568feff	            mov qword [rbp - 0x198], rax	      1309	peicode.h	FUNCTION_16	FOR_1
0x400296a	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002972	            0x75ae	                           jne 0x4002922	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002974	            0xeb01	                           jmp 0x4002977	      1309	peicode.h	FUNCTION_16	FOR_1
0x4002976	              0x90	                                     nop	      1312	peicode.h	FUNCTION_16	FOR_1	IF_2
0x4002977	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      1315	peicode.h	FUNCTION_16	IF_3
0x400297f	     0xf8454020000	                            je 0x4002bd9	      1315	peicode.h	FUNCTION_16	IF_3
0x4002985	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1318	peicode.h	FUNCTION_16	IF_4
0x400298c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1318	peicode.h	FUNCTION_16	IF_4
0x400298f	      0x2500010000	                          and eax, 0x100	      1318	peicode.h	FUNCTION_16	IF_4
0x4002994	            0x85c0	                           test eax, eax	      1318	peicode.h	FUNCTION_16	IF_4
0x4002996	     0xf8440020000	                            je 0x4002bdc	      1318	peicode.h	FUNCTION_16	IF_4
0x400299c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1321	peicode.h	FUNCTION_16
0x40029a3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1321	peicode.h	FUNCTION_16
0x40029a7	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      1321	peicode.h	FUNCTION_16
0x40029ae	          0x4829c2	                            sub rdx, rax	      1321	peicode.h	FUNCTION_16
0x40029b1	          0x4889d0	                            mov rax, rdx	      1321	peicode.h	FUNCTION_16
0x40029b4	    0x48898590feff	            mov qword [rbp - 0x170], rax	      1321	peicode.h	FUNCTION_16
0x40029bb	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1326	peicode.h	FUNCTION_16	IF_5
0x40029c2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1326	peicode.h	FUNCTION_16	IF_5
0x40029c6	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      1326	peicode.h	FUNCTION_16	IF_5
0x40029cd	            0x761b	                           jbe 0x40029ea	      1326	peicode.h	FUNCTION_16	IF_5
0x40029cf	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      1327	peicode.h	FUNCTION_16	IF_5
0x40029d6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1327	peicode.h	FUNCTION_16	IF_5
0x40029da	    0x482b8590feff	            sub rax, qword [rbp - 0x170]	      1327	peicode.h	FUNCTION_16	IF_5
0x40029e1	    0x483b8588feff	            cmp rax, qword [rbp - 0x178]	      1327	peicode.h	FUNCTION_16	IF_5
0x40029e8	            0x732e	                           jae 0x4002a18	      1327	peicode.h	FUNCTION_16	IF_5
0x40029ea	      0xbe00000000	                              mov esi, 0	      1330	peicode.h	FUNCTION_16	IF_5	CALL_3
0x40029ef	      0xbf00000000	                              mov edi, 0	      1330	peicode.h	FUNCTION_16	IF_5	CALL_3
0x40029f4	      0xe800000000	                          call 0x40029f9	      1330	peicode.h	FUNCTION_16	IF_5	CALL_3
0x40029f9	          0x4889c2	                            mov rdx, rax	      1330	peicode.h	FUNCTION_16	IF_5	CALL_3
0x40029fc	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1329	peicode.h	FUNCTION_16	IF_5	CALL_2
0x4002a03	          0x4889c6	                            mov rsi, rax	      1329	peicode.h	FUNCTION_16	IF_5	CALL_2
0x4002a06	          0x4889d7	                            mov rdi, rdx	      1329	peicode.h	FUNCTION_16	IF_5	CALL_2
0x4002a09	      0xb800000000	                              mov eax, 0	      1329	peicode.h	FUNCTION_16	IF_5	CALL_2
0x4002a0e	      0xe800000000	                          call 0x4002a13	      1329	peicode.h	FUNCTION_16	IF_5	CALL_2
0x4002a13	      0xe9cb010000	                           jmp 0x4002be3	      1332	peicode.h	FUNCTION_16	IF_5
0x4002a18	    0x488d9560feff	                  lea rdx, [rbp - 0x1a0]	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a1f	    0x488b8d68feff	            mov rcx, qword [rbp - 0x198]	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a26	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a2d	          0x4889ce	                            mov rsi, rcx	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a30	          0x4889c7	                            mov rdi, rax	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a33	      0xe800000000	                          call 0x4002a38	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a38	            0x85c0	                           test eax, eax	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a3a	            0x7524	                           jne 0x4002a60	      1336	peicode.h	FUNCTION_16	IF_6	CALL_4
0x4002a3c	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      1338	peicode.h	FUNCTION_16	IF_6	IF_7
0x4002a43	          0x4885c0	                           test rax, rax	      1338	peicode.h	FUNCTION_16	IF_6	IF_7
0x4002a46	     0xf8493010000	                            je 0x4002bdf	      1338	peicode.h	FUNCTION_16	IF_6	IF_7
0x4002a4c	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      1339	peicode.h	FUNCTION_16	IF_6	CALL_5
0x4002a53	          0x4889c7	                            mov rdi, rax	      1339	peicode.h	FUNCTION_16	IF_6	CALL_5
0x4002a56	      0xe800000000	                          call 0x4002a5b	      1339	peicode.h	FUNCTION_16	IF_6	CALL_5
0x4002a5b	      0xe97f010000	                           jmp 0x4002bdf	      1340	peicode.h	FUNCTION_16	IF_6
0x4002a60	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 0	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002a6a	      0xe938010000	                           jmp 0x4002ba7	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002a6f	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      1347	peicode.h	FUNCTION_16	FOR_2
0x4002a76	    0x8b855cfeffff	            mov eax, dword [rbp - 0x1a4]	      1347	peicode.h	FUNCTION_16	FOR_2
0x4002a7c	        0x48c1e002	                              shl rax, 2	      1347	peicode.h	FUNCTION_16	FOR_2
0x4002a80	    0x488d0cc50000	                        lea rcx, [rax*8]	      1347	peicode.h	FUNCTION_16	FOR_2
0x4002a88	          0x4829c1	                            sub rcx, rax	      1347	peicode.h	FUNCTION_16	FOR_2
0x4002a8b	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      1347	peicode.h	FUNCTION_16	FOR_2
0x4002a92	          0x4801c8	                            add rax, rcx	      1347	peicode.h	FUNCTION_16	FOR_2
0x4002a95	          0x4801d0	                            add rax, rdx	      1346	peicode.h	FUNCTION_16	FOR_2
0x4002a98	    0x48898598feff	            mov qword [rbp - 0x168], rax	      1346	peicode.h	FUNCTION_16	FOR_2
0x4002a9f	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      1350	peicode.h	FUNCTION_16	FOR_2	CALL_6
0x4002aa6	    0x488b8d98feff	            mov rcx, qword [rbp - 0x168]	      1350	peicode.h	FUNCTION_16	FOR_2	CALL_6
0x4002aad	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1350	peicode.h	FUNCTION_16	FOR_2	CALL_6
0x4002ab4	          0x4889ce	                            mov rsi, rcx	      1350	peicode.h	FUNCTION_16	FOR_2	CALL_6
0x4002ab7	          0x4889c7	                            mov rdi, rax	      1350	peicode.h	FUNCTION_16	FOR_2	CALL_6
0x4002aba	      0xe800000000	                          call 0x4002abf	      1350	peicode.h	FUNCTION_16	FOR_2	CALL_6
0x4002abf	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1352	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002ac6	        0x4883f802	                              cmp rax, 2	      1352	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002aca	     0xf85d0000000	                           jne 0x4002ba0	      1352	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002ad0	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1355	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002ad7	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      1355	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002ade	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002ae5	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1362	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9
0x4002aec	          0x4889c6	                            mov rsi, rax	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002aef	    0x488b8da0feff	            mov rcx, qword [rbp - 0x160]	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002af6	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002afd	          0x4889c7	                            mov rdi, rax	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002b00	      0xe800000000	                          call 0x4002b05	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002b05	          0x4885c0	                           test rax, rax	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002b08	     0xf84d4000000	                            je 0x4002be2	      1361	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_7
0x4002b0e	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1366	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9
0x4002b15	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1366	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9
0x4002b18	            0x89c0	                            mov eax, eax	      1365	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_8
0x4002b1a	        0x488d5010	                   lea rdx, [rax + 0x10]	      1365	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_8
0x4002b1e	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1365	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_8
0x4002b25	          0x4889d6	                            mov rsi, rdx	      1365	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_8
0x4002b28	          0x4889c7	                            mov rdi, rax	      1365	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_8
0x4002b2b	      0xe800000000	                          call 0x4002b30	      1365	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_8
0x4002b30	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      1365	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	CALL_8
0x4002b37	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	      1367	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b3f	     0xf849d000000	                            je 0x4002be2	      1367	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b45	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1369	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b4c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1369	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b4f	            0x89c2	                            mov edx, eax	      1369	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b51	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1369	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b58	          0x488910	                    mov qword [rax], rdx	      1369	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b5b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1371	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b62	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1371	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b65	            0x89c2	                            mov edx, eax	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b67	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b6e	        0x488d4808	                      lea rcx, [rax + 8]	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b72	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b79	        0x4883c008	                              add rax, 8	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b7d	          0x4889ce	                            mov rsi, rcx	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b80	          0x4889c7	                            mov rdi, rax	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b83	      0xe800000000	                          call 0x4002b88	      1370	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10	CALL_9
0x4002b88	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1372	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b8f	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      1372	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b96	    0x488990100100	            mov qword [rax + 0x110], rdx	      1372	peicode.h	FUNCTION_16	FOR_2	IF_8	IF_9	IF_10
0x4002b9d	              0x90	                                     nop	      1375	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002b9e	            0xeb42	                           jmp 0x4002be2	      1375	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002ba0	    0x83855cfeffff	              add dword [rbp - 0x1a4], 1	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002ba7	    0x8b8d5cfeffff	            mov ecx, dword [rbp - 0x1a4]	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bad	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bb4	        0x48c1e802	                              shr rax, 2	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bb8	    0x48ba25499224	          movabs rdx, 0x4924924924924925	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bc2	          0x48f7e2	                                 mul rdx	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bc5	          0x4889d0	                            mov rax, rdx	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bc8	          0x48d1e8	                              shr rax, 1	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bcb	          0x4839c1	                            cmp rcx, rax	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bce	     0xf829bfeffff	                            jb 0x4002a6f	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bd4	            0xeb0d	                           jmp 0x4002be3	      1344	peicode.h	FUNCTION_16	FOR_2
0x4002bd6	              0x90	                                     nop	      1304	peicode.h	FUNCTION_16	IF_1
0x4002bd7	            0xeb0a	                           jmp 0x4002be3	      1304	peicode.h	FUNCTION_16	IF_1
0x4002bd9	              0x90	                                     nop	      1316	peicode.h	FUNCTION_16	IF_3
0x4002bda	            0xeb07	                           jmp 0x4002be3	      1316	peicode.h	FUNCTION_16	IF_3
0x4002bdc	              0x90	                                     nop	      1319	peicode.h	FUNCTION_16	IF_4
0x4002bdd	            0xeb04	                           jmp 0x4002be3	      1319	peicode.h	FUNCTION_16	IF_4
0x4002bdf	              0x90	                                     nop	      1340	peicode.h	FUNCTION_16	IF_6
0x4002be0	            0xeb01	                           jmp 0x4002be3	      1340	peicode.h	FUNCTION_16	IF_6
0x4002be2	              0x90	                                     nop	      1375	peicode.h	FUNCTION_16	FOR_2	IF_8
0x4002be3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1378	peicode.h	FUNCTION_16
0x4002be7	    0x644833042528	                xor rax, qword fs:[0x28]	      1378	peicode.h	FUNCTION_16
0x4002bf0	            0x7405	                            je 0x4002bf7	      1378	peicode.h	FUNCTION_16
0x4002bf2	      0xe800000000	                          call 0x4002bf7	      1378	peicode.h	FUNCTION_16
0x4002bf7	              0xc9	                                   leave	      1378	peicode.h	FUNCTION_16
0x4002bf8	              0xc3	                                     ret	      1378	peicode.h	FUNCTION_16
bfd_set_section_vma	IF,0:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	19
0x4000040	              0x55	                                push rbp	      1686	bfd.h	FUNCTION_73
0x4000041	          0x4889e5	                            mov rbp, rsp	      1686	bfd.h	FUNCTION_73
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	      1686	bfd.h	FUNCTION_73
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1686	bfd.h	FUNCTION_73
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1686	bfd.h	FUNCTION_73
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_73
0x4000054	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1687	bfd.h	FUNCTION_73
0x4000058	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_73
0x400005c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_73
0x4000060	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1687	bfd.h	FUNCTION_73
0x4000064	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_73
0x4000068	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_73
0x400006c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1688	bfd.h	FUNCTION_73
0x4000070	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1688	bfd.h	FUNCTION_73
0x4000074	          0x83ca01	                               or edx, 1	      1688	bfd.h	FUNCTION_73
0x4000077	          0x885024	               mov byte [rax + 0x24], dl	      1688	bfd.h	FUNCTION_73
0x400007a	      0xb801000000	                              mov eax, 1	      1689	bfd.h	FUNCTION_73
0x400007f	              0x5d	                                 pop rbp	      1690	bfd.h	FUNCTION_73
0x4000080	              0xc3	                                     ret	      1690	bfd.h	FUNCTION_73
coff_write_object_contents	IF,79:CALL,105:ELSE,25:SWITCH,2:DO,0:FOR,6:functions,0:WHILE,0	955
0x40054f8	              0x55	                                push rbp	      3339	coffcode.h	FUNCTION_46
0x40054f9	          0x4889e5	                            mov rbp, rsp	      3339	coffcode.h	FUNCTION_46
0x40054fc	            0x4155	                                push r13	      3339	coffcode.h	FUNCTION_46
0x40054fe	            0x4154	                                push r12	      3339	coffcode.h	FUNCTION_46
0x4005500	              0x53	                                push rbx	      3339	coffcode.h	FUNCTION_46
0x4005501	    0x4881ece80c00	                          sub rsp, 0xce8	      3339	coffcode.h	FUNCTION_46
0x4005508	    0x4889bd08f3ff	            mov qword [rbp - 0xcf8], rdi	      3339	coffcode.h	FUNCTION_46
0x400550f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3339	coffcode.h	FUNCTION_46
0x4005518	        0x488945d8	             mov qword [rbp - 0x28], rax	      3339	coffcode.h	FUNCTION_46
0x400551c	            0x31c0	                            xor eax, eax	      3339	coffcode.h	FUNCTION_46
0x400551e	    0xc78518f3ffff	              mov dword [rbp - 0xce8], 0	      3341	coffcode.h	FUNCTION_46
0x4005528	    0xc7851cf3ffff	              mov dword [rbp - 0xce4], 0	      3342	coffcode.h	FUNCTION_46
0x4005532	    0xc78520f3ffff	              mov dword [rbp - 0xce0], 0	      3344	coffcode.h	FUNCTION_46
0x400553c	    0x48c785a0f3ff	              mov qword [rbp - 0xc60], 0	      3350	coffcode.h	FUNCTION_46
0x4005547	    0x48c78558f3ff	              mov qword [rbp - 0xca8], 0	      3350	coffcode.h	FUNCTION_46
0x4005552	    0x48c785a8f3ff	              mov qword [rbp - 0xc58], 0	      3351	coffcode.h	FUNCTION_46
0x400555d	    0x48c78560f3ff	              mov qword [rbp - 0xca0], 0	      3353	coffcode.h	FUNCTION_46
0x4005568	    0x48c78568f3ff	              mov qword [rbp - 0xc98], 0	      3354	coffcode.h	FUNCTION_46
0x4005573	    0x48c78570f3ff	              mov qword [rbp - 0xc90], 0	      3355	coffcode.h	FUNCTION_46
0x400557e	    0x48c78578f3ff	              mov qword [rbp - 0xc88], 4	      3359	coffcode.h	FUNCTION_46
0x4005589	      0xbf01000000	                              mov edi, 1	      3362	coffcode.h	FUNCTION_46	CALL_1
0x400558e	      0xe800000000	                          call 0x4005593	      3362	coffcode.h	FUNCTION_46	CALL_1
0x4005593	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3366	coffcode.h	FUNCTION_46	CALL_3
0x400559a	          0x4889c7	                            mov rdi, rax	      3366	coffcode.h	FUNCTION_46	CALL_3
0x400559d	      0xe800000000	                          call 0x40055a2	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055a2	            0x89c2	                            mov edx, eax	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055a4	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055ab	        0x488b4008	                mov rax, qword [rax + 8]	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055af	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055b6	          0x8b4068	            mov eax, dword [rax + 0x68] 	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055b9	           0xfafc2	                           imul eax, edx	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055bc	            0x89c0	                            mov eax, eax	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055be	    0x488985a8f3ff	            mov qword [rbp - 0xc58], rax	      3366	coffcode.h	FUNCTION_46	CALL_3
0x40055c5	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3368	coffcode.h	FUNCTION_46	IF_1
0x40055cc	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      3368	coffcode.h	FUNCTION_46	IF_1
0x40055d0	          0x83e040	                           and eax, 0x40	      3368	coffcode.h	FUNCTION_46	IF_1
0x40055d3	            0x84c0	                             test al, al	      3368	coffcode.h	FUNCTION_46	IF_1
0x40055d5	            0x751d	                           jne 0x40055f4	      3368	coffcode.h	FUNCTION_46	IF_1
0x40055d7	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3370	coffcode.h	FUNCTION_46	IF_1	IF_2	CALL_4
0x40055de	          0x4889c7	                            mov rdi, rax	      3370	coffcode.h	FUNCTION_46	IF_1	IF_2	CALL_4
0x40055e1	      0xe89cf2ffff	call sym.coff_compute_section_file_positions	      3370	coffcode.h	FUNCTION_46	IF_1	IF_2	CALL_4
0x40055e6	            0x85c0	                           test eax, eax	      3370	coffcode.h	FUNCTION_46	IF_1	IF_2	CALL_4
0x40055e8	            0x750a	                           jne 0x40055f4	      3370	coffcode.h	FUNCTION_46	IF_1	IF_2	CALL_4
0x40055ea	      0xb800000000	                              mov eax, 0	      3371	coffcode.h	FUNCTION_46	IF_1	IF_2
0x40055ef	      0xe941110000	                           jmp 0x4006735	      3371	coffcode.h	FUNCTION_46	IF_1	IF_2
0x40055f4	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3374	coffcode.h	FUNCTION_46	CALL_5
0x40055fb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3374	coffcode.h	FUNCTION_46	CALL_5
0x4005602	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3374	coffcode.h	FUNCTION_46	CALL_5
0x4005606	    0x48898548f3ff	            mov qword [rbp - 0xcb8], rax	      3374	coffcode.h	FUNCTION_46	CALL_5
0x400560d	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3378	coffcode.h	FUNCTION_46	FOR_1
0x4005614	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3378	coffcode.h	FUNCTION_46	FOR_1
0x400561b	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3378	coffcode.h	FUNCTION_46	FOR_1
0x4005622	            0xeb5c	                           jmp 0x4005680	      3378	coffcode.h	FUNCTION_46	FOR_1
0x4005624	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x400562b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x4005632	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x4005638	            0x85c0	                           test eax, eax	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x400563a	            0x741c	                            je 0x4005658	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x400563c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x4005643	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x4005649	      0x3dfeff0000	                         cmp eax, 0xfffe	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x400564e	            0x7608	                           jbe 0x4005658	      3383	coffcode.h	FUNCTION_46	FOR_1	IF_3	CALL_6
0x4005650	    0x48838558f3ff	              add qword [rbp - 0xca8], 1	      3384	coffcode.h	FUNCTION_46	FOR_1	IF_3
0x4005658	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3386	coffcode.h	FUNCTION_46	FOR_1
0x400565f	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3386	coffcode.h	FUNCTION_46	FOR_1
0x4005665	            0x89c0	                            mov eax, eax	      3386	coffcode.h	FUNCTION_46	FOR_1
0x4005667	    0x48018558f3ff	           add qword [rbp - 0xca8], rax 	      3386	coffcode.h	FUNCTION_46	FOR_1
0x400566e	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3378	coffcode.h	FUNCTION_46	FOR_1
0x4005675	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3378	coffcode.h	FUNCTION_46	FOR_1
0x4005679	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3378	coffcode.h	FUNCTION_46	FOR_1
0x4005680	    0x4883bd38f3ff	              cmp qword [rbp - 0xcc8], 0	      3378	coffcode.h	FUNCTION_46	FOR_1
0x4005688	            0x759a	                           jne 0x4005624	      3378	coffcode.h	FUNCTION_46	FOR_1
0x400568a	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3389	coffcode.h	FUNCTION_46	CALL_7
0x4005691	        0x488b4008	                mov rax, qword [rax + 8]	      3389	coffcode.h	FUNCTION_46	CALL_7
0x4005695	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3389	coffcode.h	FUNCTION_46	CALL_7
0x400569c	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3389	coffcode.h	FUNCTION_46	CALL_7
0x400569f	            0x89c0	                            mov eax, eax	      3389	coffcode.h	FUNCTION_46	CALL_7
0x40056a1	    0x480faf8558f3	           imul rax, qword [rbp - 0xca8]	      3389	coffcode.h	FUNCTION_46	CALL_7
0x40056a9	    0x488985a0f3ff	            mov qword [rbp - 0xc60], rax	      3389	coffcode.h	FUNCTION_46	CALL_7
0x40056b0	    0x488b9548f3ff	            mov rdx, qword [rbp - 0xcb8]	      3391	coffcode.h	FUNCTION_46
0x40056b7	    0x488b85a0f3ff	            mov rax, qword [rbp - 0xc60]	      3391	coffcode.h	FUNCTION_46
0x40056be	          0x4801d0	                            add rax, rdx	      3391	coffcode.h	FUNCTION_46
0x40056c1	    0x48898550f3ff	            mov qword [rbp - 0xcb0], rax	      3391	coffcode.h	FUNCTION_46
0x40056c8	    0x488b9550f3ff	            mov rdx, qword [rbp - 0xcb0]	      3392	coffcode.h	FUNCTION_46
0x40056cf	    0x488b85a8f3ff	            mov rax, qword [rbp - 0xc58]	      3392	coffcode.h	FUNCTION_46
0x40056d6	          0x4801d0	                            add rax, rdx	      3392	coffcode.h	FUNCTION_46
0x40056d9	    0x488985b0f3ff	            mov qword [rbp - 0xc50], rax	      3392	coffcode.h	FUNCTION_46
0x40056e0	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3395	coffcode.h	FUNCTION_46	FOR_2
0x40056e7	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3395	coffcode.h	FUNCTION_46	FOR_2
0x40056ee	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3395	coffcode.h	FUNCTION_46	FOR_2
0x40056f5	      0xe945010000	                           jmp 0x400583f	      3395	coffcode.h	FUNCTION_46	FOR_2
0x40056fa	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3398	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005701	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      3398	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005707	            0x85c0	                           test eax, eax	      3398	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005709	            0x745a	                            je 0x4005765	      3398	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x400570b	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3400	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005712	    0x488b9550f3ff	            mov rdx, qword [rbp - 0xcb0]	      3400	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005719	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      3400	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005720	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3401	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005727	    0x488b9550f3ff	            mov rdx, qword [rbp - 0xcb0]	      3401	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x400572e	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      3401	coffcode.h	FUNCTION_46	FOR_2	IF_4
0x4005735	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x400573c	    0x8b90c0000000	            mov edx, dword [rax + 0xc0] 	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x4005742	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x4005749	        0x488b4008	                mov rax, qword [rax + 8]	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x400574d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x4005754	          0x8b4068	            mov eax, dword [rax + 0x68] 	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x4005757	           0xfafc2	                           imul eax, edx	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x400575a	            0x89c0	                            mov eax, eax	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x400575c	    0x48018550f3ff	           add qword [rbp - 0xcb0], rax 	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x4005763	            0xeb12	                           jmp 0x4005777	      3402	coffcode.h	FUNCTION_46	FOR_2	IF_4	CALL_8
0x4005765	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3405	coffcode.h	FUNCTION_46	FOR_2	ELSE_1
0x400576c	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      3405	coffcode.h	FUNCTION_46	FOR_2	ELSE_1
0x4005777	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3407	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5
0x400577e	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3407	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5
0x4005784	            0x85c0	                           test eax, eax	      3407	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5
0x4005786	     0xf848f000000	                            je 0x400581b	      3407	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5
0x400578c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3409	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5
0x4005793	    0x488b9548f3ff	            mov rdx, qword [rbp - 0xcb8]	      3409	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5
0x400579a	    0x488990980000	             mov qword [rax + 0x98], rdx	      3409	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5
0x40057a1	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057a8	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057ae	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057b5	        0x488b4008	                mov rax, qword [rax + 8]	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057b9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057c0	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057c3	           0xfafc2	                           imul eax, edx	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057c6	            0x89c0	                            mov eax, eax	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057c8	    0x48018548f3ff	           add qword [rbp - 0xcb8], rax 	      3410	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_9
0x40057cf	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057d6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057dd	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057e3	            0x85c0	                           test eax, eax	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057e5	            0x7446	                            je 0x400582d	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057e7	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057ee	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057f4	      0x3dfeff0000	                         cmp eax, 0xfffe	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057f9	            0x7632	                           jbe 0x400582d	      3413	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	IF_6	CALL_10
0x40057fb	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3414	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_11
0x4005802	        0x488b4008	                mov rax, qword [rax + 8]	      3414	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_11
0x4005806	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3414	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_11
0x400580d	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3414	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_11
0x4005810	            0x89c0	                            mov eax, eax	      3414	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_11
0x4005812	    0x48018548f3ff	           add qword [rbp - 0xcb8], rax 	      3414	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_11
0x4005819	            0xeb12	                           jmp 0x400582d	      3414	coffcode.h	FUNCTION_46	FOR_2	ELSE_1	IF_5	CALL_11
0x400581b	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3418	coffcode.h	FUNCTION_46	FOR_2	ELSE_2
0x4005822	    0x48c780980000	               mov qword [rax + 0x98], 0	      3418	coffcode.h	FUNCTION_46	FOR_2	ELSE_2
0x400582d	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3395	coffcode.h	FUNCTION_46	FOR_2
0x4005834	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3395	coffcode.h	FUNCTION_46	FOR_2
0x4005838	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3395	coffcode.h	FUNCTION_46	FOR_2
0x400583f	    0x4883bd38f3ff	              cmp qword [rbp - 0xcc8], 0	      3395	coffcode.h	FUNCTION_46	FOR_2
0x4005847	     0xf85adfeffff	                           jne 0x40056fa	      3395	coffcode.h	FUNCTION_46	FOR_2
0x400584d	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      3422	coffcode.h	FUNCTION_46
0x4005854	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3424	coffcode.h	FUNCTION_46	IF_7
0x400585b	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3424	coffcode.h	FUNCTION_46	IF_7
0x400585e	          0xc1e805	                              shr eax, 5	      3424	coffcode.h	FUNCTION_46	IF_7
0x4005861	      0x25ffff0f00	                        and eax, 0xfffff	      3424	coffcode.h	FUNCTION_46	IF_7
0x4005866	          0x83e002	                              and eax, 2	      3424	coffcode.h	FUNCTION_46	IF_7
0x4005869	            0x85c0	                           test eax, eax	      3424	coffcode.h	FUNCTION_46	IF_7
0x400586b	            0x7437	                            je 0x40058a4	      3424	coffcode.h	FUNCTION_46	IF_7
0x400586d	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3425	coffcode.h	FUNCTION_46	CALL_13
0x4005874	        0x488b4008	                mov rax, qword [rax + 8]	      3425	coffcode.h	FUNCTION_46	CALL_13
0x4005878	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3425	coffcode.h	FUNCTION_46	CALL_13
0x400587f	          0x8b5050	            mov edx, dword [rax + 0x50] 	      3425	coffcode.h	FUNCTION_46	CALL_13
0x4005882	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3425	coffcode.h	FUNCTION_46	CALL_13
0x4005889	        0x488b4008	                mov rax, qword [rax + 8]	      3425	coffcode.h	FUNCTION_46	CALL_13
0x400588d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3425	coffcode.h	FUNCTION_46	CALL_13
0x4005894	          0x8b4054	            mov eax, dword [rax + 0x54] 	      3425	coffcode.h	FUNCTION_46	CALL_13
0x4005897	             0x1d0	                            add eax, edx	      3425	coffcode.h	FUNCTION_46	CALL_13
0x4005899	            0x89c0	                            mov eax, eax	      3425	coffcode.h	FUNCTION_46	CALL_13
0x400589b	    0x48898540f3ff	            mov qword [rbp - 0xcc0], rax	      3425	coffcode.h	FUNCTION_46	CALL_13
0x40058a2	            0xeb1e	                           jmp 0x40058c2	      3425	coffcode.h	FUNCTION_46	CALL_13
0x40058a4	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3428	coffcode.h	FUNCTION_46	ELSE_3	CALL_14
0x40058ab	        0x488b4008	                mov rax, qword [rax + 8]	      3428	coffcode.h	FUNCTION_46	ELSE_3	CALL_14
0x40058af	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3428	coffcode.h	FUNCTION_46	ELSE_3	CALL_14
0x40058b6	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3428	coffcode.h	FUNCTION_46	ELSE_3	CALL_14
0x40058b9	            0x89c0	                            mov eax, eax	      3428	coffcode.h	FUNCTION_46	ELSE_3	CALL_14
0x40058bb	    0x48898540f3ff	            mov qword [rbp - 0xcc0], rax	      3428	coffcode.h	FUNCTION_46	ELSE_3	CALL_14
0x40058c2	    0x488b8d40f3ff	            mov rcx, qword [rbp - 0xcc0]	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058c9	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058d0	      0xba00000000	                              mov edx, 0	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058d5	          0x4889ce	                            mov rsi, rcx	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058d8	          0x4889c7	                            mov rdi, rax	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058db	      0xe800000000	                          call 0x40058e0	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058e0	            0x85c0	                           test eax, eax	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058e2	            0x740a	                            je 0x40058ee	      3439	coffcode.h	FUNCTION_46	IF_9	CALL_17
0x40058e4	      0xb800000000	                              mov eax, 0	      3440	coffcode.h	FUNCTION_46	IF_9
0x40058e9	      0xe9470e0000	                           jmp 0x4006735	      3440	coffcode.h	FUNCTION_46	IF_9
0x40058ee	    0xc78524f3ffff	              mov dword [rbp - 0xcdc], 0	      3442	coffcode.h	FUNCTION_46
0x40058f8	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3443	coffcode.h	FUNCTION_46	FOR_3
0x40058ff	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3443	coffcode.h	FUNCTION_46	FOR_3
0x4005906	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3443	coffcode.h	FUNCTION_46	FOR_3
0x400590d	      0xe938080000	                           jmp 0x400614a	      3443	coffcode.h	FUNCTION_46	FOR_3
0x4005912	    0xc78528f3ffff	              mov dword [rbp - 0xcd8], 0	      3449	coffcode.h	FUNCTION_46	FOR_3
0x400591c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3451	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_18
0x4005923	          0x488b00	                    mov rax, qword [rax]	      3451	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_18
0x4005926	      0xbe00000000	                              mov esi, 0	      3451	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_18
0x400592b	          0x4889c7	                            mov rdi, rax	      3451	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_18
0x400592e	      0xe800000000	                          call 0x4005933	      3451	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_18
0x4005933	            0x85c0	                           test eax, eax	      3451	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_18
0x4005935	            0x752c	                           jne 0x4005963	      3451	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_18
0x4005937	    0xc78528f3ffff	              mov dword [rbp - 0xcd8], 1	      3453	coffcode.h	FUNCTION_46	FOR_3	IF_10
0x4005941	    0xc78518f3ffff	              mov dword [rbp - 0xce8], 1	      3454	coffcode.h	FUNCTION_46	FOR_3	IF_10
0x400594b	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3455	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_19
0x4005952	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3455	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_19
0x4005959	    0xc78084020000	              mov dword [rax + 0x284], 1	      3455	coffcode.h	FUNCTION_46	FOR_3	IF_10	CALL_19
0x4005963	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3459	coffcode.h	FUNCTION_46	FOR_3
0x4005966	          0x83c001	                              add eax, 1	      3459	coffcode.h	FUNCTION_46	FOR_3
0x4005969	          0x894584	             mov dword [rbp - 0x7c], eax	      3459	coffcode.h	FUNCTION_46	FOR_3
0x400596c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3461	coffcode.h	FUNCTION_46	FOR_3	CALL_20
0x4005973	          0x488b08	                    mov rcx, qword [rax]	      3461	coffcode.h	FUNCTION_46	FOR_3	CALL_20
0x4005976	    0x488d8530f4ff	                  lea rax, [rbp - 0xbd0]	      3461	coffcode.h	FUNCTION_46	FOR_3	CALL_20
0x400597d	      0xba08000000	                              mov edx, 8	      3461	coffcode.h	FUNCTION_46	FOR_3	CALL_20
0x4005982	          0x4889ce	                            mov rsi, rcx	      3461	coffcode.h	FUNCTION_46	FOR_3	CALL_20
0x4005985	          0x4889c7	                            mov rdi, rax	      3461	coffcode.h	FUNCTION_46	FOR_3	CALL_20
0x4005988	      0xe800000000	                          call 0x400598d	      3461	coffcode.h	FUNCTION_46	FOR_3	CALL_20
0x400598d	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3466	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_21
0x4005994	        0x488b4008	                mov rax, qword [rax + 8]	      3466	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_21
0x4005998	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3466	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_21
0x400599f	          0x8b4074	            mov eax, dword [rax + 0x74] 	      3466	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_21
0x40059a2	            0x85c0	                           test eax, eax	      3466	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_21
0x40059a4	     0xf84da000000	                            je 0x4005a84	      3466	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_21
0x40059aa	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3470	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_22
0x40059b1	          0x488b00	                    mov rax, qword [rax]	      3470	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_22
0x40059b4	          0x4889c7	                            mov rdi, rax	      3470	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_22
0x40059b7	      0xe800000000	                          call 0x40059bc	      3470	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_22
0x40059bc	    0x488985d0f3ff	            mov qword [rbp - 0xc30], rax	      3470	coffcode.h	FUNCTION_46	FOR_3	IF_11	CALL_22
0x40059c3	    0x4883bdd0f3ff	              cmp qword [rbp - 0xc30], 8	      3471	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x40059cb	     0xf86b3000000	                           jbe 0x4005a84	      3471	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x40059d1	    0x4881bd78f3ff	      cmp qword [rbp - 0xc88], 0x98967f 	      3484	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13
0x40059dc	            0x7648	                           jbe 0x4005a26	      3484	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13
0x40059de	      0xbf13000000	                           mov edi, 0x13	      3486	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_23
0x40059e3	      0xe800000000	                          call 0x40059e8	      3486	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_23
0x40059e8	      0xbe00000000	                              mov esi, 0	      3489	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x40059ed	      0xbf00000000	                              mov edi, 0	      3489	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x40059f2	      0xe800000000	                          call 0x40059f7	      3489	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x40059f7	          0x4889c7	                            mov rdi, rax	      3489	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_25
0x40059fa	    0x488b8d78f3ff	            mov rcx, qword [rbp - 0xc88]	      3487	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4005a01	    0x488b9538f3ff	            mov rdx, qword [rbp - 0xcc8]	      3487	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4005a08	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3487	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4005a0f	          0x4889c6	                            mov rsi, rax	      3487	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4005a12	      0xb800000000	                              mov eax, 0	      3487	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4005a17	      0xe800000000	                          call 0x4005a1c	      3487	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13	CALL_24
0x4005a1c	      0xb800000000	                              mov eax, 0	      3491	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13
0x4005a21	      0xe90f0d0000	                           jmp 0x4006735	      3491	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	IF_13
0x4005a26	    0x488b9578f3ff	            mov rdx, qword [rbp - 0xc88]	      3497	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_26
0x4005a2d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3497	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_26
0x4005a31	      0xbe00000000	                              mov esi, 0	      3497	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_26
0x4005a36	          0x4889c7	                            mov rdi, rax	      3497	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_26
0x4005a39	      0xb800000000	                              mov eax, 0	      3497	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_26
0x4005a3e	      0xe800000000	                          call 0x4005a43	      3497	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_26
0x4005a43	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      3499	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_27
0x4005a47	    0x488d8530f4ff	                  lea rax, [rbp - 0xbd0]	      3499	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_27
0x4005a4e	      0xba08000000	                              mov edx, 8	      3499	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_27
0x4005a53	          0x4889ce	                            mov rsi, rcx	      3499	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_27
0x4005a56	          0x4889c7	                            mov rdi, rax	      3499	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_27
0x4005a59	      0xe800000000	                          call 0x4005a5e	      3499	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12	CALL_27
0x4005a5e	    0x488b95d0f3ff	            mov rdx, qword [rbp - 0xc30]	      3500	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x4005a65	    0x488b8578f3ff	            mov rax, qword [rbp - 0xc88]	      3500	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x4005a6c	          0x4801d0	                            add rax, rdx	      3500	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x4005a6f	        0x4883c001	                              add rax, 1	      3500	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x4005a73	    0x48898578f3ff	            mov qword [rbp - 0xc88], rax	      3500	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x4005a7a	    0xc78524f3ffff	              mov dword [rbp - 0xcdc], 1	      3501	coffcode.h	FUNCTION_46	FOR_3	IF_11	IF_12
0x4005a84	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3509	coffcode.h	FUNCTION_46	FOR_3	IF_14	CALL_28
0x4005a8b	          0x488b00	                    mov rax, qword [rax]	      3509	coffcode.h	FUNCTION_46	FOR_3	IF_14	CALL_28
0x4005a8e	      0xbe00000000	                              mov esi, 0	      3509	coffcode.h	FUNCTION_46	FOR_3	IF_14	CALL_28
0x4005a93	          0x4889c7	                            mov rdi, rax	      3509	coffcode.h	FUNCTION_46	FOR_3	IF_14	CALL_28
0x4005a96	      0xe800000000	                          call 0x4005a9b	      3509	coffcode.h	FUNCTION_46	FOR_3	IF_14	CALL_28
0x4005a9b	            0x85c0	                           test eax, eax	      3509	coffcode.h	FUNCTION_46	FOR_3	IF_14	CALL_28
0x4005a9d	            0x750d	                           jne 0x4005aac	      3509	coffcode.h	FUNCTION_46	FOR_3	IF_14	CALL_28
0x4005a9f	    0x48c78540f4ff	              mov qword [rbp - 0xbc0], 0	      3510	coffcode.h	FUNCTION_46	FOR_3	IF_14
0x4005aaa	            0xeb12	                           jmp 0x4005abe	      3510	coffcode.h	FUNCTION_46	FOR_3	IF_14
0x4005aac	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3513	coffcode.h	FUNCTION_46	FOR_3	ELSE_5
0x4005ab3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3513	coffcode.h	FUNCTION_46	FOR_3	ELSE_5
0x4005ab7	    0x48898540f4ff	            mov qword [rbp - 0xbc0], rax	      3513	coffcode.h	FUNCTION_46	FOR_3	ELSE_5
0x4005abe	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3514	coffcode.h	FUNCTION_46	FOR_3
0x4005ac5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3514	coffcode.h	FUNCTION_46	FOR_3
0x4005ac9	    0x48898538f4ff	            mov qword [rbp - 0xbc8], rax	      3514	coffcode.h	FUNCTION_46	FOR_3
0x4005ad0	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3515	coffcode.h	FUNCTION_46	FOR_3
0x4005ad7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3515	coffcode.h	FUNCTION_46	FOR_3
0x4005adb	    0x48898548f4ff	            mov qword [rbp - 0xbb8], rax	      3515	coffcode.h	FUNCTION_46	FOR_3
0x4005ae2	    0xc68580f4ffff	               mov byte [rbp - 0xb80], 0	      3519	coffcode.h	FUNCTION_46	FOR_3
0x4005ae9	    0x48c78538f4ff	              mov qword [rbp - 0xbc8], 0	      3523	coffcode.h	FUNCTION_46	FOR_3
0x4005af4	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3527	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_30
0x4005afb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3527	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_30
0x4005b02	          0x4885c0	                           test rax, rax	      3527	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_30
0x4005b05	            0x7435	                            je 0x4005b3c	      3527	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_30
0x4005b07	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3528	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_31
0x4005b0e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3528	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_31
0x4005b15	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3528	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_31
0x4005b19	          0x4885c0	                           test rax, rax	      3528	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_31
0x4005b1c	            0x741e	                            je 0x4005b3c	      3528	coffcode.h	FUNCTION_46	FOR_3	IF_15	CALL_31
0x4005b1e	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3529	coffcode.h	FUNCTION_46	FOR_3	CALL_32
0x4005b25	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3529	coffcode.h	FUNCTION_46	FOR_3	CALL_32
0x4005b2c	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3529	coffcode.h	FUNCTION_46	FOR_3	CALL_32
0x4005b30	          0x488b00	                    mov rax, qword [rax]	      3529	coffcode.h	FUNCTION_46	FOR_3	CALL_32
0x4005b33	    0x48898538f4ff	            mov qword [rbp - 0xbc8], rax	      3529	coffcode.h	FUNCTION_46	FOR_3	CALL_32
0x4005b3a	            0xeb0b	                           jmp 0x4005b47	      3529	coffcode.h	FUNCTION_46	FOR_3	CALL_32
0x4005b3c	    0x48c78538f4ff	              mov qword [rbp - 0xbc8], 0	      3531	coffcode.h	FUNCTION_46	FOR_3	ELSE_6
0x4005b47	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3536	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b4e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3536	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b52	          0x4885c0	                           test rax, rax	      3536	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b55	            0x7413	                            je 0x4005b6a	      3536	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b57	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3537	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b5e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3537	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b61	      0x2502010000	                          and eax, 0x102	      3537	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b66	            0x85c0	                           test eax, eax	      3537	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b68	            0x750d	                           jne 0x4005b77	      3537	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b6a	    0x48c78550f4ff	              mov qword [rbp - 0xbb0], 0	      3538	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b75	            0xeb15	                           jmp 0x4005b8c	      3538	coffcode.h	FUNCTION_46	FOR_3	IF_16
0x4005b77	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3540	coffcode.h	FUNCTION_46	FOR_3	ELSE_7
0x4005b7e	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3540	coffcode.h	FUNCTION_46	FOR_3	ELSE_7
0x4005b85	    0x48898550f4ff	            mov qword [rbp - 0xbb0], rax	      3540	coffcode.h	FUNCTION_46	FOR_3	ELSE_7
0x4005b8c	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3542	coffcode.h	FUNCTION_46	FOR_3
0x4005b93	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3542	coffcode.h	FUNCTION_46	FOR_3
0x4005b9a	    0x48898558f4ff	            mov qword [rbp - 0xba8], rax	      3542	coffcode.h	FUNCTION_46	FOR_3
0x4005ba1	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3543	coffcode.h	FUNCTION_46	FOR_3
0x4005ba8	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3543	coffcode.h	FUNCTION_46	FOR_3
0x4005baf	    0x48898560f4ff	            mov qword [rbp - 0xba0], rax	      3543	coffcode.h	FUNCTION_46	FOR_3
0x4005bb6	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3544	coffcode.h	FUNCTION_46	FOR_3
0x4005bbd	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3544	coffcode.h	FUNCTION_46	FOR_3
0x4005bc3	            0x89c0	                            mov eax, eax	      3544	coffcode.h	FUNCTION_46	FOR_3
0x4005bc5	    0x48898568f4ff	            mov qword [rbp - 0xb98], rax	      3544	coffcode.h	FUNCTION_46	FOR_3
0x4005bcc	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3545	coffcode.h	FUNCTION_46	FOR_3
0x4005bd3	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      3545	coffcode.h	FUNCTION_46	FOR_3
0x4005bd9	            0x89c0	                            mov eax, eax	      3545	coffcode.h	FUNCTION_46	FOR_3
0x4005bdb	    0x48898570f4ff	            mov qword [rbp - 0xb90], rax	      3545	coffcode.h	FUNCTION_46	FOR_3
0x4005be2	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3551	coffcode.h	FUNCTION_46	FOR_3	IF_18
0x4005be9	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      3551	coffcode.h	FUNCTION_46	FOR_3	IF_18
0x4005bef	            0x85c0	                           test eax, eax	      3551	coffcode.h	FUNCTION_46	FOR_3	IF_18
0x4005bf1	            0x740a	                            je 0x4005bfd	      3551	coffcode.h	FUNCTION_46	FOR_3	IF_18
0x4005bf3	    0xc7851cf3ffff	              mov dword [rbp - 0xce4], 1	      3552	coffcode.h	FUNCTION_46	FOR_3	IF_18
0x4005bfd	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3554	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c04	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3554	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c07	      0x2500200000	                         and eax, 0x2000	      3554	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c0c	            0x85c0	                           test eax, eax	      3554	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c0e	            0x7413	                            je 0x4005c23	      3554	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c10	    0x83bd28f3ffff	              cmp dword [rbp - 0xcd8], 0	      3555	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c17	            0x750a	                           jne 0x4005c23	      3555	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c19	    0xc78520f3ffff	              mov dword [rbp - 0xce0], 1	      3556	coffcode.h	FUNCTION_46	FOR_3	IF_19
0x4005c23	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c2a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c2d	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c34	          0x488b00	                    mov rax, qword [rax]	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c37	            0x89d6	                            mov esi, edx	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c39	          0x4889c7	                            mov rdi, rax	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c3c	      0xe819d4ffff	              call sym.sec_to_styp_flags	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c41	    0x48898578f4ff	            mov qword [rbp - 0xb88], rax	      3570	coffcode.h	FUNCTION_46	FOR_3	CALL_33
0x4005c48	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3572	coffcode.h	FUNCTION_46	FOR_3	IF_21	CALL_34
0x4005c4f	          0x488b00	                    mov rax, qword [rax]	      3572	coffcode.h	FUNCTION_46	FOR_3	IF_21	CALL_34
0x4005c52	      0xbe00000000	                              mov esi, 0	      3572	coffcode.h	FUNCTION_46	FOR_3	IF_21	CALL_34
0x4005c57	          0x4889c7	                            mov rdi, rax	      3572	coffcode.h	FUNCTION_46	FOR_3	IF_21	CALL_34
0x4005c5a	      0xe800000000	                          call 0x4005c5f	      3572	coffcode.h	FUNCTION_46	FOR_3	IF_21	CALL_34
0x4005c5f	            0x85c0	                           test eax, eax	      3572	coffcode.h	FUNCTION_46	FOR_3	IF_21	CALL_34
0x4005c61	            0x7510	                           jne 0x4005c73	      3572	coffcode.h	FUNCTION_46	FOR_3	IF_21	CALL_34
0x4005c63	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3573	coffcode.h	FUNCTION_46	FOR_3	IF_21
0x4005c6a	    0x48898560f3ff	            mov qword [rbp - 0xca0], rax	      3573	coffcode.h	FUNCTION_46	FOR_3	IF_21
0x4005c71	            0xeb54	                           jmp 0x4005cc7	      3573	coffcode.h	FUNCTION_46	FOR_3	IF_21
0x4005c73	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3574	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22	CALL_35
0x4005c7a	          0x488b00	                    mov rax, qword [rax]	      3574	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22	CALL_35
0x4005c7d	      0xbe00000000	                              mov esi, 0	      3574	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22	CALL_35
0x4005c82	          0x4889c7	                            mov rdi, rax	      3574	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22	CALL_35
0x4005c85	      0xe800000000	                          call 0x4005c8a	      3574	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22	CALL_35
0x4005c8a	            0x85c0	                           test eax, eax	      3574	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22	CALL_35
0x4005c8c	            0x7510	                           jne 0x4005c9e	      3574	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22	CALL_35
0x4005c8e	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3575	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22
0x4005c95	    0x48898568f3ff	            mov qword [rbp - 0xc98], rax	      3575	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22
0x4005c9c	            0xeb29	                           jmp 0x4005cc7	      3575	coffcode.h	FUNCTION_46	FOR_3	ELSE_8	IF_22
0x4005c9e	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3576	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23	CALL_36
0x4005ca5	          0x488b00	                    mov rax, qword [rax]	      3576	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23	CALL_36
0x4005ca8	      0xbe00000000	                              mov esi, 0	      3576	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23	CALL_36
0x4005cad	          0x4889c7	                            mov rdi, rax	      3576	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23	CALL_36
0x4005cb0	      0xe800000000	                          call 0x4005cb5	      3576	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23	CALL_36
0x4005cb5	            0x85c0	                           test eax, eax	      3576	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23	CALL_36
0x4005cb7	            0x750e	                           jne 0x4005cc7	      3576	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23	CALL_36
0x4005cb9	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3577	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23
0x4005cc0	    0x48898570f3ff	            mov qword [rbp - 0xc90], rax	      3577	coffcode.h	FUNCTION_46	FOR_3	ELSE_9	IF_23
0x4005cc7	    0x488b9578f4ff	            mov rdx, qword [rbp - 0xb88]	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005cce	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005cd5	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005cd8	      0xb90d000000	                            mov ecx, 0xd	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005cdd	          0x83f80d	                            cmp eax, 0xd	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005ce0	           0xf47c1	                          cmova eax, ecx	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005ce3	          0x83c001	                              add eax, 1	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005ce6	          0xc1e014	                           shl eax, 0x14	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005ce9	            0x89c0	                            mov eax, eax	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005ceb	          0x4809d0	                             or rax, rdx	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005cee	    0x48898578f4ff	            mov qword [rbp - 0xb88], rax	      3580	coffcode.h	FUNCTION_46	FOR_3	CALL_37
0x4005cf5	    0x488b8578f4ff	            mov rax, qword [rbp - 0xb88]	      3581	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_38
0x4005cfc	      0x250000f000	                       and eax, 0xf00000	      3581	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_38
0x4005d01	        0x48c1f814	                           sar rax, 0x14	      3581	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_38
0x4005d05	          0x8d50ff	                      lea edx, [rax - 1]	      3581	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_38
0x4005d08	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3582	coffcode.h	FUNCTION_46	FOR_3	IF_24
0x4005d0f	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3582	coffcode.h	FUNCTION_46	FOR_3	IF_24
0x4005d12	            0x39c2	                            cmp edx, eax	      3581	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_38
0x4005d14	     0xf84c3000000	                            je 0x4005ddd	      3581	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_38
0x4005d1a	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3584	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_39
0x4005d21	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3584	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_39
0x4005d28	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3584	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_39
0x4005d2f	          0x4885c0	                           test rax, rax	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d32	            0x7426	                            je 0x4005d5a	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d34	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d3b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d42	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d49	           0xfb600	                   movzx eax, byte [rax]	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d4c	          0x83e003	                              and eax, 3	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d4f	            0x3c02	                               cmp al, 2	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d51	            0x7407	                            je 0x4005d5a	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d53	      0xb801000000	                              mov eax, 1	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d58	            0xeb05	                           jmp 0x4005d5f	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d5a	      0xb800000000	                              mov eax, 0	      3585	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_41
0x4005d5f	    0x898530f3ffff	            mov dword [rbp - 0xcd0], eax	      3584	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_39
0x4005d65	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d6c	        0x448b6070	           mov r12d, dword [rax + 0x70] 	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d70	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d77	          0x488b18	                    mov rbx, qword [rax]	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d7a	    0x83bd30f3ffff	              cmp dword [rbp - 0xcd0], 0	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d81	            0x7408	                            je 0x4005d8b	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d83	    0x41bd00000000	                             mov r13d, 0	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d89	            0xeb06	                           jmp 0x4005d91	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d8b	    0x41bd00000000	                             mov r13d, 0	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005d91	      0xbe00000000	                              mov esi, 0	      3589	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_43
0x4005d96	      0xbf00000000	                              mov edi, 0	      3589	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_43
0x4005d9b	      0xe800000000	                          call 0x4005da0	      3589	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_43
0x4005da0	          0x4889c7	                            mov rdi, rax	      3589	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_43
0x4005da3	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005daa	          0x4589e0	                           mov r8d, r12d	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005dad	          0x4889d9	                            mov rcx, rbx	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005db0	          0x4c89ea	                            mov rdx, r13	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005db3	          0x4889c6	                            mov rsi, rax	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005db6	      0xb800000000	                              mov eax, 0	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005dbb	      0xe800000000	                          call 0x4005dc0	      3587	coffcode.h	FUNCTION_46	FOR_3	IF_24	CALL_42
0x4005dc0	    0x83bd30f3ffff	              cmp dword [rbp - 0xcd0], 0	      3592	coffcode.h	FUNCTION_46	FOR_3	IF_24	IF_25
0x4005dc7	            0x7514	                           jne 0x4005ddd	      3592	coffcode.h	FUNCTION_46	FOR_3	IF_24	IF_25
0x4005dc9	      0xbf0f000000	                            mov edi, 0xf	      3594	coffcode.h	FUNCTION_46	FOR_3	IF_24	IF_25	CALL_44
0x4005dce	      0xe800000000	                          call 0x4005dd3	      3594	coffcode.h	FUNCTION_46	FOR_3	IF_24	IF_25	CALL_44
0x4005dd3	      0xb800000000	                              mov eax, 0	      3595	coffcode.h	FUNCTION_46	FOR_3	IF_24	IF_25
0x4005dd8	      0xe958090000	                           jmp 0x4006735	      3595	coffcode.h	FUNCTION_46	FOR_3	IF_24	IF_25
0x4005ddd	    0x488b8548f4ff	            mov rax, qword [rbp - 0xbb8]	      3606	coffcode.h	FUNCTION_46	FOR_3	IF_26
0x4005de4	          0x4885c0	                           test rax, rax	      3606	coffcode.h	FUNCTION_46	FOR_3	IF_26
0x4005de7	            0x750b	                           jne 0x4005df4	      3606	coffcode.h	FUNCTION_46	FOR_3	IF_26
0x4005de9	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3607	coffcode.h	FUNCTION_46	FOR_3	IF_26
0x4005dec	          0x83e801	                              sub eax, 1	      3607	coffcode.h	FUNCTION_46	FOR_3	IF_26
0x4005def	          0x894584	             mov dword [rbp - 0x7c], eax	      3607	coffcode.h	FUNCTION_46	FOR_3	IF_26
0x4005df2	            0xeb75	                           jmp 0x4005e69	      3607	coffcode.h	FUNCTION_46	FOR_3	IF_26
0x4005df4	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3612	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	CALL_45
0x4005dfb	        0x488b4008	                mov rax, qword [rax + 8]	      3612	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	CALL_45
0x4005dff	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3612	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	CALL_45
0x4005e06	          0x8b4058	            mov eax, dword [rax + 0x58] 	      3612	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	CALL_45
0x4005e09	            0x89c0	                            mov eax, eax	      3612	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	CALL_45
0x4005e0b	    0x488985b8f3ff	            mov qword [rbp - 0xc48], rax	      3612	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	CALL_45
0x4005e12	    0x488d9500f4ff	                  lea rdx, [rbp - 0xc00]	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e19	    0x488d8d30f4ff	                  lea rcx, [rbp - 0xbd0]	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e20	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e27	          0x4889ce	                            mov rsi, rcx	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e2a	          0x4889c7	                            mov rdi, rax	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e2d	      0xe800000000	                          call 0x4005e32	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e32	            0x85c0	                           test eax, eax	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e34	            0x7429	                            je 0x4005e5f	      3614	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_46
0x4005e36	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e3d	    0x488b8db8f3ff	            mov rcx, qword [rbp - 0xc48]	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e44	    0x488d8500f4ff	                  lea rax, [rbp - 0xc00]	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e4b	          0x4889ce	                            mov rsi, rcx	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e4e	          0x4889c7	                            mov rdi, rax	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e51	      0xe800000000	                          call 0x4005e56	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e56	    0x483b85b8f3ff	            cmp rax, qword [rbp - 0xc48]	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e5d	            0x740a	                            je 0x4005e69	      3615	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27	CALL_47
0x4005e5f	      0xb800000000	                              mov eax, 0	      3616	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27
0x4005e64	      0xe9cc080000	                           jmp 0x4006735	      3616	coffcode.h	FUNCTION_46	FOR_3	ELSE_10	IF_27
0x4005e69	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3623	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e70	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3623	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e73	      0x2500000200	                        and eax, 0x20000	      3623	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e78	            0x85c0	                           test eax, eax	      3623	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e7a	     0xf84b8020000	                            je 0x4006138	      3623	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e80	    0x48c78588f3ff	              mov qword [rbp - 0xc78], 0	      3627	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e8b	    0x48c78590f3ff	              mov qword [rbp - 0xc70], 0	      3630	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e96	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3631	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005e9d	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3631	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005ea3	    0x898534f3ffff	            mov dword [rbp - 0xccc], eax	      3631	coffcode.h	FUNCTION_46	FOR_3	IF_28
0x4005ea9	    0xc7852cf3ffff	              mov dword [rbp - 0xcd4], 0	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4005eb3	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4005eba	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4005ec1	    0x48898580f3ff	            mov qword [rbp - 0xc80], rax	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4005ec8	      0xe93c010000	                           jmp 0x4006009	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4005ecd	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3634	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_29
0x4005ed4	          0x488b00	                    mov rax, qword [rax]	      3634	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_29
0x4005ed7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3634	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_29
0x4005edb	    0x483b8538f3ff	            cmp rax, qword [rbp - 0xcc8]	      3634	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_29
0x4005ee2	     0xf850e010000	                           jne 0x4005ff6	      3634	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_29
0x4005ee8	    0x4883bd90f3ff	              cmp qword [rbp - 0xc70], 0	      3639	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_30
0x4005ef0	            0x750e	                           jne 0x4005f00	      3639	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_30
0x4005ef2	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3640	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_30
0x4005ef9	    0x48898590f3ff	            mov qword [rbp - 0xc70], rax	      3640	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_30
0x4005f00	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f07	          0x488b10	                    mov rdx, qword [rax]	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f0a	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f11	          0x488b00	                    mov rax, qword [rax]	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f14	        0x488b4008	                mov rax, qword [rax + 8]	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f18	          0x4889d6	                            mov rsi, rdx	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f1b	          0x4889c7	                            mov rdi, rax	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f1e	      0xe800000000	                          call 0x4005f23	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f23	            0x85c0	                           test eax, eax	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f25	     0xf85cf000000	                           jne 0x4005ffa	      3643	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_48
0x4005f2b	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f32	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f35	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f38	        0x488b4008	                mov rax, qword [rax + 8]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f3c	          0x8b4008	                mov eax, dword [rax + 8]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f3f	          0x83f802	                              cmp eax, 2	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f42	            0x7419	                            je 0x4005f5d	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f44	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f4b	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f4e	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f51	        0x488b4008	                mov rax, qword [rax + 8]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f55	          0x8b4008	                mov eax, dword [rax + 8]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f58	          0x83f804	                              cmp eax, 4	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f5b	            0x7525	                           jne 0x4005f82	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f5d	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f64	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f67	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f6a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f71	          0x4885c0	                           test rax, rax	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f74	            0x740c	                            je 0x4005f82	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f76	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f7d	          0x488b00	                    mov rax, qword [rax]	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f80	            0xeb05	                           jmp 0x4005f87	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f82	      0xb800000000	                              mov eax, 0	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f87	    0x48898588f3ff	            mov qword [rbp - 0xc78], rax	      3645	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	CALL_49
0x4005f8e	    0x4883bd88f3ff	              cmp qword [rbp - 0xc78], 0	      3646	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005f96	            0x7461	                            je 0x4005ff9	      3646	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005f98	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3647	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005f9f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3647	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fa3	          0x4885c0	                           test rax, rax	      3647	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fa6	            0x7451	                            je 0x4005ff9	      3647	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fa8	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3648	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005faf	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3648	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fb3	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3648	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fb6	            0x85c0	                           test eax, eax	      3648	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fb8	            0x743f	                            je 0x4005ff9	      3648	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fba	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3649	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fc1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3649	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fc5	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      3649	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fc9	            0x84c0	                             test al, al	      3649	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fcb	            0x742c	                            je 0x4005ff9	      3649	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fcd	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3650	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fd4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3650	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fd8	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      3650	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fdc	            0x3c03	                               cmp al, 3	      3650	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fde	            0x7519	                           jne 0x4005ff9	      3650	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fe0	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3651	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fe7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3651	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005feb	         0xfb74026	           movzx eax, word [rax + 0x26] 	      3651	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005fef	          0x6685c0	                             test ax, ax	      3651	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005ff2	            0x7429	                            je 0x400601d	      3651	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005ff4	            0xeb03	                           jmp 0x4005ff9	      3652	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005ff6	              0x90	                                     nop	      3635	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_29
0x4005ff7	            0xeb01	                           jmp 0x4005ffa	      3635	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_29
0x4005ff9	              0x90	                                     nop	      3652	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31	IF_32
0x4005ffa	    0x83852cf3ffff	              add dword [rbp - 0xcd4], 1	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4006001	    0x48838580f3ff	              add qword [rbp - 0xc80], 8	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4006009	    0x8b852cf3ffff	            mov eax, dword [rbp - 0xcd4]	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x400600f	    0x3b8534f3ffff	            cmp eax, dword [rbp - 0xccc]	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x4006015	     0xf82b2feffff	                            jb 0x4005ecd	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x400601b	            0xeb01	                           jmp 0x400601e	      3632	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4
0x400601d	              0x90	                                     nop	      3656	coffcode.h	FUNCTION_46	FOR_3	IF_28	FOR_4	IF_31
0x400601e	    0x8b852cf3ffff	            mov eax, dword [rbp - 0xcd4]	      3663	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33
0x4006024	    0x3b8534f3ffff	            cmp eax, dword [rbp - 0xccc]	      3663	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33
0x400602a	     0xf8308010000	                           jae 0x4006138	      3663	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33
0x4006030	    0x488b8588f3ff	            mov rax, qword [rbp - 0xc78]	      3670	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33
0x4006037	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3670	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33
0x400603b	        0x4883c038	                           add rax, 0x38	      3670	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33
0x400603f	    0x488985c0f3ff	            mov qword [rbp - 0xc40], rax	      3670	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33
0x4006046	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3671	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	CALL_50
0x400604d	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3671	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	CALL_50
0x4006050	            0x85c0	                           test eax, eax	      3671	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	CALL_50
0x4006052	            0x740f	                            je 0x4006063	      3671	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	CALL_50
0x4006054	      0xbe570e0000	                          mov esi, 0xe57	      3671	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	CALL_50
0x4006059	      0xbf00000000	                              mov edi, 0	      3671	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	CALL_50
0x400605e	      0xe800000000	                          call 0x4006063	      3671	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	CALL_50
0x4006063	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x400606a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x400606d	      0x2500000c00	                        and eax, 0xc0000	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006072	      0x3d00000400	                        cmp eax, 0x40000	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006077	            0x742a	                            je 0x40060a3	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006079	      0x3d00000400	                        cmp eax, 0x40000	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x400607e	            0x7706	                            ja 0x4006086	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006080	            0x85c0	                           test eax, eax	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006082	            0x7412	                            je 0x4006096	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006084	            0xeb43	                           jmp 0x40060c9	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006086	      0x3d00000800	                        cmp eax, 0x80000	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x400608b	            0x7423	                            je 0x40060b0	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x400608d	      0x3d00000c00	                        cmp eax, 0xc0000	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006092	            0x7429	                            je 0x40060bd	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006094	            0xeb33	                           jmp 0x40060c9	      3672	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x4006096	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3675	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x400609d	        0xc6402202	                mov byte [rax + 0x22], 2	      3675	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060a1	            0xeb26	                           jmp 0x40060c9	      3676	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060a3	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3679	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060aa	        0xc6402201	                mov byte [rax + 0x22], 1	      3679	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060ae	            0xeb19	                           jmp 0x40060c9	      3681	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060b0	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3684	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060b7	        0xc6402203	                mov byte [rax + 0x22], 3	      3684	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060bb	            0xeb0c	                           jmp 0x40060c9	      3686	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060bd	    0x488b85c0f3ff	            mov rax, qword [rbp - 0xc40]	      3689	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060c4	        0xc6402204	                mov byte [rax + 0x22], 4	      3689	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060c8	              0x90	                                     nop	      3691	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	SWITCH_1
0x40060c9	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3701	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x40060d0	    0x483b8590f3ff	            cmp rax, qword [rbp - 0xc70]	      3701	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x40060d7	            0x745f	                            je 0x4006138	      3701	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x40060d9	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3706	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x40060e0	          0x488b00	                    mov rax, qword [rax]	      3706	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x40060e3	    0x488985c8f3ff	            mov qword [rbp - 0xc38], rax	      3706	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x40060ea	    0x488b8580f3ff	            mov rax, qword [rbp - 0xc80]	      3707	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x40060f1	    0x48898598f3ff	            mov qword [rbp - 0xc68], rax	      3707	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x40060f8	            0xeb1d	                           jmp 0x4006117	      3707	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x40060fa	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      3708	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4006101	        0x488b50f8	                mov rdx, qword [rax - 8]	      3708	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4006105	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      3708	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x400610c	          0x488910	                    mov qword [rax], rdx	      3708	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x400610f	    0x4883ad98f3ff	              sub qword [rbp - 0xc68], 8	      3707	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4006117	    0x488b8598f3ff	            mov rax, qword [rbp - 0xc68]	      3707	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x400611e	    0x483b8590f3ff	            cmp rax, qword [rbp - 0xc70]	      3707	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4006125	            0x77d3	                            ja 0x40060fa	      3707	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34	FOR_5
0x4006127	    0x488b8590f3ff	            mov rax, qword [rbp - 0xc70]	      3709	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x400612e	    0x488b95c8f3ff	            mov rdx, qword [rbp - 0xc38]	      3709	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x4006135	          0x488910	                    mov qword [rax], rdx	      3709	coffcode.h	FUNCTION_46	FOR_3	IF_28	IF_33	IF_34
0x4006138	    0x488b8538f3ff	            mov rax, qword [rbp - 0xcc8]	      3445	coffcode.h	FUNCTION_46	FOR_3
0x400613f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3445	coffcode.h	FUNCTION_46	FOR_3
0x4006143	    0x48898538f3ff	            mov qword [rbp - 0xcc8], rax	      3445	coffcode.h	FUNCTION_46	FOR_3
0x400614a	    0x4883bd38f3ff	              cmp qword [rbp - 0xcc8], 0	      3443	coffcode.h	FUNCTION_46	FOR_3
0x4006152	     0xf85baf7ffff	                           jne 0x4005912	      3443	coffcode.h	FUNCTION_46	FOR_3
0x4006158	    0x48c745880000	               mov qword [rbp - 0x78], 0	      3756	coffcode.h	FUNCTION_46
0x4006160	    0x66c745a20000	                mov word [rbp - 0x5e], 0	      3757	coffcode.h	FUNCTION_46
0x4006166	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3759	coffcode.h	FUNCTION_46	IF_37
0x400616d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3759	coffcode.h	FUNCTION_46	IF_37
0x4006170	          0xc1e805	                              shr eax, 5	      3759	coffcode.h	FUNCTION_46	IF_37
0x4006173	      0x25ffff0f00	                        and eax, 0xfffff	      3759	coffcode.h	FUNCTION_46	IF_37
0x4006178	          0x83e002	                              and eax, 2	      3759	coffcode.h	FUNCTION_46	IF_37
0x400617b	            0x85c0	                           test eax, eax	      3759	coffcode.h	FUNCTION_46	IF_37
0x400617d	            0x741b	                            je 0x400619a	      3759	coffcode.h	FUNCTION_46	IF_37
0x400617f	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3760	coffcode.h	FUNCTION_46	CALL_55
0x4006186	        0x488b4008	                mov rax, qword [rax + 8]	      3760	coffcode.h	FUNCTION_46	CALL_55
0x400618a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3760	coffcode.h	FUNCTION_46	CALL_55
0x4006191	          0x8b4054	            mov eax, dword [rax + 0x54] 	      3760	coffcode.h	FUNCTION_46	CALL_55
0x4006194	        0x668945a0	               mov word [rbp - 0x60], ax	      3760	coffcode.h	FUNCTION_46	CALL_55
0x4006198	            0xeb06	                           jmp 0x40061a0	      3760	coffcode.h	FUNCTION_46	CALL_55
0x400619a	    0x66c745a00000	                mov word [rbp - 0x60], 0	      3763	coffcode.h	FUNCTION_46	ELSE_11
0x40061a0	    0x83bd18f3ffff	              cmp dword [rbp - 0xce8], 0	      3774	coffcode.h	FUNCTION_46	IF_39
0x40061a7	            0x750b	                           jne 0x40061b4	      3774	coffcode.h	FUNCTION_46	IF_39
0x40061a9	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3775	coffcode.h	FUNCTION_46	IF_39
0x40061ad	          0x83c801	                               or eax, 1	      3775	coffcode.h	FUNCTION_46	IF_39
0x40061b0	        0x668945a2	               mov word [rbp - 0x5e], ax	      3775	coffcode.h	FUNCTION_46	IF_39
0x40061b4	    0x83bd1cf3ffff	              cmp dword [rbp - 0xce4], 0	      3776	coffcode.h	FUNCTION_46	IF_40
0x40061bb	            0x750b	                           jne 0x40061c8	      3776	coffcode.h	FUNCTION_46	IF_40
0x40061bd	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3777	coffcode.h	FUNCTION_46	IF_40
0x40061c1	          0x83c804	                               or eax, 4	      3777	coffcode.h	FUNCTION_46	IF_40
0x40061c4	        0x668945a2	               mov word [rbp - 0x5e], ax	      3777	coffcode.h	FUNCTION_46	IF_40
0x40061c8	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3778	coffcode.h	FUNCTION_46	IF_41
0x40061cf	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3778	coffcode.h	FUNCTION_46	IF_41
0x40061d2	          0xc1e805	                              shr eax, 5	      3778	coffcode.h	FUNCTION_46	IF_41
0x40061d5	      0x25ffff0f00	                        and eax, 0xfffff	      3778	coffcode.h	FUNCTION_46	IF_41
0x40061da	          0x83e002	                              and eax, 2	      3778	coffcode.h	FUNCTION_46	IF_41
0x40061dd	            0x85c0	                           test eax, eax	      3778	coffcode.h	FUNCTION_46	IF_41
0x40061df	            0x740b	                            je 0x40061ec	      3778	coffcode.h	FUNCTION_46	IF_41
0x40061e1	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3779	coffcode.h	FUNCTION_46	IF_41
0x40061e5	          0x83c802	                               or eax, 2	      3779	coffcode.h	FUNCTION_46	IF_41
0x40061e8	        0x668945a2	               mov word [rbp - 0x5e], ax	      3779	coffcode.h	FUNCTION_46	IF_41
0x40061ec	    0x83bd20f3ffff	              cmp dword [rbp - 0xce0], 0	      3781	coffcode.h	FUNCTION_46	IF_42
0x40061f3	            0x750b	                           jne 0x4006200	      3781	coffcode.h	FUNCTION_46	IF_42
0x40061f5	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3782	coffcode.h	FUNCTION_46	IF_42
0x40061f9	          0x80cc02	                                or ah, 2	      3782	coffcode.h	FUNCTION_46	IF_42
0x40061fc	        0x668945a2	               mov word [rbp - 0x5e], ax	      3782	coffcode.h	FUNCTION_46	IF_42
0x4006200	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3783	coffcode.h	FUNCTION_46	IF_43	CALL_58
0x4006207	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3783	coffcode.h	FUNCTION_46	IF_43	CALL_58
0x400620e	    0x8b8098020000	           mov eax, dword [rax + 0x298] 	      3783	coffcode.h	FUNCTION_46	IF_43	CALL_58
0x4006214	          0x83e020	                           and eax, 0x20	      3783	coffcode.h	FUNCTION_46	IF_43	CALL_58
0x4006217	            0x85c0	                           test eax, eax	      3783	coffcode.h	FUNCTION_46	IF_43	CALL_58
0x4006219	            0x740b	                            je 0x4006226	      3783	coffcode.h	FUNCTION_46	IF_43	CALL_58
0x400621b	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3784	coffcode.h	FUNCTION_46	IF_43
0x400621f	          0x83c820	                            or eax, 0x20	      3784	coffcode.h	FUNCTION_46	IF_43
0x4006222	        0x668945a2	               mov word [rbp - 0x5e], ax	      3784	coffcode.h	FUNCTION_46	IF_43
0x4006226	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3789	coffcode.h	FUNCTION_46
0x400622a	          0x80cc01	                                or ah, 1	      3789	coffcode.h	FUNCTION_46
0x400622d	        0x668945a2	               mov word [rbp - 0x5e], ax	      3789	coffcode.h	FUNCTION_46
0x4006231	    0x488d8530f4ff	                  lea rax, [rbp - 0xbd0]	      3817	coffcode.h	FUNCTION_46	CALL_60
0x4006238	      0xba80020000	                          mov edx, 0x280	      3817	coffcode.h	FUNCTION_46	CALL_60
0x400623d	      0xbe00000000	                              mov esi, 0	      3817	coffcode.h	FUNCTION_46	CALL_60
0x4006242	          0x4889c7	                            mov rdi, rax	      3817	coffcode.h	FUNCTION_46	CALL_60
0x4006245	      0xe800000000	                          call 0x400624a	      3817	coffcode.h	FUNCTION_46	CALL_60
0x400624a	    0xc78514f3ffff	              mov dword [rbp - 0xcec], 0	      3821	coffcode.h	FUNCTION_46
0x4006254	    0x66c78512f3ff	               mov word [rbp - 0xcee], 0	      3822	coffcode.h	FUNCTION_46
0x400625d	    0x488d9512f3ff	                  lea rdx, [rbp - 0xcee]	      3824	coffcode.h	FUNCTION_46	CALL_61
0x4006264	    0x488d8d14f3ff	                  lea rcx, [rbp - 0xcec]	      3824	coffcode.h	FUNCTION_46	CALL_61
0x400626b	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3824	coffcode.h	FUNCTION_46	CALL_61
0x4006272	          0x4889ce	                            mov rsi, rcx	      3824	coffcode.h	FUNCTION_46	CALL_61
0x4006275	          0x4889c7	                            mov rdi, rax	      3824	coffcode.h	FUNCTION_46	CALL_61
0x4006278	      0xe8e1e4ffff	                 call sym.coff_set_flags	      3824	coffcode.h	FUNCTION_46	CALL_61
0x400627d	    0x8b8514f3ffff	            mov eax, dword [rbp - 0xcec]	      3825	coffcode.h	FUNCTION_46
0x4006283	        0x66894580	               mov word [rbp - 0x80], ax	      3825	coffcode.h	FUNCTION_46
0x4006287	         0xfb755a2	            movzx edx, word [rbp - 0x5e]	      3826	coffcode.h	FUNCTION_46
0x400628b	     0xfb78512f3ff	           movzx eax, word [rbp - 0xcee]	      3826	coffcode.h	FUNCTION_46
0x4006292	             0x9d0	                             or eax, edx	      3826	coffcode.h	FUNCTION_46
0x4006294	        0x668945a2	               mov word [rbp - 0x5e], ax	      3826	coffcode.h	FUNCTION_46
0x4006298	    0x66c78530f4ff	          mov word [rbp - 0xbd0], 0x10b 	      3860	coffcode.h	FUNCTION_46
0x40062a1	    0x66c78532f4ff	               mov word [rbp - 0xbce], 0	      3901	coffcode.h	FUNCTION_46
0x40062aa	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3904	coffcode.h	FUNCTION_46	CALL_62
0x40062b1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3904	coffcode.h	FUNCTION_46	CALL_62
0x40062b8	    0x488b95b0f3ff	            mov rdx, qword [rbp - 0xc50]	      3904	coffcode.h	FUNCTION_46	CALL_62
0x40062bf	        0x48895018	             mov qword [rax + 0x18], rdx	      3904	coffcode.h	FUNCTION_46	CALL_62
0x40062c3	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3906	coffcode.h	FUNCTION_46	IF_47
0x40062ca	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3906	coffcode.h	FUNCTION_46	IF_47
0x40062d0	            0x85c0	                           test eax, eax	      3906	coffcode.h	FUNCTION_46	IF_47
0x40062d2	     0xf8495000000	                            je 0x400636d	      3906	coffcode.h	FUNCTION_46	IF_47
0x40062d8	    0x488d9514f3ff	                  lea rdx, [rbp - 0xcec]	      3910	coffcode.h	FUNCTION_46	IF_47	IF_48	CALL_63
0x40062df	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3910	coffcode.h	FUNCTION_46	IF_47	IF_48	CALL_63
0x40062e6	          0x4889d6	                            mov rsi, rdx	      3910	coffcode.h	FUNCTION_46	IF_47	IF_48	CALL_63
0x40062e9	          0x4889c7	                            mov rdi, rax	      3910	coffcode.h	FUNCTION_46	IF_47	IF_48	CALL_63
0x40062ec	      0xe800000000	                          call 0x40062f1	      3910	coffcode.h	FUNCTION_46	IF_47	IF_48	CALL_63
0x40062f1	            0x85c0	                           test eax, eax	      3910	coffcode.h	FUNCTION_46	IF_47	IF_48	CALL_63
0x40062f3	            0x750a	                           jne 0x40062ff	      3910	coffcode.h	FUNCTION_46	IF_47	IF_48	CALL_63
0x40062f5	      0xb800000000	                              mov eax, 0	      3911	coffcode.h	FUNCTION_46	IF_47	IF_48
0x40062fa	      0xe936040000	                           jmp 0x4006735	      3911	coffcode.h	FUNCTION_46	IF_47	IF_48
0x40062ff	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3912	coffcode.h	FUNCTION_46	IF_47	CALL_64
0x4006306	          0x4889c7	                            mov rdi, rax	      3912	coffcode.h	FUNCTION_46	IF_47	CALL_64
0x4006309	      0xe800000000	                          call 0x400630e	      3912	coffcode.h	FUNCTION_46	IF_47	CALL_64
0x400630e	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3913	coffcode.h	FUNCTION_46	IF_47	IF_49	CALL_65
0x4006315	          0x4889c7	                            mov rdi, rax	      3913	coffcode.h	FUNCTION_46	IF_47	IF_49	CALL_65
0x4006318	      0xe800000000	                          call 0x400631d	      3913	coffcode.h	FUNCTION_46	IF_47	IF_49	CALL_65
0x400631d	            0x85c0	                           test eax, eax	      3913	coffcode.h	FUNCTION_46	IF_47	IF_49	CALL_65
0x400631f	            0x750a	                           jne 0x400632b	      3913	coffcode.h	FUNCTION_46	IF_47	IF_49	CALL_65
0x4006321	      0xb800000000	                              mov eax, 0	      3914	coffcode.h	FUNCTION_46	IF_47	IF_49
0x4006326	      0xe90a040000	                           jmp 0x4006735	      3914	coffcode.h	FUNCTION_46	IF_47	IF_49
0x400632b	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3915	coffcode.h	FUNCTION_46	IF_47	IF_50	CALL_66
0x4006332	          0x4889c7	                            mov rdi, rax	      3915	coffcode.h	FUNCTION_46	IF_47	IF_50	CALL_66
0x4006335	      0xe800000000	                          call 0x400633a	      3915	coffcode.h	FUNCTION_46	IF_47	IF_50	CALL_66
0x400633a	            0x85c0	                           test eax, eax	      3915	coffcode.h	FUNCTION_46	IF_47	IF_50	CALL_66
0x400633c	            0x750a	                           jne 0x4006348	      3915	coffcode.h	FUNCTION_46	IF_47	IF_50	CALL_66
0x400633e	      0xb800000000	                              mov eax, 0	      3916	coffcode.h	FUNCTION_46	IF_47	IF_50
0x4006343	      0xe9ed030000	                           jmp 0x4006735	      3916	coffcode.h	FUNCTION_46	IF_47	IF_50
0x4006348	    0x8b9514f3ffff	            mov edx, dword [rbp - 0xcec]	      3917	coffcode.h	FUNCTION_46	IF_47	IF_51	CALL_67
0x400634e	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3917	coffcode.h	FUNCTION_46	IF_47	IF_51	CALL_67
0x4006355	            0x89d6	                            mov esi, edx	      3917	coffcode.h	FUNCTION_46	IF_47	IF_51	CALL_67
0x4006357	          0x4889c7	                            mov rdi, rax	      3917	coffcode.h	FUNCTION_46	IF_47	IF_51	CALL_67
0x400635a	      0xe8e4dfffff	              call sym.coff_write_relocs	      3917	coffcode.h	FUNCTION_46	IF_47	IF_51	CALL_67
0x400635f	            0x85c0	                           test eax, eax	      3917	coffcode.h	FUNCTION_46	IF_47	IF_51	CALL_67
0x4006361	            0x7545	                           jne 0x40063a8	      3917	coffcode.h	FUNCTION_46	IF_47	IF_51	CALL_67
0x4006363	      0xb800000000	                              mov eax, 0	      3918	coffcode.h	FUNCTION_46	IF_47	IF_51
0x4006368	      0xe9c8030000	                           jmp 0x4006735	      3918	coffcode.h	FUNCTION_46	IF_47	IF_51
0x400636d	    0x83bd24f3ffff	              cmp dword [rbp - 0xcdc], 0	      3921	coffcode.h	FUNCTION_46	ELSE_14	IF_52	CALL_68
0x4006374	            0x7432	                            je 0x40063a8	      3921	coffcode.h	FUNCTION_46	ELSE_14	IF_52	CALL_68
0x4006376	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3921	coffcode.h	FUNCTION_46	ELSE_14	IF_52	CALL_68
0x400637d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3921	coffcode.h	FUNCTION_46	ELSE_14	IF_52	CALL_68
0x4006384	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3921	coffcode.h	FUNCTION_46	ELSE_14	IF_52	CALL_68
0x4006387	            0x85c0	                           test eax, eax	      3921	coffcode.h	FUNCTION_46	ELSE_14	IF_52	CALL_68
0x4006389	            0x751d	                           jne 0x40063a8	      3921	coffcode.h	FUNCTION_46	ELSE_14	IF_52	CALL_68
0x400638b	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3925	coffcode.h	FUNCTION_46	ELSE_14	IF_52	IF_53	CALL_69
0x4006392	          0x4889c7	                            mov rdi, rax	      3925	coffcode.h	FUNCTION_46	ELSE_14	IF_52	IF_53	CALL_69
0x4006395	      0xe800000000	                          call 0x400639a	      3925	coffcode.h	FUNCTION_46	ELSE_14	IF_52	IF_53	CALL_69
0x400639a	            0x85c0	                           test eax, eax	      3925	coffcode.h	FUNCTION_46	ELSE_14	IF_52	IF_53	CALL_69
0x400639c	            0x750a	                           jne 0x40063a8	      3925	coffcode.h	FUNCTION_46	ELSE_14	IF_52	IF_53	CALL_69
0x400639e	      0xb800000000	                              mov eax, 0	      3926	coffcode.h	FUNCTION_46	ELSE_14	IF_52	IF_53
0x40063a3	      0xe98d030000	                           jmp 0x4006735	      3926	coffcode.h	FUNCTION_46	ELSE_14	IF_52	IF_53
0x40063a8	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3950	coffcode.h	FUNCTION_46	IF_56	CALL_72
0x40063af	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3950	coffcode.h	FUNCTION_46	IF_56	CALL_72
0x40063b6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3950	coffcode.h	FUNCTION_46	IF_56	CALL_72
0x40063ba	          0x4885c0	                           test rax, rax	      3950	coffcode.h	FUNCTION_46	IF_56	CALL_72
0x40063bd	            0x740d	                            je 0x40063cc	      3950	coffcode.h	FUNCTION_46	IF_56	CALL_72
0x40063bf	    0x488b85b0f3ff	            mov rax, qword [rbp - 0xc50]	      3952	coffcode.h	FUNCTION_46	IF_56
0x40063c6	        0x48894590	             mov qword [rbp - 0x70], rax	      3952	coffcode.h	FUNCTION_46	IF_56
0x40063ca	            0xeb29	                           jmp 0x40063f5	      3952	coffcode.h	FUNCTION_46	IF_56
0x40063cc	    0x83bd24f3ffff	              cmp dword [rbp - 0xcdc], 0	      3961	coffcode.h	FUNCTION_46	ELSE_16	IF_57
0x40063d3	            0x740d	                            je 0x40063e2	      3961	coffcode.h	FUNCTION_46	ELSE_16	IF_57
0x40063d5	    0x488b85b0f3ff	            mov rax, qword [rbp - 0xc50]	      3962	coffcode.h	FUNCTION_46	ELSE_16	IF_57
0x40063dc	        0x48894590	             mov qword [rbp - 0x70], rax	      3962	coffcode.h	FUNCTION_46	ELSE_16	IF_57
0x40063e0	            0xeb08	                           jmp 0x40063ea	      3962	coffcode.h	FUNCTION_46	ELSE_16	IF_57
0x40063e2	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3964	coffcode.h	FUNCTION_46	ELSE_16	ELSE_17
0x40063ea	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      3965	coffcode.h	FUNCTION_46	ELSE_16	ELSE_17
0x40063ee	          0x83c808	                               or eax, 8	      3965	coffcode.h	FUNCTION_46	ELSE_16	ELSE_17
0x40063f1	        0x668945a2	               mov word [rbp - 0x5e], ax	      3965	coffcode.h	FUNCTION_46	ELSE_16	ELSE_17
0x40063f5	    0x4883bd60f3ff	              cmp qword [rbp - 0xca0], 0	      3968	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x40063fd	            0x7437	                            je 0x4006436	      3968	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x40063ff	    0x488b8560f3ff	            mov rax, qword [rbp - 0xca0]	      3970	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x4006406	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3970	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x400640a	    0x48898538f4ff	            mov qword [rbp - 0xbc8], rax	      3970	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x4006411	    0x488b8538f4ff	            mov rax, qword [rbp - 0xbc8]	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x4006418	          0x4885c0	                           test rax, rax	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x400641b	            0x740d	                            je 0x400642a	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x400641d	    0x488b8560f3ff	            mov rax, qword [rbp - 0xca0]	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x4006424	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x4006428	            0xeb05	                           jmp 0x400642f	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x400642a	      0xb800000000	                              mov eax, 0	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x400642f	    0x48898558f4ff	            mov qword [rbp - 0xba8], rax	      3971	coffcode.h	FUNCTION_46	ELSE_17	IF_58
0x4006436	    0x4883bd68f3ff	              cmp qword [rbp - 0xc98], 0	      3973	coffcode.h	FUNCTION_46	IF_59
0x400643e	            0x7437	                            je 0x4006477	      3973	coffcode.h	FUNCTION_46	IF_59
0x4006440	    0x488b8568f3ff	            mov rax, qword [rbp - 0xc98]	      3975	coffcode.h	FUNCTION_46	IF_59
0x4006447	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3975	coffcode.h	FUNCTION_46	IF_59
0x400644b	    0x48898540f4ff	            mov qword [rbp - 0xbc0], rax	      3975	coffcode.h	FUNCTION_46	IF_59
0x4006452	    0x488b8540f4ff	            mov rax, qword [rbp - 0xbc0]	      3976	coffcode.h	FUNCTION_46	IF_59
0x4006459	          0x4885c0	                           test rax, rax	      3976	coffcode.h	FUNCTION_46	IF_59
0x400645c	            0x740d	                            je 0x400646b	      3976	coffcode.h	FUNCTION_46	IF_59
0x400645e	    0x488b8568f3ff	            mov rax, qword [rbp - 0xc98]	      3976	coffcode.h	FUNCTION_46	IF_59
0x4006465	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3976	coffcode.h	FUNCTION_46	IF_59
0x4006469	            0xeb05	                           jmp 0x4006470	      3976	coffcode.h	FUNCTION_46	IF_59
0x400646b	      0xb800000000	                              mov eax, 0	      3976	coffcode.h	FUNCTION_46	IF_59
0x4006470	    0x48898560f4ff	            mov qword [rbp - 0xba0], rax	      3976	coffcode.h	FUNCTION_46	IF_59
0x4006477	    0x4883bd70f3ff	              cmp qword [rbp - 0xc90], 0	      3978	coffcode.h	FUNCTION_46	IF_60
0x400647f	            0x7447	                            je 0x40064c8	      3978	coffcode.h	FUNCTION_46	IF_60
0x4006481	    0x488b8570f3ff	            mov rax, qword [rbp - 0xc90]	      3980	coffcode.h	FUNCTION_46	IF_60
0x4006488	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3980	coffcode.h	FUNCTION_46	IF_60
0x400648c	    0x48898548f4ff	            mov qword [rbp - 0xbb8], rax	      3980	coffcode.h	FUNCTION_46	IF_60
0x4006493	    0x488b8548f4ff	            mov rax, qword [rbp - 0xbb8]	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x400649a	          0x4885c0	                           test rax, rax	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x400649d	            0x7429	                            je 0x40064c8	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x400649f	    0x488b8570f3ff	            mov rax, qword [rbp - 0xc90]	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064a6	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064aa	    0x488b8560f4ff	            mov rax, qword [rbp - 0xba0]	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064b1	          0x4839c2	                            cmp rdx, rax	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064b4	            0x7312	                           jae 0x40064c8	      3981	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064b6	    0x488b8570f3ff	            mov rax, qword [rbp - 0xc90]	      3982	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064bd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3982	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064c1	    0x48898560f4ff	            mov qword [rbp - 0xba0], rax	      3982	coffcode.h	FUNCTION_46	IF_60	IF_61
0x40064c8	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3985	coffcode.h	FUNCTION_46
0x40064cf	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3985	coffcode.h	FUNCTION_46
0x40064d6	    0x48898550f4ff	            mov qword [rbp - 0xbb0], rax	      3985	coffcode.h	FUNCTION_46
0x40064dd	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      3986	coffcode.h	FUNCTION_46	CALL_73
0x40064e4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3986	coffcode.h	FUNCTION_46	CALL_73
0x40064eb	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3986	coffcode.h	FUNCTION_46	CALL_73
0x40064ef	        0x48894598	             mov qword [rbp - 0x68], rax	      3986	coffcode.h	FUNCTION_46	CALL_73
0x40064f3	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4063	coffcode.h	FUNCTION_46	CALL_87
0x40064fa	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4063	coffcode.h	FUNCTION_46	CALL_87
0x4006501	    0x488985d8f3ff	            mov qword [rbp - 0xc28], rax	      4063	coffcode.h	FUNCTION_46	CALL_87
0x4006508	    0x488b85d8f3ff	            mov rax, qword [rbp - 0xc28]	      4065	coffcode.h	FUNCTION_46	IF_70
0x400650f	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	      4065	coffcode.h	FUNCTION_46	IF_70
0x4006516	          0x4885c0	                           test rax, rax	      4065	coffcode.h	FUNCTION_46	IF_70
0x4006519	            0x741a	                            je 0x4006535	      4065	coffcode.h	FUNCTION_46	IF_70
0x400651b	    0x488b85d8f3ff	            mov rax, qword [rbp - 0xc28]	      4066	coffcode.h	FUNCTION_46	IF_70
0x4006522	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	      4066	coffcode.h	FUNCTION_46	IF_70
0x4006529	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      4066	coffcode.h	FUNCTION_46	IF_70
0x4006530	          0x4889d7	                            mov rdi, rdx	      4066	coffcode.h	FUNCTION_46	IF_70
0x4006533	            0xffd0	                                call rax	      4066	coffcode.h	FUNCTION_46	IF_70
0x4006535	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4071	coffcode.h	FUNCTION_46	IF_71	CALL_88
0x400653c	      0xba00000000	                              mov edx, 0	      4071	coffcode.h	FUNCTION_46	IF_71	CALL_88
0x4006541	      0xbe00000000	                              mov esi, 0	      4071	coffcode.h	FUNCTION_46	IF_71	CALL_88
0x4006546	          0x4889c7	                            mov rdi, rax	      4071	coffcode.h	FUNCTION_46	IF_71	CALL_88
0x4006549	      0xe800000000	                          call 0x400654e	      4071	coffcode.h	FUNCTION_46	IF_71	CALL_88
0x400654e	            0x85c0	                           test eax, eax	      4071	coffcode.h	FUNCTION_46	IF_71	CALL_88
0x4006550	            0x740a	                            je 0x400655c	      4071	coffcode.h	FUNCTION_46	IF_71	CALL_88
0x4006552	      0xb800000000	                              mov eax, 0	      4072	coffcode.h	FUNCTION_46	IF_71
0x4006557	      0xe9d9010000	                           jmp 0x4006735	      4072	coffcode.h	FUNCTION_46	IF_71
0x400655c	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4076	coffcode.h	FUNCTION_46	CALL_89
0x4006563	        0x488b4008	                mov rax, qword [rax + 8]	      4076	coffcode.h	FUNCTION_46	CALL_89
0x4006567	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4076	coffcode.h	FUNCTION_46	CALL_89
0x400656e	          0x8b4050	            mov eax, dword [rax + 0x50] 	      4076	coffcode.h	FUNCTION_46	CALL_89
0x4006571	            0x89c0	                            mov eax, eax	      4076	coffcode.h	FUNCTION_46	CALL_89
0x4006573	    0x488985e0f3ff	            mov qword [rbp - 0xc20], rax	      4076	coffcode.h	FUNCTION_46	CALL_89
0x400657a	    0x488b85e0f3ff	            mov rax, qword [rbp - 0xc20]	      4078	coffcode.h	FUNCTION_46	CALL_90
0x4006581	          0x4889c7	                            mov rdi, rax	      4078	coffcode.h	FUNCTION_46	CALL_90
0x4006584	      0xe800000000	                          call 0x4006589	      4078	coffcode.h	FUNCTION_46	CALL_90
0x4006589	    0x488985e8f3ff	            mov qword [rbp - 0xc18], rax	      4078	coffcode.h	FUNCTION_46	CALL_90
0x4006590	    0x4883bde8f3ff	              cmp qword [rbp - 0xc18], 0	      4079	coffcode.h	FUNCTION_46	IF_72
0x4006598	            0x750a	                           jne 0x40065a4	      4079	coffcode.h	FUNCTION_46	IF_72
0x400659a	      0xb800000000	                              mov eax, 0	      4080	coffcode.h	FUNCTION_46	IF_72
0x400659f	      0xe991010000	                           jmp 0x4006735	      4080	coffcode.h	FUNCTION_46	IF_72
0x40065a4	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065ab	        0x488b4008	                mov rax, qword [rax + 8]	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065af	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065b6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065ba	    0x488b95e8f3ff	            mov rdx, qword [rbp - 0xc18]	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065c1	    0x488db5b0f6ff	                  lea rsi, [rbp - 0x950]	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065c8	    0x488b8d08f3ff	            mov rcx, qword [rbp - 0xcf8]	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065cf	          0x4889cf	                            mov rdi, rcx	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065d2	            0xffd0	                                call rax	      4082	coffcode.h	FUNCTION_46	CALL_91
0x40065d4	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      4083	coffcode.h	FUNCTION_46	CALL_92
0x40065db	    0x488b8de0f3ff	            mov rcx, qword [rbp - 0xc20]	      4083	coffcode.h	FUNCTION_46	CALL_92
0x40065e2	    0x488b85e8f3ff	            mov rax, qword [rbp - 0xc18]	      4083	coffcode.h	FUNCTION_46	CALL_92
0x40065e9	          0x4889ce	                            mov rsi, rcx	      4083	coffcode.h	FUNCTION_46	CALL_92
0x40065ec	          0x4889c7	                            mov rdi, rax	      4083	coffcode.h	FUNCTION_46	CALL_92
0x40065ef	      0xe800000000	                          call 0x40065f4	      4083	coffcode.h	FUNCTION_46	CALL_92
0x40065f4	    0x488985e0f3ff	            mov qword [rbp - 0xc20], rax	      4083	coffcode.h	FUNCTION_46	CALL_92
0x40065fb	    0x488b85e8f3ff	            mov rax, qword [rbp - 0xc18]	      4085	coffcode.h	FUNCTION_46	CALL_93
0x4006602	          0x4889c7	                            mov rdi, rax	      4085	coffcode.h	FUNCTION_46	CALL_93
0x4006605	      0xe800000000	                          call 0x400660a	      4085	coffcode.h	FUNCTION_46	CALL_93
0x400660a	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4087	coffcode.h	FUNCTION_46	IF_73	CALL_94
0x4006611	        0x488b4008	                mov rax, qword [rax + 8]	      4087	coffcode.h	FUNCTION_46	IF_73	CALL_94
0x4006615	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4087	coffcode.h	FUNCTION_46	IF_73	CALL_94
0x400661c	          0x8b4050	            mov eax, dword [rax + 0x50] 	      4087	coffcode.h	FUNCTION_46	IF_73	CALL_94
0x400661f	            0x89c0	                            mov eax, eax	      4087	coffcode.h	FUNCTION_46	IF_73	CALL_94
0x4006621	    0x483b85e0f3ff	            cmp rax, qword [rbp - 0xc20]	      4087	coffcode.h	FUNCTION_46	IF_73	CALL_94
0x4006628	            0x740a	                            je 0x4006634	      4087	coffcode.h	FUNCTION_46	IF_73	CALL_94
0x400662a	      0xb800000000	                              mov eax, 0	      4088	coffcode.h	FUNCTION_46	IF_73
0x400662f	      0xe901010000	                           jmp 0x4006735	      4088	coffcode.h	FUNCTION_46	IF_73
0x4006634	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4091	coffcode.h	FUNCTION_46	IF_74
0x400663b	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4091	coffcode.h	FUNCTION_46	IF_74
0x400663e	          0xc1e805	                              shr eax, 5	      4091	coffcode.h	FUNCTION_46	IF_74
0x4006641	      0x25ffff0f00	                        and eax, 0xfffff	      4091	coffcode.h	FUNCTION_46	IF_74
0x4006646	          0x83e002	                              and eax, 2	      4091	coffcode.h	FUNCTION_46	IF_74
0x4006649	            0x85c0	                           test eax, eax	      4091	coffcode.h	FUNCTION_46	IF_74
0x400664b	     0xf84df000000	                            je 0x4006730	      4091	coffcode.h	FUNCTION_46	IF_74
0x4006651	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4096	coffcode.h	FUNCTION_46	IF_74	CALL_95
0x4006658	        0x488b4008	                mov rax, qword [rax + 8]	      4096	coffcode.h	FUNCTION_46	IF_74	CALL_95
0x400665c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4096	coffcode.h	FUNCTION_46	IF_74	CALL_95
0x4006663	          0x8b4054	            mov eax, dword [rax + 0x54] 	      4096	coffcode.h	FUNCTION_46	IF_74	CALL_95
0x4006666	            0x89c0	                            mov eax, eax	      4096	coffcode.h	FUNCTION_46	IF_74	CALL_95
0x4006668	    0x488985f0f3ff	            mov qword [rbp - 0xc10], rax	      4096	coffcode.h	FUNCTION_46	IF_74	CALL_95
0x400666f	    0x488b85f0f3ff	            mov rax, qword [rbp - 0xc10]	      4098	coffcode.h	FUNCTION_46	IF_74	CALL_96
0x4006676	          0x4889c7	                            mov rdi, rax	      4098	coffcode.h	FUNCTION_46	IF_74	CALL_96
0x4006679	      0xe800000000	                          call 0x400667e	      4098	coffcode.h	FUNCTION_46	IF_74	CALL_96
0x400667e	    0x488985f8f3ff	            mov qword [rbp - 0xc08], rax	      4098	coffcode.h	FUNCTION_46	IF_74	CALL_96
0x4006685	    0x4883bdf8f3ff	              cmp qword [rbp - 0xc08], 0	      4099	coffcode.h	FUNCTION_46	IF_74	IF_75
0x400668d	            0x750a	                           jne 0x4006699	      4099	coffcode.h	FUNCTION_46	IF_74	IF_75
0x400668f	      0xb800000000	                              mov eax, 0	      4100	coffcode.h	FUNCTION_46	IF_74	IF_75
0x4006694	      0xe99c000000	                           jmp 0x4006735	      4100	coffcode.h	FUNCTION_46	IF_74	IF_75
0x4006699	    0x488b95f8f3ff	            mov rdx, qword [rbp - 0xc08]	      4102	coffcode.h	FUNCTION_46	IF_74	CALL_97
0x40066a0	    0x488d8d30f4ff	                  lea rcx, [rbp - 0xbd0]	      4102	coffcode.h	FUNCTION_46	IF_74	CALL_97
0x40066a7	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4102	coffcode.h	FUNCTION_46	IF_74	CALL_97
0x40066ae	          0x4889ce	                            mov rsi, rcx	      4102	coffcode.h	FUNCTION_46	IF_74	CALL_97
0x40066b1	          0x4889c7	                            mov rdi, rax	      4102	coffcode.h	FUNCTION_46	IF_74	CALL_97
0x40066b4	      0xe800000000	                          call 0x40066b9	      4102	coffcode.h	FUNCTION_46	IF_74	CALL_97
0x40066b9	    0x488b9508f3ff	            mov rdx, qword [rbp - 0xcf8]	      4103	coffcode.h	FUNCTION_46	IF_74	CALL_98
0x40066c0	    0x488b8df0f3ff	            mov rcx, qword [rbp - 0xc10]	      4103	coffcode.h	FUNCTION_46	IF_74	CALL_98
0x40066c7	    0x488b85f8f3ff	            mov rax, qword [rbp - 0xc08]	      4103	coffcode.h	FUNCTION_46	IF_74	CALL_98
0x40066ce	          0x4889ce	                            mov rsi, rcx	      4103	coffcode.h	FUNCTION_46	IF_74	CALL_98
0x40066d1	          0x4889c7	                            mov rdi, rax	      4103	coffcode.h	FUNCTION_46	IF_74	CALL_98
0x40066d4	      0xe800000000	                          call 0x40066d9	      4103	coffcode.h	FUNCTION_46	IF_74	CALL_98
0x40066d9	    0x488985f0f3ff	            mov qword [rbp - 0xc10], rax	      4103	coffcode.h	FUNCTION_46	IF_74	CALL_98
0x40066e0	    0x488b85f8f3ff	            mov rax, qword [rbp - 0xc08]	      4105	coffcode.h	FUNCTION_46	IF_74	CALL_99
0x40066e7	          0x4889c7	                            mov rdi, rax	      4105	coffcode.h	FUNCTION_46	IF_74	CALL_99
0x40066ea	      0xe800000000	                          call 0x40066ef	      4105	coffcode.h	FUNCTION_46	IF_74	CALL_99
0x40066ef	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4107	coffcode.h	FUNCTION_46	IF_74	IF_76	CALL_100
0x40066f6	        0x488b4008	                mov rax, qword [rax + 8]	      4107	coffcode.h	FUNCTION_46	IF_74	IF_76	CALL_100
0x40066fa	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4107	coffcode.h	FUNCTION_46	IF_74	IF_76	CALL_100
0x4006701	          0x8b4054	            mov eax, dword [rax + 0x54] 	      4107	coffcode.h	FUNCTION_46	IF_74	IF_76	CALL_100
0x4006704	            0x89c0	                            mov eax, eax	      4107	coffcode.h	FUNCTION_46	IF_74	IF_76	CALL_100
0x4006706	    0x483b85f0f3ff	            cmp rax, qword [rbp - 0xc10]	      4107	coffcode.h	FUNCTION_46	IF_74	IF_76	CALL_100
0x400670d	            0x7407	                            je 0x4006716	      4107	coffcode.h	FUNCTION_46	IF_74	IF_76	CALL_100
0x400670f	      0xb800000000	                              mov eax, 0	      4108	coffcode.h	FUNCTION_46	IF_74	IF_76
0x4006714	            0xeb1f	                           jmp 0x4006735	      4108	coffcode.h	FUNCTION_46	IF_74	IF_76
0x4006716	    0x488b8508f3ff	            mov rax, qword [rbp - 0xcf8]	      4111	coffcode.h	FUNCTION_46	IF_74	IF_77	CALL_101
0x400671d	          0x4889c7	                            mov rdi, rax	      4111	coffcode.h	FUNCTION_46	IF_74	IF_77	CALL_101
0x4006720	      0xe887ecffff	            call sym.coff_apply_checksum	      4111	coffcode.h	FUNCTION_46	IF_74	IF_77	CALL_101
0x4006725	            0x85c0	                           test eax, eax	      4111	coffcode.h	FUNCTION_46	IF_74	IF_77	CALL_101
0x4006727	            0x7507	                           jne 0x4006730	      4111	coffcode.h	FUNCTION_46	IF_74	IF_77	CALL_101
0x4006729	      0xb800000000	                              mov eax, 0	      4112	coffcode.h	FUNCTION_46	IF_74	IF_77
0x400672e	            0xeb05	                           jmp 0x4006735	      4112	coffcode.h	FUNCTION_46	IF_74	IF_77
0x4006730	      0xb801000000	                              mov eax, 1	      4132	coffcode.h	FUNCTION_46
0x4006735	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      4133	coffcode.h	FUNCTION_46
0x4006739	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4133	coffcode.h	FUNCTION_46
0x4006742	            0x7405	                            je 0x4006749	      4133	coffcode.h	FUNCTION_46
0x4006744	      0xe800000000	                          call 0x4006749	      4133	coffcode.h	FUNCTION_46
0x4006749	    0x4881c4e80c00	                          add rsp, 0xce8	      4133	coffcode.h	FUNCTION_46
0x4006750	              0x5b	                                 pop rbx	      4133	coffcode.h	FUNCTION_46
0x4006751	            0x415c	                                 pop r12	      4133	coffcode.h	FUNCTION_46
0x4006753	            0x415d	                                 pop r13	      4133	coffcode.h	FUNCTION_46
0x4006755	              0x5d	                                 pop rbp	      4133	coffcode.h	FUNCTION_46
0x4006756	              0xc3	                                     ret	      4133	coffcode.h	FUNCTION_46
coff_i386_rtype_to_howto	IF,10:CALL,4:ELSE,2:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0	164
0x4000435	              0x55	                                push rbp	       446	coff-i386.c	FUNCTION_68
0x4000436	          0x4889e5	                            mov rbp, rsp	       446	coff-i386.c	FUNCTION_68
0x4000439	        0x4883ec50	                           sub rsp, 0x50	       446	coff-i386.c	FUNCTION_68
0x400043d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       446	coff-i386.c	FUNCTION_68
0x4000441	        0x488975d0	             mov qword [rbp - 0x30], rsi	       446	coff-i386.c	FUNCTION_68
0x4000445	        0x488955c8	             mov qword [rbp - 0x38], rdx	       446	coff-i386.c	FUNCTION_68
0x4000449	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       446	coff-i386.c	FUNCTION_68
0x400044d	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       446	coff-i386.c	FUNCTION_68
0x4000451	        0x4c894db0	              mov qword [rbp - 0x50], r9	       446	coff-i386.c	FUNCTION_68
0x4000455	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       449	coff-i386.c	FUNCTION_68	IF_1
0x4000459	         0xfb74010	           movzx eax, word [rax + 0x10] 	       449	coff-i386.c	FUNCTION_68	IF_1
0x400045d	        0x6683f814	                            cmp ax, 0x14	       449	coff-i386.c	FUNCTION_68	IF_1
0x4000461	            0x7614	                           jbe 0x4000477	       449	coff-i386.c	FUNCTION_68	IF_1
0x4000463	      0xbf11000000	                           mov edi, 0x11	       451	coff-i386.c	FUNCTION_68	IF_1	CALL_1
0x4000468	      0xe800000000	                          call 0x400046d	       451	coff-i386.c	FUNCTION_68	IF_1	CALL_1
0x400046d	      0xb800000000	                              mov eax, 0	       452	coff-i386.c	FUNCTION_68	IF_1
0x4000472	      0xe91a020000	                           jmp 0x4000691	       452	coff-i386.c	FUNCTION_68	IF_1
0x4000477	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       455	coff-i386.c	FUNCTION_68
0x400047b	         0xfb74010	           movzx eax, word [rax + 0x10] 	       455	coff-i386.c	FUNCTION_68
0x400047f	           0xfb7d0	                           movzx edx, ax	       455	coff-i386.c	FUNCTION_68
0x4000482	          0x4889d0	                            mov rax, rdx	       455	coff-i386.c	FUNCTION_68
0x4000485	        0x48c1e002	                              shl rax, 2	       455	coff-i386.c	FUNCTION_68
0x4000489	          0x4801d0	                            add rax, rdx	       455	coff-i386.c	FUNCTION_68
0x400048c	        0x48c1e004	                              shl rax, 4	       455	coff-i386.c	FUNCTION_68
0x4000490	    0x480500000000	                              add rax, 0	       455	coff-i386.c	FUNCTION_68
0x4000496	        0x488945f8	                mov qword [rbp - 8], rax	       455	coff-i386.c	FUNCTION_68
0x400049a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       459	coff-i386.c	FUNCTION_68
0x400049e	    0x48c700000000	                      mov qword [rax], 0	       459	coff-i386.c	FUNCTION_68
0x40004a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       462	coff-i386.c	FUNCTION_68	IF_2
0x40004a9	          0x8b4010	            mov eax, dword [rax + 0x10] 	       462	coff-i386.c	FUNCTION_68	IF_2
0x40004ac	            0x85c0	                           test eax, eax	       462	coff-i386.c	FUNCTION_68	IF_2
0x40004ae	            0x7419	                            je 0x40004c9	       462	coff-i386.c	FUNCTION_68	IF_2
0x40004b0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       463	coff-i386.c	FUNCTION_68	IF_2
0x40004b4	          0x488b10	                    mov rdx, qword [rax]	       463	coff-i386.c	FUNCTION_68	IF_2
0x40004b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       463	coff-i386.c	FUNCTION_68	IF_2
0x40004bb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       463	coff-i386.c	FUNCTION_68	IF_2
0x40004bf	          0x4801c2	                            add rdx, rax	       463	coff-i386.c	FUNCTION_68	IF_2
0x40004c2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       463	coff-i386.c	FUNCTION_68	IF_2
0x40004c6	          0x488910	                    mov qword [rax], rdx	       463	coff-i386.c	FUNCTION_68	IF_2
0x40004c9	      0x48837db800	               cmp qword [rbp - 0x48], 0	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004ce	            0x742e	                            je 0x40004fe	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004d4	          0x8b4018	            mov eax, dword [rax + 0x18] 	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004d7	            0x85c0	                           test eax, eax	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004d9	            0x7523	                           jne 0x40004fe	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004db	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004df	        0x488b4010	            mov rax, qword [rax + 0x10] 	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004e3	          0x4885c0	                           test rax, rax	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004e6	            0x7416	                            je 0x40004fe	       465	coff-i386.c	FUNCTION_68	IF_3
0x40004e8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       473	coff-i386.c	FUNCTION_68	IF_3	CALL_2
0x40004ed	            0x750f	                           jne 0x40004fe	       473	coff-i386.c	FUNCTION_68	IF_3	CALL_2
0x40004ef	      0xbed9010000	                          mov esi, 0x1d9	       473	coff-i386.c	FUNCTION_68	IF_3	CALL_2
0x40004f4	      0xbf00000000	                              mov edi, 0	       473	coff-i386.c	FUNCTION_68	IF_3	CALL_2
0x40004f9	      0xe800000000	                          call 0x40004fe	       473	coff-i386.c	FUNCTION_68	IF_3	CALL_2
0x40004fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	coff-i386.c	FUNCTION_68	IF_5
0x4000502	          0x8b4010	            mov eax, dword [rax + 0x10] 	       496	coff-i386.c	FUNCTION_68	IF_5
0x4000505	            0x85c0	                           test eax, eax	       496	coff-i386.c	FUNCTION_68	IF_5
0x4000507	            0x743d	                            je 0x4000546	       496	coff-i386.c	FUNCTION_68	IF_5
0x4000509	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       498	coff-i386.c	FUNCTION_68	IF_5
0x400050d	          0x488b00	                    mov rax, qword [rax]	       498	coff-i386.c	FUNCTION_68	IF_5
0x4000510	        0x488d50fc	                      lea rdx, [rax - 4]	       498	coff-i386.c	FUNCTION_68	IF_5
0x4000514	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       498	coff-i386.c	FUNCTION_68	IF_5
0x4000518	          0x488910	                    mov qword [rax], rdx	       498	coff-i386.c	FUNCTION_68	IF_5
0x400051b	      0x48837db800	               cmp qword [rbp - 0x48], 0	       506	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000520	            0x7424	                            je 0x4000546	       506	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000522	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       506	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000526	          0x8b4018	            mov eax, dword [rax + 0x18] 	       506	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000529	            0x85c0	                           test eax, eax	       506	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x400052b	            0x7419	                            je 0x4000546	       506	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x400052d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       507	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000531	          0x488b10	                    mov rdx, qword [rax]	       507	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000534	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       507	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000538	        0x488b4010	            mov rax, qword [rax + 0x10] 	       507	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x400053c	          0x4829c2	                            sub rdx, rax	       507	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x400053f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       507	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000543	          0x488910	                    mov qword [rax], rdx	       507	coff-i386.c	FUNCTION_68	IF_5	IF_6
0x4000546	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	coff-i386.c	FUNCTION_68	IF_7
0x400054a	         0xfb74010	           movzx eax, word [rax + 0x10] 	       510	coff-i386.c	FUNCTION_68	IF_7
0x400054e	        0x6683f807	                               cmp ax, 7	       510	coff-i386.c	FUNCTION_68	IF_7
0x4000552	            0x7549	                           jne 0x400059d	       510	coff-i386.c	FUNCTION_68	IF_7
0x4000554	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       511	coff-i386.c	FUNCTION_68	IF_7
0x4000558	        0x488b4068	            mov rax, qword [rax + 0x68] 	       511	coff-i386.c	FUNCTION_68	IF_7
0x400055c	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       511	coff-i386.c	FUNCTION_68	IF_7
0x4000563	        0x488b4008	                mov rax, qword [rax + 8]	       511	coff-i386.c	FUNCTION_68	IF_7
0x4000567	          0x8b4008	                mov eax, dword [rax + 8]	       511	coff-i386.c	FUNCTION_68	IF_7
0x400056a	          0x83f802	                              cmp eax, 2	       511	coff-i386.c	FUNCTION_68	IF_7
0x400056d	            0x752e	                           jne 0x400059d	       511	coff-i386.c	FUNCTION_68	IF_7
0x400056f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x4000573	          0x488b10	                    mov rdx, qword [rax]	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x4000576	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x400057a	        0x488b4068	            mov rax, qword [rax + 0x68] 	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x400057e	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x4000585	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x400058c	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x4000593	          0x4829c2	                            sub rdx, rax	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x4000596	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x400059a	          0x488910	                    mov qword [rax], rdx	       514	coff-i386.c	FUNCTION_68	IF_7	CALL_3
0x400059d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       518	coff-i386.c	FUNCTION_68	IF_8
0x40005a1	         0xfb74010	           movzx eax, word [rax + 0x10] 	       518	coff-i386.c	FUNCTION_68	IF_8
0x40005a5	        0x6683f814	                            cmp ax, 0x14	       518	coff-i386.c	FUNCTION_68	IF_8
0x40005a9	            0x7521	                           jne 0x40005cc	       518	coff-i386.c	FUNCTION_68	IF_8
0x40005ab	      0x48837db800	               cmp qword [rbp - 0x48], 0	       518	coff-i386.c	FUNCTION_68	IF_8
0x40005b0	            0x751a	                           jne 0x40005cc	       518	coff-i386.c	FUNCTION_68	IF_8
0x40005b2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005b6	          0x488b10	                    mov rdx, qword [rax]	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005bd	          0x488b00	                    mov rax, qword [rax]	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005c0	          0x4829c2	                            sub rdx, rax	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005c3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005c7	          0x488910	                    mov qword [rax], rdx	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005ca	            0xeb16	                           jmp 0x40005e2	       519	coff-i386.c	FUNCTION_68	IF_8
0x40005cc	      0x48837db800	               cmp qword [rbp - 0x48], 0	       521	coff-i386.c	FUNCTION_68	CALL_4
0x40005d1	            0x750f	                           jne 0x40005e2	       521	coff-i386.c	FUNCTION_68	CALL_4
0x40005d3	      0xbe09020000	                          mov esi, 0x209	       521	coff-i386.c	FUNCTION_68	CALL_4
0x40005d8	      0xbf00000000	                              mov edi, 0	       521	coff-i386.c	FUNCTION_68	CALL_4
0x40005dd	      0xe800000000	                          call 0x40005e2	       521	coff-i386.c	FUNCTION_68	CALL_4
0x40005e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       523	coff-i386.c	FUNCTION_68	IF_9
0x40005e6	         0xfb74010	           movzx eax, word [rax + 0x10] 	       523	coff-i386.c	FUNCTION_68	IF_9
0x40005ea	        0x6683f80b	                             cmp ax, 0xb	       523	coff-i386.c	FUNCTION_68	IF_9
0x40005ee	     0xf8599000000	                           jne 0x400068d	       523	coff-i386.c	FUNCTION_68	IF_9
0x40005f4	      0x48837db800	               cmp qword [rbp - 0x48], 0	       523	coff-i386.c	FUNCTION_68	IF_9
0x40005f9	     0xf848e000000	                            je 0x400068d	       523	coff-i386.c	FUNCTION_68	IF_9
0x40005ff	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       527	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000604	            0x742e	                            je 0x4000634	       527	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000606	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       527	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x400060a	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       527	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x400060e	            0x3c03	                               cmp al, 3	       527	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000610	            0x740c	                            je 0x400061e	       527	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000612	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       528	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000616	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       528	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x400061a	            0x3c04	                               cmp al, 4	       528	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x400061c	            0x7516	                           jne 0x4000634	       528	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x400061e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       529	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000622	        0x488b4028	            mov rax, qword [rax + 0x28] 	       529	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000626	        0x488b4068	            mov rax, qword [rax + 0x68] 	       529	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x400062a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       529	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x400062e	        0x488945e8	             mov qword [rbp - 0x18], rax	       529	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000632	            0xeb44	                           jmp 0x4000678	       529	coff-i386.c	FUNCTION_68	IF_9	IF_10
0x4000634	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000638	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x400063f	        0x488945f0	             mov qword [rbp - 0x10], rax	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000643	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x400064a	            0xeb10	                           jmp 0x400065c	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x400064c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       539	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000650	        0x488b4010	            mov rax, qword [rax + 0x10] 	       539	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000654	        0x488945f0	             mov qword [rbp - 0x10], rax	       539	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000658	        0x8345e401	               add dword [rbp - 0x1c], 1	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x400065c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000660	          0x8b4018	            mov eax, dword [rax + 0x18] 	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000663	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000666	            0x7fe4	                            jg 0x400064c	       538	coff-i386.c	FUNCTION_68	IF_9	ELSE_2	FOR_1
0x4000668	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       541	coff-i386.c	FUNCTION_68	IF_9	ELSE_2
0x400066c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       541	coff-i386.c	FUNCTION_68	IF_9	ELSE_2
0x4000670	        0x488b4028	            mov rax, qword [rax + 0x28] 	       541	coff-i386.c	FUNCTION_68	IF_9	ELSE_2
0x4000674	        0x488945e8	             mov qword [rbp - 0x18], rax	       541	coff-i386.c	FUNCTION_68	IF_9	ELSE_2
0x4000678	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       544	coff-i386.c	FUNCTION_68	IF_9
0x400067c	          0x488b00	                    mov rax, qword [rax]	       544	coff-i386.c	FUNCTION_68	IF_9
0x400067f	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       544	coff-i386.c	FUNCTION_68	IF_9
0x4000683	          0x4889c2	                            mov rdx, rax	       544	coff-i386.c	FUNCTION_68	IF_9
0x4000686	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       544	coff-i386.c	FUNCTION_68	IF_9
0x400068a	          0x488910	                    mov qword [rax], rdx	       544	coff-i386.c	FUNCTION_68	IF_9
0x400068d	        0x488b45f8	                mov rax, qword [rbp - 8]	       548	coff-i386.c	FUNCTION_68
0x4000691	              0xc9	                                   leave	       549	coff-i386.c	FUNCTION_68
0x4000692	              0xc3	                                     ret	       549	coff-i386.c	FUNCTION_68
pe_ILF_save_relocs	IF,1:CALL,5:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	67
0x40011ac	              0x55	                                push rbp	       495	peicode.h	FUNCTION_11
0x40011ad	          0x4889e5	                            mov rbp, rsp	       495	peicode.h	FUNCTION_11
0x40011b0	        0x4883ec10	                           sub rsp, 0x10	       495	peicode.h	FUNCTION_11
0x40011b4	        0x48897df8	                mov qword [rbp - 8], rdi	       495	peicode.h	FUNCTION_11
0x40011b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       495	peicode.h	FUNCTION_11
0x40011bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       497	peicode.h	FUNCTION_11	IF_1	CALL_1
0x40011c0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       497	peicode.h	FUNCTION_11	IF_1	CALL_1
0x40011c7	          0x4885c0	                           test rax, rax	       497	peicode.h	FUNCTION_11	IF_1	CALL_1
0x40011ca	            0x7514	                           jne 0x40011e0	       497	peicode.h	FUNCTION_11	IF_1	CALL_1
0x40011cc	      0xba00000000	                              mov edx, 0	       499	peicode.h	FUNCTION_11	CALL_2
0x40011d1	      0xbef3010000	                          mov esi, 0x1f3	       499	peicode.h	FUNCTION_11	CALL_2
0x40011d6	      0xbf00000000	                              mov edi, 0	       499	peicode.h	FUNCTION_11	CALL_2
0x40011db	      0xe800000000	                          call 0x40011e0	       499	peicode.h	FUNCTION_11	CALL_2
0x40011e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       501	peicode.h	FUNCTION_11	CALL_3
0x40011e4	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       501	peicode.h	FUNCTION_11	CALL_3
0x40011eb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       501	peicode.h	FUNCTION_11	CALL_3
0x40011ef	    0x488b92a80000	            mov rdx, qword [rdx + 0xa8] 	       501	peicode.h	FUNCTION_11	CALL_3
0x40011f6	          0x488910	                    mov qword [rax], rdx	       501	peicode.h	FUNCTION_11	CALL_3
0x40011f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       502	peicode.h	FUNCTION_11	CALL_4
0x40011fd	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       502	peicode.h	FUNCTION_11	CALL_4
0x4001204	    0xc74008010000	                  mov dword [rax + 8], 1	       502	peicode.h	FUNCTION_11	CALL_4
0x400120b	        0x488b45f8	                mov rax, qword [rbp - 8]	       504	peicode.h	FUNCTION_11
0x400120f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       504	peicode.h	FUNCTION_11
0x4001213	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       504	peicode.h	FUNCTION_11
0x4001217	        0x48895078	             mov qword [rax + 0x78], rdx	       504	peicode.h	FUNCTION_11
0x400121b	        0x488b45f8	                mov rax, qword [rbp - 8]	       505	peicode.h	FUNCTION_11
0x400121f	          0x8b5028	            mov edx, dword [rax + 0x28] 	       505	peicode.h	FUNCTION_11
0x4001222	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       505	peicode.h	FUNCTION_11
0x4001226	    0x899088000000	             mov dword [rax + 0x88], edx	       505	peicode.h	FUNCTION_11
0x400122c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       506	peicode.h	FUNCTION_11
0x4001230	          0x8b4020	            mov eax, dword [rax + 0x20] 	       506	peicode.h	FUNCTION_11
0x4001233	          0x83c804	                               or eax, 4	       506	peicode.h	FUNCTION_11
0x4001236	            0x89c2	                            mov edx, eax	       506	peicode.h	FUNCTION_11
0x4001238	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       506	peicode.h	FUNCTION_11
0x400123c	          0x895020	             mov dword [rax + 0x20], edx	       506	peicode.h	FUNCTION_11
0x400123f	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	peicode.h	FUNCTION_11
0x4001243	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       508	peicode.h	FUNCTION_11
0x4001247	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	peicode.h	FUNCTION_11
0x400124b	          0x8b4028	            mov eax, dword [rax + 0x28] 	       508	peicode.h	FUNCTION_11
0x400124e	            0x89c0	                            mov eax, eax	       508	peicode.h	FUNCTION_11
0x4001250	        0x48c1e005	                              shl rax, 5	       508	peicode.h	FUNCTION_11
0x4001254	          0x4801c2	                            add rdx, rax	       508	peicode.h	FUNCTION_11
0x4001257	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	peicode.h	FUNCTION_11
0x400125b	        0x48895020	             mov qword [rax + 0x20], rdx	       508	peicode.h	FUNCTION_11
0x400125f	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	peicode.h	FUNCTION_11
0x4001263	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	       509	peicode.h	FUNCTION_11
0x400126a	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	peicode.h	FUNCTION_11
0x400126e	          0x8b4028	            mov eax, dword [rax + 0x28] 	       509	peicode.h	FUNCTION_11
0x4001271	            0x89c0	                            mov eax, eax	       509	peicode.h	FUNCTION_11
0x4001273	        0x48c1e005	                              shl rax, 5	       509	peicode.h	FUNCTION_11
0x4001277	          0x4801c2	                            add rdx, rax	       509	peicode.h	FUNCTION_11
0x400127a	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	peicode.h	FUNCTION_11
0x400127e	    0x488990a80000	             mov qword [rax + 0xa8], rdx	       509	peicode.h	FUNCTION_11
0x4001285	        0x488b45f8	                mov rax, qword [rbp - 8]	       510	peicode.h	FUNCTION_11
0x4001289	    0xc74028000000	               mov dword [rax + 0x28], 0	       510	peicode.h	FUNCTION_11
0x4001290	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	peicode.h	FUNCTION_11	CALL_5
0x4001294	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	       512	peicode.h	FUNCTION_11	CALL_5
0x400129b	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	peicode.h	FUNCTION_11	CALL_5
0x400129f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       512	peicode.h	FUNCTION_11	CALL_5
0x40012a6	          0x4839c2	                            cmp rdx, rax	       512	peicode.h	FUNCTION_11	CALL_5
0x40012a9	            0x720f	                            jb 0x40012ba	       512	peicode.h	FUNCTION_11	CALL_5
0x40012ab	      0xbe00020000	                          mov esi, 0x200	       512	peicode.h	FUNCTION_11	CALL_5
0x40012b0	      0xbf00000000	                              mov edi, 0	       512	peicode.h	FUNCTION_11	CALL_5
0x40012b5	      0xe800000000	                          call 0x40012ba	       512	peicode.h	FUNCTION_11	CALL_5
0x40012ba	              0x90	                                     nop	       513	peicode.h	FUNCTION_11
0x40012bb	              0xc9	                                   leave	       513	peicode.h	FUNCTION_11
0x40012bc	              0xc3	                                     ret	       513	peicode.h	FUNCTION_11
coff_slurp_line_table	IF,14:CALL,32:ELSE,4:SWITCH,0:DO,1:FOR,3:functions,0:WHILE,0	428
0x40069a8	              0x55	                                push rbp	      4255	coffcode.h	FUNCTION_50
0x40069a9	          0x4889e5	                            mov rbp, rsp	      4255	coffcode.h	FUNCTION_50
0x40069ac	            0x4154	                                push r12	      4255	coffcode.h	FUNCTION_50
0x40069ae	              0x53	                                push rbx	      4255	coffcode.h	FUNCTION_50
0x40069af	    0x4881ecc00000	                           sub rsp, 0xc0	      4255	coffcode.h	FUNCTION_50
0x40069b6	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      4255	coffcode.h	FUNCTION_50
0x40069bd	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      4255	coffcode.h	FUNCTION_50
0x40069c4	    0x64488b042528	                mov rax, qword fs:[0x28]	      4255	coffcode.h	FUNCTION_50
0x40069cd	        0x488945e8	             mov qword [rbp - 0x18], rax	      4255	coffcode.h	FUNCTION_50
0x40069d1	            0x31c0	                            xor eax, eax	      4255	coffcode.h	FUNCTION_50
0x40069d3	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4261	coffcode.h	FUNCTION_50
0x40069de	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	      4262	coffcode.h	FUNCTION_50
0x40069e8	    0xc78550ffffff	               mov dword [rbp - 0xb0], 1	      4266	coffcode.h	FUNCTION_50
0x40069f2	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4268	coffcode.h	FUNCTION_50	CALL_1
0x40069f9	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      4268	coffcode.h	FUNCTION_50	CALL_1
0x4006a00	          0x4885c0	                           test rax, rax	      4268	coffcode.h	FUNCTION_50	CALL_1
0x4006a03	            0x740f	                            je 0x4006a14	      4268	coffcode.h	FUNCTION_50	CALL_1
0x4006a05	      0xbeac100000	                         mov esi, 0x10ac	      4268	coffcode.h	FUNCTION_50	CALL_1
0x4006a0a	      0xbf00000000	                              mov edi, 0	      4268	coffcode.h	FUNCTION_50	CALL_1
0x4006a0f	      0xe800000000	                          call 0x4006a14	      4268	coffcode.h	FUNCTION_50	CALL_1
0x4006a14	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4270	coffcode.h	FUNCTION_50	IF_1
0x4006a1b	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4270	coffcode.h	FUNCTION_50	IF_1
0x4006a21	            0x89c2	                            mov edx, eax	      4270	coffcode.h	FUNCTION_50	IF_1
0x4006a23	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4270	coffcode.h	FUNCTION_50	IF_1
0x4006a2a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4270	coffcode.h	FUNCTION_50	IF_1
0x4006a2e	          0x4839c2	                            cmp rdx, rax	      4270	coffcode.h	FUNCTION_50	IF_1
0x4006a31	            0x7651	                           jbe 0x4006a84	      4270	coffcode.h	FUNCTION_50	IF_1
0x4006a33	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4274	coffcode.h	FUNCTION_50	IF_1
0x4006a3a	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      4274	coffcode.h	FUNCTION_50	IF_1
0x4006a3e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4274	coffcode.h	FUNCTION_50	IF_1
0x4006a45	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4274	coffcode.h	FUNCTION_50	IF_1
0x4006a4b	          0x4189c4	                           mov r12d, eax	      4272	coffcode.h	FUNCTION_50	IF_1	CALL_2
0x4006a4e	      0xbe00000000	                              mov esi, 0	      4273	coffcode.h	FUNCTION_50	IF_1	CALL_3
0x4006a53	      0xbf00000000	                              mov edi, 0	      4273	coffcode.h	FUNCTION_50	IF_1	CALL_3
0x4006a58	      0xe800000000	                          call 0x4006a5d	      4273	coffcode.h	FUNCTION_50	IF_1	CALL_3
0x4006a5d	          0x4889c7	                            mov rdi, rax	      4273	coffcode.h	FUNCTION_50	IF_1	CALL_3
0x4006a60	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4272	coffcode.h	FUNCTION_50	IF_1	CALL_2
0x4006a67	          0x4889d9	                            mov rcx, rbx	      4272	coffcode.h	FUNCTION_50	IF_1	CALL_2
0x4006a6a	          0x4c89e2	                            mov rdx, r12	      4272	coffcode.h	FUNCTION_50	IF_1	CALL_2
0x4006a6d	          0x4889c6	                            mov rsi, rax	      4272	coffcode.h	FUNCTION_50	IF_1	CALL_2
0x4006a70	      0xb800000000	                              mov eax, 0	      4272	coffcode.h	FUNCTION_50	IF_1	CALL_2
0x4006a75	      0xe800000000	                          call 0x4006a7a	      4272	coffcode.h	FUNCTION_50	IF_1	CALL_2
0x4006a7a	      0xb800000000	                              mov eax, 0	      4275	coffcode.h	FUNCTION_50	IF_1
0x4006a7f	      0xe9f6060000	                           jmp 0x400717a	      4275	coffcode.h	FUNCTION_50	IF_1
0x4006a84	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4278	coffcode.h	FUNCTION_50
0x4006a8b	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4278	coffcode.h	FUNCTION_50
0x4006a91	            0x89c0	                            mov eax, eax	      4278	coffcode.h	FUNCTION_50
0x4006a93	        0x4883c001	                              add rax, 1	      4278	coffcode.h	FUNCTION_50
0x4006a97	        0x48c1e004	                              shl rax, 4	      4278	coffcode.h	FUNCTION_50
0x4006a9b	        0x48894588	             mov qword [rbp - 0x78], rax	      4278	coffcode.h	FUNCTION_50
0x4006a9f	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4279	coffcode.h	FUNCTION_50	CALL_4
0x4006aa3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4279	coffcode.h	FUNCTION_50	CALL_4
0x4006aaa	          0x4889d6	                            mov rsi, rdx	      4279	coffcode.h	FUNCTION_50	CALL_4
0x4006aad	          0x4889c7	                            mov rdi, rax	      4279	coffcode.h	FUNCTION_50	CALL_4
0x4006ab0	      0xe800000000	                          call 0x4006ab5	      4279	coffcode.h	FUNCTION_50	CALL_4
0x4006ab5	        0x48894590	             mov qword [rbp - 0x70], rax	      4279	coffcode.h	FUNCTION_50	CALL_4
0x4006ab9	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4280	coffcode.h	FUNCTION_50	IF_2
0x4006abe	            0x750a	                           jne 0x4006aca	      4280	coffcode.h	FUNCTION_50	IF_2
0x4006ac0	      0xb800000000	                              mov eax, 0	      4281	coffcode.h	FUNCTION_50	IF_2
0x4006ac5	      0xe9b0060000	                           jmp 0x400717a	      4281	coffcode.h	FUNCTION_50	IF_2
0x4006aca	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006ad1	        0x488b4008	                mov rax, qword [rax + 8]	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006ad5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006adc	          0x8b4068	            mov eax, dword [rax + 0x68] 	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006adf	            0x89c2	                            mov edx, eax	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006ae1	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006ae8	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006aee	            0x89c0	                            mov eax, eax	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006af0	        0x480fafc2	                           imul rax, rdx	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006af4	        0x48894588	             mov qword [rbp - 0x78], rax	      4283	coffcode.h	FUNCTION_50	CALL_5
0x4006af8	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006aff	    0x488b88a00000	            mov rcx, qword [rax + 0xa0] 	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006b06	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006b0a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006b11	          0x4889ce	                            mov rsi, rcx	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006b14	          0x4889c7	                            mov rdi, rax	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006b17	      0xe87ffdffff	                   call sym.buy_and_read	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006b1c	        0x48894598	             mov qword [rbp - 0x68], rax	      4284	coffcode.h	FUNCTION_50	CALL_6
0x4006b20	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4285	coffcode.h	FUNCTION_50	IF_3
0x4006b25	            0x7549	                           jne 0x4006b70	      4285	coffcode.h	FUNCTION_50	IF_3
0x4006b27	      0xbe00000000	                              mov esi, 0	      4288	coffcode.h	FUNCTION_50	IF_3	CALL_8
0x4006b2c	      0xbf00000000	                              mov edi, 0	      4288	coffcode.h	FUNCTION_50	IF_3	CALL_8
0x4006b31	      0xe800000000	                          call 0x4006b36	      4288	coffcode.h	FUNCTION_50	IF_3	CALL_8
0x4006b36	          0x4889c2	                            mov rdx, rax	      4288	coffcode.h	FUNCTION_50	IF_3	CALL_8
0x4006b39	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4287	coffcode.h	FUNCTION_50	IF_3	CALL_7
0x4006b40	          0x4889c6	                            mov rsi, rax	      4287	coffcode.h	FUNCTION_50	IF_3	CALL_7
0x4006b43	          0x4889d7	                            mov rdi, rdx	      4287	coffcode.h	FUNCTION_50	IF_3	CALL_7
0x4006b46	      0xb800000000	                              mov eax, 0	      4287	coffcode.h	FUNCTION_50	IF_3	CALL_7
0x4006b4b	      0xe800000000	                          call 0x4006b50	      4287	coffcode.h	FUNCTION_50	IF_3	CALL_7
0x4006b50	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4289	coffcode.h	FUNCTION_50	IF_3	CALL_9
0x4006b54	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4289	coffcode.h	FUNCTION_50	IF_3	CALL_9
0x4006b5b	          0x4889d6	                            mov rsi, rdx	      4289	coffcode.h	FUNCTION_50	IF_3	CALL_9
0x4006b5e	          0x4889c7	                            mov rdi, rax	      4289	coffcode.h	FUNCTION_50	IF_3	CALL_9
0x4006b61	      0xe800000000	                          call 0x4006b66	      4289	coffcode.h	FUNCTION_50	IF_3	CALL_9
0x4006b66	      0xb800000000	                              mov eax, 0	      4290	coffcode.h	FUNCTION_50	IF_3
0x4006b6b	      0xe90a060000	                           jmp 0x400717a	      4290	coffcode.h	FUNCTION_50	IF_3
0x4006b70	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4293	coffcode.h	FUNCTION_50
0x4006b74	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4293	coffcode.h	FUNCTION_50
0x4006b7b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4294	coffcode.h	FUNCTION_50
0x4006b82	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4294	coffcode.h	FUNCTION_50
0x4006b86	    0x488990b80000	             mov qword [rax + 0xb8], rdx	      4294	coffcode.h	FUNCTION_50
0x4006b8d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4295	coffcode.h	FUNCTION_50
0x4006b91	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4295	coffcode.h	FUNCTION_50
0x4006b98	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      4296	coffcode.h	FUNCTION_50
0x4006ba2	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      4297	coffcode.h	FUNCTION_50
0x4006bac	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006bb6	      0xe9ea020000	                           jmp 0x4006ea5	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006bbb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006bc2	        0x488b4008	                mov rax, qword [rax + 8]	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006bc6	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006bcd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006bd1	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006bd5	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006bdc	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006be3	          0x4889cf	                            mov rdi, rcx	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006be6	            0xffd0	                                call rax	      4303	coffcode.h	FUNCTION_50	FOR_1	CALL_10
0x4006be8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4304	coffcode.h	FUNCTION_50	FOR_1
0x4006bec	            0x89c2	                            mov edx, eax	      4304	coffcode.h	FUNCTION_50	FOR_1
0x4006bee	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4304	coffcode.h	FUNCTION_50	FOR_1
0x4006bf5	            0x8910	                    mov dword [rax], edx	      4304	coffcode.h	FUNCTION_50	FOR_1
0x4006bf7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4308	coffcode.h	FUNCTION_50	FOR_1	CALL_11
0x4006bfe	        0x4883c008	                              add rax, 8	      4308	coffcode.h	FUNCTION_50	FOR_1	CALL_11
0x4006c02	      0xba08000000	                              mov edx, 8	      4308	coffcode.h	FUNCTION_50	FOR_1	CALL_11
0x4006c07	      0xbe00000000	                              mov esi, 0	      4308	coffcode.h	FUNCTION_50	FOR_1	CALL_11
0x4006c0c	          0x4889c7	                            mov rdi, rax	      4308	coffcode.h	FUNCTION_50	FOR_1	CALL_11
0x4006c0f	      0xe800000000	                          call 0x4006c14	      4308	coffcode.h	FUNCTION_50	FOR_1	CALL_11
0x4006c14	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4310	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006c1b	            0x8b00	                    mov eax, dword [rax]	      4310	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006c1d	            0x85c0	                           test eax, eax	      4310	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006c1f	     0xf853d020000	                           jne 0x4006e62	      4310	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006c25	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      4316	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006c2f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4317	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006c33	        0x488945a0	             mov qword [rbp - 0x60], rax	      4317	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006c37	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4318	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_12
0x4006c3e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4318	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_12
0x4006c45	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4318	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_12
0x4006c49	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      4318	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_12
0x4006c4d	            0x774c	                            ja 0x4006c9b	      4318	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_12
0x4006c4f	      0xbe00000000	                              mov esi, 0	      4322	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_14
0x4006c54	      0xbf00000000	                              mov edi, 0	      4322	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_14
0x4006c59	      0xe800000000	                          call 0x4006c5e	      4322	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_14
0x4006c5e	          0x4889c7	                            mov rdi, rax	      4322	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_14
0x4006c61	    0x8b8d40ffffff	             mov ecx, dword [rbp - 0xc0]	      4320	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_13
0x4006c67	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4320	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_13
0x4006c6b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4320	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_13
0x4006c72	          0x4889c6	                            mov rsi, rax	      4320	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_13
0x4006c75	      0xb800000000	                              mov eax, 0	      4320	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_13
0x4006c7a	      0xe800000000	                          call 0x4006c7f	      4320	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5	CALL_13
0x4006c7f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4324	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5
0x4006c86	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4324	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5
0x4006c8c	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4325	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5
0x4006c96	      0xe9fb010000	                           jmp 0x4006e96	      4326	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_5
0x4006c9b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006ca2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006ca9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cb1	        0x48c1e003	                              shl rax, 3	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cb5	    0x488d0cc50000	                        lea rcx, [rax*8]	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cbd	          0x4829c1	                            sub rcx, rax	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cc0	          0x4889c8	                            mov rax, rcx	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cc3	          0x4801d0	                            add rax, rdx	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cc6	        0x488945a8	             mov qword [rbp - 0x58], rax	      4329	coffcode.h	FUNCTION_50	FOR_1	IF_4	CALL_15
0x4006cca	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4332	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006cce	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4332	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006cd1	            0x85c0	                           test eax, eax	      4332	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006cd3	            0x754c	                           jne 0x4006d21	      4332	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006cd5	      0xbe00000000	                              mov esi, 0	      4336	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_17
0x4006cda	      0xbf00000000	                              mov edi, 0	      4336	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_17
0x4006cdf	      0xe800000000	                          call 0x4006ce4	      4336	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_17
0x4006ce4	          0x4889c7	                            mov rdi, rax	      4336	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_17
0x4006ce7	    0x8b8d40ffffff	             mov ecx, dword [rbp - 0xc0]	      4334	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_16
0x4006ced	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4334	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_16
0x4006cf1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4334	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_16
0x4006cf8	          0x4889c6	                            mov rsi, rax	      4334	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_16
0x4006cfb	      0xb800000000	                              mov eax, 0	      4334	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_16
0x4006d00	      0xe800000000	                          call 0x4006d05	      4334	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6	CALL_16
0x4006d05	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4338	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006d0c	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4338	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006d12	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4339	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006d1c	      0xe975010000	                           jmp 0x4006e96	      4340	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_6
0x4006d21	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4342	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006d25	        0x488b4008	                mov rax, qword [rax + 8]	      4342	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006d29	        0x488945b0	             mov qword [rbp - 0x50], rax	      4342	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006d2d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4345	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_18
0x4006d34	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4345	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_18
0x4006d3b	          0x488b00	                    mov rax, qword [rax]	      4345	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_18
0x4006d3e	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      4345	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_18
0x4006d42	            0x7737	                            ja 0x4006d7b	      4345	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_18
0x4006d44	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d4b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d52	          0x488b10	                    mov rdx, qword [rax]	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d55	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d5c	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d62	            0x89c1	                            mov ecx, eax	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d64	          0x4889c8	                            mov rax, rcx	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d67	        0x48c1e003	                              shl rax, 3	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d6b	          0x4801c8	                            add rax, rcx	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d6e	        0x48c1e003	                              shl rax, 3	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d72	          0x4801d0	                            add rax, rdx	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d75	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d79	            0x774b	                            ja 0x4006dc6	      4346	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_19
0x4006d7b	      0xbe00000000	                              mov esi, 0	      4350	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_21
0x4006d80	      0xbf00000000	                              mov edi, 0	      4350	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_21
0x4006d85	      0xe800000000	                          call 0x4006d8a	      4350	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_21
0x4006d8a	          0x4889c1	                            mov rcx, rax	      4350	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_21
0x4006d8d	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      4348	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_20
0x4006d93	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4348	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_20
0x4006d9a	          0x4889c6	                            mov rsi, rax	      4348	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_20
0x4006d9d	          0x4889cf	                            mov rdi, rcx	      4348	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_20
0x4006da0	      0xb800000000	                              mov eax, 0	      4348	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_20
0x4006da5	      0xe800000000	                          call 0x4006daa	      4348	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7	CALL_20
0x4006daa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4352	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7
0x4006db1	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4352	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7
0x4006db7	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4353	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7
0x4006dc1	      0xe9d0000000	                           jmp 0x4006e96	      4354	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_7
0x4006dc6	    0xc7854cffffff	               mov dword [rbp - 0xb4], 1	      4357	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006dd0	    0x838548ffffff	               add dword [rbp - 0xb8], 1	      4358	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006dd7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4359	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006dde	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4359	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006de2	        0x48895008	                mov qword [rax + 8], rdx	      4359	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006de6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4360	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8
0x4006dea	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4360	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8
0x4006dee	          0x4885c0	                           test rax, rax	      4360	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8
0x4006df1	            0x7434	                            je 0x4006e27	      4360	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8
0x4006df3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006df7	        0x488b5808	                mov rbx, qword [rax + 8]	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006dfb	      0xbe00000000	                              mov esi, 0	      4363	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_23
0x4006e00	      0xbf00000000	                              mov edi, 0	      4363	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_23
0x4006e05	      0xe800000000	                          call 0x4006e0a	      4363	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_23
0x4006e0a	          0x4889c1	                            mov rcx, rax	      4363	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_23
0x4006e0d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006e14	          0x4889da	                            mov rdx, rbx	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006e17	          0x4889c6	                            mov rsi, rax	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006e1a	          0x4889cf	                            mov rdi, rcx	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006e1d	      0xb800000000	                              mov eax, 0	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006e22	      0xe800000000	                          call 0x4006e27	      4361	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_8	CALL_22
0x4006e27	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4366	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006e2b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4366	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006e32	        0x48895038	             mov qword [rax + 0x38], rdx	      4366	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006e36	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4367	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_9
0x4006e3a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4367	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_9
0x4006e3e	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      4367	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_9
0x4006e45	            0x730a	                           jae 0x4006e51	      4367	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_9
0x4006e47	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      4368	coffcode.h	FUNCTION_50	FOR_1	IF_4	IF_9
0x4006e51	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4369	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006e55	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4369	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006e59	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4369	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006e60	            0xeb29	                           jmp 0x4006e8b	      4369	coffcode.h	FUNCTION_50	FOR_1	IF_4
0x4006e62	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	      4371	coffcode.h	FUNCTION_50	FOR_1	ELSE_1	IF_10
0x4006e69	            0x742a	                            je 0x4006e95	      4371	coffcode.h	FUNCTION_50	FOR_1	ELSE_1	IF_10
0x4006e6b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4376	coffcode.h	FUNCTION_50	FOR_1	ELSE_2
0x4006e6f	          0x4889c2	                            mov rdx, rax	      4377	coffcode.h	FUNCTION_50	FOR_1	ELSE_2
0x4006e72	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4377	coffcode.h	FUNCTION_50	FOR_1	ELSE_2
0x4006e79	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4377	coffcode.h	FUNCTION_50	FOR_1	ELSE_2
0x4006e7d	          0x4829c2	                            sub rdx, rax	      4377	coffcode.h	FUNCTION_50	FOR_1	ELSE_2
0x4006e80	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4376	coffcode.h	FUNCTION_50	FOR_1	ELSE_2
0x4006e87	        0x48895008	                mov qword [rax + 8], rdx	      4376	coffcode.h	FUNCTION_50	FOR_1	ELSE_2
0x4006e8b	    0x48838558ffff	            add qword [rbp - 0xa8], 0x10	      4378	coffcode.h	FUNCTION_50	FOR_1
0x4006e93	            0xeb01	                           jmp 0x4006e96	      4378	coffcode.h	FUNCTION_50	FOR_1
0x4006e95	              0x90	                                     nop	      4374	coffcode.h	FUNCTION_50	FOR_1	ELSE_1	IF_10
0x4006e96	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006e9d	    0x48838568ffff	               add qword [rbp - 0x98], 6	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006ea5	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006eac	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006eb2	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006eb8	     0xf87fdfcffff	                            ja 0x4006bbb	      4299	coffcode.h	FUNCTION_50	FOR_1
0x4006ebe	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4381	coffcode.h	FUNCTION_50
0x4006ec5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4381	coffcode.h	FUNCTION_50
0x4006ec9	          0x4829c2	                            sub rdx, rax	      4381	coffcode.h	FUNCTION_50
0x4006ecc	          0x4889d0	                            mov rax, rdx	      4381	coffcode.h	FUNCTION_50
0x4006ecf	        0x48c1f804	                              sar rax, 4	      4381	coffcode.h	FUNCTION_50
0x4006ed3	            0x89c2	                            mov edx, eax	      4381	coffcode.h	FUNCTION_50
0x4006ed5	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4381	coffcode.h	FUNCTION_50
0x4006edc	    0x8990c0000000	             mov dword [rax + 0xc0], edx	      4381	coffcode.h	FUNCTION_50
0x4006ee2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4382	coffcode.h	FUNCTION_50	CALL_24
0x4006ee9	      0xba10000000	                           mov edx, 0x10	      4382	coffcode.h	FUNCTION_50	CALL_24
0x4006eee	      0xbe00000000	                              mov esi, 0	      4382	coffcode.h	FUNCTION_50	CALL_24
0x4006ef3	          0x4889c7	                            mov rdi, rax	      4382	coffcode.h	FUNCTION_50	CALL_24
0x4006ef6	      0xe800000000	                          call 0x4006efb	      4382	coffcode.h	FUNCTION_50	CALL_24
0x4006efb	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4383	coffcode.h	FUNCTION_50	CALL_25
0x4006eff	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4383	coffcode.h	FUNCTION_50	CALL_25
0x4006f06	          0x4889d6	                            mov rsi, rdx	      4383	coffcode.h	FUNCTION_50	CALL_25
0x4006f09	          0x4889c7	                            mov rdi, rax	      4383	coffcode.h	FUNCTION_50	CALL_25
0x4006f0c	      0xe800000000	                          call 0x4006f11	      4383	coffcode.h	FUNCTION_50	CALL_25
0x4006f11	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4386	coffcode.h	FUNCTION_50	IF_11
0x4006f18	     0xf8556020000	                           jne 0x4007174	      4386	coffcode.h	FUNCTION_50	IF_11
0x4006f1e	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      4393	coffcode.h	FUNCTION_50	IF_11	CALL_26
0x4006f24	    0x488d14c50000	                        lea rdx, [rax*8]	      4393	coffcode.h	FUNCTION_50	IF_11	CALL_26
0x4006f2c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4393	coffcode.h	FUNCTION_50	IF_11	CALL_26
0x4006f33	          0x4889d6	                            mov rsi, rdx	      4393	coffcode.h	FUNCTION_50	IF_11	CALL_26
0x4006f36	          0x4889c7	                            mov rdi, rax	      4393	coffcode.h	FUNCTION_50	IF_11	CALL_26
0x4006f39	      0xe800000000	                          call 0x4006f3e	      4393	coffcode.h	FUNCTION_50	IF_11	CALL_26
0x4006f3e	        0x488945b8	             mov qword [rbp - 0x48], rax	      4393	coffcode.h	FUNCTION_50	IF_11	CALL_26
0x4006f42	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4394	coffcode.h	FUNCTION_50	IF_11	IF_12
0x4006f47	     0xf841d020000	                            je 0x400716a	      4394	coffcode.h	FUNCTION_50	IF_11	IF_12
0x4006f4d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4396	coffcode.h	FUNCTION_50	IF_11	IF_12
0x4006f51	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4396	coffcode.h	FUNCTION_50	IF_11	IF_12
0x4006f58	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      4399	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2
0x4006f62	            0xeb4a	                           jmp 0x4006fae	      4399	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2
0x4006f64	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f6a	        0x48c1e004	                              shl rax, 4	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f6e	          0x4889c2	                            mov rdx, rax	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f71	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f75	          0x4801d0	                            add rax, rdx	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f78	            0x8b00	                    mov eax, dword [rax]	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f7a	            0x85c0	                           test eax, eax	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f7c	            0x7529	                           jne 0x4006fa7	      4400	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f7e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f85	        0x488d5008	                      lea rdx, [rax + 8]	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f89	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f90	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f96	          0x4889d1	                            mov rcx, rdx	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f99	        0x48c1e104	                              shl rcx, 4	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006f9d	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006fa1	          0x4801ca	                            add rdx, rcx	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006fa4	          0x488910	                    mov qword [rax], rdx	      4401	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2	IF_13
0x4006fa7	    0x838554ffffff	               add dword [rbp - 0xac], 1	      4399	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2
0x4006fae	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4399	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2
0x4006fb5	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4399	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2
0x4006fbb	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      4399	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2
0x4006fc1	            0x77a1	                            ja 0x4006f64	      4399	coffcode.h	FUNCTION_50	IF_11	IF_12	FOR_2
0x4006fc3	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fce	          0x4829c2	                            sub rdx, rax	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fd1	          0x4889d0	                            mov rax, rdx	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fd4	        0x48c1f803	                              sar rax, 3	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fd8	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fde	            0x740f	                            je 0x4006fef	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fe0	      0xbe33110000	                         mov esi, 0x1133	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fe5	      0xbf00000000	                              mov edi, 0	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fea	      0xe800000000	                          call 0x4006fef	      4403	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_27
0x4006fef	    0x8bb548ffffff	             mov esi, dword [rbp - 0xb8]	      4406	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_28
0x4006ff5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4406	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_28
0x4006ff9	      0xb900000000	                              mov ecx, 0	      4406	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_28
0x4006ffe	      0xba08000000	                              mov edx, 8	      4406	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_28
0x4007003	          0x4889c7	                            mov rdi, rax	      4406	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_28
0x4007006	      0xe800000000	                          call 0x400700b	      4406	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_28
0x400700b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4409	coffcode.h	FUNCTION_50	IF_11	IF_12
0x4007012	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      4409	coffcode.h	FUNCTION_50	IF_11	IF_12
0x4007018	            0x89c0	                            mov eax, eax	      4409	coffcode.h	FUNCTION_50	IF_11	IF_12
0x400701a	        0x48c1e004	                              shl rax, 4	      4409	coffcode.h	FUNCTION_50	IF_11	IF_12
0x400701e	        0x48894588	             mov qword [rbp - 0x78], rax	      4409	coffcode.h	FUNCTION_50	IF_11	IF_12
0x4007022	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4410	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_29
0x4007026	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4410	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_29
0x400702d	          0x4889d6	                            mov rsi, rdx	      4410	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_29
0x4007030	          0x4889c7	                            mov rdi, rax	      4410	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_29
0x4007033	      0xe800000000	                          call 0x4007038	      4410	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_29
0x4007038	        0x488945c0	             mov qword [rbp - 0x40], rax	      4410	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_29
0x400703c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4411	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14
0x4007041	     0xf8401010000	                            je 0x4007148	      4411	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14
0x4007047	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4413	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14
0x400704b	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4413	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14
0x4007052	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      4415	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x400705c	      0xe988000000	                           jmp 0x40070e9	      4415	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007061	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4418	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007067	    0x488d14c50000	                        lea rdx, [rax*8]	      4418	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x400706f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4418	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007073	          0x4801d0	                            add rax, rdx	      4418	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007076	          0x488b00	                    mov rax, qword [rax]	      4418	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007079	        0x48894580	             mov qword [rbp - 0x80], rax	      4418	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x400707d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4421	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007081	        0x488b4008	                mov rax, qword [rax + 8]	      4421	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007085	        0x488945c8	             mov qword [rbp - 0x38], rax	      4421	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007089	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007090	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007094	          0x4829c2	                            sub rdx, rax	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x4007097	          0x4889d0	                            mov rax, rdx	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x400709a	          0x4889c2	                            mov rdx, rax	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x400709d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070a1	          0x4801c2	                            add rdx, rax	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070a8	        0x48895038	             mov qword [rax + 0x38], rdx	      4424	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070ac	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070b3	        0x488d4110	                   lea rax, [rcx + 0x10]	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070b7	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070be	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070c2	        0x488d5010	                   lea rdx, [rax + 0x10]	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070c6	        0x48895580	             mov qword [rbp - 0x80], rdx	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070ca	        0x488b5008	                mov rdx, qword [rax + 8]	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070ce	          0x488b00	                    mov rax, qword [rax]	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070d1	          0x488901	                    mov qword [rcx], rax	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070d4	        0x48895108	                mov qword [rcx + 8], rdx	      4427	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3	DO_1
0x40070d8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4428	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070dc	            0x8b00	                    mov eax, dword [rax]	      4428	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070de	            0x85c0	                           test eax, eax	      4428	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070e0	            0x75ca	                           jne 0x40070ac	      4428	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070e2	    0x838554ffffff	               add dword [rbp - 0xac], 1	      4415	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070e9	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4415	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070ef	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      4415	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070f5	     0xf8266ffffff	                            jb 0x4007061	      4415	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	FOR_3
0x40070fb	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007102	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007106	          0x4829c2	                            sub rdx, rax	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007109	          0x4889d0	                            mov rax, rdx	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x400710c	        0x48c1f804	                              sar rax, 4	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007110	          0x4889c2	                            mov rdx, rax	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007113	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007117	        0x48c1e804	                              shr rax, 4	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x400711b	          0x4839c2	                            cmp rdx, rax	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x400711e	            0x740f	                            je 0x400712f	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007120	      0xbe4e110000	                         mov esi, 0x114e	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x4007125	      0xbf00000000	                              mov edi, 0	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x400712a	      0xe800000000	                          call 0x400712f	      4430	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_30
0x400712f	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4432	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_31
0x4007133	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      4432	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_31
0x4007137	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4432	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_31
0x400713b	          0x4889ce	                            mov rsi, rcx	      4432	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_31
0x400713e	          0x4889c7	                            mov rdi, rax	      4432	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_31
0x4007141	      0xe800000000	                          call 0x4007146	      4432	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_31
0x4007146	            0xeb0a	                           jmp 0x4007152	      4432	coffcode.h	FUNCTION_50	IF_11	IF_12	IF_14	CALL_31
0x4007148	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4435	coffcode.h	FUNCTION_50	IF_11	IF_12	ELSE_3
0x4007152	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4436	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_32
0x4007156	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4436	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_32
0x400715d	          0x4889d6	                            mov rsi, rdx	      4436	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_32
0x4007160	          0x4889c7	                            mov rdi, rax	      4436	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_32
0x4007163	      0xe800000000	                          call 0x4007168	      4436	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_32
0x4007168	            0xeb0a	                           jmp 0x4007174	      4436	coffcode.h	FUNCTION_50	IF_11	IF_12	CALL_32
0x400716a	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      4439	coffcode.h	FUNCTION_50	IF_11	ELSE_4
0x4007174	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      4442	coffcode.h	FUNCTION_50	ELSE_4
0x400717a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x400717e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x4007187	            0x7405	                            je 0x400718e	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x4007189	      0xe800000000	                          call 0x400718e	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x400718e	    0x4881c4c00000	                           add rsp, 0xc0	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x4007195	              0x5b	                                 pop rbx	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x4007196	            0x415c	                                 pop r12	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x4007198	              0x5d	                                 pop rbp	      4443	coffcode.h	FUNCTION_50	ELSE_4
0x4007199	              0xc3	                                     ret	      4443	coffcode.h	FUNCTION_50	ELSE_4
coff_set_section_contents	IF,6:CALL,5:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1	90
0x4006757	              0x55	                                push rbp	      4141	coffcode.h	FUNCTION_47
0x4006758	          0x4889e5	                            mov rbp, rsp	      4141	coffcode.h	FUNCTION_47
0x400675b	        0x4883ec40	                           sub rsp, 0x40	      4141	coffcode.h	FUNCTION_47
0x400675f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4141	coffcode.h	FUNCTION_47
0x4006763	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4141	coffcode.h	FUNCTION_47
0x4006767	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4141	coffcode.h	FUNCTION_47
0x400676b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      4141	coffcode.h	FUNCTION_47
0x400676f	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      4141	coffcode.h	FUNCTION_47
0x4006773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4142	coffcode.h	FUNCTION_47	IF_1
0x4006777	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      4142	coffcode.h	FUNCTION_47	IF_1
0x400677b	          0x83e040	                           and eax, 0x40	      4142	coffcode.h	FUNCTION_47	IF_1
0x400677e	            0x84c0	                             test al, al	      4142	coffcode.h	FUNCTION_47	IF_1
0x4006780	            0x751a	                           jne 0x400679c	      4142	coffcode.h	FUNCTION_47	IF_1
0x4006782	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4144	coffcode.h	FUNCTION_47	IF_1	IF_2	CALL_1
0x4006786	          0x4889c7	                            mov rdi, rax	      4144	coffcode.h	FUNCTION_47	IF_1	IF_2	CALL_1
0x4006789	      0xe8f4e0ffff	call sym.coff_compute_section_file_positions	      4144	coffcode.h	FUNCTION_47	IF_1	IF_2	CALL_1
0x400678e	            0x85c0	                           test eax, eax	      4144	coffcode.h	FUNCTION_47	IF_1	IF_2	CALL_1
0x4006790	            0x750a	                           jne 0x400679c	      4144	coffcode.h	FUNCTION_47	IF_1	IF_2	CALL_1
0x4006792	      0xb800000000	                              mov eax, 0	      4145	coffcode.h	FUNCTION_47	IF_1	IF_2
0x4006797	      0xe9fd000000	                           jmp 0x4006899	      4145	coffcode.h	FUNCTION_47	IF_1	IF_2
0x400679c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4169	coffcode.h	FUNCTION_47	IF_3	CALL_2
0x40067a0	          0x488b00	                    mov rax, qword [rax]	      4169	coffcode.h	FUNCTION_47	IF_3	CALL_2
0x40067a3	      0xbe00000000	                              mov esi, 0	      4169	coffcode.h	FUNCTION_47	IF_3	CALL_2
0x40067a8	          0x4889c7	                            mov rdi, rax	      4169	coffcode.h	FUNCTION_47	IF_3	CALL_2
0x40067ab	      0xe800000000	                          call 0x40067b0	      4169	coffcode.h	FUNCTION_47	IF_3	CALL_2
0x40067b0	            0x85c0	                           test eax, eax	      4169	coffcode.h	FUNCTION_47	IF_3	CALL_2
0x40067b2	            0x756d	                           jne 0x4006821	      4169	coffcode.h	FUNCTION_47	IF_3	CALL_2
0x40067b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4173	coffcode.h	FUNCTION_47	IF_3
0x40067b8	        0x488945f0	             mov qword [rbp - 0x10], rax	      4173	coffcode.h	FUNCTION_47	IF_3
0x40067bc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4174	coffcode.h	FUNCTION_47	IF_3
0x40067c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4174	coffcode.h	FUNCTION_47	IF_3
0x40067c4	          0x4801d0	                            add rax, rdx	      4174	coffcode.h	FUNCTION_47	IF_3
0x40067c7	        0x488945f8	                mov qword [rbp - 8], rax	      4174	coffcode.h	FUNCTION_47	IF_3
0x40067cb	            0xeb31	                           jmp 0x40067fe	      4175	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4177	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067d1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4177	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067d5	        0x488d5001	                      lea rdx, [rax + 1]	      4177	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4177	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067dd	        0x48895030	             mov qword [rax + 0x30], rdx	      4177	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067e5	        0x488b4008	                mov rax, qword [rax + 8]	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067e9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067ed	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067f1	          0x4889d7	                            mov rdi, rdx	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067f4	            0xffd0	                                call rax	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067f6	        0x48c1e002	                              shl rax, 2	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067fa	        0x480145f0	            add qword [rbp - 0x10], rax 	      4178	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x40067fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4175	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x4006802	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4175	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x4006806	            0x72c5	                            jb 0x40067cd	      4175	coffcode.h	FUNCTION_47	IF_3	WHILE_1
0x4006808	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4181	coffcode.h	FUNCTION_47	IF_3	CALL_3
0x400680c	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4181	coffcode.h	FUNCTION_47	IF_3	CALL_3
0x4006810	            0x740f	                            je 0x4006821	      4181	coffcode.h	FUNCTION_47	IF_3	CALL_3
0x4006812	      0xbe55100000	                         mov esi, 0x1055	      4181	coffcode.h	FUNCTION_47	IF_3	CALL_3
0x4006817	      0xbf00000000	                              mov edi, 0	      4181	coffcode.h	FUNCTION_47	IF_3	CALL_3
0x400681c	      0xe800000000	                          call 0x4006821	      4181	coffcode.h	FUNCTION_47	IF_3	CALL_3
0x4006821	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4187	coffcode.h	FUNCTION_47	IF_4
0x4006825	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4187	coffcode.h	FUNCTION_47	IF_4
0x400682c	          0x4885c0	                           test rax, rax	      4187	coffcode.h	FUNCTION_47	IF_4
0x400682f	            0x7507	                           jne 0x4006838	      4187	coffcode.h	FUNCTION_47	IF_4
0x4006831	      0xb801000000	                              mov eax, 1	      4188	coffcode.h	FUNCTION_47	IF_4
0x4006836	            0xeb61	                           jmp 0x4006899	      4188	coffcode.h	FUNCTION_47	IF_4
0x4006838	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x400683c	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x4006843	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x4006847	        0x488d0c02	                    lea rcx, [rdx + rax]	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x400684b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x400684f	      0xba00000000	                              mov edx, 0	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x4006854	          0x4889ce	                            mov rsi, rcx	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x4006857	          0x4889c7	                            mov rdi, rax	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x400685a	      0xe800000000	                          call 0x400685f	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x400685f	            0x85c0	                           test eax, eax	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x4006861	            0x7407	                            je 0x400686a	      4190	coffcode.h	FUNCTION_47	IF_5	CALL_4
0x4006863	      0xb800000000	                              mov eax, 0	      4191	coffcode.h	FUNCTION_47	IF_5
0x4006868	            0xeb2f	                           jmp 0x4006899	      4191	coffcode.h	FUNCTION_47	IF_5
0x400686a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4193	coffcode.h	FUNCTION_47	IF_6
0x400686f	            0x7507	                           jne 0x4006878	      4193	coffcode.h	FUNCTION_47	IF_6
0x4006871	      0xb801000000	                              mov eax, 1	      4194	coffcode.h	FUNCTION_47	IF_6
0x4006876	            0xeb21	                           jmp 0x4006899	      4194	coffcode.h	FUNCTION_47	IF_6
0x4006878	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4196	coffcode.h	FUNCTION_47	CALL_5
0x400687c	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      4196	coffcode.h	FUNCTION_47	CALL_5
0x4006880	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4196	coffcode.h	FUNCTION_47	CALL_5
0x4006884	          0x4889ce	                            mov rsi, rcx	      4196	coffcode.h	FUNCTION_47	CALL_5
0x4006887	          0x4889c7	                            mov rdi, rax	      4196	coffcode.h	FUNCTION_47	CALL_5
0x400688a	      0xe800000000	                          call 0x400688f	      4196	coffcode.h	FUNCTION_47	CALL_5
0x400688f	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      4196	coffcode.h	FUNCTION_47	CALL_5
0x4006893	           0xf94c0	                                 sete al	      4196	coffcode.h	FUNCTION_47	CALL_5
0x4006896	           0xfb6c0	                           movzx eax, al	      4196	coffcode.h	FUNCTION_47	CALL_5
0x4006899	              0xc9	                                   leave	      4197	coffcode.h	FUNCTION_47
0x400689a	              0xc3	                                     ret	      4197	coffcode.h	FUNCTION_47
coff_write_relocs	IF,14:CALL,22:ELSE,3:SWITCH,0:DO,0:FOR,3:functions,0:WHILE,0	245
0x4004343	              0x55	                                push rbp	      2483	coffcode.h	FUNCTION_38
0x4004344	          0x4889e5	                            mov rbp, rsp	      2483	coffcode.h	FUNCTION_38
0x4004347	              0x53	                                push rbx	      2483	coffcode.h	FUNCTION_38
0x4004348	    0x4881ec980000	                           sub rsp, 0x98	      2483	coffcode.h	FUNCTION_38
0x400434f	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      2483	coffcode.h	FUNCTION_38
0x4004356	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      2483	coffcode.h	FUNCTION_38
0x400435c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2483	coffcode.h	FUNCTION_38
0x4004365	        0x488945e8	             mov qword [rbp - 0x18], rax	      2483	coffcode.h	FUNCTION_38
0x4004369	            0x31c0	                            xor eax, eax	      2483	coffcode.h	FUNCTION_38
0x400436b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2486	coffcode.h	FUNCTION_38	FOR_1
0x4004372	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2486	coffcode.h	FUNCTION_38	FOR_1
0x4004379	        0x48894580	             mov qword [rbp - 0x80], rax	      2486	coffcode.h	FUNCTION_38	FOR_1
0x400437d	      0xe9ae030000	                           jmp 0x4004730	      2486	coffcode.h	FUNCTION_38	FOR_1
0x4004382	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2493	coffcode.h	FUNCTION_38	FOR_1
0x4004386	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2493	coffcode.h	FUNCTION_38	FOR_1
0x400438d	        0x48894588	             mov qword [rbp - 0x78], rax	      2493	coffcode.h	FUNCTION_38	FOR_1
0x4004391	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x4004395	    0x488b88980000	            mov rcx, qword [rax + 0x98] 	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x400439c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x40043a3	      0xba00000000	                              mov edx, 0	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x40043a8	          0x4889ce	                            mov rsi, rcx	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x40043ab	          0x4889c7	                            mov rdi, rax	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x40043ae	      0xe800000000	                          call 0x40043b3	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x40043b3	            0x85c0	                           test eax, eax	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x40043b5	            0x740a	                            je 0x40043c1	      2515	coffcode.h	FUNCTION_38	FOR_1	IF_3	CALL_4
0x40043b7	      0xb800000000	                              mov eax, 0	      2516	coffcode.h	FUNCTION_38	FOR_1	IF_3
0x40043bc	      0xe97f030000	                           jmp 0x4004740	      2516	coffcode.h	FUNCTION_38	FOR_1	IF_3
0x40043c1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043c8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043cf	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043d5	            0x85c0	                           test eax, eax	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043d7	     0xf84ae000000	                            je 0x400448b	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043dd	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043e1	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043e7	      0x3dfeff0000	                         cmp eax, 0xfffe	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043ec	     0xf8699000000	                           jbe 0x400448b	      2519	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_5
0x40043f2	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2524	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_6
0x40043f6	      0xba20000000	                           mov edx, 0x20	      2524	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_6
0x40043fb	      0xbe00000000	                              mov esi, 0	      2524	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_6
0x4004400	          0x4889c7	                            mov rdi, rax	      2524	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_6
0x4004403	      0xe800000000	                          call 0x4004408	      2524	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_6
0x4004408	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2526	coffcode.h	FUNCTION_38	FOR_1	IF_4
0x400440c	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2526	coffcode.h	FUNCTION_38	FOR_1	IF_4
0x4004412	          0x83c001	                              add eax, 1	      2526	coffcode.h	FUNCTION_38	FOR_1	IF_4
0x4004415	            0x89c0	                            mov eax, eax	      2526	coffcode.h	FUNCTION_38	FOR_1	IF_4
0x4004417	        0x488945b0	             mov qword [rbp - 0x50], rax	      2526	coffcode.h	FUNCTION_38	FOR_1	IF_4
0x400441b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2527	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_7
0x400441f	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2527	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_7
0x4004423	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2527	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_7
0x400442a	          0x4889ce	                            mov rsi, rcx	      2527	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_7
0x400442d	          0x4889c7	                            mov rdi, rax	      2527	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_7
0x4004430	      0xe82ac4ffff	            call sym.coff_swap_reloc_out	      2527	coffcode.h	FUNCTION_38	FOR_1	IF_4	CALL_7
0x4004435	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x400443c	        0x488b4008	                mov rax, qword [rax + 8]	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x4004440	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x4004447	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x400444a	            0x89c1	                            mov ecx, eax	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x400444c	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x4004453	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x4004457	          0x4889ce	                            mov rsi, rcx	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x400445a	          0x4889c7	                            mov rdi, rax	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x400445d	      0xe800000000	                          call 0x4004462	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x4004462	          0x4889c2	                            mov rdx, rax	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x4004465	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2529	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_10
0x400446c	        0x488b4008	                mov rax, qword [rax + 8]	      2529	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_10
0x4004470	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2529	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_10
0x4004477	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2529	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_10
0x400447a	            0x89c0	                            mov eax, eax	      2529	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_10
0x400447c	          0x4839c2	                            cmp rdx, rax	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x400447f	            0x740a	                            je 0x400448b	      2528	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5	CALL_9
0x4004481	      0xb800000000	                              mov eax, 0	      2530	coffcode.h	FUNCTION_38	FOR_1	IF_4	IF_5
0x4004486	      0xe9b5020000	                           jmp 0x4004740	      2516	coffcode.h	FUNCTION_38	FOR_1	IF_3
0x400448b	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2534	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x4004495	      0xe974020000	                           jmp 0x400470e	      2534	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x400449a	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2537	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40044a0	    0x488d14c50000	                        lea rdx, [rax*8]	      2537	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40044a8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2537	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40044ac	          0x4801d0	                            add rax, rdx	      2537	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40044af	          0x488b00	                    mov rax, qword [rax]	      2537	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40044b2	        0x48894590	             mov qword [rbp - 0x70], rax	      2537	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40044b6	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2539	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_11
0x40044ba	      0xba20000000	                           mov edx, 0x20	      2539	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_11
0x40044bf	      0xbe00000000	                              mov esi, 0	      2539	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_11
0x40044c4	          0x4889c7	                            mov rdi, rax	      2539	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_11
0x40044c7	      0xe800000000	                          call 0x40044cc	      2539	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_11
0x40044cc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044d0	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044d3	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044d6	          0x4885c0	                           test rax, rax	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044d9	     0xf84cb000000	                            je 0x40045aa	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044df	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044e3	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044e6	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044e9	          0x488b00	                    mov rax, qword [rax]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044ec	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044f3	     0xf84b1000000	                            je 0x40045aa	      2551	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044f9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2554	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x40044fd	          0x488b00	                    mov rax, qword [rax]	      2554	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x4004500	          0x488b00	                    mov rax, qword [rax]	      2554	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x4004503	        0x488b4008	                mov rax, qword [rax + 8]	      2554	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x4004507	        0x48894598	             mov qword [rbp - 0x68], rax	      2554	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x400450b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2555	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x4004512	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2555	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x4004519	        0x488945a0	             mov qword [rbp - 0x60], rax	      2555	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6
0x400451d	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004523	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004529	            0xeb60	                           jmp 0x400458b	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x400452b	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004531	            0x4898	                                    cdqe	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004533	    0x488d14c50000	                        lea rdx, [rax*8]	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x400453b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x400453f	          0x4801d0	                            add rax, rdx	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004542	          0x488b00	                    mov rax, qword [rax]	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004545	        0x488b4008	                mov rax, qword [rax + 8]	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004549	        0x488945a8	             mov qword [rbp - 0x58], rax	      2559	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x400454d	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2561	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x4004551	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2561	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x4004555	          0x4889d6	                            mov rsi, rdx	      2561	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x4004558	          0x4889c7	                            mov rdi, rax	      2561	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x400455b	      0xe800000000	                          call 0x4004560	      2561	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x4004560	            0x85c0	                           test eax, eax	      2561	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x4004562	            0x7520	                           jne 0x4004584	      2561	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7	CALL_12
0x4004564	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2564	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x400456a	            0x4898	                                    cdqe	      2564	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x400456c	    0x488d14c50000	                        lea rdx, [rax*8]	      2564	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x4004574	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2564	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x4004578	          0x4801c2	                            add rdx, rax	      2564	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x400457b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2564	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x400457f	          0x488910	                    mov qword [rax], rdx	      2564	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x4004582	            0xeb26	                           jmp 0x40045aa	      2565	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3	IF_7
0x4004584	    0x83857cffffff	               add dword [rbp - 0x84], 1	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x400458b	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004591	            0x4898	                                    cdqe	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x4004593	    0x488d14c50000	                        lea rdx, [rax*8]	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x400459b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x400459f	          0x4801d0	                            add rax, rdx	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x40045a2	          0x488b00	                    mov rax, qword [rax]	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x40045a5	          0x4885c0	                           test rax, rax	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x40045a8	            0x7581	                           jne 0x400452b	      2557	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_6	FOR_3
0x40045aa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2570	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40045ae	        0x488b5008	                mov rdx, qword [rax + 8]	      2570	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40045b2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2570	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40045b6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2570	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40045ba	          0x4801d0	                            add rax, rdx	      2570	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40045bd	        0x488945b0	             mov qword [rbp - 0x50], rax	      2570	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x40045c1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045c5	          0x488b00	                    mov rax, qword [rax]	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045c8	          0x4885c0	                           test rax, rax	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045cb	     0xf84bb000000	                            je 0x400468c	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045d1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045d5	          0x488b00	                    mov rax, qword [rax]	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045d8	          0x488b00	                    mov rax, qword [rax]	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045db	          0x4885c0	                           test rax, rax	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045de	     0xf84a8000000	                            je 0x400468c	      2580	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9
0x40045e4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2585	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x40045e8	          0x488b00	                    mov rax, qword [rax]	      2585	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x40045eb	          0x488b00	                    mov rax, qword [rax]	      2585	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x40045ee	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2585	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x40045f2	    0x483d00000000	                              cmp rax, 0	      2585	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x40045f8	            0x7520	                           jne 0x400461a	      2585	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x40045fa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2586	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x40045fe	          0x488b00	                    mov rax, qword [rax]	      2586	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4004601	          0x488b00	                    mov rax, qword [rax]	      2586	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4004604	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2586	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4004607	      0x2500010000	                          and eax, 0x100	      2586	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400460c	            0x85c0	                           test eax, eax	      2586	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400460e	            0x740a	                            je 0x400461a	      2586	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4004610	    0x48c745b8ffff	mov qword [rbp - 0x48], 0xffffffffffffffff	      2589	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x4004618	            0xeb72	                           jmp 0x400468c	      2589	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	IF_10	IF_11
0x400461a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2592	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x400461e	          0x488b00	                    mov rax, qword [rax]	      2592	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x4004621	          0x488b00	                    mov rax, qword [rax]	      2592	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x4004624	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2592	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x4004628	        0x488945b8	             mov qword [rbp - 0x48], rax	      2592	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3
0x400462c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2595	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4004630	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2595	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4004637	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2595	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x400463e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2595	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4004641	            0x4898	                                    cdqe	      2595	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4004643	          0x4839c2	                            cmp rdx, rax	      2595	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4004646	            0x7e44	                           jle 0x400468c	      2595	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_14
0x4004648	      0xbf11000000	                           mov edi, 0x11	      2597	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_15
0x400464d	      0xe800000000	                          call 0x4004652	      2597	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_15
0x4004652	        0x488b5db8	             mov rbx, qword [rbp - 0x48]	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004656	      0xbe00000000	                              mov esi, 0	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x400465b	      0xbf00000000	                              mov edi, 0	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004660	      0xe800000000	                          call 0x4004665	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004665	          0x4889c1	                            mov rcx, rax	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004668	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x400466f	          0x4889da	                            mov rdx, rbx	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004672	          0x4889c6	                            mov rsi, rax	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004675	          0x4889cf	                            mov rdi, rcx	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004678	      0xb800000000	                              mov eax, 0	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x400467d	      0xe800000000	                          call 0x4004682	      2599	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12	CALL_17
0x4004682	      0xb800000000	                              mov eax, 0	      2602	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12
0x4004687	      0xe9b4000000	                           jmp 0x4004740	      2602	coffcode.h	FUNCTION_38	FOR_1	FOR_2	ELSE_2	IF_9	ELSE_3	IF_12
0x400468c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2613	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x4004690	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2613	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x4004694	            0x8b00	                    mov eax, dword [rax]	      2613	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x4004696	        0x668945c0	               mov word [rbp - 0x40], ax	      2613	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x400469a	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2617	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_18
0x400469e	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2617	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_18
0x40046a2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2617	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_18
0x40046a9	          0x4889ce	                            mov rsi, rcx	      2617	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_18
0x40046ac	          0x4889c7	                            mov rdi, rax	      2617	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_18
0x40046af	      0xe8abc1ffff	            call sym.coff_swap_reloc_out	      2617	coffcode.h	FUNCTION_38	FOR_1	FOR_2	CALL_18
0x40046b4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046bb	        0x488b4008	                mov rax, qword [rax + 8]	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046bf	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046c6	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046c9	            0x89c1	                            mov ecx, eax	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046cb	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046d2	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046d6	          0x4889ce	                            mov rsi, rcx	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046d9	          0x4889c7	                            mov rdi, rax	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046dc	      0xe800000000	                          call 0x40046e1	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046e1	          0x4889c2	                            mov rdx, rax	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046e4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2620	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_21
0x40046eb	        0x488b4008	                mov rax, qword [rax + 8]	      2620	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_21
0x40046ef	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2620	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_21
0x40046f6	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2620	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_21
0x40046f9	            0x89c0	                            mov eax, eax	      2620	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_21
0x40046fb	          0x4839c2	                            cmp rdx, rax	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x40046fe	            0x7407	                            je 0x4004707	      2619	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13	CALL_20
0x4004700	      0xb800000000	                              mov eax, 0	      2621	coffcode.h	FUNCTION_38	FOR_1	FOR_2	IF_13
0x4004705	            0xeb39	                           jmp 0x4004740	      2516	coffcode.h	FUNCTION_38	FOR_1	IF_3
0x4004707	    0x838578ffffff	               add dword [rbp - 0x88], 1	      2534	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x400470e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2534	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x4004712	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2534	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x4004718	    0x3b8578ffffff	             cmp eax, dword [rbp - 0x88]	      2534	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x400471e	     0xf8776fdffff	                            ja 0x400449a	      2534	coffcode.h	FUNCTION_38	FOR_1	FOR_2
0x4004724	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2486	coffcode.h	FUNCTION_38	FOR_1
0x4004728	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2486	coffcode.h	FUNCTION_38	FOR_1
0x400472c	        0x48894580	             mov qword [rbp - 0x80], rax	      2486	coffcode.h	FUNCTION_38	FOR_1
0x4004730	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2486	coffcode.h	FUNCTION_38	FOR_1
0x4004735	     0xf8547fcffff	                           jne 0x4004382	      2486	coffcode.h	FUNCTION_38	FOR_1
0x400473b	      0xb801000000	                              mov eax, 1	      2630	coffcode.h	FUNCTION_38
0x4004740	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2631	coffcode.h	FUNCTION_38
0x4004744	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2631	coffcode.h	FUNCTION_38
0x400474d	            0x7405	                            je 0x4004754	      2631	coffcode.h	FUNCTION_38
0x400474f	      0xe800000000	                          call 0x4004754	      2631	coffcode.h	FUNCTION_38
0x4004754	    0x4881c4980000	                           add rsp, 0x98	      2631	coffcode.h	FUNCTION_38
0x400475b	              0x5b	                                 pop rbx	      2631	coffcode.h	FUNCTION_38
0x400475c	              0x5d	                                 pop rbp	      2631	coffcode.h	FUNCTION_38
0x400475d	              0xc3	                                     ret	      2631	coffcode.h	FUNCTION_38
coff_sort_func_alent	IF,3:CALL,0:ELSE,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	41
0x400691a	              0x55	                                push rbp	      4237	coffcode.h	FUNCTION_49
0x400691b	          0x4889e5	                            mov rbp, rsp	      4237	coffcode.h	FUNCTION_49
0x400691e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4237	coffcode.h	FUNCTION_49
0x4006922	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4237	coffcode.h	FUNCTION_49
0x4006926	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4238	coffcode.h	FUNCTION_49
0x400692a	          0x488b00	                    mov rax, qword [rax]	      4238	coffcode.h	FUNCTION_49
0x400692d	        0x488945e0	             mov qword [rbp - 0x20], rax	      4238	coffcode.h	FUNCTION_49
0x4006931	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4239	coffcode.h	FUNCTION_49
0x4006935	          0x488b00	                    mov rax, qword [rax]	      4239	coffcode.h	FUNCTION_49
0x4006938	        0x488945e8	             mov qword [rbp - 0x18], rax	      4239	coffcode.h	FUNCTION_49
0x400693c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4240	coffcode.h	FUNCTION_49
0x4006940	        0x488b4008	                mov rax, qword [rax + 8]	      4240	coffcode.h	FUNCTION_49
0x4006944	        0x488945f0	             mov qword [rbp - 0x10], rax	      4240	coffcode.h	FUNCTION_49
0x4006948	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4241	coffcode.h	FUNCTION_49
0x400694c	        0x488b4008	                mov rax, qword [rax + 8]	      4241	coffcode.h	FUNCTION_49
0x4006950	        0x488945f8	                mov qword [rbp - 8], rax	      4241	coffcode.h	FUNCTION_49
0x4006954	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4243	coffcode.h	FUNCTION_49	IF_1
0x4006959	            0x7407	                            je 0x4006962	      4243	coffcode.h	FUNCTION_49	IF_1
0x400695b	      0x48837df800	                  cmp qword [rbp - 8], 0	      4243	coffcode.h	FUNCTION_49	IF_1
0x4006960	            0x7507	                           jne 0x4006969	      4243	coffcode.h	FUNCTION_49	IF_1
0x4006962	      0xb800000000	                              mov eax, 0	      4244	coffcode.h	FUNCTION_49	IF_1
0x4006967	            0xeb3d	                           jmp 0x40069a6	      4244	coffcode.h	FUNCTION_49	IF_1
0x4006969	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4245	coffcode.h	FUNCTION_49	IF_2
0x400696d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4245	coffcode.h	FUNCTION_49	IF_2
0x4006971	        0x488b45f8	                mov rax, qword [rbp - 8]	      4245	coffcode.h	FUNCTION_49	IF_2
0x4006975	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4245	coffcode.h	FUNCTION_49	IF_2
0x4006979	          0x4839c2	                            cmp rdx, rax	      4245	coffcode.h	FUNCTION_49	IF_2
0x400697c	            0x7307	                           jae 0x4006985	      4245	coffcode.h	FUNCTION_49	IF_2
0x400697e	      0xb8ffffffff	                     mov eax, 0xffffffff	      4246	coffcode.h	FUNCTION_49	IF_2
0x4006983	            0xeb21	                           jmp 0x40069a6	      4246	coffcode.h	FUNCTION_49	IF_2
0x4006985	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4247	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x4006989	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4247	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x400698d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4247	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x4006991	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4247	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x4006995	          0x4839c2	                            cmp rdx, rax	      4247	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x4006998	            0x7607	                           jbe 0x40069a1	      4247	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x400699a	      0xb801000000	                              mov eax, 1	      4248	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x400699f	            0xeb05	                           jmp 0x40069a6	      4248	coffcode.h	FUNCTION_49	ELSE_1	IF_3
0x40069a1	      0xb800000000	                              mov eax, 0	      4250	coffcode.h	FUNCTION_49
0x40069a6	              0x5d	                                 pop rbp	      4251	coffcode.h	FUNCTION_49
0x40069a7	              0xc3	                                     ret	      4251	coffcode.h	FUNCTION_49
dummy_reloc16_estimate	IF,0:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	12
0x4007fb7	              0x55	                                push rbp	      5140	coffcode.h	FUNCTION_55
0x4007fb8	          0x4889e5	                            mov rbp, rsp	      5140	coffcode.h	FUNCTION_55
0x4007fbb	        0x4883ec30	                           sub rsp, 0x30	      5140	coffcode.h	FUNCTION_55
0x4007fbf	        0x48897df8	                mov qword [rbp - 8], rdi	      5140	coffcode.h	FUNCTION_55
0x4007fc3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5140	coffcode.h	FUNCTION_55
0x4007fc7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5140	coffcode.h	FUNCTION_55
0x4007fcb	          0x894de4	             mov dword [rbp - 0x1c], ecx	      5140	coffcode.h	FUNCTION_55
0x4007fce	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      5140	coffcode.h	FUNCTION_55
0x4007fd2	      0xba00000000	                              mov edx, 0	      5141	coffcode.h	FUNCTION_55	CALL_1
0x4007fd7	      0xbe15140000	                         mov esi, 0x1415	      5141	coffcode.h	FUNCTION_55	CALL_1
0x4007fdc	      0xbf00000000	                              mov edi, 0	      5141	coffcode.h	FUNCTION_55	CALL_1
0x4007fe1	      0xe800000000	      call sym.dummy_reloc16_extra_cases	      5141	coffcode.h	FUNCTION_55	CALL_1
coff_print_aux	IF,3:CALL,13:ELSE,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	26
0x40042e8	              0x55	                                push rbp	      2406	coffcode.h	FUNCTION_36
0x40042e9	          0x4889e5	                            mov rbp, rsp	      2406	coffcode.h	FUNCTION_36
0x40042ec	        0x4883ec30	                           sub rsp, 0x30	      2406	coffcode.h	FUNCTION_36
0x40042f0	        0x48897df8	                mov qword [rbp - 8], rdi	      2406	coffcode.h	FUNCTION_36
0x40042f4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2406	coffcode.h	FUNCTION_36
0x40042f8	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2406	coffcode.h	FUNCTION_36
0x40042fc	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2406	coffcode.h	FUNCTION_36
0x4004300	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      2406	coffcode.h	FUNCTION_36
0x4004304	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	      2406	coffcode.h	FUNCTION_36
0x4004308	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2407	coffcode.h	FUNCTION_36	CALL_1
0x400430c	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2407	coffcode.h	FUNCTION_36	CALL_1
0x400430f	            0x85c0	                           test eax, eax	      2407	coffcode.h	FUNCTION_36	CALL_1
0x4004311	            0x750f	                           jne 0x4004322	      2407	coffcode.h	FUNCTION_36	CALL_1
0x4004313	      0xbe67090000	                          mov esi, 0x967	      2407	coffcode.h	FUNCTION_36	CALL_1
0x4004318	      0xbf00000000	                              mov edi, 0	      2407	coffcode.h	FUNCTION_36	CALL_1
0x400431d	      0xe800000000	                          call 0x4004322	      2407	coffcode.h	FUNCTION_36	CALL_1
0x4004322	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2408	coffcode.h	FUNCTION_36	CALL_2
0x4004326	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2408	coffcode.h	FUNCTION_36	CALL_2
0x4004329	            0x85c0	                           test eax, eax	      2408	coffcode.h	FUNCTION_36	CALL_2
0x400432b	            0x740f	                            je 0x400433c	      2408	coffcode.h	FUNCTION_36	CALL_2
0x400432d	      0xbe68090000	                          mov esi, 0x968	      2408	coffcode.h	FUNCTION_36	CALL_2
0x4004332	      0xbf00000000	                              mov edi, 0	      2408	coffcode.h	FUNCTION_36	CALL_2
0x4004337	      0xe800000000	                          call 0x400433c	      2408	coffcode.h	FUNCTION_36	CALL_2
0x400433c	      0xb800000000	                              mov eax, 0	      2445	coffcode.h	FUNCTION_36
0x4004341	              0xc9	                                   leave	      2446	coffcode.h	FUNCTION_36
0x4004342	              0xc3	                                     ret	      2446	coffcode.h	FUNCTION_36
buy_and_read	IF,2:CALL,3:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	37
0x400689b	              0x55	                                push rbp	      4201	coffcode.h	FUNCTION_48
0x400689c	          0x4889e5	                            mov rbp, rsp	      4201	coffcode.h	FUNCTION_48
0x400689f	        0x4883ec30	                           sub rsp, 0x30	      4201	coffcode.h	FUNCTION_48
0x40068a3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4201	coffcode.h	FUNCTION_48
0x40068a7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4201	coffcode.h	FUNCTION_48
0x40068ab	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4201	coffcode.h	FUNCTION_48
0x40068af	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4202	coffcode.h	FUNCTION_48	CALL_1
0x40068b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4202	coffcode.h	FUNCTION_48	CALL_1
0x40068b7	          0x4889d6	                            mov rsi, rdx	      4202	coffcode.h	FUNCTION_48	CALL_1
0x40068ba	          0x4889c7	                            mov rdi, rax	      4202	coffcode.h	FUNCTION_48	CALL_1
0x40068bd	      0xe800000000	                          call 0x40068c2	      4202	coffcode.h	FUNCTION_48	CALL_1
0x40068c2	        0x488945f8	                mov qword [rbp - 8], rax	      4202	coffcode.h	FUNCTION_48	CALL_1
0x40068c6	      0x48837df800	                  cmp qword [rbp - 8], 0	      4204	coffcode.h	FUNCTION_48	IF_1
0x40068cb	            0x7507	                           jne 0x40068d4	      4204	coffcode.h	FUNCTION_48	IF_1
0x40068cd	      0xb800000000	                              mov eax, 0	      4205	coffcode.h	FUNCTION_48	IF_1
0x40068d2	            0xeb44	                           jmp 0x4006918	      4205	coffcode.h	FUNCTION_48	IF_1
0x40068d4	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068dc	      0xba00000000	                              mov edx, 0	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068e1	          0x4889ce	                            mov rsi, rcx	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068e4	          0x4889c7	                            mov rdi, rax	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068e7	      0xe800000000	                          call 0x40068ec	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068ec	            0x85c0	                           test eax, eax	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068ee	            0x751d	                           jne 0x400690d	      4206	coffcode.h	FUNCTION_48	IF_2	CALL_2
0x40068f0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x40068f4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x40068f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x40068fc	          0x4889ce	                            mov rsi, rcx	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x40068ff	          0x4889c7	                            mov rdi, rax	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x4006902	      0xe800000000	                          call 0x4006907	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x4006907	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x400690b	            0x7407	                            je 0x4006914	      4207	coffcode.h	FUNCTION_48	IF_2	CALL_3
0x400690d	      0xb800000000	                              mov eax, 0	      4208	coffcode.h	FUNCTION_48	IF_2
0x4006912	            0xeb04	                           jmp 0x4006918	      4208	coffcode.h	FUNCTION_48	IF_2
0x4006914	        0x488b45f8	                mov rax, qword [rbp - 8]	      4209	coffcode.h	FUNCTION_48
0x4006918	              0xc9	                                   leave	      4210	coffcode.h	FUNCTION_48
0x4006919	              0xc3	                                     ret	      4210	coffcode.h	FUNCTION_48
coff_i386_is_local_label_name	IF,1:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	18
0x4000792	              0x55	                                push rbp	       608	coff-i386.c	FUNCTION_71
0x4000793	          0x4889e5	                            mov rbp, rsp	       608	coff-i386.c	FUNCTION_71
0x4000796	        0x4883ec10	                           sub rsp, 0x10	       608	coff-i386.c	FUNCTION_71
0x400079a	        0x48897df8	                mov qword [rbp - 8], rdi	       608	coff-i386.c	FUNCTION_71
0x400079e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       608	coff-i386.c	FUNCTION_71
0x40007a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       609	coff-i386.c	FUNCTION_71	IF_1
0x40007a6	           0xfb600	                   movzx eax, byte [rax]	       609	coff-i386.c	FUNCTION_71	IF_1
0x40007a9	            0x3c4c	                            cmp al, 0x4c	       609	coff-i386.c	FUNCTION_71	IF_1
0x40007ab	            0x7507	                           jne 0x40007b4	       609	coff-i386.c	FUNCTION_71	IF_1
0x40007ad	      0xb801000000	                              mov eax, 1	       610	coff-i386.c	FUNCTION_71	IF_1
0x40007b2	            0xeb13	                           jmp 0x40007c7	       610	coff-i386.c	FUNCTION_71	IF_1
0x40007b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       612	coff-i386.c	FUNCTION_71	CALL_1
0x40007b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	coff-i386.c	FUNCTION_71	CALL_1
0x40007bc	          0x4889d6	                            mov rsi, rdx	       612	coff-i386.c	FUNCTION_71	CALL_1
0x40007bf	          0x4889c7	                            mov rdi, rax	       612	coff-i386.c	FUNCTION_71	CALL_1
0x40007c2	      0xe800000000	                          call 0x40007c7	       612	coff-i386.c	FUNCTION_71	CALL_1
0x40007c7	              0xc9	                                   leave	       613	coff-i386.c	FUNCTION_71
0x40007c8	              0xc3	                                     ret	       613	coff-i386.c	FUNCTION_71
pe_ILF_make_a_reloc	IF,0:CALL,2:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	21
0x4001163	              0x55	                                push rbp	       485	peicode.h	FUNCTION_10
0x4001164	          0x4889e5	                            mov rbp, rsp	       485	peicode.h	FUNCTION_10
0x4001167	        0x4883ec20	                           sub rsp, 0x20	       485	peicode.h	FUNCTION_10
0x400116b	        0x48897df8	                mov qword [rbp - 8], rdi	       485	peicode.h	FUNCTION_10
0x400116f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       485	peicode.h	FUNCTION_10
0x4001173	          0x8955ec	             mov dword [rbp - 0x14], edx	       485	peicode.h	FUNCTION_10
0x4001176	        0x48894de0	             mov qword [rbp - 0x20], rcx	       485	peicode.h	FUNCTION_10
0x400117a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       487	peicode.h	FUNCTION_10	CALL_2
0x400117e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       487	peicode.h	FUNCTION_10	CALL_2
0x4001185	          0x8b7830	            mov edi, dword [rax + 0x30] 	       486	peicode.h	FUNCTION_10	CALL_1
0x4001188	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       486	peicode.h	FUNCTION_10	CALL_1
0x400118c	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       486	peicode.h	FUNCTION_10	CALL_1
0x4001193	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       486	peicode.h	FUNCTION_10	CALL_1
0x4001196	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       486	peicode.h	FUNCTION_10	CALL_1
0x400119a	        0x488b45f8	                mov rax, qword [rbp - 8]	       486	peicode.h	FUNCTION_10	CALL_1
0x400119e	          0x4189f8	                            mov r8d, edi	       486	peicode.h	FUNCTION_10	CALL_1
0x40011a1	          0x4889c7	                            mov rdi, rax	       486	peicode.h	FUNCTION_10	CALL_1
0x40011a4	      0xe8c9feffff	     call sym.pe_ILF_make_a_symbol_reloc	       486	peicode.h	FUNCTION_10	CALL_1
0x40011a9	              0x90	                                     nop	       488	peicode.h	FUNCTION_10
0x40011aa	              0xc9	                                   leave	       488	peicode.h	FUNCTION_10
0x40011ab	              0xc3	                                     ret	       488	peicode.h	FUNCTION_10
coff_apply_checksum	IF,5:CALL,8:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	86
0x40053ac	              0x55	                                push rbp	      3304	coffcode.h	FUNCTION_45
0x40053ad	          0x4889e5	                            mov rbp, rsp	      3304	coffcode.h	FUNCTION_45
0x40053b0	        0x4883ec20	                           sub rsp, 0x20	      3304	coffcode.h	FUNCTION_45
0x40053b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3304	coffcode.h	FUNCTION_45
0x40053b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3304	coffcode.h	FUNCTION_45
0x40053c1	        0x488945f8	                mov qword [rbp - 8], rax	      3304	coffcode.h	FUNCTION_45
0x40053c5	            0x31c0	                            xor eax, eax	      3304	coffcode.h	FUNCTION_45
0x40053c7	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3306	coffcode.h	FUNCTION_45
0x40053ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3308	coffcode.h	FUNCTION_45	IF_1	CALL_1
0x40053d2	      0xba00000000	                              mov edx, 0	      3308	coffcode.h	FUNCTION_45	IF_1	CALL_1
0x40053d7	      0xbe3c000000	                           mov esi, 0x3c	      3308	coffcode.h	FUNCTION_45	IF_1	CALL_1
0x40053dc	          0x4889c7	                            mov rdi, rax	      3308	coffcode.h	FUNCTION_45	IF_1	CALL_1
0x40053df	      0xe800000000	                          call 0x40053e4	      3308	coffcode.h	FUNCTION_45	IF_1	CALL_1
0x40053e4	            0x85c0	                           test eax, eax	      3308	coffcode.h	FUNCTION_45	IF_1	CALL_1
0x40053e6	            0x740a	                            je 0x40053f2	      3308	coffcode.h	FUNCTION_45	IF_1	CALL_1
0x40053e8	      0xb800000000	                              mov eax, 0	      3309	coffcode.h	FUNCTION_45	IF_1
0x40053ed	      0xe9f0000000	                           jmp 0x40054e2	      3309	coffcode.h	FUNCTION_45	IF_1
0x40053f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3311	coffcode.h	FUNCTION_45	IF_2	CALL_2
0x40053f6	      0xbe00000000	                              mov esi, 0	      3311	coffcode.h	FUNCTION_45	IF_2	CALL_2
0x40053fb	          0x4889c7	                            mov rdi, rax	      3311	coffcode.h	FUNCTION_45	IF_2	CALL_2
0x40053fe	      0xe846feffff	                 call sym.coff_read_word	      3311	coffcode.h	FUNCTION_45	IF_2	CALL_2
0x4005403	            0x85c0	                           test eax, eax	      3311	coffcode.h	FUNCTION_45	IF_2	CALL_2
0x4005405	            0x750a	                           jne 0x4005411	      3311	coffcode.h	FUNCTION_45	IF_2	CALL_2
0x4005407	      0xb800000000	                              mov eax, 0	      3312	coffcode.h	FUNCTION_45	IF_2
0x400540c	      0xe9d1000000	                           jmp 0x40054e2	      3312	coffcode.h	FUNCTION_45	IF_2
0x4005411	    0x8b0500000000	            mov eax, dword [0x04005417] 	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x4005417	          0x83c058	                           add eax, 0x58	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x400541a	            0x89c1	                            mov ecx, eax	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x400541c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x4005420	      0xba00000000	                              mov edx, 0	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x4005425	          0x4889ce	                            mov rsi, rcx	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x4005428	          0x4889c7	                            mov rdi, rax	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x400542b	      0xe800000000	                          call 0x4005430	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x4005430	            0x85c0	                           test eax, eax	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x4005432	            0x740a	                            je 0x400543e	      3314	coffcode.h	FUNCTION_45	IF_3	CALL_3
0x4005434	      0xb800000000	                              mov eax, 0	      3315	coffcode.h	FUNCTION_45	IF_3
0x4005439	      0xe9a4000000	                           jmp 0x40054e2	      3315	coffcode.h	FUNCTION_45	IF_3
0x400543e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3317	coffcode.h	FUNCTION_45
0x4005445	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3318	coffcode.h	FUNCTION_45	CALL_4
0x4005449	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3318	coffcode.h	FUNCTION_45	CALL_4
0x400544d	      0xbe04000000	                              mov esi, 4	      3318	coffcode.h	FUNCTION_45	CALL_4
0x4005452	          0x4889c7	                            mov rdi, rax	      3318	coffcode.h	FUNCTION_45	CALL_4
0x4005455	      0xe800000000	                          call 0x400545a	      3318	coffcode.h	FUNCTION_45	CALL_4
0x400545a	    0x8b0500000000	            mov eax, dword [0x04005460] 	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x4005460	            0x89c1	                            mov ecx, eax	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x4005462	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x4005466	      0xba00000000	                              mov edx, 0	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x400546b	          0x4889ce	                            mov rsi, rcx	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x400546e	          0x4889c7	                            mov rdi, rax	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x4005471	      0xe800000000	                          call 0x4005476	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x4005476	            0x85c0	                           test eax, eax	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x4005478	            0x7407	                            je 0x4005481	      3320	coffcode.h	FUNCTION_45	IF_4	CALL_5
0x400547a	      0xb800000000	                              mov eax, 0	      3321	coffcode.h	FUNCTION_45	IF_4
0x400547f	            0xeb61	                           jmp 0x40054e2	      3321	coffcode.h	FUNCTION_45	IF_4
0x4005481	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3323	coffcode.h	FUNCTION_45	CALL_6
0x4005485	          0x4889c7	                            mov rdi, rax	      3323	coffcode.h	FUNCTION_45	CALL_6
0x4005488	      0xe866feffff	          call sym.coff_compute_checksum	      3323	coffcode.h	FUNCTION_45	CALL_6
0x400548d	          0x8945f4	              mov dword [rbp - 0xc], eax	      3323	coffcode.h	FUNCTION_45	CALL_6
0x4005490	    0x8b1500000000	            mov edx, dword [0x04005496] 	      3325	coffcode.h	FUNCTION_45
0x4005496	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3325	coffcode.h	FUNCTION_45
0x4005499	             0x1d0	                            add eax, edx	      3325	coffcode.h	FUNCTION_45
0x400549b	          0x8945f0	             mov dword [rbp - 0x10], eax	      3325	coffcode.h	FUNCTION_45
0x400549e	    0x8b0500000000	            mov eax, dword [0x040054a4] 	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054a4	          0x83c058	                           add eax, 0x58	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054a7	            0x89c1	                            mov ecx, eax	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054ad	      0xba00000000	                              mov edx, 0	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054b2	          0x4889ce	                            mov rsi, rcx	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054b5	          0x4889c7	                            mov rdi, rax	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054b8	      0xe800000000	                          call 0x40054bd	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054bd	            0x85c0	                           test eax, eax	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054bf	            0x7407	                            je 0x40054c8	      3327	coffcode.h	FUNCTION_45	IF_5	CALL_7
0x40054c1	      0xb800000000	                              mov eax, 0	      3328	coffcode.h	FUNCTION_45	IF_5
0x40054c6	            0xeb1a	                           jmp 0x40054e2	      3328	coffcode.h	FUNCTION_45	IF_5
0x40054c8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3330	coffcode.h	FUNCTION_45	CALL_8
0x40054cc	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3330	coffcode.h	FUNCTION_45	CALL_8
0x40054d0	      0xbe04000000	                              mov esi, 4	      3330	coffcode.h	FUNCTION_45	CALL_8
0x40054d5	          0x4889c7	                            mov rdi, rax	      3330	coffcode.h	FUNCTION_45	CALL_8
0x40054d8	      0xe800000000	                          call 0x40054dd	      3330	coffcode.h	FUNCTION_45	CALL_8
0x40054dd	      0xb801000000	                              mov eax, 1	      3332	coffcode.h	FUNCTION_45
0x40054e2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3333	coffcode.h	FUNCTION_45
0x40054e6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3333	coffcode.h	FUNCTION_45
0x40054ef	            0x7405	                            je 0x40054f6	      3333	coffcode.h	FUNCTION_45
0x40054f1	      0xe800000000	                          call 0x40054f6	      3333	coffcode.h	FUNCTION_45
0x40054f6	              0xc9	                                   leave	      3333	coffcode.h	FUNCTION_45
0x40054f7	              0xc3	                                     ret	      3333	coffcode.h	FUNCTION_45
coff_i386_reloc	IF,8:CALL,4:ELSE,4:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0	218
0x40000a1	              0x55	                                push rbp	        73	coff-i386.c	FUNCTION_65
0x40000a2	          0x4889e5	                            mov rbp, rsp	        73	coff-i386.c	FUNCTION_65
0x40000a5	              0x53	                                push rbx	        73	coff-i386.c	FUNCTION_65
0x40000a6	        0x4883ec68	                           sub rsp, 0x68	        73	coff-i386.c	FUNCTION_65
0x40000aa	        0x48897db8	             mov qword [rbp - 0x48], rdi	        73	coff-i386.c	FUNCTION_65
0x40000ae	        0x488975b0	             mov qword [rbp - 0x50], rsi	        73	coff-i386.c	FUNCTION_65
0x40000b2	        0x488955a8	             mov qword [rbp - 0x58], rdx	        73	coff-i386.c	FUNCTION_65
0x40000b6	        0x48894da0	             mov qword [rbp - 0x60], rcx	        73	coff-i386.c	FUNCTION_65
0x40000ba	        0x4c894598	              mov qword [rbp - 0x68], r8	        73	coff-i386.c	FUNCTION_65
0x40000be	        0x4c894d90	              mov qword [rbp - 0x70], r9	        73	coff-i386.c	FUNCTION_65
0x40000c2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        81	coff-i386.c	FUNCTION_65	IF_2
0x40000c6	        0x488b4020	            mov rax, qword [rax + 0x20] 	        81	coff-i386.c	FUNCTION_65	IF_2
0x40000ca	          0x8b4020	            mov eax, dword [rax + 0x20] 	        81	coff-i386.c	FUNCTION_65	IF_2
0x40000cd	      0x2500100000	                         and eax, 0x1000	        81	coff-i386.c	FUNCTION_65	IF_2
0x40000d2	            0x85c0	                           test eax, eax	        81	coff-i386.c	FUNCTION_65	IF_2
0x40000d4	            0x7411	                            je 0x40000e7	        81	coff-i386.c	FUNCTION_65	IF_2
0x40000d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        98	coff-i386.c	FUNCTION_65	IF_2
0x40000da	        0x488b4010	            mov rax, qword [rax + 0x10] 	        98	coff-i386.c	FUNCTION_65	IF_2
0x40000de	        0x488945c8	             mov qword [rbp - 0x38], rax	        98	coff-i386.c	FUNCTION_65	IF_2
0x40000e2	      0xe98e000000	                           jmp 0x4000175	        98	coff-i386.c	FUNCTION_65	IF_2
0x40000e7	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       108	coff-i386.c	FUNCTION_65	ELSE_1	IF_3
0x40000ec	            0x757b	                           jne 0x4000169	       108	coff-i386.c	FUNCTION_65	ELSE_1	IF_3
0x40000ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       110	coff-i386.c	FUNCTION_65	ELSE_1	IF_3
0x40000f2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       110	coff-i386.c	FUNCTION_65	ELSE_1	IF_3
0x40000f6	        0x488945d0	             mov qword [rbp - 0x30], rax	       110	coff-i386.c	FUNCTION_65	ELSE_1	IF_3
0x40000fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x40000fe	          0x8b4010	            mov eax, dword [rax + 0x10] 	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000101	            0x85c0	                           test eax, eax	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000103	            0x7427	                            je 0x400012c	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000105	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000109	          0x8b4048	            mov eax, dword [rax + 0x48] 	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x400010c	            0x85c0	                           test eax, eax	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x400010e	            0x741c	                            je 0x400012c	       119	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000110	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000114	          0x8b4008	                mov eax, dword [rax + 8]	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000117	      0xba01000000	                              mov edx, 1	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x400011c	            0x89c1	                            mov ecx, eax	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x400011e	            0xd3e2	                             shl edx, cl	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000120	            0x89d0	                            mov eax, edx	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000122	            0xf7d8	                                 neg eax	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000124	            0x4898	                                    cdqe	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x4000126	        0x488945c8	             mov qword [rbp - 0x38], rax	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x400012a	            0xeb49	                           jmp 0x4000175	       120	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	IF_4
0x400012c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       121	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000130	          0x8b4018	            mov eax, dword [rax + 0x18] 	       121	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000133	      0x2580000000	                           and eax, 0x80	       121	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000138	            0x85c0	                           test eax, eax	       121	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x400013a	            0x741c	                            je 0x4000158	       121	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x400013c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000140	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000144	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000148	        0x488b4010	            mov rax, qword [rax + 0x10] 	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x400014c	          0x4829c2	                            sub rdx, rax	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x400014f	          0x4889d0	                            mov rax, rdx	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000152	        0x488945c8	             mov qword [rbp - 0x38], rax	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000156	            0xeb1d	                           jmp 0x4000175	       122	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_2	IF_5
0x4000158	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       124	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_3
0x400015c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       124	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_3
0x4000160	          0x48f7d8	                                 neg rax	       124	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_3
0x4000163	        0x488945c8	             mov qword [rbp - 0x38], rax	       124	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_3
0x4000167	            0xeb0c	                           jmp 0x4000175	       124	coff-i386.c	FUNCTION_65	ELSE_1	IF_3	ELSE_3
0x4000169	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       128	coff-i386.c	FUNCTION_65	ELSE_1	ELSE_4
0x400016d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       128	coff-i386.c	FUNCTION_65	ELSE_1	ELSE_4
0x4000171	        0x488945c8	             mov qword [rbp - 0x38], rax	       128	coff-i386.c	FUNCTION_65	ELSE_1	ELSE_4
0x4000175	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       133	coff-i386.c	FUNCTION_65	IF_6
0x4000179	        0x488b4018	            mov rax, qword [rax + 0x18] 	       133	coff-i386.c	FUNCTION_65	IF_6
0x400017d	            0x8b00	                    mov eax, dword [rax]	       133	coff-i386.c	FUNCTION_65	IF_6
0x400017f	          0x83f807	                              cmp eax, 7	       133	coff-i386.c	FUNCTION_65	IF_6
0x4000182	            0x752d	                           jne 0x40001b1	       133	coff-i386.c	FUNCTION_65	IF_6
0x4000184	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       134	coff-i386.c	FUNCTION_65	IF_6
0x4000189	            0x7426	                            je 0x40001b1	       134	coff-i386.c	FUNCTION_65	IF_6
0x400018b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       135	coff-i386.c	FUNCTION_65	IF_6
0x400018f	        0x488b4008	                mov rax, qword [rax + 8]	       135	coff-i386.c	FUNCTION_65	IF_6
0x4000193	          0x8b4008	                mov eax, dword [rax + 8]	       135	coff-i386.c	FUNCTION_65	IF_6
0x4000196	          0x83f802	                              cmp eax, 2	       135	coff-i386.c	FUNCTION_65	IF_6
0x4000199	            0x7516	                           jne 0x40001b1	       135	coff-i386.c	FUNCTION_65	IF_6
0x400019b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       136	coff-i386.c	FUNCTION_65	CALL_1
0x400019f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       136	coff-i386.c	FUNCTION_65	CALL_1
0x40001a6	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       136	coff-i386.c	FUNCTION_65	CALL_1
0x40001ad	        0x482945c8	             sub qword [rbp - 0x38], rax	       136	coff-i386.c	FUNCTION_65	CALL_1
0x40001b1	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       142	coff-i386.c	FUNCTION_65	IF_7
0x40001b6	     0xf84cb010000	                            je 0x4000387	       142	coff-i386.c	FUNCTION_65	IF_7
0x40001bc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       144	coff-i386.c	FUNCTION_65	IF_7
0x40001c0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       144	coff-i386.c	FUNCTION_65	IF_7
0x40001c4	        0x488945d8	             mov qword [rbp - 0x28], rax	       144	coff-i386.c	FUNCTION_65	IF_7
0x40001c8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       145	coff-i386.c	FUNCTION_65	IF_7
0x40001cc	        0x488b5008	                mov rdx, qword [rax + 8]	       145	coff-i386.c	FUNCTION_65	IF_7
0x40001d0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       145	coff-i386.c	FUNCTION_65	IF_7
0x40001d4	          0x4801d0	                            add rax, rdx	       145	coff-i386.c	FUNCTION_65	IF_7
0x40001d7	        0x488945e0	             mov qword [rbp - 0x20], rax	       145	coff-i386.c	FUNCTION_65	IF_7
0x40001db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       148	coff-i386.c	FUNCTION_65	IF_7	IF_8
0x40001df	        0x488b5808	                mov rbx, qword [rax + 8]	       148	coff-i386.c	FUNCTION_65	IF_7	IF_8
0x40001e3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       149	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_3
0x40001e7	          0x4889c7	                            mov rdi, rax	       149	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_3
0x40001ea	      0xe800000000	                          call 0x40001ef	       149	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_3
0x40001ef	            0x89c0	                            mov eax, eax	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x40001f1	        0x480fafd8	                           imul rbx, rax	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x40001f5	          0x4889d9	                            mov rcx, rbx	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x40001f8	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x40001fc	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x4000200	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x4000204	          0x4889c7	                            mov rdi, rax	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x4000207	      0xe800000000	                          call 0x400020c	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x400020c	            0x85c0	                           test eax, eax	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x400020e	            0x750a	                           jne 0x400021a	       147	coff-i386.c	FUNCTION_65	IF_7	IF_8	CALL_2
0x4000210	      0xb804000000	                              mov eax, 4	       150	coff-i386.c	FUNCTION_65	IF_7	IF_8
0x4000215	      0xe972010000	                           jmp 0x400038c	       150	coff-i386.c	FUNCTION_65	IF_7	IF_8
0x400021a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400021e	          0x8b4008	                mov eax, dword [rax + 8]	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000221	          0x83f801	                              cmp eax, 1	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000224	            0x7463	                            je 0x4000289	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000226	          0x83f802	                              cmp eax, 2	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000229	     0xf84cd000000	                            je 0x40002fc	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400022f	            0x85c0	                           test eax, eax	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000231	     0xf853c010000	                           jne 0x4000373	       152	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000237	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       156	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400023b	           0xfb600	                   movzx eax, byte [rax]	       156	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400023e	          0x8845c5	               mov byte [rbp - 0x3b], al	       156	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000241	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000245	        0x488b4040	            mov rax, qword [rax + 0x40] 	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000249	            0xf7d0	                                 not eax	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400024b	            0x89c2	                            mov edx, eax	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400024d	         0xfb645c5	            movzx eax, byte [rbp - 0x3b]	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000251	            0x89d1	                            mov ecx, edx	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000253	            0x21c1	                            and ecx, eax	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000255	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000259	        0x488b4038	            mov rax, qword [rax + 0x38] 	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400025d	            0x89c2	                            mov edx, eax	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400025f	         0xfb645c5	            movzx eax, byte [rbp - 0x3b]	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000263	            0x21c2	                            and edx, eax	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000265	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000269	             0x1c2	                            add edx, eax	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400026b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400026f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000273	            0x21d0	                            and eax, edx	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000275	             0x9c8	                             or eax, ecx	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000277	          0x8845c5	               mov byte [rbp - 0x3b], al	       157	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400027a	         0xfb655c5	            movzx edx, byte [rbp - 0x3b]	       158	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400027e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       158	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000282	            0x8810	                      mov byte [rax], dl	       158	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000284	      0xe9fe000000	                           jmp 0x4000387	       160	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000289	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       164	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400028d	        0x488b4008	                mov rax, qword [rax + 8]	       164	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000291	        0x488b4050	            mov rax, qword [rax + 0x50] 	       164	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000295	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       164	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000299	          0x4889d7	                            mov rdi, rdx	       164	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400029c	            0xffd0	                                call rax	       164	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400029e	        0x668945c6	               mov word [rbp - 0x3a], ax	       164	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002a6	        0x488b4040	            mov rax, qword [rax + 0x40] 	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002aa	            0xf7d0	                                 not eax	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002ac	            0x89c2	                            mov edx, eax	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002ae	         0xfb745c6	            movzx eax, word [rbp - 0x3a]	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002b2	            0x21c2	                            and edx, eax	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002bc	            0x89c1	                            mov ecx, eax	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002be	         0xfb745c6	            movzx eax, word [rbp - 0x3a]	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002c2	            0x21c1	                            and ecx, eax	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002c8	             0x1c1	                            add ecx, eax	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002ce	        0x488b4040	            mov rax, qword [rax + 0x40] 	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002d2	            0x21c8	                            and eax, ecx	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002d4	             0x9d0	                             or eax, edx	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002d6	        0x668945c6	               mov word [rbp - 0x3a], ax	       165	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002da	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002de	        0x488b4008	                mov rax, qword [rax + 8]	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002e2	        0x488b4060	            mov rax, qword [rax + 0x60] 	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002e6	      0x480fbf55c6	            movsx rdx, word [rbp - 0x3a]	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002eb	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002ef	          0x4889ce	                            mov rsi, rcx	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002f2	          0x4889d7	                            mov rdi, rdx	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002f5	            0xffd0	                                call rax	       166	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002f7	      0xe98b000000	                           jmp 0x4000387	       168	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x40002fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       172	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000300	        0x488b4008	                mov rax, qword [rax + 8]	       172	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000304	        0x488b4038	            mov rax, qword [rax + 0x38] 	       172	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000308	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       172	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400030c	          0x4889d7	                            mov rdi, rdx	       172	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400030f	            0xffd0	                                call rax	       172	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000311	        0x488945e8	             mov qword [rbp - 0x18], rax	       172	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000315	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000319	        0x488b4040	            mov rax, qword [rax + 0x40] 	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400031d	          0x48f7d0	                                 not rax	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000320	          0x4889c2	                            mov rdx, rax	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000323	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000327	          0x4889d1	                            mov rcx, rdx	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400032a	          0x4821c1	                            and rcx, rax	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400032d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000331	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000335	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000339	          0x4821c2	                            and rdx, rax	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400033c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000340	          0x4801c2	                            add rdx, rax	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000343	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000347	        0x488b4040	            mov rax, qword [rax + 0x40] 	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400034b	          0x4821d0	                            and rax, rdx	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400034e	          0x4809c8	                             or rax, rcx	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000351	        0x488945e8	             mov qword [rbp - 0x18], rax	       173	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000355	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000359	        0x488b4008	                mov rax, qword [rax + 8]	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400035d	        0x488b4048	            mov rax, qword [rax + 0x48] 	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000361	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000365	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000369	          0x4889ce	                            mov rsi, rcx	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400036c	          0x4889d7	                            mov rdi, rdx	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x400036f	            0xffd0	                                call rax	       174	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000371	            0xeb14	                           jmp 0x4000387	       176	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1
0x4000373	      0xba00000000	                              mov edx, 0	       179	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1	CALL_4
0x4000378	      0xbeb3000000	                           mov esi, 0xb3	       179	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1	CALL_4
0x400037d	      0xbf00000000	                              mov edi, 0	       179	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1	CALL_4
0x4000382	      0xe800000000	                          call 0x4000387	       179	coff-i386.c	FUNCTION_65	IF_7	SWITCH_1	CALL_4
0x4000387	      0xb805000000	                              mov eax, 5	       184	coff-i386.c	FUNCTION_65
0x400038c	        0x4883c468	                           add rsp, 0x68	       185	coff-i386.c	FUNCTION_65
0x4000390	              0x5b	                                 pop rbx	       185	coff-i386.c	FUNCTION_65
0x4000391	              0x5d	                                 pop rbp	       185	coff-i386.c	FUNCTION_65
0x4000392	              0xc3	                                     ret	       185	coff-i386.c	FUNCTION_65
pe_bfd_copy_private_bfd_data	IF,3:CALL,6:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	48
0x4000fbb	              0x55	                                push rbp	       352	peicode.h	FUNCTION_8
0x4000fbc	          0x4889e5	                            mov rbp, rsp	       352	peicode.h	FUNCTION_8
0x4000fbf	        0x4883ec10	                           sub rsp, 0x10	       352	peicode.h	FUNCTION_8
0x4000fc3	        0x48897df8	                mov qword [rbp - 8], rdi	       352	peicode.h	FUNCTION_8
0x4000fc7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       352	peicode.h	FUNCTION_8
0x4000fcb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	peicode.h	FUNCTION_8	IF_1	CALL_1
0x4000fcf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       356	peicode.h	FUNCTION_8	IF_1	CALL_1
0x4000fd6	          0x4885c0	                           test rax, rax	       356	peicode.h	FUNCTION_8	IF_1	CALL_1
0x4000fd9	            0x744d	                            je 0x4001028	       356	peicode.h	FUNCTION_8	IF_1	CALL_1
0x4000fdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       357	peicode.h	FUNCTION_8	IF_1	CALL_2
0x4000fdf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       357	peicode.h	FUNCTION_8	IF_1	CALL_2
0x4000fe6	          0x4885c0	                           test rax, rax	       357	peicode.h	FUNCTION_8	IF_1	CALL_2
0x4000fe9	            0x743d	                            je 0x4001028	       357	peicode.h	FUNCTION_8	IF_1	CALL_2
0x4000feb	        0x488b45f8	                mov rax, qword [rbp - 8]	       358	peicode.h	FUNCTION_8	IF_1	CALL_3
0x4000fef	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       358	peicode.h	FUNCTION_8	IF_1	CALL_3
0x4000ff6	    0x8b8098020000	           mov eax, dword [rax + 0x298] 	       358	peicode.h	FUNCTION_8	IF_1	CALL_3
0x4000ffc	          0x83e020	                           and eax, 0x20	       358	peicode.h	FUNCTION_8	IF_1	CALL_3
0x4000fff	            0x85c0	                           test eax, eax	       358	peicode.h	FUNCTION_8	IF_1	CALL_3
0x4001001	            0x7425	                            je 0x4001028	       358	peicode.h	FUNCTION_8	IF_1	CALL_3
0x4001003	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       359	peicode.h	FUNCTION_8	CALL_4
0x4001007	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       359	peicode.h	FUNCTION_8	CALL_4
0x400100e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       359	peicode.h	FUNCTION_8	CALL_4
0x4001012	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	       359	peicode.h	FUNCTION_8	CALL_4
0x4001019	    0x8b9298020000	           mov edx, dword [rdx + 0x298] 	       359	peicode.h	FUNCTION_8	CALL_4
0x400101f	          0x83ca20	                            or edx, 0x20	       359	peicode.h	FUNCTION_8	CALL_4
0x4001022	    0x899098020000	            mov dword [rax + 0x298], edx	       359	peicode.h	FUNCTION_8	CALL_4
0x4001028	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       361	peicode.h	FUNCTION_8	IF_2	CALL_5
0x400102c	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	peicode.h	FUNCTION_8	IF_2	CALL_5
0x4001030	          0x4889d6	                            mov rsi, rdx	       361	peicode.h	FUNCTION_8	IF_2	CALL_5
0x4001033	          0x4889c7	                            mov rdi, rax	       361	peicode.h	FUNCTION_8	IF_2	CALL_5
0x4001036	      0xe800000000	                          call 0x400103b	       361	peicode.h	FUNCTION_8	IF_2	CALL_5
0x400103b	            0x85c0	                           test eax, eax	       361	peicode.h	FUNCTION_8	IF_2	CALL_5
0x400103d	            0x7507	                           jne 0x4001046	       361	peicode.h	FUNCTION_8	IF_2	CALL_5
0x400103f	      0xb800000000	                              mov eax, 0	       362	peicode.h	FUNCTION_8	IF_2
0x4001044	            0xeb2a	                           jmp 0x4001070	       362	peicode.h	FUNCTION_8	IF_2
0x4001046	    0x488b05000000	            mov rax, qword [0x0400104d] 	       364	peicode.h	FUNCTION_8	IF_3
0x400104d	          0x4885c0	                           test rax, rax	       364	peicode.h	FUNCTION_8	IF_3
0x4001050	            0x7419	                            je 0x400106b	       364	peicode.h	FUNCTION_8	IF_3
0x4001052	    0x488b05000000	            mov rax, qword [0x04001059] 	       365	peicode.h	FUNCTION_8	CALL_6
0x4001059	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       365	peicode.h	FUNCTION_8	CALL_6
0x400105d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       365	peicode.h	FUNCTION_8	CALL_6
0x4001061	          0x4889ce	                            mov rsi, rcx	       365	peicode.h	FUNCTION_8	CALL_6
0x4001064	          0x4889d7	                            mov rdi, rdx	       365	peicode.h	FUNCTION_8	CALL_6
0x4001067	            0xffd0	                                call rax	       365	peicode.h	FUNCTION_8	CALL_6
0x4001069	            0xeb05	                           jmp 0x4001070	       365	peicode.h	FUNCTION_8	CALL_6
0x400106b	      0xb801000000	                              mov eax, 1	       367	peicode.h	FUNCTION_8
0x4001070	              0xc9	                                   leave	       368	peicode.h	FUNCTION_8
0x4001071	              0xc3	                                     ret	       368	peicode.h	FUNCTION_8
symname_in_debug_hook	IF,0:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	7
0x40042d5	              0x55	                                push rbp	      2346	coffcode.h	FUNCTION_35
0x40042d6	          0x4889e5	                            mov rbp, rsp	      2346	coffcode.h	FUNCTION_35
0x40042d9	        0x48897df8	                mov qword [rbp - 8], rdi	      2346	coffcode.h	FUNCTION_35
0x40042dd	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2346	coffcode.h	FUNCTION_35
0x40042e1	      0xb800000000	                              mov eax, 0	      2350	coffcode.h	FUNCTION_35
0x40042e6	              0x5d	                                 pop rbp	      2352	coffcode.h	FUNCTION_35
0x40042e7	              0xc3	                                     ret	      2352	coffcode.h	FUNCTION_35
pe_mkobject_hook	IF,5:CALL,6:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	97
0x4000da8	              0x55	                                push rbp	       284	peicode.h	FUNCTION_6
0x4000da9	          0x4889e5	                            mov rbp, rsp	       284	peicode.h	FUNCTION_6
0x4000dac	        0x4883ec30	                           sub rsp, 0x30	       284	peicode.h	FUNCTION_6
0x4000db0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       284	peicode.h	FUNCTION_6
0x4000db4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       284	peicode.h	FUNCTION_6
0x4000db8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       284	peicode.h	FUNCTION_6
0x4000dbc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       285	peicode.h	FUNCTION_6
0x4000dc0	        0x488945f0	             mov qword [rbp - 0x10], rax	       285	peicode.h	FUNCTION_6
0x4000dc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	peicode.h	FUNCTION_6	IF_1	CALL_1
0x4000dc8	          0x4889c7	                            mov rdi, rax	       288	peicode.h	FUNCTION_6	IF_1	CALL_1
0x4000dcb	      0xe83dffffff	                    call sym.pe_mkobject	       288	peicode.h	FUNCTION_6	IF_1	CALL_1
0x4000dd0	            0x85c0	                           test eax, eax	       288	peicode.h	FUNCTION_6	IF_1	CALL_1
0x4000dd2	            0x750a	                           jne 0x4000dde	       288	peicode.h	FUNCTION_6	IF_1	CALL_1
0x4000dd4	      0xb800000000	                              mov eax, 0	       289	peicode.h	FUNCTION_6	IF_1
0x4000dd9	      0xe968010000	                           jmp 0x4000f46	       289	peicode.h	FUNCTION_6	IF_1
0x4000dde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	peicode.h	FUNCTION_6	CALL_2
0x4000de2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       291	peicode.h	FUNCTION_6	CALL_2
0x4000de9	        0x488945f8	                mov qword [rbp - 8], rax	       291	peicode.h	FUNCTION_6	CALL_2
0x4000ded	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	peicode.h	FUNCTION_6
0x4000df1	    0x488b80e00800	           mov rax, qword [rax + 0x8e0] 	       292	peicode.h	FUNCTION_6
0x4000df8	          0x4889c2	                            mov rdx, rax	       292	peicode.h	FUNCTION_6
0x4000dfb	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	peicode.h	FUNCTION_6
0x4000dff	        0x48895018	             mov qword [rax + 0x18], rdx	       292	peicode.h	FUNCTION_6
0x4000e03	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	peicode.h	FUNCTION_6
0x4000e07	    0xc740380f0000	            mov dword [rax + 0x38], 0xf 	       296	peicode.h	FUNCTION_6
0x4000e0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       297	peicode.h	FUNCTION_6
0x4000e12	    0xc7403c040000	               mov dword [rax + 0x3c], 4	       297	peicode.h	FUNCTION_6
0x4000e19	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	peicode.h	FUNCTION_6
0x4000e1d	    0xc74040300000	           mov dword [rax + 0x40], 0x30 	       298	peicode.h	FUNCTION_6
0x4000e24	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	peicode.h	FUNCTION_6
0x4000e28	    0xc74044020000	               mov dword [rax + 0x44], 2	       299	peicode.h	FUNCTION_6
0x4000e2f	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	peicode.h	FUNCTION_6
0x4000e33	    0xc74048120000	           mov dword [rax + 0x48], 0x12 	       300	peicode.h	FUNCTION_6
0x4000e3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	peicode.h	FUNCTION_6
0x4000e3e	    0xc7404c120000	           mov dword [rax + 0x4c], 0x12 	       301	peicode.h	FUNCTION_6
0x4000e45	        0x488b45f8	                mov rax, qword [rbp - 8]	       302	peicode.h	FUNCTION_6
0x4000e49	    0xc74050060000	               mov dword [rax + 0x50], 6	       302	peicode.h	FUNCTION_6
0x4000e50	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	peicode.h	FUNCTION_6
0x4000e54	    0x488b90d80800	           mov rdx, qword [rax + 0x8d8] 	       304	peicode.h	FUNCTION_6
0x4000e5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	peicode.h	FUNCTION_6
0x4000e5f	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       304	peicode.h	FUNCTION_6
0x4000e66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       306	peicode.h	FUNCTION_6	CALL_3
0x4000e6a	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	       306	peicode.h	FUNCTION_6	CALL_3
0x4000e71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	peicode.h	FUNCTION_6	CALL_4
0x4000e75	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       307	peicode.h	FUNCTION_6	CALL_4
0x4000e7c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       308	peicode.h	FUNCTION_6
0x4000e80	    0x488b89e80800	           mov rcx, qword [rcx + 0x8e8] 	       308	peicode.h	FUNCTION_6
0x4000e87	          0x894810	             mov dword [rax + 0x10], ecx	       307	peicode.h	FUNCTION_6	CALL_4
0x4000e8a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       307	peicode.h	FUNCTION_6	CALL_4
0x4000e8d	            0x4898	                                    cdqe	       306	peicode.h	FUNCTION_6	CALL_3
0x4000e8f	        0x48894228	             mov qword [rdx + 0x28], rax	       306	peicode.h	FUNCTION_6	CALL_3
0x4000e93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	peicode.h	FUNCTION_6
0x4000e97	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       310	peicode.h	FUNCTION_6
0x4000e9e	           0xfb7d0	                           movzx edx, ax	       310	peicode.h	FUNCTION_6
0x4000ea1	        0x488b45f8	                mov rax, qword [rbp - 8]	       310	peicode.h	FUNCTION_6
0x4000ea5	    0x899098020000	            mov dword [rax + 0x298], edx	       310	peicode.h	FUNCTION_6
0x4000eab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       312	peicode.h	FUNCTION_6	IF_2
0x4000eaf	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       312	peicode.h	FUNCTION_6	IF_2
0x4000eb6	           0xfb7c0	                           movzx eax, ax	       312	peicode.h	FUNCTION_6	IF_2
0x4000eb9	      0x2500200000	                         and eax, 0x2000	       312	peicode.h	FUNCTION_6	IF_2
0x4000ebe	            0x85c0	                           test eax, eax	       312	peicode.h	FUNCTION_6	IF_2
0x4000ec0	            0x740e	                            je 0x4000ed0	       312	peicode.h	FUNCTION_6	IF_2
0x4000ec2	        0x488b45f8	                mov rax, qword [rbp - 8]	       313	peicode.h	FUNCTION_6	IF_2
0x4000ec6	    0xc78080020000	              mov dword [rax + 0x280], 1	       313	peicode.h	FUNCTION_6	IF_2
0x4000ed0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       315	peicode.h	FUNCTION_6	IF_3
0x4000ed4	     0xfb780f20800	          movzx eax, word [rax + 0x8f2] 	       315	peicode.h	FUNCTION_6	IF_3
0x4000edb	           0xfb7c0	                           movzx eax, ax	       315	peicode.h	FUNCTION_6	IF_3
0x4000ede	      0x2500020000	                          and eax, 0x200	       315	peicode.h	FUNCTION_6	IF_3
0x4000ee3	            0x85c0	                           test eax, eax	       315	peicode.h	FUNCTION_6	IF_3
0x4000ee5	            0x7531	                           jne 0x4000f18	       315	peicode.h	FUNCTION_6	IF_3
0x4000ee7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	peicode.h	FUNCTION_6	IF_3
0x4000eeb	          0x8b4044	            mov eax, dword [rax + 0x44] 	       316	peicode.h	FUNCTION_6	IF_3
0x4000eee	          0xc1e805	                              shr eax, 5	       316	peicode.h	FUNCTION_6	IF_3
0x4000ef1	      0x25ffff0f00	                        and eax, 0xfffff	       316	peicode.h	FUNCTION_6	IF_3
0x4000ef6	          0x83c808	                               or eax, 8	       316	peicode.h	FUNCTION_6	IF_3
0x4000ef9	            0x89c2	                            mov edx, eax	       316	peicode.h	FUNCTION_6	IF_3
0x4000efb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	peicode.h	FUNCTION_6	IF_3
0x4000eff	    0x81e2ffff0f00	                        and edx, 0xfffff	       316	peicode.h	FUNCTION_6	IF_3
0x4000f05	            0x89d1	                            mov ecx, edx	       316	peicode.h	FUNCTION_6	IF_3
0x4000f07	          0xc1e105	                              shl ecx, 5	       316	peicode.h	FUNCTION_6	IF_3
0x4000f0a	          0x8b5044	            mov edx, dword [rax + 0x44] 	       316	peicode.h	FUNCTION_6	IF_3
0x4000f0d	    0x81e21f0000fe	                     and edx, 0xfe00001f	       316	peicode.h	FUNCTION_6	IF_3
0x4000f13	             0x9ca	                             or edx, ecx	       316	peicode.h	FUNCTION_6	IF_3
0x4000f15	          0x895044	             mov dword [rax + 0x44], edx	       316	peicode.h	FUNCTION_6	IF_3
0x4000f18	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       319	peicode.h	FUNCTION_6	IF_4
0x4000f1d	            0x7423	                            je 0x4000f42	       319	peicode.h	FUNCTION_6	IF_4
0x4000f1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	peicode.h	FUNCTION_6	IF_4
0x4000f23	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       320	peicode.h	FUNCTION_6	IF_4
0x4000f27	    0x4805c8000000	                           add rax, 0xc8	       320	peicode.h	FUNCTION_6	IF_4
0x4000f2d	    0x4881c2c80000	                           add rdx, 0xc8	       320	peicode.h	FUNCTION_6	IF_4
0x4000f34	      0xb937000000	                           mov ecx, 0x37	       320	peicode.h	FUNCTION_6	IF_4
0x4000f39	          0x4889c7	                            mov rdi, rax	       320	peicode.h	FUNCTION_6	IF_4
0x4000f3c	          0x4889d6	                            mov rsi, rdx	       320	peicode.h	FUNCTION_6	IF_4
0x4000f3f	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       320	peicode.h	FUNCTION_6	IF_4
0x4000f42	        0x488b45f8	                mov rax, qword [rbp - 8]	       328	peicode.h	FUNCTION_6
0x4000f46	              0xc9	                                   leave	       329	peicode.h	FUNCTION_6
0x4000f47	              0xc3	                                     ret	       329	peicode.h	FUNCTION_6
coff_link_output_has_begun	IF,0:CALL,0:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0	11
0x400801a	              0x55	                                push rbp	      5218	coffcode.h	FUNCTION_57
0x400801b	          0x4889e5	                            mov rbp, rsp	      5218	coffcode.h	FUNCTION_57
0x400801e	        0x48897df8	                mov qword [rbp - 8], rdi	      5218	coffcode.h	FUNCTION_57
0x4008022	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5218	coffcode.h	FUNCTION_57
0x4008026	        0x488b45f8	                mov rax, qword [rbp - 8]	      5219	coffcode.h	FUNCTION_57
0x400802a	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      5219	coffcode.h	FUNCTION_57
0x400802e	          0xc0e806	                               shr al, 6	      5219	coffcode.h	FUNCTION_57
0x4008031	          0x83e001	                              and eax, 1	      5219	coffcode.h	FUNCTION_57
0x4008034	           0xfb6c0	                           movzx eax, al	      5219	coffcode.h	FUNCTION_57
0x4008037	              0x5d	                                 pop rbp	      5220	coffcode.h	FUNCTION_57
0x4008038	              0xc3	                                     ret	      5220	coffcode.h	FUNCTION_57
