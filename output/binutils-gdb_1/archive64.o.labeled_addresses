_bfd_archive_64_bit_slurp_armap	IF,14:SWITCH,0:CALL,27:FOR,1:WHILE,0:ELSE,0:DO,0:functions,0	267
0x4000040	              0x55	                                push rbp	        39	archive64.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        39	archive64.c	FUNCTION_1
0x4000044	    0x4881ecb00000	                           sub rsp, 0xb0	        39	archive64.c	FUNCTION_1
0x400004b	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	        39	archive64.c	FUNCTION_1
0x4000052	    0x64488b042528	                mov rax, qword fs:[0x28]	        39	archive64.c	FUNCTION_1
0x400005b	        0x488945f8	                mov qword [rbp - 8], rax	        39	archive64.c	FUNCTION_1
0x400005f	            0x31c0	                            xor eax, eax	        39	archive64.c	FUNCTION_1
0x4000061	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        40	archive64.c	FUNCTION_1	CALL_1
0x4000068	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        40	archive64.c	FUNCTION_1	CALL_1
0x400006f	        0x48894580	             mov qword [rbp - 0x80], rax	        40	archive64.c	FUNCTION_1	CALL_1
0x4000073	    0x48c745880000	               mov qword [rbp - 0x78], 0	        47	archive64.c	FUNCTION_1
0x400007b	        0x488b4580	             mov rax, qword [rbp - 0x80]	        51	archive64.c	FUNCTION_1
0x400007f	    0x48c740180000	               mov qword [rax + 0x18], 0	        51	archive64.c	FUNCTION_1
0x4000087	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	        54	archive64.c	FUNCTION_1	CALL_2
0x400008e	        0x488d45e0	                   lea rax, [rbp - 0x20]	        54	archive64.c	FUNCTION_1	CALL_2
0x4000092	      0xbe10000000	                           mov esi, 0x10	        54	archive64.c	FUNCTION_1	CALL_2
0x4000097	          0x4889c7	                            mov rdi, rax	        54	archive64.c	FUNCTION_1	CALL_2
0x400009a	      0xe800000000	                          call 0x400009f	        54	archive64.c	FUNCTION_1	CALL_2
0x400009f	    0x48898568ffff	             mov qword [rbp - 0x98], rax	        54	archive64.c	FUNCTION_1	CALL_2
0x40000a6	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	        55	archive64.c	FUNCTION_1	IF_1
0x40000ae	            0x750a	                           jne 0x40000ba	        55	archive64.c	FUNCTION_1	IF_1
0x40000b0	      0xb801000000	                              mov eax, 1	        56	archive64.c	FUNCTION_1	IF_1
0x40000b5	      0xe904040000	                           jmp 0x40004be	        56	archive64.c	FUNCTION_1	IF_1
0x40000ba	    0x4883bd68ffff	           cmp qword [rbp - 0x98], 0x10 	        57	archive64.c	FUNCTION_1	IF_2
0x40000c2	            0x740a	                            je 0x40000ce	        57	archive64.c	FUNCTION_1	IF_2
0x40000c4	      0xb800000000	                              mov eax, 0	        58	archive64.c	FUNCTION_1	IF_2
0x40000c9	      0xe9f0030000	                           jmp 0x40004be	        58	archive64.c	FUNCTION_1	IF_2
0x40000ce	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000d5	      0xba01000000	                              mov edx, 1	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000da	    0x48c7c6f0ffff	             mov rsi, 0xfffffffffffffff0	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000e1	          0x4889c7	                            mov rdi, rax	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000e4	      0xe800000000	                          call 0x40000e9	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000e9	            0x85c0	                           test eax, eax	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000eb	            0x740a	                            je 0x40000f7	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000ed	      0xb800000000	                              mov eax, 0	        61	archive64.c	FUNCTION_1	IF_3
0x40000f2	      0xe9c7030000	                           jmp 0x40004be	        61	archive64.c	FUNCTION_1	IF_3
0x40000f7	        0x488d45e0	                   lea rax, [rbp - 0x20]	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000fb	      0xba10000000	                           mov edx, 0x10	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x4000100	      0xbe00000000	                              mov esi, 0	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x4000105	          0x4889c7	                            mov rdi, rax	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x4000108	      0xe800000000	                          call 0x400010d	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x400010d	            0x85c0	                           test eax, eax	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x400010f	            0x7514	                           jne 0x4000125	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x4000111	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        65	archive64.c	FUNCTION_1	CALL_5
0x4000118	          0x4889c7	                            mov rdi, rax	        65	archive64.c	FUNCTION_1	CALL_5
0x400011b	      0xe800000000	                          call 0x4000120	        65	archive64.c	FUNCTION_1	CALL_5
0x4000120	      0xe999030000	                           jmp 0x40004be	        65	archive64.c	FUNCTION_1	CALL_5
0x4000125	        0x488d45e0	                   lea rax, [rbp - 0x20]	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000129	      0xba10000000	                           mov edx, 0x10	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x400012e	      0xbe00000000	                              mov esi, 0	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000133	          0x4889c7	                            mov rdi, rax	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000136	      0xe800000000	                          call 0x400013b	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x400013b	            0x85c0	                           test eax, eax	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x400013d	            0x741b	                            je 0x400015a	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x400013f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        69	archive64.c	FUNCTION_1	IF_5	CALL_7
0x4000146	         0xfb65047	           movzx edx, byte [rax + 0x47] 	        69	archive64.c	FUNCTION_1	IF_5	CALL_7
0x400014a	          0x83e27f	                           and edx, 0x7f	        69	archive64.c	FUNCTION_1	IF_5	CALL_7
0x400014d	          0x885047	               mov byte [rax + 0x47], dl	        69	archive64.c	FUNCTION_1	IF_5	CALL_7
0x4000150	      0xb801000000	                              mov eax, 1	        70	archive64.c	FUNCTION_1	IF_5
0x4000155	      0xe964030000	                           jmp 0x40004be	        70	archive64.c	FUNCTION_1	IF_5
0x400015a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        73	archive64.c	FUNCTION_1	CALL_8
0x4000161	        0x488b4008	                mov rax, qword [rax + 8]	        73	archive64.c	FUNCTION_1	CALL_8
0x4000165	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	        73	archive64.c	FUNCTION_1	CALL_8
0x400016c	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	        73	archive64.c	FUNCTION_1	CALL_8
0x4000173	          0x4889d7	                            mov rdi, rdx	        73	archive64.c	FUNCTION_1	CALL_8
0x4000176	            0xffd0	                                call rax	        73	archive64.c	FUNCTION_1	CALL_8
0x4000178	        0x48894590	             mov qword [rbp - 0x70], rax	        73	archive64.c	FUNCTION_1	CALL_8
0x400017c	      0x48837d9000	               cmp qword [rbp - 0x70], 0	        74	archive64.c	FUNCTION_1	IF_6
0x4000181	            0x750a	                           jne 0x400018d	        74	archive64.c	FUNCTION_1	IF_6
0x4000183	      0xb800000000	                              mov eax, 0	        75	archive64.c	FUNCTION_1	IF_6
0x4000188	      0xe931030000	                           jmp 0x40004be	        75	archive64.c	FUNCTION_1	IF_6
0x400018d	        0x488b4590	             mov rax, qword [rbp - 0x70]	        76	archive64.c	FUNCTION_1
0x4000191	        0x488b4008	                mov rax, qword [rax + 8]	        76	archive64.c	FUNCTION_1
0x4000195	        0x48894598	             mov qword [rbp - 0x68], rax	        76	archive64.c	FUNCTION_1
0x4000199	        0x488b4590	             mov rax, qword [rbp - 0x70]	        77	archive64.c	FUNCTION_1	CALL_9
0x400019d	          0x4889c7	                            mov rdi, rax	        77	archive64.c	FUNCTION_1	CALL_9
0x40001a0	      0xe800000000	                          call 0x40001a5	        77	archive64.c	FUNCTION_1	CALL_9
0x40001a5	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x40001ac	        0x488d45d0	                   lea rax, [rbp - 0x30]	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x40001b0	      0xbe08000000	                              mov esi, 8	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x40001b5	          0x4889c7	                            mov rdi, rax	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x40001b8	      0xe800000000	                          call 0x40001bd	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x40001bd	        0x4883f808	                              cmp rax, 8	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x40001c1	            0x741e	                            je 0x40001e1	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x40001c3	      0xe800000000	                          call 0x40001c8	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x40001c8	          0x83f801	                              cmp eax, 1	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x40001cb	            0x740a	                            je 0x40001d7	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x40001cd	      0xbf0a000000	                            mov edi, 0xa	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x40001d2	      0xe800000000	                          call 0x40001d7	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x40001d7	      0xb800000000	                              mov eax, 0	        83	archive64.c	FUNCTION_1	IF_7
0x40001dc	      0xe9dd020000	                           jmp 0x40004be	        83	archive64.c	FUNCTION_1	IF_7
0x40001e1	        0x488d45d0	                   lea rax, [rbp - 0x30]	        86	archive64.c	FUNCTION_1	CALL_13
0x40001e5	          0x4889c7	                            mov rdi, rax	        86	archive64.c	FUNCTION_1	CALL_13
0x40001e8	      0xe800000000	                          call 0x40001ed	        86	archive64.c	FUNCTION_1	CALL_13
0x40001ed	        0x488945a0	             mov qword [rbp - 0x60], rax	        86	archive64.c	FUNCTION_1	CALL_13
0x40001f1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        87	archive64.c	FUNCTION_1
0x40001f5	    0x488d14c50000	                        lea rdx, [rax*8]	        87	archive64.c	FUNCTION_1
0x40001fd	        0x488b4598	             mov rax, qword [rbp - 0x68]	        87	archive64.c	FUNCTION_1
0x4000201	          0x4829d0	                            sub rax, rdx	        87	archive64.c	FUNCTION_1
0x4000204	        0x4883e808	                              sub rax, 8	        87	archive64.c	FUNCTION_1
0x4000208	        0x488945a8	             mov qword [rbp - 0x58], rax	        87	archive64.c	FUNCTION_1
0x400020c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        89	archive64.c	FUNCTION_1
0x4000210	        0x48c1e004	                              shl rax, 4	        89	archive64.c	FUNCTION_1
0x4000214	        0x488945b0	             mov qword [rbp - 0x50], rax	        89	archive64.c	FUNCTION_1
0x4000218	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        90	archive64.c	FUNCTION_1
0x400021c	        0x48c1e003	                              shl rax, 3	        90	archive64.c	FUNCTION_1
0x4000220	        0x488945b8	             mov qword [rbp - 0x48], rax	        90	archive64.c	FUNCTION_1
0x4000224	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	        92	archive64.c	FUNCTION_1
0x4000228	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        92	archive64.c	FUNCTION_1
0x400022c	          0x4801d0	                            add rax, rdx	        92	archive64.c	FUNCTION_1
0x400022f	        0x4883c001	                              add rax, 1	        92	archive64.c	FUNCTION_1
0x4000233	        0x488945c0	             mov qword [rbp - 0x40], rax	        92	archive64.c	FUNCTION_1
0x4000237	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        93	archive64.c	FUNCTION_1	IF_9
0x400023b	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	        93	archive64.c	FUNCTION_1	IF_9
0x400023f	            0x7214	                            jb 0x4000255	        93	archive64.c	FUNCTION_1	IF_9
0x4000241	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        93	archive64.c	FUNCTION_1	IF_9
0x4000245	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	        93	archive64.c	FUNCTION_1	IF_9
0x4000249	            0x720a	                            jb 0x4000255	        93	archive64.c	FUNCTION_1	IF_9
0x400024b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        93	archive64.c	FUNCTION_1	IF_9
0x400024f	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	        93	archive64.c	FUNCTION_1	IF_9
0x4000253	            0x7314	                           jae 0x4000269	        93	archive64.c	FUNCTION_1	IF_9
0x4000255	      0xbf0a000000	                            mov edi, 0xa	        95	archive64.c	FUNCTION_1	IF_9	CALL_14
0x400025a	      0xe800000000	                          call 0x400025f	        95	archive64.c	FUNCTION_1	IF_9	CALL_14
0x400025f	      0xb800000000	                              mov eax, 0	        96	archive64.c	FUNCTION_1	IF_9
0x4000264	      0xe955020000	                           jmp 0x40004be	        96	archive64.c	FUNCTION_1	IF_9
0x4000269	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        98	archive64.c	FUNCTION_1	CALL_15
0x400026d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        98	archive64.c	FUNCTION_1	CALL_15
0x4000274	          0x4889d6	                            mov rsi, rdx	        98	archive64.c	FUNCTION_1	CALL_15
0x4000277	          0x4889c7	                            mov rdi, rax	        98	archive64.c	FUNCTION_1	CALL_15
0x400027a	      0xe800000000	                          call 0x400027f	        98	archive64.c	FUNCTION_1	CALL_15
0x400027f	          0x4889c2	                            mov rdx, rax	        98	archive64.c	FUNCTION_1	CALL_15
0x4000282	        0x488b4580	             mov rax, qword [rbp - 0x80]	        98	archive64.c	FUNCTION_1	CALL_15
0x4000286	        0x48895018	             mov qword [rax + 0x18], rdx	        98	archive64.c	FUNCTION_1	CALL_15
0x400028a	        0x488b4580	             mov rax, qword [rbp - 0x80]	        99	archive64.c	FUNCTION_1	IF_10
0x400028e	        0x488b4018	            mov rax, qword [rax + 0x18] 	        99	archive64.c	FUNCTION_1	IF_10
0x4000292	          0x4885c0	                           test rax, rax	        99	archive64.c	FUNCTION_1	IF_10
0x4000295	            0x750a	                           jne 0x40002a1	        99	archive64.c	FUNCTION_1	IF_10
0x4000297	      0xb800000000	                              mov eax, 0	       100	archive64.c	FUNCTION_1	IF_10
0x400029c	      0xe91d020000	                           jmp 0x40004be	       100	archive64.c	FUNCTION_1	IF_10
0x40002a1	        0x488b4580	             mov rax, qword [rbp - 0x80]	       101	archive64.c	FUNCTION_1
0x40002a5	        0x488b4018	            mov rax, qword [rax + 0x18] 	       101	archive64.c	FUNCTION_1
0x40002a9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       101	archive64.c	FUNCTION_1
0x40002b0	        0x488b4580	             mov rax, qword [rbp - 0x80]	       102	archive64.c	FUNCTION_1
0x40002b4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       102	archive64.c	FUNCTION_1
0x40002b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       102	archive64.c	FUNCTION_1
0x40002bc	          0x4801d0	                            add rax, rdx	       102	archive64.c	FUNCTION_1
0x40002bf	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       102	archive64.c	FUNCTION_1
0x40002c6	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       103	archive64.c	FUNCTION_1
0x40002cd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       103	archive64.c	FUNCTION_1
0x40002d1	          0x4801d0	                            add rax, rdx	       103	archive64.c	FUNCTION_1
0x40002d4	          0xc60000	                       mov byte [rax], 0	       103	archive64.c	FUNCTION_1
0x40002d7	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       104	archive64.c	FUNCTION_1
0x40002de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       104	archive64.c	FUNCTION_1
0x40002e2	          0x4801d0	                            add rax, rdx	       104	archive64.c	FUNCTION_1
0x40002e5	        0x488945c8	             mov qword [rbp - 0x38], rax	       104	archive64.c	FUNCTION_1
0x40002e9	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       106	archive64.c	FUNCTION_1	CALL_16
0x40002ed	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       106	archive64.c	FUNCTION_1	CALL_16
0x40002f4	          0x4889d6	                            mov rsi, rdx	       106	archive64.c	FUNCTION_1	CALL_16
0x40002f7	          0x4889c7	                            mov rdi, rax	       106	archive64.c	FUNCTION_1	CALL_16
0x40002fa	      0xe800000000	                          call 0x40002ff	       106	archive64.c	FUNCTION_1	CALL_16
0x40002ff	        0x48894588	             mov qword [rbp - 0x78], rax	       106	archive64.c	FUNCTION_1	CALL_16
0x4000303	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       107	archive64.c	FUNCTION_1	IF_11
0x4000308	     0xf8490010000	                            je 0x400049e	       107	archive64.c	FUNCTION_1	IF_11
0x400030e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000315	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000319	        0x488b4588	             mov rax, qword [rbp - 0x78]	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x400031d	          0x4889ce	                            mov rsi, rcx	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000320	          0x4889c7	                            mov rdi, rax	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000323	      0xe800000000	                          call 0x4000328	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000328	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x400032c	            0x7523	                           jne 0x4000351	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x400032e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000335	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000339	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000340	          0x4889ce	                            mov rsi, rcx	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000343	          0x4889c7	                            mov rdi, rax	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000346	      0xe800000000	                          call 0x400034b	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x400034b	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x400034f	            0x741d	                            je 0x400036e	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000351	      0xe800000000	                          call 0x4000356	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x4000356	          0x83f801	                              cmp eax, 1	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x4000359	     0xf8426010000	                            je 0x4000485	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x400035f	      0xbf0a000000	                            mov edi, 0xa	       114	archive64.c	FUNCTION_1	IF_12	CALL_20
0x4000364	      0xe800000000	                          call 0x4000369	       114	archive64.c	FUNCTION_1	IF_12	CALL_20
0x4000369	      0xe917010000	                           jmp 0x4000485	       115	archive64.c	FUNCTION_1	IF_12
0x400036e	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       118	archive64.c	FUNCTION_1	FOR_1
0x4000379	            0xeb74	                           jmp 0x40003ef	       118	archive64.c	FUNCTION_1	FOR_1
0x400037b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000382	    0x488d14c50000	                        lea rdx, [rax*8]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x400038a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x400038e	          0x4801d0	                            add rax, rdx	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000391	          0x4889c7	                            mov rdi, rax	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000394	      0xe800000000	                          call 0x4000399	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000399	          0x4889c2	                            mov rdx, rax	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x400039c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x40003a3	        0x48895008	                mov qword [rax + 8], rdx	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x40003a7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       121	archive64.c	FUNCTION_1	FOR_1
0x40003ae	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       121	archive64.c	FUNCTION_1	FOR_1
0x40003b5	          0x488910	                    mov qword [rax], rdx	       121	archive64.c	FUNCTION_1	FOR_1
0x40003b8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       122	archive64.c	FUNCTION_1	FOR_1	IF_14
0x40003bf	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       122	archive64.c	FUNCTION_1	FOR_1	IF_14
0x40003c3	            0x731a	                           jae 0x40003df	       122	archive64.c	FUNCTION_1	FOR_1	IF_14
0x40003c5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40003cc	          0x4889c7	                            mov rdi, rax	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40003cf	      0xe800000000	                          call 0x40003d4	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40003d4	        0x4883c001	                              add rax, 1	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40003d8	    0x48018570ffff	            add qword [rbp - 0x90], rax 	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40003df	    0x48838578ffff	            add qword [rbp - 0x88], 0x10	       124	archive64.c	FUNCTION_1	FOR_1
0x40003e7	    0x48838568ffff	               add qword [rbp - 0x98], 1	       118	archive64.c	FUNCTION_1	FOR_1
0x40003ef	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       118	archive64.c	FUNCTION_1	FOR_1
0x40003f6	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       118	archive64.c	FUNCTION_1	FOR_1
0x40003fa	     0xf827bffffff	                            jb 0x400037b	       118	archive64.c	FUNCTION_1	FOR_1
0x4000400	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       126	archive64.c	FUNCTION_1
0x4000407	          0xc60000	                       mov byte [rax], 0	       126	archive64.c	FUNCTION_1
0x400040a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       128	archive64.c	FUNCTION_1
0x400040e	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       128	archive64.c	FUNCTION_1
0x4000412	        0x48895020	             mov qword [rax + 0x20], rdx	       128	archive64.c	FUNCTION_1
0x4000416	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       129	archive64.c	FUNCTION_1	CALL_23
0x400041d	          0x4889c7	                            mov rdi, rax	       129	archive64.c	FUNCTION_1	CALL_23
0x4000420	      0xe800000000	                          call 0x4000425	       129	archive64.c	FUNCTION_1	CALL_23
0x4000425	          0x4889c2	                            mov rdx, rax	       129	archive64.c	FUNCTION_1	CALL_23
0x4000428	        0x488b4580	             mov rax, qword [rbp - 0x80]	       129	archive64.c	FUNCTION_1	CALL_23
0x400042c	          0x488910	                    mov qword [rax], rdx	       129	archive64.c	FUNCTION_1	CALL_23
0x400042f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       131	archive64.c	FUNCTION_1
0x4000433	          0x488b08	                    mov rcx, qword [rax]	       131	archive64.c	FUNCTION_1
0x4000436	        0x488b4580	             mov rax, qword [rbp - 0x80]	       131	archive64.c	FUNCTION_1
0x400043a	          0x488b00	                    mov rax, qword [rax]	       131	archive64.c	FUNCTION_1
0x400043d	            0x4899	                                     cqo	       131	archive64.c	FUNCTION_1
0x400043f	        0x48c1ea3f	                           shr rdx, 0x3f	       131	archive64.c	FUNCTION_1
0x4000443	          0x4801d0	                            add rax, rdx	       131	archive64.c	FUNCTION_1
0x4000446	          0x83e001	                              and eax, 1	       131	archive64.c	FUNCTION_1
0x4000449	          0x4829d0	                            sub rax, rdx	       131	archive64.c	FUNCTION_1
0x400044c	        0x488d1401	                    lea rdx, [rcx + rax]	       131	archive64.c	FUNCTION_1
0x4000450	        0x488b4580	             mov rax, qword [rbp - 0x80]	       131	archive64.c	FUNCTION_1
0x4000454	          0x488910	                    mov qword [rax], rdx	       131	archive64.c	FUNCTION_1
0x4000457	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       133	archive64.c	FUNCTION_1	CALL_24
0x400045e	         0xfb65047	           movzx edx, byte [rax + 0x47] 	       133	archive64.c	FUNCTION_1	CALL_24
0x4000462	          0x83ca80	                      or edx, 0xffffff80	       133	archive64.c	FUNCTION_1	CALL_24
0x4000465	          0x885047	               mov byte [rax + 0x47], dl	       133	archive64.c	FUNCTION_1	CALL_24
0x4000468	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       134	archive64.c	FUNCTION_1	CALL_25
0x400046c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       134	archive64.c	FUNCTION_1	CALL_25
0x4000473	          0x4889d6	                            mov rsi, rdx	       134	archive64.c	FUNCTION_1	CALL_25
0x4000476	          0x4889c7	                            mov rdi, rax	       134	archive64.c	FUNCTION_1	CALL_25
0x4000479	      0xe800000000	                          call 0x400047e	       134	archive64.c	FUNCTION_1	CALL_25
0x400047e	      0xb801000000	                              mov eax, 1	       136	archive64.c	FUNCTION_1
0x4000483	            0xeb39	                           jmp 0x40004be	       136	archive64.c	FUNCTION_1
0x4000485	              0x90	                                     nop	       115	archive64.c	FUNCTION_1	IF_12
0x4000486	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       139	archive64.c	FUNCTION_1	CALL_26
0x400048a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       139	archive64.c	FUNCTION_1	CALL_26
0x4000491	          0x4889d6	                            mov rsi, rdx	       139	archive64.c	FUNCTION_1	CALL_26
0x4000494	          0x4889c7	                            mov rdi, rax	       139	archive64.c	FUNCTION_1	CALL_26
0x4000497	      0xe800000000	                          call 0x400049c	       139	archive64.c	FUNCTION_1	CALL_26
0x400049c	            0xeb01	                           jmp 0x400049f	       139	archive64.c	FUNCTION_1	CALL_26
0x400049e	              0x90	                                     nop	       108	archive64.c	FUNCTION_1	IF_11
0x400049f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       141	archive64.c	FUNCTION_1	CALL_27
0x40004a3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       141	archive64.c	FUNCTION_1	CALL_27
0x40004a7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       141	archive64.c	FUNCTION_1	CALL_27
0x40004ae	          0x4889d6	                            mov rsi, rdx	       141	archive64.c	FUNCTION_1	CALL_27
0x40004b1	          0x4889c7	                            mov rdi, rax	       141	archive64.c	FUNCTION_1	CALL_27
0x40004b4	      0xe800000000	                          call 0x40004b9	       141	archive64.c	FUNCTION_1	CALL_27
0x40004b9	      0xb800000000	                              mov eax, 0	       142	archive64.c	FUNCTION_1
0x40004be	        0x488b4df8	                mov rcx, qword [rbp - 8]	       143	archive64.c	FUNCTION_1
0x40004c2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       143	archive64.c	FUNCTION_1
0x40004cb	            0x7405	                            je 0x40004d2	       143	archive64.c	FUNCTION_1
0x40004cd	      0xe800000000	                          call 0x40004d2	       143	archive64.c	FUNCTION_1
0x40004d2	              0xc9	                                   leave	       143	archive64.c	FUNCTION_1
0x40004d3	              0xc3	                                     ret	       143	archive64.c	FUNCTION_1
_bfd_archive_64_bit_write_armap	IF,7:SWITCH,0:CALL,21:FOR,3:WHILE,1:ELSE,0:DO,0:functions,0	242
0x40004d4	              0x55	                                push rbp	       155	archive64.c	FUNCTION_2
0x40004d5	          0x4889e5	                            mov rbp, rsp	       155	archive64.c	FUNCTION_2
0x40004d8	    0x4881eca00000	                           sub rsp, 0xa0	       155	archive64.c	FUNCTION_2
0x40004df	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       155	archive64.c	FUNCTION_2
0x40004e6	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	       155	archive64.c	FUNCTION_2
0x40004ec	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       155	archive64.c	FUNCTION_2
0x40004f3	    0x898d70ffffff	             mov dword [rbp - 0x90], ecx	       155	archive64.c	FUNCTION_2
0x40004f9	    0x44898564ffff	             mov dword [rbp - 0x9c], r8d	       155	archive64.c	FUNCTION_2
0x4000500	    0x64488b042528	                mov rax, qword fs:[0x28]	       155	archive64.c	FUNCTION_2
0x4000509	        0x488945f8	                mov qword [rbp - 8], rax	       155	archive64.c	FUNCTION_2
0x400050d	            0x31c0	                            xor eax, eax	       155	archive64.c	FUNCTION_2
0x400050f	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	       156	archive64.c	FUNCTION_2
0x4000515	          0x83c001	                              add eax, 1	       156	archive64.c	FUNCTION_2
0x4000518	          0xc1e003	                              shl eax, 3	       156	archive64.c	FUNCTION_2
0x400051b	          0x89458c	             mov dword [rbp - 0x74], eax	       156	archive64.c	FUNCTION_2
0x400051e	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       157	archive64.c	FUNCTION_2
0x4000524	          0x894590	             mov dword [rbp - 0x70], eax	       157	archive64.c	FUNCTION_2
0x4000527	          0x8b5590	             mov edx, dword [rbp - 0x70]	       158	archive64.c	FUNCTION_2
0x400052a	          0x8b458c	             mov eax, dword [rbp - 0x74]	       158	archive64.c	FUNCTION_2
0x400052d	             0x1d0	                            add eax, edx	       158	archive64.c	FUNCTION_2
0x400052f	          0x894594	             mov dword [rbp - 0x6c], eax	       158	archive64.c	FUNCTION_2
0x4000532	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       160	archive64.c	FUNCTION_2
0x4000539	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       160	archive64.c	FUNCTION_2
0x4000540	        0x488945a0	             mov qword [rbp - 0x60], rax	       160	archive64.c	FUNCTION_2
0x4000544	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       166	archive64.c	FUNCTION_2	CALL_1
0x4000547	        0x488d5007	                      lea rdx, [rax + 7]	       166	archive64.c	FUNCTION_2	CALL_1
0x400054b	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       166	archive64.c	FUNCTION_2	CALL_1
0x400054e	          0x4839c2	                            cmp rdx, rax	       166	archive64.c	FUNCTION_2	CALL_1
0x4000551	            0x720b	                            jb 0x400055e	       166	archive64.c	FUNCTION_2	CALL_1
0x4000553	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       166	archive64.c	FUNCTION_2	CALL_1
0x4000556	          0x83c007	                              add eax, 7	       166	archive64.c	FUNCTION_2	CALL_1
0x4000559	          0x83e0f8	                     and eax, 0xfffffff8	       166	archive64.c	FUNCTION_2	CALL_1
0x400055c	            0xeb05	                           jmp 0x4000563	       166	archive64.c	FUNCTION_2	CALL_1
0x400055e	      0xb8ffffffff	                     mov eax, 0xffffffff	       166	archive64.c	FUNCTION_2	CALL_1
0x4000563	          0x2b4594	             sub eax, dword [rbp - 0x6c]	       166	archive64.c	FUNCTION_2	CALL_1
0x4000566	          0x894588	             mov dword [rbp - 0x78], eax	       166	archive64.c	FUNCTION_2	CALL_1
0x4000569	          0x8b4588	             mov eax, dword [rbp - 0x78]	       167	archive64.c	FUNCTION_2
0x400056c	           0x14594	             add dword [rbp - 0x6c], eax	       167	archive64.c	FUNCTION_2
0x400056f	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       171	archive64.c	FUNCTION_2
0x4000572	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       171	archive64.c	FUNCTION_2
0x4000578	             0x1d0	                            add eax, edx	       171	archive64.c	FUNCTION_2
0x400057a	            0x89c0	                            mov eax, eax	       173	archive64.c	FUNCTION_2
0x400057c	        0x4883c044	                           add rax, 0x44	       173	archive64.c	FUNCTION_2
0x4000580	        0x48894598	             mov qword [rbp - 0x68], rax	       170	archive64.c	FUNCTION_2
0x4000584	        0x488d45b0	                   lea rax, [rbp - 0x50]	       175	archive64.c	FUNCTION_2	CALL_2
0x4000588	      0xba3c000000	                           mov edx, 0x3c	       175	archive64.c	FUNCTION_2	CALL_2
0x400058d	      0xbe20000000	                           mov esi, 0x20	       175	archive64.c	FUNCTION_2	CALL_2
0x4000592	          0x4889c7	                            mov rdi, rax	       175	archive64.c	FUNCTION_2	CALL_2
0x4000595	      0xe800000000	                          call 0x400059a	       175	archive64.c	FUNCTION_2	CALL_2
0x400059a	        0x488d45b0	                   lea rax, [rbp - 0x50]	       176	archive64.c	FUNCTION_2	CALL_4
0x400059e	      0xba07000000	                              mov edx, 7	       176	archive64.c	FUNCTION_2	CALL_4
0x40005a3	      0xbe00000000	                              mov esi, 0	       176	archive64.c	FUNCTION_2	CALL_4
0x40005a8	          0x4889c7	                            mov rdi, rax	       176	archive64.c	FUNCTION_2	CALL_4
0x40005ab	      0xe800000000	                          call 0x40005b0	       176	archive64.c	FUNCTION_2	CALL_4
0x40005b0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005b3	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005b7	        0x488d4a30	                   lea rcx, [rdx + 0x30]	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005bb	          0x4889c2	                            mov rdx, rax	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005be	      0xbe0a000000	                            mov esi, 0xa	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005c3	          0x4889cf	                            mov rdi, rcx	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005c6	      0xe800000000	                          call 0x40005cb	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005cb	            0x85c0	                           test eax, eax	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005cd	            0x750a	                           jne 0x40005d9	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40005cf	      0xb800000000	                              mov eax, 0	       178	archive64.c	FUNCTION_2	IF_1
0x40005d4	      0xe9c1020000	                           jmp 0x400089a	       178	archive64.c	FUNCTION_2	IF_1
0x40005d9	      0xbf00000000	                              mov edi, 0	       179	archive64.c	FUNCTION_2	CALL_6
0x40005de	      0xe800000000	                          call 0x40005e3	       179	archive64.c	FUNCTION_2	CALL_6
0x40005e3	          0x4889c2	                            mov rdx, rax	       179	archive64.c	FUNCTION_2	CALL_6
0x40005e6	        0x488d45b0	                   lea rax, [rbp - 0x50]	       179	archive64.c	FUNCTION_2	CALL_6
0x40005ea	        0x4883c010	                           add rax, 0x10	       179	archive64.c	FUNCTION_2	CALL_6
0x40005ee	          0x4889d1	                            mov rcx, rdx	       179	archive64.c	FUNCTION_2	CALL_6
0x40005f1	      0xba00000000	                              mov edx, 0	       179	archive64.c	FUNCTION_2	CALL_6
0x40005f6	      0xbe0c000000	                            mov esi, 0xc	       179	archive64.c	FUNCTION_2	CALL_6
0x40005fb	          0x4889c7	                            mov rdi, rax	       179	archive64.c	FUNCTION_2	CALL_6
0x40005fe	      0xe800000000	                          call 0x4000603	       179	archive64.c	FUNCTION_2	CALL_6
0x4000603	        0x488d45b0	                   lea rax, [rbp - 0x50]	       182	archive64.c	FUNCTION_2	CALL_8
0x4000607	        0x4883c01c	                           add rax, 0x1c	       182	archive64.c	FUNCTION_2	CALL_8
0x400060b	      0xb900000000	                              mov ecx, 0	       182	archive64.c	FUNCTION_2	CALL_8
0x4000610	      0xba00000000	                              mov edx, 0	       182	archive64.c	FUNCTION_2	CALL_8
0x4000615	      0xbe06000000	                              mov esi, 6	       182	archive64.c	FUNCTION_2	CALL_8
0x400061a	          0x4889c7	                            mov rdi, rax	       182	archive64.c	FUNCTION_2	CALL_8
0x400061d	      0xe800000000	                          call 0x4000622	       182	archive64.c	FUNCTION_2	CALL_8
0x4000622	        0x488d45b0	                   lea rax, [rbp - 0x50]	       183	archive64.c	FUNCTION_2	CALL_9
0x4000626	        0x4883c022	                           add rax, 0x22	       183	archive64.c	FUNCTION_2	CALL_9
0x400062a	      0xb900000000	                              mov ecx, 0	       183	archive64.c	FUNCTION_2	CALL_9
0x400062f	      0xba00000000	                              mov edx, 0	       183	archive64.c	FUNCTION_2	CALL_9
0x4000634	      0xbe06000000	                              mov esi, 6	       183	archive64.c	FUNCTION_2	CALL_9
0x4000639	          0x4889c7	                            mov rdi, rax	       183	archive64.c	FUNCTION_2	CALL_9
0x400063c	      0xe800000000	                          call 0x4000641	       183	archive64.c	FUNCTION_2	CALL_9
0x4000641	        0x488d45b0	                   lea rax, [rbp - 0x50]	       184	archive64.c	FUNCTION_2	CALL_10
0x4000645	        0x4883c028	                           add rax, 0x28	       184	archive64.c	FUNCTION_2	CALL_10
0x4000649	      0xb900000000	                              mov ecx, 0	       184	archive64.c	FUNCTION_2	CALL_10
0x400064e	      0xba00000000	                              mov edx, 0	       184	archive64.c	FUNCTION_2	CALL_10
0x4000653	      0xbe08000000	                              mov esi, 8	       184	archive64.c	FUNCTION_2	CALL_10
0x4000658	          0x4889c7	                            mov rdi, rax	       184	archive64.c	FUNCTION_2	CALL_10
0x400065b	      0xe800000000	                          call 0x4000660	       184	archive64.c	FUNCTION_2	CALL_10
0x4000660	    0x66c745ea600a	           mov word [rbp - 0x16], 0xa60 	       185	archive64.c	FUNCTION_2	CALL_11
0x4000666	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400066d	        0x488d45b0	                   lea rax, [rbp - 0x50]	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000671	      0xbe3c000000	                           mov esi, 0x3c	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000676	          0x4889c7	                            mov rdi, rax	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000679	      0xe800000000	                          call 0x400067e	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400067e	        0x4883f83c	                           cmp rax, 0x3c	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000682	            0x740a	                            je 0x400068e	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000684	      0xb800000000	                              mov eax, 0	       191	archive64.c	FUNCTION_2	IF_2
0x4000689	      0xe90c020000	                           jmp 0x400089a	       191	archive64.c	FUNCTION_2	IF_2
0x400068e	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	       193	archive64.c	FUNCTION_2	CALL_13
0x4000694	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       193	archive64.c	FUNCTION_2	CALL_13
0x4000698	          0x4889d6	                            mov rsi, rdx	       193	archive64.c	FUNCTION_2	CALL_13
0x400069b	          0x4889c7	                            mov rdi, rax	       193	archive64.c	FUNCTION_2	CALL_13
0x400069e	      0xe800000000	                          call 0x40006a3	       193	archive64.c	FUNCTION_2	CALL_13
0x40006a3	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x40006aa	        0x488d45f0	                   lea rax, [rbp - 0x10]	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x40006ae	      0xbe08000000	                              mov esi, 8	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x40006b3	          0x4889c7	                            mov rdi, rax	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x40006b6	      0xe800000000	                          call 0x40006bb	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x40006bb	        0x4883f808	                              cmp rax, 8	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x40006bf	            0x740a	                            je 0x40006cb	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x40006c1	      0xb800000000	                              mov eax, 0	       195	archive64.c	FUNCTION_2	IF_3
0x40006c6	      0xe9cf010000	                           jmp 0x400089a	       195	archive64.c	FUNCTION_2	IF_3
0x40006cb	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       202	archive64.c	FUNCTION_2
0x40006d2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       203	archive64.c	FUNCTION_2	FOR_1
0x40006d9	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       203	archive64.c	FUNCTION_2	FOR_1
0x40006e0	        0x488945a0	             mov qword [rbp - 0x60], rax	       203	archive64.c	FUNCTION_2	FOR_1
0x40006e4	      0xe9cf000000	                           jmp 0x40007b8	       203	archive64.c	FUNCTION_2	FOR_1
0x40006e9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40006ed	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40006f1	          0x4889d6	                            mov rsi, rdx	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40006f4	          0x4889c7	                            mov rdi, rax	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40006f7	      0xe800000000	                          call 0x40006fc	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40006fc	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000703	        0x488d45f0	                   lea rax, [rbp - 0x10]	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000707	      0xbe08000000	                              mov esi, 8	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x400070c	          0x4889c7	                            mov rdi, rax	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x400070f	      0xe800000000	                          call 0x4000714	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000714	        0x4883f808	                              cmp rax, 8	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000718	            0x740a	                            je 0x4000724	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x400071a	      0xb800000000	                              mov eax, 0	       216	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4
0x400071f	      0xe976010000	                           jmp 0x400089a	       216	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4
0x4000724	        0x83458401	               add dword [rbp - 0x7c], 1	       212	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000728	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400072b	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000731	            0x7327	                           jae 0x400075a	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000733	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000736	          0x4889d0	                            mov rax, rdx	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000739	          0x4801c0	                            add rax, rax	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400073c	          0x4801d0	                            add rax, rdx	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400073f	        0x48c1e003	                              shl rax, 3	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000743	          0x4889c2	                            mov rdx, rax	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000746	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400074d	          0x4801d0	                            add rax, rdx	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000750	        0x488b4008	                mov rax, qword [rax + 8]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000754	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000758	            0x748f	                            je 0x40006e9	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400075a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       220	archive64.c	FUNCTION_2	FOR_1
0x400075e	        0x4883c03c	                           add rax, 0x3c	       220	archive64.c	FUNCTION_2	FOR_1
0x4000762	        0x48894598	             mov qword [rbp - 0x68], rax	       220	archive64.c	FUNCTION_2	FOR_1
0x4000766	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x400076d	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x4000771	          0x83e001	                              and eax, 1	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x4000774	            0x84c0	                             test al, al	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x4000776	            0x751a	                           jne 0x4000792	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x4000778	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x400077c	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x4000783	        0x488b5008	                mov rdx, qword [rax + 8]	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x4000787	        0x488b4598	             mov rax, qword [rbp - 0x68]	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x400078b	          0x4801d0	                            add rax, rdx	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x400078e	        0x48894598	             mov qword [rbp - 0x68], rax	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x4000792	        0x488b4598	             mov rax, qword [rbp - 0x68]	       224	archive64.c	FUNCTION_2	FOR_1
0x4000796	            0x4899	                                     cqo	       224	archive64.c	FUNCTION_2	FOR_1
0x4000798	        0x48c1ea3f	                           shr rdx, 0x3f	       224	archive64.c	FUNCTION_2	FOR_1
0x400079c	          0x4801d0	                            add rax, rdx	       224	archive64.c	FUNCTION_2	FOR_1
0x400079f	          0x83e001	                              and eax, 1	       224	archive64.c	FUNCTION_2	FOR_1
0x40007a2	          0x4829d0	                            sub rax, rdx	       224	archive64.c	FUNCTION_2	FOR_1
0x40007a5	        0x48014598	            add qword [rbp - 0x68], rax 	       224	archive64.c	FUNCTION_2	FOR_1
0x40007a9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       205	archive64.c	FUNCTION_2	FOR_1
0x40007ad	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       205	archive64.c	FUNCTION_2	FOR_1
0x40007b4	        0x488945a0	             mov qword [rbp - 0x60], rax	       205	archive64.c	FUNCTION_2	FOR_1
0x40007b8	      0x48837da000	               cmp qword [rbp - 0x60], 0	       203	archive64.c	FUNCTION_2	FOR_1
0x40007bd	            0x740f	                            je 0x40007ce	       203	archive64.c	FUNCTION_2	FOR_1
0x40007bf	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       204	archive64.c	FUNCTION_2	FOR_1
0x40007c2	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	       204	archive64.c	FUNCTION_2	FOR_1
0x40007c8	     0xf825affffff	                            jb 0x4000728	       204	archive64.c	FUNCTION_2	FOR_1
0x40007ce	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       228	archive64.c	FUNCTION_2	FOR_3
0x40007d5	            0xeb7d	                           jmp 0x4000854	       228	archive64.c	FUNCTION_2	FOR_3
0x40007d7	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007da	          0x4889d0	                            mov rax, rdx	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007dd	          0x4801c0	                            add rax, rax	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007e0	          0x4801d0	                            add rax, rdx	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007e3	        0x48c1e003	                              shl rax, 3	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007e7	          0x4889c2	                            mov rdx, rax	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007ea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007f1	          0x4801d0	                            add rax, rdx	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007f4	          0x488b00	                    mov rax, qword [rax]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007f7	          0x488b00	                    mov rax, qword [rax]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007fa	          0x4889c7	                            mov rdi, rax	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40007fd	      0xe800000000	                          call 0x4000802	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x4000802	        0x4883c001	                              add rax, 1	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x4000806	        0x488945a8	             mov qword [rbp - 0x58], rax	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x400080a	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400080d	          0x4889d0	                            mov rax, rdx	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000810	          0x4801c0	                            add rax, rax	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000813	          0x4801d0	                            add rax, rdx	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000816	        0x48c1e003	                              shl rax, 3	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400081a	          0x4889c2	                            mov rdx, rax	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400081d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000824	          0x4801d0	                            add rax, rdx	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000827	          0x488b00	                    mov rax, qword [rax]	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400082a	          0x488b00	                    mov rax, qword [rax]	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400082d	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000834	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000838	          0x4889ce	                            mov rsi, rcx	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400083b	          0x4889c7	                            mov rdi, rax	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400083e	      0xe800000000	                          call 0x4000843	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000843	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000847	            0x7407	                            je 0x4000850	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000849	      0xb800000000	                              mov eax, 0	       233	archive64.c	FUNCTION_2	FOR_3	IF_6
0x400084e	            0xeb4a	                           jmp 0x400089a	       233	archive64.c	FUNCTION_2	FOR_3	IF_6
0x4000850	        0x83458401	               add dword [rbp - 0x7c], 1	       228	archive64.c	FUNCTION_2	FOR_3
0x4000854	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       228	archive64.c	FUNCTION_2	FOR_3
0x4000857	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	       228	archive64.c	FUNCTION_2	FOR_3
0x400085d	     0xf8274ffffff	                            jb 0x40007d7	       228	archive64.c	FUNCTION_2	FOR_3
0x4000863	            0xeb2a	                           jmp 0x400088f	       238	archive64.c	FUNCTION_2	WHILE_1
0x4000865	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x400086c	          0x4889c2	                            mov rdx, rax	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x400086f	      0xbe01000000	                              mov esi, 1	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x4000874	      0xbf00000000	                              mov edi, 0	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x4000879	      0xe800000000	                          call 0x400087e	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x400087e	        0x4883f801	                              cmp rax, 1	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x4000882	            0x7407	                            je 0x400088b	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x4000884	      0xb800000000	                              mov eax, 0	       241	archive64.c	FUNCTION_2	WHILE_1	IF_7
0x4000889	            0xeb0f	                           jmp 0x400089a	       241	archive64.c	FUNCTION_2	WHILE_1	IF_7
0x400088b	        0x836d8801	               sub dword [rbp - 0x78], 1	       242	archive64.c	FUNCTION_2	WHILE_1
0x400088f	        0x837d8800	               cmp dword [rbp - 0x78], 0	       238	archive64.c	FUNCTION_2	WHILE_1
0x4000893	            0x75d0	                           jne 0x4000865	       238	archive64.c	FUNCTION_2	WHILE_1
0x4000895	      0xb801000000	                              mov eax, 1	       245	archive64.c	FUNCTION_2
0x400089a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       246	archive64.c	FUNCTION_2
0x400089e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       246	archive64.c	FUNCTION_2
0x40008a7	            0x7405	                            je 0x40008ae	       246	archive64.c	FUNCTION_2
0x40008a9	      0xe800000000	                          call 0x40008ae	       246	archive64.c	FUNCTION_2
0x40008ae	              0xc9	                                   leave	       246	archive64.c	FUNCTION_2
0x40008af	              0xc3	                                     ret	       246	archive64.c	FUNCTION_2
