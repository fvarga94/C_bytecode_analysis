perror_memory	ELSE,1:SWITCH,0:IF,1:DO,0:functions,0:CALL,5:FOR,0:WHILE,0	54
0x4000165	              0x55	                                push rbp	        58	dis-buf.c	FUNCTION_2
0x4000166	          0x4889e5	                            mov rbp, rsp	        58	dis-buf.c	FUNCTION_2
0x4000169	              0x53	                                push rbx	        58	dis-buf.c	FUNCTION_2
0x400016a	        0x4883ec58	                           sub rsp, 0x58	        58	dis-buf.c	FUNCTION_2
0x400016e	          0x897dbc	             mov dword [rbp - 0x44], edi	        58	dis-buf.c	FUNCTION_2
0x4000171	        0x488975b0	             mov qword [rbp - 0x50], rsi	        58	dis-buf.c	FUNCTION_2
0x4000175	        0x488955a8	             mov qword [rbp - 0x58], rdx	        58	dis-buf.c	FUNCTION_2
0x4000179	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	dis-buf.c	FUNCTION_2
0x4000182	        0x488945e8	             mov qword [rbp - 0x18], rax	        58	dis-buf.c	FUNCTION_2
0x4000186	            0x31c0	                            xor eax, eax	        58	dis-buf.c	FUNCTION_2
0x4000188	        0x837dbc05	               cmp dword [rbp - 0x44], 5	        59	dis-buf.c	FUNCTION_2	IF_1
0x400018c	            0x7433	                            je 0x40001c1	        59	dis-buf.c	FUNCTION_2	IF_1
0x400018e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000192	          0x488b18	                    mov rbx, qword [rax]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000195	      0xbe00000000	                              mov esi, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x400019a	      0xbf00000000	                              mov edi, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x400019f	      0xe800000000	                          call 0x40001a4	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001a4	          0x4889c1	                            mov rcx, rax	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001a7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001ab	        0x488b4008	                mov rax, qword [rax + 8]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001af	          0x8b55bc	             mov edx, dword [rbp - 0x44]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001b2	          0x4889ce	                            mov rsi, rcx	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001b5	          0x4889c7	                            mov rdi, rax	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001b8	      0xb800000000	                              mov eax, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001bd	            0xffd3	                                call rbx	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40001bf	            0xeb4c	                           jmp 0x400020d	        72	dis-buf.c	FUNCTION_2
0x40001c1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	        68	dis-buf.c	FUNCTION_2	ELSE_1	CALL_3
0x40001c5	        0x488d45c0	                   lea rax, [rbp - 0x40]	        68	dis-buf.c	FUNCTION_2	ELSE_1	CALL_3
0x40001c9	      0xbe00000000	                              mov esi, 0	        68	dis-buf.c	FUNCTION_2	ELSE_1	CALL_3
0x40001ce	          0x4889c7	                            mov rdi, rax	        68	dis-buf.c	FUNCTION_2	ELSE_1	CALL_3
0x40001d1	      0xb800000000	                              mov eax, 0	        68	dis-buf.c	FUNCTION_2	ELSE_1	CALL_3
0x40001d6	      0xe800000000	                          call 0x40001db	        68	dis-buf.c	FUNCTION_2	ELSE_1	CALL_3
0x40001db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x40001df	          0x488b18	                    mov rbx, qword [rax]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x40001e2	      0xbe00000000	                              mov esi, 0	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x40001e7	      0xbf00000000	                              mov edi, 0	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x40001ec	      0xe800000000	                          call 0x40001f1	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x40001f1	          0x4889c1	                            mov rcx, rax	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x40001f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x40001f8	        0x488b4008	                mov rax, qword [rax + 8]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x40001fc	        0x488d55c0	                   lea rdx, [rbp - 0x40]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000200	          0x4889ce	                            mov rsi, rcx	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000203	          0x4889c7	                            mov rdi, rax	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000206	      0xb800000000	                              mov eax, 0	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400020b	            0xffd3	                                call rbx	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400020d	              0x90	                                     nop	        72	dis-buf.c	FUNCTION_2
0x400020e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	dis-buf.c	FUNCTION_2
0x4000212	    0x644833042528	                xor rax, qword fs:[0x28]	        72	dis-buf.c	FUNCTION_2
0x400021b	            0x7405	                            je 0x4000222	        72	dis-buf.c	FUNCTION_2
0x400021d	      0xe800000000	                          call 0x4000222	        72	dis-buf.c	FUNCTION_2
0x4000222	        0x4883c458	                           add rsp, 0x58	        72	dis-buf.c	FUNCTION_2
0x4000226	              0x5b	                                 pop rbx	        72	dis-buf.c	FUNCTION_2
0x4000227	              0x5d	                                 pop rbp	        72	dis-buf.c	FUNCTION_2
0x4000228	              0xc3	                                     ret	        72	dis-buf.c	FUNCTION_2
generic_symbol_at_address	ELSE,0:SWITCH,0:IF,0:DO,0:functions,0:CALL,0:FOR,0:WHILE,0	7
0x400029b	              0x55	                                push rbp	        95	dis-buf.c	FUNCTION_4
0x400029c	          0x4889e5	                            mov rbp, rsp	        95	dis-buf.c	FUNCTION_4
0x400029f	        0x48897df8	                mov qword [rbp - 8], rdi	        95	dis-buf.c	FUNCTION_4
0x40002a3	        0x488975f0	             mov qword [rbp - 0x10], rsi	        95	dis-buf.c	FUNCTION_4
0x40002a7	      0xb801000000	                              mov eax, 1	        96	dis-buf.c	FUNCTION_4
0x40002ac	              0x5d	                                 pop rbp	        97	dis-buf.c	FUNCTION_4
0x40002ad	              0xc3	                                     ret	        97	dis-buf.c	FUNCTION_4
generic_print_address	ELSE,0:SWITCH,0:IF,0:DO,0:functions,0:CALL,1:FOR,0:WHILE,0	30
0x4000229	              0x55	                                push rbp	        83	dis-buf.c	FUNCTION_3
0x400022a	          0x4889e5	                            mov rbp, rsp	        83	dis-buf.c	FUNCTION_3
0x400022d	        0x4883ec40	                           sub rsp, 0x40	        83	dis-buf.c	FUNCTION_3
0x4000231	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        83	dis-buf.c	FUNCTION_3
0x4000235	        0x488975c0	             mov qword [rbp - 0x40], rsi	        83	dis-buf.c	FUNCTION_3
0x4000239	    0x64488b042528	                mov rax, qword fs:[0x28]	        83	dis-buf.c	FUNCTION_3
0x4000242	        0x488945f8	                mov qword [rbp - 8], rax	        83	dis-buf.c	FUNCTION_3
0x4000246	            0x31c0	                            xor eax, eax	        83	dis-buf.c	FUNCTION_3
0x4000248	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        86	dis-buf.c	FUNCTION_3	CALL_1
0x400024c	        0x488d45d0	                   lea rax, [rbp - 0x30]	        86	dis-buf.c	FUNCTION_3	CALL_1
0x4000250	      0xbe00000000	                              mov esi, 0	        86	dis-buf.c	FUNCTION_3	CALL_1
0x4000255	          0x4889c7	                            mov rdi, rax	        86	dis-buf.c	FUNCTION_3	CALL_1
0x4000258	      0xb800000000	                              mov eax, 0	        86	dis-buf.c	FUNCTION_3	CALL_1
0x400025d	      0xe800000000	                          call 0x4000262	        86	dis-buf.c	FUNCTION_3	CALL_1
0x4000262	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        87	dis-buf.c	FUNCTION_3
0x4000266	          0x488b08	                    mov rcx, qword [rax]	        87	dis-buf.c	FUNCTION_3
0x4000269	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        87	dis-buf.c	FUNCTION_3
0x400026d	        0x488b4008	                mov rax, qword [rax + 8]	        87	dis-buf.c	FUNCTION_3
0x4000271	        0x488d55d0	                   lea rdx, [rbp - 0x30]	        87	dis-buf.c	FUNCTION_3
0x4000275	      0xbe00000000	                              mov esi, 0	        87	dis-buf.c	FUNCTION_3
0x400027a	          0x4889c7	                            mov rdi, rax	        87	dis-buf.c	FUNCTION_3
0x400027d	      0xb800000000	                              mov eax, 0	        87	dis-buf.c	FUNCTION_3
0x4000282	            0xffd1	                                call rcx	        87	dis-buf.c	FUNCTION_3
0x4000284	              0x90	                                     nop	        88	dis-buf.c	FUNCTION_3
0x4000285	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	dis-buf.c	FUNCTION_3
0x4000289	    0x644833042528	                xor rax, qword fs:[0x28]	        88	dis-buf.c	FUNCTION_3
0x4000292	            0x7405	                            je 0x4000299	        88	dis-buf.c	FUNCTION_3
0x4000294	      0xe800000000	                          call 0x4000299	        88	dis-buf.c	FUNCTION_3
0x4000299	              0xc9	                                   leave	        88	dis-buf.c	FUNCTION_3
0x400029a	              0xc3	                                     ret	        88	dis-buf.c	FUNCTION_3
buffer_read_memory	ELSE,0:SWITCH,0:IF,1:DO,0:functions,0:CALL,1:FOR,0:WHILE,0	76
0x4000040	              0x55	                                push rbp	        33	dis-buf.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        33	dis-buf.c	FUNCTION_1
0x4000044	        0x4883ec40	                           sub rsp, 0x40	        33	dis-buf.c	FUNCTION_1
0x4000048	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        33	dis-buf.c	FUNCTION_1
0x400004c	        0x488975d0	             mov qword [rbp - 0x30], rsi	        33	dis-buf.c	FUNCTION_1
0x4000050	          0x8955cc	             mov dword [rbp - 0x34], edx	        33	dis-buf.c	FUNCTION_1
0x4000053	        0x48894dc0	             mov qword [rbp - 0x40], rcx	        33	dis-buf.c	FUNCTION_1
0x4000057	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        34	dis-buf.c	FUNCTION_1
0x400005b	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	        34	dis-buf.c	FUNCTION_1
0x4000061	          0x8945e4	             mov dword [rbp - 0x1c], eax	        34	dis-buf.c	FUNCTION_1
0x4000064	          0x8b45cc	             mov eax, dword [rbp - 0x34]	        35	dis-buf.c	FUNCTION_1
0x4000067	      0xba00000000	                              mov edx, 0	        35	dis-buf.c	FUNCTION_1
0x400006c	          0xf775e4	                  div dword [rbp - 0x1c]	        35	dis-buf.c	FUNCTION_1
0x400006f	            0x89c0	                            mov eax, eax	        35	dis-buf.c	FUNCTION_1
0x4000071	        0x488945e8	             mov qword [rbp - 0x18], rax	        35	dis-buf.c	FUNCTION_1
0x4000075	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        36	dis-buf.c	FUNCTION_1
0x4000079	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	        36	dis-buf.c	FUNCTION_1
0x4000080	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	        36	dis-buf.c	FUNCTION_1
0x4000083	      0xba00000000	                              mov edx, 0	        36	dis-buf.c	FUNCTION_1
0x4000088	          0x48f7f6	                                 div rsi	        36	dis-buf.c	FUNCTION_1
0x400008b	        0x488945f0	             mov qword [rbp - 0x10], rax	        36	dis-buf.c	FUNCTION_1
0x400008f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        37	dis-buf.c	FUNCTION_1
0x4000093	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        37	dis-buf.c	FUNCTION_1
0x400009a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        37	dis-buf.c	FUNCTION_1
0x400009e	          0x4829c2	                            sub rdx, rax	        37	dis-buf.c	FUNCTION_1
0x40000a1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        37	dis-buf.c	FUNCTION_1
0x40000a4	        0x480fafc2	                           imul rax, rdx	        37	dis-buf.c	FUNCTION_1
0x40000a8	        0x488945f8	                mov qword [rbp - 8], rax	        37	dis-buf.c	FUNCTION_1
0x40000ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        39	dis-buf.c	FUNCTION_1	IF_1
0x40000b0	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        39	dis-buf.c	FUNCTION_1	IF_1
0x40000b7	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	        39	dis-buf.c	FUNCTION_1	IF_1
0x40000bb	            0x7776	                            ja 0x4000133	        39	dis-buf.c	FUNCTION_1	IF_1
0x40000bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        40	dis-buf.c	FUNCTION_1	IF_1
0x40000c1	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        40	dis-buf.c	FUNCTION_1	IF_1
0x40000c8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        40	dis-buf.c	FUNCTION_1	IF_1
0x40000cc	          0x4829c2	                            sub rdx, rax	        40	dis-buf.c	FUNCTION_1	IF_1
0x40000cf	          0x4889d0	                            mov rax, rdx	        40	dis-buf.c	FUNCTION_1	IF_1
0x40000d2	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        40	dis-buf.c	FUNCTION_1	IF_1
0x40000d6	            0x775b	                            ja 0x4000133	        40	dis-buf.c	FUNCTION_1	IF_1
0x40000d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000dc	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000e3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000e7	          0x4829c2	                            sub rdx, rax	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000ee	          0x4801d0	                            add rax, rdx	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000f1	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000f5	            0x773c	                            ja 0x4000133	        41	dis-buf.c	FUNCTION_1	IF_1
0x40000f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        42	dis-buf.c	FUNCTION_1	IF_1
0x40000fb	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        42	dis-buf.c	FUNCTION_1	IF_1
0x4000102	          0x4885c0	                           test rax, rax	        42	dis-buf.c	FUNCTION_1	IF_1
0x4000105	            0x7433	                            je 0x400013a	        42	dis-buf.c	FUNCTION_1	IF_1
0x4000107	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        42	dis-buf.c	FUNCTION_1	IF_1
0x400010b	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        42	dis-buf.c	FUNCTION_1	IF_1
0x4000112	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	        42	dis-buf.c	FUNCTION_1	IF_1
0x4000116	            0x761b	                           jbe 0x4000133	        42	dis-buf.c	FUNCTION_1	IF_1
0x4000118	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        43	dis-buf.c	FUNCTION_1	IF_1
0x400011c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	dis-buf.c	FUNCTION_1	IF_1
0x4000120	          0x4801c2	                            add rdx, rax	        43	dis-buf.c	FUNCTION_1	IF_1
0x4000123	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        43	dis-buf.c	FUNCTION_1	IF_1
0x4000127	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        43	dis-buf.c	FUNCTION_1	IF_1
0x400012e	          0x4839c2	                            cmp rdx, rax	        43	dis-buf.c	FUNCTION_1	IF_1
0x4000131	            0x7607	                           jbe 0x400013a	        43	dis-buf.c	FUNCTION_1	IF_1
0x4000133	      0xb805000000	                              mov eax, 5	        45	dis-buf.c	FUNCTION_1	IF_1
0x4000138	            0xeb29	                           jmp 0x4000163	        45	dis-buf.c	FUNCTION_1	IF_1
0x400013a	          0x8b55cc	             mov edx, dword [rbp - 0x34]	        46	dis-buf.c	FUNCTION_1	CALL_1
0x400013d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        46	dis-buf.c	FUNCTION_1	CALL_1
0x4000141	    0x488b88980000	            mov rcx, qword [rax + 0x98] 	        46	dis-buf.c	FUNCTION_1	CALL_1
0x4000148	        0x488b45f8	                mov rax, qword [rbp - 8]	        46	dis-buf.c	FUNCTION_1	CALL_1
0x400014c	          0x4801c1	                            add rcx, rax	        46	dis-buf.c	FUNCTION_1	CALL_1
0x400014f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        46	dis-buf.c	FUNCTION_1	CALL_1
0x4000153	          0x4889ce	                            mov rsi, rcx	        46	dis-buf.c	FUNCTION_1	CALL_1
0x4000156	          0x4889c7	                            mov rdi, rax	        46	dis-buf.c	FUNCTION_1	CALL_1
0x4000159	      0xe800000000	                          call 0x400015e	        46	dis-buf.c	FUNCTION_1	CALL_1
0x400015e	      0xb800000000	                              mov eax, 0	        48	dis-buf.c	FUNCTION_1
0x4000163	              0xc9	                                   leave	        49	dis-buf.c	FUNCTION_1
0x4000164	              0xc3	                                     ret	        49	dis-buf.c	FUNCTION_1
generic_symbol_is_valid	ELSE,0:SWITCH,0:IF,0:DO,0:functions,0:CALL,0:FOR,0:WHILE,0	7
0x40002ae	              0x55	                                push rbp	       104	dis-buf.c	FUNCTION_5
0x40002af	          0x4889e5	                            mov rbp, rsp	       104	dis-buf.c	FUNCTION_5
0x40002b2	        0x48897df8	                mov qword [rbp - 8], rdi	       104	dis-buf.c	FUNCTION_5
0x40002b6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       104	dis-buf.c	FUNCTION_5
0x40002ba	      0xb801000000	                              mov eax, 1	       105	dis-buf.c	FUNCTION_5
0x40002bf	              0x5d	                                 pop rbp	       106	dis-buf.c	FUNCTION_5
0x40002c0	              0xc3	                                     ret	       106	dis-buf.c	FUNCTION_5
