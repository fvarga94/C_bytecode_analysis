d_unnamed_type	IF,5:DO,0:functions,0:ELSE,0:FOR,0:CALL,5:SWITCH,0:WHILE,0	70
0x4004960	              0x55	                                push rbp	      3724	cp-demangle.c	FUNCTION_57
0x4004961	          0x4889e5	                            mov rbp, rsp	      3724	cp-demangle.c	FUNCTION_57
0x4004964	        0x4883ec20	                           sub rsp, 0x20	      3724	cp-demangle.c	FUNCTION_57
0x4004968	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3724	cp-demangle.c	FUNCTION_57
0x400496c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004970	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004974	           0xfb600	                   movzx eax, byte [rax]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004977	            0x3c55	                            cmp al, 0x55	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004979	            0x751b	                           jne 0x4004996	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400497b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400497f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004983	        0x488d5001	                      lea rdx, [rax + 1]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004987	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400498b	        0x48895018	             mov qword [rax + 0x18], rdx	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400498f	      0xb800000000	                              mov eax, 0	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004994	            0xeb05	                           jmp 0x400499b	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x4004996	      0xb801000000	                              mov eax, 1	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400499b	            0x84c0	                             test al, al	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400499d	            0x740a	                            je 0x40049a9	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400499f	      0xb800000000	                              mov eax, 0	      3729	cp-demangle.c	FUNCTION_57	IF_1
0x40049a4	      0xe9a7000000	                           jmp 0x4004a50	      3729	cp-demangle.c	FUNCTION_57	IF_1
0x40049a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049ad	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049b1	           0xfb600	                   movzx eax, byte [rax]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049b4	            0x3c74	                            cmp al, 0x74	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049b6	            0x751b	                           jne 0x40049d3	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049c0	        0x488d5001	                      lea rdx, [rax + 1]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049c8	        0x48895018	             mov qword [rax + 0x18], rdx	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049cc	      0xb800000000	                              mov eax, 0	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049d1	            0xeb05	                           jmp 0x40049d8	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049d3	      0xb801000000	                              mov eax, 1	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049d8	            0x84c0	                             test al, al	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049da	            0x7407	                            je 0x40049e3	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40049dc	      0xb800000000	                              mov eax, 0	      3731	cp-demangle.c	FUNCTION_57	IF_2
0x40049e1	            0xeb6d	                           jmp 0x4004a50	      3731	cp-demangle.c	FUNCTION_57	IF_2
0x40049e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3733	cp-demangle.c	FUNCTION_57	CALL_3
0x40049e7	          0x4889c7	                            mov rdi, rax	      3733	cp-demangle.c	FUNCTION_57	CALL_3
0x40049ea	      0xe87aebffff	               call sym.d_compact_number	      3733	cp-demangle.c	FUNCTION_57	CALL_3
0x40049ef	          0x8945f4	              mov dword [rbp - 0xc], eax	      3733	cp-demangle.c	FUNCTION_57	CALL_3
0x40049f2	        0x837df400	                cmp dword [rbp - 0xc], 0	      3734	cp-demangle.c	FUNCTION_57	IF_3
0x40049f6	            0x7907	                           jns 0x40049ff	      3734	cp-demangle.c	FUNCTION_57	IF_3
0x40049f8	      0xb800000000	                              mov eax, 0	      3735	cp-demangle.c	FUNCTION_57	IF_3
0x40049fd	            0xeb51	                           jmp 0x4004a50	      3735	cp-demangle.c	FUNCTION_57	IF_3
0x40049ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3737	cp-demangle.c	FUNCTION_57	CALL_4
0x4004a03	          0x4889c7	                            mov rdi, rax	      3737	cp-demangle.c	FUNCTION_57	CALL_4
0x4004a06	      0xe8ecb7ffff	                   call sym.d_make_empty	      3737	cp-demangle.c	FUNCTION_57	CALL_4
0x4004a0b	        0x488945f8	                mov qword [rbp - 8], rax	      3737	cp-demangle.c	FUNCTION_57	CALL_4
0x4004a0f	      0x48837df800	                  cmp qword [rbp - 8], 0	      3738	cp-demangle.c	FUNCTION_57	IF_4
0x4004a14	            0x7418	                            je 0x4004a2e	      3738	cp-demangle.c	FUNCTION_57	IF_4
0x4004a16	        0x488b45f8	                mov rax, qword [rbp - 8]	      3740	cp-demangle.c	FUNCTION_57	IF_4
0x4004a1a	    0xc70047000000	                   mov dword [rax], 0x47	      3740	cp-demangle.c	FUNCTION_57	IF_4
0x4004a20	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x4004a23	          0x4863d0	                         movsxd rdx, eax	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x4004a26	        0x488b45f8	                mov rax, qword [rbp - 8]	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x4004a2a	        0x48895008	                mov qword [rax + 8], rdx	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x4004a2e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x4004a32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x4004a36	          0x4889d6	                            mov rsi, rdx	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x4004a39	          0x4889c7	                            mov rdi, rax	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x4004a3c	      0xe84a010000	             call sym.d_add_substitution	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x4004a41	            0x85c0	                           test eax, eax	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x4004a43	            0x7507	                           jne 0x4004a4c	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x4004a45	      0xb800000000	                              mov eax, 0	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x4004a4a	            0xeb04	                           jmp 0x4004a50	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x4004a4c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3747	cp-demangle.c	FUNCTION_57
0x4004a50	              0xc9	                                   leave	      3748	cp-demangle.c	FUNCTION_57
0x4004a51	              0xc3	                                     ret	      3748	cp-demangle.c	FUNCTION_57
d_call_offset	IF,5:DO,0:functions,0:ELSE,2:FOR,0:CALL,6:SWITCH,0:WHILE,0	76
0x4001e6c	              0x55	                                push rbp	      2168	cp-demangle.c	ELSE_2	FUNCTION_32
0x4001e6d	          0x4889e5	                            mov rbp, rsp	      2168	cp-demangle.c	ELSE_2	FUNCTION_32
0x4001e70	        0x4883ec10	                           sub rsp, 0x10	      2168	cp-demangle.c	ELSE_2	FUNCTION_32
0x4001e74	        0x48897df8	                mov qword [rbp - 8], rdi	      2168	cp-demangle.c	ELSE_2	FUNCTION_32
0x4001e78	          0x8975f4	              mov dword [rbp - 0xc], esi	      2168	cp-demangle.c	ELSE_2	FUNCTION_32
0x4001e7b	        0x837df400	                cmp dword [rbp - 0xc], 0	      2169	cp-demangle.c	ELSE_2	FUNCTION_32	IF_1
0x4001e7f	            0x7533	                           jne 0x4001eb4	      2169	cp-demangle.c	ELSE_2	FUNCTION_32	IF_1
0x4001e81	        0x488b45f8	                mov rax, qword [rbp - 8]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e85	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e89	           0xfb600	                   movzx eax, byte [rax]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e8c	            0x84c0	                             test al, al	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e8e	            0x741c	                            je 0x4001eac	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e90	        0x488b45f8	                mov rax, qword [rbp - 8]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e94	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e98	        0x488d4801	                      lea rcx, [rax + 1]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001e9c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001ea0	        0x48894a18	             mov qword [rdx + 0x18], rcx	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001ea4	           0xfb600	                   movzx eax, byte [rax]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001ea7	           0xfbec0	                           movsx eax, al	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001eaa	            0xeb05	                           jmp 0x4001eb1	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001eac	      0xb800000000	                              mov eax, 0	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001eb1	          0x8945f4	              mov dword [rbp - 0xc], eax	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x4001eb4	        0x837df468	            cmp dword [rbp - 0xc], 0x68 	      2172	cp-demangle.c	ELSE_2	FUNCTION_32	IF_2
0x4001eb8	            0x750e	                           jne 0x4001ec8	      2172	cp-demangle.c	ELSE_2	FUNCTION_32	IF_2
0x4001eba	        0x488b45f8	                mov rax, qword [rbp - 8]	      2173	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_2
0x4001ebe	          0x4889c7	                            mov rdi, rax	      2173	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_2
0x4001ec1	      0xe813f3ffff	                       call sym.d_number	      2173	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_2
0x4001ec6	            0xeb61	                           jmp 0x4001f29	      2173	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_2
0x4001ec8	        0x837df476	            cmp dword [rbp - 0xc], 0x76 	      2174	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3
0x4001ecc	            0x7554	                           jne 0x4001f22	      2174	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3
0x4001ece	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_3
0x4001ed2	          0x4889c7	                            mov rdi, rax	      2176	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_3
0x4001ed5	      0xe8fff2ffff	                       call sym.d_number	      2176	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_3
0x4001eda	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ede	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ee2	           0xfb600	                   movzx eax, byte [rax]	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ee5	            0x3c5f	                            cmp al, 0x5f	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ee7	            0x751b	                           jne 0x4001f04	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ee9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001eed	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ef1	        0x488d5001	                      lea rdx, [rax + 1]	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ef5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001ef9	        0x48895018	             mov qword [rax + 0x18], rdx	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001efd	      0xb800000000	                              mov eax, 0	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001f02	            0xeb05	                           jmp 0x4001f09	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001f04	      0xb801000000	                              mov eax, 1	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001f09	            0x84c0	                             test al, al	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001f0b	            0x7407	                            je 0x4001f14	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4001f0d	      0xb800000000	                              mov eax, 0	      2178	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4
0x4001f12	            0xeb54	                           jmp 0x4001f68	      2178	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4
0x4001f14	        0x488b45f8	                mov rax, qword [rbp - 8]	      2179	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_5
0x4001f18	          0x4889c7	                            mov rdi, rax	      2179	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_5
0x4001f1b	      0xe8b9f2ffff	                       call sym.d_number	      2179	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_5
0x4001f20	            0xeb07	                           jmp 0x4001f29	      2179	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_5
0x4001f22	      0xb800000000	                              mov eax, 0	      2182	cp-demangle.c	FUNCTION_32	ELSE_2
0x4001f27	            0xeb3f	                           jmp 0x4001f68	      2182	cp-demangle.c	FUNCTION_32	ELSE_2
0x4001f29	        0x488b45f8	                mov rax, qword [rbp - 8]	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f2d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f31	           0xfb600	                   movzx eax, byte [rax]	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f34	            0x3c5f	                            cmp al, 0x5f	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f36	            0x751b	                           jne 0x4001f53	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f38	        0x488b45f8	                mov rax, qword [rbp - 8]	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f3c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f40	        0x488d5001	                      lea rdx, [rax + 1]	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f44	        0x488b45f8	                mov rax, qword [rbp - 8]	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f48	        0x48895018	             mov qword [rax + 0x18], rdx	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f4c	      0xb800000000	                              mov eax, 0	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f51	            0xeb05	                           jmp 0x4001f58	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f53	      0xb801000000	                              mov eax, 1	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f58	            0x84c0	                             test al, al	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f5a	            0x7407	                            je 0x4001f63	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4001f5c	      0xb800000000	                              mov eax, 0	      2185	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5
0x4001f61	            0xeb05	                           jmp 0x4001f68	      2185	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5
0x4001f63	      0xb801000000	                              mov eax, 1	      2187	cp-demangle.c	FUNCTION_32	ELSE_2
0x4001f68	              0xc9	                                   leave	      2188	cp-demangle.c	FUNCTION_32	ELSE_2
0x4001f69	              0xc3	                                     ret	      2188	cp-demangle.c	FUNCTION_32	ELSE_2
cplus_demangle_v3_callback	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	15
0x4009ecf	              0x55	                                push rbp	      6462	cp-demangle.c	FUNCTION_101
0x4009ed0	          0x4889e5	                            mov rbp, rsp	      6462	cp-demangle.c	FUNCTION_101
0x4009ed3	        0x4883ec20	                           sub rsp, 0x20	      6462	cp-demangle.c	FUNCTION_101
0x4009ed7	        0x48897df8	                mov qword [rbp - 8], rdi	      6462	cp-demangle.c	FUNCTION_101
0x4009edb	          0x8975f4	              mov dword [rbp - 0xc], esi	      6462	cp-demangle.c	FUNCTION_101
0x4009ede	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6462	cp-demangle.c	FUNCTION_101
0x4009ee2	        0x48894de0	             mov qword [rbp - 0x20], rcx	      6462	cp-demangle.c	FUNCTION_101
0x4009ee6	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      6463	cp-demangle.c	FUNCTION_101	CALL_1
0x4009eea	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6463	cp-demangle.c	FUNCTION_101	CALL_1
0x4009eee	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      6463	cp-demangle.c	FUNCTION_101	CALL_1
0x4009ef1	        0x488b45f8	                mov rax, qword [rbp - 8]	      6463	cp-demangle.c	FUNCTION_101	CALL_1
0x4009ef5	          0x4889c7	                            mov rdi, rax	      6463	cp-demangle.c	FUNCTION_101	CALL_1
0x4009ef8	      0xe8c2faffff	            call sym.d_demangle_callback	      6463	cp-demangle.c	FUNCTION_101	CALL_1
0x4009efd	              0xc9	                                   leave	      6464	cp-demangle.c	FUNCTION_101
0x4009efe	              0xc3	                                     ret	      6464	cp-demangle.c	FUNCTION_101
is_ctor_or_dtor	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,1:WHILE,1	163
0x4009f74	              0x55	                                push rbp	      6501	cp-demangle.c	FUNCTION_104
0x4009f75	          0x4889e5	                            mov rbp, rsp	      6501	cp-demangle.c	FUNCTION_104
0x4009f78	            0x4157	                                push r15	      6501	cp-demangle.c	FUNCTION_104
0x4009f7a	            0x4156	                                push r14	      6501	cp-demangle.c	FUNCTION_104
0x4009f7c	            0x4155	                                push r13	      6501	cp-demangle.c	FUNCTION_104
0x4009f7e	            0x4154	                                push r12	      6501	cp-demangle.c	FUNCTION_104
0x4009f80	              0x53	                                push rbx	      6501	cp-demangle.c	FUNCTION_104
0x4009f81	    0x4881ecd80000	                           sub rsp, 0xd8	      6501	cp-demangle.c	FUNCTION_104
0x4009f88	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      6501	cp-demangle.c	FUNCTION_104
0x4009f8f	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      6501	cp-demangle.c	FUNCTION_104
0x4009f96	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      6501	cp-demangle.c	FUNCTION_104
0x4009f9d	    0x64488b042528	                mov rax, qword fs:[0x28]	      6501	cp-demangle.c	FUNCTION_104
0x4009fa6	        0x488945c8	             mov qword [rbp - 0x38], rax	      6501	cp-demangle.c	FUNCTION_104
0x4009faa	            0x31c0	                            xor eax, eax	      6501	cp-demangle.c	FUNCTION_104
0x4009fac	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      6506	cp-demangle.c	FUNCTION_104
0x4009fb3	    0xc70000000000	                      mov dword [rax], 0	      6506	cp-demangle.c	FUNCTION_104
0x4009fb9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6507	cp-demangle.c	FUNCTION_104
0x4009fc0	    0xc70000000000	                      mov dword [rax], 0	      6507	cp-demangle.c	FUNCTION_104
0x4009fc6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fcd	          0x4889c7	                            mov rdi, rax	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fd0	      0xe800000000	                          call 0x4009fd5	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fd5	          0x4889c6	                            mov rsi, rax	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fd8	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fdf	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fe6	          0x4889d1	                            mov rcx, rdx	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fe9	          0x4889f2	                            mov rdx, rsi	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009fec	      0xbe00400000	                         mov esi, 0x4000	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009ff1	          0x4889c7	                            mov rdi, rax	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009ff4	      0xe800000000	                          call 0x4009ff9	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009ff9	          0x4889e0	                            mov rax, rsp	      6511	cp-demangle.c	FUNCTION_104
0x4009ffc	          0x4889c3	                            mov rbx, rax	      6511	cp-demangle.c	FUNCTION_104
0x4009fff	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	      6513	cp-demangle.c	FUNCTION_104
0x400a002	          0x4863c1	                         movsxd rax, ecx	      6513	cp-demangle.c	FUNCTION_104
0x400a005	        0x4883e801	                              sub rax, 1	      6513	cp-demangle.c	FUNCTION_104
0x400a009	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      6513	cp-demangle.c	FUNCTION_104
0x400a010	          0x4863c1	                         movsxd rax, ecx	      6513	cp-demangle.c	FUNCTION_104
0x400a013	          0x4989c6	                            mov r14, rax	      6513	cp-demangle.c	FUNCTION_104
0x400a016	    0x41bf00000000	                             mov r15d, 0	      6513	cp-demangle.c	FUNCTION_104
0x400a01c	    0x4969d7c00000	                     imul rdx, r15, 0xc0	      6513	cp-demangle.c	FUNCTION_104
0x400a023	        0x496bc600	                        imul rax, r14, 0	      6513	cp-demangle.c	FUNCTION_104
0x400a027	        0x488d3402	                    lea rsi, [rdx + rax]	      6513	cp-demangle.c	FUNCTION_104
0x400a02b	      0xb8c0000000	                           mov eax, 0xc0	      6513	cp-demangle.c	FUNCTION_104
0x400a030	          0x49f7e6	                                 mul r14	      6513	cp-demangle.c	FUNCTION_104
0x400a033	          0x4801d6	                            add rsi, rdx	      6513	cp-demangle.c	FUNCTION_104
0x400a036	          0x4889f2	                            mov rdx, rsi	      6513	cp-demangle.c	FUNCTION_104
0x400a039	          0x4863d1	                         movsxd rdx, ecx	      6513	cp-demangle.c	FUNCTION_104
0x400a03c	          0x4889d0	                            mov rax, rdx	      6513	cp-demangle.c	FUNCTION_104
0x400a03f	          0x4801c0	                            add rax, rax	      6513	cp-demangle.c	FUNCTION_104
0x400a042	          0x4801d0	                            add rax, rdx	      6513	cp-demangle.c	FUNCTION_104
0x400a045	        0x48c1e003	                              shl rax, 3	      6513	cp-demangle.c	FUNCTION_104
0x400a049	          0x4863c1	                         movsxd rax, ecx	      6513	cp-demangle.c	FUNCTION_104
0x400a04c	          0x4989c4	                            mov r12, rax	      6513	cp-demangle.c	FUNCTION_104
0x400a04f	    0x41bd00000000	                             mov r13d, 0	      6513	cp-demangle.c	FUNCTION_104
0x400a055	    0x4969d5c00000	                     imul rdx, r13, 0xc0	      6513	cp-demangle.c	FUNCTION_104
0x400a05c	        0x496bc400	                        imul rax, r12, 0	      6513	cp-demangle.c	FUNCTION_104
0x400a060	        0x488d3402	                    lea rsi, [rdx + rax]	      6513	cp-demangle.c	FUNCTION_104
0x400a064	      0xb8c0000000	                           mov eax, 0xc0	      6513	cp-demangle.c	FUNCTION_104
0x400a069	          0x49f7e4	                                 mul r12	      6513	cp-demangle.c	FUNCTION_104
0x400a06c	          0x4801d6	                            add rsi, rdx	      6513	cp-demangle.c	FUNCTION_104
0x400a06f	          0x4889f2	                            mov rdx, rsi	      6513	cp-demangle.c	FUNCTION_104
0x400a072	          0x4863d1	                         movsxd rdx, ecx	      6513	cp-demangle.c	FUNCTION_104
0x400a075	          0x4889d0	                            mov rax, rdx	      6513	cp-demangle.c	FUNCTION_104
0x400a078	          0x4801c0	                            add rax, rax	      6513	cp-demangle.c	FUNCTION_104
0x400a07b	          0x4801d0	                            add rax, rdx	      6513	cp-demangle.c	FUNCTION_104
0x400a07e	        0x48c1e003	                              shl rax, 3	      6513	cp-demangle.c	FUNCTION_104
0x400a082	        0x488d5007	                      lea rdx, [rax + 7]	      6513	cp-demangle.c	FUNCTION_104
0x400a086	      0xb810000000	                           mov eax, 0x10	      6513	cp-demangle.c	FUNCTION_104
0x400a08b	        0x4883e801	                              sub rax, 1	      6513	cp-demangle.c	FUNCTION_104
0x400a08f	          0x4801d0	                            add rax, rdx	      6513	cp-demangle.c	FUNCTION_104
0x400a092	      0xbf10000000	                           mov edi, 0x10	      6513	cp-demangle.c	FUNCTION_104
0x400a097	      0xba00000000	                              mov edx, 0	      6513	cp-demangle.c	FUNCTION_104
0x400a09c	          0x48f7f7	                                 div rdi	      6513	cp-demangle.c	FUNCTION_104
0x400a09f	        0x486bc010	                     imul rax, rax, 0x10	      6513	cp-demangle.c	FUNCTION_104
0x400a0a3	          0x4829c4	                            sub rsp, rax	      6513	cp-demangle.c	FUNCTION_104
0x400a0a6	          0x4889e0	                            mov rax, rsp	      6513	cp-demangle.c	FUNCTION_104
0x400a0a9	        0x4883c007	                              add rax, 7	      6513	cp-demangle.c	FUNCTION_104
0x400a0ad	        0x48c1e803	                              shr rax, 3	      6513	cp-demangle.c	FUNCTION_104
0x400a0b1	        0x48c1e003	                              shl rax, 3	      6513	cp-demangle.c	FUNCTION_104
0x400a0b5	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      6513	cp-demangle.c	FUNCTION_104
0x400a0bc	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6514	cp-demangle.c	FUNCTION_104
0x400a0bf	          0x4863d0	                         movsxd rdx, eax	      6514	cp-demangle.c	FUNCTION_104
0x400a0c2	        0x4883ea01	                              sub rdx, 1	      6514	cp-demangle.c	FUNCTION_104
0x400a0c6	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      6514	cp-demangle.c	FUNCTION_104
0x400a0cd	          0x4863d0	                         movsxd rdx, eax	      6514	cp-demangle.c	FUNCTION_104
0x400a0d0	    0x48899510ffff	             mov qword [rbp - 0xf0], rdx	      6514	cp-demangle.c	FUNCTION_104
0x400a0d7	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      6514	cp-demangle.c	FUNCTION_104
0x400a0e2	          0x4863d0	                         movsxd rdx, eax	      6514	cp-demangle.c	FUNCTION_104
0x400a0e5	    0x48899500ffff	            mov qword [rbp - 0x100], rdx	      6514	cp-demangle.c	FUNCTION_104
0x400a0ec	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      6514	cp-demangle.c	FUNCTION_104
0x400a0f7	            0x4898	                                    cdqe	      6514	cp-demangle.c	FUNCTION_104
0x400a0f9	        0x48c1e003	                              shl rax, 3	      6514	cp-demangle.c	FUNCTION_104
0x400a0fd	        0x488d5007	                      lea rdx, [rax + 7]	      6514	cp-demangle.c	FUNCTION_104
0x400a101	      0xb810000000	                           mov eax, 0x10	      6514	cp-demangle.c	FUNCTION_104
0x400a106	        0x4883e801	                              sub rax, 1	      6514	cp-demangle.c	FUNCTION_104
0x400a10a	          0x4801d0	                            add rax, rdx	      6514	cp-demangle.c	FUNCTION_104
0x400a10d	      0xbf10000000	                           mov edi, 0x10	      6514	cp-demangle.c	FUNCTION_104
0x400a112	      0xba00000000	                              mov edx, 0	      6514	cp-demangle.c	FUNCTION_104
0x400a117	          0x48f7f7	                                 div rdi	      6514	cp-demangle.c	FUNCTION_104
0x400a11a	        0x486bc010	                     imul rax, rax, 0x10	      6514	cp-demangle.c	FUNCTION_104
0x400a11e	          0x4829c4	                            sub rsp, rax	      6514	cp-demangle.c	FUNCTION_104
0x400a121	          0x4889e0	                            mov rax, rsp	      6514	cp-demangle.c	FUNCTION_104
0x400a124	        0x4883c007	                              add rax, 7	      6514	cp-demangle.c	FUNCTION_104
0x400a128	        0x48c1e803	                              shr rax, 3	      6514	cp-demangle.c	FUNCTION_104
0x400a12c	        0x48c1e003	                              shl rax, 3	      6514	cp-demangle.c	FUNCTION_104
0x400a130	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6514	cp-demangle.c	FUNCTION_104
0x400a137	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      6516	cp-demangle.c	FUNCTION_104
0x400a13e	        0x48894590	             mov qword [rbp - 0x70], rax	      6516	cp-demangle.c	FUNCTION_104
0x400a142	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6517	cp-demangle.c	FUNCTION_104
0x400a149	        0x488945a0	             mov qword [rbp - 0x60], rax	      6517	cp-demangle.c	FUNCTION_104
0x400a14d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6523	cp-demangle.c	FUNCTION_104
0x400a154	      0xbe01000000	                              mov esi, 1	      6523	cp-demangle.c	FUNCTION_104
0x400a159	          0x4889c7	                            mov rdi, rax	      6523	cp-demangle.c	FUNCTION_104
0x400a15c	      0xe800000000	                          call 0x400a161	      6523	cp-demangle.c	FUNCTION_104
0x400a161	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      6523	cp-demangle.c	FUNCTION_104
0x400a168	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      6528	cp-demangle.c	FUNCTION_104
0x400a172	      0xe9a2000000	                           jmp 0x400a219	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x400a177	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a17e	            0x8b00	                    mov eax, dword [rax]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a180	          0x83f808	                              cmp eax, 8	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a183	            0x770c	                            ja 0x400a191	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a185	            0x89c0	                            mov eax, eax	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a187	    0x488b04c50000	                  mov rax, qword [rax*8]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a18f	            0xffe0	                                 jmp rax	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a191	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      6540	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a19c	            0xeb7b	                           jmp 0x400a219	      6541	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a19e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6544	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1a5	        0x488b4008	                mov rax, qword [rax + 8]	      6544	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1a9	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      6544	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1b0	            0xeb67	                           jmp 0x400a219	      6545	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1b2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6548	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1b9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6548	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1bd	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      6548	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1c4	            0xeb53	                           jmp 0x400a219	      6549	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1c6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1cd	          0x8b5008	                mov edx, dword [rax + 8]	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1d0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1d7	            0x8910	                    mov dword [rax], edx	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1d9	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	      6552	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1e3	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      6553	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1ee	            0xeb29	                           jmp 0x400a219	      6554	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1f0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1f7	          0x8b5008	                mov edx, dword [rax + 8]	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a1fa	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a201	            0x8910	                    mov dword [rax], edx	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a203	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	      6557	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a20d	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      6558	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a218	              0x90	                                     nop	      6559	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x400a219	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x400a221	     0xf8550ffffff	                           jne 0x400a177	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x400a227	          0x4889dc	                            mov rsp, rbx	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x400a22a	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      6564	cp-demangle.c	FUNCTION_104
0x400a230	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      6565	cp-demangle.c	FUNCTION_104
0x400a234	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6565	cp-demangle.c	FUNCTION_104
0x400a23d	            0x7405	                            je 0x400a244	      6565	cp-demangle.c	FUNCTION_104
0x400a23f	      0xe800000000	                          call 0x400a244	      6565	cp-demangle.c	FUNCTION_104
0x400a244	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6565	cp-demangle.c	FUNCTION_104
0x400a248	              0x5b	                                 pop rbx	      6565	cp-demangle.c	FUNCTION_104
0x400a249	            0x415c	                                 pop r12	      6565	cp-demangle.c	FUNCTION_104
0x400a24b	            0x415d	                                 pop r13	      6565	cp-demangle.c	FUNCTION_104
0x400a24d	            0x415e	                                 pop r14	      6565	cp-demangle.c	FUNCTION_104
0x400a24f	            0x415f	                                 pop r15	      6565	cp-demangle.c	FUNCTION_104
0x400a251	              0x5d	                                 pop rbp	      6565	cp-demangle.c	FUNCTION_104
0x400a252	              0xc3	                                     ret	      6565	cp-demangle.c	FUNCTION_104
d_expr_primary	IF,7:DO,0:functions,0:ELSE,1:FOR,0:CALL,13:SWITCH,0:WHILE,1	134
0x4004377	              0x55	                                push rbp	      3520	cp-demangle.c	FUNCTION_53
0x4004378	          0x4889e5	                            mov rbp, rsp	      3520	cp-demangle.c	FUNCTION_53
0x400437b	        0x4883ec30	                           sub rsp, 0x30	      3520	cp-demangle.c	FUNCTION_53
0x400437f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3520	cp-demangle.c	FUNCTION_53
0x4004383	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4004387	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400438b	           0xfb600	                   movzx eax, byte [rax]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400438e	            0x3c4c	                            cmp al, 0x4c	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4004390	            0x751b	                           jne 0x40043ad	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4004392	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4004396	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400439a	        0x488d5001	                      lea rdx, [rax + 1]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400439e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x40043a2	        0x48895018	             mov qword [rax + 0x18], rdx	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x40043a6	      0xb800000000	                              mov eax, 0	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x40043ab	            0xeb05	                           jmp 0x40043b2	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x40043ad	      0xb801000000	                              mov eax, 1	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x40043b2	            0x84c0	                             test al, al	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x40043b4	            0x740a	                            je 0x40043c0	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x40043b6	      0xb800000000	                              mov eax, 0	      3524	cp-demangle.c	FUNCTION_53	IF_1
0x40043bb	      0xe98b010000	                           jmp 0x400454b	      3524	cp-demangle.c	FUNCTION_53	IF_1
0x40043c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x40043c4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x40043c8	           0xfb600	                   movzx eax, byte [rax]	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x40043cb	            0x3c5f	                            cmp al, 0x5f	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x40043cd	            0x740f	                            je 0x40043de	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x40043cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3527	cp-demangle.c	FUNCTION_53	IF_2	CALL_3
0x40043d3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3527	cp-demangle.c	FUNCTION_53	IF_2	CALL_3
0x40043d7	           0xfb600	                   movzx eax, byte [rax]	      3527	cp-demangle.c	FUNCTION_53	IF_2	CALL_3
0x40043da	            0x3c5a	                            cmp al, 0x5a	      3527	cp-demangle.c	FUNCTION_53	IF_2	CALL_3
0x40043dc	            0x751a	                           jne 0x40043f8	      3527	cp-demangle.c	FUNCTION_53	IF_2	CALL_3
0x40043de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x40043e2	      0xbe00000000	                              mov esi, 0	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x40043e7	          0x4889c7	                            mov rdi, rax	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x40043ea	      0xe800000000	                          call 0x40043ef	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x40043ef	        0x488945e8	             mov qword [rbp - 0x18], rax	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x40043f3	      0xe915010000	                           jmp 0x400450d	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x40043f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x40043fc	          0x4889c7	                            mov rdi, rax	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x40043ff	      0xe800000000	                          call 0x4004404	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x4004404	        0x488945f0	             mov qword [rbp - 0x10], rax	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x4004408	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x400440d	            0x750a	                           jne 0x4004419	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x400440f	      0xb800000000	                              mov eax, 0	      3537	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x4004414	      0xe932010000	                           jmp 0x400454b	      3537	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x4004419	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400441d	            0x8b00	                    mov eax, dword [rax]	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400441f	          0x83f827	                           cmp eax, 0x27	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004422	            0x752a	                           jne 0x400444e	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004424	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004428	        0x488b4008	                mov rax, qword [rax + 8]	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400442c	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400442f	            0x85c0	                           test eax, eax	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004431	            0x741b	                            je 0x400444e	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004433	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004437	          0x8b5048	            mov edx, dword [rax + 0x48] 	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400443a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400443e	        0x488b4008	                mov rax, qword [rax + 8]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004442	          0x8b4008	                mov eax, dword [rax + 8]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004445	            0x29c2	                            sub edx, eax	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4004447	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400444b	          0x895048	             mov dword [rax + 0x48], edx	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400444e	    0xc745e43c0000	           mov dword [rbp - 0x1c], 0x3c 	      3556	cp-demangle.c	FUNCTION_53	ELSE_1
0x4004455	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4004459	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x400445d	           0xfb600	                   movzx eax, byte [rax]	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4004460	            0x3c6e	                            cmp al, 0x6e	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4004462	            0x751b	                           jne 0x400447f	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4004464	    0xc745e43d0000	           mov dword [rbp - 0x1c], 0x3d 	      3559	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5
0x400446b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400446f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4004473	        0x488d5001	                      lea rdx, [rax + 1]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4004477	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400447b	        0x48895018	             mov qword [rax + 0x18], rdx	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400447f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3562	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_6
0x4004483	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3562	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_6
0x4004487	        0x488945f8	                mov qword [rbp - 8], rax	      3562	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_6
0x400448b	            0xeb2d	                           jmp 0x40044ba	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400448d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4004491	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4004495	           0xfb600	                   movzx eax, byte [rax]	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4004498	            0x84c0	                             test al, al	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400449a	            0x750a	                           jne 0x40044a6	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400449c	      0xb800000000	                              mov eax, 0	      3566	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6
0x40044a1	      0xe9a5000000	                           jmp 0x400454b	      3566	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6
0x40044a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x40044aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x40044ae	        0x488d5001	                      lea rdx, [rax + 1]	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x40044b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x40044b6	        0x48895018	             mov qword [rax + 0x18], rdx	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x40044ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40044be	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40044c2	           0xfb600	                   movzx eax, byte [rax]	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40044c5	            0x3c45	                            cmp al, 0x45	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40044c7	            0x75c4	                           jne 0x400448d	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40044c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044cd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044d1	          0x4889c2	                            mov rdx, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044d8	          0x4829c2	                            sub rdx, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044db	          0x4889d0	                            mov rax, rdx	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044de	            0x89c2	                            mov edx, eax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044e0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044e8	          0x4889ce	                            mov rsi, rcx	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044eb	          0x4889c7	                            mov rdi, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044ee	      0xe893beffff	                    call sym.d_make_name	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044f3	          0x4889c1	                            mov rcx, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044f6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044fa	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40044fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4004501	          0x4889c7	                            mov rdi, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4004504	      0xe857bdffff	                    call sym.d_make_comp	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4004509	        0x488945e8	             mov qword [rbp - 0x18], rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400450d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004511	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004515	           0xfb600	                   movzx eax, byte [rax]	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004518	            0x3c45	                            cmp al, 0x45	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400451a	            0x751b	                           jne 0x4004537	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400451c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004520	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004524	        0x488d5001	                      lea rdx, [rax + 1]	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004528	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400452c	        0x48895018	             mov qword [rax + 0x18], rdx	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004530	      0xb800000000	                              mov eax, 0	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004535	            0xeb05	                           jmp 0x400453c	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004537	      0xb801000000	                              mov eax, 1	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400453c	            0x84c0	                             test al, al	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400453e	            0x7407	                            je 0x4004547	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4004540	      0xb800000000	                              mov eax, 0	      3572	cp-demangle.c	FUNCTION_53	IF_7
0x4004545	            0xeb04	                           jmp 0x400454b	      3572	cp-demangle.c	FUNCTION_53	IF_7
0x4004547	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3573	cp-demangle.c	FUNCTION_53
0x400454b	              0xc9	                                   leave	      3574	cp-demangle.c	FUNCTION_53
0x400454c	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
d_last_char	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	7
0x4005651	              0x55	                                push rbp	      4264	cp-demangle.c	FUNCTION_76
0x4005652	          0x4889e5	                            mov rbp, rsp	      4264	cp-demangle.c	FUNCTION_76
0x4005655	        0x48897df8	                mov qword [rbp - 8], rdi	      4264	cp-demangle.c	FUNCTION_76
0x4005659	        0x488b45f8	                mov rax, qword [rbp - 8]	      4265	cp-demangle.c	FUNCTION_76
0x400565d	     0xfb680080100	          movzx eax, byte [rax + 0x108] 	      4265	cp-demangle.c	FUNCTION_76
0x4005664	              0x5d	                                 pop rbp	      4266	cp-demangle.c	FUNCTION_76
0x4005665	              0xc3	                                     ret	      4266	cp-demangle.c	FUNCTION_76
d_identifier	IF,4:DO,0:functions,0:ELSE,0:FOR,0:CALL,7:SWITCH,0:WHILE,0	94
0x4001304	              0x55	                                push rbp	      1734	cp-demangle.c	FUNCTION_27
0x4001305	          0x4889e5	                            mov rbp, rsp	      1734	cp-demangle.c	FUNCTION_27
0x4001308	        0x4883ec20	                           sub rsp, 0x20	      1734	cp-demangle.c	FUNCTION_27
0x400130c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1734	cp-demangle.c	FUNCTION_27
0x4001310	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1734	cp-demangle.c	FUNCTION_27
0x4001313	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1737	cp-demangle.c	FUNCTION_27	CALL_1
0x4001317	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1737	cp-demangle.c	FUNCTION_27	CALL_1
0x400131b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1737	cp-demangle.c	FUNCTION_27	CALL_1
0x400131f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4001323	        0x488b4008	                mov rax, qword [rax + 8]	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4001327	          0x4889c2	                            mov rdx, rax	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400132a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400132e	          0x4829c2	                            sub rdx, rax	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4001331	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4001334	            0x4898	                                    cdqe	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4001336	          0x4839c2	                            cmp rdx, rax	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4001339	            0x7d0a	                           jge 0x4001345	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400133b	      0xb800000000	                              mov eax, 0	      1740	cp-demangle.c	FUNCTION_27	IF_1
0x4001340	      0xe9f3000000	                           jmp 0x4001438	      1740	cp-demangle.c	FUNCTION_27	IF_1
0x4001345	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x4001349	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x400134d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x4001350	            0x4898	                                    cdqe	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x4001352	          0x4801c2	                            add rdx, rax	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x4001355	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x4001359	        0x48895018	             mov qword [rax + 0x18], rdx	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x400135d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x4001361	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x4001364	          0x83e004	                              and eax, 4	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x4001367	            0x85c0	                           test eax, eax	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x4001369	            0x7423	                            je 0x400138e	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x400136b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x400136f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x4001373	           0xfb600	                   movzx eax, byte [rax]	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x4001376	            0x3c24	                            cmp al, 0x24	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x4001378	            0x7514	                           jne 0x400138e	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x400137a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x400137e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x4001382	        0x488d5001	                      lea rdx, [rax + 1]	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x4001386	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x400138a	        0x48895018	             mov qword [rax + 0x18], rdx	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x400138e	        0x837de409	               cmp dword [rbp - 0x1c], 9	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x4001392	     0xf8e8a000000	                           jle 0x4001422	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x4001398	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x400139c	      0xba08000000	                              mov edx, 8	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40013a1	      0xbe00000000	                              mov esi, 0	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40013a6	          0x4889c7	                            mov rdi, rax	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40013a9	      0xe800000000	                          call 0x40013ae	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40013ae	            0x85c0	                           test eax, eax	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40013b0	            0x7570	                           jne 0x4001422	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40013b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1760	cp-demangle.c	FUNCTION_27	IF_3
0x40013b6	        0x4883c008	                              add rax, 8	      1760	cp-demangle.c	FUNCTION_27	IF_3
0x40013ba	        0x488945f8	                mov qword [rbp - 8], rax	      1760	cp-demangle.c	FUNCTION_27	IF_3
0x40013be	        0x488b45f8	                mov rax, qword [rbp - 8]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013c2	           0xfb600	                   movzx eax, byte [rax]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013c5	            0x3c2e	                            cmp al, 0x2e	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013c7	            0x7416	                            je 0x40013df	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013cd	           0xfb600	                   movzx eax, byte [rax]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013d0	            0x3c5f	                            cmp al, 0x5f	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013d2	            0x740b	                            je 0x40013df	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013d8	           0xfb600	                   movzx eax, byte [rax]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013db	            0x3c24	                            cmp al, 0x24	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013dd	            0x7543	                           jne 0x4001422	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013e3	        0x4883c001	                              add rax, 1	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013e7	           0xfb600	                   movzx eax, byte [rax]	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013ea	            0x3c4e	                            cmp al, 0x4e	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013ec	            0x7534	                           jne 0x4001422	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013f2	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013f5	            0x89c2	                            mov edx, eax	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013f7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013fa	            0x29c2	                            sub edx, eax	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013fc	            0x89d0	                            mov eax, edx	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40013fe	          0x83c016	                           add eax, 0x16	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4001401	            0x89c2	                            mov edx, eax	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4001403	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4001407	          0x895048	             mov dword [rax + 0x48], edx	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400140a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x400140e	      0xba15000000	                           mov edx, 0x15	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4001413	      0xbe00000000	                              mov esi, 0	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4001418	          0x4889c7	                            mov rdi, rax	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x400141b	      0xe866efffff	                    call sym.d_make_name	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4001420	            0xeb16	                           jmp 0x4001438	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4001422	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4001425	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4001429	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x400142d	          0x4889ce	                            mov rsi, rcx	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4001430	          0x4889c7	                            mov rdi, rax	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4001433	      0xe84eefffff	                    call sym.d_make_name	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4001438	              0xc9	                                   leave	      1771	cp-demangle.c	FUNCTION_27
0x4001439	              0xc3	                                     ret	      1771	cp-demangle.c	FUNCTION_27
d_java_resource	IF,8:DO,0:functions,0:ELSE,2:FOR,0:CALL,11:SWITCH,1:WHILE,2	164
0x4001691	              0x55	                                push rbp	      1925	cp-demangle.c	FUNCTION_30
0x4001692	          0x4889e5	                            mov rbp, rsp	      1925	cp-demangle.c	FUNCTION_30
0x4001695	        0x4883ec38	                           sub rsp, 0x38	      1925	cp-demangle.c	FUNCTION_30
0x4001699	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1925	cp-demangle.c	FUNCTION_30
0x400169d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1926	cp-demangle.c	FUNCTION_30
0x40016a5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1927	cp-demangle.c	FUNCTION_30
0x40016ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1932	cp-demangle.c	FUNCTION_30	CALL_1
0x40016b1	          0x4889c7	                            mov rdi, rax	      1932	cp-demangle.c	FUNCTION_30	CALL_1
0x40016b4	      0xe820fbffff	                       call sym.d_number	      1932	cp-demangle.c	FUNCTION_30	CALL_1
0x40016b9	          0x8945e0	             mov dword [rbp - 0x20], eax	      1932	cp-demangle.c	FUNCTION_30	CALL_1
0x40016bc	        0x837de001	               cmp dword [rbp - 0x20], 1	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x40016c0	            0x7f0a	                            jg 0x40016cc	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x40016c2	      0xb800000000	                              mov eax, 0	      1934	cp-demangle.c	FUNCTION_30	IF_1
0x40016c7	      0xe918020000	                           jmp 0x40018e4	      1934	cp-demangle.c	FUNCTION_30	IF_1
0x40016cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016d0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016d4	           0xfb600	                   movzx eax, byte [rax]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016d7	            0x84c0	                             test al, al	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016d9	            0x741b	                            je 0x40016f6	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016df	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016e3	        0x488d4801	                      lea rcx, [rax + 1]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016e7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016eb	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016ef	           0xfb600	                   movzx eax, byte [rax]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016f2	            0x3c5f	                            cmp al, 0x5f	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016f4	            0x740a	                            je 0x4001700	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x40016f6	      0xb800000000	                              mov eax, 0	      1938	cp-demangle.c	FUNCTION_30	IF_2
0x40016fb	      0xe9e4010000	                           jmp 0x40018e4	      1938	cp-demangle.c	FUNCTION_30	IF_2
0x4001700	        0x836de001	               sub dword [rbp - 0x20], 1	      1939	cp-demangle.c	FUNCTION_30
0x4001704	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1941	cp-demangle.c	FUNCTION_30	CALL_3
0x4001708	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1941	cp-demangle.c	FUNCTION_30	CALL_3
0x400170c	        0x488945f8	                mov qword [rbp - 8], rax	      1941	cp-demangle.c	FUNCTION_30	CALL_3
0x4001710	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1942	cp-demangle.c	FUNCTION_30
0x4001717	      0xe99c010000	                           jmp 0x40018b8	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x400171c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x400171f	          0x4863d0	                         movsxd rdx, eax	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x4001722	        0x488b45f8	                mov rax, qword [rbp - 8]	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x4001726	          0x4801d0	                            add rax, rdx	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x4001729	           0xfb600	                   movzx eax, byte [rax]	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x400172c	          0x8845df	               mov byte [rbp - 0x21], al	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x400172f	        0x807ddf00	                cmp byte [rbp - 0x21], 0	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x4001733	            0x750a	                           jne 0x400173f	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x4001735	      0xb800000000	                              mov eax, 0	      1948	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x400173a	      0xe9a5010000	                           jmp 0x40018e4	      1948	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x400173f	        0x807ddf24	            cmp byte [rbp - 0x21], 0x24 	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x4001743	     0xf85aa000000	                           jne 0x40017f3	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x4001749	        0x8345e401	               add dword [rbp - 0x1c], 1	      1953	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x400174d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001750	          0x8d5001	                      lea edx, [rax + 1]	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001753	          0x8955e4	             mov dword [rbp - 0x1c], edx	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001756	          0x4863d0	                         movsxd rdx, eax	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001759	        0x488b45f8	                mov rax, qword [rbp - 8]	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400175d	          0x4801d0	                            add rax, rdx	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001760	           0xfb600	                   movzx eax, byte [rax]	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001763	           0xfbec0	                           movsx eax, al	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001766	          0x83f853	                           cmp eax, 0x53	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001769	            0x740c	                            je 0x4001777	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400176b	          0x83f85f	                           cmp eax, 0x5f	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400176e	            0x740d	                            je 0x400177d	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001770	          0x83f824	                           cmp eax, 0x24	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001773	            0x740e	                            je 0x4001783	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001775	            0xeb12	                           jmp 0x4001789	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001777	        0xc645df2f	            mov byte [rbp - 0x21], 0x2f 	      1957	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400177b	            0xeb16	                           jmp 0x4001793	      1958	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400177d	        0xc645df2e	            mov byte [rbp - 0x21], 0x2e 	      1960	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001781	            0xeb10	                           jmp 0x4001793	      1961	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001783	        0xc645df24	            mov byte [rbp - 0x21], 0x24 	      1963	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001787	            0xeb0a	                           jmp 0x4001793	      1964	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001789	      0xb800000000	                              mov eax, 0	      1966	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400178e	      0xe951010000	                           jmp 0x40018e4	      1966	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001793	         0xfbe55df	            movsx edx, byte [rbp - 0x21]	      1968	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_4
0x4001797	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1968	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_4
0x400179b	            0x89d6	                            mov esi, edx	      1968	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_4
0x400179d	          0x4889c7	                            mov rdi, rax	      1968	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_4
0x40017a0	      0xe8acfeffff	               call sym.d_make_character	      1968	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_4
0x40017a5	        0x488945f0	             mov qword [rbp - 0x10], rax	      1968	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_4
0x40017a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x40017ad	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x40017b1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x40017b4	            0x4898	                                    cdqe	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x40017b6	          0x4801c2	                            add rdx, rax	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x40017b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x40017bd	        0x48895018	             mov qword [rax + 0x18], rdx	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x40017c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1970	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_6
0x40017c5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1970	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_6
0x40017c9	        0x488945f8	                mov qword [rbp - 8], rax	      1970	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_6
0x40017cd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1971	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x40017d0	          0x2945e0	             sub dword [rbp - 0x20], eax	      1971	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x40017d3	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1972	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x40017da	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1973	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	IF_5
0x40017df	     0xf8597000000	                           jne 0x400187c	      1973	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	IF_5
0x40017e5	      0xb800000000	                              mov eax, 0	      1974	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	IF_5
0x40017ea	      0xe9f5000000	                           jmp 0x40018e4	      1974	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	IF_5
0x40017ef	        0x8345e401	               add dword [rbp - 0x1c], 1	      1980	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40017f3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40017f6	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40017f9	            0x7d28	                           jge 0x4001823	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40017fb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40017fe	          0x4863d0	                         movsxd rdx, eax	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001801	        0x488b45f8	                mov rax, qword [rbp - 8]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001805	          0x4801d0	                            add rax, rdx	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001808	           0xfb600	                   movzx eax, byte [rax]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400180b	            0x84c0	                             test al, al	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400180d	            0x7414	                            je 0x4001823	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400180f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001812	          0x4863d0	                         movsxd rdx, eax	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001815	        0x488b45f8	                mov rax, qword [rbp - 8]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001819	          0x4801d0	                            add rax, rdx	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400181c	           0xfb600	                   movzx eax, byte [rax]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400181f	            0x3c24	                            cmp al, 0x24	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001821	            0x75cc	                           jne 0x40017ef	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4001823	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x4001826	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x400182a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x400182e	          0x4889ce	                            mov rsi, rcx	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x4001831	          0x4889c7	                            mov rdi, rax	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x4001834	      0xe84debffff	                    call sym.d_make_name	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x4001839	        0x488945f0	             mov qword [rbp - 0x10], rax	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x400183d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4001841	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4001845	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4001848	            0x4898	                                    cdqe	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x400184a	          0x4801c2	                            add rdx, rax	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x400184d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4001851	        0x48895018	             mov qword [rax + 0x18], rdx	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4001855	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1984	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_9
0x4001859	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1984	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_9
0x400185d	        0x488945f8	                mov qword [rbp - 8], rax	      1984	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_9
0x4001861	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1985	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1
0x4001864	          0x2945e0	             sub dword [rbp - 0x20], eax	      1985	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1
0x4001867	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1986	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1
0x400186e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1987	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x4001873	            0x7507	                           jne 0x400187c	      1987	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x4001875	      0xb800000000	                              mov eax, 0	      1988	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x400187a	            0xeb68	                           jmp 0x40018e4	      1988	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x400187c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1991	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x4001881	            0x750a	                           jne 0x400188d	      1991	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x4001883	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1992	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x4001887	        0x488945e8	             mov qword [rbp - 0x18], rax	      1992	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x400188b	            0xeb2b	                           jmp 0x40018b8	      1992	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x400188d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x4001891	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x4001895	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x4001899	      0xbe3f000000	                           mov esi, 0x3f	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x400189e	          0x4889c7	                            mov rdi, rax	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40018a1	      0xe8bae9ffff	                    call sym.d_make_comp	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40018a6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40018aa	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1996	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40018af	            0x7507	                           jne 0x40018b8	      1996	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40018b1	      0xb800000000	                              mov eax, 0	      1997	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40018b6	            0xeb2c	                           jmp 0x40018e4	      1997	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40018b8	        0x837de000	               cmp dword [rbp - 0x20], 0	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x40018bc	     0xf8f5afeffff	                            jg 0x400171c	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x40018c2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40018c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40018ca	      0xb900000000	                              mov ecx, 0	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40018cf	      0xbe3e000000	                           mov esi, 0x3e	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40018d4	          0x4889c7	                            mov rdi, rax	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40018d7	      0xe884e9ffff	                    call sym.d_make_comp	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40018dc	        0x488945e8	             mov qword [rbp - 0x18], rax	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40018e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2003	cp-demangle.c	FUNCTION_30
0x40018e4	              0xc9	                                   leave	      2004	cp-demangle.c	FUNCTION_30
0x40018e5	              0xc3	                                     ret	      2004	cp-demangle.c	FUNCTION_30
d_demangle	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,3:SWITCH,0:WHILE,0	45
0x4009dde	              0x55	                                push rbp	      6293	cp-demangle.c	FUNCTION_97
0x4009ddf	          0x4889e5	                            mov rbp, rsp	      6293	cp-demangle.c	FUNCTION_97
0x4009de2	        0x4883ec60	                           sub rsp, 0x60	      6293	cp-demangle.c	FUNCTION_97
0x4009de6	        0x48897db8	             mov qword [rbp - 0x48], rdi	      6293	cp-demangle.c	FUNCTION_97
0x4009dea	          0x8975b4	             mov dword [rbp - 0x4c], esi	      6293	cp-demangle.c	FUNCTION_97
0x4009ded	        0x488955a8	             mov qword [rbp - 0x58], rdx	      6293	cp-demangle.c	FUNCTION_97
0x4009df1	    0x64488b042528	                mov rax, qword fs:[0x28]	      6293	cp-demangle.c	FUNCTION_97
0x4009dfa	        0x488945f8	                mov qword [rbp - 8], rax	      6293	cp-demangle.c	FUNCTION_97
0x4009dfe	            0x31c0	                            xor eax, eax	      6293	cp-demangle.c	FUNCTION_97
0x4009e00	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6297	cp-demangle.c	FUNCTION_97	CALL_1
0x4009e04	      0xbe00000000	                              mov esi, 0	      6297	cp-demangle.c	FUNCTION_97	CALL_1
0x4009e09	          0x4889c7	                            mov rdi, rax	      6297	cp-demangle.c	FUNCTION_97	CALL_1
0x4009e0c	      0xe86bb1ffff	         call sym.d_growable_string_init	      6297	cp-demangle.c	FUNCTION_97	CALL_1
0x4009e11	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e15	          0x8b75b4	             mov esi, dword [rbp - 0x4c]	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e1c	          0x4889d1	                            mov rcx, rdx	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e1f	      0xba00000000	                              mov edx, 0	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e24	          0x4889c7	                            mov rdi, rax	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e27	      0xe893fbffff	            call sym.d_demangle_callback	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e2c	          0x8945cc	             mov dword [rbp - 0x34], eax	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009e2f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x4009e33	            0x751e	                           jne 0x4009e53	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x4009e35	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x4009e39	          0x4889c7	                            mov rdi, rax	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x4009e3c	      0xe800000000	                          call 0x4009e41	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x4009e41	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6304	cp-demangle.c	FUNCTION_97	IF_1
0x4009e45	    0x48c700000000	                      mov qword [rax], 0	      6304	cp-demangle.c	FUNCTION_97	IF_1
0x4009e4c	      0xb800000000	                              mov eax, 0	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x4009e51	            0xeb1d	                           jmp 0x4009e70	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x4009e53	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6308	cp-demangle.c	FUNCTION_97
0x4009e56	            0x85c0	                           test eax, eax	      6308	cp-demangle.c	FUNCTION_97
0x4009e58	            0x7506	                           jne 0x4009e60	      6308	cp-demangle.c	FUNCTION_97
0x4009e5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6308	cp-demangle.c	FUNCTION_97
0x4009e5e	            0xeb05	                           jmp 0x4009e65	      6308	cp-demangle.c	FUNCTION_97
0x4009e60	      0xb801000000	                              mov eax, 1	      6308	cp-demangle.c	FUNCTION_97
0x4009e65	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6308	cp-demangle.c	FUNCTION_97
0x4009e69	          0x488902	                    mov qword [rdx], rax	      6308	cp-demangle.c	FUNCTION_97
0x4009e6c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6309	cp-demangle.c	FUNCTION_97
0x4009e70	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6310	cp-demangle.c	FUNCTION_97
0x4009e74	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6310	cp-demangle.c	FUNCTION_97
0x4009e7d	            0x7405	                            je 0x4009e84	      6310	cp-demangle.c	FUNCTION_97
0x4009e7f	      0xe800000000	                          call 0x4009e84	      6310	cp-demangle.c	FUNCTION_97
0x4009e84	              0xc9	                                   leave	      6310	cp-demangle.c	FUNCTION_97
0x4009e85	              0xc3	                                     ret	      6310	cp-demangle.c	FUNCTION_97
d_print_cast	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	16
0x4009764	              0x55	                                push rbp	      6112	cp-demangle.c	FUNCTION_94
0x4009765	          0x4889e5	                            mov rbp, rsp	      6112	cp-demangle.c	FUNCTION_94
0x4009768	        0x4883ec20	                           sub rsp, 0x20	      6112	cp-demangle.c	FUNCTION_94
0x400976c	        0x48897df8	                mov qword [rbp - 8], rdi	      6112	cp-demangle.c	FUNCTION_94
0x4009770	          0x8975f4	              mov dword [rbp - 0xc], esi	      6112	cp-demangle.c	FUNCTION_94
0x4009773	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6112	cp-demangle.c	FUNCTION_94
0x4009777	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x400977b	        0x488b5008	                mov rdx, qword [rax + 8]	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x400977f	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4009782	        0x488b45f8	                mov rax, qword [rbp - 8]	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4009786	            0x89ce	                            mov esi, ecx	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4009788	          0x4889c7	                            mov rdi, rax	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x400978b	      0xe869f4ffff	                   call sym.d_print_comp	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4009790	              0x90	                                     nop	      6114	cp-demangle.c	FUNCTION_94
0x4009791	              0xc9	                                   leave	      6114	cp-demangle.c	FUNCTION_94
0x4009792	              0xc3	                                     ret	      6114	cp-demangle.c	FUNCTION_94
d_number_component	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	21
0x40012ba	              0x55	                                push rbp	      1720	cp-demangle.c	FUNCTION_26
0x40012bb	          0x4889e5	                            mov rbp, rsp	      1720	cp-demangle.c	FUNCTION_26
0x40012be	        0x4883ec18	                           sub rsp, 0x18	      1720	cp-demangle.c	FUNCTION_26
0x40012c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1720	cp-demangle.c	FUNCTION_26
0x40012c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1721	cp-demangle.c	FUNCTION_26	CALL_1
0x40012ca	          0x4889c7	                            mov rdi, rax	      1721	cp-demangle.c	FUNCTION_26	CALL_1
0x40012cd	      0xe825efffff	                   call sym.d_make_empty	      1721	cp-demangle.c	FUNCTION_26	CALL_1
0x40012d2	        0x488945f8	                mov qword [rbp - 8], rax	      1721	cp-demangle.c	FUNCTION_26	CALL_1
0x40012d6	      0x48837df800	                  cmp qword [rbp - 8], 0	      1722	cp-demangle.c	FUNCTION_26	IF_1
0x40012db	            0x7421	                            je 0x40012fe	      1722	cp-demangle.c	FUNCTION_26	IF_1
0x40012dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1724	cp-demangle.c	FUNCTION_26	IF_1
0x40012e1	    0xc70041000000	                   mov dword [rax], 0x41	      1724	cp-demangle.c	FUNCTION_26	IF_1
0x40012e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40012eb	          0x4889c7	                            mov rdi, rax	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40012ee	      0xe8e6feffff	                       call sym.d_number	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40012f3	          0x4863d0	                         movsxd rdx, eax	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40012f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40012fa	        0x48895008	                mov qword [rax + 8], rdx	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40012fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      1727	cp-demangle.c	FUNCTION_26
0x4001302	              0xc9	                                   leave	      1728	cp-demangle.c	FUNCTION_26
0x4001303	              0xc3	                                     ret	      1728	cp-demangle.c	FUNCTION_26
d_print_mod_list	IF,7:DO,0:functions,0:ELSE,3:FOR,0:CALL,15:SWITCH,0:WHILE,1	179
0x4008ea3	              0x55	                                push rbp	      5793	cp-demangle.c	FUNCTION_89
0x4008ea4	          0x4889e5	                            mov rbp, rsp	      5793	cp-demangle.c	FUNCTION_89
0x4008ea7	        0x4883ec40	                           sub rsp, 0x40	      5793	cp-demangle.c	FUNCTION_89
0x4008eab	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5793	cp-demangle.c	FUNCTION_89
0x4008eaf	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5793	cp-demangle.c	FUNCTION_89
0x4008eb2	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5793	cp-demangle.c	FUNCTION_89
0x4008eb6	          0x894dd0	             mov dword [rbp - 0x30], ecx	      5793	cp-demangle.c	FUNCTION_89
0x4008eb9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4008ebe	     0xf847b020000	                            je 0x400913f	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4008ec4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4008ec8	          0x4889c7	                            mov rdi, rax	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4008ecb	      0xe8a5c5ffff	              call sym.d_print_saw_error	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4008ed0	            0x85c0	                           test eax, eax	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4008ed2	     0xf8567020000	                           jne 0x400913f	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4008ed8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x4008edc	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x4008edf	            0x85c0	                           test eax, eax	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x4008ee1	            0x751b	                           jne 0x4008efe	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x4008ee3	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x4008ee7	            0x7533	                           jne 0x4008f1c	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x4008ee9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4008eed	        0x488b4008	                mov rax, qword [rax + 8]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4008ef1	            0x8b00	                    mov eax, dword [rax]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4008ef3	            0x89c7	                            mov edi, eax	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4008ef5	      0xe84671ffff	       call sym.is_fnqual_component_type	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4008efa	            0x85c0	                           test eax, eax	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4008efc	            0x741e	                            je 0x4008f1c	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4008efe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4008f02	          0x488b10	                    mov rdx, qword [rax]	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4008f05	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4008f08	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4008f0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4008f0f	          0x4889c7	                            mov rdi, rax	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4008f12	      0xe88cffffff	               call sym.d_print_mod_list	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4008f17	      0xe924020000	                           jmp 0x4009140	      5804	cp-demangle.c	FUNCTION_89	IF_2
0x4008f1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5807	cp-demangle.c	FUNCTION_89
0x4008f20	    0xc74010010000	               mov dword [rax + 0x10], 1	      5807	cp-demangle.c	FUNCTION_89
0x4008f27	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5809	cp-demangle.c	FUNCTION_89
0x4008f2b	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      5809	cp-demangle.c	FUNCTION_89
0x4008f32	        0x488945f0	             mov qword [rbp - 0x10], rax	      5809	cp-demangle.c	FUNCTION_89
0x4008f36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5810	cp-demangle.c	FUNCTION_89
0x4008f3a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5810	cp-demangle.c	FUNCTION_89
0x4008f3e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5810	cp-demangle.c	FUNCTION_89
0x4008f42	    0x488990200100	            mov qword [rax + 0x120], rdx	      5810	cp-demangle.c	FUNCTION_89
0x4008f49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x4008f4d	        0x488b4008	                mov rax, qword [rax + 8]	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x4008f51	            0x8b00	                    mov eax, dword [rax]	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x4008f53	          0x83f829	                           cmp eax, 0x29	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x4008f56	            0x7532	                           jne 0x4008f8a	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x4008f58	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f5c	          0x488b08	                    mov rcx, qword [rax]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f63	        0x488b5008	                mov rdx, qword [rax + 8]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f67	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f6e	          0x4889c7	                            mov rdi, rax	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f71	      0xe8ac040000	          call sym.d_print_function_type	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4008f76	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5815	cp-demangle.c	FUNCTION_89	IF_3
0x4008f7a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5815	cp-demangle.c	FUNCTION_89	IF_3
0x4008f7e	    0x488990200100	            mov qword [rax + 0x120], rdx	      5815	cp-demangle.c	FUNCTION_89	IF_3
0x4008f85	      0xe9b6010000	                           jmp 0x4009140	      5816	cp-demangle.c	FUNCTION_89	IF_3
0x4008f8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008f8e	        0x488b4008	                mov rax, qword [rax + 8]	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008f92	            0x8b00	                    mov eax, dword [rax]	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008f94	          0x83f82a	                           cmp eax, 0x2a	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008f97	            0x7532	                           jne 0x4008fcb	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008f99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008f9d	          0x488b08	                    mov rcx, qword [rax]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008fa0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008fa4	        0x488b5008	                mov rdx, qword [rax + 8]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008fa8	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008fab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008faf	          0x4889c7	                            mov rdi, rax	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008fb2	      0xe825060000	             call sym.d_print_array_type	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4008fb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5821	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008fbb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5821	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008fbf	    0x488990200100	            mov qword [rax + 0x120], rdx	      5821	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008fc6	      0xe975010000	                           jmp 0x4009140	      5822	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4008fcb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fcf	        0x488b4008	                mov rax, qword [rax + 8]	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fd3	            0x8b00	                    mov eax, dword [rax]	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fd5	          0x83f802	                              cmp eax, 2	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fd8	     0xf851e010000	                           jne 0x40090fc	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5834	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fe2	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      5834	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fe9	        0x488945f8	                mov qword [rbp - 8], rax	      5834	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008fed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5835	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008ff1	    0x48c780280100	              mov qword [rax + 0x128], 0	      5835	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4008ffc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4009000	        0x488b4008	                mov rax, qword [rax + 8]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4009004	        0x488b5008	                mov rdx, qword [rax + 8]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4009008	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x400900b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x400900f	            0x89ce	                            mov esi, ecx	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4009011	          0x4889c7	                            mov rdi, rax	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4009014	      0xe8e0fbffff	                   call sym.d_print_comp	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4009019	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5837	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400901d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5837	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4009021	    0x488990280100	            mov qword [rax + 0x128], rdx	      5837	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4009028	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400902b	          0x83e004	                              and eax, 4	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400902e	            0x85c0	                           test eax, eax	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x4009030	            0x7513	                           jne 0x4009045	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x4009032	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5840	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_7
0x4009036	      0xbe00000000	                              mov esi, 0	      5840	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_7
0x400903b	          0x4889c7	                            mov rdi, rax	      5840	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_7
0x400903e	      0xe878c5ffff	                call sym.d_append_string	      5840	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_7
0x4009043	            0xeb11	                           jmp 0x4009056	      5840	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_7
0x4009045	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5842	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_8
0x4009049	      0xbe2e000000	                           mov esi, 0x2e	      5842	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_8
0x400904e	          0x4889c7	                            mov rdi, rax	      5842	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_8
0x4009051	      0xe8b0c4ffff	                  call sym.d_append_char	      5842	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_8
0x4009056	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400905a	        0x488b4008	                mov rax, qword [rax + 8]	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400905e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4009062	        0x488945e8	             mov qword [rbp - 0x18], rax	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4009066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400906a	            0x8b00	                    mov eax, dword [rax]	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400906c	          0x83f846	                           cmp eax, 0x46	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400906f	            0x7554	                           jne 0x40090c5	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x4009071	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5848	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_9
0x4009075	      0xbe00000000	                              mov esi, 0	      5848	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_9
0x400907a	          0x4889c7	                            mov rdi, rax	      5848	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_9
0x400907d	      0xe839c5ffff	                call sym.d_append_string	      5848	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_9
0x4009082	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5849	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_10
0x4009086	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5849	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_10
0x4009089	          0x8d5001	                      lea edx, [rax + 1]	      5849	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_10
0x400908c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5849	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_10
0x4009090	            0x89d6	                            mov esi, edx	      5849	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_10
0x4009092	          0x4889c7	                            mov rdi, rax	      5849	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_10
0x4009095	      0xe856c5ffff	                   call sym.d_append_num	      5849	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_10
0x400909a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5850	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_11
0x400909e	      0xbe00000000	                              mov esi, 0	      5850	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_11
0x40090a3	          0x4889c7	                            mov rdi, rax	      5850	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_11
0x40090a6	      0xe810c5ffff	                call sym.d_append_string	      5850	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7	CALL_11
0x40090ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40090af	        0x488b4008	                mov rax, qword [rax + 8]	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40090b3	        0x488945e8	             mov qword [rbp - 0x18], rax	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40090b7	            0xeb0c	                           jmp 0x40090c5	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40090b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40090bd	        0x488b4008	                mov rax, qword [rax + 8]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40090c1	        0x488945e8	             mov qword [rbp - 0x18], rax	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40090c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40090c9	            0x8b00	                    mov eax, dword [rax]	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40090cb	            0x89c7	                            mov edi, eax	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40090cd	      0xe86e6fffff	       call sym.is_fnqual_component_type	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40090d2	            0x85c0	                           test eax, eax	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40090d4	            0x75e3	                           jne 0x40090b9	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40090d6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40090da	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40090dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40090e1	            0x89ce	                            mov esi, ecx	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40090e3	          0x4889c7	                            mov rdi, rax	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40090e6	      0xe80efbffff	                   call sym.d_print_comp	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40090eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5859	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40090ef	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5859	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40090f3	    0x488990200100	            mov qword [rax + 0x120], rdx	      5859	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40090fa	            0xeb44	                           jmp 0x4009140	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40090fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x4009100	        0x488b5008	                mov rdx, qword [rax + 8]	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x4009104	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x4009107	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400910b	            0x89ce	                            mov esi, ecx	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400910d	          0x4889c7	                            mov rdi, rax	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x4009110	      0xe82d000000	                    call sym.d_print_mod	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x4009115	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5865	cp-demangle.c	FUNCTION_89
0x4009119	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5865	cp-demangle.c	FUNCTION_89
0x400911d	    0x488990200100	            mov qword [rax + 0x120], rdx	      5865	cp-demangle.c	FUNCTION_89
0x4009124	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x4009128	          0x488b10	                    mov rdx, qword [rax]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x400912b	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x400912e	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x4009131	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x4009135	          0x4889c7	                            mov rdi, rax	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x4009138	      0xe866fdffff	               call sym.d_print_mod_list	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x400913d	            0xeb01	                           jmp 0x4009140	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x400913f	              0x90	                                     nop	      5797	cp-demangle.c	FUNCTION_89	IF_1
0x4009140	              0xc9	                                   leave	      5868	cp-demangle.c	FUNCTION_89
0x4009141	              0xc3	                                     ret	      5868	cp-demangle.c	FUNCTION_89
d_print_comp_inner	IF,91:DO,0:functions,0:ELSE,17:FOR,3:CALL,237:SWITCH,4:WHILE,5	2332
0x4006000	              0x55	                                push rbp	      4623	cp-demangle.c	FUNCTION_86
0x4006001	          0x4889e5	                            mov rbp, rsp	      4623	cp-demangle.c	FUNCTION_86
0x4006004	    0x4881ec000200	                          sub rsp, 0x200	      4623	cp-demangle.c	FUNCTION_86
0x400600b	    0x4889bd18feff	            mov qword [rbp - 0x1e8], rdi	      4623	cp-demangle.c	FUNCTION_86
0x4006012	    0x89b514feffff	            mov dword [rbp - 0x1ec], esi	      4623	cp-demangle.c	FUNCTION_86
0x4006018	    0x48899508feff	            mov qword [rbp - 0x1f8], rdx	      4623	cp-demangle.c	FUNCTION_86
0x400601f	    0x64488b042528	                mov rax, qword fs:[0x28]	      4623	cp-demangle.c	FUNCTION_86
0x4006028	        0x488945f8	                mov qword [rbp - 8], rax	      4623	cp-demangle.c	FUNCTION_86
0x400602c	            0x31c0	                            xor eax, eax	      4623	cp-demangle.c	FUNCTION_86
0x400602e	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	      4626	cp-demangle.c	FUNCTION_86
0x4006039	    0xc78520feffff	              mov dword [rbp - 0x1e0], 0	      4633	cp-demangle.c	FUNCTION_86
0x4006043	    0x4883bd08feff	              cmp qword [rbp - 0x1f8], 0	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x400604b	            0x7514	                           jne 0x4006061	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x400604d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4637	cp-demangle.c	FUNCTION_86	IF_1	CALL_1
0x4006054	          0x4889c7	                            mov rdi, rax	      4637	cp-demangle.c	FUNCTION_86	IF_1	CALL_1
0x4006057	      0xe800f4ffff	                  call sym.d_print_error	      4637	cp-demangle.c	FUNCTION_86	IF_1	CALL_1
0x400605c	      0xe9822b0000	                           jmp 0x4008be3	      4638	cp-demangle.c	FUNCTION_86	IF_1
0x4006061	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4006068	          0x4889c7	                            mov rdi, rax	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x400606b	      0xe805f4ffff	              call sym.d_print_saw_error	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4006070	            0x85c0	                           test eax, eax	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4006072	     0xf854c2b0000	                           jne 0x4008bc4	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4006078	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400607f	            0x8b00	                    mov eax, dword [rax]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006081	          0x83f84f	                           cmp eax, 0x4f	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006084	     0xf87282b0000	                            ja 0x4008bb2	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400608a	            0x89c0	                            mov eax, eax	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400608c	    0x488b04c50000	                  mov rax, qword [rax*8]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006094	            0xffe0	                                 jmp rax	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006096	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x400609c	          0x83e004	                              and eax, 4	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x400609f	            0x85c0	                           test eax, eax	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x40060a1	            0x752f	                           jne 0x40060d2	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x40060a3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060aa	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060ad	          0x4863d0	                         movsxd rdx, eax	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060b0	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060b7	        0x488b4808	                mov rcx, qword [rax + 8]	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060bb	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060c2	          0x4889ce	                            mov rsi, rcx	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060c5	          0x4889c7	                            mov rdi, rax	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060c8	      0xe89ff4ffff	                call sym.d_append_buffer	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40060cd	      0xe9112b0000	                           jmp 0x4008be3	      4650	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40060d2	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060d9	          0x8b5010	            mov edx, dword [rax + 0x10] 	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060dc	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060e3	        0x488b4808	                mov rcx, qword [rax + 8]	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060e7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060ee	          0x4889ce	                            mov rsi, rcx	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060f1	          0x4889c7	                            mov rdi, rax	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060f4	      0xe8072c0000	        call sym.d_print_java_identifier	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40060f9	      0xe9e52a0000	                           jmp 0x4008be3	      4650	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40060fe	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4006105	        0x488b5008	                mov rdx, qword [rax + 8]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4006109	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x400610f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4006116	            0x89ce	                            mov esi, ecx	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4006118	          0x4889c7	                            mov rdi, rax	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x400611b	      0xe8d92a0000	                   call sym.d_print_comp	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4006120	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4654	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_6
0x4006127	      0xbe00000000	                              mov esi, 0	      4654	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_6
0x400612c	          0x4889c7	                            mov rdi, rax	      4654	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_6
0x400612f	      0xe887f4ffff	                call sym.d_append_string	      4654	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_6
0x4006134	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x400613b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x400613f	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4006145	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x400614c	            0x89ce	                            mov esi, ecx	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x400614e	          0x4889c7	                            mov rdi, rax	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4006151	      0xe8a32a0000	                   call sym.d_print_comp	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4006156	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4656	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_8
0x400615d	      0xbe5d000000	                           mov esi, 0x5d	      4656	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_8
0x4006162	          0x4889c7	                            mov rdi, rax	      4656	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_8
0x4006165	      0xe89cf3ffff	                  call sym.d_append_char	      4656	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_8
0x400616a	      0xe9742a0000	                           jmp 0x4008be3	      4657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400616f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4006176	        0x488b5008	                mov rdx, qword [rax + 8]	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x400617a	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4006180	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4006187	            0x89ce	                            mov esi, ecx	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4006189	          0x4889c7	                            mov rdi, rax	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x400618c	      0xe8682a0000	                   call sym.d_print_comp	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4006191	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x4006197	          0x83e004	                              and eax, 4	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x400619a	            0x85c0	                           test eax, eax	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x400619c	            0x7516	                           jne 0x40061b4	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x400619e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4663	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_10
0x40061a5	      0xbe00000000	                              mov esi, 0	      4663	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_10
0x40061aa	          0x4889c7	                            mov rdi, rax	      4663	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_10
0x40061ad	      0xe809f4ffff	                call sym.d_append_string	      4663	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_10
0x40061b2	            0xeb14	                           jmp 0x40061c8	      4663	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_10
0x40061b4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4665	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_11
0x40061bb	      0xbe2e000000	                           mov esi, 0x2e	      4665	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_11
0x40061c0	          0x4889c7	                            mov rdi, rax	      4665	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_11
0x40061c3	      0xe83ef3ffff	                  call sym.d_append_char	      4665	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_11
0x40061c8	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40061cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40061d3	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      4667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40061da	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x40061e1	            0x8b00	                    mov eax, dword [rax]	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x40061e3	          0x83f846	                           cmp eax, 0x46	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x40061e6	            0x7558	                           jne 0x4006240	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x40061e8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4670	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_12
0x40061ef	      0xbe00000000	                              mov esi, 0	      4670	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_12
0x40061f4	          0x4889c7	                            mov rdi, rax	      4670	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_12
0x40061f7	      0xe8bff3ffff	                call sym.d_append_string	      4670	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_12
0x40061fc	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4006203	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4006206	          0x8d5001	                      lea edx, [rax + 1]	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4006209	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4006210	            0x89d6	                            mov esi, edx	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4006212	          0x4889c7	                            mov rdi, rax	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4006215	      0xe8d6f3ffff	                   call sym.d_append_num	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x400621a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4672	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_14
0x4006221	      0xbe00000000	                              mov esi, 0	      4672	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_14
0x4006226	          0x4889c7	                            mov rdi, rax	      4672	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_14
0x4006229	      0xe88df3ffff	                call sym.d_append_string	      4672	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_14
0x400622e	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      4673	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4006235	        0x488b4008	                mov rax, qword [rax + 8]	      4673	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4006239	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      4673	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4006240	    0x488b9558feff	            mov rdx, qword [rbp - 0x1a8]	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4006247	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x400624d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4006254	            0x89ce	                            mov esi, ecx	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4006256	          0x4889c7	                            mov rdi, rax	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4006259	      0xe89b290000	                   call sym.d_print_comp	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x400625e	      0xe980290000	                           jmp 0x4008be3	      4677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006263	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4690	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400626a	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      4690	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006271	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      4690	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006278	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4691	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400627f	    0x48c780280100	              mov qword [rax + 0x128], 0	      4691	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400628a	    0xc78524feffff	              mov dword [rbp - 0x1dc], 0	      4692	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006294	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4693	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400629b	        0x488b4008	                mov rax, qword [rax + 8]	      4693	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400629f	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      4693	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40062a6	      0xe9e8000000	                           jmp 0x4006393	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062ab	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 3	      4696	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6
0x40062b2	            0x7614	                           jbe 0x40062c8	      4696	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6
0x40062b4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4698	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6	CALL_16
0x40062bb	          0x4889c7	                            mov rdi, rax	      4698	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6	CALL_16
0x40062be	      0xe899f1ffff	                  call sym.d_print_error	      4698	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6	CALL_16
0x40062c3	      0xe91b290000	                           jmp 0x4008be3	      4699	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6
0x40062c8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062cf	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062d6	    0x8b9524feffff	            mov edx, dword [rbp - 0x1dc]	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062dc	        0x48c1e205	                              shl rdx, 5	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062e0	          0x4801ea	                            add rdx, rbp	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062e3	    0x4881ea900000	                           sub rdx, 0x90	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062ea	          0x488902	                    mov qword [rdx], rax	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062ed	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062f4	    0x8b9524feffff	            mov edx, dword [rbp - 0x1dc]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062fa	        0x48c1e205	                              shl rdx, 5	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40062fe	          0x4801c2	                            add rdx, rax	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006301	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006308	    0x488990280100	            mov qword [rax + 0x128], rdx	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400630f	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006315	        0x48c1e005	                              shl rax, 5	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006319	          0x4801e8	                            add rax, rbp	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400631c	    0x488d9078ffff	                   lea rdx, [rax - 0x88]	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006323	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400632a	          0x488902	                    mov qword [rdx], rax	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400632d	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006333	        0x48c1e005	                              shl rax, 5	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006337	          0x4801e8	                            add rax, rbp	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400633a	        0x4883c080	             add rax, 0xffffffffffffff80	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400633e	    0xc70000000000	                      mov dword [rax], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006344	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400634b	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006352	    0x8b9524feffff	            mov edx, dword [rbp - 0x1dc]	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006358	        0x48c1e205	                              shl rdx, 5	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400635c	          0x4801ea	                            add rdx, rbp	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400635f	        0x4883ea78	                           sub rdx, 0x78	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006363	          0x488902	                    mov qword [rdx], rax	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006366	    0x838524feffff	              add dword [rbp - 0x1dc], 1	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400636d	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4006374	            0x8b00	                    mov eax, dword [rax]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4006376	            0x89c7	                            mov edi, eax	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4006378	      0xe8c39cffff	       call sym.is_fnqual_component_type	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x400637d	            0x85c0	                           test eax, eax	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x400637f	            0x7422	                            je 0x40063a3	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4006381	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006388	        0x488b4008	                mov rax, qword [rax + 8]	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400638c	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4006393	    0x4883bd60feff	              cmp qword [rbp - 0x1a0], 0	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400639b	     0xf850affffff	                           jne 0x40062ab	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40063a1	            0xeb01	                           jmp 0x40063a4	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40063a3	              0x90	                                     nop	      4710	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7
0x40063a4	    0x4883bd60feff	              cmp qword [rbp - 0x1a0], 0	      4715	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8
0x40063ac	            0x7514	                           jne 0x40063c2	      4715	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8
0x40063ae	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4717	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8	CALL_18
0x40063b5	          0x4889c7	                            mov rdi, rax	      4717	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8	CALL_18
0x40063b8	      0xe89ff0ffff	                  call sym.d_print_error	      4717	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8	CALL_18
0x40063bd	      0xe921280000	                           jmp 0x4008be3	      4718	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8
0x40063c2	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40063c9	            0x8b00	                    mov eax, dword [rax]	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40063cb	          0x83f802	                              cmp eax, 2	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40063ce	     0xf85a3010000	                           jne 0x4006577	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40063d4	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4727	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40063db	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4727	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40063df	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      4727	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40063e6	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40063ed	            0x8b00	                    mov eax, dword [rax]	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40063ef	          0x83f846	                           cmp eax, 0x46	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40063f2	            0x7512	                           jne 0x4006406	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40063f4	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4729	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40063fb	        0x488b4008	                mov rax, qword [rax + 8]	      4729	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40063ff	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      4729	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x4006406	    0x4883bd60feff	              cmp qword [rbp - 0x1a0], 0	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x400640e	     0xf854b010000	                           jne 0x400655f	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x4006414	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4732	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11	CALL_19
0x400641b	          0x4889c7	                            mov rdi, rax	      4732	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11	CALL_19
0x400641e	      0xe839f0ffff	                  call sym.d_print_error	      4732	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11	CALL_19
0x4006423	      0xe9bb270000	                           jmp 0x4008be3	      4733	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x4006428	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 3	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x400642f	            0x7614	                           jbe 0x4006445	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4006431	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4739	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12	CALL_21
0x4006438	          0x4889c7	                            mov rdi, rax	      4739	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12	CALL_21
0x400643b	      0xe81cf0ffff	                  call sym.d_print_error	      4739	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12	CALL_21
0x4006440	      0xe99e270000	                           jmp 0x4008be3	      4740	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4006445	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400644b	          0x8d50ff	                      lea edx, [rax - 1]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400644e	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006454	        0x48c1e005	                              shl rax, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006458	          0x4801e8	                            add rax, rbp	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400645b	    0x482d90000000	                           sub rax, 0x90	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006461	            0x89d2	                            mov edx, edx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006463	        0x48c1e205	                              shl rdx, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006467	          0x4801ea	                            add rdx, rbp	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400646a	    0x4881ea900000	                           sub rdx, 0x90	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006471	          0x488b0a	                    mov rcx, qword [rdx]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006474	          0x488908	                    mov qword [rax], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006477	        0x488b4a08	                mov rcx, qword [rdx + 8]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400647b	        0x48894808	                mov qword [rax + 8], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400647f	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006483	        0x48894810	             mov qword [rax + 0x10], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006487	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400648b	        0x48895018	             mov qword [rax + 0x18], rdx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400648f	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006495	          0x8d50ff	                      lea edx, [rax - 1]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006498	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400649f	            0x89d2	                            mov edx, edx	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064a1	        0x48c1e205	                              shl rdx, 5	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064a5	          0x4801c2	                            add rdx, rax	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064a8	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064ae	        0x48c1e005	                              shl rax, 5	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064b2	          0x4801e8	                            add rax, rbp	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064b5	    0x482d90000000	                           sub rax, 0x90	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064bb	          0x488910	                    mov qword [rax], rdx	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064be	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064c5	    0x8b9524feffff	            mov edx, dword [rbp - 0x1dc]	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064cb	        0x48c1e205	                              shl rdx, 5	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064cf	          0x4801c2	                            add rdx, rax	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064d2	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064d9	    0x488990280100	            mov qword [rax + 0x128], rdx	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064e0	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064e6	          0x83e801	                              sub eax, 1	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064e9	            0x89c0	                            mov eax, eax	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064eb	        0x48c1e005	                              shl rax, 5	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064ef	          0x4801e8	                            add rax, rbp	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064f2	    0x488d9078ffff	                   lea rdx, [rax - 0x88]	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40064f9	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006500	          0x488902	                    mov qword [rdx], rax	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006503	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006509	          0x83e801	                              sub eax, 1	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400650c	            0x89c0	                            mov eax, eax	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400650e	        0x48c1e005	                              shl rax, 5	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006512	          0x4801e8	                            add rax, rbp	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006515	        0x4883c080	             add rax, 0xffffffffffffff80	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006519	    0xc70000000000	                      mov dword [rax], 0	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400651f	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006525	          0x8d50ff	                      lea edx, [rax - 1]	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006528	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400652f	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006536	            0x89d2	                            mov edx, edx	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006538	        0x48c1e205	                              shl rdx, 5	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400653c	          0x4801ea	                            add rdx, rbp	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400653f	        0x4883ea78	                           sub rdx, 0x78	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006543	          0x488902	                    mov qword [rdx], rax	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006546	    0x838524feffff	              add dword [rbp - 0x1dc], 1	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400654d	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006554	        0x488b4008	                mov rax, qword [rax + 8]	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4006558	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400655f	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4006566	            0x8b00	                    mov eax, dword [rax]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4006568	            0x89c7	                            mov edi, eax	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400656a	      0xe8d19affff	       call sym.is_fnqual_component_type	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400656f	            0x85c0	                           test eax, eax	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4006571	     0xf85b1feffff	                           jne 0x4006428	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4006577	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400657e	            0x8b00	                    mov eax, dword [rax]	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4006580	          0x83f804	                              cmp eax, 4	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4006583	            0x7538	                           jne 0x40065bd	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4006585	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4760	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400658c	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      4760	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4006593	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4760	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400659a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x40065a1	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x40065a8	    0x488990200100	            mov qword [rax + 0x120], rdx	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x40065af	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4762	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x40065b6	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4762	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x40065bd	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x40065c4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x40065c8	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x40065ce	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x40065d5	            0x89ce	                            mov esi, ecx	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x40065d7	          0x4889c7	                            mov rdi, rax	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x40065da	      0xe81a260000	                   call sym.d_print_comp	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x40065df	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40065e6	            0x8b00	                    mov eax, dword [rax]	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40065e8	          0x83f804	                              cmp eax, 4	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40065eb	            0x7576	                           jne 0x4006663	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40065ed	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40065f4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40065fb	    0x488990200100	            mov qword [rax + 0x120], rdx	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4006602	            0xeb5f	                           jmp 0x4006663	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4006604	    0x83ad24feffff	              sub dword [rbp - 0x1dc], 1	      4774	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x400660b	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4006611	        0x48c1e005	                              shl rax, 5	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4006615	          0x4801e8	                            add rax, rbp	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4006618	        0x4883c080	             add rax, 0xffffffffffffff80	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x400661c	            0x8b00	                    mov eax, dword [rax]	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x400661e	            0x85c0	                           test eax, eax	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4006620	            0x7541	                           jne 0x4006663	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4006622	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4777	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_23
0x4006629	      0xbe20000000	                           mov esi, 0x20	      4777	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_23
0x400662e	          0x4889c7	                            mov rdi, rax	      4777	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_23
0x4006631	      0xe8d0eeffff	                  call sym.d_append_char	      4777	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_23
0x4006636	    0x8b8524feffff	            mov eax, dword [rbp - 0x1dc]	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400663c	        0x48c1e005	                              shl rax, 5	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4006640	          0x4801e8	                            add rax, rbp	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4006643	    0x482d88000000	                           sub rax, 0x88	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4006649	          0x488b10	                    mov rdx, qword [rax]	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400664c	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4006652	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4006659	            0x89ce	                            mov esi, ecx	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400665b	          0x4889c7	                            mov rdi, rax	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400665e	      0xe8df2a0000	                    call sym.d_print_mod	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4006663	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 0	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x400666a	            0x7598	                           jne 0x4006604	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x400666c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4782	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006673	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      4782	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400667a	    0x488990280100	            mov qword [rax + 0x128], rdx	      4782	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006681	              0x90	                                     nop	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006682	      0xe95c250000	                           jmp 0x4008be3	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006687	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4795	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400668e	    0x488b80700100	           mov rax, qword [rax + 0x170] 	      4795	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006695	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      4795	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400669c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4796	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066a3	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      4796	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066aa	    0x488990700100	            mov qword [rax + 0x170], rdx	      4796	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066b1	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4802	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066b8	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      4802	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066bf	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      4802	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066c6	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4803	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066cd	    0x48c780280100	              mov qword [rax + 0x128], 0	      4803	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066d8	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4805	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066df	        0x488b4008	                mov rax, qword [rax + 8]	      4805	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066e3	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      4805	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40066ea	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40066f0	          0x83e004	                              and eax, 4	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40066f3	            0x85c0	                           test eax, eax	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40066f5	            0x7478	                            je 0x400676f	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40066f7	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40066fe	            0x8b00	                    mov eax, dword [rax]	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4006700	            0x85c0	                           test eax, eax	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4006702	            0x756b	                           jne 0x400676f	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4006704	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x400670b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x400670e	          0x83f806	                              cmp eax, 6	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4006711	            0x755c	                           jne 0x400676f	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4006713	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x400671a	        0x488b4008	                mov rax, qword [rax + 8]	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x400671e	      0xba06000000	                              mov edx, 6	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4006723	      0xbe00000000	                              mov esi, 0	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4006728	          0x4889c7	                            mov rdi, rax	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x400672b	      0xe800000000	                          call 0x4006730	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4006730	            0x85c0	                           test eax, eax	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4006732	            0x753b	                           jne 0x400676f	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4006734	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x400673b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x400673f	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x4006745	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x400674c	            0x89ce	                            mov esi, ecx	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x400674e	          0x4889c7	                            mov rdi, rax	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x4006751	      0xe8a3240000	                   call sym.d_print_comp	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x4006756	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4816	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_27
0x400675d	      0xbe00000000	                              mov esi, 0	      4816	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_27
0x4006762	          0x4889c7	                            mov rdi, rax	      4816	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_27
0x4006765	      0xe851eeffff	                call sym.d_append_string	      4816	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_27
0x400676a	      0xe9b6000000	                           jmp 0x4006825	      4816	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_27
0x400676f	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4006776	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x400677c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4006783	            0x89ce	                            mov esi, ecx	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4006785	          0x4889c7	                            mov rdi, rax	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4006788	      0xe86c240000	                   call sym.d_print_comp	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x400678d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x4006794	          0x4889c7	                            mov rdi, rax	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x4006797	      0xe8b5eeffff	                    call sym.d_last_char	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x400679c	            0x3c3c	                            cmp al, 0x3c	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x400679e	            0x7514	                           jne 0x40067b4	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x40067a0	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4822	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_30
0x40067a7	      0xbe20000000	                           mov esi, 0x20	      4822	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_30
0x40067ac	          0x4889c7	                            mov rdi, rax	      4822	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_30
0x40067af	      0xe852edffff	                  call sym.d_append_char	      4822	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_30
0x40067b4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4823	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_31
0x40067bb	      0xbe3c000000	                           mov esi, 0x3c	      4823	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_31
0x40067c0	          0x4889c7	                            mov rdi, rax	      4823	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_31
0x40067c3	      0xe83eedffff	                  call sym.d_append_char	      4823	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_31
0x40067c8	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40067cf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40067d3	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40067d9	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40067e0	            0x89ce	                            mov esi, ecx	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40067e2	          0x4889c7	                            mov rdi, rax	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40067e5	      0xe80f240000	                   call sym.d_print_comp	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40067ea	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x40067f1	          0x4889c7	                            mov rdi, rax	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x40067f4	      0xe858eeffff	                    call sym.d_last_char	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x40067f9	            0x3c3e	                            cmp al, 0x3e	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x40067fb	            0x7514	                           jne 0x4006811	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x40067fd	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4828	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_34
0x4006804	      0xbe20000000	                           mov esi, 0x20	      4828	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_34
0x4006809	          0x4889c7	                            mov rdi, rax	      4828	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_34
0x400680c	      0xe8f5ecffff	                  call sym.d_append_char	      4828	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_34
0x4006811	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4829	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_35
0x4006818	      0xbe3e000000	                           mov esi, 0x3e	      4829	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_35
0x400681d	          0x4889c7	                            mov rdi, rax	      4829	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_35
0x4006820	      0xe8e1ecffff	                  call sym.d_append_char	      4829	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_35
0x4006825	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4832	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400682c	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	      4832	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006833	    0x488990280100	            mov qword [rax + 0x128], rdx	      4832	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400683a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4833	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006841	    0x488b95b0feff	            mov rdx, qword [rbp - 0x150]	      4833	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006848	    0x488990700100	            mov qword [rax + 0x170], rdx	      4833	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400684f	      0xe98f230000	                           jmp 0x4008be3	      4835	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006854	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x400685b	    0x8b8038010000	           mov eax, dword [rax + 0x138] 	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4006861	            0x85c0	                           test eax, eax	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4006863	            0x743f	                            je 0x40068a4	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4006865	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4844	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_36
0x400686c	      0xba05000000	                              mov edx, 5	      4844	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_36
0x4006871	      0xbe00000000	                              mov esi, 0	      4844	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_36
0x4006876	          0x4889c7	                            mov rdi, rax	      4844	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_36
0x4006879	      0xe8eeecffff	                call sym.d_append_buffer	      4844	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_36
0x400687e	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x4006885	        0x488b4008	                mov rax, qword [rax + 8]	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x4006889	          0x83c001	                              add eax, 1	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x400688c	            0x89c2	                            mov edx, eax	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x400688e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x4006895	            0x89d6	                            mov esi, edx	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x4006897	          0x4889c7	                            mov rdi, rax	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x400689a	      0xe851edffff	                   call sym.d_append_num	      4845	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19	CALL_37
0x400689f	      0xe93f230000	                           jmp 0x4008be3	      4873	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40068a4	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40068ab	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40068b2	          0x4889d6	                            mov rsi, rdx	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40068b5	          0x4889c7	                            mov rdi, rax	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40068b8	      0xe8a3f0ffff	     call sym.d_lookup_template_argument	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40068bd	    0x48898568feff	            mov qword [rbp - 0x198], rax	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40068c4	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40068cc	            0x7433	                            je 0x4006901	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40068ce	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40068d5	            0x8b00	                    mov eax, dword [rax]	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40068d7	          0x83f82f	                           cmp eax, 0x2f	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40068da	            0x7525	                           jne 0x4006901	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40068dc	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40068e3	    0x8b903c010000	           mov edx, dword [rax + 0x13c] 	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40068e9	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40068f0	            0x89d6	                            mov esi, edx	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40068f2	          0x4889c7	                            mov rdi, rax	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40068f5	      0xe8f5efffff	      call sym.d_index_template_argument	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40068fa	    0x48898568feff	            mov qword [rbp - 0x198], rax	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x4006901	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x4006909	            0x7514	                           jne 0x400691f	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x400690b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4857	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21	CALL_40
0x4006912	          0x4889c7	                            mov rdi, rax	      4857	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21	CALL_40
0x4006915	      0xe842ebffff	                  call sym.d_print_error	      4857	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21	CALL_40
0x400691a	      0xe9c4220000	                           jmp 0x4008be3	      4858	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x400691f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4866	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4006926	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      4866	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x400692d	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      4866	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4006934	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x400693b	          0x488b10	                    mov rdx, qword [rax]	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x400693e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4006945	    0x488990200100	            mov qword [rax + 0x120], rdx	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x400694c	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4006953	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4006959	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4006960	            0x89ce	                            mov esi, ecx	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4006962	          0x4889c7	                            mov rdi, rax	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4006965	      0xe88f220000	                   call sym.d_print_comp	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x400696a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4006971	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4006978	    0x488990200100	            mov qword [rax + 0x120], rdx	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x400697f	      0xe95f220000	                           jmp 0x4008be3	      4873	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006984	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x400698b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x400698f	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x4006995	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x400699c	            0x89ce	                            mov esi, ecx	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x400699e	          0x4889c7	                            mov rdi, rax	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x40069a1	      0xe853220000	                   call sym.d_print_comp	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x40069a6	      0xe938220000	                           jmp 0x4008be3	      4877	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40069ab	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4880	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_43
0x40069b2	      0xbe7e000000	                           mov esi, 0x7e	      4880	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_43
0x40069b7	          0x4889c7	                            mov rdi, rax	      4880	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_43
0x40069ba	      0xe847ebffff	                  call sym.d_append_char	      4880	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_43
0x40069bf	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x40069c6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x40069ca	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x40069d0	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x40069d7	            0x89ce	                            mov esi, ecx	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x40069d9	          0x4889c7	                            mov rdi, rax	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x40069dc	      0xe818220000	                   call sym.d_print_comp	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x40069e1	      0xe9fd210000	                           jmp 0x4008be3	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40069e6	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4885	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_45
0x40069ed	      0xbe00000000	                              mov esi, 0	      4885	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_45
0x40069f2	          0x4889c7	                            mov rdi, rax	      4885	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_45
0x40069f5	      0xe8c1ebffff	                call sym.d_append_string	      4885	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_45
0x40069fa	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4006a01	        0x488b5008	                mov rdx, qword [rax + 8]	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4006a05	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4006a0b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4006a12	            0x89ce	                            mov esi, ecx	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4006a14	          0x4889c7	                            mov rdi, rax	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4006a17	      0xe8dd210000	                   call sym.d_print_comp	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4006a1c	      0xe9c2210000	                           jmp 0x4008be3	      4887	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006a21	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4890	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_47
0x4006a28	      0xbe00000000	                              mov esi, 0	      4890	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_47
0x4006a2d	          0x4889c7	                            mov rdi, rax	      4890	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_47
0x4006a30	      0xe886ebffff	                call sym.d_append_string	      4890	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_47
0x4006a35	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4006a3c	        0x488b5008	                mov rdx, qword [rax + 8]	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4006a40	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4006a46	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4006a4d	            0x89ce	                            mov esi, ecx	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4006a4f	          0x4889c7	                            mov rdi, rax	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4006a52	      0xe8a2210000	                   call sym.d_print_comp	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4006a57	      0xe987210000	                           jmp 0x4008be3	      4892	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006a5c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4895	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_49
0x4006a63	      0xbe00000000	                              mov esi, 0	      4895	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_49
0x4006a68	          0x4889c7	                            mov rdi, rax	      4895	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_49
0x4006a6b	      0xe84bebffff	                call sym.d_append_string	      4895	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_49
0x4006a70	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4006a77	        0x488b5008	                mov rdx, qword [rax + 8]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4006a7b	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4006a81	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4006a88	            0x89ce	                            mov esi, ecx	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4006a8a	          0x4889c7	                            mov rdi, rax	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4006a8d	      0xe867210000	                   call sym.d_print_comp	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4006a92	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4897	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_51
0x4006a99	      0xbe00000000	                              mov esi, 0	      4897	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_51
0x4006a9e	          0x4889c7	                            mov rdi, rax	      4897	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_51
0x4006aa1	      0xe815ebffff	                call sym.d_append_string	      4897	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_51
0x4006aa6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4006aad	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4006ab1	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4006ab7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4006abe	            0x89ce	                            mov esi, ecx	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4006ac0	          0x4889c7	                            mov rdi, rax	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4006ac3	      0xe831210000	                   call sym.d_print_comp	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4006ac8	      0xe916210000	                           jmp 0x4008be3	      4899	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006acd	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4902	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_53
0x4006ad4	      0xbe00000000	                              mov esi, 0	      4902	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_53
0x4006ad9	          0x4889c7	                            mov rdi, rax	      4902	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_53
0x4006adc	      0xe8daeaffff	                call sym.d_append_string	      4902	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_53
0x4006ae1	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4006ae8	        0x488b5008	                mov rdx, qword [rax + 8]	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4006aec	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4006af2	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4006af9	            0x89ce	                            mov esi, ecx	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4006afb	          0x4889c7	                            mov rdi, rax	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4006afe	      0xe8f6200000	                   call sym.d_print_comp	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4006b03	      0xe9db200000	                           jmp 0x4008be3	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006b08	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4907	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_55
0x4006b0f	      0xbe00000000	                              mov esi, 0	      4907	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_55
0x4006b14	          0x4889c7	                            mov rdi, rax	      4907	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_55
0x4006b17	      0xe89feaffff	                call sym.d_append_string	      4907	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_55
0x4006b1c	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4006b23	        0x488b5008	                mov rdx, qword [rax + 8]	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4006b27	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4006b2d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4006b34	            0x89ce	                            mov esi, ecx	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4006b36	          0x4889c7	                            mov rdi, rax	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4006b39	      0xe8bb200000	                   call sym.d_print_comp	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4006b3e	      0xe9a0200000	                           jmp 0x4008be3	      4909	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006b43	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4912	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_57
0x4006b4a	      0xbe00000000	                              mov esi, 0	      4912	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_57
0x4006b4f	          0x4889c7	                            mov rdi, rax	      4912	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_57
0x4006b52	      0xe864eaffff	                call sym.d_append_string	      4912	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_57
0x4006b57	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4006b5e	        0x488b5008	                mov rdx, qword [rax + 8]	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4006b62	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4006b68	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4006b6f	            0x89ce	                            mov esi, ecx	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4006b71	          0x4889c7	                            mov rdi, rax	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4006b74	      0xe880200000	                   call sym.d_print_comp	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4006b79	      0xe965200000	                           jmp 0x4008be3	      4914	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006b7e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4917	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_59
0x4006b85	      0xbe00000000	                              mov esi, 0	      4917	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_59
0x4006b8a	          0x4889c7	                            mov rdi, rax	      4917	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_59
0x4006b8d	      0xe829eaffff	                call sym.d_append_string	      4917	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_59
0x4006b92	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4006b99	        0x488b5008	                mov rdx, qword [rax + 8]	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4006b9d	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4006ba3	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4006baa	            0x89ce	                            mov esi, ecx	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4006bac	          0x4889c7	                            mov rdi, rax	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4006baf	      0xe845200000	                   call sym.d_print_comp	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4006bb4	      0xe92a200000	                           jmp 0x4008be3	      4919	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006bb9	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4922	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_61
0x4006bc0	      0xbe00000000	                              mov esi, 0	      4922	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_61
0x4006bc5	          0x4889c7	                            mov rdi, rax	      4922	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_61
0x4006bc8	      0xe8eee9ffff	                call sym.d_append_string	      4922	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_61
0x4006bcd	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4006bd4	        0x488b5008	                mov rdx, qword [rax + 8]	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4006bd8	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4006bde	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4006be5	            0x89ce	                            mov esi, ecx	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4006be7	          0x4889c7	                            mov rdi, rax	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4006bea	      0xe80a200000	                   call sym.d_print_comp	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4006bef	      0xe9ef1f0000	                           jmp 0x4008be3	      4924	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006bf4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4927	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_63
0x4006bfb	      0xbe00000000	                              mov esi, 0	      4927	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_63
0x4006c00	          0x4889c7	                            mov rdi, rax	      4927	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_63
0x4006c03	      0xe8b3e9ffff	                call sym.d_append_string	      4927	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_63
0x4006c08	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4006c0f	        0x488b5008	                mov rdx, qword [rax + 8]	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4006c13	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4006c19	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4006c20	            0x89ce	                            mov esi, ecx	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4006c22	          0x4889c7	                            mov rdi, rax	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4006c25	      0xe8cf1f0000	                   call sym.d_print_comp	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4006c2a	      0xe9b41f0000	                           jmp 0x4008be3	      4929	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006c2f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4932	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_65
0x4006c36	      0xbe00000000	                              mov esi, 0	      4932	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_65
0x4006c3b	          0x4889c7	                            mov rdi, rax	      4932	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_65
0x4006c3e	      0xe878e9ffff	                call sym.d_append_string	      4932	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_65
0x4006c43	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4006c4a	        0x488b5008	                mov rdx, qword [rax + 8]	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4006c4e	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4006c54	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4006c5b	            0x89ce	                            mov esi, ecx	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4006c5d	          0x4889c7	                            mov rdi, rax	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4006c60	      0xe8941f0000	                   call sym.d_print_comp	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4006c65	      0xe9791f0000	                           jmp 0x4008be3	      4934	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006c6a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4937	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_67
0x4006c71	      0xbe00000000	                              mov esi, 0	      4937	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_67
0x4006c76	          0x4889c7	                            mov rdi, rax	      4937	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_67
0x4006c79	      0xe83de9ffff	                call sym.d_append_string	      4937	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_67
0x4006c7e	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4006c85	        0x488b5008	                mov rdx, qword [rax + 8]	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4006c89	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4006c8f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4006c96	            0x89ce	                            mov esi, ecx	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4006c98	          0x4889c7	                            mov rdi, rax	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4006c9b	      0xe8591f0000	                   call sym.d_print_comp	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4006ca0	      0xe93e1f0000	                           jmp 0x4008be3	      4939	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006ca5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4942	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_69
0x4006cac	      0xbe00000000	                              mov esi, 0	      4942	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_69
0x4006cb1	          0x4889c7	                            mov rdi, rax	      4942	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_69
0x4006cb4	      0xe802e9ffff	                call sym.d_append_string	      4942	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_69
0x4006cb9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4006cc0	        0x488b5008	                mov rdx, qword [rax + 8]	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4006cc4	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4006cca	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4006cd1	            0x89ce	                            mov esi, ecx	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4006cd3	          0x4889c7	                            mov rdi, rax	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4006cd6	      0xe81e1f0000	                   call sym.d_print_comp	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4006cdb	      0xe9031f0000	                           jmp 0x4008be3	      4944	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006ce0	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4947	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_71
0x4006ce7	      0xbe00000000	                              mov esi, 0	      4947	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_71
0x4006cec	          0x4889c7	                            mov rdi, rax	      4947	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_71
0x4006cef	      0xe8c7e8ffff	                call sym.d_append_string	      4947	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_71
0x4006cf4	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4006cfb	        0x488b5008	                mov rdx, qword [rax + 8]	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4006cff	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4006d05	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4006d0c	            0x89ce	                            mov esi, ecx	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4006d0e	          0x4889c7	                            mov rdi, rax	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4006d11	      0xe8e31e0000	                   call sym.d_print_comp	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4006d16	      0xe9c81e0000	                           jmp 0x4008be3	      4949	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006d1b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4952	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_73
0x4006d22	      0xbe00000000	                              mov esi, 0	      4952	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_73
0x4006d27	          0x4889c7	                            mov rdi, rax	      4952	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_73
0x4006d2a	      0xe88ce8ffff	                call sym.d_append_string	      4952	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_73
0x4006d2f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4006d36	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4006d3a	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4006d40	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4006d47	            0x89ce	                            mov esi, ecx	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4006d49	          0x4889c7	                            mov rdi, rax	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4006d4c	      0xe8a81e0000	                   call sym.d_print_comp	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4006d51	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4954	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_75
0x4006d58	      0xbe00000000	                              mov esi, 0	      4954	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_75
0x4006d5d	          0x4889c7	                            mov rdi, rax	      4954	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_75
0x4006d60	      0xe856e8ffff	                call sym.d_append_string	      4954	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_75
0x4006d65	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4006d6c	        0x488b5008	                mov rdx, qword [rax + 8]	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4006d70	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4006d76	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4006d7d	            0x89ce	                            mov esi, ecx	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4006d7f	          0x4889c7	                            mov rdi, rax	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4006d82	      0xe8721e0000	                   call sym.d_print_comp	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4006d87	      0xe9571e0000	                           jmp 0x4008be3	      4956	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006d8c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4959	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_77
0x4006d93	      0xbe00000000	                              mov esi, 0	      4959	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_77
0x4006d98	          0x4889c7	                            mov rdi, rax	      4959	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_77
0x4006d9b	      0xe81be8ffff	                call sym.d_append_string	      4959	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_77
0x4006da0	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4006da7	        0x488b5008	                mov rdx, qword [rax + 8]	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4006dab	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4006db1	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4006db8	            0x89ce	                            mov esi, ecx	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4006dba	          0x4889c7	                            mov rdi, rax	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4006dbd	      0xe8371e0000	                   call sym.d_print_comp	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4006dc2	      0xe91c1e0000	                           jmp 0x4008be3	      4961	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006dc7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4964	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_79
0x4006dce	      0xbe00000000	                              mov esi, 0	      4964	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_79
0x4006dd3	          0x4889c7	                            mov rdi, rax	      4964	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_79
0x4006dd6	      0xe8e0e7ffff	                call sym.d_append_string	      4964	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_79
0x4006ddb	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4006de2	        0x488b5008	                mov rdx, qword [rax + 8]	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4006de6	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4006dec	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4006df3	            0x89ce	                            mov esi, ecx	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4006df5	          0x4889c7	                            mov rdi, rax	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4006df8	      0xe8fc1d0000	                   call sym.d_print_comp	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4006dfd	      0xe9e11d0000	                           jmp 0x4008be3	      4966	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006e02	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4969	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_81
0x4006e09	      0xbe00000000	                              mov esi, 0	      4969	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_81
0x4006e0e	          0x4889c7	                            mov rdi, rax	      4969	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_81
0x4006e11	      0xe8a5e7ffff	                call sym.d_append_string	      4969	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_81
0x4006e16	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4006e1d	        0x488b5008	                mov rdx, qword [rax + 8]	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4006e21	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4006e27	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4006e2e	            0x89ce	                            mov esi, ecx	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4006e30	          0x4889c7	                            mov rdi, rax	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4006e33	      0xe8c11d0000	                   call sym.d_print_comp	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4006e38	      0xe9a61d0000	                           jmp 0x4008be3	      4971	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006e3d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e44	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e47	          0x4863d0	                         movsxd rdx, eax	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e4a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e51	        0x488b4808	                mov rcx, qword [rax + 8]	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e55	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e5c	          0x4889ce	                            mov rsi, rcx	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e5f	          0x4889c7	                            mov rdi, rax	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e62	      0xe805e7ffff	                call sym.d_append_buffer	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4006e67	      0xe9771d0000	                           jmp 0x4008be3	      4975	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006e6c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006e73	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006e7a	    0x48898570feff	            mov qword [rbp - 0x190], rax	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006e81	      0xe996000000	                           jmp 0x4006f1c	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006e86	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4006e8d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4006e90	            0x85c0	                           test eax, eax	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4006e92	            0x7577	                           jne 0x4006f0b	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4006e94	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006e9b	        0x488b4008	                mov rax, qword [rax + 8]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006e9f	            0x8b00	                    mov eax, dword [rax]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ea1	          0x83f819	                           cmp eax, 0x19	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ea4	            0x7424	                            je 0x4006eca	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ea6	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4992	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ead	        0x488b4008	                mov rax, qword [rax + 8]	      4992	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006eb1	            0x8b00	                    mov eax, dword [rax]	      4992	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006eb3	          0x83f81a	                           cmp eax, 0x1a	      4992	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006eb6	            0x7412	                            je 0x4006eca	      4992	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006eb8	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4993	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ebf	        0x488b4008	                mov rax, qword [rax + 8]	      4993	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ec3	            0x8b00	                    mov eax, dword [rax]	      4993	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ec5	          0x83f81b	                           cmp eax, 0x1b	      4993	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006ec8	            0x7565	                           jne 0x4006f2f	      4993	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006eca	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006ed1	        0x488b4008	                mov rax, qword [rax + 8]	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006ed5	            0x8b10	                    mov edx, dword [rax]	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006ed7	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006ede	            0x8b00	                    mov eax, dword [rax]	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006ee0	            0x39c2	                            cmp edx, eax	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006ee2	            0x7527	                           jne 0x4006f0b	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006ee4	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4006eeb	        0x488b5008	                mov rdx, qword [rax + 8]	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4006eef	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4006ef5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4006efc	            0x89ce	                            mov esi, ecx	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4006efe	          0x4889c7	                            mov rdi, rax	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4006f01	      0xe8f31c0000	                   call sym.d_print_comp	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4006f06	      0xe9d81c0000	                           jmp 0x4008be3	      4998	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4006f0b	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006f12	          0x488b00	                    mov rax, qword [rax]	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006f15	    0x48898570feff	            mov qword [rbp - 0x190], rax	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006f1c	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006f24	     0xf855cffffff	                           jne 0x4006e86	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4006f2a	      0xe960020000	                           jmp 0x400718f	      5003	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006f2f	              0x90	                                     nop	      4994	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4006f30	      0xe95a020000	                           jmp 0x400718f	      5003	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006f35	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5009	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006f3c	        0x488b4008	                mov rax, qword [rax + 8]	      5009	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006f40	    0x48898578feff	            mov qword [rbp - 0x188], rax	      5009	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4006f47	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f4e	    0x8b8038010000	           mov eax, dword [rax + 0x138] 	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f54	            0x85c0	                           test eax, eax	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f56	     0xf85df010000	                           jne 0x400713b	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f5c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f63	            0x8b00	                    mov eax, dword [rax]	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f65	          0x83f805	                              cmp eax, 5	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f68	     0xf85cd010000	                           jne 0x400713b	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4006f6e	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      5013	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_85
0x4006f75	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5013	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_85
0x4006f7c	          0x4889d6	                            mov rsi, rdx	      5013	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_85
0x4006f7f	          0x4889c7	                            mov rdi, rax	      5013	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_85
0x4006f82	      0xe8f3edffff	              call sym.d_get_saved_scope	      5013	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_85
0x4006f87	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      5013	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_85
0x4006f8e	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	      5016	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26
0x4006f96	            0x7535	                           jne 0x4006fcd	      5016	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26
0x4006f98	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      5022	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	CALL_86
0x4006f9f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5022	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	CALL_86
0x4006fa6	          0x4889d6	                            mov rsi, rdx	      5022	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	CALL_86
0x4006fa9	          0x4889c7	                            mov rdi, rax	      5022	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	CALL_86
0x4006fac	      0xe887ecffff	                   call sym.d_save_scope	      5022	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	CALL_86
0x4006fb1	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x4006fb8	          0x4889c7	                            mov rdi, rax	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x4006fbb	      0xe8b5e4ffff	              call sym.d_print_saw_error	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x4006fc0	            0x85c0	                           test eax, eax	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x4006fc2	     0xf84cc000000	                            je 0x4007094	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x4006fc8	      0xe9161c0000	                           jmp 0x4008be3	      5024	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27
0x4006fcd	    0xc78528feffff	              mov dword [rbp - 0x1d8], 0	      5029	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5
0x4006fd7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006fde	    0x488b80480100	           mov rax, qword [rax + 0x148] 	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006fe5	    0x48898588feff	            mov qword [rbp - 0x178], rax	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006fec	            0xeb5b	                           jmp 0x4007049	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006fee	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006ff5	          0x488b00	                    mov rax, qword [rax]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006ff8	    0x483b8578feff	            cmp rax, qword [rbp - 0x188]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006fff	            0x742a	                            je 0x400702b	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007001	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      5038	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007008	          0x488b00	                    mov rax, qword [rax]	      5038	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400700b	    0x483b8508feff	            cmp rax, qword [rbp - 0x1f8]	      5038	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007012	            0x7523	                           jne 0x4007037	      5038	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007014	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400701b	    0x488b80480100	           mov rax, qword [rax + 0x148] 	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007022	    0x483b8588feff	            cmp rax, qword [rbp - 0x178]	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007029	            0x740c	                            je 0x4007037	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400702b	    0xc78528feffff	              mov dword [rbp - 0x1d8], 1	      5041	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007035	            0xeb1c	                           jmp 0x4007053	      5042	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4007037	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      5035	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x400703e	        0x488b4008	                mov rax, qword [rax + 8]	      5035	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4007042	    0x48898588feff	            mov qword [rbp - 0x178], rax	      5035	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4007049	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4007051	            0x759b	                           jne 0x4006fee	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4007053	    0x83bd28feffff	              cmp dword [rbp - 0x1d8], 0	      5046	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x400705a	            0x7538	                           jne 0x4007094	      5046	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x400705c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5048	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007063	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      5048	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x400706a	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      5048	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007071	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007078	        0x488b5008	                mov rdx, qword [rax + 8]	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x400707c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007083	    0x488990200100	            mov qword [rax + 0x120], rdx	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x400708a	    0xc78520feffff	              mov dword [rbp - 0x1e0], 1	      5050	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007094	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x400709b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40070a2	          0x4889d6	                            mov rsi, rdx	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40070a5	          0x4889c7	                            mov rdi, rax	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40070a8	      0xe8b3e8ffff	     call sym.d_lookup_template_argument	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40070ad	    0x48898580feff	            mov qword [rbp - 0x180], rax	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40070b4	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40070bc	            0x7433	                            je 0x40070f1	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40070be	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40070c5	            0x8b00	                    mov eax, dword [rax]	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40070c7	          0x83f82f	                           cmp eax, 0x2f	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40070ca	            0x7525	                           jne 0x40070f1	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40070cc	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40070d3	    0x8b903c010000	           mov edx, dword [rax + 0x13c] 	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40070d9	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40070e0	            0x89d6	                            mov esi, edx	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40070e2	          0x4889c7	                            mov rdi, rax	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40070e5	      0xe805e8ffff	      call sym.d_index_template_argument	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40070ea	    0x48898580feff	            mov qword [rbp - 0x180], rax	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40070f1	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x40070f9	            0x7532	                           jne 0x400712d	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x40070fb	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4007102	            0x7415	                            je 0x4007119	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4007104	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x400710b	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4007112	    0x488990200100	            mov qword [rax + 0x120], rdx	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4007119	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5063	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	CALL_90
0x4007120	          0x4889c7	                            mov rdi, rax	      5063	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	CALL_90
0x4007123	      0xe834e3ffff	                  call sym.d_print_error	      5063	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	CALL_90
0x4007128	      0xe9b61a0000	                           jmp 0x4008be3	      5064	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x400712d	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      5067	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4007134	    0x48898578feff	            mov qword [rbp - 0x188], rax	      5067	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x400713b	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007142	            0x8b00	                    mov eax, dword [rax]	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007144	          0x83f823	                           cmp eax, 0x23	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007147	            0x7416	                            je 0x400715f	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007149	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007150	            0x8b10	                    mov edx, dword [rax]	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007152	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007159	            0x8b00	                    mov eax, dword [rax]	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x400715b	            0x39c2	                            cmp edx, eax	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x400715d	            0x7510	                           jne 0x400716f	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x400715f	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      5072	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4007166	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      5072	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x400716d	            0xeb20	                           jmp 0x400718f	      5072	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x400716f	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4007176	            0x8b00	                    mov eax, dword [rax]	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4007178	          0x83f824	                           cmp eax, 0x24	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x400717b	            0x7512	                           jne 0x400718f	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x400717d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      5074	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4007184	        0x488b4008	                mov rax, qword [rax + 8]	      5074	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4007188	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      5074	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x400718f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007196	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400719d	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071a4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071ab	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071b2	    0x488990280100	            mov qword [rax + 0x128], rdx	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071b9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071c0	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071c7	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      5091	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071d1	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071d8	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071df	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40071e6	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x40071ee	            0x7512	                           jne 0x4007202	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x40071f0	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5095	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x40071f7	        0x488b4008	                mov rax, qword [rax + 8]	      5095	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x40071fb	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      5095	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4007202	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4007209	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x400720f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4007216	            0x89ce	                            mov esi, ecx	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4007218	          0x4889c7	                            mov rdi, rax	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x400721b	      0xe8d9190000	                   call sym.d_print_comp	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4007220	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4007226	            0x85c0	                           test eax, eax	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4007228	            0x751e	                           jne 0x4007248	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x400722a	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4007231	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4007237	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x400723e	            0x89ce	                            mov esi, ecx	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4007240	          0x4889c7	                            mov rdi, rax	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4007243	      0xe8fa1e0000	                    call sym.d_print_mod	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4007248	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400724f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007256	    0x488990280100	            mov qword [rax + 0x128], rdx	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400725d	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4007264	     0xf845d190000	                            je 0x4008bc7	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x400726a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4007271	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4007278	    0x488990200100	            mov qword [rax + 0x120], rdx	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x400727f	              0x90	                                     nop	      5109	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007280	      0xe942190000	                           jmp 0x4008bc7	      5109	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007285	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x400728b	          0x83e004	                              and eax, 4	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x400728e	            0x85c0	                           test eax, eax	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x4007290	            0x7536	                           jne 0x40072c8	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x4007292	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5115	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x4007299	        0x488b4008	                mov rax, qword [rax + 8]	      5115	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x400729d	          0x8b4008	                mov eax, dword [rax + 8]	      5115	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x40072a0	          0x4863d0	                         movsxd rdx, eax	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072a3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072aa	        0x488b4008	                mov rax, qword [rax + 8]	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072ae	          0x488b08	                    mov rcx, qword [rax]	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072b1	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072b8	          0x4889ce	                            mov rsi, rcx	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072bb	          0x4889c7	                            mov rdi, rax	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072be	      0xe8a9e2ffff	                call sym.d_append_buffer	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40072c3	      0xe91b190000	                           jmp 0x4008be3	      5119	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40072c8	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5118	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7
0x40072cf	        0x488b4008	                mov rax, qword [rax + 8]	      5118	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7
0x40072d3	          0x8b4018	            mov eax, dword [rax + 0x18] 	      5118	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7
0x40072d6	          0x4863d0	                         movsxd rdx, eax	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072d9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072e0	        0x488b4008	                mov rax, qword [rax + 8]	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072e4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072e8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072ef	          0x4889ce	                            mov rsi, rcx	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072f2	          0x4889c7	                            mov rdi, rax	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072f5	      0xe872e2ffff	                call sym.d_append_buffer	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40072fa	      0xe9e4180000	                           jmp 0x4008be3	      5119	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40072ff	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x4007306	        0x488b5008	                mov rdx, qword [rax + 8]	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x400730a	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x4007310	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x4007317	            0x89ce	                            mov esi, ecx	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x4007319	          0x4889c7	                            mov rdi, rax	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x400731c	      0xe8d8180000	                   call sym.d_print_comp	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x4007321	      0xe9bd180000	                           jmp 0x4008be3	      5123	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007326	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x400732c	          0x83e020	                           and eax, 0x20	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x400732f	            0x85c0	                           test eax, eax	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x4007331	            0x742f	                            je 0x4007362	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x4007333	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x400733a	    0x488b88280100	           mov rcx, qword [rax + 0x128] 	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4007341	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4007347	          0x83e09f	                     and eax, 0xffffff9f	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x400734a	            0x89c6	                            mov esi, eax	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x400734c	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4007353	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x400735a	          0x4889c7	                            mov rdi, rax	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x400735d	      0xe8c0200000	          call sym.d_print_function_type	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4007362	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4007369	        0x488b4008	                mov rax, qword [rax + 8]	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x400736d	          0x4885c0	                           test rax, rax	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4007370	            0x7439	                            je 0x40073ab	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4007372	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4007378	          0x83e020	                           and eax, 0x20	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x400737b	            0x85c0	                           test eax, eax	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x400737d	            0x742c	                            je 0x40073ab	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x400737f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4007386	        0x488b5008	                mov rdx, qword [rax + 8]	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x400738a	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4007390	          0x83e09f	                     and eax, 0xffffff9f	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4007393	            0x89c1	                            mov ecx, eax	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4007395	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x400739c	            0x89ce	                            mov esi, ecx	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x400739e	          0x4889c7	                            mov rdi, rax	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40073a1	      0xe853180000	                   call sym.d_print_comp	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40073a6	      0xe9e7000000	                           jmp 0x4007492	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40073ab	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073b2	        0x488b4008	                mov rax, qword [rax + 8]	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073b6	          0x4885c0	                           test rax, rax	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073b9	     0xf84d3000000	                            je 0x4007492	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073bf	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073c5	          0x83e040	                           and eax, 0x40	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073c8	            0x85c0	                           test eax, eax	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073ca	     0xf85c2000000	                           jne 0x4007492	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073d0	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073d7	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073de	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073e5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073ec	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073f3	    0x488990280100	            mov qword [rax + 0x128], rdx	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40073fa	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5144	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007401	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5144	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007408	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      5145	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007412	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007419	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007420	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007427	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x400742e	        0x488b5008	                mov rdx, qword [rax + 8]	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4007432	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4007438	          0x83e09f	                     and eax, 0xffffff9f	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x400743b	            0x89c1	                            mov ecx, eax	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x400743d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4007444	            0x89ce	                            mov esi, ecx	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4007446	          0x4889c7	                            mov rdi, rax	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4007449	      0xe8ab170000	                   call sym.d_print_comp	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x400744e	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007455	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x400745c	    0x488990280100	            mov qword [rax + 0x128], rdx	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4007463	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4007469	            0x85c0	                           test eax, eax	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x400746b	     0xf8559170000	                           jne 0x4008bca	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4007471	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5158	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_43
0x4007477	          0x83e020	                           and eax, 0x20	      5158	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_43
0x400747a	            0x85c0	                           test eax, eax	      5158	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_43
0x400747c	            0x7514	                           jne 0x4007492	      5158	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_43
0x400747e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5159	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_99
0x4007485	      0xbe20000000	                           mov esi, 0x20	      5159	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_99
0x400748a	          0x4889c7	                            mov rdi, rax	      5159	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_99
0x400748d	      0xe874e0ffff	                  call sym.d_append_char	      5159	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_99
0x4007492	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5162	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44
0x4007498	          0x83e020	                           and eax, 0x20	      5162	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44
0x400749b	            0x85c0	                           test eax, eax	      5162	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44
0x400749d	     0xf852a170000	                           jne 0x4008bcd	      5162	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44
0x40074a3	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074aa	    0x488b88280100	           mov rcx, qword [rax + 0x128] 	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074b1	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074b7	          0x83e09f	                     and eax, 0xffffff9f	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074ba	            0x89c6	                            mov esi, eax	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074bc	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074c3	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074ca	          0x4889c7	                            mov rdi, rax	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074cd	      0xe8501f0000	          call sym.d_print_function_type	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40074d2	      0xe9f6160000	                           jmp 0x4008bcd	      5167	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40074d7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40074de	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40074e5	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40074ec	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5187	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40074f3	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5187	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40074fa	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007501	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007508	    0x488990280100	            mov qword [rax + 0x128], rdx	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400750f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5189	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007516	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5189	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400751d	    0xc74580000000	               mov dword [rbp - 0x80], 0	      5190	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007524	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400752b	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007532	        0x48894588	             mov qword [rbp - 0x78], rax	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007536	    0xc7852cfeffff	              mov dword [rbp - 0x1d4], 1	      5193	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007540	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5194	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007547	    0x48898590feff	            mov qword [rbp - 0x170], rax	      5194	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400754e	      0xe9d5000000	                           jmp 0x4007628	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007553	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400755a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400755d	            0x85c0	                           test eax, eax	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400755f	     0xf85b2000000	                           jne 0x4007617	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4007565	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 3	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x400756c	            0x7614	                           jbe 0x4007582	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x400756e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5204	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46	CALL_101
0x4007575	          0x4889c7	                            mov rdi, rax	      5204	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46	CALL_101
0x4007578	      0xe8dfdeffff	                  call sym.d_print_error	      5204	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46	CALL_101
0x400757d	      0xe961160000	                           jmp 0x4008be3	      5205	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x4007582	    0x8b852cfeffff	            mov eax, dword [rbp - 0x1d4]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4007588	        0x48c1e005	                              shl rax, 5	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400758c	          0x4801e8	                            add rax, rbp	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400758f	    0x488d9070ffff	                   lea rdx, [rax - 0x90]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4007596	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400759d	          0x488b08	                    mov rcx, qword [rax]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075a0	          0x48890a	                    mov qword [rdx], rcx	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075a3	        0x488b4808	                mov rcx, qword [rax + 8]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075a7	        0x48894a08	                mov qword [rdx + 8], rcx	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075ab	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075af	        0x48894a10	             mov qword [rdx + 0x10], rcx	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075b3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075b7	        0x48894218	             mov qword [rdx + 0x18], rax	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075bb	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075c2	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075c9	    0x8b952cfeffff	            mov edx, dword [rbp - 0x1d4]	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075cf	        0x48c1e205	                              shl rdx, 5	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075d3	          0x4801ea	                            add rdx, rbp	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075d6	    0x4881ea900000	                           sub rdx, 0x90	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075dd	          0x488902	                    mov qword [rdx], rax	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075e0	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075e7	    0x8b952cfeffff	            mov edx, dword [rbp - 0x1d4]	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075ed	        0x48c1e205	                              shl rdx, 5	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075f1	          0x4801c2	                            add rdx, rax	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075f4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40075fb	    0x488990280100	            mov qword [rax + 0x128], rdx	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4007602	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5211	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4007609	    0xc74010010000	               mov dword [rax + 0x10], 1	      5211	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4007610	    0x83852cfeffff	              add dword [rbp - 0x1d4], 1	      5212	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4007617	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5215	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400761e	          0x488b00	                    mov rax, qword [rax]	      5215	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007621	    0x48898590feff	            mov qword [rbp - 0x170], rax	      5215	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007628	    0x4883bd90feff	              cmp qword [rbp - 0x170], 0	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007630	            0x7442	                            je 0x4007674	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007632	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007639	        0x488b4008	                mov rax, qword [rax + 8]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400763d	            0x8b00	                    mov eax, dword [rax]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400763f	          0x83f819	                           cmp eax, 0x19	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007642	     0xf840bffffff	                            je 0x4007553	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007648	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5197	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400764f	        0x488b4008	                mov rax, qword [rax + 8]	      5197	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007653	            0x8b00	                    mov eax, dword [rax]	      5197	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007655	          0x83f81a	                           cmp eax, 0x1a	      5197	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007658	     0xf84f5feffff	                            je 0x4007553	      5197	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400765e	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5198	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007665	        0x488b4008	                mov rax, qword [rax + 8]	      5198	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007669	            0x8b00	                    mov eax, dword [rax]	      5198	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400766b	          0x83f81b	                           cmp eax, 0x1b	      5198	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400766e	     0xf84dffeffff	                            je 0x4007553	      5198	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4007674	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x400767b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x400767f	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4007685	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x400768c	            0x89ce	                            mov esi, ecx	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x400768e	          0x4889c7	                            mov rdi, rax	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4007691	      0xe863150000	                   call sym.d_print_comp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4007696	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400769d	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40076a4	    0x488990280100	            mov qword [rax + 0x128], rdx	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40076ab	          0x8b4580	             mov eax, dword [rbp - 0x80]	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40076ae	            0x85c0	                           test eax, eax	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40076b0	     0xf851a150000	                           jne 0x4008bd0	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40076b6	            0xeb34	                           jmp 0x40076ec	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40076b8	    0x83ad2cfeffff	              sub dword [rbp - 0x1d4], 1	      5227	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40076bf	    0x8b852cfeffff	            mov eax, dword [rbp - 0x1d4]	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076c5	        0x48c1e005	                              shl rax, 5	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076c9	          0x4801e8	                            add rax, rbp	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076cc	    0x482d88000000	                           sub rax, 0x88	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076d2	          0x488b10	                    mov rdx, qword [rax]	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076d5	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076db	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076e2	            0x89ce	                            mov esi, ecx	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076e4	          0x4889c7	                            mov rdi, rax	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076e7	      0xe8561a0000	                    call sym.d_print_mod	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40076ec	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 1	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40076f3	            0x77c3	                            ja 0x40076b8	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40076f5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x40076fc	    0x488b88280100	           mov rcx, qword [rax + 0x128] 	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4007703	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x400770a	    0x8bb514feffff	            mov esi, dword [rbp - 0x1ec]	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4007710	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4007717	          0x4889c7	                            mov rdi, rax	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x400771a	      0xe8bd1e0000	             call sym.d_print_array_type	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x400771f	              0x90	                                     nop	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007720	      0xe9be140000	                           jmp 0x4008be3	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007725	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400772c	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007733	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400773a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007741	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007748	    0x488990280100	            mov qword [rax + 0x128], rdx	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400774f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5243	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007756	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5243	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400775d	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      5244	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007767	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400776e	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007775	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400777c	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4007783	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4007787	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x400778d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4007794	            0x89ce	                            mov esi, ecx	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4007796	          0x4889c7	                            mov rdi, rax	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4007799	      0xe85b140000	                   call sym.d_print_comp	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x400779e	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x40077a4	            0x85c0	                           test eax, eax	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x40077a6	            0x751e	                           jne 0x40077c6	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x40077a8	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x40077af	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x40077b5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x40077bc	            0x89ce	                            mov esi, ecx	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x40077be	          0x4889c7	                            mov rdi, rax	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x40077c1	      0xe87c190000	                    call sym.d_print_mod	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x40077c6	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40077cd	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40077d4	    0x488990280100	            mov qword [rax + 0x128], rdx	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40077db	              0x90	                                     nop	      5256	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40077dc	      0xe902140000	                           jmp 0x4008be3	      5256	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40077e1	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x40077e8	         0xfb74012	           movzx eax, word [rax + 0x12] 	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x40077ec	          0x6685c0	                             test ax, ax	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x40077ef	            0x7414	                            je 0x4007805	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x40077f1	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5261	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_107
0x40077f8	      0xbe00000000	                              mov esi, 0	      5261	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_107
0x40077fd	          0x4889c7	                            mov rdi, rax	      5261	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_107
0x4007800	      0xe8b6ddffff	                call sym.d_append_string	      5261	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_107
0x4007805	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x400780c	        0x488b4008	                mov rax, qword [rax + 8]	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x4007810	        0x488b4008	                mov rax, qword [rax + 8]	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x4007814	    0x483d00000000	                              cmp rax, 0	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x400781a	            0x7436	                            je 0x4007852	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x400781c	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4007823	        0x488b5008	                mov rdx, qword [rax + 8]	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4007827	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x400782d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4007834	            0x89ce	                            mov esi, ecx	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4007836	          0x4889c7	                            mov rdi, rax	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4007839	      0xe8bb130000	                   call sym.d_print_comp	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x400783e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5267	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_109
0x4007845	      0xbe20000000	                           mov esi, 0x20	      5267	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_109
0x400784a	          0x4889c7	                            mov rdi, rax	      5267	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_109
0x400784d	      0xe8b4dcffff	                  call sym.d_append_char	      5267	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_109
0x4007852	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x4007859	         0xfb74010	           movzx eax, word [rax + 0x10] 	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x400785d	          0x6685c0	                             test ax, ax	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x4007860	            0x7419	                            je 0x400787b	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x4007862	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5270	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_110
0x4007869	      0xbe00000000	                              mov esi, 0	      5270	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_110
0x400786e	          0x4889c7	                            mov rdi, rax	      5270	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_110
0x4007871	      0xe845ddffff	                call sym.d_append_string	      5270	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_110
0x4007876	      0xe968130000	                           jmp 0x4008be3	      5273	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400787b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5272	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_111
0x4007882	      0xbe00000000	                              mov esi, 0	      5272	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_111
0x4007887	          0x4889c7	                            mov rdi, rax	      5272	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_111
0x400788a	      0xe82cddffff	                call sym.d_append_string	      5272	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_111
0x400788f	      0xe94f130000	                           jmp 0x4008be3	      5273	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007894	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x400789b	        0x488b4008	                mov rax, qword [rax + 8]	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x400789f	          0x4885c0	                           test rax, rax	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40078a2	            0x7422	                            je 0x40078c6	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40078a4	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40078ab	        0x488b5008	                mov rdx, qword [rax + 8]	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40078af	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40078b5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40078bc	            0x89ce	                            mov esi, ecx	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40078be	          0x4889c7	                            mov rdi, rax	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40078c1	      0xe833130000	                   call sym.d_print_comp	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40078c6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x40078cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x40078d1	          0x4885c0	                           test rax, rax	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x40078d4	     0xf84f9120000	                            je 0x4008bd3	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x40078da	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x40078e1	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x40078e8	    0x483dfd000000	                           cmp rax, 0xfd	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x40078ee	            0x760f	                           jbe 0x40078ff	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x40078f0	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5286	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_113
0x40078f7	          0x4889c7	                            mov rdi, rax	      5286	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_113
0x40078fa	      0xe892dbffff	                  call sym.d_print_flush	      5286	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_113
0x40078ff	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5287	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_114
0x4007906	      0xbe00000000	                              mov esi, 0	      5287	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_114
0x400790b	          0x4889c7	                            mov rdi, rax	      5287	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_114
0x400790e	      0xe8a8dcffff	                call sym.d_append_string	      5287	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_114
0x4007913	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5288	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x400791a	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      5288	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x4007921	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      5288	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x4007928	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5289	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x400792f	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      5289	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x4007936	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      5289	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x400793d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4007944	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4007948	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400794e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4007955	            0x89ce	                            mov esi, ecx	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4007957	          0x4889c7	                            mov rdi, rax	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400795a	      0xe89a120000	                   call sym.d_print_comp	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400795f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4007966	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400796d	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4007974	     0xf8559120000	                           jne 0x4008bd3	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400797a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4007981	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4007988	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400798f	     0xf853e120000	                           jne 0x4008bd3	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4007995	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400799c	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x40079a3	        0x488d50fe	                      lea rdx, [rax - 2]	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x40079a7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x40079ae	    0x488990000100	            mov qword [rax + 0x100], rdx	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x40079b5	      0xe919120000	                           jmp 0x4008bd3	      5296	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40079ba	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5300	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40079c1	        0x488b4008	                mov rax, qword [rax + 8]	      5300	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40079c5	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      5300	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40079cc	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5301	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40079d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5301	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40079d7	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      5301	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40079de	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 0	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x40079e6	            0x741e	                            je 0x4007a06	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x40079e8	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x40079ef	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x40079f5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x40079fc	            0x89ce	                            mov esi, ecx	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x40079fe	          0x4889c7	                            mov rdi, rax	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x4007a01	      0xe8f3110000	                   call sym.d_print_comp	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x4007a06	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5305	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_117
0x4007a0d	      0xbe7b000000	                           mov esi, 0x7b	      5305	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_117
0x4007a12	          0x4889c7	                            mov rdi, rax	      5305	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_117
0x4007a15	      0xe8ecdaffff	                  call sym.d_append_char	      5305	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_117
0x4007a1a	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x4007a21	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x4007a27	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x4007a2e	            0x89ce	                            mov esi, ecx	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x4007a30	          0x4889c7	                            mov rdi, rax	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x4007a33	      0xe8c1110000	                   call sym.d_print_comp	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x4007a38	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5307	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_119
0x4007a3f	      0xbe7d000000	                           mov esi, 0x7d	      5307	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_119
0x4007a44	          0x4889c7	                            mov rdi, rax	      5307	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_119
0x4007a47	      0xe8badaffff	                  call sym.d_append_char	      5307	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_119
0x4007a4c	      0xe992110000	                           jmp 0x4008be3	      5309	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007a51	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007a58	        0x488b4008	                mov rax, qword [rax + 8]	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007a5c	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007a63	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007a6a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007a6d	    0x898530feffff	            mov dword [rbp - 0x1d0], eax	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007a73	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5316	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_120
0x4007a7a	      0xbe00000000	                              mov esi, 0	      5316	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_120
0x4007a7f	          0x4889c7	                            mov rdi, rax	      5316	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_120
0x4007a82	      0xe834dbffff	                call sym.d_append_string	      5316	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_120
0x4007a87	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007a8e	        0x488b4008	                mov rax, qword [rax + 8]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007a92	           0xfb600	                   movzx eax, byte [rax]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007a95	            0x3c60	                            cmp al, 0x60	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007a97	            0x7e26	                           jle 0x4007abf	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007a99	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007aa0	        0x488b4008	                mov rax, qword [rax + 8]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007aa4	           0xfb600	                   movzx eax, byte [rax]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007aa7	            0x3c7a	                            cmp al, 0x7a	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007aa9	            0x7f14	                            jg 0x4007abf	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4007aab	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5319	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_121
0x4007ab2	      0xbe20000000	                           mov esi, 0x20	      5319	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_121
0x4007ab7	          0x4889c7	                            mov rdi, rax	      5319	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_121
0x4007aba	      0xe847daffff	                  call sym.d_append_char	      5319	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_121
0x4007abf	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007ac6	        0x488b4008	                mov rax, qword [rax + 8]	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007aca	    0x8b9530feffff	            mov edx, dword [rbp - 0x1d0]	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007ad0	          0x4863d2	                         movsxd rdx, edx	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007ad3	        0x4883ea01	                              sub rdx, 1	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007ad7	          0x4801d0	                            add rax, rdx	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007ada	           0xfb600	                   movzx eax, byte [rax]	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007add	            0x3c20	                            cmp al, 0x20	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007adf	            0x7507	                           jne 0x4007ae8	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007ae1	    0x83ad30feffff	              sub dword [rbp - 0x1d0], 1	      5322	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4007ae8	    0x8b8530feffff	            mov eax, dword [rbp - 0x1d0]	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007aee	          0x4863d0	                         movsxd rdx, eax	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007af1	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007af8	        0x488b4808	                mov rcx, qword [rax + 8]	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007afc	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007b03	          0x4889ce	                            mov rsi, rcx	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007b06	          0x4889c7	                            mov rdi, rax	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007b09	      0xe85edaffff	                call sym.d_append_buffer	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4007b0e	      0xe9d0100000	                           jmp 0x4008be3	      5324	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007b13	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5328	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_123
0x4007b1a	      0xbe00000000	                              mov esi, 0	      5328	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_123
0x4007b1f	          0x4889c7	                            mov rdi, rax	      5328	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_123
0x4007b22	      0xe894daffff	                call sym.d_append_string	      5328	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_123
0x4007b27	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4007b2e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4007b32	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4007b38	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4007b3f	            0x89ce	                            mov esi, ecx	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4007b41	          0x4889c7	                            mov rdi, rax	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4007b44	      0xe8b0100000	                   call sym.d_print_comp	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4007b49	      0xe995100000	                           jmp 0x4008be3	      5330	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007b4e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5333	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_125
0x4007b55	      0xbe00000000	                              mov esi, 0	      5333	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_125
0x4007b5a	          0x4889c7	                            mov rdi, rax	      5333	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_125
0x4007b5d	      0xe859daffff	                call sym.d_append_string	      5333	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_125
0x4007b62	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5334	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_126
0x4007b69	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5334	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_126
0x4007b6f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5334	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_126
0x4007b76	            0x89ce	                            mov esi, ecx	      5334	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_126
0x4007b78	          0x4889c7	                            mov rdi, rax	      5334	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_126
0x4007b7b	      0xe8131c0000	             call sym.d_print_conversion	      5334	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_126
0x4007b80	      0xe95e100000	                           jmp 0x4008be3	      5335	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007b85	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4007b8c	        0x488b5008	                mov rdx, qword [rax + 8]	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4007b90	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4007b96	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4007b9d	            0x89ce	                            mov esi, ecx	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4007b9f	          0x4889c7	                            mov rdi, rax	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4007ba2	      0xe85c1b0000	                call sym.d_print_expr_op	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4007ba7	      0xe937100000	                           jmp 0x4008be3	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bac	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5343	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bb3	        0x488b4008	                mov rax, qword [rax + 8]	      5343	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bb7	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      5343	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bbe	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5344	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bc5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5344	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bc9	    0x48898598feff	            mov qword [rbp - 0x168], rax	      5344	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bd0	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      5345	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007bdb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007be2	            0x8b00	                    mov eax, dword [rax]	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007be4	          0x83f831	                           cmp eax, 0x31	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007be7	     0xf85d2000000	                           jne 0x4007cbf	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007bed	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007bf4	        0x488b4008	                mov rax, qword [rax + 8]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007bf8	          0x488b00	                    mov rax, qword [rax]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007bfb	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4007c02	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4007c09	      0xbe00000000	                              mov esi, 0	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4007c0e	          0x4889c7	                            mov rdi, rax	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4007c11	      0xe800000000	                          call 0x4007c16	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4007c16	            0x85c0	                           test eax, eax	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4007c18	            0x7544	                           jne 0x4007c5e	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4007c1a	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c21	            0x8b00	                    mov eax, dword [rax]	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c23	          0x83f803	                              cmp eax, 3	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c26	            0x7536	                           jne 0x4007c5e	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c28	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c2f	        0x488b4008	                mov rax, qword [rax + 8]	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c33	            0x8b00	                    mov eax, dword [rax]	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c35	          0x83f801	                              cmp eax, 1	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c38	            0x7524	                           jne 0x4007c5e	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c3a	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c41	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c45	            0x8b00	                    mov eax, dword [rax]	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c47	          0x83f829	                           cmp eax, 0x29	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c4a	            0x7512	                           jne 0x4007c5e	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c4c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      5357	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c53	        0x488b4008	                mov rax, qword [rax + 8]	      5357	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c57	    0x48898598feff	            mov qword [rbp - 0x168], rax	      5357	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4007c5e	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007c65	            0x8b00	                    mov eax, dword [rax]	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007c67	          0x83f838	                           cmp eax, 0x38	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007c6a	            0x7553	                           jne 0x4007cbf	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007c6c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      5362	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007c73	        0x488b4008	                mov rax, qword [rax + 8]	      5362	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007c77	    0x48898598feff	            mov qword [rbp - 0x168], rax	      5362	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007c7e	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4007c85	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4007c8b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4007c92	            0x89ce	                            mov esi, ecx	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4007c94	          0x4889c7	                            mov rdi, rax	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4007c97	      0xe80adfffff	                call sym.d_print_subexpr	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4007c9c	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4007ca3	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4007ca9	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4007cb0	            0x89ce	                            mov esi, ecx	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4007cb2	          0x4889c7	                            mov rdi, rax	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4007cb5	      0xe8491a0000	                call sym.d_print_expr_op	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4007cba	      0xe9240f0000	                           jmp 0x4008be3	      5365	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4007cbf	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007cc7	            0x7469	                            je 0x4007d32	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007cc9	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007cd0	      0xbe00000000	                              mov esi, 0	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007cd5	          0x4889c7	                            mov rdi, rax	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007cd8	      0xe800000000	                          call 0x4007cdd	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007cdd	            0x85c0	                           test eax, eax	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007cdf	            0x7551	                           jne 0x4007d32	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4007ce1	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4007ce8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4007cef	          0x4889d6	                            mov rsi, rdx	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4007cf2	          0x4889c7	                            mov rdi, rax	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4007cf5	      0xe8c2dcffff	                    call sym.d_find_pack	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4007cfa	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4007d01	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5373	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_133
0x4007d08	          0x4889c7	                            mov rdi, rax	      5373	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_133
0x4007d0b	      0xe8c4ddffff	                  call sym.d_pack_length	      5373	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_133
0x4007d10	    0x89853cfeffff	            mov dword [rbp - 0x1c4], eax	      5373	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_133
0x4007d16	    0x8b953cfeffff	            mov edx, dword [rbp - 0x1c4]	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4007d1c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4007d23	            0x89d6	                            mov esi, edx	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4007d25	          0x4889c7	                            mov rdi, rax	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4007d28	      0xe8c3d8ffff	                   call sym.d_append_num	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4007d2d	      0xe9b10e0000	                           jmp 0x4008be3	      5375	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63
0x4007d32	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d3a	            0x7453	                            je 0x4007d8f	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d3c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d43	      0xbe00000000	                              mov esi, 0	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d48	          0x4889c7	                            mov rdi, rax	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d4b	      0xe800000000	                          call 0x4007d50	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d50	            0x85c0	                           test eax, eax	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d52	            0x753b	                           jne 0x4007d8f	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4007d54	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5379	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_136
0x4007d5b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5379	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_136
0x4007d62	          0x4889d6	                            mov rsi, rdx	      5379	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_136
0x4007d65	          0x4889c7	                            mov rdi, rax	      5379	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_136
0x4007d68	      0xe8acddffff	                  call sym.d_args_length	      5379	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_136
0x4007d6d	    0x898540feffff	            mov dword [rbp - 0x1c0], eax	      5379	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_136
0x4007d73	    0x8b9540feffff	            mov edx, dword [rbp - 0x1c0]	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4007d79	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4007d80	            0x89d6	                            mov esi, edx	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4007d82	          0x4889c7	                            mov rdi, rax	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4007d85	      0xe866d8ffff	                   call sym.d_append_num	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4007d8a	      0xe9540e0000	                           jmp 0x4008be3	      5381	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64
0x4007d8f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4007d96	            0x8b00	                    mov eax, dword [rax]	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4007d98	          0x83f833	                           cmp eax, 0x33	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4007d9b	            0x7420	                            je 0x4007dbd	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4007d9d	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4007da4	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4007daa	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4007db1	            0x89ce	                            mov esi, ecx	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4007db3	          0x4889c7	                            mov rdi, rax	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4007db6	      0xe848190000	                call sym.d_print_expr_op	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4007dbb	            0xeb46	                           jmp 0x4007e03	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4007dbd	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5388	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_139
0x4007dc4	      0xbe28000000	                           mov esi, 0x28	      5388	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_139
0x4007dc9	          0x4889c7	                            mov rdi, rax	      5388	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_139
0x4007dcc	      0xe835d7ffff	                  call sym.d_append_char	      5388	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_139
0x4007dd1	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      5389	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_140
0x4007dd8	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5389	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_140
0x4007dde	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5389	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_140
0x4007de5	            0x89ce	                            mov esi, ecx	      5389	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_140
0x4007de7	          0x4889c7	                            mov rdi, rax	      5389	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_140
0x4007dea	      0xe875190000	                   call sym.d_print_cast	      5389	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_140
0x4007def	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5390	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_141
0x4007df6	      0xbe29000000	                           mov esi, 0x29	      5390	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_141
0x4007dfb	          0x4889c7	                            mov rdi, rax	      5390	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_141
0x4007dfe	      0xe803d7ffff	                  call sym.d_append_char	      5390	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_11	CALL_141
0x4007e03	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e0b	            0x743b	                            je 0x4007e48	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e0d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e14	      0xbe00000000	                              mov esi, 0	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e19	          0x4889c7	                            mov rdi, rax	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e1c	      0xe800000000	                          call 0x4007e21	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e21	            0x85c0	                           test eax, eax	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e23	            0x7523	                           jne 0x4007e48	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4007e25	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4007e2c	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4007e32	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4007e39	            0x89ce	                            mov esi, ecx	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4007e3b	          0x4889c7	                            mov rdi, rax	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4007e3e	      0xe8b60d0000	                   call sym.d_print_comp	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4007e43	      0xe98d000000	                           jmp 0x4007ed5	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4007e48	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e50	            0x7460	                            je 0x4007eb2	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e52	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e59	      0xbe00000000	                              mov esi, 0	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e5e	          0x4889c7	                            mov rdi, rax	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e61	      0xe800000000	                          call 0x4007e66	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e66	            0x85c0	                           test eax, eax	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e68	            0x7548	                           jne 0x4007eb2	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4007e6a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5398	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_145
0x4007e71	      0xbe28000000	                           mov esi, 0x28	      5398	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_145
0x4007e76	          0x4889c7	                            mov rdi, rax	      5398	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_145
0x4007e79	      0xe888d6ffff	                  call sym.d_append_char	      5398	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_145
0x4007e7e	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4007e85	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4007e8b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4007e92	            0x89ce	                            mov esi, ecx	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4007e94	          0x4889c7	                            mov rdi, rax	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4007e97	      0xe85d0d0000	                   call sym.d_print_comp	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4007e9c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5400	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_147
0x4007ea3	      0xbe29000000	                           mov esi, 0x29	      5400	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_147
0x4007ea8	          0x4889c7	                            mov rdi, rax	      5400	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_147
0x4007eab	      0xe856d6ffff	                  call sym.d_append_char	      5400	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_147
0x4007eb0	            0xeb23	                           jmp 0x4007ed5	      5400	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_147
0x4007eb2	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4007eb9	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4007ebf	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4007ec6	            0x89ce	                            mov esi, ecx	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4007ec8	          0x4889c7	                            mov rdi, rax	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4007ecb	      0xe8d6dcffff	                call sym.d_print_subexpr	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4007ed0	      0xe90e0d0000	                           jmp 0x4008be3	      5405	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007ed5	      0xe9090d0000	                           jmp 0x4008be3	      5405	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007eda	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4007ee1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4007ee5	            0x8b00	                    mov eax, dword [rax]	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4007ee7	          0x83f838	                           cmp eax, 0x38	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4007eea	            0x7414	                            je 0x4007f00	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4007eec	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5410	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68	CALL_149
0x4007ef3	          0x4889c7	                            mov rdi, rax	      5410	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68	CALL_149
0x4007ef6	      0xe861d5ffff	                  call sym.d_print_error	      5410	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68	CALL_149
0x4007efb	      0xe9e30c0000	                           jmp 0x4008be3	      5411	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4007f00	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4007f07	        0x488b4008	                mov rax, qword [rax + 8]	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4007f0b	          0x4889c7	                            mov rdi, rax	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4007f0e	      0xe8abbaffff	                 call sym.op_is_new_cast	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4007f13	            0x85c0	                           test eax, eax	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4007f15	     0xf84af000000	                            je 0x4007fca	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4007f1b	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4007f22	        0x488b5008	                mov rdx, qword [rax + 8]	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4007f26	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4007f2c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4007f33	            0x89ce	                            mov esi, ecx	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4007f35	          0x4889c7	                            mov rdi, rax	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4007f38	      0xe8c6170000	                call sym.d_print_expr_op	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4007f3d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5417	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_152
0x4007f44	      0xbe3c000000	                           mov esi, 0x3c	      5417	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_152
0x4007f49	          0x4889c7	                            mov rdi, rax	      5417	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_152
0x4007f4c	      0xe8b5d5ffff	                  call sym.d_append_char	      5417	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_152
0x4007f51	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f58	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f5c	        0x488b5008	                mov rdx, qword [rax + 8]	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f60	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f66	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f6d	            0x89ce	                            mov esi, ecx	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f6f	          0x4889c7	                            mov rdi, rax	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f72	      0xe8820c0000	                   call sym.d_print_comp	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4007f77	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5419	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_154
0x4007f7e	      0xbe00000000	                              mov esi, 0	      5419	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_154
0x4007f83	          0x4889c7	                            mov rdi, rax	      5419	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_154
0x4007f86	      0xe830d6ffff	                call sym.d_append_string	      5419	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_154
0x4007f8b	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007f92	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007f96	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007f9a	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007fa0	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007fa7	            0x89ce	                            mov esi, ecx	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007fa9	          0x4889c7	                            mov rdi, rax	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007fac	      0xe8480c0000	                   call sym.d_print_comp	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007fb1	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5421	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_156
0x4007fb8	      0xbe29000000	                           mov esi, 0x29	      5421	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_156
0x4007fbd	          0x4889c7	                            mov rdi, rax	      5421	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_156
0x4007fc0	      0xe841d5ffff	                  call sym.d_append_char	      5421	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_156
0x4007fc5	      0xe9190c0000	                           jmp 0x4008be3	      5422	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69
0x4007fca	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007fd1	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007fd7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007fde	            0x89ce	                            mov esi, ecx	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007fe0	          0x4889c7	                            mov rdi, rax	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007fe3	      0xe8fcddffff	  call sym.d_maybe_print_fold_expression	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007fe8	            0x85c0	                           test eax, eax	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007fea	     0xf85e60b0000	                           jne 0x4008bd6	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4007ff0	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4007ff7	        0x488b4008	                mov rax, qword [rax + 8]	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4007ffb	            0x8b00	                    mov eax, dword [rax]	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4007ffd	          0x83f831	                           cmp eax, 0x31	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008000	            0x7545	                           jne 0x4008047	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008002	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008009	        0x488b4008	                mov rax, qword [rax + 8]	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400800d	        0x488b4008	                mov rax, qword [rax + 8]	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008011	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008014	          0x83f801	                              cmp eax, 1	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008017	            0x752e	                           jne 0x4008047	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008019	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008020	        0x488b4008	                mov rax, qword [rax + 8]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008024	        0x488b4008	                mov rax, qword [rax + 8]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008028	        0x488b4008	                mov rax, qword [rax + 8]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400802c	           0xfb600	                   movzx eax, byte [rax]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400802f	            0x3c3e	                            cmp al, 0x3e	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008031	            0x7514	                           jne 0x4008047	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008033	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5434	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_158
0x400803a	      0xbe28000000	                           mov esi, 0x28	      5434	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_158
0x400803f	          0x4889c7	                            mov rdi, rax	      5434	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_158
0x4008042	      0xe8bfd4ffff	                  call sym.d_append_char	      5434	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_158
0x4008047	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x400804e	        0x488b4008	                mov rax, qword [rax + 8]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4008052	        0x488b4008	                mov rax, qword [rax + 8]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4008056	          0x488b00	                    mov rax, qword [rax]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4008059	      0xbe00000000	                              mov esi, 0	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x400805e	          0x4889c7	                            mov rdi, rax	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4008061	      0xe800000000	                          call 0x4008066	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4008066	            0x85c0	                           test eax, eax	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4008068	            0x7571	                           jne 0x40080db	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x400806a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4008071	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4008075	        0x488b4008	                mov rax, qword [rax + 8]	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4008079	            0x8b00	                    mov eax, dword [rax]	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x400807b	          0x83f803	                              cmp eax, 3	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x400807e	            0x755b	                           jne 0x40080db	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4008080	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5443	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4008087	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5443	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x400808b	        0x488b4008	                mov rax, qword [rax + 8]	      5443	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x400808f	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5443	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4008096	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x400809d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x40080a1	            0x8b00	                    mov eax, dword [rax]	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x40080a3	          0x83f829	                           cmp eax, 0x29	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x40080a6	            0x740f	                            je 0x40080b7	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x40080a8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5446	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_160
0x40080af	          0x4889c7	                            mov rdi, rax	      5446	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_160
0x40080b2	      0xe8a5d3ffff	                  call sym.d_print_error	      5446	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_160
0x40080b7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40080be	        0x488b5008	                mov rdx, qword [rax + 8]	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40080c2	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40080c8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40080cf	            0x89ce	                            mov esi, ecx	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40080d1	          0x4889c7	                            mov rdi, rax	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40080d4	      0xe8cddaffff	                call sym.d_print_subexpr	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40080d9	            0xeb26	                           jmp 0x4008101	      5438	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x40080db	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x40080e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x40080e6	        0x488b5008	                mov rdx, qword [rax + 8]	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x40080ea	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x40080f0	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x40080f7	            0x89ce	                            mov esi, ecx	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x40080f9	          0x4889c7	                            mov rdi, rax	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x40080fc	      0xe8a5daffff	                call sym.d_print_subexpr	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4008101	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008108	        0x488b4008	                mov rax, qword [rax + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400810c	        0x488b4008	                mov rax, qword [rax + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008110	          0x488b00	                    mov rax, qword [rax]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008113	      0xbe00000000	                              mov esi, 0	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008118	          0x4889c7	                            mov rdi, rax	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400811b	      0xe800000000	                          call 0x4008120	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008120	            0x85c0	                           test eax, eax	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008122	            0x7550	                           jne 0x4008174	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008124	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5453	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_164
0x400812b	      0xbe5b000000	                           mov esi, 0x5b	      5453	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_164
0x4008130	          0x4889c7	                            mov rdi, rax	      5453	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_164
0x4008133	      0xe8ced3ffff	                  call sym.d_append_char	      5453	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_164
0x4008138	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400813f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4008143	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4008147	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400814d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4008154	            0x89ce	                            mov esi, ecx	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4008156	          0x4889c7	                            mov rdi, rax	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4008159	      0xe89b0a0000	                   call sym.d_print_comp	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400815e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5455	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_166
0x4008165	      0xbe5d000000	                           mov esi, 0x5d	      5455	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_166
0x400816a	          0x4889c7	                            mov rdi, rax	      5455	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_166
0x400816d	      0xe894d3ffff	                  call sym.d_append_char	      5455	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_166
0x4008172	            0xeb6b	                           jmp 0x40081df	      5455	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_166
0x4008174	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x400817b	        0x488b4008	                mov rax, qword [rax + 8]	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x400817f	        0x488b4008	                mov rax, qword [rax + 8]	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4008183	          0x488b00	                    mov rax, qword [rax]	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4008186	      0xbe00000000	                              mov esi, 0	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x400818b	          0x4889c7	                            mov rdi, rax	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x400818e	      0xe800000000	                          call 0x4008193	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4008193	            0x85c0	                           test eax, eax	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4008195	            0x7422	                            je 0x40081b9	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4008197	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x400819e	        0x488b5008	                mov rdx, qword [rax + 8]	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x40081a2	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x40081a8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x40081af	            0x89ce	                            mov esi, ecx	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x40081b1	          0x4889c7	                            mov rdi, rax	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x40081b4	      0xe84a150000	                call sym.d_print_expr_op	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x40081b9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081c4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081c8	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081ce	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081d5	            0x89ce	                            mov esi, ecx	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081d7	          0x4889c7	                            mov rdi, rax	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081da	      0xe8c7d9ffff	                call sym.d_print_subexpr	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x40081df	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x40081e6	        0x488b4008	                mov rax, qword [rax + 8]	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x40081ea	            0x8b00	                    mov eax, dword [rax]	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x40081ec	          0x83f831	                           cmp eax, 0x31	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x40081ef	     0xf85e4090000	                           jne 0x4008bd9	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x40081f5	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x40081fc	        0x488b4008	                mov rax, qword [rax + 8]	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008200	        0x488b4008	                mov rax, qword [rax + 8]	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008204	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008207	          0x83f801	                              cmp eax, 1	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400820a	     0xf85c9090000	                           jne 0x4008bd9	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008210	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008217	        0x488b4008	                mov rax, qword [rax + 8]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400821b	        0x488b4008	                mov rax, qword [rax + 8]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400821f	        0x488b4008	                mov rax, qword [rax + 8]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008223	           0xfb600	                   movzx eax, byte [rax]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008226	            0x3c3e	                            cmp al, 0x3e	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4008228	     0xf85ab090000	                           jne 0x4008bd9	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400822e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5467	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_170
0x4008235	      0xbe29000000	                           mov esi, 0x29	      5467	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_170
0x400823a	          0x4889c7	                            mov rdi, rax	      5467	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_170
0x400823d	      0xe8c4d2ffff	                  call sym.d_append_char	      5467	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_170
0x4008242	      0xe992090000	                           jmp 0x4008bd9	      5469	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008247	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5473	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_171
0x400824e	          0x4889c7	                            mov rdi, rax	      5473	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_171
0x4008251	      0xe806d2ffff	                  call sym.d_print_error	      5473	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_171
0x4008256	      0xe988090000	                           jmp 0x4008be3	      5474	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400825b	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008262	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008266	            0x8b00	                    mov eax, dword [rax]	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008268	          0x83f83a	                           cmp eax, 0x3a	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x400826b	            0x7516	                           jne 0x4008283	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x400826d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008274	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008278	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x400827c	            0x8b00	                    mov eax, dword [rax]	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x400827e	          0x83f83b	                           cmp eax, 0x3b	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008281	            0x7414	                            je 0x4008297	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008283	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5480	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77	CALL_172
0x400828a	          0x4889c7	                            mov rdi, rax	      5480	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77	CALL_172
0x400828d	      0xe8cad1ffff	                  call sym.d_print_error	      5480	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77	CALL_172
0x4008292	      0xe94c090000	                           jmp 0x4008be3	      5481	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4008297	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x400829e	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40082a4	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40082ab	            0x89ce	                            mov esi, ecx	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40082ad	          0x4889c7	                            mov rdi, rax	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40082b0	      0xe82fdbffff	  call sym.d_maybe_print_fold_expression	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40082b5	            0x85c0	                           test eax, eax	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40082b7	     0xf851f090000	                           jne 0x4008bdc	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40082bd	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5486	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082c4	        0x488b4008	                mov rax, qword [rax + 8]	      5486	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082c8	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      5486	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082cf	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082d6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082da	        0x488b4008	                mov rax, qword [rax + 8]	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082de	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082e5	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082f0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082f4	        0x488b4008	                mov rax, qword [rax + 8]	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082f8	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40082ff	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008306	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400830a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400830e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008312	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008319	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4008320	        0x488b4008	                mov rax, qword [rax + 8]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4008324	          0x488b00	                    mov rax, qword [rax]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4008327	      0xbe00000000	                              mov esi, 0	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x400832c	          0x4889c7	                            mov rdi, rax	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x400832f	      0xe800000000	                          call 0x4008334	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4008334	            0x85c0	                           test eax, eax	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4008336	     0xf8591000000	                           jne 0x40083cd	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x400833c	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4008343	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4008349	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4008350	            0x89ce	                            mov esi, ecx	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4008352	          0x4889c7	                            mov rdi, rax	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4008355	      0xe84cd8ffff	                call sym.d_print_subexpr	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x400835a	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4008361	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4008367	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x400836e	            0x89ce	                            mov esi, ecx	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4008370	          0x4889c7	                            mov rdi, rax	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4008373	      0xe88b130000	                call sym.d_print_expr_op	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4008378	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x400837f	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4008385	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x400838c	            0x89ce	                            mov esi, ecx	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x400838e	          0x4889c7	                            mov rdi, rax	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4008391	      0xe810d8ffff	                call sym.d_print_subexpr	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4008396	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5496	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_178
0x400839d	      0xbe00000000	                              mov esi, 0	      5496	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_178
0x40083a2	          0x4889c7	                            mov rdi, rax	      5496	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_178
0x40083a5	      0xe811d2ffff	                call sym.d_append_string	      5496	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_178
0x40083aa	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x40083b1	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x40083b7	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x40083be	            0x89ce	                            mov esi, ecx	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x40083c0	          0x4889c7	                            mov rdi, rax	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x40083c3	      0xe8ded7ffff	                call sym.d_print_subexpr	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x40083c8	      0xe912080000	                           jmp 0x4008bdf	      5512	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40083cd	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5501	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_180
0x40083d4	      0xbe00000000	                              mov esi, 0	      5501	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_180
0x40083d9	          0x4889c7	                            mov rdi, rax	      5501	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_180
0x40083dc	      0xe8dad1ffff	                call sym.d_append_string	      5501	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_180
0x40083e1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40083e8	        0x488b4008	                mov rax, qword [rax + 8]	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40083ec	          0x4885c0	                           test rax, rax	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40083ef	            0x7432	                            je 0x4008423	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40083f1	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40083f8	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40083fe	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x4008405	            0x89ce	                            mov esi, ecx	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x4008407	          0x4889c7	                            mov rdi, rax	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x400840a	      0xe897d7ffff	                call sym.d_print_subexpr	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x400840f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5505	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_182
0x4008416	      0xbe20000000	                           mov esi, 0x20	      5505	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_182
0x400841b	          0x4889c7	                            mov rdi, rax	      5505	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_182
0x400841e	      0xe8e3d0ffff	                  call sym.d_append_char	      5505	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_182
0x4008423	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x400842a	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4008430	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4008437	            0x89ce	                            mov esi, ecx	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4008439	          0x4889c7	                            mov rdi, rax	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x400843c	      0xe8b8070000	                   call sym.d_print_comp	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4008441	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x4008449	     0xf8490070000	                            je 0x4008bdf	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x400844f	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4008456	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400845c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4008463	            0x89ce	                            mov esi, ecx	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4008465	          0x4889c7	                            mov rdi, rax	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4008468	      0xe839d7ffff	                call sym.d_print_subexpr	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400846d	      0xe96d070000	                           jmp 0x4008bdf	      5512	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008472	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5517	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_185
0x4008479	          0x4889c7	                            mov rdi, rax	      5517	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_185
0x400847c	      0xe8dbcfffff	                  call sym.d_print_error	      5517	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_185
0x4008481	      0xe95d070000	                           jmp 0x4008be3	      5518	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008486	    0xc78534feffff	              mov dword [rbp - 0x1cc], 0	      5526	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008490	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4008497	        0x488b4008	                mov rax, qword [rax + 8]	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x400849b	            0x8b00	                    mov eax, dword [rax]	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x400849d	          0x83f827	                           cmp eax, 0x27	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40084a0	     0xf85ad010000	                           jne 0x4008653	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40084a6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40084ad	        0x488b4008	                mov rax, qword [rax + 8]	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40084b1	        0x488b4008	                mov rax, qword [rax + 8]	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40084b5	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40084b8	    0x898534feffff	            mov dword [rbp - 0x1cc], eax	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40084be	    0x8b8534feffff	            mov eax, dword [rbp - 0x1cc]	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084c4	          0x83f801	                              cmp eax, 1	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084c7	     0xf827f010000	                            jb 0x400864c	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084cd	          0x83f806	                              cmp eax, 6	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084d0	            0x760e	                           jbe 0x40084e0	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084d2	          0x83f807	                              cmp eax, 7	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084d5	     0xf84eb000000	                            je 0x40085c6	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084db	      0xe96c010000	                           jmp 0x400864c	      5587	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40084e0	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40084e7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40084eb	            0x8b00	                    mov eax, dword [rax]	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40084ed	            0x85c0	                           test eax, eax	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40084ef	     0xf855a010000	                           jne 0x400864f	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40084f5	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x40084fc	            0x8b00	                    mov eax, dword [rax]	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x40084fe	          0x83f83d	                           cmp eax, 0x3d	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x4008501	            0x7514	                           jne 0x4008517	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x4008503	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5541	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_186
0x400850a	      0xbe2d000000	                           mov esi, 0x2d	      5541	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_186
0x400850f	          0x4889c7	                            mov rdi, rax	      5541	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_186
0x4008512	      0xe8efcfffff	                  call sym.d_append_char	      5541	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_186
0x4008517	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x400851e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4008522	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4008528	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x400852f	            0x89ce	                            mov esi, ecx	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4008531	          0x4889c7	                            mov rdi, rax	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4008534	      0xe8c0060000	                   call sym.d_print_comp	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4008539	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 6	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4008540	            0x777e	                            ja 0x40085c0	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4008542	    0x8b8534feffff	            mov eax, dword [rbp - 0x1cc]	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4008548	    0x488b04c50000	                  mov rax, qword [rax*8]	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4008550	            0xffe0	                                 jmp rax	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4008552	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5548	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_188
0x4008559	      0xbe75000000	                           mov esi, 0x75	      5548	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_188
0x400855e	          0x4889c7	                            mov rdi, rax	      5548	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_188
0x4008561	      0xe8a0cfffff	                  call sym.d_append_char	      5548	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_188
0x4008566	            0xeb59	                           jmp 0x40085c1	      5549	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4008568	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5551	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_189
0x400856f	      0xbe6c000000	                           mov esi, 0x6c	      5551	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_189
0x4008574	          0x4889c7	                            mov rdi, rax	      5551	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_189
0x4008577	      0xe88acfffff	                  call sym.d_append_char	      5551	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_189
0x400857c	            0xeb43	                           jmp 0x40085c1	      5552	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x400857e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5554	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_190
0x4008585	      0xbe00000000	                              mov esi, 0	      5554	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_190
0x400858a	          0x4889c7	                            mov rdi, rax	      5554	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_190
0x400858d	      0xe829d0ffff	                call sym.d_append_string	      5554	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_190
0x4008592	            0xeb2d	                           jmp 0x40085c1	      5555	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4008594	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5557	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_191
0x400859b	      0xbe00000000	                              mov esi, 0	      5557	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_191
0x40085a0	          0x4889c7	                            mov rdi, rax	      5557	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_191
0x40085a3	      0xe813d0ffff	                call sym.d_append_string	      5557	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_191
0x40085a8	            0xeb17	                           jmp 0x40085c1	      5558	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x40085aa	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5560	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_192
0x40085b1	      0xbe00000000	                              mov esi, 0	      5560	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_192
0x40085b6	          0x4889c7	                            mov rdi, rax	      5560	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_192
0x40085b9	      0xe8fdcfffff	                call sym.d_append_string	      5560	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3	CALL_192
0x40085be	            0xeb01	                           jmp 0x40085c1	      5561	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x40085c0	              0x90	                                     nop	      5546	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x40085c1	      0xe91d060000	                           jmp 0x4008be3	      5563	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40085c6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085d1	            0x8b00	                    mov eax, dword [rax]	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085d3	            0x85c0	                           test eax, eax	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085d5	            0x757b	                           jne 0x4008652	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085d7	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5569	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085de	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5569	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085e2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5569	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085e5	          0x83f801	                              cmp eax, 1	      5569	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085e8	            0x7568	                           jne 0x4008652	      5569	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085ea	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085f1	            0x8b00	                    mov eax, dword [rax]	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085f3	          0x83f83c	                           cmp eax, 0x3c	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085f6	            0x755a	                           jne 0x4008652	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40085f8	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x40085ff	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008603	        0x488b4008	                mov rax, qword [rax + 8]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008607	           0xfb600	                   movzx eax, byte [rax]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400860a	           0xfbec0	                           movsx eax, al	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400860d	          0x83f830	                           cmp eax, 0x30	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008610	            0x7408	                            je 0x400861a	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008612	          0x83f831	                           cmp eax, 0x31	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008615	            0x741c	                            je 0x4008633	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008617	              0x90	                                     nop	      5581	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008618	            0xeb38	                           jmp 0x4008652	      5584	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400861a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5575	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_193
0x4008621	      0xbe00000000	                              mov esi, 0	      5575	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_193
0x4008626	          0x4889c7	                            mov rdi, rax	      5575	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_193
0x4008629	      0xe88dcfffff	                call sym.d_append_string	      5575	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_193
0x400862e	      0xe9b0050000	                           jmp 0x4008be3	      5576	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4008633	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5578	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_194
0x400863a	      0xbe00000000	                              mov esi, 0	      5578	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_194
0x400863f	          0x4889c7	                            mov rdi, rax	      5578	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_194
0x4008642	      0xe874cfffff	                call sym.d_append_string	      5578	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4	CALL_194
0x4008647	      0xe997050000	                           jmp 0x4008be3	      5579	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400864c	              0x90	                                     nop	      5587	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400864d	            0xeb04	                           jmp 0x4008653	      5587	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400864f	              0x90	                                     nop	      5565	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4008650	            0xeb01	                           jmp 0x4008653	      5565	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4008652	              0x90	                                     nop	      5584	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4008653	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5591	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_195
0x400865a	      0xbe28000000	                           mov esi, 0x28	      5591	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_195
0x400865f	          0x4889c7	                            mov rdi, rax	      5591	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_195
0x4008662	      0xe89fceffff	                  call sym.d_append_char	      5591	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_195
0x4008667	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x400866e	        0x488b5008	                mov rdx, qword [rax + 8]	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4008672	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4008678	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x400867f	            0x89ce	                            mov esi, ecx	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4008681	          0x4889c7	                            mov rdi, rax	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4008684	      0xe870050000	                   call sym.d_print_comp	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4008689	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5593	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_197
0x4008690	      0xbe29000000	                           mov esi, 0x29	      5593	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_197
0x4008695	          0x4889c7	                            mov rdi, rax	      5593	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_197
0x4008698	      0xe869ceffff	                  call sym.d_append_char	      5593	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_197
0x400869d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x40086a4	            0x8b00	                    mov eax, dword [rax]	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x40086a6	          0x83f83d	                           cmp eax, 0x3d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x40086a9	            0x7514	                           jne 0x40086bf	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x40086ab	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5595	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_198
0x40086b2	      0xbe2d000000	                           mov esi, 0x2d	      5595	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_198
0x40086b7	          0x4889c7	                            mov rdi, rax	      5595	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_198
0x40086ba	      0xe847ceffff	                  call sym.d_append_char	      5595	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_198
0x40086bf	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 8	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x40086c6	            0x7514	                           jne 0x40086dc	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x40086c8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5597	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_199
0x40086cf	      0xbe5b000000	                           mov esi, 0x5b	      5597	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_199
0x40086d4	          0x4889c7	                            mov rdi, rax	      5597	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_199
0x40086d7	      0xe82aceffff	                  call sym.d_append_char	      5597	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_199
0x40086dc	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x40086e3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x40086e7	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x40086ed	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x40086f4	            0x89ce	                            mov esi, ecx	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x40086f6	          0x4889c7	                            mov rdi, rax	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x40086f9	      0xe8fb040000	                   call sym.d_print_comp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x40086fe	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 8	      5599	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_88
0x4008705	     0xf85d7040000	                           jne 0x4008be2	      5599	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_88
0x400870b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5600	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_201
0x4008712	      0xbe5d000000	                           mov esi, 0x5d	      5600	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_201
0x4008717	          0x4889c7	                            mov rdi, rax	      5600	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_201
0x400871a	      0xe8e7cdffff	                  call sym.d_append_char	      5600	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_201
0x400871f	      0xe9be040000	                           jmp 0x4008be2	      5602	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008724	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5605	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_202
0x400872b	        0x488b4008	                mov rax, qword [rax + 8]	      5605	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_202
0x400872f	            0x89c2	                            mov edx, eax	      5605	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_202
0x4008731	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5605	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_202
0x4008738	            0x89d6	                            mov esi, edx	      5605	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_202
0x400873a	          0x4889c7	                            mov rdi, rax	      5605	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_202
0x400873d	      0xe8aeceffff	                   call sym.d_append_num	      5605	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_202
0x4008742	      0xe99c040000	                           jmp 0x4008be3	      5606	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008747	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5609	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_203
0x400874e	      0xbe00000000	                              mov esi, 0	      5609	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_203
0x4008753	          0x4889c7	                            mov rdi, rax	      5609	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_203
0x4008756	      0xe860ceffff	                call sym.d_append_string	      5609	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_203
0x400875b	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4008762	        0x488b5008	                mov rdx, qword [rax + 8]	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4008766	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x400876c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4008773	            0x89ce	                            mov esi, ecx	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4008775	          0x4889c7	                            mov rdi, rax	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4008778	      0xe87c040000	                   call sym.d_print_comp	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x400877d	      0xe961040000	                           jmp 0x4008be3	      5611	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008782	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x4008789	        0x488b5008	                mov rdx, qword [rax + 8]	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x400878d	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x4008793	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x400879a	            0x89ce	                            mov esi, ecx	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x400879c	          0x4889c7	                            mov rdi, rax	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x400879f	      0xe855040000	                   call sym.d_print_comp	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x40087a4	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x40087ab	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x40087af	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x40087b5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x40087bc	            0x89ce	                            mov esi, ecx	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x40087be	          0x4889c7	                            mov rdi, rax	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x40087c1	      0xe833040000	                   call sym.d_print_comp	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x40087c6	      0xe918040000	                           jmp 0x4008be3	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40087cb	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40087d2	          0x8b4008	                mov eax, dword [rax + 8]	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40087d5	           0xfbed0	                           movsx edx, al	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40087d8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40087df	            0x89d6	                            mov esi, edx	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40087e1	          0x4889c7	                            mov rdi, rax	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40087e4	      0xe81dcdffff	                  call sym.d_append_char	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40087e9	      0xe9f5030000	                           jmp 0x4008be3	      5620	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40087ee	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5623	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_208
0x40087f5	      0xbe00000000	                              mov esi, 0	      5623	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_208
0x40087fa	          0x4889c7	                            mov rdi, rax	      5623	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_208
0x40087fd	      0xe8b9cdffff	                call sym.d_append_string	      5623	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_208
0x4008802	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4008809	        0x488b5008	                mov rdx, qword [rax + 8]	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x400880d	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4008813	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x400881a	            0x89ce	                            mov esi, ecx	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x400881c	          0x4889c7	                            mov rdi, rax	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x400881f	      0xe8d5030000	                   call sym.d_print_comp	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4008824	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5625	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_210
0x400882b	      0xbe29000000	                           mov esi, 0x29	      5625	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_210
0x4008830	          0x4889c7	                            mov rdi, rax	      5625	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_210
0x4008833	      0xe8ceccffff	                  call sym.d_append_char	      5625	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_210
0x4008838	      0xe9a6030000	                           jmp 0x4008be3	      5626	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400883d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4008844	        0x488b5008	                mov rdx, qword [rax + 8]	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4008848	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x400884f	          0x4889d6	                            mov rsi, rdx	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4008852	          0x4889c7	                            mov rdi, rax	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4008855	      0xe862d1ffff	                    call sym.d_find_pack	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x400885a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4008861	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4008869	            0x753b	                           jne 0x40088a6	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x400886b	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008872	        0x488b5008	                mov rdx, qword [rax + 8]	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008876	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x400887c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008883	            0x89ce	                            mov esi, ecx	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008885	          0x4889c7	                            mov rdi, rax	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008888	      0xe819d3ffff	                call sym.d_print_subexpr	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x400888d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5639	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_213
0x4008894	      0xbe00000000	                              mov esi, 0	      5639	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_213
0x4008899	          0x4889c7	                            mov rdi, rax	      5639	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_213
0x400889c	      0xe81acdffff	                call sym.d_append_string	      5639	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_213
0x40088a1	      0xe93d030000	                           jmp 0x4008be3	      5640	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x40088a6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5643	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_214
0x40088ad	          0x4889c7	                            mov rdi, rax	      5643	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_214
0x40088b0	      0xe81fd2ffff	                  call sym.d_pack_length	      5643	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_214
0x40088b5	    0x898544feffff	            mov dword [rbp - 0x1bc], eax	      5643	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_214
0x40088bb	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40088c2	        0x488b4008	                mov rax, qword [rax + 8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40088c6	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40088cd	    0xc78538feffff	              mov dword [rbp - 0x1c8], 0	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40088d7	            0xeb5d	                           jmp 0x4008936	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40088d9	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5647	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40088e0	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      5647	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40088e6	    0x89903c010000	            mov dword [rax + 0x13c], edx	      5647	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40088ec	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x40088f3	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x40088f9	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4008900	            0x89ce	                            mov esi, ecx	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4008902	          0x4889c7	                            mov rdi, rax	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4008905	      0xe8ef020000	                   call sym.d_print_comp	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x400890a	    0x8b8544feffff	            mov eax, dword [rbp - 0x1bc]	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4008910	          0x83e801	                              sub eax, 1	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4008913	    0x3b8538feffff	            cmp eax, dword [rbp - 0x1c8]	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4008919	            0x7e14	                           jle 0x400892f	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x400891b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5650	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_216
0x4008922	      0xbe00000000	                              mov esi, 0	      5650	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_216
0x4008927	          0x4889c7	                            mov rdi, rax	      5650	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_216
0x400892a	      0xe88cccffff	                call sym.d_append_string	      5650	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_216
0x400892f	    0x838538feffff	              add dword [rbp - 0x1c8], 1	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4008936	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x400893c	    0x3b8544feffff	            cmp eax, dword [rbp - 0x1bc]	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4008942	            0x7c95	                            jl 0x40088d9	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4008944	      0xe99a020000	                           jmp 0x4008be3	      5653	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008949	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008950	        0x488b4008	                mov rax, qword [rax + 8]	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008954	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400895b	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4008963	            0x7519	                           jne 0x400897e	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4008965	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5659	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_217
0x400896c	      0xbe00000000	                              mov esi, 0	      5659	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_217
0x4008971	          0x4889c7	                            mov rdi, rax	      5659	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_217
0x4008974	      0xe842ccffff	                call sym.d_append_string	      5659	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_217
0x4008979	      0xe965020000	                           jmp 0x4008be3	      5667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400897e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5662	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_218
0x4008985	      0xbe00000000	                              mov esi, 0	      5662	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_218
0x400898a	          0x4889c7	                            mov rdi, rax	      5662	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_218
0x400898d	      0xe829ccffff	                call sym.d_append_string	      5662	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_218
0x4008992	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5663	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_219
0x4008999	            0x89c2	                            mov edx, eax	      5663	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_219
0x400899b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5663	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_219
0x40089a2	            0x89d6	                            mov esi, edx	      5663	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_219
0x40089a4	          0x4889c7	                            mov rdi, rax	      5663	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_219
0x40089a7	      0xe844ccffff	                   call sym.d_append_num	      5663	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_219
0x40089ac	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5664	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_220
0x40089b3	      0xbe7d000000	                           mov esi, 0x7d	      5664	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_220
0x40089b8	          0x4889c7	                            mov rdi, rax	      5664	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_220
0x40089bb	      0xe846cbffff	                  call sym.d_append_char	      5664	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_17	CALL_220
0x40089c0	      0xe91e020000	                           jmp 0x4008be3	      5667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40089c5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5670	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_221
0x40089cc	      0xbe00000000	                              mov esi, 0	      5670	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_221
0x40089d1	          0x4889c7	                            mov rdi, rax	      5670	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_221
0x40089d4	      0xe8e2cbffff	                call sym.d_append_string	      5670	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_221
0x40089d9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x40089e0	        0x488b5008	                mov rdx, qword [rax + 8]	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x40089e4	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x40089ea	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x40089f1	            0x89ce	                            mov esi, ecx	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x40089f3	          0x4889c7	                            mov rdi, rax	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x40089f6	      0xe8fe010000	                   call sym.d_print_comp	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x40089fb	      0xe9e3010000	                           jmp 0x4008be3	      5672	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a00	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_223
0x4008a07	      0xbe00000000	                              mov esi, 0	      5675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_223
0x4008a0c	          0x4889c7	                            mov rdi, rax	      5675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_223
0x4008a0f	      0xe8a7cbffff	                call sym.d_append_string	      5675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_223
0x4008a14	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4008a1b	        0x488b5008	                mov rdx, qword [rax + 8]	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4008a1f	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4008a25	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4008a2c	            0x89ce	                            mov esi, ecx	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4008a2e	          0x4889c7	                            mov rdi, rax	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4008a31	      0xe8c3010000	                   call sym.d_print_comp	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4008a36	      0xe9a8010000	                           jmp 0x4008be3	      5677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a3b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5680	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_225
0x4008a42	      0xbe00000000	                              mov esi, 0	      5680	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_225
0x4008a47	          0x4889c7	                            mov rdi, rax	      5680	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_225
0x4008a4a	      0xe86ccbffff	                call sym.d_append_string	      5680	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_225
0x4008a4f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a56	    0x8b8038010000	           mov eax, dword [rax + 0x138] 	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a5c	          0x8d5001	                      lea edx, [rax + 1]	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a5f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a66	    0x899038010000	            mov dword [rax + 0x138], edx	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a6c	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4008a73	        0x488b5008	                mov rdx, qword [rax + 8]	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4008a77	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4008a7d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4008a84	            0x89ce	                            mov esi, ecx	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4008a86	          0x4889c7	                            mov rdi, rax	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4008a89	      0xe86b010000	                   call sym.d_print_comp	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4008a8e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a95	    0x8b8038010000	           mov eax, dword [rax + 0x138] 	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a9b	          0x8d50ff	                      lea edx, [rax - 1]	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008a9e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008aa5	    0x899038010000	            mov dword [rax + 0x138], edx	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008aab	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5686	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_227
0x4008ab2	      0xbe00000000	                              mov esi, 0	      5686	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_227
0x4008ab7	          0x4889c7	                            mov rdi, rax	      5686	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_227
0x4008aba	      0xe8fccaffff	                call sym.d_append_string	      5686	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_227
0x4008abf	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5687	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_228
0x4008ac6	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5687	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_228
0x4008ac9	          0x8d5001	                      lea edx, [rax + 1]	      5687	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_228
0x4008acc	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5687	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_228
0x4008ad3	            0x89d6	                            mov esi, edx	      5687	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_228
0x4008ad5	          0x4889c7	                            mov rdi, rax	      5687	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_228
0x4008ad8	      0xe813cbffff	                   call sym.d_append_num	      5687	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_228
0x4008add	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5688	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_229
0x4008ae4	      0xbe7d000000	                           mov esi, 0x7d	      5688	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_229
0x4008ae9	          0x4889c7	                            mov rdi, rax	      5688	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_229
0x4008aec	      0xe815caffff	                  call sym.d_append_char	      5688	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_229
0x4008af1	      0xe9ed000000	                           jmp 0x4008be3	      5689	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008af6	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5692	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_230
0x4008afd	      0xbe00000000	                              mov esi, 0	      5692	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_230
0x4008b02	          0x4889c7	                            mov rdi, rax	      5692	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_230
0x4008b05	      0xe8b1caffff	                call sym.d_append_string	      5692	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_230
0x4008b0a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b11	        0x488b4008	                mov rax, qword [rax + 8]	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b15	          0x83c001	                              add eax, 1	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b18	            0x89c2	                            mov edx, eax	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b1a	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b21	            0x89d6	                            mov esi, edx	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b23	          0x4889c7	                            mov rdi, rax	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b26	      0xe8c5caffff	                   call sym.d_append_num	      5693	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_231
0x4008b2b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5694	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_232
0x4008b32	      0xbe7d000000	                           mov esi, 0x7d	      5694	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_232
0x4008b37	          0x4889c7	                            mov rdi, rax	      5694	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_232
0x4008b3a	      0xe8c7c9ffff	                  call sym.d_append_char	      5694	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_232
0x4008b3f	      0xe99f000000	                           jmp 0x4008be3	      5695	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008b44	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4008b4b	        0x488b5008	                mov rdx, qword [rax + 8]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4008b4f	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4008b55	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4008b5c	            0x89ce	                            mov esi, ecx	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4008b5e	          0x4889c7	                            mov rdi, rax	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4008b61	      0xe893000000	                   call sym.d_print_comp	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4008b66	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5699	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_234
0x4008b6d	      0xbe00000000	                              mov esi, 0	      5699	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_234
0x4008b72	          0x4889c7	                            mov rdi, rax	      5699	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_234
0x4008b75	      0xe841caffff	                call sym.d_append_string	      5699	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_234
0x4008b7a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4008b81	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4008b85	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4008b8b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4008b92	            0x89ce	                            mov esi, ecx	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4008b94	          0x4889c7	                            mov rdi, rax	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4008b97	      0xe85d000000	                   call sym.d_print_comp	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4008b9c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5701	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_236
0x4008ba3	      0xbe5d000000	                           mov esi, 0x5d	      5701	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_236
0x4008ba8	          0x4889c7	                            mov rdi, rax	      5701	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_236
0x4008bab	      0xe856c9ffff	                  call sym.d_append_char	      5701	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_236
0x4008bb0	            0xeb31	                           jmp 0x4008be3	      5702	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bb2	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5705	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_237
0x4008bb9	          0x4889c7	                            mov rdi, rax	      5705	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_237
0x4008bbc	      0xe89bc8ffff	                  call sym.d_print_error	      5705	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_237
0x4008bc1	              0x90	                                     nop	      5706	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bc2	            0xeb1f	                           jmp 0x4008be3	      5706	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bc4	              0x90	                                     nop	      4641	cp-demangle.c	FUNCTION_86	IF_2
0x4008bc5	            0xeb1c	                           jmp 0x4008be3	      4641	cp-demangle.c	FUNCTION_86	IF_2
0x4008bc7	              0x90	                                     nop	      5109	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bc8	            0xeb19	                           jmp 0x4008be3	      5109	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bca	              0x90	                                     nop	      5154	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4008bcb	            0xeb16	                           jmp 0x4008be3	      5154	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4008bcd	              0x90	                                     nop	      5167	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bce	            0xeb13	                           jmp 0x4008be3	      5167	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bd0	              0x90	                                     nop	      5223	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4008bd1	            0xeb10	                           jmp 0x4008be3	      5223	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4008bd3	              0x90	                                     nop	      5296	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bd4	            0xeb0d	                           jmp 0x4008be3	      5296	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bd6	              0x90	                                     nop	      5426	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70
0x4008bd7	            0xeb0a	                           jmp 0x4008be3	      5426	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70
0x4008bd9	              0x90	                                     nop	      5469	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bda	            0xeb07	                           jmp 0x4008be3	      5469	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008bdc	              0x90	                                     nop	      5484	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78
0x4008bdd	            0xeb04	                           jmp 0x4008be3	      5484	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78
0x4008bdf	              0x90	                                     nop	      5512	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008be0	            0xeb01	                           jmp 0x4008be3	      5512	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008be2	              0x90	                                     nop	      5602	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4008be3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5708	cp-demangle.c	FUNCTION_86
0x4008be7	    0x644833042528	                xor rax, qword fs:[0x28]	      5708	cp-demangle.c	FUNCTION_86
0x4008bf0	            0x7405	                            je 0x4008bf7	      5708	cp-demangle.c	FUNCTION_86
0x4008bf2	      0xe800000000	                          call 0x4008bf7	      5708	cp-demangle.c	FUNCTION_86
0x4008bf7	              0xc9	                                   leave	      5708	cp-demangle.c	FUNCTION_86
0x4008bf8	              0xc3	                                     ret	      5708	cp-demangle.c	FUNCTION_86
d_make_character	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	19
0x4001651	              0x55	                                push rbp	      1912	cp-demangle.c	FUNCTION_29
0x4001652	          0x4889e5	                            mov rbp, rsp	      1912	cp-demangle.c	FUNCTION_29
0x4001655	        0x4883ec20	                           sub rsp, 0x20	      1912	cp-demangle.c	FUNCTION_29
0x4001659	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1912	cp-demangle.c	FUNCTION_29
0x400165d	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1912	cp-demangle.c	FUNCTION_29
0x4001660	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1914	cp-demangle.c	FUNCTION_29	CALL_1
0x4001664	          0x4889c7	                            mov rdi, rax	      1914	cp-demangle.c	FUNCTION_29	CALL_1
0x4001667	      0xe88bebffff	                   call sym.d_make_empty	      1914	cp-demangle.c	FUNCTION_29	CALL_1
0x400166c	        0x488945f8	                mov qword [rbp - 8], rax	      1914	cp-demangle.c	FUNCTION_29	CALL_1
0x4001670	      0x48837df800	                  cmp qword [rbp - 8], 0	      1915	cp-demangle.c	FUNCTION_29	IF_1
0x4001675	            0x7414	                            je 0x400168b	      1915	cp-demangle.c	FUNCTION_29	IF_1
0x4001677	        0x488b45f8	                mov rax, qword [rbp - 8]	      1917	cp-demangle.c	FUNCTION_29	IF_1
0x400167b	    0xc70040000000	                   mov dword [rax], 0x40	      1917	cp-demangle.c	FUNCTION_29	IF_1
0x4001681	        0x488b45f8	                mov rax, qword [rbp - 8]	      1918	cp-demangle.c	FUNCTION_29	IF_1
0x4001685	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1918	cp-demangle.c	FUNCTION_29	IF_1
0x4001688	          0x895008	                mov dword [rax + 8], edx	      1918	cp-demangle.c	FUNCTION_29	IF_1
0x400168b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1920	cp-demangle.c	FUNCTION_29
0x400168f	              0xc9	                                   leave	      1921	cp-demangle.c	FUNCTION_29
0x4001690	              0xc3	                                     ret	      1921	cp-demangle.c	FUNCTION_29
d_cv_qualifiers	IF,13:DO,0:functions,0:ELSE,6:FOR,0:CALL,10:SWITCH,1:WHILE,2	229
0x4002bc3	              0x55	                                push rbp	      2708	cp-demangle.c	FUNCTION_35
0x4002bc4	          0x4889e5	                            mov rbp, rsp	      2708	cp-demangle.c	FUNCTION_35
0x4002bc7	        0x4883ec40	                           sub rsp, 0x40	      2708	cp-demangle.c	FUNCTION_35
0x4002bcb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2708	cp-demangle.c	FUNCTION_35
0x4002bcf	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2708	cp-demangle.c	FUNCTION_35
0x4002bd3	          0x8955cc	             mov dword [rbp - 0x34], edx	      2708	cp-demangle.c	FUNCTION_35
0x4002bd6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2712	cp-demangle.c	FUNCTION_35
0x4002bda	        0x488945f0	             mov qword [rbp - 0x10], rax	      2712	cp-demangle.c	FUNCTION_35
0x4002bde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4002be2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4002be6	           0xfb600	                   movzx eax, byte [rax]	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4002be9	          0x8845eb	               mov byte [rbp - 0x15], al	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4002bec	      0xe981020000	                           jmp 0x4002e72	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4002bf1	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4002bf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4002bfd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4002c01	        0x488d5001	                      lea rdx, [rax + 1]	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4002c05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4002c09	        0x48895018	             mov qword [rax + 0x18], rdx	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4002c0d	        0x807deb72	            cmp byte [rbp - 0x15], 0x72 	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c11	            0x752d	                           jne 0x4002c40	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c13	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c17	            0x7407	                            je 0x4002c20	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c19	      0xb81c000000	                           mov eax, 0x1c	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c1e	            0xeb05	                           jmp 0x4002c25	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c20	      0xb819000000	                           mov eax, 0x19	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c25	          0x8945ec	             mov dword [rbp - 0x14], eax	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c28	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c2c	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c2f	          0x83c009	                              add eax, 9	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c32	            0x89c2	                            mov edx, eax	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c38	          0x895048	             mov dword [rax + 0x48], edx	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c3b	      0xe9da010000	                           jmp 0x4002e1a	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4002c40	        0x807deb56	            cmp byte [rbp - 0x15], 0x56 	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c44	            0x752d	                           jne 0x4002c73	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c46	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c4a	            0x7407	                            je 0x4002c53	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c4c	      0xb81d000000	                           mov eax, 0x1d	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c51	            0xeb05	                           jmp 0x4002c58	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c53	      0xb81a000000	                           mov eax, 0x1a	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c58	          0x8945ec	             mov dword [rbp - 0x14], eax	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c5f	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c62	          0x83c009	                              add eax, 9	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c65	            0x89c2	                            mov edx, eax	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c6b	          0x895048	             mov dword [rax + 0x48], edx	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c6e	      0xe9a7010000	                           jmp 0x4002e1a	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4002c73	        0x807deb4b	            cmp byte [rbp - 0x15], 0x4b 	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c77	            0x752d	                           jne 0x4002ca6	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c79	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c7d	            0x7407	                            je 0x4002c86	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c7f	      0xb81e000000	                           mov eax, 0x1e	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c84	            0xeb05	                           jmp 0x4002c8b	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c86	      0xb81b000000	                           mov eax, 0x1b	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c8b	          0x8945ec	             mov dword [rbp - 0x14], eax	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c92	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c95	          0x83c006	                              add eax, 6	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c98	            0x89c2	                            mov edx, eax	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002c9e	          0x895048	             mov dword [rax + 0x48], edx	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002ca1	      0xe974010000	                           jmp 0x4002e1a	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4002ca6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002caa	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cae	           0xfb600	                   movzx eax, byte [rax]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cb1	            0x84c0	                             test al, al	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cb3	            0x7419	                            je 0x4002cce	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cb9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cbd	        0x488d4801	                      lea rcx, [rax + 1]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cc1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cc5	        0x48894a18	             mov qword [rdx + 0x18], rcx	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cc9	           0xfb600	                   movzx eax, byte [rax]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002ccc	            0xeb05	                           jmp 0x4002cd3	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cce	      0xb800000000	                              mov eax, 0	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cd3	          0x8845eb	               mov byte [rbp - 0x15], al	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4002cd6	        0x807deb78	            cmp byte [rbp - 0x15], 0x78 	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002cda	            0x751f	                           jne 0x4002cfb	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002cdc	    0xc745ec4c0000	           mov dword [rbp - 0x14], 0x4c 	      2746	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002ce3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002ce7	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002cea	          0x83c011	                           add eax, 0x11	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002ced	            0x89c2	                            mov edx, eax	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002cef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002cf3	          0x895048	             mov dword [rax + 0x48], edx	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002cf6	      0xe91f010000	                           jmp 0x4002e1a	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4002cfb	        0x807deb6f	            cmp byte [rbp - 0x15], 0x6f 	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002cff	            0x740a	                            je 0x4002d0b	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d01	        0x807deb4f	            cmp byte [rbp - 0x15], 0x4f 	      2750	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d05	     0xf8586000000	                           jne 0x4002d91	      2750	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d0b	    0xc745ec4e0000	           mov dword [rbp - 0x14], 0x4e 	      2752	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d16	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d19	          0x83c009	                              add eax, 9	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d1c	            0x89c2	                            mov edx, eax	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d22	          0x895048	             mov dword [rax + 0x48], edx	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4002d25	        0x807deb4f	            cmp byte [rbp - 0x15], 0x4f 	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x4002d29	     0xf85ea000000	                           jne 0x4002e19	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x4002d2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2756	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	CALL_5
0x4002d33	          0x4889c7	                            mov rdi, rax	      2756	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	CALL_5
0x4002d36	      0xe8fb150000	                   call sym.d_expression	      2756	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	CALL_5
0x4002d3b	        0x488945f8	                mov qword [rbp - 8], rax	      2756	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	CALL_5
0x4002d3f	      0x48837df800	                  cmp qword [rbp - 8], 0	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4002d44	            0x750a	                           jne 0x4002d50	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4002d46	      0xb800000000	                              mov eax, 0	      2758	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4002d4b	      0xe9a7010000	                           jmp 0x4002ef7	      2758	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4002d50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d54	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d58	           0xfb600	                   movzx eax, byte [rax]	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d5b	            0x3c45	                            cmp al, 0x45	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d5d	            0x751b	                           jne 0x4002d7a	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d63	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d67	        0x488d5001	                      lea rdx, [rax + 1]	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d6f	        0x48895018	             mov qword [rax + 0x18], rdx	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d73	      0xb800000000	                              mov eax, 0	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d78	            0xeb05	                           jmp 0x4002d7f	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d7a	      0xb801000000	                              mov eax, 1	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d7f	            0x84c0	                             test al, al	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d81	     0xf8492000000	                            je 0x4002e19	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4002d87	      0xb800000000	                              mov eax, 0	      2760	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8
0x4002d8c	      0xe966010000	                           jmp 0x4002ef7	      2760	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8
0x4002d91	        0x807deb77	            cmp byte [rbp - 0x15], 0x77 	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002d95	            0x7578	                           jne 0x4002e0f	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002d97	    0xc745ec4f0000	           mov dword [rbp - 0x14], 0x4f 	      2765	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002d9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002da2	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002da5	          0x83c006	                              add eax, 6	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002da8	            0x89c2	                            mov edx, eax	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002daa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002dae	          0x895048	             mov dword [rax + 0x48], edx	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4002db1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4002db5	          0x4889c7	                            mov rdi, rax	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4002db8	      0xe8b8020000	                     call sym.d_parmlist	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4002dbd	        0x488945f8	                mov qword [rbp - 8], rax	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4002dc1	      0x48837df800	                  cmp qword [rbp - 8], 0	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4002dc6	            0x750a	                           jne 0x4002dd2	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4002dc8	      0xb800000000	                              mov eax, 0	      2769	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4002dcd	      0xe925010000	                           jmp 0x4002ef7	      2769	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4002dd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002dd6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002dda	           0xfb600	                   movzx eax, byte [rax]	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002ddd	            0x3c45	                            cmp al, 0x45	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002ddf	            0x751b	                           jne 0x4002dfc	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002de1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002de5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002de9	        0x488d5001	                      lea rdx, [rax + 1]	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002ded	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002df1	        0x48895018	             mov qword [rax + 0x18], rdx	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002df5	      0xb800000000	                              mov eax, 0	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002dfa	            0xeb05	                           jmp 0x4002e01	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002dfc	      0xb801000000	                              mov eax, 1	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002e01	            0x84c0	                             test al, al	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002e03	            0x7415	                            je 0x4002e1a	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4002e05	      0xb800000000	                              mov eax, 0	      2771	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11
0x4002e0a	      0xe9e8000000	                           jmp 0x4002ef7	      2771	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11
0x4002e0f	      0xb800000000	                              mov eax, 0	      2774	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_6
0x4002e14	      0xe9de000000	                           jmp 0x4002ef7	      2774	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_6
0x4002e19	              0x90	                                     nop	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x4002e1a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e1e	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e25	          0x4889d1	                            mov rcx, rdx	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e28	      0xba00000000	                              mov edx, 0	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e2d	          0x4889c7	                            mov rdi, rax	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e30	      0xe82bd4ffff	                    call sym.d_make_comp	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e35	          0x4889c2	                            mov rdx, rax	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e38	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e3c	          0x488910	                    mov qword [rax], rdx	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4002e3f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4002e43	          0x488b00	                    mov rax, qword [rax]	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4002e46	          0x4885c0	                           test rax, rax	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4002e49	            0x750a	                           jne 0x4002e55	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4002e4b	      0xb800000000	                              mov eax, 0	      2779	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4002e50	      0xe9a2000000	                           jmp 0x4002ef7	      2779	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4002e55	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2780	cp-demangle.c	FUNCTION_35	WHILE_1
0x4002e59	          0x488b00	                    mov rax, qword [rax]	      2780	cp-demangle.c	FUNCTION_35	WHILE_1
0x4002e5c	        0x4883c008	                              add rax, 8	      2780	cp-demangle.c	FUNCTION_35	WHILE_1
0x4002e60	        0x488945d0	             mov qword [rbp - 0x30], rax	      2780	cp-demangle.c	FUNCTION_35	WHILE_1
0x4002e64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x4002e68	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x4002e6c	           0xfb600	                   movzx eax, byte [rax]	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x4002e6f	          0x8845eb	               mov byte [rbp - 0x15], al	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x4002e72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4002e76	          0x4889c7	                            mov rdi, rax	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4002e79	      0xe8e1f2ffff	              call sym.next_is_type_qual	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4002e7e	            0x85c0	                           test eax, eax	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4002e80	     0xf856bfdffff	                           jne 0x4002bf1	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4002e86	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4002e8a	            0x7567	                           jne 0x4002ef3	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4002e8c	        0x807deb46	            cmp byte [rbp - 0x15], 0x46 	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4002e90	            0x7561	                           jne 0x4002ef3	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4002e92	            0xeb55	                           jmp 0x4002ee9	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002e94	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002e98	          0x488b00	                    mov rax, qword [rax]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002e9b	            0x8b00	                    mov eax, dword [rax]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002e9d	          0x83f81a	                           cmp eax, 0x1a	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ea0	            0x741b	                            je 0x4002ebd	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ea2	          0x83f81b	                           cmp eax, 0x1b	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ea5	            0x7425	                            je 0x4002ecc	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ea7	          0x83f819	                           cmp eax, 0x19	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002eaa	            0x7402	                            je 0x4002eae	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002eac	            0xeb2c	                           jmp 0x4002eda	      2801	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002eae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2792	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002eb2	          0x488b00	                    mov rax, qword [rax]	      2792	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002eb5	    0xc7001c000000	                   mov dword [rax], 0x1c	      2792	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ebb	            0xeb1d	                           jmp 0x4002eda	      2793	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ebd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2795	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ec1	          0x488b00	                    mov rax, qword [rax]	      2795	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ec4	    0xc7001d000000	                   mov dword [rax], 0x1d	      2795	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002eca	            0xeb0e	                           jmp 0x4002eda	      2796	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ecc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2798	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ed0	          0x488b00	                    mov rax, qword [rax]	      2798	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ed3	    0xc7001e000000	                   mov dword [rax], 0x1e	      2798	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002ed9	              0x90	                                     nop	      2799	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4002eda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002ede	          0x488b00	                    mov rax, qword [rax]	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002ee1	        0x4883c008	                              add rax, 8	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002ee5	        0x488945f0	             mov qword [rbp - 0x10], rax	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002ee9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002eed	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002ef1	            0x75a1	                           jne 0x4002e94	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4002ef3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2807	cp-demangle.c	FUNCTION_35
0x4002ef7	              0xc9	                                   leave	      2808	cp-demangle.c	FUNCTION_35
0x4002ef8	              0xc3	                                     ret	      2808	cp-demangle.c	FUNCTION_35
d_make_dtor	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x4000546	              0x55	                                push rbp	      1154	cp-demangle.c	FUNCTION_12
0x4000547	          0x4889e5	                            mov rbp, rsp	      1154	cp-demangle.c	FUNCTION_12
0x400054a	        0x4883ec28	                           sub rsp, 0x28	      1154	cp-demangle.c	FUNCTION_12
0x400054e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1154	cp-demangle.c	FUNCTION_12
0x4000552	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1154	cp-demangle.c	FUNCTION_12
0x4000555	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1154	cp-demangle.c	FUNCTION_12
0x4000559	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1157	cp-demangle.c	FUNCTION_12	CALL_1
0x400055d	          0x4889c7	                            mov rdi, rax	      1157	cp-demangle.c	FUNCTION_12	CALL_1
0x4000560	      0xe892fcffff	                   call sym.d_make_empty	      1157	cp-demangle.c	FUNCTION_12	CALL_1
0x4000565	        0x488945f8	                mov qword [rbp - 8], rax	      1157	cp-demangle.c	FUNCTION_12	CALL_1
0x4000569	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x400056d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x4000570	        0x488b45f8	                mov rax, qword [rbp - 8]	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x4000574	            0x89ce	                            mov esi, ecx	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x4000576	          0x4889c7	                            mov rdi, rax	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x4000579	      0xe800000000	                          call 0x400057e	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x400057e	            0x85c0	                           test eax, eax	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x4000580	            0x7507	                           jne 0x4000589	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x4000582	      0xb800000000	                              mov eax, 0	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x4000587	            0xeb04	                           jmp 0x400058d	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x4000589	        0x488b45f8	                mov rax, qword [rbp - 8]	      1160	cp-demangle.c	FUNCTION_12
0x400058d	              0xc9	                                   leave	      1161	cp-demangle.c	FUNCTION_12
0x400058e	              0xc3	                                     ret	      1161	cp-demangle.c	FUNCTION_12
d_abi_tags	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,4:SWITCH,0:WHILE,1	37
0x40009ff	              0x55	                                push rbp	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a00	          0x4889e5	                            mov rbp, rsp	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a03	        0x4883ec30	                           sub rsp, 0x30	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a07	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a0b	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a0f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a13	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a17	        0x488945f0	             mov qword [rbp - 0x10], rax	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a1b	            0xeb41	                           jmp 0x4000a5e	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000a1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000a21	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000a25	        0x488d5001	                      lea rdx, [rax + 1]	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000a29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000a2d	        0x48895018	             mov qword [rax + 0x18], rdx	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000a31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000a35	          0x4889c7	                            mov rdi, rax	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000a38	      0xe84d070000	                  call sym.d_source_name	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000a3d	        0x488945f8	                mov qword [rbp - 8], rax	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000a41	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000a45	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000a49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000a4d	      0xbe4b000000	                           mov esi, 0x4b	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000a52	          0x4889c7	                            mov rdi, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000a55	      0xe806f8ffff	                    call sym.d_make_comp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000a5a	        0x488945d0	             mov qword [rbp - 0x30], rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000a5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000a62	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000a66	           0xfb600	                   movzx eax, byte [rax]	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000a69	          0x8845ef	               mov byte [rbp - 0x11], al	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000a6c	        0x807def42	            cmp byte [rbp - 0x11], 0x42 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000a70	            0x74ab	                            je 0x4000a1d	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000a72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1382	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a76	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1382	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a7a	        0x48895040	             mov qword [rax + 0x40], rdx	      1382	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a7e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1384	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a82	              0xc9	                                   leave	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000a83	              0xc3	                                     ret	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
d_expression_1	IF,38:DO,0:functions,0:ELSE,23:FOR,0:CALL,78:SWITCH,2:WHILE,0	622
0x4003a1e	              0x55	                                push rbp	      3256	cp-demangle.c	FUNCTION_51
0x4003a1f	          0x4889e5	                            mov rbp, rsp	      3256	cp-demangle.c	FUNCTION_51
0x4003a22	        0x4883c480	             add rsp, 0xffffffffffffff80	      3256	cp-demangle.c	FUNCTION_51
0x4003a26	        0x48897d88	             mov qword [rbp - 0x78], rdi	      3256	cp-demangle.c	FUNCTION_51
0x4003a2a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x4003a2e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x4003a32	           0xfb600	                   movzx eax, byte [rax]	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x4003a35	          0x884593	               mov byte [rbp - 0x6d], al	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x4003a38	        0x807d934c	            cmp byte [rbp - 0x6d], 0x4c 	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x4003a3c	            0x7511	                           jne 0x4003a4f	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x4003a3e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4003a42	          0x4889c7	                            mov rdi, rax	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4003a45	      0xe82d090000	                 call sym.d_expr_primary	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4003a4a	      0xe9e5080000	                           jmp 0x4004334	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4003a4f	        0x807d9354	            cmp byte [rbp - 0x6d], 0x54 	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4003a53	            0x7511	                           jne 0x4003a66	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4003a55	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4003a59	          0x4889c7	                            mov rdi, rax	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4003a5c	      0xe889fbffff	               call sym.d_template_param	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4003a61	      0xe9ce080000	                           jmp 0x4004334	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4003a66	        0x807d9373	            cmp byte [rbp - 0x6d], 0x73 	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a6a	     0xf85b9000000	                           jne 0x4003b29	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a70	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a74	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a78	        0x4883c001	                              add rax, 1	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a7c	           0xfb600	                   movzx eax, byte [rax]	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a7f	            0x3c72	                            cmp al, 0x72	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a81	     0xf85a2000000	                           jne 0x4003b29	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4003a87	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x4003a8b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x4003a8f	        0x488d5002	                      lea rdx, [rax + 2]	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x4003a93	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x4003a97	        0x48895018	             mov qword [rax + 0x18], rdx	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x4003a9b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x4003a9f	          0x4889c7	                            mov rdi, rax	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x4003aa2	      0xe800000000	                          call 0x4003aa7	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x4003aa7	        0x488945e0	             mov qword [rbp - 0x20], rax	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x4003aab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x4003aaf	          0x4889c7	                            mov rdi, rax	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x4003ab2	      0xe8c5d4ffff	             call sym.d_unqualified_name	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x4003ab7	        0x488945e8	             mov qword [rbp - 0x18], rax	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x4003abb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4003abf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4003ac3	           0xfb600	                   movzx eax, byte [rax]	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4003ac6	            0x3c49	                            cmp al, 0x49	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4003ac8	            0x741e	                            je 0x4003ae8	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4003aca	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4003ace	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4003ad2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4003ad6	      0xbe01000000	                              mov esi, 1	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4003adb	          0x4889c7	                            mov rdi, rax	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4003ade	      0xe87dc7ffff	                    call sym.d_make_comp	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4003ae3	      0xe94c080000	                           jmp 0x4004334	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4003ae8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003aec	          0x4889c7	                            mov rdi, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003aef	      0xe86bfbffff	                call sym.d_template_args	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003af4	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003af7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003afb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003aff	      0xbe04000000	                              mov esi, 4	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b04	          0x4889c7	                            mov rdi, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b07	      0xe854c7ffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b0c	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b0f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b13	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b17	      0xbe01000000	                              mov esi, 1	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b1c	          0x4889c7	                            mov rdi, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b1f	      0xe83cc7ffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b24	      0xe90b080000	                           jmp 0x4004334	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4003b29	        0x807d9373	            cmp byte [rbp - 0x6d], 0x73 	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b2d	            0x7551	                           jne 0x4003b80	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b2f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b33	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b37	        0x4883c001	                              add rax, 1	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b3b	           0xfb600	                   movzx eax, byte [rax]	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b3e	            0x3c70	                            cmp al, 0x70	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b40	            0x753e	                           jne 0x4003b80	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4003b42	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4003b46	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4003b4a	        0x488d5002	                      lea rdx, [rax + 2]	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4003b4e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4003b52	        0x48895018	             mov qword [rax + 0x18], rdx	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4003b56	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b5a	          0x4889c7	                            mov rdi, rax	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b5d	      0xe8bcfeffff	                 call sym.d_expression_1	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b62	          0x4889c2	                            mov rdx, rax	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b65	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b69	      0xb900000000	                              mov ecx, 0	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b6e	      0xbe4a000000	                           mov esi, 0x4a	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b73	          0x4889c7	                            mov rdi, rax	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b76	      0xe8e5c6ffff	                    call sym.d_make_comp	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b7b	      0xe9b4070000	                           jmp 0x4004334	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4003b80	        0x807d9366	            cmp byte [rbp - 0x6d], 0x66 	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003b84	     0xf8599000000	                           jne 0x4003c23	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003b8a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003b8e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003b92	        0x4883c001	                              add rax, 1	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003b96	           0xfb600	                   movzx eax, byte [rax]	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003b99	            0x3c70	                            cmp al, 0x70	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003b9b	     0xf8582000000	                           jne 0x4003c23	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4003ba1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4003ba5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4003ba9	        0x488d5002	                      lea rdx, [rax + 2]	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4003bad	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4003bb1	        0x48895018	             mov qword [rax + 0x18], rdx	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4003bb5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4003bb9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4003bbd	           0xfb600	                   movzx eax, byte [rax]	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4003bc0	            0x3c54	                            cmp al, 0x54	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4003bc2	            0x751d	                           jne 0x4003be1	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4003bc4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4003bc8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4003bcc	        0x488d5001	                      lea rdx, [rax + 1]	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4003bd0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4003bd4	        0x48895018	             mov qword [rax + 0x18], rdx	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4003bd8	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x4003bdf	            0xeb2c	                           jmp 0x4003c0d	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x4003be1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3298	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	CALL_20
0x4003be5	          0x4889c7	                            mov rdi, rax	      3298	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	CALL_20
0x4003be8	      0xe87cf9ffff	               call sym.d_compact_number	      3298	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	CALL_20
0x4003bed	          0x894594	             mov dword [rbp - 0x6c], eax	      3298	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	CALL_20
0x4003bf0	    0x817d94ffffff	     cmp dword [rbp - 0x6c], 0x7fffffff 	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4003bf7	            0x7406	                            je 0x4003bff	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4003bf9	        0x837d94ff	cmp dword [rbp - 0x6c], 0xffffffffffffffff	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4003bfd	            0x750a	                           jne 0x4003c09	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4003bff	      0xb800000000	                              mov eax, 0	      3300	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4003c04	      0xe92b070000	                           jmp 0x4004334	      3300	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4003c09	        0x83459401	               add dword [rbp - 0x6c], 1	      3301	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6
0x4003c0d	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      3303	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_21
0x4003c10	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3303	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_21
0x4003c14	            0x89d6	                            mov esi, edx	      3303	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_21
0x4003c16	          0x4889c7	                            mov rdi, rax	      3303	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_21
0x4003c19	      0xe8b5c9ffff	          call sym.d_make_function_param	      3303	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_21
0x4003c1e	      0xe911070000	                           jmp 0x4004334	      3303	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_21
0x4003c23	        0x807d932f	            cmp byte [rbp - 0x6d], 0x2f 	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x4003c27	            0x7e06	                           jle 0x4003c2f	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x4003c29	        0x807d9339	            cmp byte [rbp - 0x6d], 0x39 	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x4003c2d	            0x7e1d	                           jle 0x4003c4c	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x4003c2f	        0x807d936f	            cmp byte [rbp - 0x6d], 0x6f 	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c33	     0xf858f000000	                           jne 0x4003cc8	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c39	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c3d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c41	        0x4883c001	                              add rax, 1	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c45	           0xfb600	                   movzx eax, byte [rax]	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c48	            0x3c6e	                            cmp al, 0x6e	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c4a	            0x757c	                           jne 0x4003cc8	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x4003c4c	        0x807d936f	            cmp byte [rbp - 0x6d], 0x6f 	      3312	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_10
0x4003c50	            0x7514	                           jne 0x4003c66	      3312	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_10
0x4003c52	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x4003c56	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x4003c5a	        0x488d5002	                      lea rdx, [rax + 2]	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x4003c5e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x4003c62	        0x48895018	             mov qword [rax + 0x18], rdx	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x4003c66	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x4003c6a	          0x4889c7	                            mov rdi, rax	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x4003c6d	      0xe80ad3ffff	             call sym.d_unqualified_name	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x4003c72	        0x488945f8	                mov qword [rbp - 8], rax	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x4003c76	      0x48837df800	                  cmp qword [rbp - 8], 0	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4003c7b	            0x750a	                           jne 0x4003c87	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4003c7d	      0xb800000000	                              mov eax, 0	      3318	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4003c82	      0xe9ad060000	                           jmp 0x4004334	      3318	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4003c87	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4003c8b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4003c8f	           0xfb600	                   movzx eax, byte [rax]	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4003c92	            0x3c49	                            cmp al, 0x49	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4003c94	            0x7529	                           jne 0x4003cbf	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4003c96	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003c9a	          0x4889c7	                            mov rdi, rax	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003c9d	      0xe8bdf9ffff	                call sym.d_template_args	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003ca2	          0x4889c1	                            mov rcx, rax	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003ca5	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003ca9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003cad	      0xbe04000000	                              mov esi, 4	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003cb2	          0x4889c7	                            mov rdi, rax	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003cb5	      0xe8a6c5ffff	                    call sym.d_make_comp	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003cba	      0xe975060000	                           jmp 0x4004334	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4003cbf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3323	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	ELSE_8
0x4003cc3	      0xe96c060000	                           jmp 0x4004334	      3323	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	ELSE_8
0x4003cc8	        0x807d9369	            cmp byte [rbp - 0x6d], 0x69 	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x4003ccc	            0x740a	                            je 0x4003cd8	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x4003cce	        0x807d9374	            cmp byte [rbp - 0x6d], 0x74 	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x4003cd2	     0xf8590000000	                           jne 0x4003d68	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x4003cd8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4003cdc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4003ce0	        0x4883c001	                              add rax, 1	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4003ce4	           0xfb600	                   movzx eax, byte [rax]	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4003ce7	            0x3c6c	                            cmp al, 0x6c	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4003ce9	            0x757d	                           jne 0x4003d68	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4003ceb	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3329	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x4003cf3	        0x807d9374	            cmp byte [rbp - 0x6d], 0x74 	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4003cf7	            0x7510	                           jne 0x4003d09	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4003cf9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4003cfd	          0x4889c7	                            mov rdi, rax	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4003d00	      0xe800000000	                          call 0x4003d05	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4003d05	        0x488945a0	             mov qword [rbp - 0x60], rax	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4003d09	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4003d0d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4003d11	        0x4883c001	                              add rax, 1	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4003d15	           0xfb600	                   movzx eax, byte [rax]	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4003d18	            0x84c0	                             test al, al	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4003d1a	            0x750a	                           jne 0x4003d26	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4003d1c	      0xb800000000	                              mov eax, 0	      3333	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15
0x4003d21	      0xe90e060000	                           jmp 0x4004334	      3333	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15
0x4003d26	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x4003d2a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x4003d2e	        0x488d5002	                      lea rdx, [rax + 2]	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x4003d32	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x4003d36	        0x48895018	             mov qword [rax + 0x18], rdx	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x4003d3a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d3e	      0xbe45000000	                           mov esi, 0x45	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d43	          0x4889c7	                            mov rdi, rax	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d46	      0xe85cfbffff	                     call sym.d_exprlist	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d4b	          0x4889c1	                            mov rcx, rax	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d4e	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d52	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d56	      0xbe30000000	                           mov esi, 0x30	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d5b	          0x4889c7	                            mov rdi, rax	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d5e	      0xe8fdc4ffff	                    call sym.d_make_comp	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d63	      0xe9cc050000	                           jmp 0x4004334	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4003d68	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      3341	cp-demangle.c	FUNCTION_51	ELSE_10
0x4003d70	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4003d74	          0x4889c7	                            mov rdi, rax	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4003d77	      0xe8bed6ffff	                call sym.d_operator_name	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4003d7c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4003d80	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4003d85	            0x750a	                           jne 0x4003d91	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4003d87	      0xb800000000	                              mov eax, 0	      3346	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4003d8c	      0xe9a3050000	                           jmp 0x4004334	      3346	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4003d91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003d95	            0x8b00	                    mov eax, dword [rax]	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003d97	          0x83f831	                           cmp eax, 0x31	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003d9a	            0x756b	                           jne 0x4003e07	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003d9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003da0	        0x488b4008	                mov rax, qword [rax + 8]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003da4	          0x488b00	                    mov rax, qword [rax]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003da7	        0x488945a8	             mov qword [rbp - 0x58], rax	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003dab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003daf	          0x8b5048	            mov edx, dword [rax + 0x48] 	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003db2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003db6	        0x488b4008	                mov rax, qword [rax + 8]	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003dba	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003dbd	          0x83e802	                              sub eax, 2	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003dc0	             0x1c2	                            add edx, eax	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003dc2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003dc6	          0x895048	             mov dword [rax + 0x48], edx	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4003dc9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4003dcd	      0xbe00000000	                              mov esi, 0	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4003dd2	          0x4889c7	                            mov rdi, rax	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4003dd5	      0xe800000000	                          call 0x4003dda	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4003dda	            0x85c0	                           test eax, eax	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4003ddc	            0x7529	                           jne 0x4003e07	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4003dde	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003de2	          0x4889c7	                            mov rdi, rax	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003de5	      0xe800000000	                          call 0x4003dea	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003dea	          0x4889c1	                            mov rcx, rax	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003ded	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003df1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003df5	      0xbe36000000	                           mov esi, 0x36	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003dfa	          0x4889c7	                            mov rdi, rax	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003dfd	      0xe85ec4ffff	                    call sym.d_make_comp	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003e02	      0xe92d050000	                           jmp 0x4004334	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4003e07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e0b	            0x8b00	                    mov eax, dword [rax]	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e0d	          0x83f832	                           cmp eax, 0x32	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e10	            0x7424	                            je 0x4003e36	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e12	          0x83f833	                           cmp eax, 0x33	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e15	            0x742b	                            je 0x4003e42	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e17	          0x83f831	                           cmp eax, 0x31	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e1a	            0x740a	                            je 0x4003e26	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e1c	      0xb800000000	                              mov eax, 0	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e21	      0xe90e050000	                           jmp 0x4004334	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3362	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e2a	        0x488b4008	                mov rax, qword [rax + 8]	      3362	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e2e	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3362	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e31	          0x894598	             mov dword [rbp - 0x68], eax	      3362	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e34	            0xeb14	                           jmp 0x4003e4a	      3363	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3365	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e3a	          0x8b4008	                mov eax, dword [rax + 8]	      3365	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e3d	          0x894598	             mov dword [rbp - 0x68], eax	      3365	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e40	            0xeb08	                           jmp 0x4003e4a	      3366	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e42	    0xc74598010000	               mov dword [rbp - 0x68], 1	      3368	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e49	              0x90	                                     nop	      3369	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4003e4a	          0x8b4598	             mov eax, dword [rbp - 0x68]	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e4d	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e50	            0x7444	                            je 0x4003e96	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e52	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e55	            0x7f09	                            jg 0x4003e60	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e57	            0x85c0	                           test eax, eax	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e59	            0x741c	                            je 0x4003e77	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e5b	      0xe9cf040000	                           jmp 0x400432f	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e60	          0x83f802	                              cmp eax, 2	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e63	     0xf845d010000	                            je 0x4003fc6	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e69	          0x83f803	                              cmp eax, 3	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e6c	     0xf849c020000	                            je 0x400410e	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e72	      0xe9b8040000	                           jmp 0x400432f	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e77	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4003e7b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4003e7f	      0xb900000000	                              mov ecx, 0	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4003e84	      0xbe35000000	                           mov esi, 0x35	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4003e89	          0x4889c7	                            mov rdi, rax	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4003e8c	      0xe8cfc3ffff	                    call sym.d_make_comp	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4003e91	      0xe99e040000	                           jmp 0x4004334	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4003e96	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      3380	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4003e9d	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ea2	            0x745e	                            je 0x4003f02	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ea4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ea8	           0xfb600	                   movzx eax, byte [rax]	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003eab	            0x3c70	                            cmp al, 0x70	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ead	            0x740b	                            je 0x4003eba	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003eaf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003eb3	           0xfb600	                   movzx eax, byte [rax]	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003eb6	            0x3c6d	                            cmp al, 0x6d	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003eb8	            0x7548	                           jne 0x4003f02	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003eba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ebe	        0x4883c001	                              add rax, 1	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ec2	           0xfb610	                   movzx edx, byte [rax]	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ec5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ec9	           0xfb600	                   movzx eax, byte [rax]	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ecc	            0x38c2	                              cmp dl, al	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ece	            0x7532	                           jne 0x4003f02	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4003ed0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003ed4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003ed8	           0xfb600	                   movzx eax, byte [rax]	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003edb	            0x3c5f	                            cmp al, 0x5f	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003edd	            0x751b	                           jne 0x4003efa	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003edf	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003ee3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003ee7	        0x488d5001	                      lea rdx, [rax + 1]	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003eeb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003eef	        0x48895018	             mov qword [rax + 0x18], rdx	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003ef3	      0xb800000000	                              mov eax, 0	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003ef8	            0xeb05	                           jmp 0x4003eff	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003efa	      0xb801000000	                              mov eax, 1	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003eff	          0x89459c	             mov dword [rbp - 0x64], eax	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4003f02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4003f06	            0x8b00	                    mov eax, dword [rax]	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4003f08	          0x83f833	                           cmp eax, 0x33	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4003f0b	            0x753a	                           jne 0x4003f47	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4003f0d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f11	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f15	           0xfb600	                   movzx eax, byte [rax]	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f18	            0x3c5f	                            cmp al, 0x5f	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4003f1a	            0x752b	                           jne 0x4003f47	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4003f1c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f20	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f24	        0x488d5001	                      lea rdx, [rax + 1]	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f28	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f2c	        0x48895018	             mov qword [rax + 0x18], rdx	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4003f30	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4003f34	      0xbe45000000	                           mov esi, 0x45	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4003f39	          0x4889c7	                            mov rdi, rax	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4003f3c	      0xe866f9ffff	                     call sym.d_exprlist	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4003f41	        0x488945b0	             mov qword [rbp - 0x50], rax	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4003f45	            0xeb3e	                           jmp 0x4003f85	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4003f47	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f4c	            0x7427	                            je 0x4003f75	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f4e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f52	      0xbe00000000	                              mov esi, 0	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f57	          0x4889c7	                            mov rdi, rax	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f5a	      0xe800000000	                          call 0x4003f5f	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f5f	            0x85c0	                           test eax, eax	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f61	            0x7512	                           jne 0x4003f75	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4003f63	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4003f67	          0x4889c7	                            mov rdi, rax	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4003f6a	      0xe843f7ffff	              call sym.d_template_args_1	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4003f6f	        0x488945b0	             mov qword [rbp - 0x50], rax	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4003f73	            0xeb10	                           jmp 0x4003f85	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4003f75	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x4003f79	          0x4889c7	                            mov rdi, rax	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x4003f7c	      0xe89dfaffff	                 call sym.d_expression_1	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x4003f81	        0x488945b0	             mov qword [rbp - 0x50], rax	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x4003f85	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x4003f89	            0x741d	                            je 0x4003fa8	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x4003f8b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4003f8f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4003f93	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4003f97	      0xbe38000000	                           mov esi, 0x38	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4003f9c	          0x4889c7	                            mov rdi, rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4003f9f	      0xe8bcc2ffff	                    call sym.d_make_comp	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4003fa4	        0x488945b0	             mov qword [rbp - 0x50], rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4003fa8	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4003fac	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4003fb0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4003fb4	      0xbe36000000	                           mov esi, 0x36	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4003fb9	          0x4889c7	                            mov rdi, rax	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4003fbc	      0xe89fc2ffff	                    call sym.d_make_comp	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4003fc1	      0xe96e030000	                           jmp 0x4004334	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4003fc6	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x4003fcb	            0x750a	                           jne 0x4003fd7	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x4003fcd	      0xb800000000	                              mov eax, 0	      3408	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x4003fd2	      0xe95d030000	                           jmp 0x4004334	      3408	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x4003fd7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x4003fdb	          0x4889c7	                            mov rdi, rax	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x4003fde	      0xe8dbf9ffff	                 call sym.op_is_new_cast	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x4003fe3	            0x85c0	                           test eax, eax	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x4003fe5	            0x7412	                            je 0x4003ff9	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x4003fe7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x4003feb	          0x4889c7	                            mov rdi, rax	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x4003fee	      0xe800000000	                          call 0x4003ff3	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x4003ff3	        0x488945b8	             mov qword [rbp - 0x48], rax	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x4003ff7	            0xeb2d	                           jmp 0x4004026	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x4003ff9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4003ffd	           0xfb600	                   movzx eax, byte [rax]	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4004000	            0x3c66	                            cmp al, 0x66	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4004002	            0x7512	                           jne 0x4004016	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4004004	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4004008	          0x4889c7	                            mov rdi, rax	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400400b	      0xe82ad4ffff	                call sym.d_operator_name	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4004010	        0x488945b8	             mov qword [rbp - 0x48], rax	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4004014	            0xeb10	                           jmp 0x4004026	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4004016	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400401a	          0x4889c7	                            mov rdi, rax	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400401d	      0xe8fcf9ffff	                 call sym.d_expression_1	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4004022	        0x488945b8	             mov qword [rbp - 0x48], rax	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4004026	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400402a	      0xbe00000000	                              mov esi, 0	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400402f	          0x4889c7	                            mov rdi, rax	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4004032	      0xe800000000	                          call 0x4004037	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4004037	            0x85c0	                           test eax, eax	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4004039	            0x751a	                           jne 0x4004055	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400403b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400403f	      0xbe45000000	                           mov esi, 0x45	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x4004044	          0x4889c7	                            mov rdi, rax	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x4004047	      0xe85bf8ffff	                     call sym.d_exprlist	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400404c	        0x488945c0	             mov qword [rbp - 0x40], rax	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x4004050	      0xe983000000	                           jmp 0x40040d8	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x4004055	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4004059	      0xbe00000000	                              mov esi, 0	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400405e	          0x4889c7	                            mov rdi, rax	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4004061	      0xe800000000	                          call 0x4004066	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4004066	            0x85c0	                           test eax, eax	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4004068	            0x7415	                            je 0x400407f	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400406a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400406e	      0xbe00000000	                              mov esi, 0	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4004073	          0x4889c7	                            mov rdi, rax	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4004076	      0xe800000000	                          call 0x400407b	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400407b	            0x85c0	                           test eax, eax	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400407d	            0x7549	                           jne 0x40040c8	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400407f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x4004083	          0x4889c7	                            mov rdi, rax	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x4004086	      0xe8f1ceffff	             call sym.d_unqualified_name	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x400408b	        0x488945c0	             mov qword [rbp - 0x40], rax	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x400408f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4004093	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4004097	           0xfb600	                   movzx eax, byte [rax]	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x400409a	            0x3c49	                            cmp al, 0x49	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x400409c	            0x753a	                           jne 0x40040d8	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x400409e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040a2	          0x4889c7	                            mov rdi, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040a5	      0xe8b5f5ffff	                call sym.d_template_args	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040aa	          0x4889c1	                            mov rcx, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040ad	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040b1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040b5	      0xbe04000000	                              mov esi, 4	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040ba	          0x4889c7	                            mov rdi, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040bd	      0xe89ec1ffff	                    call sym.d_make_comp	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040c2	        0x488945c0	             mov qword [rbp - 0x40], rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40040c6	            0xeb10	                           jmp 0x40040d8	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x40040c8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x40040cc	          0x4889c7	                            mov rdi, rax	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x40040cf	      0xe84af9ffff	                 call sym.d_expression_1	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x40040d4	        0x488945c0	             mov qword [rbp - 0x40], rax	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x40040d8	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040dc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040e0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040e4	      0xbe38000000	                           mov esi, 0x38	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040e9	          0x4889c7	                            mov rdi, rax	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040ec	      0xe86fc1ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040f1	          0x4889c1	                            mov rcx, rax	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040f4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040f8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40040fc	      0xbe37000000	                           mov esi, 0x37	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4004101	          0x4889c7	                            mov rdi, rax	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4004104	      0xe857c1ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4004109	      0xe926020000	                           jmp 0x4004334	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400410e	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x4004113	            0x750a	                           jne 0x400411f	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x4004115	      0xb800000000	                              mov eax, 0	      3440	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x400411a	      0xe915020000	                           jmp 0x4004334	      3440	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x400411f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4004123	      0xbe00000000	                              mov esi, 0	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4004128	          0x4889c7	                            mov rdi, rax	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400412b	      0xe800000000	                          call 0x4004130	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4004130	            0x85c0	                           test eax, eax	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4004132	            0x7545	                           jne 0x4004179	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4004134	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x4004138	          0x4889c7	                            mov rdi, rax	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x400413b	      0xe8def8ffff	                 call sym.d_expression_1	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x4004140	        0x488945c8	             mov qword [rbp - 0x38], rax	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x4004144	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3445	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_61
0x4004148	          0x4889c7	                            mov rdi, rax	      3445	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_61
0x400414b	      0xe8cef8ffff	                 call sym.d_expression_1	      3445	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_61
0x4004150	        0x488945d0	             mov qword [rbp - 0x30], rax	      3445	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_61
0x4004154	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3446	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_62
0x4004158	          0x4889c7	                            mov rdi, rax	      3446	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_62
0x400415b	      0xe8bef8ffff	                 call sym.d_expression_1	      3446	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_62
0x4004160	        0x488945d8	             mov qword [rbp - 0x28], rax	      3446	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_62
0x4004164	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3447	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x4004169	     0xf8575010000	                           jne 0x40042e4	      3447	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x400416f	      0xb800000000	                              mov eax, 0	      3448	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x4004174	      0xe9bb010000	                           jmp 0x4004334	      3448	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x4004179	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x400417d	           0xfb600	                   movzx eax, byte [rax]	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x4004180	            0x3c66	                            cmp al, 0x66	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x4004182	            0x7545	                           jne 0x40041c9	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x4004184	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x4004188	          0x4889c7	                            mov rdi, rax	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400418b	      0xe8aad2ffff	                call sym.d_operator_name	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x4004190	        0x488945c8	             mov qword [rbp - 0x38], rax	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x4004194	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x4004198	          0x4889c7	                            mov rdi, rax	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x400419b	      0xe87ef8ffff	                 call sym.d_expression_1	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x40041a0	        0x488945d0	             mov qword [rbp - 0x30], rax	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x40041a4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x40041a8	          0x4889c7	                            mov rdi, rax	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x40041ab	      0xe86ef8ffff	                 call sym.d_expression_1	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x40041b0	        0x488945d8	             mov qword [rbp - 0x28], rax	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x40041b4	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x40041b9	     0xf8525010000	                           jne 0x40042e4	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x40041bf	      0xb800000000	                              mov eax, 0	      3457	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x40041c4	      0xe96b010000	                           jmp 0x4004334	      3457	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x40041c9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x40041cd	           0xfb600	                   movzx eax, byte [rax]	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x40041d0	            0x3c6e	                            cmp al, 0x6e	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x40041d2	     0xf8505010000	                           jne 0x40042dd	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x40041d8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041dc	        0x4883c001	                              add rax, 1	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041e0	           0xfb600	                   movzx eax, byte [rax]	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041e3	            0x3c77	                            cmp al, 0x77	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041e5	            0x7419	                            je 0x4004200	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041e7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041eb	        0x4883c001	                              add rax, 1	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041ef	           0xfb600	                   movzx eax, byte [rax]	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041f2	            0x3c61	                            cmp al, 0x61	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041f4	            0x740a	                            je 0x4004200	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041f6	      0xb800000000	                              mov eax, 0	      3463	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x40041fb	      0xe934010000	                           jmp 0x4004334	      3463	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4004200	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4004204	      0xbe5f000000	                           mov esi, 0x5f	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4004209	          0x4889c7	                            mov rdi, rax	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x400420c	      0xe896f6ffff	                     call sym.d_exprlist	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4004211	        0x488945c8	             mov qword [rbp - 0x38], rax	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4004215	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4004219	          0x4889c7	                            mov rdi, rax	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400421c	      0xe800000000	                          call 0x4004221	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4004221	        0x488945d0	             mov qword [rbp - 0x30], rax	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4004225	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4004229	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x400422d	           0xfb600	                   movzx eax, byte [rax]	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4004230	            0x3c45	                            cmp al, 0x45	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4004232	            0x7521	                           jne 0x4004255	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4004234	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x4004238	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x400423c	        0x488d5001	                      lea rdx, [rax + 1]	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x4004240	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x4004244	        0x48895018	             mov qword [rax + 0x18], rdx	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x4004248	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3469	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36
0x4004250	      0xe98f000000	                           jmp 0x40042e4	      3469	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36
0x4004255	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x4004259	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x400425d	           0xfb600	                   movzx eax, byte [rax]	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x4004260	            0x3c70	                            cmp al, 0x70	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x4004262	            0x753e	                           jne 0x40042a2	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x4004264	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x4004268	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x400426c	        0x4883c001	                              add rax, 1	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x4004270	           0xfb600	                   movzx eax, byte [rax]	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x4004273	            0x3c69	                            cmp al, 0x69	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x4004275	            0x752b	                           jne 0x40042a2	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x4004277	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x400427b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x400427f	        0x488d5002	                      lea rdx, [rax + 2]	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x4004283	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x4004287	        0x48895018	             mov qword [rax + 0x18], rdx	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x400428b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400428f	      0xbe45000000	                           mov esi, 0x45	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x4004294	          0x4889c7	                            mov rdi, rax	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x4004297	      0xe80bf6ffff	                     call sym.d_exprlist	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400429c	        0x488945d8	             mov qword [rbp - 0x28], rax	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x40042a0	            0xeb42	                           jmp 0x40042e4	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x40042a2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x40042a6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x40042aa	           0xfb600	                   movzx eax, byte [rax]	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x40042ad	            0x3c69	                            cmp al, 0x69	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x40042af	            0x7525	                           jne 0x40042d6	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x40042b1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40042b5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40042b9	        0x4883c001	                              add rax, 1	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40042bd	           0xfb600	                   movzx eax, byte [rax]	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40042c0	            0x3c6c	                            cmp al, 0x6c	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40042c2	            0x7512	                           jne 0x40042d6	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40042c4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x40042c8	          0x4889c7	                            mov rdi, rax	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x40042cb	      0xe84ef7ffff	                 call sym.d_expression_1	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x40042d0	        0x488945d8	             mov qword [rbp - 0x28], rax	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x40042d4	            0xeb0e	                           jmp 0x40042e4	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x40042d6	      0xb800000000	                              mov eax, 0	      3483	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_22
0x40042db	            0xeb57	                           jmp 0x4004334	      3483	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_22
0x40042dd	      0xb800000000	                              mov eax, 0	      3486	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_23
0x40042e2	            0xeb50	                           jmp 0x4004334	      3486	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_23
0x40042e4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x40042e8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x40042ec	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x40042f0	      0xbe3b000000	                           mov esi, 0x3b	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x40042f5	          0x4889c7	                            mov rdi, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x40042f8	      0xe863bfffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x40042fd	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004300	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004304	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004308	      0xbe3a000000	                           mov esi, 0x3a	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400430d	          0x4889c7	                            mov rdi, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004310	      0xe84bbfffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004315	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004318	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400431c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004320	      0xbe39000000	                           mov esi, 0x39	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004325	          0x4889c7	                            mov rdi, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4004328	      0xe833bfffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400432d	            0xeb05	                           jmp 0x4004334	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400432f	      0xb800000000	                              mov eax, 0	      3496	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4004334	              0xc9	                                   leave	      3499	cp-demangle.c	FUNCTION_51
0x4004335	              0xc3	                                     ret	      3499	cp-demangle.c	FUNCTION_51
d_prefix	IF,14:DO,0:functions,0:ELSE,9:FOR,0:CALL,11:SWITCH,0:WHILE,1	129
0x4000d9c	              0x55	                                push rbp	      1528	cp-demangle.c	FUNCTION_22
0x4000d9d	          0x4889e5	                            mov rbp, rsp	      1528	cp-demangle.c	FUNCTION_22
0x4000da0	        0x4883ec30	                           sub rsp, 0x30	      1528	cp-demangle.c	FUNCTION_22
0x4000da4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1528	cp-demangle.c	FUNCTION_22
0x4000da8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1529	cp-demangle.c	FUNCTION_22
0x4000db0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1537	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_1
0x4000db4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1537	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_1
0x4000db8	           0xfb600	                   movzx eax, byte [rax]	      1537	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_1
0x4000dbb	          0x8845ea	               mov byte [rbp - 0x16], al	      1537	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_1
0x4000dbe	        0x807dea00	                cmp byte [rbp - 0x16], 0	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4000dc2	            0x750a	                           jne 0x4000dce	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4000dc4	      0xb800000000	                              mov eax, 0	      1539	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4000dc9	      0xe9ac010000	                           jmp 0x4000f7a	      1539	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4000dce	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1545	cp-demangle.c	FUNCTION_22	WHILE_1
0x4000dd5	        0x807dea44	            cmp byte [rbp - 0x16], 0x44 	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000dd9	            0x7545	                           jne 0x4000e20	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000ddb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1548	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_2
0x4000ddf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1548	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_2
0x4000de3	         0xfb64001	               movzx eax, byte [rax + 1]	      1548	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_2
0x4000de7	          0x8845eb	               mov byte [rbp - 0x15], al	      1548	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_2
0x4000dea	        0x807deb54	            cmp byte [rbp - 0x15], 0x54 	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000dee	            0x7406	                            je 0x4000df6	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000df0	        0x807deb74	            cmp byte [rbp - 0x15], 0x74 	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000df4	            0x7515	                           jne 0x4000e0b	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000df6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000dfa	          0x4889c7	                            mov rdi, rax	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000dfd	      0xe800000000	                          call 0x4000e02	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000e02	        0x488945f8	                mov qword [rbp - 8], rax	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000e06	      0xe9ff000000	                           jmp 0x4000f0a	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4000e0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4000e0f	          0x4889c7	                            mov rdi, rax	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4000e12	      0xe865010000	             call sym.d_unqualified_name	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4000e17	        0x488945f8	                mov qword [rbp - 8], rax	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4000e1b	      0xe9ea000000	                           jmp 0x4000f0a	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4000e20	        0x807dea2f	            cmp byte [rbp - 0x16], 0x2f 	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e24	            0x7e06	                           jle 0x4000e2c	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e26	        0x807dea39	            cmp byte [rbp - 0x16], 0x39 	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e2a	            0x7e1e	                           jle 0x4000e4a	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e2c	        0x807dea60	            cmp byte [rbp - 0x16], 0x60 	      1557	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e30	            0x7e06	                           jle 0x4000e38	      1557	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e32	        0x807dea7a	            cmp byte [rbp - 0x16], 0x7a 	      1557	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e36	            0x7e12	                           jle 0x4000e4a	      1557	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e38	        0x807dea43	            cmp byte [rbp - 0x16], 0x43 	      1558	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e3c	            0x740c	                            je 0x4000e4a	      1558	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e3e	        0x807dea55	            cmp byte [rbp - 0x16], 0x55 	      1559	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e42	            0x7406	                            je 0x4000e4a	      1559	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e44	        0x807dea4c	            cmp byte [rbp - 0x16], 0x4c 	      1560	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e48	            0x7515	                           jne 0x4000e5f	      1560	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e4e	          0x4889c7	                            mov rdi, rax	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e51	      0xe826010000	             call sym.d_unqualified_name	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e56	        0x488945f8	                mov qword [rbp - 8], rax	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e5a	      0xe9ab000000	                           jmp 0x4000f0a	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4000e5f	        0x807dea53	            cmp byte [rbp - 0x16], 0x53 	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e63	            0x751a	                           jne 0x4000e7f	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e69	      0xbe01000000	                              mov esi, 1	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e6e	          0x4889c7	                            mov rdi, rax	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e71	      0xe87f3d0000	                 call sym.d_substitution	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e76	        0x488945f8	                mov qword [rbp - 8], rax	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e7a	      0xe98b000000	                           jmp 0x4000f0a	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4000e7f	        0x807dea49	            cmp byte [rbp - 0x16], 0x49 	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4000e83	            0x752a	                           jne 0x4000eaf	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4000e85	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4000e8a	            0x750a	                           jne 0x4000e96	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4000e8c	      0xb800000000	                              mov eax, 0	      1567	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4000e91	      0xe9e4000000	                           jmp 0x4000f7a	      1567	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4000e96	    0xc745ec040000	               mov dword [rbp - 0x14], 4	      1568	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4000e9d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1569	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	CALL_6
0x4000ea1	          0x4889c7	                            mov rdi, rax	      1569	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	CALL_6
0x4000ea4	      0xe8b6270000	                call sym.d_template_args	      1569	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	CALL_6
0x4000ea9	        0x488945f8	                mov qword [rbp - 8], rax	      1569	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	CALL_6
0x4000ead	            0xeb5b	                           jmp 0x4000f0a	      1569	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	CALL_6
0x4000eaf	        0x807dea54	            cmp byte [rbp - 0x16], 0x54 	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4000eb3	            0x7512	                           jne 0x4000ec7	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4000eb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4000eb9	          0x4889c7	                            mov rdi, rax	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4000ebc	      0xe829270000	               call sym.d_template_param	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4000ec1	        0x488945f8	                mov qword [rbp - 8], rax	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4000ec5	            0xeb43	                           jmp 0x4000f0a	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4000ec7	        0x807dea45	            cmp byte [rbp - 0x16], 0x45 	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4000ecb	            0x7509	                           jne 0x4000ed6	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4000ecd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1574	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4000ed1	      0xe9a4000000	                           jmp 0x4000f7a	      1574	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4000ed6	        0x807dea4d	            cmp byte [rbp - 0x16], 0x4d 	      1575	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10
0x4000eda	            0x7527	                           jne 0x4000f03	      1575	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10
0x4000edc	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4000ee1	            0x750a	                           jne 0x4000eed	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4000ee3	      0xb800000000	                              mov eax, 0	      1581	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4000ee8	      0xe98d000000	                           jmp 0x4000f7a	      1581	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4000eed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4000ef1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4000ef5	        0x488d5001	                      lea rdx, [rax + 1]	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4000ef9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4000efd	        0x48895018	             mov qword [rax + 0x18], rdx	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4000f01	            0xeb72	                           jmp 0x4000f75	      1583	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10
0x4000f03	      0xb800000000	                              mov eax, 0	      1586	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_8
0x4000f08	            0xeb70	                           jmp 0x4000f7a	      1586	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_8
0x4000f0a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4000f0f	            0x750a	                           jne 0x4000f1b	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4000f11	        0x488b45f8	                mov rax, qword [rbp - 8]	      1589	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4000f15	        0x488945f0	             mov qword [rbp - 0x10], rax	      1589	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4000f19	            0xeb1b	                           jmp 0x4000f36	      1589	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4000f1b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4000f1f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4000f23	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4000f26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4000f2a	          0x4889c7	                            mov rdi, rax	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4000f2d	      0xe82ef3ffff	                    call sym.d_make_comp	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4000f32	        0x488945f0	             mov qword [rbp - 0x10], rax	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4000f36	        0x807dea53	            cmp byte [rbp - 0x16], 0x53 	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4000f3a	     0xf8470feffff	                            je 0x4000db0	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4000f40	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4000f44	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4000f48	           0xfb600	                   movzx eax, byte [rax]	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4000f4b	            0x3c45	                            cmp al, 0x45	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4000f4d	     0xf845dfeffff	                            je 0x4000db0	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4000f53	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4000f57	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4000f5b	          0x4889d6	                            mov rsi, rdx	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4000f5e	          0x4889c7	                            mov rdi, rax	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4000f61	      0xe8253c0000	             call sym.d_add_substitution	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4000f66	            0x85c0	                           test eax, eax	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4000f68	     0xf8542feffff	                           jne 0x4000db0	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4000f6e	      0xb800000000	                              mov eax, 0	      1596	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14
0x4000f73	            0xeb05	                           jmp 0x4000f7a	      1596	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14
0x4000f75	      0xe936feffff	                           jmp 0x4000db0	      1598	cp-demangle.c	FUNCTION_22	WHILE_1
0x4000f7a	              0xc9	                                   leave	      1599	cp-demangle.c	FUNCTION_22
0x4000f7b	              0xc3	                                     ret	      1599	cp-demangle.c	FUNCTION_22
d_number	IF,4:DO,0:functions,0:ELSE,0:FOR,0:CALL,5:SWITCH,0:WHILE,1	69
0x40011d9	              0x55	                                push rbp	      1685	cp-demangle.c	FUNCTION_25
0x40011da	          0x4889e5	                            mov rbp, rsp	      1685	cp-demangle.c	FUNCTION_25
0x40011dd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1685	cp-demangle.c	FUNCTION_25
0x40011e1	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1690	cp-demangle.c	FUNCTION_25
0x40011e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x40011ec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x40011f0	           0xfb600	                   movzx eax, byte [rax]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x40011f3	          0x8845f7	                  mov byte [rbp - 9], al	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x40011f6	        0x807df76e	                cmp byte [rbp - 9], 0x6e	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x40011fa	            0x7529	                           jne 0x4001225	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x40011fc	    0xc745f8010000	                  mov dword [rbp - 8], 1	      1694	cp-demangle.c	FUNCTION_25	IF_1
0x4001203	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x4001207	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400120b	        0x488d5001	                      lea rdx, [rax + 1]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400120f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x4001213	        0x48895018	             mov qword [rax + 0x18], rdx	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x4001217	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400121b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400121f	           0xfb600	                   movzx eax, byte [rax]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x4001222	          0x8845f7	                  mov byte [rbp - 9], al	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x4001225	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1699	cp-demangle.c	FUNCTION_25
0x400122c	        0x807df72f	                cmp byte [rbp - 9], 0x2f	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4001230	            0x7e06	                           jle 0x4001238	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4001232	        0x807df739	                cmp byte [rbp - 9], 0x39	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4001236	            0x7e0e	                           jle 0x4001246	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4001238	        0x837df800	                  cmp dword [rbp - 8], 0	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400123c	            0x7403	                            je 0x4001241	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400123e	          0xf75dfc	                     neg dword [rbp - 4]	      1705	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x4001241	          0x8b45fc	                mov eax, dword [rbp - 4]	      1706	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4001244	            0xeb72	                           jmp 0x40012b8	      1706	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4001246	         0xfbe45f7	               movsx eax, byte [rbp - 9]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400124a	          0x83e830	                           sub eax, 0x30	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400124d	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001252	            0x89d1	                            mov ecx, edx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001254	            0x29c1	                            sub ecx, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001256	      0xba67666666	                     mov edx, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400125b	            0x89c8	                            mov eax, ecx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400125d	            0xf7ea	                                imul edx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400125f	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001262	            0x89c8	                            mov eax, ecx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001264	          0xc1f81f	                           sar eax, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001267	            0x29c2	                            sub edx, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001269	            0x89d0	                            mov eax, edx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400126b	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400126e	            0x7d07	                           jge 0x4001277	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001270	      0xb8ffffffff	                     mov eax, 0xffffffff	      1709	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001275	            0xeb41	                           jmp 0x40012b8	      1709	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4001277	          0x8b55fc	                mov edx, dword [rbp - 4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400127a	            0x89d0	                            mov eax, edx	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400127c	          0xc1e002	                              shl eax, 2	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400127f	             0x1d0	                            add eax, edx	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x4001281	             0x1c0	                            add eax, eax	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x4001283	            0x89c2	                            mov edx, eax	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x4001285	         0xfbe45f7	               movsx eax, byte [rbp - 9]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x4001289	             0x1d0	                            add eax, edx	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400128b	          0x83e830	                           sub eax, 0x30	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400128e	          0x8945fc	                mov dword [rbp - 4], eax	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x4001291	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4001295	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4001299	        0x488d5001	                      lea rdx, [rax + 1]	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400129d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x40012a1	        0x48895018	             mov qword [rax + 0x18], rdx	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x40012a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x40012a9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x40012ad	           0xfb600	                   movzx eax, byte [rax]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x40012b0	          0x8845f7	                  mov byte [rbp - 9], al	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x40012b3	      0xe974ffffff	                           jmp 0x400122c	      1713	cp-demangle.c	FUNCTION_25	WHILE_1
0x40012b8	              0x5d	                                 pop rbp	      1714	cp-demangle.c	FUNCTION_25
0x40012b9	              0xc3	                                     ret	      1714	cp-demangle.c	FUNCTION_25
d_print_flush	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	27
0x4005491	              0x55	                                push rbp	      4220	cp-demangle.c	FUNCTION_71
0x4005492	          0x4889e5	                            mov rbp, rsp	      4220	cp-demangle.c	FUNCTION_71
0x4005495	        0x4883ec10	                           sub rsp, 0x10	      4220	cp-demangle.c	FUNCTION_71
0x4005499	        0x48897df8	                mov qword [rbp - 8], rdi	      4220	cp-demangle.c	FUNCTION_71
0x400549d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4221	cp-demangle.c	FUNCTION_71
0x40054a1	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4221	cp-demangle.c	FUNCTION_71
0x40054a8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4221	cp-demangle.c	FUNCTION_71
0x40054ac	        0xc6040200	                 mov byte [rdx + rax], 0	      4221	cp-demangle.c	FUNCTION_71
0x40054b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054b4	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054bb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054bf	    0x488b92180100	           mov rdx, qword [rdx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054c6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054ca	    0x488bb1000100	           mov rsi, qword [rcx + 0x100] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054d1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054d5	          0x4889cf	                            mov rdi, rcx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054d8	            0xffd0	                                call rax	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054da	        0x488b45f8	                mov rax, qword [rbp - 8]	      4223	cp-demangle.c	FUNCTION_71
0x40054de	    0x48c780000100	              mov qword [rax + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40054e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      4224	cp-demangle.c	FUNCTION_71
0x40054ed	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      4224	cp-demangle.c	FUNCTION_71
0x40054f4	        0x488d5001	                      lea rdx, [rax + 1]	      4224	cp-demangle.c	FUNCTION_71
0x40054f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4224	cp-demangle.c	FUNCTION_71
0x40054fc	    0x488990400100	            mov qword [rax + 0x140], rdx	      4224	cp-demangle.c	FUNCTION_71
0x4005503	              0x90	                                     nop	      4225	cp-demangle.c	FUNCTION_71
0x4005504	              0xc9	                                   leave	      4225	cp-demangle.c	FUNCTION_71
0x4005505	              0xc3	                                     ret	      4225	cp-demangle.c	FUNCTION_71
d_discriminator	IF,5:DO,0:functions,0:ELSE,1:FOR,0:CALL,7:SWITCH,0:WHILE,0	56
0x4004746	              0x55	                                push rbp	      3655	cp-demangle.c	FUNCTION_55
0x4004747	          0x4889e5	                            mov rbp, rsp	      3655	cp-demangle.c	FUNCTION_55
0x400474a	        0x4883ec18	                           sub rsp, 0x18	      3655	cp-demangle.c	FUNCTION_55
0x400474e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3655	cp-demangle.c	FUNCTION_55
0x4004752	    0xc745f8010000	                  mov dword [rbp - 8], 1	      3656	cp-demangle.c	FUNCTION_55
0x4004759	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x400475d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x4004761	           0xfb600	                   movzx eax, byte [rax]	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x4004764	            0x3c5f	                            cmp al, 0x5f	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x4004766	            0x740a	                            je 0x4004772	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x4004768	      0xb801000000	                              mov eax, 1	      3659	cp-demangle.c	FUNCTION_55	IF_1
0x400476d	      0xe994000000	                           jmp 0x4004806	      3659	cp-demangle.c	FUNCTION_55	IF_1
0x4004772	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3660	cp-demangle.c	FUNCTION_55	CALL_2
0x4004776	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3660	cp-demangle.c	FUNCTION_55	CALL_2
0x400477a	        0x488d5001	                      lea rdx, [rax + 1]	      3660	cp-demangle.c	FUNCTION_55	CALL_2
0x400477e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3660	cp-demangle.c	FUNCTION_55	CALL_2
0x4004782	        0x48895018	             mov qword [rax + 0x18], rdx	      3660	cp-demangle.c	FUNCTION_55	CALL_2
0x4004786	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3661	cp-demangle.c	FUNCTION_55	IF_2	CALL_3
0x400478a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3661	cp-demangle.c	FUNCTION_55	IF_2	CALL_3
0x400478e	           0xfb600	                   movzx eax, byte [rax]	      3661	cp-demangle.c	FUNCTION_55	IF_2	CALL_3
0x4004791	            0x3c5f	                            cmp al, 0x5f	      3661	cp-demangle.c	FUNCTION_55	IF_2	CALL_3
0x4004793	            0x7518	                           jne 0x40047ad	      3661	cp-demangle.c	FUNCTION_55	IF_2	CALL_3
0x4004795	        0x8345f801	                  add dword [rbp - 8], 1	      3663	cp-demangle.c	FUNCTION_55	IF_2
0x4004799	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3664	cp-demangle.c	FUNCTION_55	IF_2	CALL_4
0x400479d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3664	cp-demangle.c	FUNCTION_55	IF_2	CALL_4
0x40047a1	        0x488d5001	                      lea rdx, [rax + 1]	      3664	cp-demangle.c	FUNCTION_55	IF_2	CALL_4
0x40047a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3664	cp-demangle.c	FUNCTION_55	IF_2	CALL_4
0x40047a9	        0x48895018	             mov qword [rax + 0x18], rdx	      3664	cp-demangle.c	FUNCTION_55	IF_2	CALL_4
0x40047ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3667	cp-demangle.c	FUNCTION_55	CALL_5
0x40047b1	          0x4889c7	                            mov rdi, rax	      3667	cp-demangle.c	FUNCTION_55	CALL_5
0x40047b4	      0xe820caffff	                       call sym.d_number	      3667	cp-demangle.c	FUNCTION_55	CALL_5
0x40047b9	          0x8945fc	                mov dword [rbp - 4], eax	      3667	cp-demangle.c	FUNCTION_55	CALL_5
0x40047bc	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3668	cp-demangle.c	FUNCTION_55	IF_3
0x40047c0	            0x7907	                           jns 0x40047c9	      3668	cp-demangle.c	FUNCTION_55	IF_3
0x40047c2	      0xb800000000	                              mov eax, 0	      3669	cp-demangle.c	FUNCTION_55	IF_3
0x40047c7	            0xeb3d	                           jmp 0x4004806	      3669	cp-demangle.c	FUNCTION_55	IF_3
0x40047c9	        0x837df801	                  cmp dword [rbp - 8], 1	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40047cd	            0x7e32	                           jle 0x4004801	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40047cf	        0x837dfc09	                  cmp dword [rbp - 4], 9	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40047d3	            0x7e2c	                           jle 0x4004801	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40047d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40047d9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40047dd	           0xfb600	                   movzx eax, byte [rax]	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40047e0	            0x3c5f	                            cmp al, 0x5f	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40047e2	            0x7516	                           jne 0x40047fa	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40047e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x40047e8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x40047ec	        0x488d5001	                      lea rdx, [rax + 1]	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x40047f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x40047f4	        0x48895018	             mov qword [rax + 0x18], rdx	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x40047f8	            0xeb07	                           jmp 0x4004801	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x40047fa	      0xb800000000	                              mov eax, 0	      3675	cp-demangle.c	FUNCTION_55	IF_4	ELSE_1
0x40047ff	            0xeb05	                           jmp 0x4004806	      3675	cp-demangle.c	FUNCTION_55	IF_4	ELSE_1
0x4004801	      0xb801000000	                              mov eax, 1	      3678	cp-demangle.c	FUNCTION_55	ELSE_1
0x4004806	              0xc9	                                   leave	      3679	cp-demangle.c	FUNCTION_55	ELSE_1
0x4004807	              0xc3	                                     ret	      3679	cp-demangle.c	FUNCTION_55	ELSE_1
d_template_arg	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,6:SWITCH,1:WHILE,0	59
0x40037da	              0x55	                                push rbp	      3170	cp-demangle.c	FUNCTION_48
0x40037db	          0x4889e5	                            mov rbp, rsp	      3170	cp-demangle.c	FUNCTION_48
0x40037de	        0x4883ec20	                           sub rsp, 0x20	      3170	cp-demangle.c	FUNCTION_48
0x40037e2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3170	cp-demangle.c	FUNCTION_48
0x40037e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x40037ea	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x40037ee	           0xfb600	                   movzx eax, byte [rax]	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x40037f1	           0xfbec0	                           movsx eax, al	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x40037f4	          0x83f84c	                           cmp eax, 0x4c	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x40037f7	     0xf8480000000	                            je 0x400387d	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x40037fd	          0x83f84c	                           cmp eax, 0x4c	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003800	            0x7f0e	                            jg 0x4003810	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003802	          0x83e849	                           sub eax, 0x49	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003805	          0x83f801	                              cmp eax, 1	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003808	     0xf878b000000	                            ja 0x4003899	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400380e	            0xeb7b	                           jmp 0x400388b	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003810	          0x83f858	                           cmp eax, 0x58	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003813	     0xf8580000000	                           jne 0x4003899	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003819	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x400381d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x4003821	        0x488d5001	                      lea rdx, [rax + 1]	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x4003825	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x4003829	        0x48895018	             mov qword [rax + 0x18], rdx	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x400382d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3177	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_3
0x4003831	          0x4889c7	                            mov rdi, rax	      3177	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_3
0x4003834	      0xe8fd0a0000	                   call sym.d_expression	      3177	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_3
0x4003839	        0x488945f8	                mov qword [rbp - 8], rax	      3177	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_3
0x400383d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003841	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003845	           0xfb600	                   movzx eax, byte [rax]	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003848	            0x3c45	                            cmp al, 0x45	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400384a	            0x751b	                           jne 0x4003867	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400384c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003850	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003854	        0x488d5001	                      lea rdx, [rax + 1]	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003858	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400385c	        0x48895018	             mov qword [rax + 0x18], rdx	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003860	      0xb800000000	                              mov eax, 0	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003865	            0xeb05	                           jmp 0x400386c	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003867	      0xb801000000	                              mov eax, 1	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400386c	            0x84c0	                             test al, al	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400386e	            0x7407	                            je 0x4003877	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4003870	      0xb800000000	                              mov eax, 0	      3179	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1
0x4003875	            0xeb2e	                           jmp 0x40038a5	      3179	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1
0x4003877	        0x488b45f8	                mov rax, qword [rbp - 8]	      3180	cp-demangle.c	FUNCTION_48	SWITCH_1
0x400387b	            0xeb28	                           jmp 0x40038a5	      3180	cp-demangle.c	FUNCTION_48	SWITCH_1
0x400387d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4003881	          0x4889c7	                            mov rdi, rax	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4003884	      0xe8ee0a0000	                 call sym.d_expr_primary	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4003889	            0xeb1a	                           jmp 0x40038a5	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x400388b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x400388f	          0x4889c7	                            mov rdi, rax	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4003892	      0xe8c8fdffff	                call sym.d_template_args	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4003897	            0xeb0c	                           jmp 0x40038a5	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4003899	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x400389d	          0x4889c7	                            mov rdi, rax	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x40038a0	      0xe800000000	                          call 0x40038a5	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x40038a5	              0xc9	                                   leave	      3193	cp-demangle.c	FUNCTION_48
0x40038a6	              0xc3	                                     ret	      3193	cp-demangle.c	FUNCTION_48
d_make_ctor	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x40004fd	              0x55	                                push rbp	      1140	cp-demangle.c	FUNCTION_11
0x40004fe	          0x4889e5	                            mov rbp, rsp	      1140	cp-demangle.c	FUNCTION_11
0x4000501	        0x4883ec28	                           sub rsp, 0x28	      1140	cp-demangle.c	FUNCTION_11
0x4000505	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1140	cp-demangle.c	FUNCTION_11
0x4000509	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1140	cp-demangle.c	FUNCTION_11
0x400050c	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1140	cp-demangle.c	FUNCTION_11
0x4000510	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1143	cp-demangle.c	FUNCTION_11	CALL_1
0x4000514	          0x4889c7	                            mov rdi, rax	      1143	cp-demangle.c	FUNCTION_11	CALL_1
0x4000517	      0xe8dbfcffff	                   call sym.d_make_empty	      1143	cp-demangle.c	FUNCTION_11	CALL_1
0x400051c	        0x488945f8	                mov qword [rbp - 8], rax	      1143	cp-demangle.c	FUNCTION_11	CALL_1
0x4000520	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4000524	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4000527	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x400052b	            0x89ce	                            mov esi, ecx	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x400052d	          0x4889c7	                            mov rdi, rax	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4000530	      0xe800000000	                          call 0x4000535	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4000535	            0x85c0	                           test eax, eax	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4000537	            0x7507	                           jne 0x4000540	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4000539	      0xb800000000	                              mov eax, 0	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x400053e	            0xeb04	                           jmp 0x4000544	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x4000540	        0x488b45f8	                mov rax, qword [rbp - 8]	      1146	cp-demangle.c	FUNCTION_11
0x4000544	              0xc9	                                   leave	      1147	cp-demangle.c	FUNCTION_11
0x4000545	              0xc3	                                     ret	      1147	cp-demangle.c	FUNCTION_11
d_compact_number	IF,3:DO,0:functions,0:ELSE,2:FOR,0:CALL,4:SWITCH,0:WHILE,0	40
0x4003569	              0x55	                                push rbp	      3069	cp-demangle.c	FUNCTION_44
0x400356a	          0x4889e5	                            mov rbp, rsp	      3069	cp-demangle.c	FUNCTION_44
0x400356d	        0x4883ec18	                           sub rsp, 0x18	      3069	cp-demangle.c	FUNCTION_44
0x4003571	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3069	cp-demangle.c	FUNCTION_44
0x4003575	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x4003579	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400357d	           0xfb600	                   movzx eax, byte [rax]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x4003580	            0x3c5f	                            cmp al, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x4003582	            0x7509	                           jne 0x400358d	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x4003584	    0xc745fc000000	                  mov dword [rbp - 4], 0	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400358b	            0xeb28	                           jmp 0x40035b5	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400358d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x4003591	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x4003595	           0xfb600	                   movzx eax, byte [rax]	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x4003598	            0x3c6e	                            cmp al, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400359a	            0x7507	                           jne 0x40035a3	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400359c	      0xb8ffffffff	                     mov eax, 0xffffffff	      3074	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2
0x40035a1	            0xeb45	                           jmp 0x40035e8	      3074	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2
0x40035a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3076	cp-demangle.c	FUNCTION_44	CALL_3
0x40035a7	          0x4889c7	                            mov rdi, rax	      3076	cp-demangle.c	FUNCTION_44	CALL_3
0x40035aa	      0xe82adcffff	                       call sym.d_number	      3076	cp-demangle.c	FUNCTION_44	CALL_3
0x40035af	          0x83c001	                              add eax, 1	      3076	cp-demangle.c	FUNCTION_44	CALL_3
0x40035b2	          0x8945fc	                mov dword [rbp - 4], eax	      3076	cp-demangle.c	FUNCTION_44	CALL_3
0x40035b5	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035b9	            0x7828	                            js 0x40035e3	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035bf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035c3	           0xfb600	                   movzx eax, byte [rax]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035c6	            0x3c5f	                            cmp al, 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035c8	            0x7519	                           jne 0x40035e3	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035ce	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035d2	        0x488d5001	                      lea rdx, [rax + 1]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035da	        0x48895018	             mov qword [rax + 0x18], rdx	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40035de	          0x8b45fc	                mov eax, dword [rbp - 4]	      3080	cp-demangle.c	FUNCTION_44
0x40035e1	            0xeb05	                           jmp 0x40035e8	      3080	cp-demangle.c	FUNCTION_44
0x40035e3	      0xb8ffffffff	                     mov eax, 0xffffffff	      3079	cp-demangle.c	FUNCTION_44	IF_3
0x40035e8	              0xc9	                                   leave	      3081	cp-demangle.c	FUNCTION_44
0x40035e9	              0xc3	                                     ret	      3081	cp-demangle.c	FUNCTION_44
d_add_substitution	IF,2:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	33
0x4004b8b	              0x55	                                push rbp	      3781	cp-demangle.c	FUNCTION_59
0x4004b8c	          0x4889e5	                            mov rbp, rsp	      3781	cp-demangle.c	FUNCTION_59
0x4004b8f	        0x48897df8	                mov qword [rbp - 8], rdi	      3781	cp-demangle.c	FUNCTION_59
0x4004b93	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3781	cp-demangle.c	FUNCTION_59
0x4004b97	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4004b9c	            0x7507	                           jne 0x4004ba5	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4004b9e	      0xb800000000	                              mov eax, 0	      3783	cp-demangle.c	FUNCTION_59	IF_1
0x4004ba3	            0xeb4e	                           jmp 0x4004bf3	      3783	cp-demangle.c	FUNCTION_59	IF_1
0x4004ba5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4004ba9	          0x8b5038	            mov edx, dword [rax + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4004bac	        0x488b45f8	                mov rax, qword [rbp - 8]	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4004bb0	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4004bb3	            0x39c2	                            cmp edx, eax	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4004bb5	            0x7c07	                            jl 0x4004bbe	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4004bb7	      0xb800000000	                              mov eax, 0	      3785	cp-demangle.c	FUNCTION_59	IF_2
0x4004bbc	            0xeb35	                           jmp 0x4004bf3	      3785	cp-demangle.c	FUNCTION_59	IF_2
0x4004bbe	        0x488b45f8	                mov rax, qword [rbp - 8]	      3786	cp-demangle.c	FUNCTION_59
0x4004bc2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x4004bc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3786	cp-demangle.c	FUNCTION_59
0x4004bca	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3786	cp-demangle.c	FUNCTION_59
0x4004bcd	            0x4898	                                    cdqe	      3786	cp-demangle.c	FUNCTION_59
0x4004bcf	        0x48c1e003	                              shl rax, 3	      3786	cp-demangle.c	FUNCTION_59
0x4004bd3	          0x4801c2	                            add rdx, rax	      3786	cp-demangle.c	FUNCTION_59
0x4004bd6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3786	cp-demangle.c	FUNCTION_59
0x4004bda	          0x488902	                    mov qword [rdx], rax	      3786	cp-demangle.c	FUNCTION_59
0x4004bdd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3787	cp-demangle.c	FUNCTION_59
0x4004be1	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3787	cp-demangle.c	FUNCTION_59
0x4004be4	          0x8d5001	                      lea edx, [rax + 1]	      3787	cp-demangle.c	FUNCTION_59
0x4004be7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3787	cp-demangle.c	FUNCTION_59
0x4004beb	          0x895038	             mov dword [rax + 0x38], edx	      3787	cp-demangle.c	FUNCTION_59
0x4004bee	      0xb801000000	                              mov eax, 1	      3788	cp-demangle.c	FUNCTION_59
0x4004bf3	              0x5d	                                 pop rbp	      3789	cp-demangle.c	FUNCTION_59
0x4004bf4	              0xc3	                                     ret	      3789	cp-demangle.c	FUNCTION_59
d_pack_length	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,1	22
0x4005ad4	              0x55	                                push rbp	      4443	cp-demangle.c	FUNCTION_80
0x4005ad5	          0x4889e5	                            mov rbp, rsp	      4443	cp-demangle.c	FUNCTION_80
0x4005ad8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4443	cp-demangle.c	FUNCTION_80
0x4005adc	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4444	cp-demangle.c	FUNCTION_80
0x4005ae3	            0xeb10	                           jmp 0x4005af5	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005ae5	        0x8345fc01	                  add dword [rbp - 4], 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005ae9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005aed	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005af1	        0x488945e8	             mov qword [rbp - 0x18], rax	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005af5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005afa	            0x7418	                            je 0x4005b14	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005afc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b00	            0x8b00	                    mov eax, dword [rax]	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b02	          0x83f82f	                           cmp eax, 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b05	            0x750d	                           jne 0x4005b14	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b0b	        0x488b4008	                mov rax, qword [rax + 8]	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b0f	          0x4885c0	                           test rax, rax	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b12	            0x75d1	                           jne 0x4005ae5	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005b14	          0x8b45fc	                mov eax, dword [rbp - 4]	      4451	cp-demangle.c	FUNCTION_80
0x4005b17	              0x5d	                                 pop rbp	      4452	cp-demangle.c	FUNCTION_80
0x4005b18	              0xc3	                                     ret	      4452	cp-demangle.c	FUNCTION_80
d_function_type	IF,3:DO,0:functions,0:ELSE,0:FOR,0:CALL,6:SWITCH,0:WHILE,0	62
0x4002f9d	              0x55	                                push rbp	      2845	cp-demangle.c	FUNCTION_37
0x4002f9e	          0x4889e5	                            mov rbp, rsp	      2845	cp-demangle.c	FUNCTION_37
0x4002fa1	        0x4883ec20	                           sub rsp, 0x20	      2845	cp-demangle.c	FUNCTION_37
0x4002fa5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2845	cp-demangle.c	FUNCTION_37
0x4002fa9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fad	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fb1	           0xfb600	                   movzx eax, byte [rax]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fb4	            0x3c46	                            cmp al, 0x46	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fb6	            0x751b	                           jne 0x4002fd3	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fbc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fc0	        0x488d5001	                      lea rdx, [rax + 1]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fc8	        0x48895018	             mov qword [rax + 0x18], rdx	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fcc	      0xb800000000	                              mov eax, 0	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fd1	            0xeb05	                           jmp 0x4002fd8	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fd3	      0xb801000000	                              mov eax, 1	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fd8	            0x84c0	                             test al, al	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fda	            0x740a	                            je 0x4002fe6	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4002fdc	      0xb800000000	                              mov eax, 0	      2849	cp-demangle.c	FUNCTION_37	IF_1
0x4002fe1	      0xe98d000000	                           jmp 0x4003073	      2849	cp-demangle.c	FUNCTION_37	IF_1
0x4002fe6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x4002fea	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x4002fee	           0xfb600	                   movzx eax, byte [rax]	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x4002ff1	            0x3c59	                            cmp al, 0x59	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x4002ff3	            0x7514	                           jne 0x4003009	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x4002ff5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4002ff9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4002ffd	        0x488d5001	                      lea rdx, [rax + 1]	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4003001	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4003005	        0x48895018	             mov qword [rax + 0x18], rdx	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4003009	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x400300d	      0xbe01000000	                              mov esi, 1	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x4003012	          0x4889c7	                            mov rdi, rax	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x4003015	      0xe8c6010000	           call sym.d_bare_function_type	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x400301a	        0x488945f8	                mov qword [rbp - 8], rax	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x400301e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x4003022	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x4003026	          0x4889d6	                            mov rsi, rdx	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x4003029	          0x4889c7	                            mov rdi, rax	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x400302c	      0xe8c8feffff	                call sym.d_ref_qualifier	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x4003031	        0x488945f8	                mov qword [rbp - 8], rax	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x4003035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003039	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400303d	           0xfb600	                   movzx eax, byte [rax]	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003040	            0x3c45	                            cmp al, 0x45	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003042	            0x751b	                           jne 0x400305f	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003044	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003048	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400304c	        0x488d5001	                      lea rdx, [rax + 1]	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003050	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003054	        0x48895018	             mov qword [rax + 0x18], rdx	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003058	      0xb800000000	                              mov eax, 0	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400305d	            0xeb05	                           jmp 0x4003064	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400305f	      0xb801000000	                              mov eax, 1	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003064	            0x84c0	                             test al, al	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003066	            0x7407	                            je 0x400306f	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4003068	      0xb800000000	                              mov eax, 0	      2860	cp-demangle.c	FUNCTION_37	IF_3
0x400306d	            0xeb04	                           jmp 0x4003073	      2860	cp-demangle.c	FUNCTION_37	IF_3
0x400306f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2861	cp-demangle.c	FUNCTION_37
0x4003073	              0xc9	                                   leave	      2862	cp-demangle.c	FUNCTION_37
0x4003074	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
d_make_builtin_type	IF,2:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x40003d0	              0x55	                                push rbp	      1077	cp-demangle.c	FUNCTION_7
0x40003d1	          0x4889e5	                            mov rbp, rsp	      1077	cp-demangle.c	FUNCTION_7
0x40003d4	        0x4883ec20	                           sub rsp, 0x20	      1077	cp-demangle.c	FUNCTION_7
0x40003d8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1077	cp-demangle.c	FUNCTION_7
0x40003dc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1077	cp-demangle.c	FUNCTION_7
0x40003e0	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1080	cp-demangle.c	FUNCTION_7	IF_1
0x40003e5	            0x7507	                           jne 0x40003ee	      1080	cp-demangle.c	FUNCTION_7	IF_1
0x40003e7	      0xb800000000	                              mov eax, 0	      1081	cp-demangle.c	FUNCTION_7	IF_1
0x40003ec	            0xeb31	                           jmp 0x400041f	      1081	cp-demangle.c	FUNCTION_7	IF_1
0x40003ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1082	cp-demangle.c	FUNCTION_7	CALL_1
0x40003f2	          0x4889c7	                            mov rdi, rax	      1082	cp-demangle.c	FUNCTION_7	CALL_1
0x40003f5	      0xe8fdfdffff	                   call sym.d_make_empty	      1082	cp-demangle.c	FUNCTION_7	CALL_1
0x40003fa	        0x488945f8	                mov qword [rbp - 8], rax	      1082	cp-demangle.c	FUNCTION_7	CALL_1
0x40003fe	      0x48837df800	                  cmp qword [rbp - 8], 0	      1083	cp-demangle.c	FUNCTION_7	IF_2
0x4000403	            0x7416	                            je 0x400041b	      1083	cp-demangle.c	FUNCTION_7	IF_2
0x4000405	        0x488b45f8	                mov rax, qword [rbp - 8]	      1085	cp-demangle.c	FUNCTION_7	IF_2
0x4000409	    0xc70027000000	                   mov dword [rax], 0x27	      1085	cp-demangle.c	FUNCTION_7	IF_2
0x400040f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1086	cp-demangle.c	FUNCTION_7	IF_2
0x4000413	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1086	cp-demangle.c	FUNCTION_7	IF_2
0x4000417	        0x48895008	                mov qword [rax + 8], rdx	      1086	cp-demangle.c	FUNCTION_7	IF_2
0x400041b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	cp-demangle.c	FUNCTION_7
0x400041f	              0xc9	                                   leave	      1089	cp-demangle.c	FUNCTION_7
0x4000420	              0xc3	                                     ret	      1089	cp-demangle.c	FUNCTION_7
d_source_name	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	24
0x400118a	              0x55	                                push rbp	      1669	cp-demangle.c	FUNCTION_24
0x400118b	          0x4889e5	                            mov rbp, rsp	      1669	cp-demangle.c	FUNCTION_24
0x400118e	        0x4883ec20	                           sub rsp, 0x20	      1669	cp-demangle.c	FUNCTION_24
0x4001192	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1669	cp-demangle.c	FUNCTION_24
0x4001196	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1673	cp-demangle.c	FUNCTION_24	CALL_1
0x400119a	          0x4889c7	                            mov rdi, rax	      1673	cp-demangle.c	FUNCTION_24	CALL_1
0x400119d	      0xe837000000	                       call sym.d_number	      1673	cp-demangle.c	FUNCTION_24	CALL_1
0x40011a2	          0x8945f4	              mov dword [rbp - 0xc], eax	      1673	cp-demangle.c	FUNCTION_24	CALL_1
0x40011a5	        0x837df400	                cmp dword [rbp - 0xc], 0	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x40011a9	            0x7f07	                            jg 0x40011b2	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x40011ab	      0xb800000000	                              mov eax, 0	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x40011b0	            0xeb25	                           jmp 0x40011d7	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x40011b2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1676	cp-demangle.c	FUNCTION_24	CALL_2
0x40011b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1676	cp-demangle.c	FUNCTION_24	CALL_2
0x40011b9	            0x89d6	                            mov esi, edx	      1676	cp-demangle.c	FUNCTION_24	CALL_2
0x40011bb	          0x4889c7	                            mov rdi, rax	      1676	cp-demangle.c	FUNCTION_24	CALL_2
0x40011be	      0xe841010000	                   call sym.d_identifier	      1676	cp-demangle.c	FUNCTION_24	CALL_2
0x40011c3	        0x488945f8	                mov qword [rbp - 8], rax	      1676	cp-demangle.c	FUNCTION_24	CALL_2
0x40011c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1677	cp-demangle.c	FUNCTION_24
0x40011cb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1677	cp-demangle.c	FUNCTION_24
0x40011cf	        0x48895040	             mov qword [rax + 0x40], rdx	      1677	cp-demangle.c	FUNCTION_24
0x40011d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1678	cp-demangle.c	FUNCTION_24
0x40011d7	              0xc9	                                   leave	      1679	cp-demangle.c	FUNCTION_24
0x40011d8	              0xc3	                                     ret	      1679	cp-demangle.c	FUNCTION_24
d_vector_type	IF,3:DO,0:functions,0:ELSE,1:FOR,0:CALL,6:SWITCH,0:WHILE,0	56
0x4003408	              0x55	                                push rbp	      3005	cp-demangle.c	FUNCTION_42
0x4003409	          0x4889e5	                            mov rbp, rsp	      3005	cp-demangle.c	FUNCTION_42
0x400340c	        0x4883ec20	                           sub rsp, 0x20	      3005	cp-demangle.c	FUNCTION_42
0x4003410	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3005	cp-demangle.c	FUNCTION_42
0x4003414	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3009	cp-demangle.c	FUNCTION_42	CALL_1
0x4003418	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3009	cp-demangle.c	FUNCTION_42	CALL_1
0x400341c	           0xfb600	                   movzx eax, byte [rax]	      3009	cp-demangle.c	FUNCTION_42	CALL_1
0x400341f	          0x8845f7	                  mov byte [rbp - 9], al	      3009	cp-demangle.c	FUNCTION_42	CALL_1
0x4003422	        0x807df75f	                cmp byte [rbp - 9], 0x5f	      3010	cp-demangle.c	FUNCTION_42	IF_1
0x4003426	            0x7526	                           jne 0x400344e	      3010	cp-demangle.c	FUNCTION_42	IF_1
0x4003428	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3012	cp-demangle.c	FUNCTION_42	IF_1	CALL_2
0x400342c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3012	cp-demangle.c	FUNCTION_42	IF_1	CALL_2
0x4003430	        0x488d5001	                      lea rdx, [rax + 1]	      3012	cp-demangle.c	FUNCTION_42	IF_1	CALL_2
0x4003434	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3012	cp-demangle.c	FUNCTION_42	IF_1	CALL_2
0x4003438	        0x48895018	             mov qword [rax + 0x18], rdx	      3012	cp-demangle.c	FUNCTION_42	IF_1	CALL_2
0x400343c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3013	cp-demangle.c	FUNCTION_42	IF_1	CALL_3
0x4003440	          0x4889c7	                            mov rdi, rax	      3013	cp-demangle.c	FUNCTION_42	IF_1	CALL_3
0x4003443	      0xe8ee0e0000	                   call sym.d_expression	      3013	cp-demangle.c	FUNCTION_42	IF_1	CALL_3
0x4003448	        0x488945f8	                mov qword [rbp - 8], rax	      3013	cp-demangle.c	FUNCTION_42	IF_1	CALL_3
0x400344c	            0xeb10	                           jmp 0x400345e	      3013	cp-demangle.c	FUNCTION_42	IF_1	CALL_3
0x400344e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3016	cp-demangle.c	FUNCTION_42	CALL_4
0x4003452	          0x4889c7	                            mov rdi, rax	      3016	cp-demangle.c	FUNCTION_42	CALL_4
0x4003455	      0xe860deffff	             call sym.d_number_component	      3016	cp-demangle.c	FUNCTION_42	CALL_4
0x400345a	        0x488945f8	                mov qword [rbp - 8], rax	      3016	cp-demangle.c	FUNCTION_42	CALL_4
0x400345e	      0x48837df800	                  cmp qword [rbp - 8], 0	      3018	cp-demangle.c	FUNCTION_42	IF_2
0x4003463	            0x7507	                           jne 0x400346c	      3018	cp-demangle.c	FUNCTION_42	IF_2
0x4003465	      0xb800000000	                              mov eax, 0	      3019	cp-demangle.c	FUNCTION_42	IF_2
0x400346a	            0xeb5e	                           jmp 0x40034ca	      3019	cp-demangle.c	FUNCTION_42	IF_2
0x400346c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003470	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003474	           0xfb600	                   movzx eax, byte [rax]	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003477	            0x3c5f	                            cmp al, 0x5f	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003479	            0x751b	                           jne 0x4003496	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x400347b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x400347f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003483	        0x488d5001	                      lea rdx, [rax + 1]	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003487	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x400348b	        0x48895018	             mov qword [rax + 0x18], rdx	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x400348f	      0xb800000000	                              mov eax, 0	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003494	            0xeb05	                           jmp 0x400349b	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x4003496	      0xb801000000	                              mov eax, 1	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x400349b	            0x84c0	                             test al, al	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x400349d	            0x7407	                            je 0x40034a6	      3021	cp-demangle.c	FUNCTION_42	IF_3	CALL_5
0x400349f	      0xb800000000	                              mov eax, 0	      3022	cp-demangle.c	FUNCTION_42	IF_3
0x40034a4	            0xeb24	                           jmp 0x40034ca	      3022	cp-demangle.c	FUNCTION_42	IF_3
0x40034a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034aa	          0x4889c7	                            mov rdi, rax	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034ad	      0xe800000000	                          call 0x40034b2	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034b2	          0x4889c1	                            mov rcx, rax	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034b5	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034bd	      0xbe2d000000	                           mov esi, 0x2d	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034c2	          0x4889c7	                            mov rdi, rax	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034c5	      0xe896cdffff	                    call sym.d_make_comp	      3024	cp-demangle.c	FUNCTION_42	CALL_6
0x40034ca	              0xc9	                                   leave	      3026	cp-demangle.c	FUNCTION_42
0x40034cb	              0xc3	                                     ret	      3026	cp-demangle.c	FUNCTION_42
has_return_type	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,3:SWITCH,1:WHILE,0	47
0x40007b8	              0x55	                                push rbp	      1255	cp-demangle.c	FUNCTION_16
0x40007b9	          0x4889e5	                            mov rbp, rsp	      1255	cp-demangle.c	FUNCTION_16
0x40007bc	        0x4883ec10	                           sub rsp, 0x10	      1255	cp-demangle.c	FUNCTION_16
0x40007c0	        0x48897df8	                mov qword [rbp - 8], rdi	      1255	cp-demangle.c	FUNCTION_16
0x40007c4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1256	cp-demangle.c	FUNCTION_16	IF_1
0x40007c9	            0x7507	                           jne 0x40007d2	      1256	cp-demangle.c	FUNCTION_16	IF_1
0x40007cb	      0xb800000000	                              mov eax, 0	      1257	cp-demangle.c	FUNCTION_16	IF_1
0x40007d0	            0xeb71	                           jmp 0x4000843	      1257	cp-demangle.c	FUNCTION_16	IF_1
0x40007d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007d6	            0x8b00	                    mov eax, dword [rax]	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007d8	          0x83f820	                           cmp eax, 0x20	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007db	            0x7711	                            ja 0x40007ee	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007dd	          0x83f81c	                           cmp eax, 0x1c	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007e0	            0x7351	                           jae 0x4000833	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007e2	          0x83f802	                              cmp eax, 2	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007e5	            0x7420	                            je 0x4000807	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007e7	          0x83f804	                              cmp eax, 4	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007ea	            0x742d	                            je 0x4000819	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007ec	            0xeb12	                           jmp 0x4000800	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007ee	          0x83f84c	                           cmp eax, 0x4c	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007f1	            0x7440	                            je 0x4000833	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007f3	          0x83f84c	                           cmp eax, 0x4c	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007f6	            0x7208	                            jb 0x4000800	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007f8	          0x83e84e	                           sub eax, 0x4e	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007fb	          0x83f801	                              cmp eax, 1	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40007fe	            0x7633	                           jbe 0x4000833	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000800	      0xb800000000	                              mov eax, 0	      1261	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000805	            0xeb3c	                           jmp 0x4000843	      1261	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000807	        0x488b45f8	                mov rax, qword [rbp - 8]	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x400080b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x400080f	          0x4889c7	                            mov rdi, rax	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x4000812	      0xe8a1ffffff	                call sym.has_return_type	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x4000817	            0xeb2a	                           jmp 0x4000843	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x4000819	        0x488b45f8	                mov rax, qword [rbp - 8]	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x400081d	        0x488b4008	                mov rax, qword [rax + 8]	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000821	          0x4889c7	                            mov rdi, rax	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000824	      0xe81c000000	     call sym.is_ctor_dtor_or_conversion	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000829	            0x85c0	                           test eax, eax	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x400082b	           0xf94c0	                                 sete al	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x400082e	           0xfb6c0	                           movzx eax, al	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000831	            0xeb10	                           jmp 0x4000843	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000833	        0x488b45f8	                mov rax, qword [rbp - 8]	      1267	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_3
0x4000837	        0x488b4008	                mov rax, qword [rax + 8]	      1267	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_3
0x400083b	          0x4889c7	                            mov rdi, rax	      1267	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_3
0x400083e	      0xe875ffffff	                call sym.has_return_type	      1267	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_3
0x4000843	              0xc9	                                   leave	      1269	cp-demangle.c	FUNCTION_16
0x4000844	              0xc3	                                     ret	      1269	cp-demangle.c	FUNCTION_16
d_operator_name	IF,6:DO,0:functions,0:ELSE,4:FOR,0:CALL,7:SWITCH,0:WHILE,1	156
0x400143a	              0x55	                                push rbp	      1856	cp-demangle.c	FUNCTION_28
0x400143b	          0x4889e5	                            mov rbp, rsp	      1856	cp-demangle.c	FUNCTION_28
0x400143e	        0x4883ec40	                           sub rsp, 0x40	      1856	cp-demangle.c	FUNCTION_28
0x4001442	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1856	cp-demangle.c	FUNCTION_28
0x4001446	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400144a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400144e	           0xfb600	                   movzx eax, byte [rax]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001451	            0x84c0	                             test al, al	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001453	            0x7419	                            je 0x400146e	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001455	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001459	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400145d	        0x488d4801	                      lea rcx, [rax + 1]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001461	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001465	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001469	           0xfb600	                   movzx eax, byte [rax]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400146c	            0xeb05	                           jmp 0x4001473	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400146e	      0xb800000000	                              mov eax, 0	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001473	          0x8845d6	               mov byte [rbp - 0x2a], al	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4001476	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400147a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400147e	           0xfb600	                   movzx eax, byte [rax]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4001481	            0x84c0	                             test al, al	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4001483	            0x7419	                            je 0x400149e	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4001485	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4001489	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400148d	        0x488d4801	                      lea rcx, [rax + 1]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4001491	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4001495	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4001499	           0xfb600	                   movzx eax, byte [rax]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400149c	            0xeb05	                           jmp 0x40014a3	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400149e	      0xb800000000	                              mov eax, 0	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x40014a3	          0x8845d7	               mov byte [rbp - 0x29], al	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x40014a6	        0x807dd676	            cmp byte [rbp - 0x2a], 0x76 	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40014aa	            0x7535	                           jne 0x40014e1	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40014ac	        0x807dd72f	            cmp byte [rbp - 0x29], 0x2f 	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40014b0	            0x7e2f	                           jle 0x40014e1	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40014b2	        0x807dd739	            cmp byte [rbp - 0x29], 0x39 	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40014b6	            0x7f29	                            jg 0x40014e1	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40014b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014bc	          0x4889c7	                            mov rdi, rax	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014bf	      0xe8c6fcffff	                  call sym.d_source_name	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014c4	          0x4889c2	                            mov rdx, rax	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014c7	         0xfbe45d7	            movsx eax, byte [rbp - 0x29]	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014cb	          0x8d48d0	                   lea ecx, [rax - 0x30]	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014d2	            0x89ce	                            mov esi, ecx	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014d4	          0x4889c7	                            mov rdi, rax	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014d7	      0xe888efffff	       call sym.d_make_extended_operator	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014dc	      0xe96e010000	                           jmp 0x400164f	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40014e1	        0x807dd663	            cmp byte [rbp - 0x2a], 0x63 	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40014e5	     0xf8596000000	                           jne 0x4001581	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40014eb	        0x807dd776	            cmp byte [rbp - 0x29], 0x76 	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40014ef	     0xf858c000000	                           jne 0x4001581	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40014f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1867	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40014f9	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1867	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40014fc	          0x8945e0	             mov dword [rbp - 0x20], eax	      1867	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40014ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001503	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001506	            0x85c0	                           test eax, eax	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001508	           0xf94c0	                                 sete al	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400150b	           0xfb6d0	                           movzx edx, al	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400150e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001512	          0x895050	             mov dword [rax + 0x50], edx	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001515	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001519	          0x4889c7	                            mov rdi, rax	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400151c	      0xe800000000	                          call 0x4001521	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001521	        0x488945f0	             mov qword [rbp - 0x10], rax	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001525	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4001529	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x400152c	            0x85c0	                           test eax, eax	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x400152e	            0x7420	                            je 0x4001550	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4001530	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4001534	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4001538	      0xb900000000	                              mov ecx, 0	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400153d	      0xbe34000000	                           mov esi, 0x34	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4001542	          0x4889c7	                            mov rdi, rax	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4001545	      0xe816edffff	                    call sym.d_make_comp	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400154a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400154e	            0xeb1e	                           jmp 0x400156e	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4001550	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4001554	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4001558	      0xb900000000	                              mov ecx, 0	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x400155d	      0xbe33000000	                           mov esi, 0x33	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4001562	          0x4889c7	                            mov rdi, rax	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4001565	      0xe8f6ecffff	                    call sym.d_make_comp	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x400156a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x400156e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1876	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001572	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1876	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001575	          0x895050	             mov dword [rax + 0x50], edx	      1876	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001578	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400157c	      0xe9ce000000	                           jmp 0x400164f	      1877	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4001581	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1882	cp-demangle.c	FUNCTION_28	ELSE_3
0x4001588	    0xc745dc430000	           mov dword [rbp - 0x24], 0x43 	      1885	cp-demangle.c	FUNCTION_28	ELSE_3
0x400158f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4001592	          0x2b45d8	             sub eax, dword [rbp - 0x28]	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4001595	            0x89c2	                            mov edx, eax	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4001597	          0xc1ea1f	                           shr edx, 0x1f	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400159a	             0x1d0	                            add eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400159c	            0xd1f8	                              sar eax, 1	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400159e	            0x89c2	                            mov edx, eax	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015a0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015a3	             0x1d0	                            add eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015a5	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015a8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015ab	          0x4863d0	                         movsxd rdx, eax	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015ae	          0x4889d0	                            mov rax, rdx	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015b1	          0x4801c0	                            add rax, rax	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015b4	          0x4801d0	                            add rax, rdx	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015b7	        0x48c1e003	                              shl rax, 3	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015bb	    0x480500000000	                              add rax, 0	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015c1	        0x488945f8	                mov qword [rbp - 8], rax	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x40015c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015c9	          0x488b00	                    mov rax, qword [rax]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015cc	           0xfb600	                   movzx eax, byte [rax]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015cf	          0x3a45d6	               cmp al, byte [rbp - 0x2a]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015d2	            0x7528	                           jne 0x40015fc	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015d8	          0x488b00	                    mov rax, qword [rax]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015db	        0x4883c001	                              add rax, 1	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015df	           0xfb600	                   movzx eax, byte [rax]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015e2	          0x3a45d7	               cmp al, byte [rbp - 0x29]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015e5	            0x7515	                           jne 0x40015fc	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x40015e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1898	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	CALL_7
0x40015eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1898	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	CALL_7
0x40015ef	          0x4889d6	                            mov rsi, rdx	      1898	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	CALL_7
0x40015f2	          0x4889c7	                            mov rdi, rax	      1898	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	CALL_7
0x40015f5	      0xe827eeffff	                call sym.d_make_operator	      1898	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	CALL_7
0x40015fa	            0xeb53	                           jmp 0x400164f	      1898	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	CALL_7
0x40015fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001600	          0x488b00	                    mov rax, qword [rax]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001603	           0xfb600	                   movzx eax, byte [rax]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001606	          0x3a45d6	               cmp al, byte [rbp - 0x2a]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001609	            0x7f22	                            jg 0x400162d	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400160b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400160f	          0x488b00	                    mov rax, qword [rax]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001612	           0xfb600	                   movzx eax, byte [rax]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001615	          0x3a45d6	               cmp al, byte [rbp - 0x2a]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001618	            0x751b	                           jne 0x4001635	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400161a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400161e	          0x488b00	                    mov rax, qword [rax]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001621	        0x4883c001	                              add rax, 1	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001625	           0xfb600	                   movzx eax, byte [rax]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001628	          0x3a45d7	               cmp al, byte [rbp - 0x29]	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400162b	            0x7e08	                           jle 0x4001635	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400162d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001630	          0x8945dc	             mov dword [rbp - 0x24], eax	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001633	            0xeb09	                           jmp 0x400163e	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4001635	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x4001638	          0x83c001	                              add eax, 1	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x400163b	          0x8945d8	             mov dword [rbp - 0x28], eax	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x400163e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x4001641	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x4001644	     0xf8545ffffff	                           jne 0x400158f	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x400164a	      0xb800000000	                              mov eax, 0	      1905	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x400164f	              0xc9	                                   leave	      1908	cp-demangle.c	FUNCTION_28
0x4001650	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
d_print_comp	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	66
0x4008bf9	              0x55	                                push rbp	      5713	cp-demangle.c	FUNCTION_87
0x4008bfa	          0x4889e5	                            mov rbp, rsp	      5713	cp-demangle.c	FUNCTION_87
0x4008bfd	        0x4883ec40	                           sub rsp, 0x40	      5713	cp-demangle.c	FUNCTION_87
0x4008c01	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5713	cp-demangle.c	FUNCTION_87
0x4008c05	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5713	cp-demangle.c	FUNCTION_87
0x4008c08	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5713	cp-demangle.c	FUNCTION_87
0x4008c0c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5713	cp-demangle.c	FUNCTION_87
0x4008c15	        0x488945f8	                mov qword [rbp - 8], rax	      5713	cp-demangle.c	FUNCTION_87
0x4008c19	            0x31c0	                            xor eax, eax	      5713	cp-demangle.c	FUNCTION_87
0x4008c1b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c20	            0x741d	                            je 0x4008c3f	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c22	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c26	          0x8b4004	                mov eax, dword [rax + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c29	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c2c	            0x7f11	                            jg 0x4008c3f	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c32	    0x8b8034010000	           mov eax, dword [rax + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c38	      0x3d00040000	                          cmp eax, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c3d	            0x7e11	                           jle 0x4008c50	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008c3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5717	cp-demangle.c	FUNCTION_87	IF_1	CALL_1
0x4008c43	          0x4889c7	                            mov rdi, rax	      5717	cp-demangle.c	FUNCTION_87	IF_1	CALL_1
0x4008c46	      0xe811c8ffff	                  call sym.d_print_error	      5717	cp-demangle.c	FUNCTION_87	IF_1	CALL_1
0x4008c4b	      0xe99a000000	                           jmp 0x4008cea	      5717	cp-demangle.c	FUNCTION_87	IF_1	CALL_1
0x4008c50	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5721	cp-demangle.c	FUNCTION_87
0x4008c54	          0x8b4004	                mov eax, dword [rax + 4]	      5721	cp-demangle.c	FUNCTION_87
0x4008c57	          0x8d5001	                      lea edx, [rax + 1]	      5721	cp-demangle.c	FUNCTION_87
0x4008c5a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5721	cp-demangle.c	FUNCTION_87
0x4008c5e	          0x895004	                mov dword [rax + 4], edx	      5721	cp-demangle.c	FUNCTION_87
0x4008c61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5722	cp-demangle.c	FUNCTION_87
0x4008c65	    0x8b8034010000	           mov eax, dword [rax + 0x134] 	      5722	cp-demangle.c	FUNCTION_87
0x4008c6b	          0x8d5001	                      lea edx, [rax + 1]	      5722	cp-demangle.c	FUNCTION_87
0x4008c6e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5722	cp-demangle.c	FUNCTION_87
0x4008c72	    0x899034010000	            mov dword [rax + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4008c78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5724	cp-demangle.c	FUNCTION_87
0x4008c7c	        0x488945e0	             mov qword [rbp - 0x20], rax	      5724	cp-demangle.c	FUNCTION_87
0x4008c80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5725	cp-demangle.c	FUNCTION_87
0x4008c84	    0x488b80480100	           mov rax, qword [rax + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4008c8b	        0x488945e8	             mov qword [rbp - 0x18], rax	      5725	cp-demangle.c	FUNCTION_87
0x4008c8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5726	cp-demangle.c	FUNCTION_87
0x4008c93	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4008c97	    0x488990480100	            mov qword [rax + 0x148], rdx	      5726	cp-demangle.c	FUNCTION_87
0x4008c9e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4008ca2	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4008ca5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4008ca9	            0x89ce	                            mov esi, ecx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4008cab	          0x4889c7	                            mov rdi, rax	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4008cae	      0xe84dd3ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4008cb3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5730	cp-demangle.c	FUNCTION_87
0x4008cb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5730	cp-demangle.c	FUNCTION_87
0x4008cbb	    0x488990480100	            mov qword [rax + 0x148], rdx	      5730	cp-demangle.c	FUNCTION_87
0x4008cc2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5731	cp-demangle.c	FUNCTION_87
0x4008cc6	          0x8b4004	                mov eax, dword [rax + 4]	      5731	cp-demangle.c	FUNCTION_87
0x4008cc9	          0x8d50ff	                      lea edx, [rax - 1]	      5731	cp-demangle.c	FUNCTION_87
0x4008ccc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5731	cp-demangle.c	FUNCTION_87
0x4008cd0	          0x895004	                mov dword [rax + 4], edx	      5731	cp-demangle.c	FUNCTION_87
0x4008cd3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5732	cp-demangle.c	FUNCTION_87
0x4008cd7	    0x8b8034010000	           mov eax, dword [rax + 0x134] 	      5732	cp-demangle.c	FUNCTION_87
0x4008cdd	          0x8d50ff	                      lea edx, [rax - 1]	      5732	cp-demangle.c	FUNCTION_87
0x4008ce0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5732	cp-demangle.c	FUNCTION_87
0x4008ce4	    0x899034010000	            mov dword [rax + 0x134], edx	      5732	cp-demangle.c	FUNCTION_87
0x4008cea	        0x488b45f8	                mov rax, qword [rbp - 8]	      5733	cp-demangle.c	FUNCTION_87
0x4008cee	    0x644833042528	                xor rax, qword fs:[0x28]	      5733	cp-demangle.c	FUNCTION_87
0x4008cf7	            0x7405	                            je 0x4008cfe	      5733	cp-demangle.c	FUNCTION_87
0x4008cf9	      0xe800000000	                          call 0x4008cfe	      5733	cp-demangle.c	FUNCTION_87
0x4008cfe	              0xc9	                                   leave	      5733	cp-demangle.c	FUNCTION_87
0x4008cff	              0xc3	                                     ret	      5733	cp-demangle.c	FUNCTION_87
d_encoding	IF,7:DO,0:functions,0:ELSE,4:FOR,0:CALL,9:SWITCH,0:WHILE,2	102
0x400089e	              0x55	                                push rbp	      1304	cp-demangle.c	FUNCTION_18
0x400089f	          0x4889e5	                            mov rbp, rsp	      1304	cp-demangle.c	FUNCTION_18
0x40008a2	        0x4883ec30	                           sub rsp, 0x30	      1304	cp-demangle.c	FUNCTION_18
0x40008a6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1304	cp-demangle.c	FUNCTION_18
0x40008aa	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1304	cp-demangle.c	FUNCTION_18
0x40008ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1305	cp-demangle.c	FUNCTION_18	CALL_1
0x40008b1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1305	cp-demangle.c	FUNCTION_18	CALL_1
0x40008b5	           0xfb600	                   movzx eax, byte [rax]	      1305	cp-demangle.c	FUNCTION_18	CALL_1
0x40008b8	          0x8845ef	               mov byte [rbp - 0x11], al	      1305	cp-demangle.c	FUNCTION_18	CALL_1
0x40008bb	        0x807def47	            cmp byte [rbp - 0x11], 0x47 	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x40008bf	            0x7406	                            je 0x40008c7	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x40008c1	        0x807def54	            cmp byte [rbp - 0x11], 0x54 	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x40008c5	            0x7515	                           jne 0x40008dc	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x40008c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1309	cp-demangle.c	FUNCTION_18	CALL_2
0x40008cb	          0x4889c7	                            mov rdi, rax	      1309	cp-demangle.c	FUNCTION_18	CALL_2
0x40008ce	      0xe813100000	                 call sym.d_special_name	      1309	cp-demangle.c	FUNCTION_18	CALL_2
0x40008d3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1309	cp-demangle.c	FUNCTION_18	CALL_2
0x40008d7	      0xe91d010000	                           jmp 0x40009f9	      1309	cp-demangle.c	FUNCTION_18	CALL_2
0x40008dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1312	cp-demangle.c	FUNCTION_18	ELSE_1	CALL_3
0x40008e0	          0x4889c7	                            mov rdi, rax	      1312	cp-demangle.c	FUNCTION_18	ELSE_1	CALL_3
0x40008e3	      0xe89c010000	                         call sym.d_name	      1312	cp-demangle.c	FUNCTION_18	ELSE_1	CALL_3
0x40008e8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1312	cp-demangle.c	FUNCTION_18	ELSE_1	CALL_3
0x40008ec	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1314	cp-demangle.c	FUNCTION_18	ELSE_1	IF_2
0x40008f1	     0xf8402010000	                            je 0x40009f9	      1314	cp-demangle.c	FUNCTION_18	ELSE_1	IF_2
0x40008f7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x40008fb	            0x746c	                            je 0x4000969	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x40008fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4000901	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4000904	          0x83e001	                              and eax, 1	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4000907	            0x85c0	                           test eax, eax	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4000909	            0x755e	                           jne 0x4000969	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x400090b	            0xeb0c	                           jmp 0x4000919	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x400090d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1322	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1
0x4000911	        0x488b4008	                mov rax, qword [rax + 8]	      1322	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1
0x4000915	        0x488945f0	             mov qword [rbp - 0x10], rax	      1322	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1
0x4000919	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x400091d	            0x8b00	                    mov eax, dword [rax]	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x400091f	            0x89c7	                            mov edi, eax	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x4000921	      0xe81af7ffff	       call sym.is_fnqual_component_type	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x4000926	            0x85c0	                           test eax, eax	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x4000928	            0x75e3	                           jne 0x400090d	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x400092a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x400092e	            0x8b00	                    mov eax, dword [rax]	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x4000930	          0x83f802	                              cmp eax, 2	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x4000933	     0xf85c0000000	                           jne 0x40009f9	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x4000939	            0xeb14	                           jmp 0x400094f	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x400093b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1330	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2
0x400093f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1330	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2
0x4000943	        0x488b5008	                mov rdx, qword [rax + 8]	      1330	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2
0x4000947	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1330	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2
0x400094b	        0x48895010	             mov qword [rax + 0x10], rdx	      1330	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2
0x400094f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4000953	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4000957	            0x8b00	                    mov eax, dword [rax]	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4000959	            0x89c7	                            mov edi, eax	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x400095b	      0xe8e0f6ffff	       call sym.is_fnqual_component_type	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4000960	            0x85c0	                           test eax, eax	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4000962	            0x75d7	                           jne 0x400093b	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4000964	      0xe990000000	                           jmp 0x40009f9	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x4000969	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1334	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	CALL_6
0x400096d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1334	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	CALL_6
0x4000971	           0xfb600	                   movzx eax, byte [rax]	      1334	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	CALL_6
0x4000974	          0x8845ef	               mov byte [rbp - 0x11], al	      1334	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	CALL_6
0x4000977	        0x807def00	                cmp byte [rbp - 0x11], 0	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x400097b	            0x747c	                            je 0x40009f9	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x400097d	        0x807def45	            cmp byte [rbp - 0x11], 0x45 	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x4000981	            0x7476	                            je 0x40009f9	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x4000983	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x4000987	          0x4889c7	                            mov rdi, rax	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x400098a	      0xe829feffff	                call sym.has_return_type	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x400098f	            0x89c2	                            mov edx, eax	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x4000991	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x4000995	            0x89d6	                            mov esi, edx	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x4000997	          0x4889c7	                            mov rdi, rax	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x400099a	      0xe841280000	           call sym.d_bare_function_type	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x400099f	        0x488945f8	                mov qword [rbp - 8], rax	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x40009a3	      0x48837df800	                  cmp qword [rbp - 8], 0	      1340	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6
0x40009a8	            0x7447	                            je 0x40009f1	      1340	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6
0x40009aa	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009ae	            0x7522	                           jne 0x40009d2	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009b4	            0x8b00	                    mov eax, dword [rax]	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009b6	          0x83f802	                              cmp eax, 2	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009b9	            0x7517	                           jne 0x40009d2	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1347	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009bf	            0x8b00	                    mov eax, dword [rax]	      1347	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009c1	          0x83f829	                           cmp eax, 0x29	      1347	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009c4	            0x750c	                           jne 0x40009d2	      1347	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1348	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009ca	    0x48c740080000	                  mov qword [rax + 8], 0	      1348	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x40009d2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009d6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009de	      0xbe03000000	                              mov esi, 3	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009e3	          0x4889c7	                            mov rdi, rax	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009e6	      0xe875f8ffff	                    call sym.d_make_comp	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009eb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009ef	            0xeb08	                           jmp 0x40009f9	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x40009f1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1354	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	ELSE_4
0x40009f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1359	cp-demangle.c	FUNCTION_18	ELSE_4
0x40009fd	              0xc9	                                   leave	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
0x40009fe	              0xc3	                                     ret	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
d_print_saw_error	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	10
0x4005475	              0x55	                                push rbp	      4212	cp-demangle.c	FUNCTION_70
0x4005476	          0x4889e5	                            mov rbp, rsp	      4212	cp-demangle.c	FUNCTION_70
0x4005479	        0x48897df8	                mov qword [rbp - 8], rdi	      4212	cp-demangle.c	FUNCTION_70
0x400547d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4213	cp-demangle.c	FUNCTION_70
0x4005481	    0x8b8030010000	           mov eax, dword [rax + 0x130] 	      4213	cp-demangle.c	FUNCTION_70
0x4005487	            0x85c0	                           test eax, eax	      4213	cp-demangle.c	FUNCTION_70
0x4005489	           0xf95c0	                                setne al	      4213	cp-demangle.c	FUNCTION_70
0x400548c	           0xfb6c0	                           movzx eax, al	      4213	cp-demangle.c	FUNCTION_70
0x400548f	              0x5d	                                 pop rbp	      4214	cp-demangle.c	FUNCTION_70
0x4005490	              0xc3	                                     ret	      4214	cp-demangle.c	FUNCTION_70
d_special_name	IF,8:DO,0:functions,0:ELSE,2:FOR,0:CALL,40:SWITCH,3:WHILE,0	363
0x40018e6	              0x55	                                push rbp	      2026	cp-demangle.c	FUNCTION_31
0x40018e7	          0x4889e5	                            mov rbp, rsp	      2026	cp-demangle.c	FUNCTION_31
0x40018ea	        0x4883ec30	                           sub rsp, 0x30	      2026	cp-demangle.c	FUNCTION_31
0x40018ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2026	cp-demangle.c	FUNCTION_31
0x40018f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2027	cp-demangle.c	FUNCTION_31
0x40018f6	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2027	cp-demangle.c	FUNCTION_31
0x40018f9	          0x8d5014	                   lea edx, [rax + 0x14]	      2027	cp-demangle.c	FUNCTION_31
0x40018fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2027	cp-demangle.c	FUNCTION_31
0x4001900	          0x895048	             mov dword [rax + 0x48], edx	      2027	cp-demangle.c	FUNCTION_31
0x4001903	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001907	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400190b	           0xfb600	                   movzx eax, byte [rax]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400190e	            0x3c54	                            cmp al, 0x54	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001910	            0x751b	                           jne 0x400192d	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001912	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001916	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400191a	        0x488d5001	                      lea rdx, [rax + 1]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400191e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001922	        0x48895018	             mov qword [rax + 0x18], rdx	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001926	      0xb801000000	                              mov eax, 1	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400192b	            0xeb05	                           jmp 0x4001932	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400192d	      0xb800000000	                              mov eax, 0	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001932	            0x84c0	                             test al, al	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4001934	     0xf8478030000	                            je 0x4001cb2	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400193a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400193e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001942	           0xfb600	                   movzx eax, byte [rax]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001945	            0x84c0	                             test al, al	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001947	            0x741c	                            je 0x4001965	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001949	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400194d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001951	        0x488d4801	                      lea rcx, [rax + 1]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001955	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001959	        0x48894a18	             mov qword [rdx + 0x18], rcx	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400195d	           0xfb600	                   movzx eax, byte [rax]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001960	           0xfbec0	                           movsx eax, al	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001963	            0xeb05	                           jmp 0x400196a	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001965	      0xb800000000	                              mov eax, 0	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400196a	          0x83e843	                           sub eax, 0x43	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400196d	          0x83f833	                           cmp eax, 0x33	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001970	     0xf8732030000	                            ja 0x4001ca8	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001976	            0x89c0	                            mov eax, eax	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001978	    0x488b04c50000	                  mov rax, qword [rax*8]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001980	            0xffe0	                                 jmp rax	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x4001982	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001986	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001989	          0x8d50fb	                      lea edx, [rax - 5]	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400198c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001990	          0x895048	             mov dword [rax + 0x48], edx	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001993	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x4001997	          0x4889c7	                            mov rdi, rax	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x400199a	      0xe800000000	                          call 0x400199f	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x400199f	          0x4889c2	                            mov rdx, rax	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40019a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40019a6	      0xb900000000	                              mov ecx, 0	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40019ab	      0xbe09000000	                              mov esi, 9	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40019b0	          0x4889c7	                            mov rdi, rax	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40019b3	      0xe8a8e8ffff	                    call sym.d_make_comp	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40019b8	      0xe9ad040000	                           jmp 0x4001e6a	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40019bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40019c1	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40019c4	          0x8d50f6	                    lea edx, [rax - 0xa]	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40019c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40019cb	          0x895048	             mov dword [rax + 0x48], edx	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40019ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019d2	          0x4889c7	                            mov rdi, rax	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019d5	      0xe800000000	                          call 0x40019da	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019da	          0x4889c2	                            mov rdx, rax	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019e1	      0xb900000000	                              mov ecx, 0	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019e6	      0xbe0a000000	                            mov esi, 0xa	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019eb	          0x4889c7	                            mov rdi, rax	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019ee	      0xe86de8ffff	                    call sym.d_make_comp	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019f3	      0xe972040000	                           jmp 0x4001e6a	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x40019f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x40019fc	          0x4889c7	                            mov rdi, rax	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x40019ff	      0xe800000000	                          call 0x4001a04	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a04	          0x4889c2	                            mov rdx, rax	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a0b	      0xb900000000	                              mov ecx, 0	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a10	      0xbe0c000000	                            mov esi, 0xc	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a15	          0x4889c7	                            mov rdi, rax	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a18	      0xe843e8ffff	                    call sym.d_make_comp	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a1d	      0xe948040000	                           jmp 0x4001e6a	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4001a22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a26	          0x4889c7	                            mov rdi, rax	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a29	      0xe800000000	                          call 0x4001a2e	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a2e	          0x4889c2	                            mov rdx, rax	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a35	      0xb900000000	                              mov ecx, 0	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a3a	      0xbe0d000000	                            mov esi, 0xd	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a3f	          0x4889c7	                            mov rdi, rax	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a42	      0xe819e8ffff	                    call sym.d_make_comp	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a47	      0xe91e040000	                           jmp 0x4001e6a	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4001a4c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4001a50	      0xbe68000000	                           mov esi, 0x68	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4001a55	          0x4889c7	                            mov rdi, rax	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4001a58	      0xe80f040000	                  call sym.d_call_offset	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4001a5d	            0x85c0	                           test eax, eax	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4001a5f	            0x750a	                           jne 0x4001a6b	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4001a61	      0xb800000000	                              mov eax, 0	      2049	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2
0x4001a66	      0xe9ff030000	                           jmp 0x4001e6a	      2049	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2
0x4001a6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a6f	      0xbe00000000	                              mov esi, 0	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a74	          0x4889c7	                            mov rdi, rax	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a77	      0xe822eeffff	                     call sym.d_encoding	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a7c	          0x4889c2	                            mov rdx, rax	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a83	      0xb900000000	                              mov ecx, 0	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a88	      0xbe0f000000	                            mov esi, 0xf	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a8d	          0x4889c7	                            mov rdi, rax	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a90	      0xe8cbe7ffff	                    call sym.d_make_comp	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a95	      0xe9d0030000	                           jmp 0x4001e6a	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4001a9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x4001a9e	      0xbe76000000	                           mov esi, 0x76	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x4001aa3	          0x4889c7	                            mov rdi, rax	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x4001aa6	      0xe8c1030000	                  call sym.d_call_offset	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x4001aab	            0x85c0	                           test eax, eax	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x4001aad	            0x750a	                           jne 0x4001ab9	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x4001aaf	      0xb800000000	                              mov eax, 0	      2055	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3
0x4001ab4	      0xe9b1030000	                           jmp 0x4001e6a	      2055	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3
0x4001ab9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001abd	      0xbe00000000	                              mov esi, 0	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001ac2	          0x4889c7	                            mov rdi, rax	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001ac5	      0xe8d4edffff	                     call sym.d_encoding	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001aca	          0x4889c2	                            mov rdx, rax	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001acd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001ad1	      0xb900000000	                              mov ecx, 0	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001ad6	      0xbe10000000	                           mov esi, 0x10	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001adb	          0x4889c7	                            mov rdi, rax	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001ade	      0xe87de7ffff	                    call sym.d_make_comp	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001ae3	      0xe982030000	                           jmp 0x4001e6a	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4001ae8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4001aec	      0xbe00000000	                              mov esi, 0	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4001af1	          0x4889c7	                            mov rdi, rax	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4001af4	      0xe873030000	                  call sym.d_call_offset	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4001af9	            0x85c0	                           test eax, eax	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4001afb	            0x750a	                           jne 0x4001b07	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4001afd	      0xb800000000	                              mov eax, 0	      2061	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4
0x4001b02	      0xe963030000	                           jmp 0x4001e6a	      2061	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4
0x4001b07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4001b0b	      0xbe00000000	                              mov esi, 0	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4001b10	          0x4889c7	                            mov rdi, rax	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4001b13	      0xe854030000	                  call sym.d_call_offset	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4001b18	            0x85c0	                           test eax, eax	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4001b1a	            0x750a	                           jne 0x4001b26	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4001b1c	      0xb800000000	                              mov eax, 0	      2063	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5
0x4001b21	      0xe944030000	                           jmp 0x4001e6a	      2063	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5
0x4001b26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b2a	      0xbe00000000	                              mov esi, 0	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b2f	          0x4889c7	                            mov rdi, rax	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b32	      0xe867edffff	                     call sym.d_encoding	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b37	          0x4889c2	                            mov rdx, rax	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b3e	      0xb900000000	                              mov ecx, 0	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b43	      0xbe11000000	                           mov esi, 0x11	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b48	          0x4889c7	                            mov rdi, rax	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b4b	      0xe810e7ffff	                    call sym.d_make_comp	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b50	      0xe915030000	                           jmp 0x4001e6a	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4001b55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001b59	          0x4889c7	                            mov rdi, rax	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001b5c	      0xe800000000	                          call 0x4001b61	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001b61	        0x488945e8	             mov qword [rbp - 0x18], rax	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001b65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2074	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_17
0x4001b69	          0x4889c7	                            mov rdi, rax	      2074	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_17
0x4001b6c	      0xe868f6ffff	                       call sym.d_number	      2074	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_17
0x4001b71	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2074	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_17
0x4001b74	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2075	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x4001b78	            0x790a	                           jns 0x4001b84	      2075	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x4001b7a	      0xb800000000	                              mov eax, 0	      2076	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x4001b7f	      0xe9e6020000	                           jmp 0x4001e6a	      2076	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x4001b84	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b88	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b8c	           0xfb600	                   movzx eax, byte [rax]	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b8f	            0x3c5f	                            cmp al, 0x5f	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b91	            0x751b	                           jne 0x4001bae	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b93	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b97	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b9b	        0x488d5001	                      lea rdx, [rax + 1]	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001b9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001ba3	        0x48895018	             mov qword [rax + 0x18], rdx	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001ba7	      0xb800000000	                              mov eax, 0	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001bac	            0xeb05	                           jmp 0x4001bb3	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001bae	      0xb801000000	                              mov eax, 1	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001bb3	            0x84c0	                             test al, al	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001bb5	            0x740a	                            je 0x4001bc1	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4001bb7	      0xb800000000	                              mov eax, 0	      2078	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7
0x4001bbc	      0xe9a9020000	                           jmp 0x4001e6a	      2078	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7
0x4001bc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bc5	          0x4889c7	                            mov rdi, rax	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bc8	      0xe800000000	                          call 0x4001bcd	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bcd	        0x488945f0	             mov qword [rbp - 0x10], rax	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bd1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2082	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bd5	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2082	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bd8	          0x8d5005	                      lea edx, [rax + 5]	      2082	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bdb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2082	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001bdf	          0x895048	             mov dword [rax + 0x48], edx	      2082	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001be2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x4001be6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x4001bea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x4001bee	      0xbe0b000000	                            mov esi, 0xb	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x4001bf3	          0x4889c7	                            mov rdi, rax	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x4001bf6	      0xe865e6ffff	                    call sym.d_make_comp	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x4001bfb	      0xe96a020000	                           jmp 0x4001e6a	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x4001c00	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c04	          0x4889c7	                            mov rdi, rax	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c07	      0xe800000000	                          call 0x4001c0c	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c0c	          0x4889c2	                            mov rdx, rax	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c0f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c13	      0xb900000000	                              mov ecx, 0	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c18	      0xbe0e000000	                            mov esi, 0xe	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c1d	          0x4889c7	                            mov rdi, rax	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c20	      0xe83be6ffff	                    call sym.d_make_comp	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c25	      0xe940020000	                           jmp 0x4001e6a	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x4001c2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c2e	          0x4889c7	                            mov rdi, rax	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c31	      0xe800000000	                          call 0x4001c36	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c36	          0x4889c2	                            mov rdx, rax	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c3d	      0xb900000000	                              mov ecx, 0	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c42	      0xbe12000000	                           mov esi, 0x12	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c47	          0x4889c7	                            mov rdi, rax	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c4a	      0xe811e6ffff	                    call sym.d_make_comp	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c4f	      0xe916020000	                           jmp 0x4001e6a	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4001c54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c58	          0x4889c7	                            mov rdi, rax	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c5b	      0xe824eeffff	                         call sym.d_name	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c60	          0x4889c2	                            mov rdx, rax	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c67	      0xb900000000	                              mov ecx, 0	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c6c	      0xbe14000000	                           mov esi, 0x14	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c71	          0x4889c7	                            mov rdi, rax	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c74	      0xe8e7e5ffff	                    call sym.d_make_comp	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c79	      0xe9ec010000	                           jmp 0x4001e6a	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4001c7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c82	          0x4889c7	                            mov rdi, rax	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c85	      0xe8faedffff	                         call sym.d_name	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c8a	          0x4889c2	                            mov rdx, rax	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c91	      0xb900000000	                              mov ecx, 0	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c96	      0xbe15000000	                           mov esi, 0x15	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c9b	          0x4889c7	                            mov rdi, rax	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001c9e	      0xe8bde5ffff	                    call sym.d_make_comp	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001ca3	      0xe9c2010000	                           jmp 0x4001e6a	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4001ca8	      0xb800000000	                              mov eax, 0	      2103	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001cad	      0xe9b8010000	                           jmp 0x4001e6a	      2103	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4001cb2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cb6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cba	           0xfb600	                   movzx eax, byte [rax]	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cbd	            0x3c47	                            cmp al, 0x47	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cbf	            0x751b	                           jne 0x4001cdc	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cc5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cc9	        0x488d5001	                      lea rdx, [rax + 1]	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001ccd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cd1	        0x48895018	             mov qword [rax + 0x18], rdx	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cd5	      0xb801000000	                              mov eax, 1	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cda	            0xeb05	                           jmp 0x4001ce1	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001cdc	      0xb800000000	                              mov eax, 0	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001ce1	            0x84c0	                             test al, al	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001ce3	     0xf847c010000	                            je 0x4001e65	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4001ce9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001ced	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001cf1	           0xfb600	                   movzx eax, byte [rax]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001cf4	            0x84c0	                             test al, al	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001cf6	            0x741c	                            je 0x4001d14	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001cf8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001cfc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d00	        0x488d4801	                      lea rcx, [rax + 1]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d04	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d08	        0x48894a18	             mov qword [rdx + 0x18], rcx	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d0c	           0xfb600	                   movzx eax, byte [rax]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d0f	           0xfbec0	                           movsx eax, al	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d12	            0xeb05	                           jmp 0x4001d19	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d14	      0xb800000000	                              mov eax, 0	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d19	          0x83e841	                           sub eax, 0x41	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d1c	          0x83f831	                           cmp eax, 0x31	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d1f	     0xf8739010000	                            ja 0x4001e5e	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d25	            0x89c0	                            mov eax, eax	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d27	    0x488b04c50000	                  mov rax, qword [rax*8]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d2f	            0xffe0	                                 jmp rax	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4001d31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d35	          0x4889c7	                            mov rdi, rax	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d38	      0xe847edffff	                         call sym.d_name	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d3d	          0x4889c2	                            mov rdx, rax	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d40	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d44	      0xb900000000	                              mov ecx, 0	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d49	      0xbe13000000	                           mov esi, 0x13	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d4e	          0x4889c7	                            mov rdi, rax	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d51	      0xe80ae5ffff	                    call sym.d_make_comp	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d56	      0xe90f010000	                           jmp 0x4001e6a	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4001d5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x4001d5f	          0x4889c7	                            mov rdi, rax	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x4001d62	      0xe81dedffff	                         call sym.d_name	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x4001d67	        0x488945f8	                mov qword [rbp - 8], rax	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x4001d6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d6f	          0x4889c7	                            mov rdi, rax	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d72	      0xe843f5ffff	             call sym.d_number_component	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d77	          0x4889c1	                            mov rcx, rax	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d7a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d82	      0xbe16000000	                           mov esi, 0x16	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d87	          0x4889c7	                            mov rdi, rax	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d8a	      0xe8d1e4ffff	                    call sym.d_make_comp	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d8f	      0xe9d6000000	                           jmp 0x4001e6a	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x4001d94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001d98	      0xbe00000000	                              mov esi, 0	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001d9d	          0x4889c7	                            mov rdi, rax	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001da0	      0xe8f9eaffff	                     call sym.d_encoding	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001da5	          0x4889c2	                            mov rdx, rax	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001da8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001dac	      0xb900000000	                              mov ecx, 0	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001db1	      0xbe17000000	                           mov esi, 0x17	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001db6	          0x4889c7	                            mov rdi, rax	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001db9	      0xe8a2e4ffff	                    call sym.d_make_comp	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001dbe	      0xe9a7000000	                           jmp 0x4001e6a	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4001dc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dc7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dcb	           0xfb600	                   movzx eax, byte [rax]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dce	            0x84c0	                             test al, al	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dd0	            0x741c	                            je 0x4001dee	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dd6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dda	        0x488d4801	                      lea rcx, [rax + 1]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dde	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001de2	        0x48894a18	             mov qword [rdx + 0x18], rcx	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001de6	           0xfb600	                   movzx eax, byte [rax]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001de9	           0xfbec0	                           movsx eax, al	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dec	            0xeb05	                           jmp 0x4001df3	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001dee	      0xb800000000	                              mov eax, 0	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001df3	          0x83f86e	                           cmp eax, 0x6e	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001df6	            0x752c	                           jne 0x4001e24	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4001df8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001dfc	      0xbe00000000	                              mov esi, 0	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e01	          0x4889c7	                            mov rdi, rax	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e04	      0xe895eaffff	                     call sym.d_encoding	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e09	          0x4889c2	                            mov rdx, rax	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e10	      0xb900000000	                              mov ecx, 0	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e15	      0xbe49000000	                           mov esi, 0x49	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e1a	          0x4889c7	                            mov rdi, rax	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e1d	      0xe83ee4ffff	                    call sym.d_make_comp	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e22	            0xeb46	                           jmp 0x4001e6a	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4001e24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e28	      0xbe00000000	                              mov esi, 0	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e2d	          0x4889c7	                            mov rdi, rax	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e30	      0xe869eaffff	                     call sym.d_encoding	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e35	          0x4889c2	                            mov rdx, rax	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e3c	      0xb900000000	                              mov ecx, 0	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e41	      0xbe48000000	                           mov esi, 0x48	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e46	          0x4889c7	                            mov rdi, rax	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e49	      0xe812e4ffff	                    call sym.d_make_comp	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e4e	            0xeb1a	                           jmp 0x4001e6a	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4001e50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2143	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_40
0x4001e54	          0x4889c7	                            mov rdi, rax	      2143	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_40
0x4001e57	      0xe835f8ffff	                call sym.d_java_resource	      2143	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_40
0x4001e5c	            0xeb0c	                           jmp 0x4001e6a	      2143	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_40
0x4001e5e	      0xb800000000	                              mov eax, 0	      2146	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2
0x4001e63	            0xeb05	                           jmp 0x4001e6a	      2146	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2
0x4001e65	      0xb800000000	                              mov eax, 0	      2150	cp-demangle.c	FUNCTION_31	ELSE_2
0x4001e6a	              0xc9	                                   leave	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x4001e6b	              0xc3	                                     ret	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
d_template_args	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,4:SWITCH,0:WHILE,0	26
0x400365f	              0x55	                                push rbp	      3106	cp-demangle.c	FUNCTION_46
0x4003660	          0x4889e5	                            mov rbp, rsp	      3106	cp-demangle.c	FUNCTION_46
0x4003663	        0x4883ec10	                           sub rsp, 0x10	      3106	cp-demangle.c	FUNCTION_46
0x4003667	        0x48897df8	                mov qword [rbp - 8], rdi	      3106	cp-demangle.c	FUNCTION_46
0x400366b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400366f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4003673	           0xfb600	                   movzx eax, byte [rax]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4003676	            0x3c49	                            cmp al, 0x49	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4003678	            0x7416	                            je 0x4003690	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400367a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3108	cp-demangle.c	FUNCTION_46	IF_1	CALL_2
0x400367e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3108	cp-demangle.c	FUNCTION_46	IF_1	CALL_2
0x4003682	           0xfb600	                   movzx eax, byte [rax]	      3108	cp-demangle.c	FUNCTION_46	IF_1	CALL_2
0x4003685	            0x3c4a	                            cmp al, 0x4a	      3108	cp-demangle.c	FUNCTION_46	IF_1	CALL_2
0x4003687	            0x7407	                            je 0x4003690	      3108	cp-demangle.c	FUNCTION_46	IF_1	CALL_2
0x4003689	      0xb800000000	                              mov eax, 0	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x400368e	            0xeb20	                           jmp 0x40036b0	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x4003690	        0x488b45f8	                mov rax, qword [rbp - 8]	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4003694	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4003698	        0x488d5001	                      lea rdx, [rax + 1]	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400369c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x40036a0	        0x48895018	             mov qword [rax + 0x18], rdx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x40036a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40036a8	          0x4889c7	                            mov rdi, rax	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40036ab	      0xe802000000	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40036b0	              0xc9	                                   leave	      3113	cp-demangle.c	FUNCTION_46
0x40036b1	              0xc3	                                     ret	      3113	cp-demangle.c	FUNCTION_46
d_bare_function_type	IF,4:DO,0:functions,0:ELSE,1:FOR,0:CALL,4:SWITCH,0:WHILE,0	44
0x40031e0	              0x55	                                push rbp	      2916	cp-demangle.c	FUNCTION_39
0x40031e1	          0x4889e5	                            mov rbp, rsp	      2916	cp-demangle.c	FUNCTION_39
0x40031e4	        0x4883ec30	                           sub rsp, 0x30	      2916	cp-demangle.c	FUNCTION_39
0x40031e8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2916	cp-demangle.c	FUNCTION_39
0x40031ec	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2916	cp-demangle.c	FUNCTION_39
0x40031ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2923	cp-demangle.c	FUNCTION_39	CALL_1
0x40031f3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2923	cp-demangle.c	FUNCTION_39	CALL_1
0x40031f7	           0xfb600	                   movzx eax, byte [rax]	      2923	cp-demangle.c	FUNCTION_39	CALL_1
0x40031fa	          0x8845ef	               mov byte [rbp - 0x11], al	      2923	cp-demangle.c	FUNCTION_39	CALL_1
0x40031fd	        0x807def4a	            cmp byte [rbp - 0x11], 0x4a 	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x4003201	            0x751b	                           jne 0x400321e	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x4003203	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x4003207	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400320b	        0x488d5001	                      lea rdx, [rax + 1]	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400320f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x4003213	        0x48895018	             mov qword [rax + 0x18], rdx	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x4003217	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      2927	cp-demangle.c	FUNCTION_39	IF_1
0x400321e	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2930	cp-demangle.c	FUNCTION_39	IF_2
0x4003222	            0x741e	                            je 0x4003242	      2930	cp-demangle.c	FUNCTION_39	IF_2
0x4003224	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x4003228	          0x4889c7	                            mov rdi, rax	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x400322b	      0xe800000000	                          call 0x4003230	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x4003230	        0x488945f0	             mov qword [rbp - 0x10], rax	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x4003234	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x4003239	            0x750f	                           jne 0x400324a	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x400323b	      0xb800000000	                              mov eax, 0	      2934	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x4003240	            0xeb3f	                           jmp 0x4003281	      2934	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x4003242	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2937	cp-demangle.c	FUNCTION_39	ELSE_1
0x400324a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x400324e	          0x4889c7	                            mov rdi, rax	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x4003251	      0xe81ffeffff	                     call sym.d_parmlist	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x4003256	        0x488945f8	                mov qword [rbp - 8], rax	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x400325a	      0x48837df800	                  cmp qword [rbp - 8], 0	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x400325f	            0x7507	                           jne 0x4003268	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x4003261	      0xb800000000	                              mov eax, 0	      2941	cp-demangle.c	FUNCTION_39	IF_4
0x4003266	            0xeb19	                           jmp 0x4003281	      2941	cp-demangle.c	FUNCTION_39	IF_4
0x4003268	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x400326c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x4003270	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x4003274	      0xbe29000000	                           mov esi, 0x29	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x4003279	          0x4889c7	                            mov rdi, rax	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x400327c	      0xe8dfcfffff	                    call sym.d_make_comp	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x4003281	              0xc9	                                   leave	      2945	cp-demangle.c	FUNCTION_39
0x4003282	              0xc3	                                     ret	      2945	cp-demangle.c	FUNCTION_39
d_clone_suffix	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,4:SWITCH,0:WHILE,3	98
0x4004a52	              0x55	                                push rbp	      3755	cp-demangle.c	FUNCTION_58
0x4004a53	          0x4889e5	                            mov rbp, rsp	      3755	cp-demangle.c	FUNCTION_58
0x4004a56	        0x4883ec30	                           sub rsp, 0x30	      3755	cp-demangle.c	FUNCTION_58
0x4004a5a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3755	cp-demangle.c	FUNCTION_58
0x4004a5e	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3755	cp-demangle.c	FUNCTION_58
0x4004a62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3756	cp-demangle.c	FUNCTION_58	CALL_1
0x4004a66	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3756	cp-demangle.c	FUNCTION_58	CALL_1
0x4004a6a	        0x488945f0	             mov qword [rbp - 0x10], rax	      3756	cp-demangle.c	FUNCTION_58	CALL_1
0x4004a6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3757	cp-demangle.c	FUNCTION_58
0x4004a72	        0x488945e8	             mov qword [rbp - 0x18], rax	      3757	cp-demangle.c	FUNCTION_58
0x4004a76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a7a	           0xfb600	                   movzx eax, byte [rax]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a7d	            0x3c2e	                            cmp al, 0x2e	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a7f	            0x757e	                           jne 0x4004aff	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a85	        0x4883c001	                              add rax, 1	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a89	           0xfb600	                   movzx eax, byte [rax]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a8c	            0x3c60	                            cmp al, 0x60	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a8e	            0x7e0f	                           jle 0x4004a9f	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a94	        0x4883c001	                              add rax, 1	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a98	           0xfb600	                   movzx eax, byte [rax]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a9b	            0x3c7a	                            cmp al, 0x7a	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a9d	            0x7e0f	                           jle 0x4004aae	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004a9f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004aa3	        0x4883c001	                              add rax, 1	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004aa7	           0xfb600	                   movzx eax, byte [rax]	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004aaa	            0x3c5f	                            cmp al, 0x5f	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004aac	            0x7551	                           jne 0x4004aff	      3760	cp-demangle.c	FUNCTION_58	IF_1
0x4004aae	      0x488345e802	               add qword [rbp - 0x18], 2	      3762	cp-demangle.c	FUNCTION_58	IF_1
0x4004ab3	            0xeb05	                           jmp 0x4004aba	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ab5	      0x488345e801	               add qword [rbp - 0x18], 1	      3764	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004aba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004abe	           0xfb600	                   movzx eax, byte [rax]	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ac1	            0x3c60	                            cmp al, 0x60	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ac3	            0x7e0b	                           jle 0x4004ad0	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ac5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ac9	           0xfb600	                   movzx eax, byte [rax]	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004acc	            0x3c7a	                            cmp al, 0x7a	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ace	            0x7ee5	                           jle 0x4004ab5	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ad0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ad4	           0xfb600	                   movzx eax, byte [rax]	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ad7	            0x3c5f	                            cmp al, 0x5f	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004ad9	            0x74da	                            je 0x4004ab5	      3763	cp-demangle.c	FUNCTION_58	IF_1	WHILE_1
0x4004adb	            0xeb22	                           jmp 0x4004aff	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004add	      0x488345e802	               add qword [rbp - 0x18], 2	      3768	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004ae2	            0xeb05	                           jmp 0x4004ae9	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004ae4	      0x488345e801	               add qword [rbp - 0x18], 1	      3770	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004ae9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004aed	           0xfb600	                   movzx eax, byte [rax]	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004af0	            0x3c2f	                            cmp al, 0x2f	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004af2	            0x7e0b	                           jle 0x4004aff	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004af4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004af8	           0xfb600	                   movzx eax, byte [rax]	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004afb	            0x3c39	                            cmp al, 0x39	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004afd	            0x7ee5	                           jle 0x4004ae4	      3769	cp-demangle.c	FUNCTION_58	WHILE_2	WHILE_3
0x4004aff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b03	           0xfb600	                   movzx eax, byte [rax]	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b06	            0x3c2e	                            cmp al, 0x2e	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b08	            0x751e	                           jne 0x4004b28	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b0e	        0x4883c001	                              add rax, 1	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b12	           0xfb600	                   movzx eax, byte [rax]	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b15	            0x3c2f	                            cmp al, 0x2f	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b17	            0x7e0f	                           jle 0x4004b28	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b1d	        0x4883c001	                              add rax, 1	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b21	           0xfb600	                   movzx eax, byte [rax]	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b24	            0x3c39	                            cmp al, 0x39	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b26	            0x7eb5	                           jle 0x4004add	      3766	cp-demangle.c	FUNCTION_58	WHILE_2
0x4004b28	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b2c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b30	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b34	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b38	          0x4829d1	                            sub rcx, rdx	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b3b	          0x4889ca	                            mov rdx, rcx	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b3e	          0x4801c2	                            add rdx, rax	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b45	        0x48895018	             mov qword [rax + 0x18], rdx	      3772	cp-demangle.c	FUNCTION_58	CALL_2
0x4004b49	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b51	          0x4829c2	                            sub rdx, rax	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b54	          0x4889d0	                            mov rax, rdx	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b57	            0x89c2	                            mov edx, eax	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b59	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b61	          0x4889ce	                            mov rsi, rcx	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b64	          0x4889c7	                            mov rdi, rax	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b67	      0xe81ab8ffff	                    call sym.d_make_name	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b6c	        0x488945f8	                mov qword [rbp - 8], rax	      3773	cp-demangle.c	FUNCTION_58	CALL_3
0x4004b70	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3774	cp-demangle.c	FUNCTION_58	CALL_4
0x4004b74	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3774	cp-demangle.c	FUNCTION_58	CALL_4
0x4004b78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3774	cp-demangle.c	FUNCTION_58	CALL_4
0x4004b7c	      0xbe4d000000	                           mov esi, 0x4d	      3774	cp-demangle.c	FUNCTION_58	CALL_4
0x4004b81	          0x4889c7	                            mov rdi, rax	      3774	cp-demangle.c	FUNCTION_58	CALL_4
0x4004b84	      0xe8d7b6ffff	                    call sym.d_make_comp	      3774	cp-demangle.c	FUNCTION_58	CALL_4
0x4004b89	              0xc9	                                   leave	      3775	cp-demangle.c	FUNCTION_58
0x4004b8a	              0xc3	                                     ret	      3775	cp-demangle.c	FUNCTION_58
is_gnu_v3_mangled_dtor	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	24
0x400a2a9	              0x55	                                push rbp	      6587	cp-demangle.c	FUNCTION_106
0x400a2aa	          0x4889e5	                            mov rbp, rsp	      6587	cp-demangle.c	FUNCTION_106
0x400a2ad	        0x4883ec20	                           sub rsp, 0x20	      6587	cp-demangle.c	FUNCTION_106
0x400a2b1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6587	cp-demangle.c	FUNCTION_106
0x400a2b5	    0x64488b042528	                mov rax, qword fs:[0x28]	      6587	cp-demangle.c	FUNCTION_106
0x400a2be	        0x488945f8	                mov qword [rbp - 8], rax	      6587	cp-demangle.c	FUNCTION_106
0x400a2c2	            0x31c0	                            xor eax, eax	      6587	cp-demangle.c	FUNCTION_106
0x400a2c4	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2c8	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2d0	          0x4889ce	                            mov rsi, rcx	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2d3	          0x4889c7	                            mov rdi, rax	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2d6	      0xe899fcffff	                call sym.is_ctor_or_dtor	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2db	            0x85c0	                           test eax, eax	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2dd	            0x7507	                           jne 0x400a2e6	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a2df	      0xb800000000	                              mov eax, 0	      6592	cp-demangle.c	FUNCTION_106	IF_1
0x400a2e4	            0xeb03	                           jmp 0x400a2e9	      6592	cp-demangle.c	FUNCTION_106	IF_1
0x400a2e6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6593	cp-demangle.c	FUNCTION_106
0x400a2e9	        0x488b75f8	                mov rsi, qword [rbp - 8]	      6594	cp-demangle.c	FUNCTION_106
0x400a2ed	    0x644833342528	                xor rsi, qword fs:[0x28]	      6594	cp-demangle.c	FUNCTION_106
0x400a2f6	            0x7405	                            je 0x400a2fd	      6594	cp-demangle.c	FUNCTION_106
0x400a2f8	      0xe800000000	                          call 0x400a2fd	      6594	cp-demangle.c	FUNCTION_106
0x400a2fd	              0xc9	                                   leave	      6594	cp-demangle.c	FUNCTION_106
0x400a2fe	              0xc3	                                     ret	      6594	cp-demangle.c	FUNCTION_106
d_append_buffer	IF,0:DO,0:functions,0:ELSE,0:FOR,1:CALL,1:SWITCH,0:WHILE,0	24
0x400556c	              0x55	                                push rbp	      4241	cp-demangle.c	FUNCTION_73
0x400556d	          0x4889e5	                            mov rbp, rsp	      4241	cp-demangle.c	FUNCTION_73
0x4005570	        0x4883ec30	                           sub rsp, 0x30	      4241	cp-demangle.c	FUNCTION_73
0x4005574	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4241	cp-demangle.c	FUNCTION_73
0x4005578	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4241	cp-demangle.c	FUNCTION_73
0x400557c	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4241	cp-demangle.c	FUNCTION_73
0x4005580	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005588	            0xeb24	                           jmp 0x40055ae	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400558a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400558e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005592	          0x4801d0	                            add rax, rdx	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005595	           0xfb600	                   movzx eax, byte [rax]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005598	           0xfbed0	                           movsx edx, al	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400559b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400559f	            0x89d6	                            mov esi, edx	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40055a1	          0x4889c7	                            mov rdi, rax	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40055a4	      0xe85dffffff	                  call sym.d_append_char	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40055a9	      0x488345f801	                  add qword [rbp - 8], 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40055ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40055b2	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40055b6	            0x72d2	                            jb 0x400558a	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40055b8	              0x90	                                     nop	      4246	cp-demangle.c	FUNCTION_73
0x40055b9	              0xc9	                                   leave	      4246	cp-demangle.c	FUNCTION_73
0x40055ba	              0xc3	                                     ret	      4246	cp-demangle.c	FUNCTION_73
is_gnu_v3_mangled_ctor	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	24
0x400a253	              0x55	                                push rbp	      6572	cp-demangle.c	FUNCTION_105
0x400a254	          0x4889e5	                            mov rbp, rsp	      6572	cp-demangle.c	FUNCTION_105
0x400a257	        0x4883ec20	                           sub rsp, 0x20	      6572	cp-demangle.c	FUNCTION_105
0x400a25b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6572	cp-demangle.c	FUNCTION_105
0x400a25f	    0x64488b042528	                mov rax, qword fs:[0x28]	      6572	cp-demangle.c	FUNCTION_105
0x400a268	        0x488945f8	                mov qword [rbp - 8], rax	      6572	cp-demangle.c	FUNCTION_105
0x400a26c	            0x31c0	                            xor eax, eax	      6572	cp-demangle.c	FUNCTION_105
0x400a26e	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a272	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a276	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a27a	          0x4889ce	                            mov rsi, rcx	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a27d	          0x4889c7	                            mov rdi, rax	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a280	      0xe8effcffff	                call sym.is_ctor_or_dtor	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a285	            0x85c0	                           test eax, eax	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a287	            0x7507	                           jne 0x400a290	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a289	      0xb800000000	                              mov eax, 0	      6577	cp-demangle.c	FUNCTION_105	IF_1
0x400a28e	            0xeb03	                           jmp 0x400a293	      6577	cp-demangle.c	FUNCTION_105	IF_1
0x400a290	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6578	cp-demangle.c	FUNCTION_105
0x400a293	        0x488b75f8	                mov rsi, qword [rbp - 8]	      6579	cp-demangle.c	FUNCTION_105
0x400a297	    0x644833342528	                xor rsi, qword fs:[0x28]	      6579	cp-demangle.c	FUNCTION_105
0x400a2a0	            0x7405	                            je 0x400a2a7	      6579	cp-demangle.c	FUNCTION_105
0x400a2a2	      0xe800000000	                          call 0x400a2a7	      6579	cp-demangle.c	FUNCTION_105
0x400a2a7	              0xc9	                                   leave	      6579	cp-demangle.c	FUNCTION_105
0x400a2a8	              0xc3	                                     ret	      6579	cp-demangle.c	FUNCTION_105
d_make_empty	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	32
0x40001f7	              0x55	                                push rbp	       930	cp-demangle.c	FUNCTION_3
0x40001f8	          0x4889e5	                            mov rbp, rsp	       930	cp-demangle.c	FUNCTION_3
0x40001fb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       930	cp-demangle.c	FUNCTION_3
0x40001ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000203	          0x8b5028	            mov edx, dword [rax + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000206	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400020a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400020d	            0x39c2	                            cmp edx, eax	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400020f	            0x7c07	                            jl 0x4000218	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000211	      0xb800000000	                              mov eax, 0	       934	cp-demangle.c	FUNCTION_3	IF_1
0x4000216	            0xeb46	                           jmp 0x400025e	       934	cp-demangle.c	FUNCTION_3	IF_1
0x4000218	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       935	cp-demangle.c	FUNCTION_3
0x400021c	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4000220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       935	cp-demangle.c	FUNCTION_3
0x4000224	          0x8b4028	            mov eax, dword [rax + 0x28] 	       935	cp-demangle.c	FUNCTION_3
0x4000227	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x400022a	          0x4889d0	                            mov rax, rdx	       935	cp-demangle.c	FUNCTION_3
0x400022d	          0x4801c0	                            add rax, rax	       935	cp-demangle.c	FUNCTION_3
0x4000230	          0x4801d0	                            add rax, rdx	       935	cp-demangle.c	FUNCTION_3
0x4000233	        0x48c1e003	                              shl rax, 3	       935	cp-demangle.c	FUNCTION_3
0x4000237	          0x4801c8	                            add rax, rcx	       935	cp-demangle.c	FUNCTION_3
0x400023a	        0x488945f8	                mov qword [rbp - 8], rax	       935	cp-demangle.c	FUNCTION_3
0x400023e	        0x488b45f8	                mov rax, qword [rbp - 8]	       936	cp-demangle.c	FUNCTION_3
0x4000242	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000249	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       937	cp-demangle.c	FUNCTION_3
0x400024d	          0x8b4028	            mov eax, dword [rax + 0x28] 	       937	cp-demangle.c	FUNCTION_3
0x4000250	          0x8d5001	                      lea edx, [rax + 1]	       937	cp-demangle.c	FUNCTION_3
0x4000253	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       937	cp-demangle.c	FUNCTION_3
0x4000257	          0x895028	             mov dword [rax + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400025a	        0x488b45f8	                mov rax, qword [rbp - 8]	       938	cp-demangle.c	FUNCTION_3
0x400025e	              0x5d	                                 pop rbp	       939	cp-demangle.c	FUNCTION_3
0x400025f	              0xc3	                                     ret	       939	cp-demangle.c	FUNCTION_3
d_maybe_print_fold_expression	IF,2:DO,0:functions,0:ELSE,0:FOR,0:CALL,15:SWITCH,1:WHILE,0	143
0x4005de4	              0x55	                                push rbp	      4560	cp-demangle.c	FUNCTION_85
0x4005de5	          0x4889e5	                            mov rbp, rsp	      4560	cp-demangle.c	FUNCTION_85
0x4005de8	        0x4883ec50	                           sub rsp, 0x50	      4560	cp-demangle.c	FUNCTION_85
0x4005dec	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4560	cp-demangle.c	FUNCTION_85
0x4005df0	          0x8975c4	             mov dword [rbp - 0x3c], esi	      4560	cp-demangle.c	FUNCTION_85
0x4005df3	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4560	cp-demangle.c	FUNCTION_85
0x4005df7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4564	cp-demangle.c	FUNCTION_85
0x4005dfb	        0x488b4008	                mov rax, qword [rax + 8]	      4564	cp-demangle.c	FUNCTION_85
0x4005dff	        0x488b4008	                mov rax, qword [rax + 8]	      4564	cp-demangle.c	FUNCTION_85
0x4005e03	          0x488b00	                    mov rax, qword [rax]	      4564	cp-demangle.c	FUNCTION_85
0x4005e06	        0x488945e8	             mov qword [rbp - 0x18], rax	      4564	cp-demangle.c	FUNCTION_85
0x4005e0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4565	cp-demangle.c	FUNCTION_85	IF_1
0x4005e0e	           0xfb600	                   movzx eax, byte [rax]	      4565	cp-demangle.c	FUNCTION_85	IF_1
0x4005e11	            0x3c66	                            cmp al, 0x66	      4565	cp-demangle.c	FUNCTION_85	IF_1
0x4005e13	            0x740a	                            je 0x4005e1f	      4565	cp-demangle.c	FUNCTION_85	IF_1
0x4005e15	      0xb800000000	                              mov eax, 0	      4566	cp-demangle.c	FUNCTION_85	IF_1
0x4005e1a	      0xe9df010000	                           jmp 0x4005ffe	      4566	cp-demangle.c	FUNCTION_85	IF_1
0x4005e1f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4568	cp-demangle.c	FUNCTION_85
0x4005e23	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4568	cp-demangle.c	FUNCTION_85
0x4005e27	        0x488945f0	             mov qword [rbp - 0x10], rax	      4568	cp-demangle.c	FUNCTION_85
0x4005e2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4569	cp-demangle.c	FUNCTION_85
0x4005e2f	        0x488b4008	                mov rax, qword [rax + 8]	      4569	cp-demangle.c	FUNCTION_85
0x4005e33	        0x488945f8	                mov qword [rbp - 8], rax	      4569	cp-demangle.c	FUNCTION_85
0x4005e37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4570	cp-demangle.c	FUNCTION_85
0x4005e3b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4570	cp-demangle.c	FUNCTION_85
0x4005e3f	        0x488945d8	             mov qword [rbp - 0x28], rax	      4570	cp-demangle.c	FUNCTION_85
0x4005e43	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4571	cp-demangle.c	FUNCTION_85
0x4005e4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4572	cp-demangle.c	FUNCTION_85	IF_2
0x4005e4f	            0x8b00	                    mov eax, dword [rax]	      4572	cp-demangle.c	FUNCTION_85	IF_2
0x4005e51	          0x83f83b	                           cmp eax, 0x3b	      4572	cp-demangle.c	FUNCTION_85	IF_2
0x4005e54	            0x7518	                           jne 0x4005e6e	      4572	cp-demangle.c	FUNCTION_85	IF_2
0x4005e56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4574	cp-demangle.c	FUNCTION_85	IF_2
0x4005e5a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4574	cp-demangle.c	FUNCTION_85	IF_2
0x4005e5e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4574	cp-demangle.c	FUNCTION_85	IF_2
0x4005e62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4575	cp-demangle.c	FUNCTION_85	IF_2
0x4005e66	        0x488b4008	                mov rax, qword [rax + 8]	      4575	cp-demangle.c	FUNCTION_85	IF_2
0x4005e6a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4575	cp-demangle.c	FUNCTION_85	IF_2
0x4005e6e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4579	cp-demangle.c	FUNCTION_85
0x4005e72	    0x8b803c010000	           mov eax, dword [rax + 0x13c] 	      4579	cp-demangle.c	FUNCTION_85
0x4005e78	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4579	cp-demangle.c	FUNCTION_85
0x4005e7b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4580	cp-demangle.c	FUNCTION_85
0x4005e7f	    0xc7803c010000	    mov dword [rax + 0x13c], 0xffffffff 	      4580	cp-demangle.c	FUNCTION_85
0x4005e89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005e8d	        0x4883c001	                              add rax, 1	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005e91	           0xfb600	                   movzx eax, byte [rax]	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005e94	           0xfbec0	                           movsx eax, al	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005e97	          0x83f852	                           cmp eax, 0x52	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005e9a	     0xf84c4000000	                            je 0x4005f64	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ea0	          0x83f852	                           cmp eax, 0x52	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ea3	            0x7f0e	                            jg 0x4005eb3	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ea5	          0x83f84c	                           cmp eax, 0x4c	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ea8	     0xf84b6000000	                            je 0x4005f64	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005eae	      0xe939010000	                           jmp 0x4005fec	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005eb3	          0x83f86c	                           cmp eax, 0x6c	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005eb6	            0x740a	                            je 0x4005ec2	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005eb8	          0x83f872	                           cmp eax, 0x72	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ebb	            0x7456	                            je 0x4005f13	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ebd	      0xe92a010000	                           jmp 0x4005fec	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ec2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4586	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_1
0x4005ec6	      0xbe00000000	                              mov esi, 0	      4586	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_1
0x4005ecb	          0x4889c7	                            mov rdi, rax	      4586	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_1
0x4005ece	      0xe8e8f6ffff	                call sym.d_append_string	      4586	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_1
0x4005ed3	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005ed7	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005eda	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005ede	            0x89ce	                            mov esi, ecx	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005ee0	          0x4889c7	                            mov rdi, rax	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005ee3	      0xe81b380000	                call sym.d_print_expr_op	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005ee8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005eec	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005eef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005ef3	            0x89ce	                            mov esi, ecx	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005ef5	          0x4889c7	                            mov rdi, rax	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005ef8	      0xe8a9fcffff	                call sym.d_print_subexpr	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005efd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4589	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_4
0x4005f01	      0xbe29000000	                           mov esi, 0x29	      4589	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_4
0x4005f06	          0x4889c7	                            mov rdi, rax	      4589	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_4
0x4005f09	      0xe8f8f5ffff	                  call sym.d_append_char	      4589	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_4
0x4005f0e	      0xe9d9000000	                           jmp 0x4005fec	      4590	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005f13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4594	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_5
0x4005f17	      0xbe28000000	                           mov esi, 0x28	      4594	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_5
0x4005f1c	          0x4889c7	                            mov rdi, rax	      4594	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_5
0x4005f1f	      0xe8e2f5ffff	                  call sym.d_append_char	      4594	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_5
0x4005f24	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005f28	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005f2b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005f2f	            0x89ce	                            mov esi, ecx	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005f31	          0x4889c7	                            mov rdi, rax	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005f34	      0xe86dfcffff	                call sym.d_print_subexpr	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005f39	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005f3d	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005f40	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005f44	            0x89ce	                            mov esi, ecx	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005f46	          0x4889c7	                            mov rdi, rax	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005f49	      0xe8b5370000	                call sym.d_print_expr_op	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005f4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4597	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_8
0x4005f52	      0xbe00000000	                              mov esi, 0	      4597	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_8
0x4005f57	          0x4889c7	                            mov rdi, rax	      4597	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_8
0x4005f5a	      0xe85cf6ffff	                call sym.d_append_string	      4597	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_8
0x4005f5f	      0xe988000000	                           jmp 0x4005fec	      4598	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005f64	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4604	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_9
0x4005f68	      0xbe28000000	                           mov esi, 0x28	      4604	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_9
0x4005f6d	          0x4889c7	                            mov rdi, rax	      4604	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_9
0x4005f70	      0xe891f5ffff	                  call sym.d_append_char	      4604	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_9
0x4005f75	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005f79	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005f7c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005f80	            0x89ce	                            mov esi, ecx	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005f82	          0x4889c7	                            mov rdi, rax	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005f85	      0xe81cfcffff	                call sym.d_print_subexpr	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005f8a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f8e	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f91	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f95	            0x89ce	                            mov esi, ecx	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f97	          0x4889c7	                            mov rdi, rax	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f9a	      0xe864370000	                call sym.d_print_expr_op	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4607	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_12
0x4005fa3	      0xbe00000000	                              mov esi, 0	      4607	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_12
0x4005fa8	          0x4889c7	                            mov rdi, rax	      4607	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_12
0x4005fab	      0xe80bf6ffff	                call sym.d_append_string	      4607	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_12
0x4005fb0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005fb4	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005fb7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005fbb	            0x89ce	                            mov esi, ecx	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005fbd	          0x4889c7	                            mov rdi, rax	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005fc0	      0xe83e370000	                call sym.d_print_expr_op	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005fc5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005fc9	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005fcc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005fd0	            0x89ce	                            mov esi, ecx	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005fd2	          0x4889c7	                            mov rdi, rax	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005fd5	      0xe8ccfbffff	                call sym.d_print_subexpr	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005fda	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4610	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_15
0x4005fde	      0xbe29000000	                           mov esi, 0x29	      4610	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_15
0x4005fe3	          0x4889c7	                            mov rdi, rax	      4610	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_15
0x4005fe6	      0xe81bf5ffff	                  call sym.d_append_char	      4610	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_15
0x4005feb	              0x90	                                     nop	      4611	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005fec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4614	cp-demangle.c	FUNCTION_85
0x4005ff0	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      4614	cp-demangle.c	FUNCTION_85
0x4005ff3	    0x89903c010000	            mov dword [rax + 0x13c], edx	      4614	cp-demangle.c	FUNCTION_85
0x4005ff9	      0xb801000000	                              mov eax, 1	      4615	cp-demangle.c	FUNCTION_85
0x4005ffe	              0xc9	                                   leave	      4616	cp-demangle.c	FUNCTION_85
0x4005fff	              0xc3	                                     ret	      4616	cp-demangle.c	FUNCTION_85
d_make_sub	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x4000617	              0x55	                                push rbp	      1199	cp-demangle.c	FUNCTION_15
0x4000618	          0x4889e5	                            mov rbp, rsp	      1199	cp-demangle.c	FUNCTION_15
0x400061b	        0x4883ec28	                           sub rsp, 0x28	      1199	cp-demangle.c	FUNCTION_15
0x400061f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1199	cp-demangle.c	FUNCTION_15
0x4000623	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1199	cp-demangle.c	FUNCTION_15
0x4000627	          0x8955dc	             mov dword [rbp - 0x24], edx	      1199	cp-demangle.c	FUNCTION_15
0x400062a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x400062e	          0x4889c7	                            mov rdi, rax	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x4000631	      0xe8c1fbffff	                   call sym.d_make_empty	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x4000636	        0x488945f8	                mov qword [rbp - 8], rax	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x400063a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1203	cp-demangle.c	FUNCTION_15	IF_1
0x400063f	            0x7420	                            je 0x4000661	      1203	cp-demangle.c	FUNCTION_15	IF_1
0x4000641	        0x488b45f8	                mov rax, qword [rbp - 8]	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x4000645	    0xc70018000000	                   mov dword [rax], 0x18	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x400064b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x400064f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x4000653	        0x48895008	                mov qword [rax + 8], rdx	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x4000657	        0x488b45f8	                mov rax, qword [rbp - 8]	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x400065b	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x400065e	          0x895010	             mov dword [rax + 0x10], edx	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x4000661	        0x488b45f8	                mov rax, qword [rbp - 8]	      1209	cp-demangle.c	FUNCTION_15
0x4000665	              0xc9	                                   leave	      1210	cp-demangle.c	FUNCTION_15
0x4000666	              0xc3	                                     ret	      1210	cp-demangle.c	FUNCTION_15
d_find_pack	IF,3:DO,0:functions,0:ELSE,0:FOR,0:CALL,6:SWITCH,1:WHILE,0	76
0x40059bc	              0x55	                                push rbp	      4394	cp-demangle.c	FUNCTION_79
0x40059bd	          0x4889e5	                            mov rbp, rsp	      4394	cp-demangle.c	FUNCTION_79
0x40059c0	        0x4883ec20	                           sub rsp, 0x20	      4394	cp-demangle.c	FUNCTION_79
0x40059c4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4394	cp-demangle.c	FUNCTION_79
0x40059c8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4394	cp-demangle.c	FUNCTION_79
0x40059cc	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40059d1	            0x750a	                           jne 0x40059dd	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40059d3	      0xb800000000	                              mov eax, 0	      4397	cp-demangle.c	FUNCTION_79	IF_1
0x40059d8	      0xe9f5000000	                           jmp 0x4005ad2	      4397	cp-demangle.c	FUNCTION_79	IF_1
0x40059dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40059e1	            0x8b00	                    mov eax, dword [rax]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40059e3	          0x83f84b	                           cmp eax, 0x4b	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40059e6	     0xf87a7000000	                            ja 0x4005a93	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40059ec	            0x89c0	                            mov eax, eax	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40059ee	    0x488b04c50000	                  mov rax, qword [rax*8]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40059f6	            0xffe0	                                 jmp rax	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40059f8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x40059fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x4005a00	          0x4889d6	                            mov rsi, rdx	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x4005a03	          0x4889c7	                            mov rdi, rax	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x4005a06	      0xe855ffffff	     call sym.d_lookup_template_argument	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x4005a0b	        0x488945f8	                mov qword [rbp - 8], rax	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x4005a0f	      0x48837df800	                  cmp qword [rbp - 8], 0	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a14	            0x7414	                            je 0x4005a2a	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a16	        0x488b45f8	                mov rax, qword [rbp - 8]	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a1a	            0x8b00	                    mov eax, dword [rax]	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a1c	          0x83f82f	                           cmp eax, 0x2f	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a1f	            0x7509	                           jne 0x4005a2a	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a21	        0x488b45f8	                mov rax, qword [rbp - 8]	      4404	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a25	      0xe9a8000000	                           jmp 0x4005ad2	      4404	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4005a2a	      0xb800000000	                              mov eax, 0	      4405	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4005a2f	      0xe99e000000	                           jmp 0x4005ad2	      4405	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4005a34	      0xb800000000	                              mov eax, 0	      4408	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4005a39	      0xe994000000	                           jmp 0x4005ad2	      4408	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4005a3e	      0xb800000000	                              mov eax, 0	      4422	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4005a43	      0xe98a000000	                           jmp 0x4005ad2	      4422	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4005a48	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4005a4c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4005a50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4005a54	          0x4889d6	                            mov rsi, rdx	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4005a57	          0x4889c7	                            mov rdi, rax	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4005a5a	      0xe85dffffff	                    call sym.d_find_pack	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4005a5f	            0xeb71	                           jmp 0x4005ad2	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4005a61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4005a65	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4005a69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4005a6d	          0x4889d6	                            mov rsi, rdx	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4005a70	          0x4889c7	                            mov rdi, rax	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4005a73	      0xe844ffffff	                    call sym.d_find_pack	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4005a78	            0xeb58	                           jmp 0x4005ad2	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4005a7a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4005a7e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4005a82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4005a86	          0x4889d6	                            mov rsi, rdx	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4005a89	          0x4889c7	                            mov rdi, rax	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4005a8c	      0xe82bffffff	                    call sym.d_find_pack	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4005a91	            0xeb3f	                           jmp 0x4005ad2	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4005a93	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4005a97	        0x488b5008	                mov rdx, qword [rax + 8]	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4005a9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4005a9f	          0x4889d6	                            mov rsi, rdx	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4005aa2	          0x4889c7	                            mov rdi, rax	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4005aa5	      0xe812ffffff	                    call sym.d_find_pack	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4005aaa	        0x488945f8	                mov qword [rbp - 8], rax	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4005aae	      0x48837df800	                  cmp qword [rbp - 8], 0	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x4005ab3	            0x7406	                            je 0x4005abb	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x4005ab5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4434	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x4005ab9	            0xeb17	                           jmp 0x4005ad2	      4434	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x4005abb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4005abf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4005ac3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4005ac7	          0x4889d6	                            mov rsi, rdx	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4005aca	          0x4889c7	                            mov rdi, rax	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4005acd	      0xe8eafeffff	                    call sym.d_find_pack	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4005ad2	              0xc9	                                   leave	      4437	cp-demangle.c	FUNCTION_79
0x4005ad3	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
d_save_scope	IF,2:DO,0:functions,0:ELSE,0:FOR,1:CALL,2:SWITCH,0:WHILE,0	79
0x4005c38	              0x55	                                push rbp	      4503	cp-demangle.c	FUNCTION_83
0x4005c39	          0x4889e5	                            mov rbp, rsp	      4503	cp-demangle.c	FUNCTION_83
0x4005c3c	        0x4883ec30	                           sub rsp, 0x30	      4503	cp-demangle.c	FUNCTION_83
0x4005c40	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4503	cp-demangle.c	FUNCTION_83
0x4005c44	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4503	cp-demangle.c	FUNCTION_83
0x4005c48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4005c4c	    0x8b9058010000	           mov edx, dword [rax + 0x158] 	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4005c52	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4005c56	    0x8b805c010000	           mov eax, dword [rax + 0x15c] 	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4005c5c	            0x39c2	                            cmp edx, eax	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4005c5e	            0x7c11	                            jl 0x4005c71	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4005c60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4509	cp-demangle.c	FUNCTION_83	IF_1	CALL_1
0x4005c64	          0x4889c7	                            mov rdi, rax	      4509	cp-demangle.c	FUNCTION_83	IF_1	CALL_1
0x4005c67	      0xe8f0f7ffff	                  call sym.d_print_error	      4509	cp-demangle.c	FUNCTION_83	IF_1	CALL_1
0x4005c6c	      0xe907010000	                           jmp 0x4005d78	      4510	cp-demangle.c	FUNCTION_83	IF_1
0x4005c71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4512	cp-demangle.c	FUNCTION_83
0x4005c75	    0x488b90500100	           mov rdx, qword [rax + 0x150] 	      4512	cp-demangle.c	FUNCTION_83
0x4005c7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4512	cp-demangle.c	FUNCTION_83
0x4005c80	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	      4512	cp-demangle.c	FUNCTION_83
0x4005c86	            0x4898	                                    cdqe	      4512	cp-demangle.c	FUNCTION_83
0x4005c88	        0x48c1e004	                              shl rax, 4	      4512	cp-demangle.c	FUNCTION_83
0x4005c8c	          0x4801d0	                            add rax, rdx	      4512	cp-demangle.c	FUNCTION_83
0x4005c8f	        0x488945f0	             mov qword [rbp - 0x10], rax	      4512	cp-demangle.c	FUNCTION_83
0x4005c93	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4513	cp-demangle.c	FUNCTION_83
0x4005c97	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	      4513	cp-demangle.c	FUNCTION_83
0x4005c9d	          0x8d5001	                      lea edx, [rax + 1]	      4513	cp-demangle.c	FUNCTION_83
0x4005ca0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4513	cp-demangle.c	FUNCTION_83
0x4005ca4	    0x899058010000	            mov dword [rax + 0x158], edx	      4513	cp-demangle.c	FUNCTION_83
0x4005caa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4515	cp-demangle.c	FUNCTION_83
0x4005cae	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4515	cp-demangle.c	FUNCTION_83
0x4005cb2	          0x488910	                    mov qword [rax], rdx	      4515	cp-demangle.c	FUNCTION_83
0x4005cb5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4516	cp-demangle.c	FUNCTION_83
0x4005cb9	        0x4883c008	                              add rax, 8	      4516	cp-demangle.c	FUNCTION_83
0x4005cbd	        0x488945e8	             mov qword [rbp - 0x18], rax	      4516	cp-demangle.c	FUNCTION_83
0x4005cc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005cc5	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005ccc	        0x488945e0	             mov qword [rbp - 0x20], rax	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005cd0	      0xe98d000000	                           jmp 0x4005d62	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005cd5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4005cd9	    0x8b9068010000	           mov edx, dword [rax + 0x168] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4005cdf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4005ce3	    0x8b806c010000	           mov eax, dword [rax + 0x16c] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4005ce9	            0x39c2	                            cmp edx, eax	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4005ceb	            0x7c0e	                            jl 0x4005cfb	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4005ced	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4524	cp-demangle.c	FUNCTION_83	FOR_1	IF_2	CALL_2
0x4005cf1	          0x4889c7	                            mov rdi, rax	      4524	cp-demangle.c	FUNCTION_83	FOR_1	IF_2	CALL_2
0x4005cf4	      0xe863f7ffff	                  call sym.d_print_error	      4524	cp-demangle.c	FUNCTION_83	FOR_1	IF_2	CALL_2
0x4005cf9	            0xeb7d	                           jmp 0x4005d78	      4525	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4005cfb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005cff	    0x488b90600100	           mov rdx, qword [rax + 0x160] 	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d0a	    0x8b8068010000	           mov eax, dword [rax + 0x168] 	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d10	            0x4898	                                    cdqe	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d12	        0x48c1e004	                              shl rax, 4	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d16	          0x4801d0	                            add rax, rdx	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d19	        0x488945f8	                mov qword [rbp - 8], rax	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d21	    0x8b8068010000	           mov eax, dword [rax + 0x168] 	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d27	          0x8d5001	                      lea edx, [rax + 1]	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d2e	    0x899068010000	            mov dword [rax + 0x168], edx	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d38	        0x488b5008	                mov rdx, qword [rax + 8]	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d3c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d40	        0x48895008	                mov qword [rax + 8], rdx	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4531	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d48	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4531	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d4c	          0x488910	                    mov qword [rax], rdx	      4531	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4532	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d53	        0x488945e8	             mov qword [rbp - 0x18], rax	      4532	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d5b	          0x488b00	                    mov rax, qword [rax]	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d5e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d62	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d67	     0xf8568ffffff	                           jne 0x4005cd5	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4005d6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4535	cp-demangle.c	FUNCTION_83
0x4005d71	    0x48c700000000	                      mov qword [rax], 0	      4535	cp-demangle.c	FUNCTION_83
0x4005d78	              0xc9	                                   leave	      4536	cp-demangle.c	FUNCTION_83
0x4005d79	              0xc3	                                     ret	      4536	cp-demangle.c	FUNCTION_83
d_index_template_argument	IF,4:DO,0:functions,0:ELSE,0:FOR,1:CALL,0:SWITCH,0:WHILE,0	37
0x40058ef	              0x55	                                push rbp	      4348	cp-demangle.c	FUNCTION_77
0x40058f0	          0x4889e5	                            mov rbp, rsp	      4348	cp-demangle.c	FUNCTION_77
0x40058f3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4348	cp-demangle.c	FUNCTION_77
0x40058f7	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4348	cp-demangle.c	FUNCTION_77
0x40058fa	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x40058fe	            0x7906	                           jns 0x4005906	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4005900	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4353	cp-demangle.c	FUNCTION_77	IF_1
0x4005904	            0xeb58	                           jmp 0x400595e	      4353	cp-demangle.c	FUNCTION_77	IF_1
0x4005906	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x400590a	        0x488945f8	                mov qword [rbp - 8], rax	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x400590e	            0xeb28	                           jmp 0x4005938	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4005910	        0x488b45f8	                mov rax, qword [rbp - 8]	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4005914	            0x8b00	                    mov eax, dword [rax]	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4005916	          0x83f82f	                           cmp eax, 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4005919	            0x7407	                            je 0x4005922	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x400591b	      0xb800000000	                              mov eax, 0	      4360	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4005920	            0xeb3c	                           jmp 0x400595e	      4360	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4005922	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4005926	            0x7e19	                           jle 0x4005941	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4005928	        0x836de401	               sub dword [rbp - 0x1c], 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x400592c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4005930	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4005934	        0x488945f8	                mov qword [rbp - 8], rax	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4005938	      0x48837df800	                  cmp qword [rbp - 8], 0	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x400593d	            0x75d1	                           jne 0x4005910	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x400593f	            0xeb01	                           jmp 0x4005942	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4005941	              0x90	                                     nop	      4362	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4005942	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x4005946	            0x7507	                           jne 0x400594f	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x4005948	      0x48837df800	                  cmp qword [rbp - 8], 0	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x400594d	            0x7507	                           jne 0x4005956	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x400594f	      0xb800000000	                              mov eax, 0	      4366	cp-demangle.c	FUNCTION_77	IF_4
0x4005954	            0xeb08	                           jmp 0x400595e	      4366	cp-demangle.c	FUNCTION_77	IF_4
0x4005956	        0x488b45f8	                mov rax, qword [rbp - 8]	      4368	cp-demangle.c	FUNCTION_77
0x400595a	        0x488b4008	                mov rax, qword [rax + 8]	      4368	cp-demangle.c	FUNCTION_77
0x400595e	              0x5d	                                 pop rbp	      4369	cp-demangle.c	FUNCTION_77
0x400595f	              0xc3	                                     ret	      4369	cp-demangle.c	FUNCTION_77
d_make_operator	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	19
0x4000421	              0x55	                                push rbp	      1095	cp-demangle.c	FUNCTION_8
0x4000422	          0x4889e5	                            mov rbp, rsp	      1095	cp-demangle.c	FUNCTION_8
0x4000425	        0x4883ec20	                           sub rsp, 0x20	      1095	cp-demangle.c	FUNCTION_8
0x4000429	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1095	cp-demangle.c	FUNCTION_8
0x400042d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1095	cp-demangle.c	FUNCTION_8
0x4000431	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1098	cp-demangle.c	FUNCTION_8	CALL_1
0x4000435	          0x4889c7	                            mov rdi, rax	      1098	cp-demangle.c	FUNCTION_8	CALL_1
0x4000438	      0xe8bafdffff	                   call sym.d_make_empty	      1098	cp-demangle.c	FUNCTION_8	CALL_1
0x400043d	        0x488945f8	                mov qword [rbp - 8], rax	      1098	cp-demangle.c	FUNCTION_8	CALL_1
0x4000441	      0x48837df800	                  cmp qword [rbp - 8], 0	      1099	cp-demangle.c	FUNCTION_8	IF_1
0x4000446	            0x7416	                            je 0x400045e	      1099	cp-demangle.c	FUNCTION_8	IF_1
0x4000448	        0x488b45f8	                mov rax, qword [rbp - 8]	      1101	cp-demangle.c	FUNCTION_8	IF_1
0x400044c	    0xc70031000000	                   mov dword [rax], 0x31	      1101	cp-demangle.c	FUNCTION_8	IF_1
0x4000452	        0x488b45f8	                mov rax, qword [rbp - 8]	      1102	cp-demangle.c	FUNCTION_8	IF_1
0x4000456	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1102	cp-demangle.c	FUNCTION_8	IF_1
0x400045a	        0x48895008	                mov qword [rax + 8], rdx	      1102	cp-demangle.c	FUNCTION_8	IF_1
0x400045e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1104	cp-demangle.c	FUNCTION_8
0x4000462	              0xc9	                                   leave	      1105	cp-demangle.c	FUNCTION_8
0x4000463	              0xc3	                                     ret	      1105	cp-demangle.c	FUNCTION_8
d_lambda	IF,7:DO,0:functions,0:ELSE,0:FOR,0:CALL,7:SWITCH,0:WHILE,0	97
0x4004808	              0x55	                                push rbp	      3685	cp-demangle.c	ELSE_1	FUNCTION_56
0x4004809	          0x4889e5	                            mov rbp, rsp	      3685	cp-demangle.c	ELSE_1	FUNCTION_56
0x400480c	        0x4883ec30	                           sub rsp, 0x30	      3685	cp-demangle.c	ELSE_1	FUNCTION_56
0x4004810	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3685	cp-demangle.c	ELSE_1	FUNCTION_56
0x4004814	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004818	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400481c	           0xfb600	                   movzx eax, byte [rax]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400481f	            0x3c55	                            cmp al, 0x55	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004821	            0x751b	                           jne 0x400483e	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004823	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004827	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400482b	        0x488d5001	                      lea rdx, [rax + 1]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400482f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004833	        0x48895018	             mov qword [rax + 0x18], rdx	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004837	      0xb800000000	                              mov eax, 0	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400483c	            0xeb05	                           jmp 0x4004843	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400483e	      0xb801000000	                              mov eax, 1	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004843	            0x84c0	                             test al, al	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004845	            0x740a	                            je 0x4004851	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4004847	      0xb800000000	                              mov eax, 0	      3691	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1
0x400484c	      0xe90d010000	                           jmp 0x400495e	      3691	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1
0x4004851	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004855	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004859	           0xfb600	                   movzx eax, byte [rax]	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400485c	            0x3c6c	                            cmp al, 0x6c	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400485e	            0x751b	                           jne 0x400487b	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004864	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004868	        0x488d5001	                      lea rdx, [rax + 1]	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400486c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004870	        0x48895018	             mov qword [rax + 0x18], rdx	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004874	      0xb800000000	                              mov eax, 0	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004879	            0xeb05	                           jmp 0x4004880	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400487b	      0xb801000000	                              mov eax, 1	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004880	            0x84c0	                             test al, al	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004882	            0x740a	                            je 0x400488e	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4004884	      0xb800000000	                              mov eax, 0	      3693	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2
0x4004889	      0xe9d0000000	                           jmp 0x400495e	      3693	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2
0x400488e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x4004892	          0x4889c7	                            mov rdi, rax	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x4004895	      0xe8dbe7ffff	                     call sym.d_parmlist	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x400489a	        0x488945f0	             mov qword [rbp - 0x10], rax	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x400489e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x40048a3	            0x750a	                           jne 0x40048af	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x40048a5	      0xb800000000	                              mov eax, 0	      3697	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x40048aa	      0xe9af000000	                           jmp 0x400495e	      3697	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x40048af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048b3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048b7	           0xfb600	                   movzx eax, byte [rax]	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048ba	            0x3c45	                            cmp al, 0x45	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048bc	            0x751b	                           jne 0x40048d9	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048c2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048c6	        0x488d5001	                      lea rdx, [rax + 1]	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048ce	        0x48895018	             mov qword [rax + 0x18], rdx	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048d2	      0xb800000000	                              mov eax, 0	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048d7	            0xeb05	                           jmp 0x40048de	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048d9	      0xb801000000	                              mov eax, 1	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048de	            0x84c0	                             test al, al	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048e0	            0x7407	                            je 0x40048e9	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40048e2	      0xb800000000	                              mov eax, 0	      3700	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4
0x40048e7	            0xeb75	                           jmp 0x400495e	      3700	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4
0x40048e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x40048ed	          0x4889c7	                            mov rdi, rax	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x40048f0	      0xe874ecffff	               call sym.d_compact_number	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x40048f5	          0x8945ec	             mov dword [rbp - 0x14], eax	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x40048f8	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3703	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x40048fc	            0x7907	                           jns 0x4004905	      3703	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x40048fe	      0xb800000000	                              mov eax, 0	      3704	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x4004903	            0xeb59	                           jmp 0x400495e	      3704	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x4004905	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3706	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_6
0x4004909	          0x4889c7	                            mov rdi, rax	      3706	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_6
0x400490c	      0xe8e6b8ffff	                   call sym.d_make_empty	      3706	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_6
0x4004911	        0x488945f8	                mov qword [rbp - 8], rax	      3706	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_6
0x4004915	      0x48837df800	                  cmp qword [rbp - 8], 0	      3707	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400491a	            0x7420	                            je 0x400493c	      3707	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400491c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3709	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4004920	    0xc70045000000	                   mov dword [rax], 0x45	      3709	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4004926	        0x488b45f8	                mov rax, qword [rbp - 8]	      3710	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400492a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3710	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400492e	        0x48895008	                mov qword [rax + 8], rdx	      3710	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4004932	        0x488b45f8	                mov rax, qword [rbp - 8]	      3711	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4004936	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3711	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4004939	          0x895010	             mov dword [rax + 0x10], edx	      3711	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400493c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x4004940	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x4004944	          0x4889d6	                            mov rsi, rdx	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x4004947	          0x4889c7	                            mov rdi, rax	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x400494a	      0xe83c020000	             call sym.d_add_substitution	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x400494f	            0x85c0	                           test eax, eax	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x4004951	            0x7507	                           jne 0x400495a	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x4004953	      0xb800000000	                              mov eax, 0	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x4004958	            0xeb04	                           jmp 0x400495e	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x400495a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3717	cp-demangle.c	ELSE_1	FUNCTION_56
0x400495e	              0xc9	                                   leave	      3718	cp-demangle.c	ELSE_1	FUNCTION_56
0x400495f	              0xc3	                                     ret	      3718	cp-demangle.c	ELSE_1	FUNCTION_56
d_args_length	IF,2:DO,0:functions,0:ELSE,1:FOR,1:CALL,2:SWITCH,0:WHILE,0	43
0x4005b19	              0x55	                                push rbp	      4459	cp-demangle.c	FUNCTION_81
0x4005b1a	          0x4889e5	                            mov rbp, rsp	      4459	cp-demangle.c	FUNCTION_81
0x4005b1d	        0x4883ec30	                           sub rsp, 0x30	      4459	cp-demangle.c	FUNCTION_81
0x4005b21	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4459	cp-demangle.c	FUNCTION_81
0x4005b25	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4459	cp-demangle.c	FUNCTION_81
0x4005b29	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      4460	cp-demangle.c	FUNCTION_81
0x4005b30	            0xeb5a	                           jmp 0x4005b8c	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b32	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b36	        0x488b4008	                mov rax, qword [rax + 8]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b3a	        0x488945f0	             mov qword [rbp - 0x10], rax	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b3e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005b43	            0x745b	                            je 0x4005ba0	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005b45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4005b49	            0x8b00	                    mov eax, dword [rax]	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4005b4b	          0x83f84a	                           cmp eax, 0x4a	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4005b4e	            0x752c	                           jne 0x4005b7c	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4005b50	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4005b54	        0x488b5008	                mov rdx, qword [rax + 8]	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4005b58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4005b5c	          0x4889d6	                            mov rsi, rdx	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4005b5f	          0x4889c7	                            mov rdi, rax	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4005b62	      0xe855feffff	                    call sym.d_find_pack	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4005b67	        0x488945f8	                mov qword [rbp - 8], rax	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4005b6b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4005b6f	          0x4889c7	                            mov rdi, rax	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4005b72	      0xe85dffffff	                  call sym.d_pack_length	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4005b77	           0x145ec	             add dword [rbp - 0x14], eax	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4005b7a	            0xeb04	                           jmp 0x4005b80	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4005b7c	        0x8345ec01	               add dword [rbp - 0x14], 1	      4473	cp-demangle.c	FUNCTION_81	FOR_1	ELSE_1
0x4005b80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4462	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b84	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4462	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b88	        0x488945d0	             mov qword [rbp - 0x30], rax	      4462	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b8c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b91	            0x740e	                            je 0x4005ba1	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b93	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b97	            0x8b00	                    mov eax, dword [rax]	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b99	          0x83f82f	                           cmp eax, 0x2f	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b9c	            0x7494	                            je 0x4005b32	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005b9e	            0xeb01	                           jmp 0x4005ba1	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005ba0	              0x90	                                     nop	      4466	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005ba1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4475	cp-demangle.c	FUNCTION_81	ELSE_1
0x4005ba4	              0xc9	                                   leave	      4476	cp-demangle.c	FUNCTION_81	ELSE_1
0x4005ba5	              0xc3	                                     ret	      4476	cp-demangle.c	FUNCTION_81	ELSE_1
d_lookup_template_argument	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	26
0x4005960	              0x55	                                push rbp	      4377	cp-demangle.c	FUNCTION_78
0x4005961	          0x4889e5	                            mov rbp, rsp	      4377	cp-demangle.c	FUNCTION_78
0x4005964	        0x4883ec10	                           sub rsp, 0x10	      4377	cp-demangle.c	FUNCTION_78
0x4005968	        0x48897df8	                mov qword [rbp - 8], rdi	      4377	cp-demangle.c	FUNCTION_78
0x400596c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4377	cp-demangle.c	FUNCTION_78
0x4005970	        0x488b45f8	                mov rax, qword [rbp - 8]	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x4005974	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x400597b	          0x4885c0	                           test rax, rax	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x400597e	            0x7513	                           jne 0x4005993	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x4005980	        0x488b45f8	                mov rax, qword [rbp - 8]	      4380	cp-demangle.c	FUNCTION_78	IF_1	CALL_1
0x4005984	          0x4889c7	                            mov rdi, rax	      4380	cp-demangle.c	FUNCTION_78	IF_1	CALL_1
0x4005987	      0xe8d0faffff	                  call sym.d_print_error	      4380	cp-demangle.c	FUNCTION_78	IF_1	CALL_1
0x400598c	      0xb800000000	                              mov eax, 0	      4381	cp-demangle.c	FUNCTION_78	IF_1
0x4005991	            0xeb27	                           jmp 0x40059ba	      4381	cp-demangle.c	FUNCTION_78	IF_1
0x4005993	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4386	cp-demangle.c	FUNCTION_78
0x4005997	        0x488b4008	                mov rax, qword [rax + 8]	      4386	cp-demangle.c	FUNCTION_78
0x400599b	            0x89c2	                            mov edx, eax	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x400599d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4385	cp-demangle.c	FUNCTION_78
0x40059a1	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      4385	cp-demangle.c	FUNCTION_78
0x40059a8	        0x488b4008	                mov rax, qword [rax + 8]	      4385	cp-demangle.c	FUNCTION_78
0x40059ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40059b0	            0x89d6	                            mov esi, edx	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40059b2	          0x4889c7	                            mov rdi, rax	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40059b5	      0xe835ffffff	      call sym.d_index_template_argument	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40059ba	              0xc9	                                   leave	      4387	cp-demangle.c	FUNCTION_78
0x40059bb	              0xc3	                                     ret	      4387	cp-demangle.c	FUNCTION_78
d_expression	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	19
0x4004336	              0x55	                                push rbp	      3503	cp-demangle.c	FUNCTION_52
0x4004337	          0x4889e5	                            mov rbp, rsp	      3503	cp-demangle.c	FUNCTION_52
0x400433a	        0x4883ec20	                           sub rsp, 0x20	      3503	cp-demangle.c	FUNCTION_52
0x400433e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3503	cp-demangle.c	FUNCTION_52
0x4004342	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3505	cp-demangle.c	FUNCTION_52
0x4004346	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x4004349	          0x8945f4	              mov dword [rbp - 0xc], eax	      3505	cp-demangle.c	FUNCTION_52
0x400434c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3507	cp-demangle.c	FUNCTION_52
0x4004350	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x4004357	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x400435b	          0x4889c7	                            mov rdi, rax	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x400435e	      0xe8bbf6ffff	                 call sym.d_expression_1	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x4004363	        0x488945f8	                mov qword [rbp - 8], rax	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x4004367	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3509	cp-demangle.c	FUNCTION_52
0x400436b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3509	cp-demangle.c	FUNCTION_52
0x400436e	          0x89504c	             mov dword [rax + 0x4c], edx	      3509	cp-demangle.c	FUNCTION_52
0x4004371	        0x488b45f8	                mov rax, qword [rbp - 8]	      3510	cp-demangle.c	FUNCTION_52
0x4004375	              0xc9	                                   leave	      3511	cp-demangle.c	FUNCTION_52
0x4004376	              0xc3	                                     ret	      3511	cp-demangle.c	FUNCTION_52
d_make_template_param	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	20
0x400058f	              0x55	                                push rbp	      1167	cp-demangle.c	FUNCTION_13
0x4000590	          0x4889e5	                            mov rbp, rsp	      1167	cp-demangle.c	FUNCTION_13
0x4000593	        0x4883ec20	                           sub rsp, 0x20	      1167	cp-demangle.c	FUNCTION_13
0x4000597	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1167	cp-demangle.c	FUNCTION_13
0x400059b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1167	cp-demangle.c	FUNCTION_13
0x400059e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1170	cp-demangle.c	FUNCTION_13	CALL_1
0x40005a2	          0x4889c7	                            mov rdi, rax	      1170	cp-demangle.c	FUNCTION_13	CALL_1
0x40005a5	      0xe84dfcffff	                   call sym.d_make_empty	      1170	cp-demangle.c	FUNCTION_13	CALL_1
0x40005aa	        0x488945f8	                mov qword [rbp - 8], rax	      1170	cp-demangle.c	FUNCTION_13	CALL_1
0x40005ae	      0x48837df800	                  cmp qword [rbp - 8], 0	      1171	cp-demangle.c	FUNCTION_13	IF_1
0x40005b3	            0x7418	                            je 0x40005cd	      1171	cp-demangle.c	FUNCTION_13	IF_1
0x40005b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1173	cp-demangle.c	FUNCTION_13	IF_1
0x40005b9	    0xc70005000000	                      mov dword [rax], 5	      1173	cp-demangle.c	FUNCTION_13	IF_1
0x40005bf	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x40005c2	          0x4863d0	                         movsxd rdx, eax	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x40005c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x40005c9	        0x48895008	                mov qword [rax + 8], rdx	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x40005cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1176	cp-demangle.c	FUNCTION_13
0x40005d1	              0xc9	                                   leave	      1177	cp-demangle.c	FUNCTION_13
0x40005d2	              0xc3	                                     ret	      1177	cp-demangle.c	FUNCTION_13
d_backtrack	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	23
0x4004f34	              0x55	                                push rbp	      3944	cp-demangle.c	FUNCTION_62
0x4004f35	          0x4889e5	                            mov rbp, rsp	      3944	cp-demangle.c	FUNCTION_62
0x4004f38	        0x48897df8	                mov qword [rbp - 8], rdi	      3944	cp-demangle.c	FUNCTION_62
0x4004f3c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3944	cp-demangle.c	FUNCTION_62
0x4004f40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3945	cp-demangle.c	FUNCTION_62
0x4004f44	          0x488b10	                    mov rdx, qword [rax]	      3945	cp-demangle.c	FUNCTION_62
0x4004f47	        0x488b45f8	                mov rax, qword [rbp - 8]	      3945	cp-demangle.c	FUNCTION_62
0x4004f4b	        0x48895018	             mov qword [rax + 0x18], rdx	      3945	cp-demangle.c	FUNCTION_62
0x4004f4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3946	cp-demangle.c	FUNCTION_62
0x4004f53	          0x8b5008	                mov edx, dword [rax + 8]	      3946	cp-demangle.c	FUNCTION_62
0x4004f56	        0x488b45f8	                mov rax, qword [rbp - 8]	      3946	cp-demangle.c	FUNCTION_62
0x4004f5a	          0x895028	             mov dword [rax + 0x28], edx	      3946	cp-demangle.c	FUNCTION_62
0x4004f5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3947	cp-demangle.c	FUNCTION_62
0x4004f61	          0x8b500c	              mov edx, dword [rax + 0xc]	      3947	cp-demangle.c	FUNCTION_62
0x4004f64	        0x488b45f8	                mov rax, qword [rbp - 8]	      3947	cp-demangle.c	FUNCTION_62
0x4004f68	          0x895038	             mov dword [rax + 0x38], edx	      3947	cp-demangle.c	FUNCTION_62
0x4004f6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3948	cp-demangle.c	FUNCTION_62
0x4004f6f	          0x8b5010	            mov edx, dword [rax + 0x10] 	      3948	cp-demangle.c	FUNCTION_62
0x4004f72	        0x488b45f8	                mov rax, qword [rbp - 8]	      3948	cp-demangle.c	FUNCTION_62
0x4004f76	          0x895048	             mov dword [rax + 0x48], edx	      3948	cp-demangle.c	FUNCTION_62
0x4004f79	              0x90	                                     nop	      3949	cp-demangle.c	FUNCTION_62
0x4004f7a	              0x5d	                                 pop rbp	      3949	cp-demangle.c	FUNCTION_62
0x4004f7b	              0xc3	                                     ret	      3949	cp-demangle.c	FUNCTION_62
is_ctor_dtor_or_conversion	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,1:WHILE,0	30
0x4000845	              0x55	                                push rbp	      1276	cp-demangle.c	FUNCTION_17
0x4000846	          0x4889e5	                            mov rbp, rsp	      1276	cp-demangle.c	FUNCTION_17
0x4000849	        0x4883ec10	                           sub rsp, 0x10	      1276	cp-demangle.c	FUNCTION_17
0x400084d	        0x48897df8	                mov qword [rbp - 8], rdi	      1276	cp-demangle.c	FUNCTION_17
0x4000851	      0x48837df800	                  cmp qword [rbp - 8], 0	      1277	cp-demangle.c	FUNCTION_17	IF_1
0x4000856	            0x7507	                           jne 0x400085f	      1277	cp-demangle.c	FUNCTION_17	IF_1
0x4000858	      0xb800000000	                              mov eax, 0	      1278	cp-demangle.c	FUNCTION_17	IF_1
0x400085d	            0xeb3d	                           jmp 0x400089c	      1278	cp-demangle.c	FUNCTION_17	IF_1
0x400085f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000863	            0x8b00	                    mov eax, dword [rax]	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000865	          0x83f808	                              cmp eax, 8	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000868	            0x770f	                            ja 0x4000879	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400086a	          0x83f807	                              cmp eax, 7	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400086d	            0x7328	                           jae 0x4000897	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400086f	          0x83e801	                              sub eax, 1	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000872	          0x83f801	                              cmp eax, 1	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000875	            0x7707	                            ja 0x400087e	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000877	            0xeb0c	                           jmp 0x4000885	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000879	          0x83f834	                           cmp eax, 0x34	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400087c	            0x7419	                            je 0x4000897	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400087e	      0xb800000000	                              mov eax, 0	      1282	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000883	            0xeb17	                           jmp 0x400089c	      1282	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000885	        0x488b45f8	                mov rax, qword [rbp - 8]	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x4000889	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x400088d	          0x4889c7	                            mov rdi, rax	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x4000890	      0xe8b0ffffff	     call sym.is_ctor_dtor_or_conversion	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x4000895	            0xeb05	                           jmp 0x400089c	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x4000897	      0xb801000000	                              mov eax, 1	      1289	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400089c	              0xc9	                                   leave	      1291	cp-demangle.c	FUNCTION_17
0x400089d	              0xc3	                                     ret	      1291	cp-demangle.c	FUNCTION_17
d_nested_name	IF,5:DO,0:functions,0:ELSE,0:FOR,0:CALL,5:SWITCH,0:WHILE,0	83
0x4000c6a	              0x55	                                push rbp	      1482	cp-demangle.c	FUNCTION_21
0x4000c6b	          0x4889e5	                            mov rbp, rsp	      1482	cp-demangle.c	FUNCTION_21
0x4000c6e	        0x4883ec30	                           sub rsp, 0x30	      1482	cp-demangle.c	FUNCTION_21
0x4000c72	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1482	cp-demangle.c	FUNCTION_21
0x4000c76	    0x64488b042528	                mov rax, qword fs:[0x28]	      1482	cp-demangle.c	FUNCTION_21
0x4000c7f	        0x488945f8	                mov qword [rbp - 8], rax	      1482	cp-demangle.c	FUNCTION_21
0x4000c83	            0x31c0	                            xor eax, eax	      1482	cp-demangle.c	FUNCTION_21
0x4000c85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000c89	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000c8d	           0xfb600	                   movzx eax, byte [rax]	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000c90	            0x3c4e	                            cmp al, 0x4e	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000c92	            0x751b	                           jne 0x4000caf	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000c94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000c98	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000c9c	        0x488d5001	                      lea rdx, [rax + 1]	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000ca0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000ca4	        0x48895018	             mov qword [rax + 0x18], rdx	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000ca8	      0xb800000000	                              mov eax, 0	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000cad	            0xeb05	                           jmp 0x4000cb4	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000caf	      0xb801000000	                              mov eax, 1	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000cb4	            0x84c0	                             test al, al	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000cb6	            0x740a	                            je 0x4000cc2	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000cb8	      0xb800000000	                              mov eax, 0	      1488	cp-demangle.c	FUNCTION_21	IF_1
0x4000cbd	      0xe9c4000000	                           jmp 0x4000d86	      1488	cp-demangle.c	FUNCTION_21	IF_1
0x4000cc2	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4000cc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4000cca	      0xba01000000	                              mov edx, 1	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4000ccf	          0x4889ce	                            mov rsi, rcx	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4000cd2	          0x4889c7	                            mov rdi, rax	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4000cd5	      0xe8e91e0000	                call sym.d_cv_qualifiers	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4000cda	        0x488945e8	             mov qword [rbp - 0x18], rax	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4000cde	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x4000ce3	            0x750a	                           jne 0x4000cef	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x4000ce5	      0xb800000000	                              mov eax, 0	      1492	cp-demangle.c	FUNCTION_21	IF_2
0x4000cea	      0xe997000000	                           jmp 0x4000d86	      1492	cp-demangle.c	FUNCTION_21	IF_2
0x4000cef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4000cf3	      0xbe00000000	                              mov esi, 0	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4000cf8	          0x4889c7	                            mov rdi, rax	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4000cfb	      0xe8f9210000	                call sym.d_ref_qualifier	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4000d00	        0x488945f0	             mov qword [rbp - 0x10], rax	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4000d04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4000d08	          0x4889c7	                            mov rdi, rax	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4000d0b	      0xe88c000000	                       call sym.d_prefix	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4000d10	          0x4889c2	                            mov rdx, rax	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4000d13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4000d17	          0x488910	                    mov qword [rax], rdx	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4000d1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x4000d1e	          0x488b00	                    mov rax, qword [rax]	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x4000d21	          0x4885c0	                           test rax, rax	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x4000d24	            0x7507	                           jne 0x4000d2d	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x4000d26	      0xb800000000	                              mov eax, 0	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4000d2b	            0xeb59	                           jmp 0x4000d86	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4000d2d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x4000d32	            0x7414	                            je 0x4000d48	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x4000d34	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x4000d38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x4000d3c	        0x48895008	                mov qword [rax + 8], rdx	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x4000d40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1505	cp-demangle.c	FUNCTION_21	IF_4
0x4000d44	        0x488945e0	             mov qword [rbp - 0x20], rax	      1505	cp-demangle.c	FUNCTION_21	IF_4
0x4000d48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d4c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d50	           0xfb600	                   movzx eax, byte [rax]	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d53	            0x3c45	                            cmp al, 0x45	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d55	            0x751b	                           jne 0x4000d72	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d57	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d5b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d5f	        0x488d5001	                      lea rdx, [rax + 1]	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d67	        0x48895018	             mov qword [rax + 0x18], rdx	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d6b	      0xb800000000	                              mov eax, 0	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d70	            0xeb05	                           jmp 0x4000d77	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d72	      0xb801000000	                              mov eax, 1	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d77	            0x84c0	                             test al, al	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d79	            0x7407	                            je 0x4000d82	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4000d7b	      0xb800000000	                              mov eax, 0	      1509	cp-demangle.c	FUNCTION_21	IF_5
0x4000d80	            0xeb04	                           jmp 0x4000d86	      1509	cp-demangle.c	FUNCTION_21	IF_5
0x4000d82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1511	cp-demangle.c	FUNCTION_21
0x4000d86	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1512	cp-demangle.c	FUNCTION_21
0x4000d8a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1512	cp-demangle.c	FUNCTION_21
0x4000d93	            0x7405	                            je 0x4000d9a	      1512	cp-demangle.c	FUNCTION_21
0x4000d95	      0xe800000000	                          call 0x4000d9a	      1512	cp-demangle.c	FUNCTION_21
0x4000d9a	              0xc9	                                   leave	      1512	cp-demangle.c	FUNCTION_21
0x4000d9b	              0xc3	                                     ret	      1512	cp-demangle.c	FUNCTION_21
d_append_num	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	26
0x40055f0	              0x55	                                push rbp	      4256	cp-demangle.c	FUNCTION_75
0x40055f1	          0x4889e5	                            mov rbp, rsp	      4256	cp-demangle.c	FUNCTION_75
0x40055f4	        0x4883ec40	                           sub rsp, 0x40	      4256	cp-demangle.c	FUNCTION_75
0x40055f8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4256	cp-demangle.c	FUNCTION_75
0x40055fc	          0x8975c4	             mov dword [rbp - 0x3c], esi	      4256	cp-demangle.c	FUNCTION_75
0x40055ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      4256	cp-demangle.c	FUNCTION_75
0x4005608	        0x488945f8	                mov qword [rbp - 8], rax	      4256	cp-demangle.c	FUNCTION_75
0x400560c	            0x31c0	                            xor eax, eax	      4256	cp-demangle.c	FUNCTION_75
0x400560e	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4258	cp-demangle.c	FUNCTION_75	CALL_1
0x4005611	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4258	cp-demangle.c	FUNCTION_75	CALL_1
0x4005615	      0xbe00000000	                              mov esi, 0	      4258	cp-demangle.c	FUNCTION_75	CALL_1
0x400561a	          0x4889c7	                            mov rdi, rax	      4258	cp-demangle.c	FUNCTION_75	CALL_1
0x400561d	      0xb800000000	                              mov eax, 0	      4258	cp-demangle.c	FUNCTION_75	CALL_1
0x4005622	      0xe800000000	                          call 0x4005627	      4258	cp-demangle.c	FUNCTION_75	CALL_1
0x4005627	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4259	cp-demangle.c	FUNCTION_75	CALL_2
0x400562b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4259	cp-demangle.c	FUNCTION_75	CALL_2
0x400562f	          0x4889d6	                            mov rsi, rdx	      4259	cp-demangle.c	FUNCTION_75	CALL_2
0x4005632	          0x4889c7	                            mov rdi, rax	      4259	cp-demangle.c	FUNCTION_75	CALL_2
0x4005635	      0xe881ffffff	                call sym.d_append_string	      4259	cp-demangle.c	FUNCTION_75	CALL_2
0x400563a	              0x90	                                     nop	      4260	cp-demangle.c	FUNCTION_75
0x400563b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4260	cp-demangle.c	FUNCTION_75
0x400563f	    0x644833042528	                xor rax, qword fs:[0x28]	      4260	cp-demangle.c	FUNCTION_75
0x4005648	            0x7405	                            je 0x400564f	      4260	cp-demangle.c	FUNCTION_75
0x400564a	      0xe800000000	                          call 0x400564f	      4260	cp-demangle.c	FUNCTION_75
0x400564f	              0xc9	                                   leave	      4260	cp-demangle.c	FUNCTION_75
0x4005650	              0xc3	                                     ret	      4260	cp-demangle.c	FUNCTION_75
d_ctor_dtor_name	IF,5:DO,0:functions,0:ELSE,1:FOR,0:CALL,9:SWITCH,3:WHILE,0	137
0x4001f6a	              0x55	                                push rbp	      2200	cp-demangle.c	FUNCTION_33
0x4001f6b	          0x4889e5	                            mov rbp, rsp	      2200	cp-demangle.c	FUNCTION_33
0x4001f6e	        0x4883ec20	                           sub rsp, 0x20	      2200	cp-demangle.c	FUNCTION_33
0x4001f72	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2200	cp-demangle.c	FUNCTION_33
0x4001f76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x4001f7a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x4001f7e	          0x4885c0	                           test rax, rax	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x4001f81	            0x7455	                            je 0x4001fd8	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x4001f83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f87	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f8b	            0x8b00	                    mov eax, dword [rax]	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f8d	            0x85c0	                           test eax, eax	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f8f	            0x751d	                           jne 0x4001fae	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f95	          0x8b5048	            mov edx, dword [rax + 0x48] 	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001f9c	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001fa0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001fa3	             0x1c2	                            add edx, eax	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001fa5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001fa9	          0x895048	             mov dword [rax + 0x48], edx	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001fac	            0xeb2a	                           jmp 0x4001fd8	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4001fae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fb2	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fb6	            0x8b00	                    mov eax, dword [rax]	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fb8	          0x83f818	                           cmp eax, 0x18	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fbb	            0x751b	                           jne 0x4001fd8	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fbd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fc1	          0x8b5048	            mov edx, dword [rax + 0x48] 	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fc8	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fcc	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fcf	             0x1c2	                            add edx, eax	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fd5	          0x895048	             mov dword [rax + 0x48], edx	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4001fd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001fdc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001fe0	           0xfb600	                   movzx eax, byte [rax]	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001fe3	           0xfbec0	                           movsx eax, al	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001fe6	          0x83f843	                           cmp eax, 0x43	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001fe9	            0x740e	                            je 0x4001ff9	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001feb	          0x83f844	                           cmp eax, 0x44	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001fee	     0xf84db000000	                            je 0x40020cf	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001ff4	      0xe95f010000	                           jmp 0x4002158	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4001ff9	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4002000	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x4002004	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x4002008	        0x4883c001	                              add rax, 1	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x400200c	           0xfb600	                   movzx eax, byte [rax]	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x400200f	            0x3c49	                            cmp al, 0x49	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x4002011	            0x751b	                           jne 0x400202e	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x4002013	    0xc745f8010000	                  mov dword [rbp - 8], 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400201a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x400201e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x4002022	        0x488d5001	                      lea rdx, [rax + 1]	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x4002026	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x400202a	        0x48895018	             mov qword [rax + 0x18], rdx	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x400202e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002032	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002036	        0x4883c001	                              add rax, 1	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400203a	           0xfb600	                   movzx eax, byte [rax]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400203d	           0xfbec0	                           movsx eax, al	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002040	          0x83e831	                           sub eax, 0x31	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002043	          0x83f804	                              cmp eax, 4	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002046	            0x7739	                            ja 0x4002081	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002048	            0x89c0	                            mov eax, eax	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400204a	    0x488b04c50000	                  mov rax, qword [rax*8]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002052	            0xffe0	                                 jmp rax	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4002054	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400205b	            0xeb2e	                           jmp 0x400208b	      2225	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400205d	    0xc745f4020000	                mov dword [rbp - 0xc], 2	      2227	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4002064	            0xeb25	                           jmp 0x400208b	      2228	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4002066	    0xc745f4030000	                mov dword [rbp - 0xc], 3	      2230	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400206d	            0xeb1c	                           jmp 0x400208b	      2231	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400206f	    0xc745f4040000	                mov dword [rbp - 0xc], 4	      2233	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4002076	            0xeb13	                           jmp 0x400208b	      2234	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4002078	    0xc745f4050000	                mov dword [rbp - 0xc], 5	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400207f	            0xeb0a	                           jmp 0x400208b	      2237	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4002081	      0xb800000000	                              mov eax, 0	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4002086	      0xe9d2000000	                           jmp 0x400215d	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400208b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400208f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x4002093	        0x488d5002	                      lea rdx, [rax + 2]	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x4002097	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400209b	        0x48895018	             mov qword [rax + 0x18], rdx	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400209f	        0x837df800	                  cmp dword [rbp - 8], 0	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40020a3	            0x740c	                            je 0x40020b1	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40020a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40020a9	          0x4889c7	                            mov rdi, rax	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40020ac	      0xe800000000	                          call 0x40020b1	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40020b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020b5	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020b9	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020c0	            0x89ce	                            mov esi, ecx	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020c2	          0x4889c7	                            mov rdi, rax	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020c5	      0xe833e4ffff	                    call sym.d_make_ctor	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020ca	      0xe98e000000	                           jmp 0x400215d	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x40020cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020d3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020d7	        0x4883c001	                              add rax, 1	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020db	           0xfb600	                   movzx eax, byte [rax]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020de	           0xfbec0	                           movsx eax, al	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020e1	          0x83e830	                           sub eax, 0x30	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020e4	          0x83f805	                              cmp eax, 5	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020e7	            0x7739	                            ja 0x4002122	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020e9	            0x89c0	                            mov eax, eax	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020eb	    0x488b04c50000	                  mov rax, qword [rax*8]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020f3	            0xffe0	                                 jmp rax	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x40020f5	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x40020fc	            0xeb2b	                           jmp 0x4002129	      2258	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x40020fe	    0xc745fc020000	                  mov dword [rbp - 4], 2	      2260	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002105	            0xeb22	                           jmp 0x4002129	      2261	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002107	    0xc745fc030000	                  mov dword [rbp - 4], 3	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400210e	            0xeb19	                           jmp 0x4002129	      2264	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002110	    0xc745fc040000	                  mov dword [rbp - 4], 4	      2267	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002117	            0xeb10	                           jmp 0x4002129	      2268	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002119	    0xc745fc050000	                  mov dword [rbp - 4], 5	      2270	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002120	            0xeb07	                           jmp 0x4002129	      2271	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002122	      0xb800000000	                              mov eax, 0	      2273	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002127	            0xeb34	                           jmp 0x400215d	      2273	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4002129	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x400212d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x4002131	        0x488d5002	                      lea rdx, [rax + 2]	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x4002135	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x4002139	        0x48895018	             mov qword [rax + 0x18], rdx	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x400213d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x4002141	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x4002145	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x4002148	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x400214c	            0x89ce	                            mov esi, ecx	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x400214e	          0x4889c7	                            mov rdi, rax	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x4002151	      0xe8f0e3ffff	                    call sym.d_make_dtor	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x4002156	            0xeb05	                           jmp 0x400215d	      2276	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_9
0x4002158	      0xb800000000	                              mov eax, 0	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400215d	              0xc9	                                   leave	      2282	cp-demangle.c	FUNCTION_33
0x400215e	              0xc3	                                     ret	      2282	cp-demangle.c	FUNCTION_33
is_fnqual_component_type	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,1:WHILE,0	21
0x4000040	              0x55	                                push rbp	       586	cp-demangle.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       586	cp-demangle.c	FUNCTION_1
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       586	cp-demangle.c	FUNCTION_1
0x4000047	          0x8b45fc	                mov eax, dword [rbp - 4]	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400004a	          0x83f84c	                           cmp eax, 0x4c	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400004d	            0x7417	                            je 0x4000066	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400004f	          0x83f84c	                           cmp eax, 0x4c	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000052	            0x770a	                            ja 0x400005e	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000054	          0x83e81c	                           sub eax, 0x1c	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000057	          0x83f804	                              cmp eax, 4	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400005a	            0x7711	                            ja 0x400006d	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400005c	            0xeb08	                           jmp 0x4000066	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400005e	          0x83e84e	                           sub eax, 0x4e	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000061	          0x83f801	                              cmp eax, 1	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000064	            0x7707	                            ja 0x400006d	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000066	      0xb801000000	                              mov eax, 1	       590	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400006b	            0xeb06	                           jmp 0x4000073	       590	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400006d	              0x90	                                     nop	       592	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400006e	      0xb800000000	                              mov eax, 0	       594	cp-demangle.c	FUNCTION_1
0x4000073	              0x5d	                                 pop rbp	       595	cp-demangle.c	FUNCTION_1
0x4000074	              0xc3	                                     ret	       595	cp-demangle.c	FUNCTION_1
d_array_type	IF,6:DO,1:functions,0:ELSE,2:FOR,0:CALL,10:SWITCH,0:WHILE,0	103
0x400329d	              0x55	                                push rbp	      2961	cp-demangle.c	FUNCTION_41
0x400329e	          0x4889e5	                            mov rbp, rsp	      2961	cp-demangle.c	FUNCTION_41
0x40032a1	        0x4883ec30	                           sub rsp, 0x30	      2961	cp-demangle.c	FUNCTION_41
0x40032a5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2961	cp-demangle.c	FUNCTION_41
0x40032a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032ad	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032b1	           0xfb600	                   movzx eax, byte [rax]	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032b4	            0x3c41	                            cmp al, 0x41	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032b6	            0x751b	                           jne 0x40032d3	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032c0	        0x488d5001	                      lea rdx, [rax + 1]	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032c8	        0x48895018	             mov qword [rax + 0x18], rdx	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032cc	      0xb800000000	                              mov eax, 0	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032d1	            0xeb05	                           jmp 0x40032d8	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032d3	      0xb801000000	                              mov eax, 1	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032d8	            0x84c0	                             test al, al	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032da	            0x740a	                            je 0x40032e6	      2965	cp-demangle.c	FUNCTION_41	IF_1	CALL_1
0x40032dc	      0xb800000000	                              mov eax, 0	      2966	cp-demangle.c	FUNCTION_41	IF_1
0x40032e1	      0xe920010000	                           jmp 0x4003406	      2966	cp-demangle.c	FUNCTION_41	IF_1
0x40032e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2968	cp-demangle.c	FUNCTION_41	CALL_2
0x40032ea	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2968	cp-demangle.c	FUNCTION_41	CALL_2
0x40032ee	           0xfb600	                   movzx eax, byte [rax]	      2968	cp-demangle.c	FUNCTION_41	CALL_2
0x40032f1	          0x8845ef	               mov byte [rbp - 0x11], al	      2968	cp-demangle.c	FUNCTION_41	CALL_2
0x40032f4	        0x807def5f	            cmp byte [rbp - 0x11], 0x5f 	      2969	cp-demangle.c	FUNCTION_41	IF_2
0x40032f8	            0x750d	                           jne 0x4003307	      2969	cp-demangle.c	FUNCTION_41	IF_2
0x40032fa	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2970	cp-demangle.c	FUNCTION_41	IF_2
0x4003302	      0xe9a1000000	                           jmp 0x40033a8	      2970	cp-demangle.c	FUNCTION_41	IF_2
0x4003307	        0x807def2f	            cmp byte [rbp - 0x11], 0x2f 	      2971	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x400330b	            0x7e7c	                           jle 0x4003389	      2971	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x400330d	        0x807def39	            cmp byte [rbp - 0x11], 0x39 	      2971	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x4003311	            0x7f76	                            jg 0x4003389	      2971	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x4003313	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2975	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_3
0x4003317	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2975	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_3
0x400331b	        0x488945f8	                mov qword [rbp - 8], rax	      2975	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_3
0x400331f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2978	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_4
0x4003323	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2978	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_4
0x4003327	        0x488d5001	                      lea rdx, [rax + 1]	      2978	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_4
0x400332b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2978	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_4
0x400332f	        0x48895018	             mov qword [rax + 0x18], rdx	      2978	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_4
0x4003333	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2979	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_5
0x4003337	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2979	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_5
0x400333b	           0xfb600	                   movzx eax, byte [rax]	      2979	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_5
0x400333e	          0x8845ef	               mov byte [rbp - 0x11], al	      2979	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	DO_1	CALL_5
0x4003341	        0x807def2f	            cmp byte [rbp - 0x11], 0x2f 	      2981	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x4003345	            0x7e06	                           jle 0x400334d	      2981	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x4003347	        0x807def39	            cmp byte [rbp - 0x11], 0x39 	      2981	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x400334b	            0x7ed2	                           jle 0x400331f	      2981	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x400334d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003351	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003355	          0x4889c2	                            mov rdx, rax	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003358	        0x488b45f8	                mov rax, qword [rbp - 8]	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x400335c	          0x4829c2	                            sub rdx, rax	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x400335f	          0x4889d0	                            mov rax, rdx	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003362	            0x89c2	                            mov edx, eax	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003364	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003368	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x400336c	          0x4889ce	                            mov rsi, rcx	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x400336f	          0x4889c7	                            mov rdi, rax	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003372	      0xe80fd0ffff	                    call sym.d_make_name	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x4003377	        0x488945f0	             mov qword [rbp - 0x10], rax	      2982	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	CALL_7
0x400337b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2983	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	IF_4
0x4003380	            0x7525	                           jne 0x40033a7	      2983	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	IF_4
0x4003382	      0xb800000000	                              mov eax, 0	      2984	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	IF_4
0x4003387	            0xeb7d	                           jmp 0x4003406	      2984	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3	IF_4
0x4003389	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2988	cp-demangle.c	FUNCTION_41	ELSE_2	CALL_8
0x400338d	          0x4889c7	                            mov rdi, rax	      2988	cp-demangle.c	FUNCTION_41	ELSE_2	CALL_8
0x4003390	      0xe8a10f0000	                   call sym.d_expression	      2988	cp-demangle.c	FUNCTION_41	ELSE_2	CALL_8
0x4003395	        0x488945f0	             mov qword [rbp - 0x10], rax	      2988	cp-demangle.c	FUNCTION_41	ELSE_2	CALL_8
0x4003399	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2989	cp-demangle.c	FUNCTION_41	ELSE_2	IF_5
0x400339e	            0x7508	                           jne 0x40033a8	      2989	cp-demangle.c	FUNCTION_41	ELSE_2	IF_5
0x40033a0	      0xb800000000	                              mov eax, 0	      2990	cp-demangle.c	FUNCTION_41	ELSE_2	IF_5
0x40033a5	            0xeb5f	                           jmp 0x4003406	      2990	cp-demangle.c	FUNCTION_41	ELSE_2	IF_5
0x40033a7	              0x90	                                     nop	      2972	cp-demangle.c	FUNCTION_41	ELSE_1	IF_3
0x40033a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033ac	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033b0	           0xfb600	                   movzx eax, byte [rax]	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033b3	            0x3c5f	                            cmp al, 0x5f	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033b5	            0x751b	                           jne 0x40033d2	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033bb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033bf	        0x488d5001	                      lea rdx, [rax + 1]	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033c7	        0x48895018	             mov qword [rax + 0x18], rdx	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033cb	      0xb800000000	                              mov eax, 0	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033d0	            0xeb05	                           jmp 0x40033d7	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033d2	      0xb801000000	                              mov eax, 1	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033d7	            0x84c0	                             test al, al	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033d9	            0x7407	                            je 0x40033e2	      2993	cp-demangle.c	FUNCTION_41	IF_6	CALL_9
0x40033db	      0xb800000000	                              mov eax, 0	      2994	cp-demangle.c	FUNCTION_41	IF_6
0x40033e0	            0xeb24	                           jmp 0x4003406	      2994	cp-demangle.c	FUNCTION_41	IF_6
0x40033e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x40033e6	          0x4889c7	                            mov rdi, rax	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x40033e9	      0xe800000000	                          call 0x40033ee	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x40033ee	          0x4889c1	                            mov rcx, rax	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x40033f1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x40033f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x40033f9	      0xbe2a000000	                           mov esi, 0x2a	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x40033fe	          0x4889c7	                            mov rdi, rax	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x4003401	      0xe85aceffff	                    call sym.d_make_comp	      2996	cp-demangle.c	FUNCTION_41	CALL_10
0x4003406	              0xc9	                                   leave	      2998	cp-demangle.c	FUNCTION_41
0x4003407	              0xc3	                                     ret	      2998	cp-demangle.c	FUNCTION_41
d_make_name	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x4000386	              0x55	                                push rbp	      1063	cp-demangle.c	FUNCTION_6
0x4000387	          0x4889e5	                            mov rbp, rsp	      1063	cp-demangle.c	FUNCTION_6
0x400038a	        0x4883ec28	                           sub rsp, 0x28	      1063	cp-demangle.c	FUNCTION_6
0x400038e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1063	cp-demangle.c	FUNCTION_6
0x4000392	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1063	cp-demangle.c	FUNCTION_6
0x4000396	          0x8955dc	             mov dword [rbp - 0x24], edx	      1063	cp-demangle.c	FUNCTION_6
0x4000399	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1066	cp-demangle.c	FUNCTION_6	CALL_1
0x400039d	          0x4889c7	                            mov rdi, rax	      1066	cp-demangle.c	FUNCTION_6	CALL_1
0x40003a0	      0xe852feffff	                   call sym.d_make_empty	      1066	cp-demangle.c	FUNCTION_6	CALL_1
0x40003a5	        0x488945f8	                mov qword [rbp - 8], rax	      1066	cp-demangle.c	FUNCTION_6	CALL_1
0x40003a9	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003ac	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003b4	          0x4889ce	                            mov rsi, rcx	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003b7	          0x4889c7	                            mov rdi, rax	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003ba	      0xe800000000	                          call 0x40003bf	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003bf	            0x85c0	                           test eax, eax	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003c1	            0x7507	                           jne 0x40003ca	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x40003c3	      0xb800000000	                              mov eax, 0	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x40003c8	            0xeb04	                           jmp 0x40003ce	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x40003ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      1069	cp-demangle.c	FUNCTION_6
0x40003ce	              0xc9	                                   leave	      1070	cp-demangle.c	FUNCTION_6
0x40003cf	              0xc3	                                     ret	      1070	cp-demangle.c	FUNCTION_6
d_print_java_identifier	IF,5:DO,0:functions,0:ELSE,3:FOR,2:CALL,2:SWITCH,0:WHILE,0	123
0x4008d00	              0x55	                                push rbp	      5742	cp-demangle.c	FUNCTION_88
0x4008d01	          0x4889e5	                            mov rbp, rsp	      5742	cp-demangle.c	FUNCTION_88
0x4008d04	        0x4883ec50	                           sub rsp, 0x50	      5742	cp-demangle.c	FUNCTION_88
0x4008d08	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5742	cp-demangle.c	FUNCTION_88
0x4008d0c	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5742	cp-demangle.c	FUNCTION_88
0x4008d10	          0x8955bc	             mov dword [rbp - 0x44], edx	      5742	cp-demangle.c	FUNCTION_88
0x4008d13	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      5746	cp-demangle.c	FUNCTION_88
0x4008d16	          0x4863d0	                         movsxd rdx, eax	      5746	cp-demangle.c	FUNCTION_88
0x4008d19	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5746	cp-demangle.c	FUNCTION_88
0x4008d1d	          0x4801d0	                            add rax, rdx	      5746	cp-demangle.c	FUNCTION_88
0x4008d20	        0x488945f8	                mov qword [rbp - 8], rax	      5746	cp-demangle.c	FUNCTION_88
0x4008d24	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4008d28	        0x488945e0	             mov qword [rbp - 0x20], rax	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4008d2c	      0xe961010000	                           jmp 0x4008e92	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4008d31	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d39	          0x4829c2	                            sub rdx, rax	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d3c	          0x4889d0	                            mov rax, rdx	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d3f	        0x4883f803	                              cmp rax, 3	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d43	     0xf8e2c010000	                           jle 0x4008e75	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d4d	           0xfb600	                   movzx eax, byte [rax]	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d50	            0x3c5f	                            cmp al, 0x5f	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d52	     0xf851d010000	                           jne 0x4008e75	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d5c	        0x4883c001	                              add rax, 1	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d60	           0xfb600	                   movzx eax, byte [rax]	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d63	            0x3c5f	                            cmp al, 0x5f	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d65	     0xf850a010000	                           jne 0x4008e75	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d6f	        0x4883c002	                              add rax, 2	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d73	           0xfb600	                   movzx eax, byte [rax]	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d76	            0x3c55	                            cmp al, 0x55	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d78	     0xf85f7000000	                           jne 0x4008e75	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d7e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5757	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4008d86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008d8a	        0x4883c003	                              add rax, 3	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008d8e	        0x488945f0	             mov qword [rbp - 0x10], rax	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008d92	      0xe992000000	                           jmp 0x4008e29	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008d97	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008d9b	           0xfb600	                   movzx eax, byte [rax]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008d9e	            0x3c2f	                            cmp al, 0x2f	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008da0	            0x7e1d	                           jle 0x4008dbf	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008da2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008da6	           0xfb600	                   movzx eax, byte [rax]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008da9	            0x3c39	                            cmp al, 0x39	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008dab	            0x7f12	                            jg 0x4008dbf	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008dad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008db1	           0xfb600	                   movzx eax, byte [rax]	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008db4	           0xfbec0	                           movsx eax, al	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008db7	          0x83e830	                           sub eax, 0x30	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008dba	          0x8945dc	             mov dword [rbp - 0x24], eax	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008dbd	            0xeb4e	                           jmp 0x4008e0d	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4008dbf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dc3	           0xfb600	                   movzx eax, byte [rax]	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dc6	            0x3c40	                            cmp al, 0x40	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dc8	            0x7e1d	                           jle 0x4008de7	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dce	           0xfb600	                   movzx eax, byte [rax]	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dd1	            0x3c46	                            cmp al, 0x46	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dd3	            0x7f12	                            jg 0x4008de7	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dd5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008dd9	           0xfb600	                   movzx eax, byte [rax]	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008ddc	           0xfbec0	                           movsx eax, al	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008ddf	          0x83e837	                           sub eax, 0x37	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008de2	          0x8945dc	             mov dword [rbp - 0x24], eax	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008de5	            0xeb26	                           jmp 0x4008e0d	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4008de7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008deb	           0xfb600	                   movzx eax, byte [rax]	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008dee	            0x3c60	                            cmp al, 0x60	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008df0	            0x7e45	                           jle 0x4008e37	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008df2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008df6	           0xfb600	                   movzx eax, byte [rax]	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008df9	            0x3c66	                            cmp al, 0x66	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008dfb	            0x7f3a	                            jg 0x4008e37	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008dfd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008e01	           0xfb600	                   movzx eax, byte [rax]	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008e04	           0xfbec0	                           movsx eax, al	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008e07	          0x83e857	                           sub eax, 0x57	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008e0a	          0x8945dc	             mov dword [rbp - 0x24], eax	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4008e0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4008e11	        0x48c1e004	                              shl rax, 4	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4008e15	          0x4889c2	                            mov rdx, rax	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4008e18	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4008e1b	            0x4898	                                    cdqe	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4008e1d	          0x4801d0	                            add rax, rdx	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4008e20	        0x488945e8	             mov qword [rbp - 0x18], rax	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4008e24	      0x488345f001	               add qword [rbp - 0x10], 1	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008e29	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008e2d	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008e31	     0xf8260ffffff	                            jb 0x4008d97	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4008e37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e3b	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e3f	            0x7334	                           jae 0x4008e75	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e41	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e45	           0xfb600	                   movzx eax, byte [rax]	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e48	            0x3c5f	                            cmp al, 0x5f	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e4a	            0x7529	                           jne 0x4008e75	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e4c	    0x48817de8ff00	           cmp qword [rbp - 0x18], 0xff 	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e54	            0x771f	                            ja 0x4008e75	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4008e5a	           0xfbed0	                           movsx edx, al	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4008e5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4008e61	            0x89d6	                            mov esi, edx	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4008e63	          0x4889c7	                            mov rdi, rax	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4008e66	      0xe89bc6ffff	                  call sym.d_append_char	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4008e6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5778	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e6f	        0x488945e0	             mov qword [rbp - 0x20], rax	      5778	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e73	            0xeb18	                           jmp 0x4008e8d	      5779	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008e75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4008e79	           0xfb600	                   movzx eax, byte [rax]	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4008e7c	           0xfbed0	                           movsx edx, al	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4008e7f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4008e83	            0x89d6	                            mov esi, edx	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4008e85	          0x4889c7	                            mov rdi, rax	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4008e88	      0xe879c6ffff	                  call sym.d_append_char	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4008e8d	      0x488345e001	               add qword [rbp - 0x20], 1	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4008e92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4008e96	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4008e9a	     0xf8291feffff	                            jb 0x4008d31	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4008ea0	              0x90	                                     nop	      5785	cp-demangle.c	FUNCTION_88
0x4008ea1	              0xc9	                                   leave	      5785	cp-demangle.c	FUNCTION_88
0x4008ea2	              0xc3	                                     ret	      5785	cp-demangle.c	FUNCTION_88
d_template_param	IF,2:DO,0:functions,0:ELSE,0:FOR,0:CALL,3:SWITCH,0:WHILE,0	36
0x40035ea	              0x55	                                push rbp	      3089	cp-demangle.c	FUNCTION_45
0x40035eb	          0x4889e5	                            mov rbp, rsp	      3089	cp-demangle.c	FUNCTION_45
0x40035ee	        0x4883ec18	                           sub rsp, 0x18	      3089	cp-demangle.c	FUNCTION_45
0x40035f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3089	cp-demangle.c	FUNCTION_45
0x40035f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x40035fa	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x40035fe	           0xfb600	                   movzx eax, byte [rax]	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003601	            0x3c54	                            cmp al, 0x54	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003603	            0x751b	                           jne 0x4003620	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003605	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003609	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x400360d	        0x488d5001	                      lea rdx, [rax + 1]	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003611	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003615	        0x48895018	             mov qword [rax + 0x18], rdx	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003619	      0xb800000000	                              mov eax, 0	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x400361e	            0xeb05	                           jmp 0x4003625	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003620	      0xb801000000	                              mov eax, 1	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003625	            0x84c0	                             test al, al	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003627	            0x7407	                            je 0x4003630	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4003629	      0xb800000000	                              mov eax, 0	      3093	cp-demangle.c	FUNCTION_45	IF_1
0x400362e	            0xeb2d	                           jmp 0x400365d	      3093	cp-demangle.c	FUNCTION_45	IF_1
0x4003630	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3095	cp-demangle.c	FUNCTION_45	CALL_2
0x4003634	          0x4889c7	                            mov rdi, rax	      3095	cp-demangle.c	FUNCTION_45	CALL_2
0x4003637	      0xe82dffffff	               call sym.d_compact_number	      3095	cp-demangle.c	FUNCTION_45	CALL_2
0x400363c	          0x8945fc	                mov dword [rbp - 4], eax	      3095	cp-demangle.c	FUNCTION_45	CALL_2
0x400363f	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3096	cp-demangle.c	FUNCTION_45	IF_2
0x4003643	            0x7907	                           jns 0x400364c	      3096	cp-demangle.c	FUNCTION_45	IF_2
0x4003645	      0xb800000000	                              mov eax, 0	      3097	cp-demangle.c	FUNCTION_45	IF_2
0x400364a	            0xeb11	                           jmp 0x400365d	      3097	cp-demangle.c	FUNCTION_45	IF_2
0x400364c	          0x8b55fc	                mov edx, dword [rbp - 4]	      3099	cp-demangle.c	FUNCTION_45	CALL_3
0x400364f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3099	cp-demangle.c	FUNCTION_45	CALL_3
0x4003653	            0x89d6	                            mov esi, edx	      3099	cp-demangle.c	FUNCTION_45	CALL_3
0x4003655	          0x4889c7	                            mov rdi, rax	      3099	cp-demangle.c	FUNCTION_45	CALL_3
0x4003658	      0xe832cfffff	          call sym.d_make_template_param	      3099	cp-demangle.c	FUNCTION_45	CALL_3
0x400365d	              0xc9	                                   leave	      3100	cp-demangle.c	FUNCTION_45
0x400365e	              0xc3	                                     ret	      3100	cp-demangle.c	FUNCTION_45
d_make_comp	IF,4:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,1:WHILE,0	53
0x4000260	              0x55	                                push rbp	       947	cp-demangle.c	FUNCTION_4
0x4000261	          0x4889e5	                            mov rbp, rsp	       947	cp-demangle.c	FUNCTION_4
0x4000264	        0x4883ec30	                           sub rsp, 0x30	       947	cp-demangle.c	FUNCTION_4
0x4000268	        0x48897de8	             mov qword [rbp - 0x18], rdi	       947	cp-demangle.c	FUNCTION_4
0x400026c	          0x8975e4	             mov dword [rbp - 0x1c], esi	       947	cp-demangle.c	FUNCTION_4
0x400026f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       947	cp-demangle.c	FUNCTION_4
0x4000273	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       947	cp-demangle.c	FUNCTION_4
0x4000277	        0x837de44f	           cmp dword [rbp - 0x1c], 0x4f 	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x400027b	            0x773e	                            ja 0x40002bb	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x400027d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000280	    0x488b04c50000	                  mov rax, qword [rax*8]	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000288	            0xffe0	                                 jmp rax	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x400028a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400028f	            0x7407	                            je 0x4000298	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x4000291	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x4000296	            0x752d	                           jne 0x40002c5	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x4000298	      0xb800000000	                              mov eax, 0	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400029d	            0xeb69	                           jmp 0x4000308	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400029f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1010	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40002a4	            0x7522	                           jne 0x40002c8	      1010	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40002a6	      0xb800000000	                              mov eax, 0	      1011	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40002ab	            0xeb5b	                           jmp 0x4000308	      1011	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40002ad	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40002b2	            0x7517	                           jne 0x40002cb	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40002b4	      0xb800000000	                              mov eax, 0	      1019	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40002b9	            0xeb4d	                           jmp 0x4000308	      1019	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40002bb	      0xb800000000	                              mov eax, 0	      1035	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002c0	            0xeb46	                           jmp 0x4000308	      1035	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002c2	              0x90	                                     nop	      1031	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002c3	            0xeb07	                           jmp 0x40002cc	      1031	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002c5	              0x90	                                     nop	       976	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002c6	            0xeb04	                           jmp 0x40002cc	       976	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002c8	              0x90	                                     nop	      1012	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002c9	            0xeb01	                           jmp 0x40002cc	      1012	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002cb	              0x90	                                     nop	      1020	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40002cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1038	cp-demangle.c	FUNCTION_4	CALL_1
0x40002d0	          0x4889c7	                            mov rdi, rax	      1038	cp-demangle.c	FUNCTION_4	CALL_1
0x40002d3	      0xe81fffffff	                   call sym.d_make_empty	      1038	cp-demangle.c	FUNCTION_4	CALL_1
0x40002d8	        0x488945f8	                mov qword [rbp - 8], rax	      1038	cp-demangle.c	FUNCTION_4	CALL_1
0x40002dc	      0x48837df800	                  cmp qword [rbp - 8], 0	      1039	cp-demangle.c	FUNCTION_4	IF_4
0x40002e1	            0x7421	                            je 0x4000304	      1039	cp-demangle.c	FUNCTION_4	IF_4
0x40002e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x40002e7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x40002ea	            0x8910	                    mov dword [rax], edx	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x40002ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x40002f0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x40002f4	        0x48895008	                mov qword [rax + 8], rdx	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x40002f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x40002fc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x4000300	        0x48895010	             mov qword [rax + 0x10], rdx	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x4000304	        0x488b45f8	                mov rax, qword [rbp - 8]	      1045	cp-demangle.c	FUNCTION_4
0x4000308	              0xc9	                                   leave	      1046	cp-demangle.c	FUNCTION_4
0x4000309	              0xc3	                                     ret	      1046	cp-demangle.c	FUNCTION_4
d_print_error	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	8
0x400545c	              0x55	                                push rbp	      4206	cp-demangle.c	FUNCTION_69
0x400545d	          0x4889e5	                            mov rbp, rsp	      4206	cp-demangle.c	FUNCTION_69
0x4005460	        0x48897df8	                mov qword [rbp - 8], rdi	      4206	cp-demangle.c	FUNCTION_69
0x4005464	        0x488b45f8	                mov rax, qword [rbp - 8]	      4207	cp-demangle.c	FUNCTION_69
0x4005468	    0xc78030010000	              mov dword [rax + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4005472	              0x90	                                     nop	      4208	cp-demangle.c	FUNCTION_69
0x4005473	              0x5d	                                 pop rbp	      4208	cp-demangle.c	FUNCTION_69
0x4005474	              0xc3	                                     ret	      4208	cp-demangle.c	FUNCTION_69
d_template_args_1	IF,4:DO,0:functions,0:ELSE,0:FOR,0:CALL,7:SWITCH,0:WHILE,1	78
0x40036b2	              0x55	                                push rbp	      3119	cp-demangle.c	FUNCTION_47
0x40036b3	          0x4889e5	                            mov rbp, rsp	      3119	cp-demangle.c	FUNCTION_47
0x40036b6	        0x4883ec40	                           sub rsp, 0x40	      3119	cp-demangle.c	FUNCTION_47
0x40036ba	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3119	cp-demangle.c	FUNCTION_47
0x40036be	    0x64488b042528	                mov rax, qword fs:[0x28]	      3119	cp-demangle.c	FUNCTION_47
0x40036c7	        0x488945f8	                mov qword [rbp - 8], rax	      3119	cp-demangle.c	FUNCTION_47
0x40036cb	            0x31c0	                            xor eax, eax	      3119	cp-demangle.c	FUNCTION_47
0x40036cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3127	cp-demangle.c	FUNCTION_47
0x40036d1	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3127	cp-demangle.c	FUNCTION_47
0x40036d5	        0x488945e8	             mov qword [rbp - 0x18], rax	      3127	cp-demangle.c	FUNCTION_47
0x40036d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x40036dd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x40036e1	           0xfb600	                   movzx eax, byte [rax]	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x40036e4	            0x3c45	                            cmp al, 0x45	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x40036e6	            0x7534	                           jne 0x400371c	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x40036e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x40036ec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x40036f0	        0x488d5001	                      lea rdx, [rax + 1]	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x40036f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x40036f8	        0x48895018	             mov qword [rax + 0x18], rdx	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x40036fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4003700	      0xb900000000	                              mov ecx, 0	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4003705	      0xba00000000	                              mov edx, 0	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400370a	      0xbe2f000000	                           mov esi, 0x2f	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400370f	          0x4889c7	                            mov rdi, rax	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4003712	      0xe849cbffff	                    call sym.d_make_comp	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4003717	      0xe9a8000000	                           jmp 0x40037c4	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400371c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3136	cp-demangle.c	FUNCTION_47
0x4003724	        0x488d45d8	                   lea rax, [rbp - 0x28]	      3137	cp-demangle.c	FUNCTION_47
0x4003728	        0x488945e0	             mov qword [rbp - 0x20], rax	      3137	cp-demangle.c	FUNCTION_47
0x400372c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3142	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_4
0x4003730	          0x4889c7	                            mov rdi, rax	      3142	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_4
0x4003733	      0xe8a2000000	                 call sym.d_template_arg	      3142	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_4
0x4003738	        0x488945f0	             mov qword [rbp - 0x10], rax	      3142	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_4
0x400373c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4003741	            0x7507	                           jne 0x400374a	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4003743	      0xb800000000	                              mov eax, 0	      3144	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4003748	            0xeb7a	                           jmp 0x40037c4	      3144	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x400374a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x400374e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4003752	      0xb900000000	                              mov ecx, 0	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4003757	      0xbe2f000000	                           mov esi, 0x2f	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x400375c	          0x4889c7	                            mov rdi, rax	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x400375f	      0xe8fccaffff	                    call sym.d_make_comp	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4003764	          0x4889c2	                            mov rdx, rax	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4003767	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x400376b	          0x488910	                    mov qword [rax], rdx	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x400376e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4003772	          0x488b00	                    mov rax, qword [rax]	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4003775	          0x4885c0	                           test rax, rax	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4003778	            0x7507	                           jne 0x4003781	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x400377a	      0xb800000000	                              mov eax, 0	      3148	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x400377f	            0xeb43	                           jmp 0x40037c4	      3148	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4003781	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3149	cp-demangle.c	FUNCTION_47	WHILE_1
0x4003785	          0x488b00	                    mov rax, qword [rax]	      3149	cp-demangle.c	FUNCTION_47	WHILE_1
0x4003788	        0x4883c010	                           add rax, 0x10	      3149	cp-demangle.c	FUNCTION_47	WHILE_1
0x400378c	        0x488945e0	             mov qword [rbp - 0x20], rax	      3149	cp-demangle.c	FUNCTION_47	WHILE_1
0x4003790	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4003794	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4003798	           0xfb600	                   movzx eax, byte [rax]	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x400379b	            0x3c45	                            cmp al, 0x45	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x400379d	            0x758d	                           jne 0x400372c	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x400379f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x40037a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x40037a7	        0x488d5001	                      lea rdx, [rax + 1]	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x40037ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x40037af	        0x48895018	             mov qword [rax + 0x18], rdx	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x40037b3	              0x90	                                     nop	      3154	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4
0x40037b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3158	cp-demangle.c	FUNCTION_47
0x40037b8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3158	cp-demangle.c	FUNCTION_47
0x40037bc	        0x48895040	             mov qword [rax + 0x40], rdx	      3158	cp-demangle.c	FUNCTION_47
0x40037c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3160	cp-demangle.c	FUNCTION_47
0x40037c4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3161	cp-demangle.c	FUNCTION_47
0x40037c8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3161	cp-demangle.c	FUNCTION_47
0x40037d1	            0x7405	                            je 0x40037d8	      3161	cp-demangle.c	FUNCTION_47
0x40037d3	      0xe800000000	                          call 0x40037d8	      3161	cp-demangle.c	FUNCTION_47
0x40037d8	              0xc9	                                   leave	      3161	cp-demangle.c	FUNCTION_47
0x40037d9	              0xc3	                                     ret	      3161	cp-demangle.c	FUNCTION_47
cplus_demangle_v3	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	20
0x4009e86	              0x55	                                push rbp	      6453	cp-demangle.c	FUNCTION_100
0x4009e87	          0x4889e5	                            mov rbp, rsp	      6453	cp-demangle.c	FUNCTION_100
0x4009e8a	        0x4883ec20	                           sub rsp, 0x20	      6453	cp-demangle.c	FUNCTION_100
0x4009e8e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6453	cp-demangle.c	FUNCTION_100
0x4009e92	          0x8975e4	             mov dword [rbp - 0x1c], esi	      6453	cp-demangle.c	FUNCTION_100
0x4009e95	    0x64488b042528	                mov rax, qword fs:[0x28]	      6453	cp-demangle.c	FUNCTION_100
0x4009e9e	        0x488945f8	                mov qword [rbp - 8], rax	      6453	cp-demangle.c	FUNCTION_100
0x4009ea2	            0x31c0	                            xor eax, eax	      6453	cp-demangle.c	FUNCTION_100
0x4009ea4	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009ea8	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009eab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009eaf	            0x89ce	                            mov esi, ecx	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009eb1	          0x4889c7	                            mov rdi, rax	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009eb4	      0xe825ffffff	                     call sym.d_demangle	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009eb9	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6457	cp-demangle.c	FUNCTION_100
0x4009ebd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6457	cp-demangle.c	FUNCTION_100
0x4009ec6	            0x7405	                            je 0x4009ecd	      6457	cp-demangle.c	FUNCTION_100
0x4009ec8	      0xe800000000	                          call 0x4009ecd	      6457	cp-demangle.c	FUNCTION_100
0x4009ecd	              0xc9	                                   leave	      6457	cp-demangle.c	FUNCTION_100
0x4009ece	              0xc3	                                     ret	      6457	cp-demangle.c	FUNCTION_100
d_print_subexpr	IF,3:DO,0:functions,0:ELSE,0:FOR,0:CALL,3:SWITCH,0:WHILE,0	45
0x4005ba6	              0x55	                                push rbp	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005ba7	          0x4889e5	                            mov rbp, rsp	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005baa	        0x4883ec30	                           sub rsp, 0x30	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005bae	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005bb2	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005bb5	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005bb9	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4485	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005bc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4486	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bc4	            0x8b00	                    mov eax, dword [rax]	      4486	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bc6	            0x85c0	                           test eax, eax	      4486	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bc8	            0x7421	                            je 0x4005beb	      4486	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4487	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bce	            0x8b00	                    mov eax, dword [rax]	      4487	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bd0	          0x83f801	                              cmp eax, 1	      4487	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bd3	            0x7416	                            je 0x4005beb	      4487	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bd5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bd9	            0x8b00	                    mov eax, dword [rax]	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bdb	          0x83f830	                           cmp eax, 0x30	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bde	            0x740b	                            je 0x4005beb	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005be0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005be4	            0x8b00	                    mov eax, dword [rax]	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005be6	          0x83f806	                              cmp eax, 6	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005be9	            0x7507	                           jne 0x4005bf2	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005beb	    0xc745fc010000	                  mov dword [rbp - 4], 1	      4490	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005bf2	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4491	cp-demangle.c	ELSE_1	FUNCTION_82	IF_2
0x4005bf6	            0x7511	                           jne 0x4005c09	      4491	cp-demangle.c	ELSE_1	FUNCTION_82	IF_2
0x4005bf8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4492	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_1
0x4005bfc	      0xbe28000000	                           mov esi, 0x28	      4492	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_1
0x4005c01	          0x4889c7	                            mov rdi, rax	      4492	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_1
0x4005c04	      0xe8fdf8ffff	                  call sym.d_append_char	      4492	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_1
0x4005c09	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c0d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c14	            0x89ce	                            mov esi, ecx	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c16	          0x4889c7	                            mov rdi, rax	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c19	      0xe8db2f0000	                   call sym.d_print_comp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c1e	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4494	cp-demangle.c	ELSE_1	FUNCTION_82	IF_3
0x4005c22	            0x7511	                           jne 0x4005c35	      4494	cp-demangle.c	ELSE_1	FUNCTION_82	IF_3
0x4005c24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4495	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_3
0x4005c28	      0xbe29000000	                           mov esi, 0x29	      4495	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_3
0x4005c2d	          0x4889c7	                            mov rdi, rax	      4495	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_3
0x4005c30	      0xe8d1f8ffff	                  call sym.d_append_char	      4495	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_3
0x4005c35	              0x90	                                     nop	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005c36	              0xc9	                                   leave	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005c37	              0xc3	                                     ret	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
d_print_conversion	IF,6:DO,0:functions,0:ELSE,1:FOR,0:CALL,9:SWITCH,0:WHILE,0	98
0x4009793	              0x55	                                push rbp	      6121	cp-demangle.c	FUNCTION_95
0x4009794	          0x4889e5	                            mov rbp, rsp	      6121	cp-demangle.c	FUNCTION_95
0x4009797	        0x4883ec40	                           sub rsp, 0x40	      6121	cp-demangle.c	FUNCTION_95
0x400979b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6121	cp-demangle.c	FUNCTION_95
0x400979f	          0x8975d4	             mov dword [rbp - 0x2c], esi	      6121	cp-demangle.c	FUNCTION_95
0x40097a2	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6121	cp-demangle.c	FUNCTION_95
0x40097a6	    0x64488b042528	                mov rax, qword fs:[0x28]	      6121	cp-demangle.c	FUNCTION_95
0x40097af	        0x488945f8	                mov qword [rbp - 8], rax	      6121	cp-demangle.c	FUNCTION_95
0x40097b3	            0x31c0	                            xor eax, eax	      6121	cp-demangle.c	FUNCTION_95
0x40097b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x40097b9	    0x488b80700100	           mov rax, qword [rax + 0x170] 	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x40097c0	          0x4885c0	                           test rax, rax	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x40097c3	            0x742d	                            je 0x40097f2	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x40097c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x40097c9	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x40097d0	        0x488945e0	             mov qword [rbp - 0x20], rax	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x40097d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x40097d8	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x40097dc	    0x488990200100	            mov qword [rax + 0x120], rdx	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x40097e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6130	cp-demangle.c	FUNCTION_95	IF_1
0x40097e7	    0x488b80700100	           mov rax, qword [rax + 0x170] 	      6130	cp-demangle.c	FUNCTION_95	IF_1
0x40097ee	        0x488945e8	             mov qword [rbp - 0x18], rax	      6130	cp-demangle.c	FUNCTION_95	IF_1
0x40097f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x40097f6	        0x488b4008	                mov rax, qword [rax + 8]	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x40097fa	            0x8b00	                    mov eax, dword [rax]	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x40097fc	          0x83f804	                              cmp eax, 4	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x40097ff	            0x7441	                            je 0x4009842	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4009801	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4009805	        0x488b5008	                mov rdx, qword [rax + 8]	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4009809	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x400980c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4009810	            0x89ce	                            mov esi, ecx	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4009812	          0x4889c7	                            mov rdi, rax	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4009815	      0xe8dff3ffff	                   call sym.d_print_comp	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x400981a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x400981e	    0x488b80700100	           mov rax, qword [rax + 0x170] 	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4009825	          0x4885c0	                           test rax, rax	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4009828	     0xf84d1000000	                            je 0x40098ff	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x400982e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4009832	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4009836	    0x488990200100	            mov qword [rax + 0x120], rdx	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x400983d	      0xe9bd000000	                           jmp 0x40098ff	      6159	cp-demangle.c	FUNCTION_95
0x4009842	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4009846	        0x488b4008	                mov rax, qword [rax + 8]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400984a	        0x488b5008	                mov rdx, qword [rax + 8]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400984e	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4009851	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4009855	            0x89ce	                            mov esi, ecx	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4009857	          0x4889c7	                            mov rdi, rax	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400985a	      0xe89af3ffff	                   call sym.d_print_comp	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400985f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4009863	    0x488b80700100	           mov rax, qword [rax + 0x170] 	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400986a	          0x4885c0	                           test rax, rax	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400986d	            0x740f	                            je 0x400987e	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400986f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4009873	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4009877	    0x488990200100	            mov qword [rax + 0x120], rdx	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400987e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x4009882	          0x4889c7	                            mov rdi, rax	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x4009885	      0xe8c7bdffff	                    call sym.d_last_char	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x400988a	            0x3c3c	                            cmp al, 0x3c	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x400988c	            0x7511	                           jne 0x400989f	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x400988e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6150	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_4
0x4009892	      0xbe20000000	                           mov esi, 0x20	      6150	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_4
0x4009897	          0x4889c7	                            mov rdi, rax	      6150	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_4
0x400989a	      0xe867bcffff	                  call sym.d_append_char	      6150	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_4
0x400989f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6151	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_5
0x40098a3	      0xbe3c000000	                           mov esi, 0x3c	      6151	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_5
0x40098a8	          0x4889c7	                            mov rdi, rax	      6151	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_5
0x40098ab	      0xe856bcffff	                  call sym.d_append_char	      6151	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_5
0x40098b0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098b4	        0x488b4008	                mov rax, qword [rax + 8]	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098b8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098bc	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098c3	            0x89ce	                            mov esi, ecx	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098c5	          0x4889c7	                            mov rdi, rax	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098c8	      0xe82cf3ffff	                   call sym.d_print_comp	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40098cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x40098d1	          0x4889c7	                            mov rdi, rax	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x40098d4	      0xe878bdffff	                    call sym.d_last_char	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x40098d9	            0x3c3e	                            cmp al, 0x3e	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x40098db	            0x7511	                           jne 0x40098ee	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x40098dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6156	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_8
0x40098e1	      0xbe20000000	                           mov esi, 0x20	      6156	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_8
0x40098e6	          0x4889c7	                            mov rdi, rax	      6156	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_8
0x40098e9	      0xe818bcffff	                  call sym.d_append_char	      6156	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_8
0x40098ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6157	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_9
0x40098f2	      0xbe3e000000	                           mov esi, 0x3e	      6157	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_9
0x40098f7	          0x4889c7	                            mov rdi, rax	      6157	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_9
0x40098fa	      0xe807bcffff	                  call sym.d_append_char	      6157	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_9
0x40098ff	              0x90	                                     nop	      6159	cp-demangle.c	FUNCTION_95
0x4009900	        0x488b45f8	                mov rax, qword [rbp - 8]	      6159	cp-demangle.c	FUNCTION_95
0x4009904	    0x644833042528	                xor rax, qword fs:[0x28]	      6159	cp-demangle.c	FUNCTION_95
0x400990d	            0x7405	                            je 0x4009914	      6159	cp-demangle.c	FUNCTION_95
0x400990f	      0xe800000000	                          call 0x4009914	      6159	cp-demangle.c	FUNCTION_95
0x4009914	              0xc9	                                   leave	      6159	cp-demangle.c	FUNCTION_95
0x4009915	              0xc3	                                     ret	      6159	cp-demangle.c	FUNCTION_95
d_local_name	IF,11:DO,0:functions,0:ELSE,1:FOR,0:CALL,14:SWITCH,0:WHILE,0	140
0x400454d	              0x55	                                push rbp	      3583	cp-demangle.c	FUNCTION_54
0x400454e	          0x4889e5	                            mov rbp, rsp	      3583	cp-demangle.c	FUNCTION_54
0x4004551	        0x4883ec30	                           sub rsp, 0x30	      3583	cp-demangle.c	FUNCTION_54
0x4004555	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3583	cp-demangle.c	FUNCTION_54
0x4004559	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x400455d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004561	           0xfb600	                   movzx eax, byte [rax]	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004564	            0x3c5a	                            cmp al, 0x5a	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004566	            0x751b	                           jne 0x4004583	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004568	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x400456c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004570	        0x488d5001	                      lea rdx, [rax + 1]	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004574	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004578	        0x48895018	             mov qword [rax + 0x18], rdx	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x400457c	      0xb800000000	                              mov eax, 0	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004581	            0xeb05	                           jmp 0x4004588	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004583	      0xb801000000	                              mov eax, 1	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4004588	            0x84c0	                             test al, al	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x400458a	            0x740a	                            je 0x4004596	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x400458c	      0xb800000000	                              mov eax, 0	      3588	cp-demangle.c	FUNCTION_54	IF_1
0x4004591	      0xe9ae010000	                           jmp 0x4004744	      3588	cp-demangle.c	FUNCTION_54	IF_1
0x4004596	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x400459a	      0xbe00000000	                              mov esi, 0	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x400459f	          0x4889c7	                            mov rdi, rax	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x40045a2	      0xe8f7c2ffff	                     call sym.d_encoding	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x40045a7	        0x488945f8	                mov qword [rbp - 8], rax	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x40045ab	      0x48837df800	                  cmp qword [rbp - 8], 0	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x40045b0	            0x750a	                           jne 0x40045bc	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x40045b2	      0xb800000000	                              mov eax, 0	      3592	cp-demangle.c	FUNCTION_54	IF_2
0x40045b7	      0xe988010000	                           jmp 0x4004744	      3592	cp-demangle.c	FUNCTION_54	IF_2
0x40045bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045c0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045c4	           0xfb600	                   movzx eax, byte [rax]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045c7	            0x3c45	                            cmp al, 0x45	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045c9	            0x751b	                           jne 0x40045e6	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045cf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045d3	        0x488d5001	                      lea rdx, [rax + 1]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045db	        0x48895018	             mov qword [rax + 0x18], rdx	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045df	      0xb800000000	                              mov eax, 0	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045e4	            0xeb05	                           jmp 0x40045eb	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045e6	      0xb801000000	                              mov eax, 1	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045eb	            0x84c0	                             test al, al	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045ed	            0x740a	                            je 0x40045f9	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x40045ef	      0xb800000000	                              mov eax, 0	      3595	cp-demangle.c	FUNCTION_54	IF_3
0x40045f4	      0xe94b010000	                           jmp 0x4004744	      3595	cp-demangle.c	FUNCTION_54	IF_3
0x40045f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x40045fd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4004601	           0xfb600	                   movzx eax, byte [rax]	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4004604	            0x3c73	                            cmp al, 0x73	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4004606	            0x754d	                           jne 0x4004655	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4004608	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x400460c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x4004610	        0x488d5001	                      lea rdx, [rax + 1]	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x4004614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x4004618	        0x48895018	             mov qword [rax + 0x18], rdx	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x400461c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4004620	          0x4889c7	                            mov rdi, rax	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4004623	      0xe81e010000	                call sym.d_discriminator	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4004628	            0x85c0	                           test eax, eax	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400462a	            0x750a	                           jne 0x4004636	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400462c	      0xb800000000	                              mov eax, 0	      3601	cp-demangle.c	FUNCTION_54	IF_4	IF_5
0x4004631	      0xe90e010000	                           jmp 0x4004744	      3601	cp-demangle.c	FUNCTION_54	IF_4	IF_5
0x4004636	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x400463a	      0xba0e000000	                            mov edx, 0xe	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x400463f	      0xbe00000000	                              mov esi, 0	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4004644	          0x4889c7	                            mov rdi, rax	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4004647	      0xe83abdffff	                    call sym.d_make_name	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x400464c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4004650	      0xe9ac000000	                           jmp 0x4004701	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4004655	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      3606	cp-demangle.c	FUNCTION_54	ELSE_1
0x400465c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4004660	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4004664	           0xfb600	                   movzx eax, byte [rax]	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4004667	            0x3c64	                            cmp al, 0x64	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4004669	            0x7533	                           jne 0x400469e	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x400466b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x400466f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x4004673	        0x488d5001	                      lea rdx, [rax + 1]	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x4004677	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x400467b	        0x48895018	             mov qword [rax + 0x18], rdx	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x400467f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x4004683	          0x4889c7	                            mov rdi, rax	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x4004686	      0xe8deeeffff	               call sym.d_compact_number	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x400468b	          0x8945ec	             mov dword [rbp - 0x14], eax	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x400468e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3613	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x4004692	            0x790a	                           jns 0x400469e	      3613	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x4004694	      0xb800000000	                              mov eax, 0	      3614	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x4004699	      0xe9a6000000	                           jmp 0x4004744	      3614	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x400469e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x40046a2	          0x4889c7	                            mov rdi, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x40046a5	      0xe8dac3ffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x40046aa	        0x488945f0	             mov qword [rbp - 0x10], rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x40046ae	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046b3	            0x742d	                            je 0x40046e2	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3622	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046b9	            0x8b00	                    mov eax, dword [rax]	      3622	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046bb	          0x83f845	                           cmp eax, 0x45	      3622	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046be	            0x7422	                            je 0x40046e2	      3622	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046c4	            0x8b00	                    mov eax, dword [rax]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046c6	          0x83f847	                           cmp eax, 0x47	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046c9	            0x7417	                            je 0x40046e2	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x40046cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40046cf	          0x4889c7	                            mov rdi, rax	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40046d2	      0xe86f000000	                call sym.d_discriminator	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40046d7	            0x85c0	                           test eax, eax	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40046d9	            0x7507	                           jne 0x40046e2	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40046db	      0xb800000000	                              mov eax, 0	      3627	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9
0x40046e0	            0xeb62	                           jmp 0x4004744	      3627	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9
0x40046e2	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3630	cp-demangle.c	FUNCTION_54	ELSE_1	IF_10
0x40046e6	            0x7819	                            js 0x4004701	      3630	cp-demangle.c	FUNCTION_54	ELSE_1	IF_10
0x40046e8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3631	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_13
0x40046ec	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      3631	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_13
0x40046ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3631	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_13
0x40046f3	            0x89ce	                            mov esi, ecx	      3631	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_13
0x40046f5	          0x4889c7	                            mov rdi, rax	      3631	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_13
0x40046f8	      0xe8b0bdffff	             call sym.d_make_default_arg	      3631	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_13
0x40046fd	        0x488945f0	             mov qword [rbp - 0x10], rax	      3631	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_13
0x4004701	        0x488b45f8	                mov rax, qword [rbp - 8]	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x4004705	            0x8b00	                    mov eax, dword [rax]	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x4004707	          0x83f803	                              cmp eax, 3	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x400470a	            0x751f	                           jne 0x400472b	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x400470c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x4004710	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x4004714	            0x8b00	                    mov eax, dword [rax]	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x4004716	          0x83f829	                           cmp eax, 0x29	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x4004719	            0x7510	                           jne 0x400472b	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x400471b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x400471f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x4004723	    0x48c740080000	                  mov qword [rax + 8], 0	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x400472b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400472f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4004733	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4004737	      0xbe02000000	                              mov esi, 2	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400473c	          0x4889c7	                            mov rdi, rax	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400473f	      0xe81cbbffff	                    call sym.d_make_comp	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4004744	              0xc9	                                   leave	      3642	cp-demangle.c	FUNCTION_54
0x4004745	              0xc3	                                     ret	      3642	cp-demangle.c	FUNCTION_54
d_growable_string_callback_adapter	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	17
0x4005157	              0x55	                                push rbp	      4021	cp-demangle.c	FUNCTION_66
0x4005158	          0x4889e5	                            mov rbp, rsp	      4021	cp-demangle.c	FUNCTION_66
0x400515b	        0x4883ec30	                           sub rsp, 0x30	      4021	cp-demangle.c	FUNCTION_66
0x400515f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4021	cp-demangle.c	FUNCTION_66
0x4005163	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4021	cp-demangle.c	FUNCTION_66
0x4005167	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4021	cp-demangle.c	FUNCTION_66
0x400516b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4022	cp-demangle.c	FUNCTION_66
0x400516f	        0x488945f8	                mov qword [rbp - 8], rax	      4022	cp-demangle.c	FUNCTION_66
0x4005173	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4024	cp-demangle.c	FUNCTION_66	CALL_1
0x4005177	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      4024	cp-demangle.c	FUNCTION_66	CALL_1
0x400517b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4024	cp-demangle.c	FUNCTION_66	CALL_1
0x400517f	          0x4889ce	                            mov rsi, rcx	      4024	cp-demangle.c	FUNCTION_66	CALL_1
0x4005182	          0x4889c7	                            mov rdi, rax	      4024	cp-demangle.c	FUNCTION_66	CALL_1
0x4005185	      0xe818ffffff	call sym.d_growable_string_append_buffer	      4024	cp-demangle.c	FUNCTION_66	CALL_1
0x400518a	              0x90	                                     nop	      4025	cp-demangle.c	FUNCTION_66
0x400518b	              0xc9	                                   leave	      4025	cp-demangle.c	FUNCTION_66
0x400518c	              0xc3	                                     ret	      4025	cp-demangle.c	FUNCTION_66
java_demangle_v3_callback	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	14
0x4009f45	              0x55	                                push rbp	      6483	cp-demangle.c	FUNCTION_103
0x4009f46	          0x4889e5	                            mov rbp, rsp	      6483	cp-demangle.c	FUNCTION_103
0x4009f49	        0x4883ec20	                           sub rsp, 0x20	      6483	cp-demangle.c	FUNCTION_103
0x4009f4d	        0x48897df8	                mov qword [rbp - 8], rdi	      6483	cp-demangle.c	FUNCTION_103
0x4009f51	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6483	cp-demangle.c	FUNCTION_103
0x4009f55	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6483	cp-demangle.c	FUNCTION_103
0x4009f59	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009f5d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009f61	        0x488b45f8	                mov rax, qword [rbp - 8]	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009f65	      0xbe25000000	                           mov esi, 0x25	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009f6a	          0x4889c7	                            mov rdi, rax	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009f6d	      0xe84dfaffff	            call sym.d_demangle_callback	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009f72	              0xc9	                                   leave	      6487	cp-demangle.c	FUNCTION_103
0x4009f73	              0xc3	                                     ret	      6487	cp-demangle.c	FUNCTION_103
d_unqualified_name	IF,11:DO,0:functions,0:ELSE,5:FOR,0:CALL,17:SWITCH,1:WHILE,0	146
0x4000f7c	              0x55	                                push rbp	      1611	cp-demangle.c	FUNCTION_23
0x4000f7d	          0x4889e5	                            mov rbp, rsp	      1611	cp-demangle.c	FUNCTION_23
0x4000f80	        0x4883ec20	                           sub rsp, 0x20	      1611	cp-demangle.c	FUNCTION_23
0x4000f84	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1611	cp-demangle.c	FUNCTION_23
0x4000f88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x4000f8c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x4000f90	           0xfb600	                   movzx eax, byte [rax]	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x4000f93	          0x8845f7	                  mov byte [rbp - 9], al	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x4000f96	        0x807df72f	                cmp byte [rbp - 9], 0x2f	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4000f9a	            0x7e1b	                           jle 0x4000fb7	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4000f9c	        0x807df739	                cmp byte [rbp - 9], 0x39	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4000fa0	            0x7f15	                            jg 0x4000fb7	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4000fa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4000fa6	          0x4889c7	                            mov rdi, rax	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4000fa9	      0xe8dc010000	                  call sym.d_source_name	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4000fae	        0x488945f8	                mov qword [rbp - 8], rax	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4000fb2	      0xe9a7010000	                           jmp 0x400115e	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4000fb7	        0x807df760	                cmp byte [rbp - 9], 0x60	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4000fbb	     0xf8ed0000000	                           jle 0x4001091	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4000fc1	        0x807df77a	                cmp byte [rbp - 9], 0x7a	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4000fc5	     0xf8fc6000000	                            jg 0x4001091	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4000fcb	        0x807df76f	                cmp byte [rbp - 9], 0x6f	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fcf	            0x7527	                           jne 0x4000ff8	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fd5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fd9	        0x4883c001	                              add rax, 1	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fdd	           0xfb600	                   movzx eax, byte [rax]	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fe0	            0x3c6e	                            cmp al, 0x6e	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fe2	            0x7514	                           jne 0x4000ff8	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4000fe4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4000fe8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4000fec	        0x488d5002	                      lea rdx, [rax + 2]	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4000ff0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4000ff4	        0x48895018	             mov qword [rax + 0x18], rdx	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4000ff8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4000ffc	          0x4889c7	                            mov rdi, rax	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4000fff	      0xe836040000	                call sym.d_operator_name	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4001004	        0x488945f8	                mov qword [rbp - 8], rax	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4001008	      0x48837df800	                  cmp qword [rbp - 8], 0	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400100d	     0xf844a010000	                            je 0x400115d	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001013	        0x488b45f8	                mov rax, qword [rbp - 8]	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001017	            0x8b00	                    mov eax, dword [rax]	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001019	          0x83f831	                           cmp eax, 0x31	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400101c	     0xf853b010000	                           jne 0x400115d	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001022	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001026	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001029	            0x89c2	                            mov edx, eax	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400102b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400102f	        0x488b4008	                mov rax, qword [rax + 8]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001033	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001036	             0x1d0	                            add eax, edx	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001038	          0x83c007	                              add eax, 7	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400103b	            0x89c2	                            mov edx, eax	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400103d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001041	          0x895048	             mov dword [rax + 0x48], edx	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001044	        0x488b45f8	                mov rax, qword [rbp - 8]	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4001048	        0x488b4008	                mov rax, qword [rax + 8]	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400104c	          0x488b00	                    mov rax, qword [rax]	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400104f	      0xbe00000000	                              mov esi, 0	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4001054	          0x4889c7	                            mov rdi, rax	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4001057	      0xe800000000	                          call 0x400105c	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400105c	            0x85c0	                           test eax, eax	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400105e	     0xf85f9000000	                           jne 0x400115d	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4001064	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4001068	          0x4889c7	                            mov rdi, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400106b	      0xe81a010000	                  call sym.d_source_name	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4001070	          0x4889c1	                            mov rcx, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4001073	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4001077	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400107b	      0xbe36000000	                           mov esi, 0x36	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4001080	          0x4889c7	                            mov rdi, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4001083	      0xe8d8f1ffff	                    call sym.d_make_comp	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4001088	        0x488945f8	                mov qword [rbp - 8], rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400108c	      0xe9cc000000	                           jmp 0x400115d	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4001091	        0x807df743	                cmp byte [rbp - 9], 0x43	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x4001095	            0x7406	                            je 0x400109d	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x4001097	        0x807df744	                cmp byte [rbp - 9], 0x44	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x400109b	            0x7515	                           jne 0x40010b2	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x400109d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1632	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40010a1	          0x4889c7	                            mov rdi, rax	      1632	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40010a4	      0xe8c10e0000	               call sym.d_ctor_dtor_name	      1632	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40010a9	        0x488945f8	                mov qword [rbp - 8], rax	      1632	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40010ad	      0xe9ac000000	                           jmp 0x400115e	      1632	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40010b2	        0x807df74c	                cmp byte [rbp - 9], 0x4c	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x40010b6	            0x754f	                           jne 0x4001107	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x40010b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x40010bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x40010c0	        0x488d5001	                      lea rdx, [rax + 1]	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x40010c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x40010c8	        0x48895018	             mov qword [rax + 0x18], rdx	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x40010cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x40010d0	          0x4889c7	                            mov rdi, rax	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x40010d3	      0xe8b2000000	                  call sym.d_source_name	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x40010d8	        0x488945f8	                mov qword [rbp - 8], rax	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x40010dc	      0x48837df800	                  cmp qword [rbp - 8], 0	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x40010e1	            0x750a	                           jne 0x40010ed	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x40010e3	      0xb800000000	                              mov eax, 0	      1639	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x40010e8	      0xe99b000000	                           jmp 0x4001188	      1639	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x40010ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40010f1	          0x4889c7	                            mov rdi, rax	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40010f4	      0xe84d360000	                call sym.d_discriminator	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40010f9	            0x85c0	                           test eax, eax	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40010fb	            0x7561	                           jne 0x400115e	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40010fd	      0xb800000000	                              mov eax, 0	      1641	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9
0x4001102	      0xe981000000	                           jmp 0x4001188	      1641	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9
0x4001107	        0x807df755	                cmp byte [rbp - 9], 0x55	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x400110b	            0x7549	                           jne 0x4001156	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x400110d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4001111	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4001115	        0x4883c001	                              add rax, 1	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4001119	           0xfb600	                   movzx eax, byte [rax]	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400111c	           0xfbec0	                           movsx eax, al	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400111f	          0x83f86c	                           cmp eax, 0x6c	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4001122	            0x7407	                            je 0x400112b	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4001124	          0x83f874	                           cmp eax, 0x74	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4001127	            0x7414	                            je 0x400113d	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4001129	            0xeb24	                           jmp 0x400114f	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400112b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1648	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_14
0x400112f	          0x4889c7	                            mov rdi, rax	      1648	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_14
0x4001132	      0xe8d1360000	                       call sym.d_lambda	      1648	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_14
0x4001137	        0x488945f8	                mov qword [rbp - 8], rax	      1648	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_14
0x400113b	            0xeb21	                           jmp 0x400115e	      1649	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1
0x400113d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1651	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_15
0x4001141	          0x4889c7	                            mov rdi, rax	      1651	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_15
0x4001144	      0xe817380000	                 call sym.d_unnamed_type	      1651	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_15
0x4001149	        0x488945f8	                mov qword [rbp - 8], rax	      1651	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_15
0x400114d	            0xeb0f	                           jmp 0x400115e	      1652	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1
0x400114f	      0xb800000000	                              mov eax, 0	      1654	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1
0x4001154	            0xeb32	                           jmp 0x4001188	      1654	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1
0x4001156	      0xb800000000	                              mov eax, 0	      1658	cp-demangle.c	FUNCTION_23	ELSE_5
0x400115b	            0xeb2b	                           jmp 0x4001188	      1658	cp-demangle.c	FUNCTION_23	ELSE_5
0x400115d	              0x90	                                     nop	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400115e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x4001162	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x4001166	           0xfb600	                   movzx eax, byte [rax]	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x4001169	            0x3c42	                            cmp al, 0x42	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400116b	            0x7517	                           jne 0x4001184	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400116d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4001171	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4001175	          0x4889d6	                            mov rsi, rdx	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4001178	          0x4889c7	                            mov rdi, rax	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x400117b	      0xe87ff8ffff	                     call sym.d_abi_tags	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4001180	        0x488945f8	                mov qword [rbp - 8], rax	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4001184	        0x488b45f8	                mov rax, qword [rbp - 8]	      1662	cp-demangle.c	FUNCTION_23
0x4001188	              0xc9	                                   leave	      1663	cp-demangle.c	FUNCTION_23
0x4001189	              0xc3	                                     ret	      1663	cp-demangle.c	FUNCTION_23
next_is_type_qual	IF,3:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	34
0x400215f	              0x55	                                push rbp	      2289	cp-demangle.c	FUNCTION_34
0x4002160	          0x4889e5	                            mov rbp, rsp	      2289	cp-demangle.c	FUNCTION_34
0x4002163	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2289	cp-demangle.c	FUNCTION_34
0x4002167	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2290	cp-demangle.c	FUNCTION_34	CALL_1
0x400216b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2290	cp-demangle.c	FUNCTION_34	CALL_1
0x400216f	           0xfb600	                   movzx eax, byte [rax]	      2290	cp-demangle.c	FUNCTION_34	CALL_1
0x4002172	          0x8845ff	                  mov byte [rbp - 1], al	      2290	cp-demangle.c	FUNCTION_34	CALL_1
0x4002175	        0x807dff72	                cmp byte [rbp - 1], 0x72	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x4002179	            0x740c	                            je 0x4002187	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400217b	        0x807dff56	                cmp byte [rbp - 1], 0x56	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400217f	            0x7406	                            je 0x4002187	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x4002181	        0x807dff4b	                cmp byte [rbp - 1], 0x4b	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x4002185	            0x7507	                           jne 0x400218e	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x4002187	      0xb801000000	                              mov eax, 1	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x400218c	            0xeb39	                           jmp 0x40021c7	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x400218e	        0x807dff44	                cmp byte [rbp - 1], 0x44	      2293	cp-demangle.c	FUNCTION_34	IF_2
0x4002192	            0x752e	                           jne 0x40021c2	      2293	cp-demangle.c	FUNCTION_34	IF_2
0x4002194	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2295	cp-demangle.c	FUNCTION_34	IF_2	CALL_2
0x4002198	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2295	cp-demangle.c	FUNCTION_34	IF_2	CALL_2
0x400219c	         0xfb64001	               movzx eax, byte [rax + 1]	      2295	cp-demangle.c	FUNCTION_34	IF_2	CALL_2
0x40021a0	          0x8845ff	                  mov byte [rbp - 1], al	      2295	cp-demangle.c	FUNCTION_34	IF_2	CALL_2
0x40021a3	        0x807dff78	                cmp byte [rbp - 1], 0x78	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021a7	            0x7412	                            je 0x40021bb	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021a9	        0x807dff6f	                cmp byte [rbp - 1], 0x6f	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021ad	            0x740c	                            je 0x40021bb	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021af	        0x807dff4f	                cmp byte [rbp - 1], 0x4f	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021b3	            0x7406	                            je 0x40021bb	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021b5	        0x807dff77	                cmp byte [rbp - 1], 0x77	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021b9	            0x7507	                           jne 0x40021c2	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021bb	      0xb801000000	                              mov eax, 1	      2297	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021c0	            0xeb05	                           jmp 0x40021c7	      2297	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x40021c2	      0xb800000000	                              mov eax, 0	      2299	cp-demangle.c	FUNCTION_34
0x40021c7	              0x5d	                                 pop rbp	      2300	cp-demangle.c	FUNCTION_34
0x40021c8	              0xc3	                                     ret	      2300	cp-demangle.c	FUNCTION_34
d_print_mod	IF,4:DO,0:functions,0:ELSE,0:FOR,0:CALL,30:SWITCH,1:WHILE,0	191
0x4009142	              0x55	                                push rbp	      5875	cp-demangle.c	FUNCTION_90
0x4009143	          0x4889e5	                            mov rbp, rsp	      5875	cp-demangle.c	FUNCTION_90
0x4009146	        0x4883ec20	                           sub rsp, 0x20	      5875	cp-demangle.c	FUNCTION_90
0x400914a	        0x48897df8	                mov qword [rbp - 8], rdi	      5875	cp-demangle.c	FUNCTION_90
0x400914e	          0x8975f4	              mov dword [rbp - 0xc], esi	      5875	cp-demangle.c	FUNCTION_90
0x4009151	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5875	cp-demangle.c	FUNCTION_90
0x4009155	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009159	            0x8b00	                    mov eax, dword [rax]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400915b	          0x83e803	                              sub eax, 3	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400915e	          0x83f84c	                           cmp eax, 0x4c	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009161	     0xf879a020000	                            ja 0x4009401	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009167	            0x89c0	                            mov eax, eax	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009169	    0x488b04c50000	                  mov rax, qword [rax*8]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009171	            0xffe0	                                 jmp rax	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009173	        0x488b45f8	                mov rax, qword [rbp - 8]	      5880	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_1
0x4009177	      0xbe00000000	                              mov esi, 0	      5880	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_1
0x400917c	          0x4889c7	                            mov rdi, rax	      5880	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_1
0x400917f	      0xe837c4ffff	                call sym.d_append_string	      5880	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_1
0x4009184	      0xe997020000	                           jmp 0x4009420	      5881	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009189	        0x488b45f8	                mov rax, qword [rbp - 8]	      5884	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_2
0x400918d	      0xbe00000000	                              mov esi, 0	      5884	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_2
0x4009192	          0x4889c7	                            mov rdi, rax	      5884	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_2
0x4009195	      0xe821c4ffff	                call sym.d_append_string	      5884	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_2
0x400919a	      0xe981020000	                           jmp 0x4009420	      5885	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400919f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5888	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_3
0x40091a3	      0xbe00000000	                              mov esi, 0	      5888	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_3
0x40091a8	          0x4889c7	                            mov rdi, rax	      5888	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_3
0x40091ab	      0xe80bc4ffff	                call sym.d_append_string	      5888	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_3
0x40091b0	      0xe96b020000	                           jmp 0x4009420	      5889	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40091b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5891	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_4
0x40091b9	      0xbe00000000	                              mov esi, 0	      5891	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_4
0x40091be	          0x4889c7	                            mov rdi, rax	      5891	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_4
0x40091c1	      0xe8f5c3ffff	                call sym.d_append_string	      5891	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_4
0x40091c6	      0xe955020000	                           jmp 0x4009420	      5892	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40091cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5894	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_5
0x40091cf	      0xbe00000000	                              mov esi, 0	      5894	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_5
0x40091d4	          0x4889c7	                            mov rdi, rax	      5894	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_5
0x40091d7	      0xe8dfc3ffff	                call sym.d_append_string	      5894	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_5
0x40091dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x40091e0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x40091e4	          0x4885c0	                           test rax, rax	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x40091e7	     0xf842c020000	                            je 0x4009419	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x40091ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      5897	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_6
0x40091f1	      0xbe28000000	                           mov esi, 0x28	      5897	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_6
0x40091f6	          0x4889c7	                            mov rdi, rax	      5897	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_6
0x40091f9	      0xe808c3ffff	                  call sym.d_append_char	      5897	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_6
0x40091fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4009202	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4009206	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4009209	        0x488b45f8	                mov rax, qword [rbp - 8]	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x400920d	            0x89ce	                            mov esi, ecx	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x400920f	          0x4889c7	                            mov rdi, rax	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4009212	      0xe8e2f9ffff	                   call sym.d_print_comp	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4009217	        0x488b45f8	                mov rax, qword [rbp - 8]	      5899	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_8
0x400921b	      0xbe29000000	                           mov esi, 0x29	      5899	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_8
0x4009220	          0x4889c7	                            mov rdi, rax	      5899	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_8
0x4009223	      0xe8dec2ffff	                  call sym.d_append_char	      5899	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_8
0x4009228	      0xe9ec010000	                           jmp 0x4009419	      5901	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400922d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5903	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_9
0x4009231	      0xbe00000000	                              mov esi, 0	      5903	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_9
0x4009236	          0x4889c7	                            mov rdi, rax	      5903	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_9
0x4009239	      0xe87dc3ffff	                call sym.d_append_string	      5903	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_9
0x400923e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4009242	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4009246	          0x4885c0	                           test rax, rax	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4009249	     0xf84cd010000	                            je 0x400941c	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400924f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5906	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_10
0x4009253	      0xbe28000000	                           mov esi, 0x28	      5906	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_10
0x4009258	          0x4889c7	                            mov rdi, rax	      5906	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_10
0x400925b	      0xe8a6c2ffff	                  call sym.d_append_char	      5906	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_10
0x4009260	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4009264	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4009268	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x400926b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x400926f	            0x89ce	                            mov esi, ecx	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4009271	          0x4889c7	                            mov rdi, rax	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4009274	      0xe880f9ffff	                   call sym.d_print_comp	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4009279	        0x488b45f8	                mov rax, qword [rbp - 8]	      5908	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_12
0x400927d	      0xbe29000000	                           mov esi, 0x29	      5908	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_12
0x4009282	          0x4889c7	                            mov rdi, rax	      5908	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_12
0x4009285	      0xe87cc2ffff	                  call sym.d_append_char	      5908	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_12
0x400928a	      0xe98d010000	                           jmp 0x400941c	      5910	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400928f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5912	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_13
0x4009293	      0xbe20000000	                           mov esi, 0x20	      5912	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_13
0x4009298	          0x4889c7	                            mov rdi, rax	      5912	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_13
0x400929b	      0xe866c2ffff	                  call sym.d_append_char	      5912	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_13
0x40092a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40092a4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40092a8	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40092ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40092af	            0x89ce	                            mov esi, ecx	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40092b1	          0x4889c7	                            mov rdi, rax	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40092b4	      0xe840f9ffff	                   call sym.d_print_comp	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40092b9	      0xe962010000	                           jmp 0x4009420	      5914	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40092be	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40092c1	          0x83e004	                              and eax, 4	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40092c4	            0x85c0	                           test eax, eax	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40092c6	     0xf8553010000	                           jne 0x400941f	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40092cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5918	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_15
0x40092d0	      0xbe2a000000	                           mov esi, 0x2a	      5918	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_15
0x40092d5	          0x4889c7	                            mov rdi, rax	      5918	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_15
0x40092d8	      0xe829c2ffff	                  call sym.d_append_char	      5918	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_15
0x40092dd	      0xe93d010000	                           jmp 0x400941f	      5919	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40092e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5922	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_16
0x40092e6	      0xbe20000000	                           mov esi, 0x20	      5922	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_16
0x40092eb	          0x4889c7	                            mov rdi, rax	      5922	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_16
0x40092ee	      0xe813c2ffff	                  call sym.d_append_char	      5922	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_16
0x40092f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5925	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_17
0x40092f7	      0xbe26000000	                           mov esi, 0x26	      5925	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_17
0x40092fc	          0x4889c7	                            mov rdi, rax	      5925	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_17
0x40092ff	      0xe802c2ffff	                  call sym.d_append_char	      5925	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_17
0x4009304	      0xe917010000	                           jmp 0x4009420	      5926	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009309	        0x488b45f8	                mov rax, qword [rbp - 8]	      5928	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_18
0x400930d	      0xbe20000000	                           mov esi, 0x20	      5928	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_18
0x4009312	          0x4889c7	                            mov rdi, rax	      5928	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_18
0x4009315	      0xe8ecc1ffff	                  call sym.d_append_char	      5928	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_18
0x400931a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5931	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_19
0x400931e	      0xbe00000000	                              mov esi, 0	      5931	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_19
0x4009323	          0x4889c7	                            mov rdi, rax	      5931	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_19
0x4009326	      0xe890c2ffff	                call sym.d_append_string	      5931	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_19
0x400932b	      0xe9f0000000	                           jmp 0x4009420	      5932	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009330	        0x488b45f8	                mov rax, qword [rbp - 8]	      5934	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_20
0x4009334	      0xbe00000000	                              mov esi, 0	      5934	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_20
0x4009339	          0x4889c7	                            mov rdi, rax	      5934	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_20
0x400933c	      0xe87ac2ffff	                call sym.d_append_string	      5934	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_20
0x4009341	      0xe9da000000	                           jmp 0x4009420	      5935	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009346	        0x488b45f8	                mov rax, qword [rbp - 8]	      5937	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_21
0x400934a	      0xbe00000000	                              mov esi, 0	      5937	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_21
0x400934f	          0x4889c7	                            mov rdi, rax	      5937	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_21
0x4009352	      0xe864c2ffff	                call sym.d_append_string	      5937	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_21
0x4009357	      0xe9c4000000	                           jmp 0x4009420	      5938	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400935c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x4009360	          0x4889c7	                            mov rdi, rax	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x4009363	      0xe8e9c2ffff	                    call sym.d_last_char	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x4009368	            0x3c28	                            cmp al, 0x28	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x400936a	            0x7411	                            je 0x400937d	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x400936c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5941	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_23
0x4009370	      0xbe20000000	                           mov esi, 0x20	      5941	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_23
0x4009375	          0x4889c7	                            mov rdi, rax	      5941	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_23
0x4009378	      0xe889c1ffff	                  call sym.d_append_char	      5941	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_23
0x400937d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4009381	        0x488b5008	                mov rdx, qword [rax + 8]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4009385	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4009388	        0x488b45f8	                mov rax, qword [rbp - 8]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x400938c	            0x89ce	                            mov esi, ecx	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x400938e	          0x4889c7	                            mov rdi, rax	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4009391	      0xe863f8ffff	                   call sym.d_print_comp	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4009396	        0x488b45f8	                mov rax, qword [rbp - 8]	      5943	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_25
0x400939a	      0xbe00000000	                              mov esi, 0	      5943	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_25
0x400939f	          0x4889c7	                            mov rdi, rax	      5943	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_25
0x40093a2	      0xe814c2ffff	                call sym.d_append_string	      5943	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_25
0x40093a7	            0xeb77	                           jmp 0x4009420	      5944	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40093a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x40093ad	        0x488b5008	                mov rdx, qword [rax + 8]	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x40093b1	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x40093b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x40093b8	            0x89ce	                            mov esi, ecx	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x40093ba	          0x4889c7	                            mov rdi, rax	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x40093bd	      0xe837f8ffff	                   call sym.d_print_comp	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x40093c2	            0xeb5c	                           jmp 0x4009420	      5947	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40093c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5949	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_27
0x40093c8	      0xbe00000000	                              mov esi, 0	      5949	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_27
0x40093cd	          0x4889c7	                            mov rdi, rax	      5949	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_27
0x40093d0	      0xe8e6c1ffff	                call sym.d_append_string	      5949	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_27
0x40093d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40093d9	        0x488b5008	                mov rdx, qword [rax + 8]	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40093dd	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40093e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40093e4	            0x89ce	                            mov esi, ecx	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40093e6	          0x4889c7	                            mov rdi, rax	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40093e9	      0xe80bf8ffff	                   call sym.d_print_comp	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40093ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      5951	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_29
0x40093f2	      0xbe29000000	                           mov esi, 0x29	      5951	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_29
0x40093f7	          0x4889c7	                            mov rdi, rax	      5951	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_29
0x40093fa	      0xe807c1ffff	                  call sym.d_append_char	      5951	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_29
0x40093ff	            0xeb1f	                           jmp 0x4009420	      5952	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009401	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4009405	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4009408	        0x488b45f8	                mov rax, qword [rbp - 8]	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x400940c	            0x89ce	                            mov esi, ecx	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x400940e	          0x4889c7	                            mov rdi, rax	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4009411	      0xe8e3f7ffff	                   call sym.d_print_comp	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4009416	              0x90	                                     nop	      5958	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009417	            0xeb07	                           jmp 0x4009420	      5958	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009419	              0x90	                                     nop	      5901	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400941a	            0xeb04	                           jmp 0x4009420	      5901	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400941c	              0x90	                                     nop	      5910	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400941d	            0xeb01	                           jmp 0x4009420	      5910	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400941f	              0x90	                                     nop	      5919	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009420	              0xc9	                                   leave	      5960	cp-demangle.c	FUNCTION_90
0x4009421	              0xc3	                                     ret	      5960	cp-demangle.c	FUNCTION_90
d_make_extended_operator	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x4000464	              0x55	                                push rbp	      1112	cp-demangle.c	FUNCTION_9
0x4000465	          0x4889e5	                            mov rbp, rsp	      1112	cp-demangle.c	FUNCTION_9
0x4000468	        0x4883ec28	                           sub rsp, 0x28	      1112	cp-demangle.c	FUNCTION_9
0x400046c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1112	cp-demangle.c	FUNCTION_9
0x4000470	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1112	cp-demangle.c	FUNCTION_9
0x4000473	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1112	cp-demangle.c	FUNCTION_9
0x4000477	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1115	cp-demangle.c	FUNCTION_9	CALL_1
0x400047b	          0x4889c7	                            mov rdi, rax	      1115	cp-demangle.c	FUNCTION_9	CALL_1
0x400047e	      0xe874fdffff	                   call sym.d_make_empty	      1115	cp-demangle.c	FUNCTION_9	CALL_1
0x4000483	        0x488945f8	                mov qword [rbp - 8], rax	      1115	cp-demangle.c	FUNCTION_9	CALL_1
0x4000487	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x400048b	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x400048e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4000492	            0x89ce	                            mov esi, ecx	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4000494	          0x4889c7	                            mov rdi, rax	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4000497	      0xe800000000	                          call 0x400049c	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x400049c	            0x85c0	                           test eax, eax	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x400049e	            0x7507	                           jne 0x40004a7	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x40004a0	      0xb800000000	                              mov eax, 0	      1117	cp-demangle.c	FUNCTION_9	IF_1
0x40004a5	            0xeb04	                           jmp 0x40004ab	      1117	cp-demangle.c	FUNCTION_9	IF_1
0x40004a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	cp-demangle.c	FUNCTION_9
0x40004ab	              0xc9	                                   leave	      1119	cp-demangle.c	FUNCTION_9
0x40004ac	              0xc3	                                     ret	      1119	cp-demangle.c	FUNCTION_9
d_parmlist	IF,6:DO,0:functions,0:ELSE,0:FOR,0:CALL,3:SWITCH,0:WHILE,1	97
0x4003075	              0x55	                                push rbp	      2868	cp-demangle.c	FUNCTION_38
0x4003076	          0x4889e5	                            mov rbp, rsp	      2868	cp-demangle.c	FUNCTION_38
0x4003079	        0x4883ec40	                           sub rsp, 0x40	      2868	cp-demangle.c	FUNCTION_38
0x400307d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2868	cp-demangle.c	FUNCTION_38
0x4003081	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	cp-demangle.c	FUNCTION_38
0x400308a	        0x488945f8	                mov qword [rbp - 8], rax	      2868	cp-demangle.c	FUNCTION_38
0x400308e	            0x31c0	                            xor eax, eax	      2868	cp-demangle.c	FUNCTION_38
0x4003090	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2872	cp-demangle.c	FUNCTION_38
0x4003098	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2873	cp-demangle.c	FUNCTION_38
0x400309c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2873	cp-demangle.c	FUNCTION_38
0x40030a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x40030a4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x40030a8	           0xfb600	                   movzx eax, byte [rax]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x40030ab	          0x8845df	               mov byte [rbp - 0x21], al	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x40030ae	        0x807ddf00	                cmp byte [rbp - 0x21], 0	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40030b2	     0xf84a3000000	                            je 0x400315b	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40030b8	        0x807ddf45	            cmp byte [rbp - 0x21], 0x45 	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40030bc	     0xf8499000000	                            je 0x400315b	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40030c2	        0x807ddf2e	            cmp byte [rbp - 0x21], 0x2e 	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40030c6	     0xf848f000000	                            je 0x400315b	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40030cc	        0x807ddf52	            cmp byte [rbp - 0x21], 0x52 	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40030d0	            0x7406	                            je 0x40030d8	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40030d2	        0x807ddf4f	            cmp byte [rbp - 0x21], 0x4f 	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40030d6	            0x7513	                           jne 0x40030eb	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40030d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40030dc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40030e0	        0x4883c001	                              add rax, 1	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40030e4	           0xfb600	                   movzx eax, byte [rax]	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40030e7	            0x3c45	                            cmp al, 0x45	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40030e9	            0x746f	                            je 0x400315a	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40030eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x40030ef	          0x4889c7	                            mov rdi, rax	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x40030f2	      0xe800000000	                          call 0x40030f7	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x40030f7	        0x488945f0	             mov qword [rbp - 0x10], rax	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x40030fb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x4003100	            0x750a	                           jne 0x400310c	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x4003102	      0xb800000000	                              mov eax, 0	      2887	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x4003107	      0xe9be000000	                           jmp 0x40031ca	      2887	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x400310c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4003110	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4003114	      0xb900000000	                              mov ecx, 0	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4003119	      0xbe2e000000	                           mov esi, 0x2e	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x400311e	          0x4889c7	                            mov rdi, rax	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4003121	      0xe83ad1ffff	                    call sym.d_make_comp	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4003126	          0x4889c2	                            mov rdx, rax	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4003129	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x400312d	          0x488910	                    mov qword [rax], rdx	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4003130	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x4003134	          0x488b00	                    mov rax, qword [rax]	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x4003137	          0x4885c0	                           test rax, rax	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x400313a	            0x750a	                           jne 0x4003146	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x400313c	      0xb800000000	                              mov eax, 0	      2890	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x4003141	      0xe984000000	                           jmp 0x40031ca	      2890	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x4003146	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2891	cp-demangle.c	FUNCTION_38	WHILE_1
0x400314a	          0x488b00	                    mov rax, qword [rax]	      2891	cp-demangle.c	FUNCTION_38	WHILE_1
0x400314d	        0x4883c010	                           add rax, 0x10	      2891	cp-demangle.c	FUNCTION_38	WHILE_1
0x4003151	        0x488945e8	             mov qword [rbp - 0x18], rax	      2891	cp-demangle.c	FUNCTION_38	WHILE_1
0x4003155	      0xe946ffffff	                           jmp 0x40030a0	      2892	cp-demangle.c	FUNCTION_38	WHILE_1
0x400315a	              0x90	                                     nop	      2884	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x400315b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x400315f	          0x4885c0	                           test rax, rax	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4003162	            0x7507	                           jne 0x400316b	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4003164	      0xb800000000	                              mov eax, 0	      2898	cp-demangle.c	FUNCTION_38	IF_5
0x4003169	            0xeb5f	                           jmp 0x40031ca	      2898	cp-demangle.c	FUNCTION_38	IF_5
0x400316b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x400316f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x4003173	          0x4885c0	                           test rax, rax	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x4003176	            0x754e	                           jne 0x40031c6	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x4003178	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x400317c	        0x488b4008	                mov rax, qword [rax + 8]	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4003180	            0x8b00	                    mov eax, dword [rax]	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4003182	          0x83f827	                           cmp eax, 0x27	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4003185	            0x753f	                           jne 0x40031c6	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4003187	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x400318b	        0x488b4008	                mov rax, qword [rax + 8]	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x400318f	        0x488b4008	                mov rax, qword [rax + 8]	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4003193	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4003196	          0x83f809	                              cmp eax, 9	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4003199	            0x752b	                           jne 0x40031c6	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x400319b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x400319f	          0x8b5048	            mov edx, dword [rax + 0x48] 	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031a6	        0x488b4008	                mov rax, qword [rax + 8]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031aa	        0x488b4008	                mov rax, qword [rax + 8]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031ae	          0x8b4008	                mov eax, dword [rax + 8]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031b1	            0x29c2	                            sub edx, eax	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031b7	          0x895048	             mov dword [rax + 0x48], edx	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x40031ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x40031be	    0x48c740080000	                  mov qword [rax + 8], 0	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x40031c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2909	cp-demangle.c	FUNCTION_38
0x40031ca	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2910	cp-demangle.c	FUNCTION_38
0x40031ce	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2910	cp-demangle.c	FUNCTION_38
0x40031d7	            0x7405	                            je 0x40031de	      2910	cp-demangle.c	FUNCTION_38
0x40031d9	      0xe800000000	                          call 0x40031de	      2910	cp-demangle.c	FUNCTION_38
0x40031de	              0xc9	                                   leave	      2910	cp-demangle.c	FUNCTION_38
0x40031df	              0xc3	                                     ret	      2910	cp-demangle.c	FUNCTION_38
op_is_new_cast	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	33
0x40039be	              0x55	                                push rbp	      3236	cp-demangle.c	FUNCTION_50
0x40039bf	          0x4889e5	                            mov rbp, rsp	      3236	cp-demangle.c	FUNCTION_50
0x40039c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3236	cp-demangle.c	FUNCTION_50
0x40039c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3237	cp-demangle.c	FUNCTION_50
0x40039ca	        0x488b4008	                mov rax, qword [rax + 8]	      3237	cp-demangle.c	FUNCTION_50
0x40039ce	          0x488b00	                    mov rax, qword [rax]	      3237	cp-demangle.c	FUNCTION_50
0x40039d1	        0x488945f8	                mov qword [rbp - 8], rax	      3237	cp-demangle.c	FUNCTION_50
0x40039d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3238	cp-demangle.c	FUNCTION_50
0x40039d9	        0x4883c001	                              add rax, 1	      3238	cp-demangle.c	FUNCTION_50
0x40039dd	           0xfb600	                   movzx eax, byte [rax]	      3238	cp-demangle.c	FUNCTION_50
0x40039e0	            0x3c63	                            cmp al, 0x63	      3239	cp-demangle.c	FUNCTION_50
0x40039e2	            0x7533	                           jne 0x4003a17	      3239	cp-demangle.c	FUNCTION_50
0x40039e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3239	cp-demangle.c	FUNCTION_50
0x40039e8	           0xfb600	                   movzx eax, byte [rax]	      3239	cp-demangle.c	FUNCTION_50
0x40039eb	            0x3c73	                            cmp al, 0x73	      3239	cp-demangle.c	FUNCTION_50
0x40039ed	            0x7421	                            je 0x4003a10	      3239	cp-demangle.c	FUNCTION_50
0x40039ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      3239	cp-demangle.c	FUNCTION_50
0x40039f3	           0xfb600	                   movzx eax, byte [rax]	      3239	cp-demangle.c	FUNCTION_50
0x40039f6	            0x3c64	                            cmp al, 0x64	      3239	cp-demangle.c	FUNCTION_50
0x40039f8	            0x7416	                            je 0x4003a10	      3239	cp-demangle.c	FUNCTION_50
0x40039fa	        0x488b45f8	                mov rax, qword [rbp - 8]	      3240	cp-demangle.c	FUNCTION_50
0x40039fe	           0xfb600	                   movzx eax, byte [rax]	      3240	cp-demangle.c	FUNCTION_50
0x4003a01	            0x3c63	                            cmp al, 0x63	      3240	cp-demangle.c	FUNCTION_50
0x4003a03	            0x740b	                            je 0x4003a10	      3240	cp-demangle.c	FUNCTION_50
0x4003a05	        0x488b45f8	                mov rax, qword [rbp - 8]	      3240	cp-demangle.c	FUNCTION_50
0x4003a09	           0xfb600	                   movzx eax, byte [rax]	      3240	cp-demangle.c	FUNCTION_50
0x4003a0c	            0x3c72	                            cmp al, 0x72	      3240	cp-demangle.c	FUNCTION_50
0x4003a0e	            0x7507	                           jne 0x4003a17	      3240	cp-demangle.c	FUNCTION_50
0x4003a10	      0xb801000000	                              mov eax, 1	      3239	cp-demangle.c	FUNCTION_50
0x4003a15	            0xeb05	                           jmp 0x4003a1c	      3239	cp-demangle.c	FUNCTION_50
0x4003a17	      0xb800000000	                              mov eax, 0	      3239	cp-demangle.c	FUNCTION_50
0x4003a1c	              0x5d	                                 pop rbp	      3241	cp-demangle.c	FUNCTION_50
0x4003a1d	              0xc3	                                     ret	      3241	cp-demangle.c	FUNCTION_50
d_get_saved_scope	IF,1:DO,0:functions,0:ELSE,0:FOR,1:CALL,0:SWITCH,0:WHILE,0	30
0x4005d7a	              0x55	                                push rbp	      4544	cp-demangle.c	FUNCTION_84
0x4005d7b	          0x4889e5	                            mov rbp, rsp	      4544	cp-demangle.c	FUNCTION_84
0x4005d7e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4544	cp-demangle.c	FUNCTION_84
0x4005d82	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4544	cp-demangle.c	FUNCTION_84
0x4005d86	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005d8d	            0xeb3f	                           jmp 0x4005dce	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005d8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005d93	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005d9a	          0x8b55fc	                mov edx, dword [rbp - 4]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005d9d	          0x4863d2	                         movsxd rdx, edx	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005da0	        0x48c1e204	                              shl rdx, 4	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005da4	          0x4801d0	                            add rax, rdx	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005da7	          0x488b00	                    mov rax, qword [rax]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005daa	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005dae	            0x751a	                           jne 0x4005dca	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005db0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4549	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005db4	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      4549	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005dbb	          0x8b55fc	                mov edx, dword [rbp - 4]	      4549	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005dbe	          0x4863d2	                         movsxd rdx, edx	      4549	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005dc1	        0x48c1e204	                              shl rdx, 4	      4549	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005dc5	          0x4801d0	                            add rax, rdx	      4549	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005dc8	            0xeb18	                           jmp 0x4005de2	      4549	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005dca	        0x8345fc01	                  add dword [rbp - 4], 1	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005dce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005dd2	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005dd8	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005ddb	            0x7fb2	                            jg 0x4005d8f	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005ddd	      0xb800000000	                              mov eax, 0	      4551	cp-demangle.c	FUNCTION_84
0x4005de2	              0x5d	                                 pop rbp	      4552	cp-demangle.c	FUNCTION_84
0x4005de3	              0xc3	                                     ret	      4552	cp-demangle.c	FUNCTION_84
d_name	IF,6:DO,0:functions,0:ELSE,2:FOR,0:CALL,19:SWITCH,1:WHILE,0	135
0x4000a84	              0x55	                                push rbp	      1401	cp-demangle.c	FUNCTION_20
0x4000a85	          0x4889e5	                            mov rbp, rsp	      1401	cp-demangle.c	FUNCTION_20
0x4000a88	              0x53	                                push rbx	      1401	cp-demangle.c	FUNCTION_20
0x4000a89	        0x4883ec28	                           sub rsp, 0x28	      1401	cp-demangle.c	FUNCTION_20
0x4000a8d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1401	cp-demangle.c	FUNCTION_20
0x4000a91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1402	cp-demangle.c	FUNCTION_20	CALL_1
0x4000a95	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1402	cp-demangle.c	FUNCTION_20	CALL_1
0x4000a99	           0xfb600	                   movzx eax, byte [rax]	      1402	cp-demangle.c	FUNCTION_20	CALL_1
0x4000a9c	          0x8845e3	               mov byte [rbp - 0x1d], al	      1402	cp-demangle.c	FUNCTION_20	CALL_1
0x4000a9f	         0xfbe45e3	            movsx eax, byte [rbp - 0x1d]	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000aa3	          0x83f853	                           cmp eax, 0x53	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000aa6	            0x7451	                            je 0x4000af9	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000aa8	          0x83f853	                           cmp eax, 0x53	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000aab	            0x7f0a	                            jg 0x4000ab7	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000aad	          0x83f84e	                           cmp eax, 0x4e	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000ab0	            0x7414	                            je 0x4000ac6	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000ab2	      0xe943010000	                           jmp 0x4000bfa	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000ab7	          0x83f855	                           cmp eax, 0x55	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000aba	            0x742c	                            je 0x4000ae8	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000abc	          0x83f85a	                           cmp eax, 0x5a	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000abf	            0x7416	                            je 0x4000ad7	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000ac1	      0xe934010000	                           jmp 0x4000bfa	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000ac6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1408	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_2
0x4000aca	          0x4889c7	                            mov rdi, rax	      1408	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_2
0x4000acd	      0xe898010000	                  call sym.d_nested_name	      1408	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_2
0x4000ad2	      0xe98c010000	                           jmp 0x4000c63	      1408	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_2
0x4000ad7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1411	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_3
0x4000adb	          0x4889c7	                            mov rdi, rax	      1411	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_3
0x4000ade	      0xe86a3a0000	                   call sym.d_local_name	      1411	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_3
0x4000ae3	      0xe97b010000	                           jmp 0x4000c63	      1411	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_3
0x4000ae8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4000aec	          0x4889c7	                            mov rdi, rax	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4000aef	      0xe888040000	             call sym.d_unqualified_name	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4000af4	      0xe96a010000	                           jmp 0x4000c63	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4000af9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4000afd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4000b01	        0x4883c001	                              add rax, 1	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4000b05	           0xfb600	                   movzx eax, byte [rax]	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4000b08	            0x3c74	                            cmp al, 0x74	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4000b0a	            0x741e	                            je 0x4000b2a	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4000b0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4000b10	      0xbe00000000	                              mov esi, 0	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4000b15	          0x4889c7	                            mov rdi, rax	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4000b18	      0xe8d8400000	                 call sym.d_substitution	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4000b1d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4000b21	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1423	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1
0x4000b28	            0xeb6c	                           jmp 0x4000b96	      1423	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1
0x4000b2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4000b2e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4000b32	        0x488d5002	                      lea rdx, [rax + 2]	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4000b36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4000b3a	        0x48895018	             mov qword [rax + 0x18], rdx	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4000b3e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b42	          0x4889c7	                            mov rdi, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b45	      0xe832040000	             call sym.d_unqualified_name	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b4a	          0x4889c3	                            mov rbx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b51	      0xba03000000	                              mov edx, 3	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b56	      0xbe00000000	                              mov esi, 0	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b5b	          0x4889c7	                            mov rdi, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b5e	      0xe823f8ffff	                    call sym.d_make_name	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b63	          0x4889c2	                            mov rdx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b6a	          0x4889d9	                            mov rcx, rbx	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b6d	      0xbe01000000	                              mov esi, 1	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b72	          0x4889c7	                            mov rdi, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b75	      0xe8e6f6ffff	                    call sym.d_make_comp	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b7a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4000b7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4000b82	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4000b85	          0x8d5003	                      lea edx, [rax + 3]	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4000b88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4000b8c	          0x895048	             mov dword [rax + 0x48], edx	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4000b8f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1432	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4000b96	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4000b9a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4000b9e	           0xfb600	                   movzx eax, byte [rax]	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4000ba1	            0x3c49	                            cmp al, 0x49	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4000ba3	            0x754f	                           jne 0x4000bf4	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4000ba5	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1447	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3
0x4000ba9	            0x7521	                           jne 0x4000bcc	      1447	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3
0x4000bab	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4000baf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4000bb3	          0x4889d6	                            mov rsi, rdx	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4000bb6	          0x4889c7	                            mov rdi, rax	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4000bb9	      0xe8cd3f0000	             call sym.d_add_substitution	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4000bbe	            0x85c0	                           test eax, eax	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4000bc0	            0x750a	                           jne 0x4000bcc	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4000bc2	      0xb800000000	                              mov eax, 0	      1450	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4
0x4000bc7	      0xe997000000	                           jmp 0x4000c63	      1450	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4
0x4000bcc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000bd0	          0x4889c7	                            mov rdi, rax	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000bd3	      0xe8872a0000	                call sym.d_template_args	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000bd8	          0x4889c1	                            mov rcx, rax	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000bdb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000bdf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000be3	      0xbe04000000	                              mov esi, 4	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000be8	          0x4889c7	                            mov rdi, rax	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000beb	      0xe870f6ffff	                    call sym.d_make_comp	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000bf0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4000bf4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1456	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000bf8	            0xeb69	                           jmp 0x4000c63	      1456	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000bfa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4000bfe	          0x4889c7	                            mov rdi, rax	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4000c01	      0xe876030000	             call sym.d_unqualified_name	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4000c06	        0x488945e8	             mov qword [rbp - 0x18], rax	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4000c0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4000c0e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4000c12	           0xfb600	                   movzx eax, byte [rax]	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4000c15	            0x3c49	                            cmp al, 0x49	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4000c17	            0x7546	                           jne 0x4000c5f	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4000c19	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4000c1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4000c21	          0x4889d6	                            mov rsi, rdx	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4000c24	          0x4889c7	                            mov rdi, rax	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4000c27	      0xe85f3f0000	             call sym.d_add_substitution	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4000c2c	            0x85c0	                           test eax, eax	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4000c2e	            0x7507	                           jne 0x4000c37	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4000c30	      0xb800000000	                              mov eax, 0	      1468	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6
0x4000c35	            0xeb2c	                           jmp 0x4000c63	      1468	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6
0x4000c37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c3b	          0x4889c7	                            mov rdi, rax	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c3e	      0xe81c2a0000	                call sym.d_template_args	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c43	          0x4889c1	                            mov rcx, rax	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c46	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c4e	      0xbe04000000	                              mov esi, 4	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c53	          0x4889c7	                            mov rdi, rax	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c56	      0xe805f6ffff	                    call sym.d_make_comp	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c5b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4000c5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1472	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4000c63	        0x4883c428	                           add rsp, 0x28	      1474	cp-demangle.c	FUNCTION_20
0x4000c67	              0x5b	                                 pop rbx	      1474	cp-demangle.c	FUNCTION_20
0x4000c68	              0x5d	                                 pop rbp	      1474	cp-demangle.c	FUNCTION_20
0x4000c69	              0xc3	                                     ret	      1474	cp-demangle.c	FUNCTION_20
d_growable_string_init	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x4004f7c	              0x55	                                push rbp	      3955	cp-demangle.c	FUNCTION_63
0x4004f7d	          0x4889e5	                            mov rbp, rsp	      3955	cp-demangle.c	FUNCTION_63
0x4004f80	        0x4883ec10	                           sub rsp, 0x10	      3955	cp-demangle.c	FUNCTION_63
0x4004f84	        0x48897df8	                mov qword [rbp - 8], rdi	      3955	cp-demangle.c	FUNCTION_63
0x4004f88	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3955	cp-demangle.c	FUNCTION_63
0x4004f8c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3956	cp-demangle.c	FUNCTION_63
0x4004f90	    0x48c700000000	                      mov qword [rax], 0	      3956	cp-demangle.c	FUNCTION_63
0x4004f97	        0x488b45f8	                mov rax, qword [rbp - 8]	      3957	cp-demangle.c	FUNCTION_63
0x4004f9b	    0x48c740080000	                  mov qword [rax + 8], 0	      3957	cp-demangle.c	FUNCTION_63
0x4004fa3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3958	cp-demangle.c	FUNCTION_63
0x4004fa7	    0x48c740100000	               mov qword [rax + 0x10], 0	      3958	cp-demangle.c	FUNCTION_63
0x4004faf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3959	cp-demangle.c	FUNCTION_63
0x4004fb3	    0xc74018000000	               mov dword [rax + 0x18], 0	      3959	cp-demangle.c	FUNCTION_63
0x4004fba	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3961	cp-demangle.c	FUNCTION_63	IF_1
0x4004fbf	            0x7413	                            je 0x4004fd4	      3961	cp-demangle.c	FUNCTION_63	IF_1
0x4004fc1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3962	cp-demangle.c	FUNCTION_63	CALL_1
0x4004fc5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3962	cp-demangle.c	FUNCTION_63	CALL_1
0x4004fc9	          0x4889d6	                            mov rsi, rdx	      3962	cp-demangle.c	FUNCTION_63	CALL_1
0x4004fcc	          0x4889c7	                            mov rdi, rax	      3962	cp-demangle.c	FUNCTION_63	CALL_1
0x4004fcf	      0xe803000000	       call sym.d_growable_string_resize	      3962	cp-demangle.c	FUNCTION_63	CALL_1
0x4004fd4	              0x90	                                     nop	      3963	cp-demangle.c	FUNCTION_63
0x4004fd5	              0xc9	                                   leave	      3963	cp-demangle.c	FUNCTION_63
0x4004fd6	              0xc3	                                     ret	      3963	cp-demangle.c	FUNCTION_63
d_demangle_callback	IF,4:DO,0:functions,0:ELSE,2:FOR,0:CALL,12:SWITCH,1:WHILE,0	251
0x40099bf	              0x55	                                push rbp	      6201	cp-demangle.c	FUNCTION_96
0x40099c0	          0x4889e5	                            mov rbp, rsp	      6201	cp-demangle.c	FUNCTION_96
0x40099c3	            0x4157	                                push r15	      6201	cp-demangle.c	FUNCTION_96
0x40099c5	            0x4156	                                push r14	      6201	cp-demangle.c	FUNCTION_96
0x40099c7	            0x4155	                                push r13	      6201	cp-demangle.c	FUNCTION_96
0x40099c9	            0x4154	                                push r12	      6201	cp-demangle.c	FUNCTION_96
0x40099cb	              0x53	                                push rbx	      6201	cp-demangle.c	FUNCTION_96
0x40099cc	    0x4881ece80000	                           sub rsp, 0xe8	      6201	cp-demangle.c	FUNCTION_96
0x40099d3	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      6201	cp-demangle.c	FUNCTION_96
0x40099da	    0x89b534ffffff	             mov dword [rbp - 0xcc], esi	      6201	cp-demangle.c	FUNCTION_96
0x40099e0	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      6201	cp-demangle.c	FUNCTION_96
0x40099e7	    0x48898d20ffff	             mov qword [rbp - 0xe0], rcx	      6201	cp-demangle.c	FUNCTION_96
0x40099ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      6201	cp-demangle.c	FUNCTION_96
0x40099f7	        0x488945c8	             mov qword [rbp - 0x38], rax	      6201	cp-demangle.c	FUNCTION_96
0x40099fb	            0x31c0	                            xor eax, eax	      6201	cp-demangle.c	FUNCTION_96
0x40099fd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a04	           0xfb600	                   movzx eax, byte [rax]	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a07	            0x3c5f	                            cmp al, 0x5f	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a09	            0x7521	                           jne 0x4009a2c	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a0b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a12	        0x4883c001	                              add rax, 1	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a16	           0xfb600	                   movzx eax, byte [rax]	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a19	            0x3c5a	                            cmp al, 0x5a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a1b	            0x750f	                           jne 0x4009a2c	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009a1d	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4009a27	      0xe9d4000000	                           jmp 0x4009b00	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4009a2c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009a33	      0xba08000000	                              mov edx, 8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009a38	      0xbe00000000	                              mov esi, 0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009a3d	          0x4889c7	                            mov rdi, rax	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009a40	      0xe800000000	                          call 0x4009a45	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009a45	            0x85c0	                           test eax, eax	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009a47	     0xf8592000000	                           jne 0x4009adf	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009a4d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a54	        0x4883c008	                              add rax, 8	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a58	           0xfb600	                   movzx eax, byte [rax]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a5b	            0x3c2e	                            cmp al, 0x2e	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a5d	            0x7424	                            je 0x4009a83	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a5f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a66	        0x4883c008	                              add rax, 8	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a6a	           0xfb600	                   movzx eax, byte [rax]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a6d	            0x3c5f	                            cmp al, 0x5f	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a6f	            0x7412	                            je 0x4009a83	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a71	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a78	        0x4883c008	                              add rax, 8	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a7c	           0xfb600	                   movzx eax, byte [rax]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a7f	            0x3c24	                            cmp al, 0x24	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a81	            0x755c	                           jne 0x4009adf	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a83	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a8a	        0x4883c009	                              add rax, 9	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a8e	           0xfb600	                   movzx eax, byte [rax]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a91	            0x3c44	                            cmp al, 0x44	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a93	            0x7412	                            je 0x4009aa7	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a95	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009a9c	        0x4883c009	                              add rax, 9	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009aa0	           0xfb600	                   movzx eax, byte [rax]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009aa3	            0x3c49	                            cmp al, 0x49	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009aa5	            0x7538	                           jne 0x4009adf	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009aa7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009aae	        0x4883c00a	                            add rax, 0xa	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ab2	           0xfb600	                   movzx eax, byte [rax]	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ab5	            0x3c5f	                            cmp al, 0x5f	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ab7	            0x7526	                           jne 0x4009adf	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ab9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ac0	        0x4883c009	                              add rax, 9	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ac4	           0xfb600	                   movzx eax, byte [rax]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ac7	            0x3c49	                            cmp al, 0x49	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ac9	            0x7507	                           jne 0x4009ad2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009acb	      0xb802000000	                              mov eax, 2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ad0	            0xeb05	                           jmp 0x4009ad7	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ad2	      0xb803000000	                              mov eax, 3	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009ad7	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009add	            0xeb21	                           jmp 0x4009b00	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009adf	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009ae5	          0x83e010	                           and eax, 0x10	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009ae8	            0x85c0	                           test eax, eax	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009aea	            0x750a	                           jne 0x4009af6	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009aec	      0xb800000000	                              mov eax, 0	      6224	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009af1	      0xe9c5020000	                           jmp 0x4009dbb	      6224	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009af6	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      6225	cp-demangle.c	FUNCTION_96	ELSE_2
0x4009b00	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b07	          0x4889c7	                            mov rdi, rax	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b0a	      0xe800000000	                          call 0x4009b0f	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b0f	          0x4889c7	                            mov rdi, rax	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b12	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b19	    0x8bb534ffffff	             mov esi, dword [rbp - 0xcc]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b1f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b26	          0x4889d1	                            mov rcx, rdx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b29	          0x4889fa	                            mov rdx, rdi	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b2c	          0x4889c7	                            mov rdi, rax	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b2f	      0xe800000000	                          call 0x4009b34	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009b34	          0x4889e0	                            mov rax, rsp	      6230	cp-demangle.c	FUNCTION_96
0x4009b37	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      6230	cp-demangle.c	FUNCTION_96
0x4009b3e	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	      6232	cp-demangle.c	FUNCTION_96
0x4009b41	          0x4863c1	                         movsxd rax, ecx	      6232	cp-demangle.c	FUNCTION_96
0x4009b44	        0x4883e801	                              sub rax, 1	      6232	cp-demangle.c	FUNCTION_96
0x4009b48	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      6232	cp-demangle.c	FUNCTION_96
0x4009b4f	          0x4863c1	                         movsxd rax, ecx	      6232	cp-demangle.c	FUNCTION_96
0x4009b52	          0x4989c6	                            mov r14, rax	      6232	cp-demangle.c	FUNCTION_96
0x4009b55	    0x41bf00000000	                             mov r15d, 0	      6232	cp-demangle.c	FUNCTION_96
0x4009b5b	    0x4969d7c00000	                     imul rdx, r15, 0xc0	      6232	cp-demangle.c	FUNCTION_96
0x4009b62	        0x496bc600	                        imul rax, r14, 0	      6232	cp-demangle.c	FUNCTION_96
0x4009b66	        0x488d3402	                    lea rsi, [rdx + rax]	      6232	cp-demangle.c	FUNCTION_96
0x4009b6a	      0xb8c0000000	                           mov eax, 0xc0	      6232	cp-demangle.c	FUNCTION_96
0x4009b6f	          0x49f7e6	                                 mul r14	      6232	cp-demangle.c	FUNCTION_96
0x4009b72	          0x4801d6	                            add rsi, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009b75	          0x4889f2	                            mov rdx, rsi	      6232	cp-demangle.c	FUNCTION_96
0x4009b78	          0x4863d1	                         movsxd rdx, ecx	      6232	cp-demangle.c	FUNCTION_96
0x4009b7b	          0x4889d0	                            mov rax, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009b7e	          0x4801c0	                            add rax, rax	      6232	cp-demangle.c	FUNCTION_96
0x4009b81	          0x4801d0	                            add rax, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009b84	        0x48c1e003	                              shl rax, 3	      6232	cp-demangle.c	FUNCTION_96
0x4009b88	          0x4863c1	                         movsxd rax, ecx	      6232	cp-demangle.c	FUNCTION_96
0x4009b8b	          0x4989c4	                            mov r12, rax	      6232	cp-demangle.c	FUNCTION_96
0x4009b8e	    0x41bd00000000	                             mov r13d, 0	      6232	cp-demangle.c	FUNCTION_96
0x4009b94	    0x4969d5c00000	                     imul rdx, r13, 0xc0	      6232	cp-demangle.c	FUNCTION_96
0x4009b9b	        0x496bc400	                        imul rax, r12, 0	      6232	cp-demangle.c	FUNCTION_96
0x4009b9f	        0x488d3402	                    lea rsi, [rdx + rax]	      6232	cp-demangle.c	FUNCTION_96
0x4009ba3	      0xb8c0000000	                           mov eax, 0xc0	      6232	cp-demangle.c	FUNCTION_96
0x4009ba8	          0x49f7e4	                                 mul r12	      6232	cp-demangle.c	FUNCTION_96
0x4009bab	          0x4801d6	                            add rsi, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009bae	          0x4889f2	                            mov rdx, rsi	      6232	cp-demangle.c	FUNCTION_96
0x4009bb1	          0x4863d1	                         movsxd rdx, ecx	      6232	cp-demangle.c	FUNCTION_96
0x4009bb4	          0x4889d0	                            mov rax, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009bb7	          0x4801c0	                            add rax, rax	      6232	cp-demangle.c	FUNCTION_96
0x4009bba	          0x4801d0	                            add rax, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009bbd	        0x48c1e003	                              shl rax, 3	      6232	cp-demangle.c	FUNCTION_96
0x4009bc1	        0x488d5007	                      lea rdx, [rax + 7]	      6232	cp-demangle.c	FUNCTION_96
0x4009bc5	      0xb810000000	                           mov eax, 0x10	      6232	cp-demangle.c	FUNCTION_96
0x4009bca	        0x4883e801	                              sub rax, 1	      6232	cp-demangle.c	FUNCTION_96
0x4009bce	          0x4801d0	                            add rax, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009bd1	      0xbb10000000	                           mov ebx, 0x10	      6232	cp-demangle.c	FUNCTION_96
0x4009bd6	      0xba00000000	                              mov edx, 0	      6232	cp-demangle.c	FUNCTION_96
0x4009bdb	          0x48f7f3	                                 div rbx	      6232	cp-demangle.c	FUNCTION_96
0x4009bde	        0x486bc010	                     imul rax, rax, 0x10	      6232	cp-demangle.c	FUNCTION_96
0x4009be2	          0x4829c4	                            sub rsp, rax	      6232	cp-demangle.c	FUNCTION_96
0x4009be5	          0x4889e0	                            mov rax, rsp	      6232	cp-demangle.c	FUNCTION_96
0x4009be8	        0x4883c007	                              add rax, 7	      6232	cp-demangle.c	FUNCTION_96
0x4009bec	        0x48c1e803	                              shr rax, 3	      6232	cp-demangle.c	FUNCTION_96
0x4009bf0	        0x48c1e003	                              shl rax, 3	      6232	cp-demangle.c	FUNCTION_96
0x4009bf4	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      6232	cp-demangle.c	FUNCTION_96
0x4009bfb	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6233	cp-demangle.c	FUNCTION_96
0x4009bfe	          0x4863d0	                         movsxd rdx, eax	      6233	cp-demangle.c	FUNCTION_96
0x4009c01	        0x4883ea01	                              sub rdx, 1	      6233	cp-demangle.c	FUNCTION_96
0x4009c05	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      6233	cp-demangle.c	FUNCTION_96
0x4009c0c	          0x4863d0	                         movsxd rdx, eax	      6233	cp-demangle.c	FUNCTION_96
0x4009c0f	    0x48899500ffff	            mov qword [rbp - 0x100], rdx	      6233	cp-demangle.c	FUNCTION_96
0x4009c16	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      6233	cp-demangle.c	FUNCTION_96
0x4009c21	          0x4863d0	                         movsxd rdx, eax	      6233	cp-demangle.c	FUNCTION_96
0x4009c24	    0x488995f0feff	            mov qword [rbp - 0x110], rdx	      6233	cp-demangle.c	FUNCTION_96
0x4009c2b	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	      6233	cp-demangle.c	FUNCTION_96
0x4009c36	            0x4898	                                    cdqe	      6233	cp-demangle.c	FUNCTION_96
0x4009c38	        0x48c1e003	                              shl rax, 3	      6233	cp-demangle.c	FUNCTION_96
0x4009c3c	        0x488d5007	                      lea rdx, [rax + 7]	      6233	cp-demangle.c	FUNCTION_96
0x4009c40	      0xb810000000	                           mov eax, 0x10	      6233	cp-demangle.c	FUNCTION_96
0x4009c45	        0x4883e801	                              sub rax, 1	      6233	cp-demangle.c	FUNCTION_96
0x4009c49	          0x4801d0	                            add rax, rdx	      6233	cp-demangle.c	FUNCTION_96
0x4009c4c	      0xbb10000000	                           mov ebx, 0x10	      6233	cp-demangle.c	FUNCTION_96
0x4009c51	      0xba00000000	                              mov edx, 0	      6233	cp-demangle.c	FUNCTION_96
0x4009c56	          0x48f7f3	                                 div rbx	      6233	cp-demangle.c	FUNCTION_96
0x4009c59	        0x486bc010	                     imul rax, rax, 0x10	      6233	cp-demangle.c	FUNCTION_96
0x4009c5d	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x4009c60	          0x4889e0	                            mov rax, rsp	      6233	cp-demangle.c	FUNCTION_96
0x4009c63	        0x4883c007	                              add rax, 7	      6233	cp-demangle.c	FUNCTION_96
0x4009c67	        0x48c1e803	                              shr rax, 3	      6233	cp-demangle.c	FUNCTION_96
0x4009c6b	        0x48c1e003	                              shl rax, 3	      6233	cp-demangle.c	FUNCTION_96
0x4009c6f	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      6233	cp-demangle.c	FUNCTION_96
0x4009c76	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      6235	cp-demangle.c	FUNCTION_96
0x4009c7d	        0x48894590	             mov qword [rbp - 0x70], rax	      6235	cp-demangle.c	FUNCTION_96
0x4009c81	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6236	cp-demangle.c	FUNCTION_96
0x4009c88	        0x488945a0	             mov qword [rbp - 0x60], rax	      6236	cp-demangle.c	FUNCTION_96
0x4009c8c	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009c92	          0x83f801	                              cmp eax, 1	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009c95	            0x742b	                            je 0x4009cc2	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009c97	          0x83f801	                              cmp eax, 1	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009c9a	            0x720b	                            jb 0x4009ca7	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009c9c	          0x83f803	                              cmp eax, 3	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009c9f	     0xf87a8000000	                            ja 0x4009d4d	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009ca5	            0xeb38	                           jmp 0x4009cdf	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009ca7	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cae	          0x4889c7	                            mov rdi, rax	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cb1	      0xe800000000	                          call 0x4009cb6	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cb6	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cbd	      0xe990000000	                           jmp 0x4009d52	      6246	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cc2	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cc9	      0xbe01000000	                              mov esi, 1	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cce	          0x4889c7	                            mov rdi, rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cd1	      0xe800000000	                          call 0x4009cd6	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cd6	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cdd	            0xeb73	                           jmp 0x4009d52	      6249	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009cdf	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4009ce3	        0x4883c00b	                            add rax, 0xb	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4009ce7	        0x48894588	             mov qword [rbp - 0x78], rax	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4009ceb	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009cef	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009cf6	          0x4889d6	                            mov rsi, rdx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009cf9	          0x4889c7	                            mov rdi, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009cfc	      0xe80966ffff	   call sym.d_make_demangle_mangled_name	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d01	          0x4889c2	                            mov rdx, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d04	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 2	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d0b	            0x7507	                           jne 0x4009d14	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d0d	      0xbe43000000	                           mov esi, 0x43	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d12	            0xeb05	                           jmp 0x4009d19	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d14	      0xbe44000000	                           mov esi, 0x44	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d19	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d20	      0xb900000000	                              mov ecx, 0	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d25	          0x4889c7	                            mov rdi, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d28	      0xe83365ffff	                    call sym.d_make_comp	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d2d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009d34	        0x488b5d88	             mov rbx, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009d38	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009d3c	          0x4889c7	                            mov rdi, rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009d3f	      0xe800000000	                          call 0x4009d44	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009d44	          0x4801d8	                            add rax, rbx	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009d47	        0x48894588	             mov qword [rbp - 0x78], rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009d4b	            0xeb05	                           jmp 0x4009d52	      6260	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009d4d	      0xe800000000	                          call 0x4009d52	      6262	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_10
0x4009d52	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d58	          0x83e001	                              and eax, 1	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d5b	            0x85c0	                           test eax, eax	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d5d	            0x7416	                            je 0x4009d75	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d5f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d63	           0xfb600	                   movzx eax, byte [rax]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d66	            0x84c0	                             test al, al	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d68	            0x740b	                            je 0x4009d75	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009d6a	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      6270	cp-demangle.c	FUNCTION_96	IF_4
0x4009d75	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      6278	cp-demangle.c	FUNCTION_96
0x4009d7d	            0x7424	                            je 0x4009da3	      6278	cp-demangle.c	FUNCTION_96
0x4009d7f	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      6278	cp-demangle.c	FUNCTION_96
0x4009d86	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      6278	cp-demangle.c	FUNCTION_96
0x4009d8d	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      6278	cp-demangle.c	FUNCTION_96
0x4009d94	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      6278	cp-demangle.c	FUNCTION_96
0x4009d9a	            0x89c7	                            mov edi, eax	      6278	cp-demangle.c	FUNCTION_96
0x4009d9c	      0xe800000000	                          call 0x4009da1	      6278	cp-demangle.c	FUNCTION_96
0x4009da1	            0xeb05	                           jmp 0x4009da8	      6278	cp-demangle.c	FUNCTION_96
0x4009da3	      0xb800000000	                              mov eax, 0	      6278	cp-demangle.c	FUNCTION_96
0x4009da8	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      6276	cp-demangle.c	FUNCTION_96
0x4009dae	    0x488ba518ffff	             mov rsp, qword [rbp - 0xe8]	      6276	cp-demangle.c	FUNCTION_96
0x4009db5	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      6281	cp-demangle.c	FUNCTION_96
0x4009dbb	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      6282	cp-demangle.c	FUNCTION_96
0x4009dbf	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6282	cp-demangle.c	FUNCTION_96
0x4009dc8	            0x7405	                            je 0x4009dcf	      6282	cp-demangle.c	FUNCTION_96
0x4009dca	      0xe800000000	                          call 0x4009dcf	      6282	cp-demangle.c	FUNCTION_96
0x4009dcf	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6282	cp-demangle.c	FUNCTION_96
0x4009dd3	              0x5b	                                 pop rbx	      6282	cp-demangle.c	FUNCTION_96
0x4009dd4	            0x415c	                                 pop r12	      6282	cp-demangle.c	FUNCTION_96
0x4009dd6	            0x415d	                                 pop r13	      6282	cp-demangle.c	FUNCTION_96
0x4009dd8	            0x415e	                                 pop r14	      6282	cp-demangle.c	FUNCTION_96
0x4009dda	            0x415f	                                 pop r15	      6282	cp-demangle.c	FUNCTION_96
0x4009ddc	              0x5d	                                 pop rbp	      6282	cp-demangle.c	FUNCTION_96
0x4009ddd	              0xc3	                                     ret	      6282	cp-demangle.c	FUNCTION_96
d_make_default_arg	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	23
0x40004ad	              0x55	                                push rbp	      1124	cp-demangle.c	FUNCTION_10
0x40004ae	          0x4889e5	                            mov rbp, rsp	      1124	cp-demangle.c	FUNCTION_10
0x40004b1	        0x4883ec28	                           sub rsp, 0x28	      1124	cp-demangle.c	FUNCTION_10
0x40004b5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1124	cp-demangle.c	FUNCTION_10
0x40004b9	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1124	cp-demangle.c	FUNCTION_10
0x40004bc	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1124	cp-demangle.c	FUNCTION_10
0x40004c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1125	cp-demangle.c	FUNCTION_10	CALL_1
0x40004c4	          0x4889c7	                            mov rdi, rax	      1125	cp-demangle.c	FUNCTION_10	CALL_1
0x40004c7	      0xe82bfdffff	                   call sym.d_make_empty	      1125	cp-demangle.c	FUNCTION_10	CALL_1
0x40004cc	        0x488945f8	                mov qword [rbp - 8], rax	      1125	cp-demangle.c	FUNCTION_10	CALL_1
0x40004d0	      0x48837df800	                  cmp qword [rbp - 8], 0	      1126	cp-demangle.c	FUNCTION_10	IF_1
0x40004d5	            0x7420	                            je 0x40004f7	      1126	cp-demangle.c	FUNCTION_10	IF_1
0x40004d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1128	cp-demangle.c	FUNCTION_10	IF_1
0x40004db	    0xc70046000000	                   mov dword [rax], 0x46	      1128	cp-demangle.c	FUNCTION_10	IF_1
0x40004e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1129	cp-demangle.c	FUNCTION_10	IF_1
0x40004e5	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1129	cp-demangle.c	FUNCTION_10	IF_1
0x40004e8	          0x895010	             mov dword [rax + 0x10], edx	      1129	cp-demangle.c	FUNCTION_10	IF_1
0x40004eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x40004ef	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x40004f3	        0x48895008	                mov qword [rax + 8], rdx	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x40004f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1132	cp-demangle.c	FUNCTION_10
0x40004fb	              0xc9	                                   leave	      1133	cp-demangle.c	FUNCTION_10
0x40004fc	              0xc3	                                     ret	      1133	cp-demangle.c	FUNCTION_10
d_append_string	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	17
0x40055bb	              0x55	                                push rbp	      4250	cp-demangle.c	FUNCTION_74
0x40055bc	          0x4889e5	                            mov rbp, rsp	      4250	cp-demangle.c	FUNCTION_74
0x40055bf	        0x4883ec10	                           sub rsp, 0x10	      4250	cp-demangle.c	FUNCTION_74
0x40055c3	        0x48897df8	                mov qword [rbp - 8], rdi	      4250	cp-demangle.c	FUNCTION_74
0x40055c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4250	cp-demangle.c	FUNCTION_74
0x40055cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055cf	          0x4889c7	                            mov rdi, rax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055d2	      0xe800000000	                          call 0x40055d7	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055d7	          0x4889c2	                            mov rdx, rax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055da	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055de	        0x488b45f8	                mov rax, qword [rbp - 8]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055e2	          0x4889ce	                            mov rsi, rcx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055e5	          0x4889c7	                            mov rdi, rax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055e8	      0xe87fffffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40055ed	              0x90	                                     nop	      4252	cp-demangle.c	FUNCTION_74
0x40055ee	              0xc9	                                   leave	      4252	cp-demangle.c	FUNCTION_74
0x40055ef	              0xc3	                                     ret	      4252	cp-demangle.c	FUNCTION_74
d_print_function_type	IF,8:DO,0:functions,0:ELSE,0:FOR,1:CALL,11:SWITCH,1:WHILE,0	120
0x4009422	              0x55	                                push rbp	      5968	cp-demangle.c	FUNCTION_91
0x4009423	          0x4889e5	                            mov rbp, rsp	      5968	cp-demangle.c	FUNCTION_91
0x4009426	        0x4883ec40	                           sub rsp, 0x40	      5968	cp-demangle.c	FUNCTION_91
0x400942a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5968	cp-demangle.c	FUNCTION_91
0x400942e	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5968	cp-demangle.c	FUNCTION_91
0x4009431	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5968	cp-demangle.c	FUNCTION_91
0x4009435	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      5968	cp-demangle.c	FUNCTION_91
0x4009439	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      5974	cp-demangle.c	FUNCTION_91
0x4009440	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5975	cp-demangle.c	FUNCTION_91
0x4009447	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x400944b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x400944f	            0xeb54	                           jmp 0x40094a5	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x4009451	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x4009455	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x4009458	            0x85c0	                           test eax, eax	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x400945a	            0x7552	                           jne 0x40094ae	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x400945c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009460	        0x488b4008	                mov rax, qword [rax + 8]	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009464	            0x8b00	                    mov eax, dword [rax]	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009466	          0x83e819	                           sub eax, 0x19	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009469	          0x83f836	                           cmp eax, 0x36	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x400946c	            0x7725	                            ja 0x4009493	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x400946e	            0x89c0	                            mov eax, eax	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009470	    0x488b04c50000	                  mov rax, qword [rax*8]	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009478	            0xffe0	                                 jmp rax	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x400947a	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      5986	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009481	            0xeb11	                           jmp 0x4009494	      5987	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009483	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      5995	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x400948a	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      5996	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009491	            0xeb01	                           jmp 0x4009494	      5997	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009493	              0x90	                                     nop	      6001	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4009494	        0x837de800	               cmp dword [rbp - 0x18], 0	      6003	cp-demangle.c	FUNCTION_91	FOR_1	IF_2
0x4009498	            0x7517	                           jne 0x40094b1	      6003	cp-demangle.c	FUNCTION_91	FOR_1	IF_2
0x400949a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x400949e	          0x488b00	                    mov rax, qword [rax]	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x40094a1	        0x488945f0	             mov qword [rbp - 0x10], rax	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x40094a5	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x40094aa	            0x75a5	                           jne 0x4009451	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x40094ac	            0xeb04	                           jmp 0x40094b2	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x40094ae	              0x90	                                     nop	      5979	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40094af	            0xeb01	                           jmp 0x40094b2	      5979	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40094b1	              0x90	                                     nop	      6004	cp-demangle.c	FUNCTION_91	FOR_1	IF_2
0x40094b2	        0x837de800	               cmp dword [rbp - 0x18], 0	      6007	cp-demangle.c	FUNCTION_91	IF_3
0x40094b6	            0x7465	                            je 0x400951d	      6007	cp-demangle.c	FUNCTION_91	IF_3
0x40094b8	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6009	cp-demangle.c	FUNCTION_91	IF_3	IF_4
0x40094bc	            0x7527	                           jne 0x40094e5	      6009	cp-demangle.c	FUNCTION_91	IF_3	IF_4
0x40094be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6011	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_1
0x40094c2	          0x4889c7	                            mov rdi, rax	      6011	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_1
0x40094c5	      0xe887c1ffff	                    call sym.d_last_char	      6011	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_1
0x40094ca	            0x3c28	                            cmp al, 0x28	      6011	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_1
0x40094cc	            0x7417	                            je 0x40094e5	      6011	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_1
0x40094ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x40094d2	          0x4889c7	                            mov rdi, rax	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x40094d5	      0xe877c1ffff	                    call sym.d_last_char	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x40094da	            0x3c2a	                            cmp al, 0x2a	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x40094dc	            0x7407	                            je 0x40094e5	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x40094de	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6013	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5
0x40094e5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x40094e9	            0x7421	                            je 0x400950c	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x40094eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x40094ef	          0x4889c7	                            mov rdi, rax	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x40094f2	      0xe85ac1ffff	                    call sym.d_last_char	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x40094f7	            0x3c20	                            cmp al, 0x20	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x40094f9	            0x7411	                            je 0x400950c	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x40094fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6016	cp-demangle.c	FUNCTION_91	IF_3	CALL_4
0x40094ff	      0xbe20000000	                           mov esi, 0x20	      6016	cp-demangle.c	FUNCTION_91	IF_3	CALL_4
0x4009504	          0x4889c7	                            mov rdi, rax	      6016	cp-demangle.c	FUNCTION_91	IF_3	CALL_4
0x4009507	      0xe8fabfffff	                  call sym.d_append_char	      6016	cp-demangle.c	FUNCTION_91	IF_3	CALL_4
0x400950c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6017	cp-demangle.c	FUNCTION_91	IF_3	CALL_5
0x4009510	      0xbe28000000	                           mov esi, 0x28	      6017	cp-demangle.c	FUNCTION_91	IF_3	CALL_5
0x4009515	          0x4889c7	                            mov rdi, rax	      6017	cp-demangle.c	FUNCTION_91	IF_3	CALL_5
0x4009518	      0xe8e9bfffff	                  call sym.d_append_char	      6017	cp-demangle.c	FUNCTION_91	IF_3	CALL_5
0x400951d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6020	cp-demangle.c	FUNCTION_91
0x4009521	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      6020	cp-demangle.c	FUNCTION_91
0x4009528	        0x488945f8	                mov qword [rbp - 8], rax	      6020	cp-demangle.c	FUNCTION_91
0x400952c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6021	cp-demangle.c	FUNCTION_91
0x4009530	    0x48c780280100	              mov qword [rax + 0x128], 0	      6021	cp-demangle.c	FUNCTION_91
0x400953b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x400953f	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4009542	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4009546	      0xb900000000	                              mov ecx, 0	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x400954b	          0x4889c7	                            mov rdi, rax	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x400954e	      0xe850f9ffff	               call sym.d_print_mod_list	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4009553	        0x837de800	               cmp dword [rbp - 0x18], 0	      6025	cp-demangle.c	FUNCTION_91	IF_7
0x4009557	            0x7411	                            je 0x400956a	      6025	cp-demangle.c	FUNCTION_91	IF_7
0x4009559	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6026	cp-demangle.c	FUNCTION_91	CALL_7
0x400955d	      0xbe29000000	                           mov esi, 0x29	      6026	cp-demangle.c	FUNCTION_91	CALL_7
0x4009562	          0x4889c7	                            mov rdi, rax	      6026	cp-demangle.c	FUNCTION_91	CALL_7
0x4009565	      0xe89cbfffff	                  call sym.d_append_char	      6026	cp-demangle.c	FUNCTION_91	CALL_7
0x400956a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6028	cp-demangle.c	FUNCTION_91	CALL_8
0x400956e	      0xbe28000000	                           mov esi, 0x28	      6028	cp-demangle.c	FUNCTION_91	CALL_8
0x4009573	          0x4889c7	                            mov rdi, rax	      6028	cp-demangle.c	FUNCTION_91	CALL_8
0x4009576	      0xe88bbfffff	                  call sym.d_append_char	      6028	cp-demangle.c	FUNCTION_91	CALL_8
0x400957b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6030	cp-demangle.c	FUNCTION_91	IF_8
0x400957f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6030	cp-demangle.c	FUNCTION_91	IF_8
0x4009583	          0x4885c0	                           test rax, rax	      6030	cp-demangle.c	FUNCTION_91	IF_8
0x4009586	            0x7419	                            je 0x40095a1	      6030	cp-demangle.c	FUNCTION_91	IF_8
0x4009588	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x400958c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x4009590	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x4009593	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x4009597	            0x89ce	                            mov esi, ecx	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x4009599	          0x4889c7	                            mov rdi, rax	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x400959c	      0xe858f6ffff	                   call sym.d_print_comp	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x40095a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6033	cp-demangle.c	FUNCTION_91	CALL_10
0x40095a5	      0xbe29000000	                           mov esi, 0x29	      6033	cp-demangle.c	FUNCTION_91	CALL_10
0x40095aa	          0x4889c7	                            mov rdi, rax	      6033	cp-demangle.c	FUNCTION_91	CALL_10
0x40095ad	      0xe854bfffff	                  call sym.d_append_char	      6033	cp-demangle.c	FUNCTION_91	CALL_10
0x40095b2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x40095b6	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x40095b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x40095bd	      0xb901000000	                              mov ecx, 1	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x40095c2	          0x4889c7	                            mov rdi, rax	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x40095c5	      0xe8d9f8ffff	               call sym.d_print_mod_list	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x40095ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6037	cp-demangle.c	FUNCTION_91
0x40095ce	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6037	cp-demangle.c	FUNCTION_91
0x40095d2	    0x488990280100	            mov qword [rax + 0x128], rdx	      6037	cp-demangle.c	FUNCTION_91
0x40095d9	              0x90	                                     nop	      6038	cp-demangle.c	FUNCTION_91
0x40095da	              0xc9	                                   leave	      6038	cp-demangle.c	FUNCTION_91
0x40095db	              0xc3	                                     ret	      6038	cp-demangle.c	FUNCTION_91
d_ref_qualifier	IF,2:DO,0:functions,0:ELSE,1:FOR,0:CALL,3:SWITCH,0:WHILE,0	47
0x4002ef9	              0x55	                                push rbp	      2815	cp-demangle.c	FUNCTION_36
0x4002efa	          0x4889e5	                            mov rbp, rsp	      2815	cp-demangle.c	FUNCTION_36
0x4002efd	        0x4883ec20	                           sub rsp, 0x20	      2815	cp-demangle.c	FUNCTION_36
0x4002f01	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2815	cp-demangle.c	FUNCTION_36
0x4002f05	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2815	cp-demangle.c	FUNCTION_36
0x4002f09	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2816	cp-demangle.c	FUNCTION_36
0x4002f0d	        0x488945f8	                mov qword [rbp - 8], rax	      2816	cp-demangle.c	FUNCTION_36
0x4002f11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x4002f15	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x4002f19	           0xfb600	                   movzx eax, byte [rax]	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x4002f1c	          0x8845f3	                mov byte [rbp - 0xd], al	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x4002f1f	        0x807df352	              cmp byte [rbp - 0xd], 0x52	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x4002f23	            0x7406	                            je 0x4002f2b	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x4002f25	        0x807df34f	              cmp byte [rbp - 0xd], 0x4f	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x4002f29	            0x756c	                           jne 0x4002f97	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x4002f2b	        0x807df352	              cmp byte [rbp - 0xd], 0x52	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f2f	            0x751c	                           jne 0x4002f4d	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f31	    0xc745f41f0000	            mov dword [rbp - 0xc], 0x1f 	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f3c	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f3f	          0x83c002	                              add eax, 2	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f42	            0x89c2	                            mov edx, eax	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f48	          0x895048	             mov dword [rax + 0x48], edx	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f4b	            0xeb1a	                           jmp 0x4002f67	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x4002f4d	    0xc745f4200000	            mov dword [rbp - 0xc], 0x20 	      2830	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x4002f54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x4002f58	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x4002f5b	          0x83c003	                              add eax, 3	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x4002f5e	            0x89c2	                            mov edx, eax	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x4002f60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x4002f64	          0x895048	             mov dword [rax + 0x48], edx	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x4002f67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x4002f6b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x4002f6f	        0x488d5001	                      lea rdx, [rax + 1]	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x4002f73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x4002f77	        0x48895018	             mov qword [rax + 0x18], rdx	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x4002f7b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4002f7f	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4002f82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4002f86	      0xb900000000	                              mov ecx, 0	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4002f8b	          0x4889c7	                            mov rdi, rax	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4002f8e	      0xe8cdd2ffff	                    call sym.d_make_comp	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4002f93	        0x488945f8	                mov qword [rbp - 8], rax	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4002f97	        0x488b45f8	                mov rax, qword [rbp - 8]	      2838	cp-demangle.c	FUNCTION_36
0x4002f9b	              0xc9	                                   leave	      2839	cp-demangle.c	FUNCTION_36
0x4002f9c	              0xc3	                                     ret	      2839	cp-demangle.c	FUNCTION_36
d_growable_string_resize	IF,2:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,1	55
0x4004fd7	              0x55	                                push rbp	      3969	cp-demangle.c	FUNCTION_64
0x4004fd8	          0x4889e5	                            mov rbp, rsp	      3969	cp-demangle.c	FUNCTION_64
0x4004fdb	        0x4883ec20	                           sub rsp, 0x20	      3969	cp-demangle.c	FUNCTION_64
0x4004fdf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3969	cp-demangle.c	FUNCTION_64
0x4004fe3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3969	cp-demangle.c	FUNCTION_64
0x4004fe7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4004feb	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4004fee	            0x85c0	                           test eax, eax	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4004ff0	     0xf85a9000000	                           jne 0x400509f	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4004ff6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3979	cp-demangle.c	FUNCTION_64
0x4004ffa	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3979	cp-demangle.c	FUNCTION_64
0x4004ffe	          0x4885c0	                           test rax, rax	      3979	cp-demangle.c	FUNCTION_64
0x4005001	            0x740a	                            je 0x400500d	      3979	cp-demangle.c	FUNCTION_64
0x4005003	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3979	cp-demangle.c	FUNCTION_64
0x4005007	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3979	cp-demangle.c	FUNCTION_64
0x400500b	            0xeb05	                           jmp 0x4005012	      3979	cp-demangle.c	FUNCTION_64
0x400500d	      0xb802000000	                              mov eax, 2	      3979	cp-demangle.c	FUNCTION_64
0x4005012	        0x488945f0	             mov qword [rbp - 0x10], rax	      3979	cp-demangle.c	FUNCTION_64
0x4005016	            0xeb04	                           jmp 0x400501c	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4005018	        0x48d165f0	               shl qword [rbp - 0x10], 1	      3981	cp-demangle.c	FUNCTION_64	WHILE_1
0x400501c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4005020	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4005024	            0x72f2	                            jb 0x4005018	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4005026	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x400502a	          0x488b00	                    mov rax, qword [rax]	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x400502d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4005031	          0x4889d6	                            mov rsi, rdx	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4005034	          0x4889c7	                            mov rdi, rax	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4005037	      0xe800000000	                          call 0x400503c	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x400503c	        0x488945f8	                mov qword [rbp - 8], rax	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4005040	      0x48837df800	                  cmp qword [rbp - 8], 0	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x4005045	            0x753f	                           jne 0x4005086	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x4005047	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x400504b	          0x488b00	                    mov rax, qword [rax]	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x400504e	          0x4889c7	                            mov rdi, rax	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x4005051	      0xe800000000	                          call 0x4005056	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x4005056	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3987	cp-demangle.c	FUNCTION_64	IF_2
0x400505a	    0x48c700000000	                      mov qword [rax], 0	      3987	cp-demangle.c	FUNCTION_64	IF_2
0x4005061	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3988	cp-demangle.c	FUNCTION_64	IF_2
0x4005065	    0x48c740080000	                  mov qword [rax + 8], 0	      3988	cp-demangle.c	FUNCTION_64	IF_2
0x400506d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3989	cp-demangle.c	FUNCTION_64	IF_2
0x4005071	    0x48c740100000	               mov qword [rax + 0x10], 0	      3989	cp-demangle.c	FUNCTION_64	IF_2
0x4005079	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3990	cp-demangle.c	FUNCTION_64	IF_2
0x400507d	    0xc74018010000	               mov dword [rax + 0x18], 1	      3990	cp-demangle.c	FUNCTION_64	IF_2
0x4005084	            0xeb1a	                           jmp 0x40050a0	      3991	cp-demangle.c	FUNCTION_64	IF_2
0x4005086	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3993	cp-demangle.c	FUNCTION_64
0x400508a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3993	cp-demangle.c	FUNCTION_64
0x400508e	          0x488910	                    mov qword [rax], rdx	      3993	cp-demangle.c	FUNCTION_64
0x4005091	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3994	cp-demangle.c	FUNCTION_64
0x4005095	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3994	cp-demangle.c	FUNCTION_64
0x4005099	        0x48895010	             mov qword [rax + 0x10], rdx	      3994	cp-demangle.c	FUNCTION_64
0x400509d	            0xeb01	                           jmp 0x40050a0	      3994	cp-demangle.c	FUNCTION_64
0x400509f	              0x90	                                     nop	      3974	cp-demangle.c	FUNCTION_64	IF_1
0x40050a0	              0xc9	                                   leave	      3995	cp-demangle.c	FUNCTION_64
0x40050a1	              0xc3	                                     ret	      3995	cp-demangle.c	FUNCTION_64
d_print_expr_op	IF,1:DO,0:functions,0:ELSE,1:FOR,0:CALL,2:SWITCH,0:WHILE,0	31
0x4009703	              0x55	                                push rbp	      6099	cp-demangle.c	FUNCTION_93
0x4009704	          0x4889e5	                            mov rbp, rsp	      6099	cp-demangle.c	FUNCTION_93
0x4009707	        0x4883ec20	                           sub rsp, 0x20	      6099	cp-demangle.c	FUNCTION_93
0x400970b	        0x48897df8	                mov qword [rbp - 8], rdi	      6099	cp-demangle.c	FUNCTION_93
0x400970f	          0x8975f4	              mov dword [rbp - 0xc], esi	      6099	cp-demangle.c	FUNCTION_93
0x4009712	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6099	cp-demangle.c	FUNCTION_93
0x4009716	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6100	cp-demangle.c	FUNCTION_93	IF_1
0x400971a	            0x8b00	                    mov eax, dword [rax]	      6100	cp-demangle.c	FUNCTION_93	IF_1
0x400971c	          0x83f831	                           cmp eax, 0x31	      6100	cp-demangle.c	FUNCTION_93	IF_1
0x400971f	            0x752b	                           jne 0x400974c	      6100	cp-demangle.c	FUNCTION_93	IF_1
0x4009721	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6102	cp-demangle.c	FUNCTION_93	IF_1
0x4009725	        0x488b4008	                mov rax, qword [rax + 8]	      6102	cp-demangle.c	FUNCTION_93	IF_1
0x4009729	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6102	cp-demangle.c	FUNCTION_93	IF_1
0x400972c	          0x4863d0	                         movsxd rdx, eax	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x400972f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x4009733	        0x488b4008	                mov rax, qword [rax + 8]	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x4009737	        0x488b4808	                mov rcx, qword [rax + 8]	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x400973b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x400973f	          0x4889ce	                            mov rsi, rcx	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x4009742	          0x4889c7	                            mov rdi, rax	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x4009745	      0xe822beffff	                call sym.d_append_buffer	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x400974a	            0xeb15	                           jmp 0x4009761	      6105	cp-demangle.c	FUNCTION_93
0x400974c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6104	cp-demangle.c	FUNCTION_93	CALL_2
0x4009750	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      6104	cp-demangle.c	FUNCTION_93	CALL_2
0x4009753	        0x488b45f8	                mov rax, qword [rbp - 8]	      6104	cp-demangle.c	FUNCTION_93	CALL_2
0x4009757	            0x89ce	                            mov esi, ecx	      6104	cp-demangle.c	FUNCTION_93	CALL_2
0x4009759	          0x4889c7	                            mov rdi, rax	      6104	cp-demangle.c	FUNCTION_93	CALL_2
0x400975c	      0xe898f4ffff	                   call sym.d_print_comp	      6104	cp-demangle.c	FUNCTION_93	CALL_2
0x4009761	              0x90	                                     nop	      6105	cp-demangle.c	FUNCTION_93
0x4009762	              0xc9	                                   leave	      6105	cp-demangle.c	FUNCTION_93
0x4009763	              0xc3	                                     ret	      6105	cp-demangle.c	FUNCTION_93
d_exprlist	IF,4:DO,0:functions,0:ELSE,0:FOR,0:CALL,7:SWITCH,0:WHILE,1	74
0x40038a7	              0x55	                                push rbp	      3200	cp-demangle.c	FUNCTION_49
0x40038a8	          0x4889e5	                            mov rbp, rsp	      3200	cp-demangle.c	FUNCTION_49
0x40038ab	        0x4883ec30	                           sub rsp, 0x30	      3200	cp-demangle.c	FUNCTION_49
0x40038af	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3200	cp-demangle.c	FUNCTION_49
0x40038b3	            0x89f0	                            mov eax, esi	      3200	cp-demangle.c	FUNCTION_49
0x40038b5	          0x8845d4	               mov byte [rbp - 0x2c], al	      3200	cp-demangle.c	FUNCTION_49
0x40038b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3200	cp-demangle.c	FUNCTION_49
0x40038c1	        0x488945f8	                mov qword [rbp - 8], rax	      3200	cp-demangle.c	FUNCTION_49
0x40038c5	            0x31c0	                            xor eax, eax	      3200	cp-demangle.c	FUNCTION_49
0x40038c7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3201	cp-demangle.c	FUNCTION_49
0x40038cf	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3202	cp-demangle.c	FUNCTION_49
0x40038d3	        0x488945e8	             mov qword [rbp - 0x18], rax	      3202	cp-demangle.c	FUNCTION_49
0x40038d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x40038db	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x40038df	           0xfb600	                   movzx eax, byte [rax]	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x40038e2	          0x3a45d4	               cmp al, byte [rbp - 0x2c]	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x40038e5	            0x7534	                           jne 0x400391b	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x40038e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x40038eb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x40038ef	        0x488d5001	                      lea rdx, [rax + 1]	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x40038f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x40038f7	        0x48895018	             mov qword [rax + 0x18], rdx	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x40038fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x40038ff	      0xb900000000	                              mov ecx, 0	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4003904	      0xba00000000	                              mov edx, 0	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4003909	      0xbe2e000000	                           mov esi, 0x2e	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400390e	          0x4889c7	                            mov rdi, rax	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4003911	      0xe84ac9ffff	                    call sym.d_make_comp	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4003916	      0xe98d000000	                           jmp 0x40039a8	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400391b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3212	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_4
0x400391f	          0x4889c7	                            mov rdi, rax	      3212	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_4
0x4003922	      0xe80f0a0000	                   call sym.d_expression	      3212	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_4
0x4003927	        0x488945f0	             mov qword [rbp - 0x10], rax	      3212	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_4
0x400392b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4003930	            0x7507	                           jne 0x4003939	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4003932	      0xb800000000	                              mov eax, 0	      3214	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4003937	            0xeb6f	                           jmp 0x40039a8	      3214	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4003939	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x400393d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4003941	      0xb900000000	                              mov ecx, 0	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4003946	      0xbe2e000000	                           mov esi, 0x2e	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x400394b	          0x4889c7	                            mov rdi, rax	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x400394e	      0xe80dc9ffff	                    call sym.d_make_comp	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4003953	          0x4889c2	                            mov rdx, rax	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4003956	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x400395a	          0x488910	                    mov qword [rax], rdx	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x400395d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4003961	          0x488b00	                    mov rax, qword [rax]	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4003964	          0x4885c0	                           test rax, rax	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4003967	            0x7507	                           jne 0x4003970	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4003969	      0xb800000000	                              mov eax, 0	      3218	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x400396e	            0xeb38	                           jmp 0x40039a8	      3218	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4003970	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3219	cp-demangle.c	FUNCTION_49	WHILE_1
0x4003974	          0x488b00	                    mov rax, qword [rax]	      3219	cp-demangle.c	FUNCTION_49	WHILE_1
0x4003977	        0x4883c010	                           add rax, 0x10	      3219	cp-demangle.c	FUNCTION_49	WHILE_1
0x400397b	        0x488945e8	             mov qword [rbp - 0x18], rax	      3219	cp-demangle.c	FUNCTION_49	WHILE_1
0x400397f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4003983	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4003987	           0xfb600	                   movzx eax, byte [rax]	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x400398a	          0x3a45d4	               cmp al, byte [rbp - 0x2c]	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x400398d	            0x758c	                           jne 0x400391b	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x400398f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x4003993	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x4003997	        0x488d5001	                      lea rdx, [rax + 1]	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x400399b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x400399f	        0x48895018	             mov qword [rax + 0x18], rdx	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x40039a3	              0x90	                                     nop	      3224	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4
0x40039a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3228	cp-demangle.c	FUNCTION_49
0x40039a8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3229	cp-demangle.c	FUNCTION_49
0x40039ac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3229	cp-demangle.c	FUNCTION_49
0x40039b5	            0x7405	                            je 0x40039bc	      3229	cp-demangle.c	FUNCTION_49
0x40039b7	      0xe800000000	                          call 0x40039bc	      3229	cp-demangle.c	FUNCTION_49
0x40039bc	              0xc9	                                   leave	      3229	cp-demangle.c	FUNCTION_49
0x40039bd	              0xc3	                                     ret	      3229	cp-demangle.c	FUNCTION_49
d_class_enum_type	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	9
0x4003283	              0x55	                                push rbp	      2951	cp-demangle.c	FUNCTION_40
0x4003284	          0x4889e5	                            mov rbp, rsp	      2951	cp-demangle.c	FUNCTION_40
0x4003287	        0x4883ec10	                           sub rsp, 0x10	      2951	cp-demangle.c	FUNCTION_40
0x400328b	        0x48897df8	                mov qword [rbp - 8], rdi	      2951	cp-demangle.c	FUNCTION_40
0x400328f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2952	cp-demangle.c	FUNCTION_40	CALL_1
0x4003293	          0x4889c7	                            mov rdi, rax	      2952	cp-demangle.c	FUNCTION_40	CALL_1
0x4003296	      0xe8e9d7ffff	                         call sym.d_name	      2952	cp-demangle.c	FUNCTION_40	CALL_1
0x400329b	              0xc9	                                   leave	      2953	cp-demangle.c	FUNCTION_40
0x400329c	              0xc3	                                     ret	      2953	cp-demangle.c	FUNCTION_40
d_print_init	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	65
0x40052ea	              0x55	                                push rbp	      4170	cp-demangle.c	FUNCTION_68
0x40052eb	          0x4889e5	                            mov rbp, rsp	      4170	cp-demangle.c	FUNCTION_68
0x40052ee	        0x4883ec20	                           sub rsp, 0x20	      4170	cp-demangle.c	FUNCTION_68
0x40052f2	        0x48897df8	                mov qword [rbp - 8], rdi	      4170	cp-demangle.c	FUNCTION_68
0x40052f6	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4170	cp-demangle.c	FUNCTION_68
0x40052fa	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4170	cp-demangle.c	FUNCTION_68
0x40052fe	        0x48894de0	             mov qword [rbp - 0x20], rcx	      4170	cp-demangle.c	FUNCTION_68
0x4005302	        0x488b45f8	                mov rax, qword [rbp - 8]	      4171	cp-demangle.c	FUNCTION_68
0x4005306	    0x48c780000100	              mov qword [rax + 0x100], 0	      4171	cp-demangle.c	FUNCTION_68
0x4005311	        0x488b45f8	                mov rax, qword [rbp - 8]	      4172	cp-demangle.c	FUNCTION_68
0x4005315	    0xc68008010000	               mov byte [rax + 0x108], 0	      4172	cp-demangle.c	FUNCTION_68
0x400531c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4173	cp-demangle.c	FUNCTION_68
0x4005320	    0x48c780200100	              mov qword [rax + 0x120], 0	      4173	cp-demangle.c	FUNCTION_68
0x400532b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4174	cp-demangle.c	FUNCTION_68
0x400532f	    0x48c780280100	              mov qword [rax + 0x128], 0	      4174	cp-demangle.c	FUNCTION_68
0x400533a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4175	cp-demangle.c	FUNCTION_68
0x400533e	    0xc7803c010000	              mov dword [rax + 0x13c], 0	      4175	cp-demangle.c	FUNCTION_68
0x4005348	        0x488b45f8	                mov rax, qword [rbp - 8]	      4176	cp-demangle.c	FUNCTION_68
0x400534c	    0x48c780400100	              mov qword [rax + 0x140], 0	      4176	cp-demangle.c	FUNCTION_68
0x4005357	        0x488b45f8	                mov rax, qword [rbp - 8]	      4178	cp-demangle.c	FUNCTION_68
0x400535b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4178	cp-demangle.c	FUNCTION_68
0x400535f	    0x488990100100	            mov qword [rax + 0x110], rdx	      4178	cp-demangle.c	FUNCTION_68
0x4005366	        0x488b45f8	                mov rax, qword [rbp - 8]	      4179	cp-demangle.c	FUNCTION_68
0x400536a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4179	cp-demangle.c	FUNCTION_68
0x400536e	    0x488990180100	            mov qword [rax + 0x118], rdx	      4179	cp-demangle.c	FUNCTION_68
0x4005375	        0x488b45f8	                mov rax, qword [rbp - 8]	      4181	cp-demangle.c	FUNCTION_68
0x4005379	    0xc78030010000	              mov dword [rax + 0x130], 0	      4181	cp-demangle.c	FUNCTION_68
0x4005383	        0x488b45f8	                mov rax, qword [rbp - 8]	      4182	cp-demangle.c	FUNCTION_68
0x4005387	    0xc78034010000	              mov dword [rax + 0x134], 0	      4182	cp-demangle.c	FUNCTION_68
0x4005391	        0x488b45f8	                mov rax, qword [rbp - 8]	      4183	cp-demangle.c	FUNCTION_68
0x4005395	    0xc78038010000	              mov dword [rax + 0x138], 0	      4183	cp-demangle.c	FUNCTION_68
0x400539f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4185	cp-demangle.c	FUNCTION_68
0x40053a3	    0x48c780480100	              mov qword [rax + 0x148], 0	      4185	cp-demangle.c	FUNCTION_68
0x40053ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      4187	cp-demangle.c	FUNCTION_68
0x40053b2	    0x48c780500100	              mov qword [rax + 0x150], 0	      4187	cp-demangle.c	FUNCTION_68
0x40053bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      4188	cp-demangle.c	FUNCTION_68
0x40053c1	    0xc78058010000	              mov dword [rax + 0x158], 0	      4188	cp-demangle.c	FUNCTION_68
0x40053cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4189	cp-demangle.c	FUNCTION_68
0x40053cf	    0xc7805c010000	              mov dword [rax + 0x15c], 0	      4189	cp-demangle.c	FUNCTION_68
0x40053d9	        0x488b45f8	                mov rax, qword [rbp - 8]	      4191	cp-demangle.c	FUNCTION_68
0x40053dd	    0x48c780600100	              mov qword [rax + 0x160], 0	      4191	cp-demangle.c	FUNCTION_68
0x40053e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4192	cp-demangle.c	FUNCTION_68
0x40053ec	    0xc78068010000	              mov dword [rax + 0x168], 0	      4192	cp-demangle.c	FUNCTION_68
0x40053f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4193	cp-demangle.c	FUNCTION_68
0x40053fa	    0xc7806c010000	              mov dword [rax + 0x16c], 0	      4193	cp-demangle.c	FUNCTION_68
0x4005404	        0x488b45f8	                mov rax, qword [rbp - 8]	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x4005408	    0x488db05c0100	                  lea rsi, [rax + 0x15c]	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x400540f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x4005413	    0x488d886c0100	                  lea rcx, [rax + 0x16c]	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x400541a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x400541e	          0x4889c2	                            mov rdx, rax	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x4005421	          0x4889cf	                            mov rdi, rcx	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x4005424	      0xe864fdffff	       call sym.d_count_templates_scopes	      4195	cp-demangle.c	FUNCTION_68	CALL_1
0x4005429	        0x488b45f8	                mov rax, qword [rbp - 8]	      4197	cp-demangle.c	FUNCTION_68
0x400542d	    0x8b906c010000	           mov edx, dword [rax + 0x16c] 	      4197	cp-demangle.c	FUNCTION_68
0x4005433	        0x488b45f8	                mov rax, qword [rbp - 8]	      4197	cp-demangle.c	FUNCTION_68
0x4005437	    0x8b805c010000	           mov eax, dword [rax + 0x15c] 	      4197	cp-demangle.c	FUNCTION_68
0x400543d	           0xfafd0	                           imul edx, eax	      4197	cp-demangle.c	FUNCTION_68
0x4005440	        0x488b45f8	                mov rax, qword [rbp - 8]	      4197	cp-demangle.c	FUNCTION_68
0x4005444	    0x89906c010000	            mov dword [rax + 0x16c], edx	      4197	cp-demangle.c	FUNCTION_68
0x400544a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4199	cp-demangle.c	FUNCTION_68
0x400544e	    0x48c780700100	              mov qword [rax + 0x170], 0	      4199	cp-demangle.c	FUNCTION_68
0x4005459	              0x90	                                     nop	      4200	cp-demangle.c	FUNCTION_68
0x400545a	              0xc9	                                   leave	      4200	cp-demangle.c	FUNCTION_68
0x400545b	              0xc3	                                     ret	      4200	cp-demangle.c	FUNCTION_68
d_make_demangle_mangled_name	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,6:SWITCH,0:WHILE,0	37
0x400030a	              0x55	                                push rbp	      1052	cp-demangle.c	FUNCTION_5
0x400030b	          0x4889e5	                            mov rbp, rsp	      1052	cp-demangle.c	FUNCTION_5
0x400030e	        0x4883ec10	                           sub rsp, 0x10	      1052	cp-demangle.c	FUNCTION_5
0x4000312	        0x48897df8	                mov qword [rbp - 8], rdi	      1052	cp-demangle.c	FUNCTION_5
0x4000316	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1052	cp-demangle.c	FUNCTION_5
0x400031a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400031e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000322	           0xfb600	                   movzx eax, byte [rax]	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000325	            0x3c5f	                            cmp al, 0x5f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000327	            0x7513	                           jne 0x400033c	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000329	        0x488b45f8	                mov rax, qword [rbp - 8]	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400032d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000331	        0x4883c001	                              add rax, 1	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000335	           0xfb600	                   movzx eax, byte [rax]	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000338	            0x3c5a	                            cmp al, 0x5a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400033a	            0x7423	                            je 0x400035f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400033c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4000340	          0x4889c7	                            mov rdi, rax	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4000343	      0xe800000000	                          call 0x4000348	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4000348	            0x89c2	                            mov edx, eax	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x400034a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x400034e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4000352	          0x4889ce	                            mov rsi, rcx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4000355	          0x4889c7	                            mov rdi, rax	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4000358	      0xe829000000	                    call sym.d_make_name	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x400035d	            0xeb25	                           jmp 0x4000384	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x400035f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x4000363	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x4000367	        0x488d5002	                      lea rdx, [rax + 2]	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x400036b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x400036f	        0x48895018	             mov qword [rax + 0x18], rdx	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x4000373	        0x488b45f8	                mov rax, qword [rbp - 8]	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4000377	      0xbe00000000	                              mov esi, 0	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400037c	          0x4889c7	                            mov rdi, rax	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400037f	      0xe81a050000	                     call sym.d_encoding	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4000384	              0xc9	                                   leave	      1057	cp-demangle.c	FUNCTION_5
0x4000385	              0xc3	                                     ret	      1057	cp-demangle.c	FUNCTION_5
d_count_templates_scopes	IF,2:DO,0:functions,0:ELSE,0:FOR,0:CALL,8:SWITCH,1:WHILE,0	101
0x400518d	              0x55	                                push rbp	      4037	cp-demangle.c	FUNCTION_67
0x400518e	          0x4889e5	                            mov rbp, rsp	      4037	cp-demangle.c	FUNCTION_67
0x4005191	        0x4883ec20	                           sub rsp, 0x20	      4037	cp-demangle.c	FUNCTION_67
0x4005195	        0x48897df8	                mov qword [rbp - 8], rdi	      4037	cp-demangle.c	FUNCTION_67
0x4005199	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4037	cp-demangle.c	FUNCTION_67
0x400519d	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4037	cp-demangle.c	FUNCTION_67
0x40051a1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x40051a6	     0xf8438010000	                            je 0x40052e4	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x40051ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051b0	            0x8b00	                    mov eax, dword [rax]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051b2	          0x83f84f	                           cmp eax, 0x4f	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051b5	     0xf872d010000	                            ja 0x40052e8	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051bb	            0x89c0	                            mov eax, eax	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051bd	    0x488b04c50000	                  mov rax, qword [rax*8]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051c5	            0xffe0	                                 jmp rax	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051cb	            0x8b00	                    mov eax, dword [rax]	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051cd	          0x8d5001	                      lea edx, [rax + 1]	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051d4	            0x8910	                    mov dword [rax], edx	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051d6	            0xeb1f	                           jmp 0x40051f7	      4056	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051dc	        0x488b4008	                mov rax, qword [rax + 8]	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051e0	            0x8b00	                    mov eax, dword [rax]	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051e2	          0x83f805	                              cmp eax, 5	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051e5	            0x750f	                           jne 0x40051f6	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051eb	            0x8b00	                    mov eax, dword [rax]	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051ed	          0x8d5001	                      lea edx, [rax + 1]	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051f4	            0x8910	                    mov dword [rax], edx	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x40051f6	              0x90	                                     nop	      4062	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4126	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051fb	        0x488b5008	                mov rdx, qword [rax + 8]	      4126	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40051ff	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4005203	        0x488b45f8	                mov rax, qword [rbp - 8]	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4005207	          0x4889ce	                            mov rsi, rcx	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x400520a	          0x4889c7	                            mov rdi, rax	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x400520d	      0xe87bffffff	       call sym.d_count_templates_scopes	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4005212	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4128	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005216	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4128	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400521a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x400521e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x4005222	          0x4889ce	                            mov rsi, rcx	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x4005225	          0x4889c7	                            mov rdi, rax	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x4005228	      0xe860ffffff	       call sym.d_count_templates_scopes	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x400522d	      0xe9b6000000	                           jmp 0x40052e8	      4129	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005232	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4133	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005236	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4133	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400523a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4132	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_3
0x400523e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4132	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_3
0x4005242	          0x4889ce	                            mov rsi, rcx	      4132	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_3
0x4005245	          0x4889c7	                            mov rdi, rax	      4132	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_3
0x4005248	      0xe840ffffff	       call sym.d_count_templates_scopes	      4132	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_3
0x400524d	      0xe996000000	                           jmp 0x40052e8	      4134	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005252	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4138	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005256	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4138	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400525a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4137	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_4
0x400525e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4137	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_4
0x4005262	          0x4889ce	                            mov rsi, rcx	      4137	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_4
0x4005265	          0x4889c7	                            mov rdi, rax	      4137	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_4
0x4005268	      0xe820ffffff	       call sym.d_count_templates_scopes	      4137	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_4
0x400526d	            0xeb79	                           jmp 0x40052e8	      4139	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400526f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4143	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005273	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4143	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005277	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4142	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_5
0x400527b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4142	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_5
0x400527f	          0x4889ce	                            mov rsi, rcx	      4142	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_5
0x4005282	          0x4889c7	                            mov rdi, rax	      4142	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_5
0x4005285	      0xe803ffffff	       call sym.d_count_templates_scopes	      4142	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_5
0x400528a	            0xeb5c	                           jmp 0x40052e8	      4144	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400528c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4148	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005290	        0x488b5008	                mov rdx, qword [rax + 8]	      4148	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4005294	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4147	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_6
0x4005298	        0x488b45f8	                mov rax, qword [rbp - 8]	      4147	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_6
0x400529c	          0x4889ce	                            mov rsi, rcx	      4147	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_6
0x400529f	          0x4889c7	                            mov rdi, rax	      4147	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_6
0x40052a2	      0xe8e6feffff	       call sym.d_count_templates_scopes	      4147	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_6
0x40052a7	            0xeb3f	                           jmp 0x40052e8	      4149	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4154	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052ad	        0x488b5008	                mov rdx, qword [rax + 8]	      4154	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052b1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4153	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_7
0x40052b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4153	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_7
0x40052b9	          0x4889ce	                            mov rsi, rcx	      4153	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_7
0x40052bc	          0x4889c7	                            mov rdi, rax	      4153	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_7
0x40052bf	      0xe8c9feffff	       call sym.d_count_templates_scopes	      4153	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_7
0x40052c4	            0xeb22	                           jmp 0x40052e8	      4155	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4160	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052ca	        0x488b5008	                mov rdx, qword [rax + 8]	      4160	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052ce	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4159	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_8
0x40052d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4159	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_8
0x40052d6	          0x4889ce	                            mov rsi, rcx	      4159	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_8
0x40052d9	          0x4889c7	                            mov rdi, rax	      4159	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_8
0x40052dc	      0xe8acfeffff	       call sym.d_count_templates_scopes	      4159	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_8
0x40052e1	              0x90	                                     nop	      4161	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052e2	            0xeb04	                           jmp 0x40052e8	      4161	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052e4	              0x90	                                     nop	      4039	cp-demangle.c	FUNCTION_67	IF_1
0x40052e5	            0xeb01	                           jmp 0x40052e8	      4039	cp-demangle.c	FUNCTION_67	IF_1
0x40052e7	              0x90	                                     nop	      4052	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40052e8	              0xc9	                                   leave	      4163	cp-demangle.c	FUNCTION_67
0x40052e9	              0xc3	                                     ret	      4163	cp-demangle.c	FUNCTION_67
d_checkpoint	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0	23
0x4004eec	              0x55	                                push rbp	      3935	cp-demangle.c	FUNCTION_61
0x4004eed	          0x4889e5	                            mov rbp, rsp	      3935	cp-demangle.c	FUNCTION_61
0x4004ef0	        0x48897df8	                mov qword [rbp - 8], rdi	      3935	cp-demangle.c	FUNCTION_61
0x4004ef4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3935	cp-demangle.c	FUNCTION_61
0x4004ef8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3936	cp-demangle.c	FUNCTION_61
0x4004efc	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3936	cp-demangle.c	FUNCTION_61
0x4004f00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3936	cp-demangle.c	FUNCTION_61
0x4004f04	          0x488910	                    mov qword [rax], rdx	      3936	cp-demangle.c	FUNCTION_61
0x4004f07	        0x488b45f8	                mov rax, qword [rbp - 8]	      3937	cp-demangle.c	FUNCTION_61
0x4004f0b	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3937	cp-demangle.c	FUNCTION_61
0x4004f0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3937	cp-demangle.c	FUNCTION_61
0x4004f12	          0x895008	                mov dword [rax + 8], edx	      3937	cp-demangle.c	FUNCTION_61
0x4004f15	        0x488b45f8	                mov rax, qword [rbp - 8]	      3938	cp-demangle.c	FUNCTION_61
0x4004f19	          0x8b5038	            mov edx, dword [rax + 0x38] 	      3938	cp-demangle.c	FUNCTION_61
0x4004f1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3938	cp-demangle.c	FUNCTION_61
0x4004f20	          0x89500c	              mov dword [rax + 0xc], edx	      3938	cp-demangle.c	FUNCTION_61
0x4004f23	        0x488b45f8	                mov rax, qword [rbp - 8]	      3939	cp-demangle.c	FUNCTION_61
0x4004f27	          0x8b5048	            mov edx, dword [rax + 0x48] 	      3939	cp-demangle.c	FUNCTION_61
0x4004f2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3939	cp-demangle.c	FUNCTION_61
0x4004f2e	          0x895010	             mov dword [rax + 0x10], edx	      3939	cp-demangle.c	FUNCTION_61
0x4004f31	              0x90	                                     nop	      3940	cp-demangle.c	FUNCTION_61
0x4004f32	              0x5d	                                 pop rbp	      3940	cp-demangle.c	FUNCTION_61
0x4004f33	              0xc3	                                     ret	      3940	cp-demangle.c	FUNCTION_61
java_demangle_v3	IF,0:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	18
0x4009eff	              0x55	                                push rbp	      6474	cp-demangle.c	FUNCTION_102
0x4009f00	          0x4889e5	                            mov rbp, rsp	      6474	cp-demangle.c	FUNCTION_102
0x4009f03	        0x4883ec20	                           sub rsp, 0x20	      6474	cp-demangle.c	FUNCTION_102
0x4009f07	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6474	cp-demangle.c	FUNCTION_102
0x4009f0b	    0x64488b042528	                mov rax, qword fs:[0x28]	      6474	cp-demangle.c	FUNCTION_102
0x4009f14	        0x488945f8	                mov qword [rbp - 8], rax	      6474	cp-demangle.c	FUNCTION_102
0x4009f18	            0x31c0	                            xor eax, eax	      6474	cp-demangle.c	FUNCTION_102
0x4009f1a	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009f1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009f22	      0xbe25000000	                           mov esi, 0x25	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009f27	          0x4889c7	                            mov rdi, rax	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009f2a	      0xe8affeffff	                     call sym.d_demangle	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009f2f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6478	cp-demangle.c	FUNCTION_102
0x4009f33	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6478	cp-demangle.c	FUNCTION_102
0x4009f3c	            0x7405	                            je 0x4009f43	      6478	cp-demangle.c	FUNCTION_102
0x4009f3e	      0xe800000000	                          call 0x4009f43	      6478	cp-demangle.c	FUNCTION_102
0x4009f43	              0xc9	                                   leave	      6478	cp-demangle.c	FUNCTION_102
0x4009f44	              0xc3	                                     ret	      6478	cp-demangle.c	FUNCTION_102
d_print_array_type	IF,7:DO,0:functions,0:ELSE,1:FOR,1:CALL,7:SWITCH,0:WHILE,0	79
0x40095dc	              0x55	                                push rbp	      6046	cp-demangle.c	FUNCTION_92
0x40095dd	          0x4889e5	                            mov rbp, rsp	      6046	cp-demangle.c	FUNCTION_92
0x40095e0	        0x4883ec30	                           sub rsp, 0x30	      6046	cp-demangle.c	FUNCTION_92
0x40095e4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6046	cp-demangle.c	FUNCTION_92
0x40095e8	          0x8975e4	             mov dword [rbp - 0x1c], esi	      6046	cp-demangle.c	FUNCTION_92
0x40095eb	        0x488955d8	             mov qword [rbp - 0x28], rdx	      6046	cp-demangle.c	FUNCTION_92
0x40095ef	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      6046	cp-demangle.c	FUNCTION_92
0x40095f3	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      6049	cp-demangle.c	FUNCTION_92
0x40095fa	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      6050	cp-demangle.c	FUNCTION_92	IF_1
0x40095ff	     0xf849c000000	                            je 0x40096a1	      6050	cp-demangle.c	FUNCTION_92	IF_1
0x4009605	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      6055	cp-demangle.c	FUNCTION_92	IF_1
0x400960c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4009610	        0x488945f8	                mov qword [rbp - 8], rax	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4009614	            0xeb3e	                           jmp 0x4009654	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4009616	        0x488b45f8	                mov rax, qword [rbp - 8]	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x400961a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x400961d	            0x85c0	                           test eax, eax	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x400961f	            0x7528	                           jne 0x4009649	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x4009621	        0x488b45f8	                mov rax, qword [rbp - 8]	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4009625	        0x488b4008	                mov rax, qword [rax + 8]	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4009629	            0x8b00	                    mov eax, dword [rax]	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x400962b	          0x83f82a	                           cmp eax, 0x2a	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x400962e	            0x7509	                           jne 0x4009639	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4009630	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      6062	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4009637	            0xeb22	                           jmp 0x400965b	      6063	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4009639	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      6067	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	ELSE_1
0x4009640	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      6068	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	ELSE_1
0x4009647	            0xeb12	                           jmp 0x400965b	      6069	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	ELSE_1
0x4009649	        0x488b45f8	                mov rax, qword [rbp - 8]	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x400964d	          0x488b00	                    mov rax, qword [rax]	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4009650	        0x488945f8	                mov qword [rbp - 8], rax	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4009654	      0x48837df800	                  cmp qword [rbp - 8], 0	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4009659	            0x75bb	                           jne 0x4009616	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x400965b	        0x837df400	                cmp dword [rbp - 0xc], 0	      6074	cp-demangle.c	FUNCTION_92	IF_1	IF_4
0x400965f	            0x7411	                            je 0x4009672	      6074	cp-demangle.c	FUNCTION_92	IF_1	IF_4
0x4009661	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6075	cp-demangle.c	FUNCTION_92	IF_1	CALL_1
0x4009665	      0xbe00000000	                              mov esi, 0	      6075	cp-demangle.c	FUNCTION_92	IF_1	CALL_1
0x400966a	          0x4889c7	                            mov rdi, rax	      6075	cp-demangle.c	FUNCTION_92	IF_1	CALL_1
0x400966d	      0xe849bfffff	                call sym.d_append_string	      6075	cp-demangle.c	FUNCTION_92	IF_1	CALL_1
0x4009672	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4009676	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4009679	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x400967d	      0xb900000000	                              mov ecx, 0	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4009682	          0x4889c7	                            mov rdi, rax	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4009685	      0xe819f8ffff	               call sym.d_print_mod_list	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x400968a	        0x837df400	                cmp dword [rbp - 0xc], 0	      6079	cp-demangle.c	FUNCTION_92	IF_1	IF_5
0x400968e	            0x7411	                            je 0x40096a1	      6079	cp-demangle.c	FUNCTION_92	IF_1	IF_5
0x4009690	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6080	cp-demangle.c	FUNCTION_92	IF_1	CALL_3
0x4009694	      0xbe29000000	                           mov esi, 0x29	      6080	cp-demangle.c	FUNCTION_92	IF_1	CALL_3
0x4009699	          0x4889c7	                            mov rdi, rax	      6080	cp-demangle.c	FUNCTION_92	IF_1	CALL_3
0x400969c	      0xe865beffff	                  call sym.d_append_char	      6080	cp-demangle.c	FUNCTION_92	IF_1	CALL_3
0x40096a1	        0x837df000	               cmp dword [rbp - 0x10], 0	      6083	cp-demangle.c	FUNCTION_92	IF_6
0x40096a5	            0x7411	                            je 0x40096b8	      6083	cp-demangle.c	FUNCTION_92	IF_6
0x40096a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6084	cp-demangle.c	FUNCTION_92	CALL_4
0x40096ab	      0xbe20000000	                           mov esi, 0x20	      6084	cp-demangle.c	FUNCTION_92	CALL_4
0x40096b0	          0x4889c7	                            mov rdi, rax	      6084	cp-demangle.c	FUNCTION_92	CALL_4
0x40096b3	      0xe84ebeffff	                  call sym.d_append_char	      6084	cp-demangle.c	FUNCTION_92	CALL_4
0x40096b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6086	cp-demangle.c	FUNCTION_92	CALL_5
0x40096bc	      0xbe5b000000	                           mov esi, 0x5b	      6086	cp-demangle.c	FUNCTION_92	CALL_5
0x40096c1	          0x4889c7	                            mov rdi, rax	      6086	cp-demangle.c	FUNCTION_92	CALL_5
0x40096c4	      0xe83dbeffff	                  call sym.d_append_char	      6086	cp-demangle.c	FUNCTION_92	CALL_5
0x40096c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40096cd	        0x488b4008	                mov rax, qword [rax + 8]	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40096d1	          0x4885c0	                           test rax, rax	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40096d4	            0x7419	                            je 0x40096ef	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40096d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40096da	        0x488b5008	                mov rdx, qword [rax + 8]	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40096de	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40096e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40096e5	            0x89ce	                            mov esi, ecx	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40096e7	          0x4889c7	                            mov rdi, rax	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40096ea	      0xe80af5ffff	                   call sym.d_print_comp	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40096ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6091	cp-demangle.c	FUNCTION_92	CALL_7
0x40096f3	      0xbe5d000000	                           mov esi, 0x5d	      6091	cp-demangle.c	FUNCTION_92	CALL_7
0x40096f8	          0x4889c7	                            mov rdi, rax	      6091	cp-demangle.c	FUNCTION_92	CALL_7
0x40096fb	      0xe806beffff	                  call sym.d_append_char	      6091	cp-demangle.c	FUNCTION_92	CALL_7
0x4009700	              0x90	                                     nop	      6092	cp-demangle.c	FUNCTION_92
0x4009701	              0xc9	                                   leave	      6092	cp-demangle.c	FUNCTION_92
0x4009702	              0xc3	                                     ret	      6092	cp-demangle.c	FUNCTION_92
d_make_function_param	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	20
0x40005d3	              0x55	                                push rbp	      1183	cp-demangle.c	FUNCTION_14
0x40005d4	          0x4889e5	                            mov rbp, rsp	      1183	cp-demangle.c	FUNCTION_14
0x40005d7	        0x4883ec20	                           sub rsp, 0x20	      1183	cp-demangle.c	FUNCTION_14
0x40005db	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1183	cp-demangle.c	FUNCTION_14
0x40005df	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1183	cp-demangle.c	FUNCTION_14
0x40005e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1186	cp-demangle.c	FUNCTION_14	CALL_1
0x40005e6	          0x4889c7	                            mov rdi, rax	      1186	cp-demangle.c	FUNCTION_14	CALL_1
0x40005e9	      0xe809fcffff	                   call sym.d_make_empty	      1186	cp-demangle.c	FUNCTION_14	CALL_1
0x40005ee	        0x488945f8	                mov qword [rbp - 8], rax	      1186	cp-demangle.c	FUNCTION_14	CALL_1
0x40005f2	      0x48837df800	                  cmp qword [rbp - 8], 0	      1187	cp-demangle.c	FUNCTION_14	IF_1
0x40005f7	            0x7418	                            je 0x4000611	      1187	cp-demangle.c	FUNCTION_14	IF_1
0x40005f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1189	cp-demangle.c	FUNCTION_14	IF_1
0x40005fd	    0xc70006000000	                      mov dword [rax], 6	      1189	cp-demangle.c	FUNCTION_14	IF_1
0x4000603	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4000606	          0x4863d0	                         movsxd rdx, eax	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4000609	        0x488b45f8	                mov rax, qword [rbp - 8]	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x400060d	        0x48895008	                mov qword [rax + 8], rdx	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4000611	        0x488b45f8	                mov rax, qword [rbp - 8]	      1192	cp-demangle.c	FUNCTION_14
0x4000615	              0xc9	                                   leave	      1193	cp-demangle.c	FUNCTION_14
0x4000616	              0xc3	                                     ret	      1193	cp-demangle.c	FUNCTION_14
d_pointer_to_member_type	IF,3:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	45
0x40034cc	              0x55	                                push rbp	      3032	cp-demangle.c	FUNCTION_43
0x40034cd	          0x4889e5	                            mov rbp, rsp	      3032	cp-demangle.c	FUNCTION_43
0x40034d0	        0x4883ec20	                           sub rsp, 0x20	      3032	cp-demangle.c	FUNCTION_43
0x40034d4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3032	cp-demangle.c	FUNCTION_43
0x40034d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034dc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034e0	           0xfb600	                   movzx eax, byte [rax]	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034e3	            0x3c4d	                            cmp al, 0x4d	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034e5	            0x751b	                           jne 0x4003502	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034eb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034ef	        0x488d5001	                      lea rdx, [rax + 1]	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034f7	        0x48895018	             mov qword [rax + 0x18], rdx	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x40034fb	      0xb800000000	                              mov eax, 0	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x4003500	            0xeb05	                           jmp 0x4003507	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x4003502	      0xb801000000	                              mov eax, 1	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x4003507	            0x84c0	                             test al, al	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x4003509	            0x7407	                            je 0x4003512	      3036	cp-demangle.c	FUNCTION_43	IF_1	CALL_1
0x400350b	      0xb800000000	                              mov eax, 0	      3037	cp-demangle.c	FUNCTION_43	IF_1
0x4003510	            0xeb55	                           jmp 0x4003567	      3037	cp-demangle.c	FUNCTION_43	IF_1
0x4003512	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3039	cp-demangle.c	FUNCTION_43
0x4003516	          0x4889c7	                            mov rdi, rax	      3039	cp-demangle.c	FUNCTION_43
0x4003519	      0xe800000000	                          call 0x400351e	      3039	cp-demangle.c	FUNCTION_43
0x400351e	        0x488945f0	             mov qword [rbp - 0x10], rax	      3039	cp-demangle.c	FUNCTION_43
0x4003522	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3040	cp-demangle.c	FUNCTION_43	IF_2
0x4003527	            0x7507	                           jne 0x4003530	      3040	cp-demangle.c	FUNCTION_43	IF_2
0x4003529	      0xb800000000	                              mov eax, 0	      3041	cp-demangle.c	FUNCTION_43	IF_2
0x400352e	            0xeb37	                           jmp 0x4003567	      3041	cp-demangle.c	FUNCTION_43	IF_2
0x4003530	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3058	cp-demangle.c	FUNCTION_43
0x4003534	          0x4889c7	                            mov rdi, rax	      3058	cp-demangle.c	FUNCTION_43
0x4003537	      0xe800000000	                          call 0x400353c	      3058	cp-demangle.c	FUNCTION_43
0x400353c	        0x488945f8	                mov qword [rbp - 8], rax	      3058	cp-demangle.c	FUNCTION_43
0x4003540	      0x48837df800	                  cmp qword [rbp - 8], 0	      3059	cp-demangle.c	FUNCTION_43	IF_3
0x4003545	            0x7507	                           jne 0x400354e	      3059	cp-demangle.c	FUNCTION_43	IF_3
0x4003547	      0xb800000000	                              mov eax, 0	      3060	cp-demangle.c	FUNCTION_43	IF_3
0x400354c	            0xeb19	                           jmp 0x4003567	      3060	cp-demangle.c	FUNCTION_43	IF_3
0x400354e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3062	cp-demangle.c	FUNCTION_43	CALL_2
0x4003552	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3062	cp-demangle.c	FUNCTION_43	CALL_2
0x4003556	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3062	cp-demangle.c	FUNCTION_43	CALL_2
0x400355a	      0xbe2b000000	                           mov esi, 0x2b	      3062	cp-demangle.c	FUNCTION_43	CALL_2
0x400355f	          0x4889c7	                            mov rdi, rax	      3062	cp-demangle.c	FUNCTION_43	CALL_2
0x4003562	      0xe8f9ccffff	                    call sym.d_make_comp	      3062	cp-demangle.c	FUNCTION_43	CALL_2
0x4003567	              0xc9	                                   leave	      3063	cp-demangle.c	FUNCTION_43
0x4003568	              0xc3	                                     ret	      3063	cp-demangle.c	FUNCTION_43
d_append_char	IF,1:DO,0:functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0	27
0x4005506	              0x55	                                push rbp	      4231	cp-demangle.c	FUNCTION_72
0x4005507	          0x4889e5	                            mov rbp, rsp	      4231	cp-demangle.c	FUNCTION_72
0x400550a	        0x4883ec10	                           sub rsp, 0x10	      4231	cp-demangle.c	FUNCTION_72
0x400550e	        0x48897df8	                mov qword [rbp - 8], rdi	      4231	cp-demangle.c	FUNCTION_72
0x4005512	            0x89f0	                            mov eax, esi	      4231	cp-demangle.c	FUNCTION_72
0x4005514	          0x8845f4	                mov byte [rbp - 0xc], al	      4231	cp-demangle.c	FUNCTION_72
0x4005517	        0x488b45f8	                mov rax, qword [rbp - 8]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400551b	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005522	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005528	            0x750c	                           jne 0x4005536	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400552a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4233	cp-demangle.c	FUNCTION_72	CALL_1
0x400552e	          0x4889c7	                            mov rdi, rax	      4233	cp-demangle.c	FUNCTION_72	CALL_1
0x4005531	      0xe85bffffff	                  call sym.d_print_flush	      4233	cp-demangle.c	FUNCTION_72	CALL_1
0x4005536	        0x488b45f8	                mov rax, qword [rbp - 8]	      4235	cp-demangle.c	FUNCTION_72
0x400553a	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005541	        0x488d4801	                      lea rcx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005545	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4235	cp-demangle.c	FUNCTION_72
0x4005549	    0x48898a000100	            mov qword [rdx + 0x100], rcx	      4235	cp-demangle.c	FUNCTION_72
0x4005550	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4235	cp-demangle.c	FUNCTION_72
0x4005554	         0xfb64df4	             movzx ecx, byte [rbp - 0xc]	      4235	cp-demangle.c	FUNCTION_72
0x4005558	          0x880c02	                mov byte [rdx + rax], cl	      4235	cp-demangle.c	FUNCTION_72
0x400555b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4236	cp-demangle.c	FUNCTION_72
0x400555f	         0xfb655f4	             movzx edx, byte [rbp - 0xc]	      4236	cp-demangle.c	FUNCTION_72
0x4005563	    0x889008010000	              mov byte [rax + 0x108], dl	      4236	cp-demangle.c	FUNCTION_72
0x4005569	              0x90	                                     nop	      4237	cp-demangle.c	FUNCTION_72
0x400556a	              0xc9	                                   leave	      4237	cp-demangle.c	FUNCTION_72
0x400556b	              0xc3	                                     ret	      4237	cp-demangle.c	FUNCTION_72
d_growable_string_append_buffer	IF,2:DO,0:functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0	53
0x40050a2	              0x55	                                push rbp	      4002	cp-demangle.c	FUNCTION_65
0x40050a3	          0x4889e5	                            mov rbp, rsp	      4002	cp-demangle.c	FUNCTION_65
0x40050a6	        0x4883ec30	                           sub rsp, 0x30	      4002	cp-demangle.c	FUNCTION_65
0x40050aa	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4002	cp-demangle.c	FUNCTION_65
0x40050ae	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4002	cp-demangle.c	FUNCTION_65
0x40050b2	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4002	cp-demangle.c	FUNCTION_65
0x40050b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4005	cp-demangle.c	FUNCTION_65
0x40050ba	        0x488b5008	                mov rdx, qword [rax + 8]	      4005	cp-demangle.c	FUNCTION_65
0x40050be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4005	cp-demangle.c	FUNCTION_65
0x40050c2	          0x4801d0	                            add rax, rdx	      4005	cp-demangle.c	FUNCTION_65
0x40050c5	        0x4883c001	                              add rax, 1	      4005	cp-demangle.c	FUNCTION_65
0x40050c9	        0x488945f8	                mov qword [rbp - 8], rax	      4005	cp-demangle.c	FUNCTION_65
0x40050cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40050d1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40050d5	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40050d9	            0x7313	                           jae 0x40050ee	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40050db	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4007	cp-demangle.c	FUNCTION_65	CALL_1
0x40050df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4007	cp-demangle.c	FUNCTION_65	CALL_1
0x40050e3	          0x4889d6	                            mov rsi, rdx	      4007	cp-demangle.c	FUNCTION_65	CALL_1
0x40050e6	          0x4889c7	                            mov rdi, rax	      4007	cp-demangle.c	FUNCTION_65	CALL_1
0x40050e9	      0xe8e9feffff	       call sym.d_growable_string_resize	      4007	cp-demangle.c	FUNCTION_65	CALL_1
0x40050ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x40050f2	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x40050f5	            0x85c0	                           test eax, eax	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x40050f7	            0x755b	                           jne 0x4005154	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x40050f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x40050fd	          0x488b10	                    mov rdx, qword [rax]	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x4005100	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x4005104	        0x488b4008	                mov rax, qword [rax + 8]	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x4005108	        0x488d0c02	                    lea rcx, [rdx + rax]	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x400510c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x4005110	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x4005114	          0x4889c6	                            mov rsi, rax	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x4005117	          0x4889cf	                            mov rdi, rcx	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x400511a	      0xe800000000	                          call 0x400511f	      4012	cp-demangle.c	FUNCTION_65	CALL_2
0x400511f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4013	cp-demangle.c	FUNCTION_65
0x4005123	          0x488b10	                    mov rdx, qword [rax]	      4013	cp-demangle.c	FUNCTION_65
0x4005126	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4013	cp-demangle.c	FUNCTION_65
0x400512a	        0x488b4808	                mov rcx, qword [rax + 8]	      4013	cp-demangle.c	FUNCTION_65
0x400512e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4013	cp-demangle.c	FUNCTION_65
0x4005132	          0x4801c8	                            add rax, rcx	      4013	cp-demangle.c	FUNCTION_65
0x4005135	          0x4801d0	                            add rax, rdx	      4013	cp-demangle.c	FUNCTION_65
0x4005138	          0xc60000	                       mov byte [rax], 0	      4013	cp-demangle.c	FUNCTION_65
0x400513b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4014	cp-demangle.c	FUNCTION_65
0x400513f	        0x488b5008	                mov rdx, qword [rax + 8]	      4014	cp-demangle.c	FUNCTION_65
0x4005143	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4014	cp-demangle.c	FUNCTION_65
0x4005147	          0x4801c2	                            add rdx, rax	      4014	cp-demangle.c	FUNCTION_65
0x400514a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4014	cp-demangle.c	FUNCTION_65
0x400514e	        0x48895008	                mov qword [rax + 8], rdx	      4014	cp-demangle.c	FUNCTION_65
0x4005152	            0xeb01	                           jmp 0x4005155	      4014	cp-demangle.c	FUNCTION_65
0x4005154	              0x90	                                     nop	      4010	cp-demangle.c	FUNCTION_65	IF_2
0x4005155	              0xc9	                                   leave	      4015	cp-demangle.c	FUNCTION_65
0x4005156	              0xc3	                                     ret	      4015	cp-demangle.c	FUNCTION_65
d_substitution	IF,14:DO,1:functions,0:ELSE,4:FOR,1:CALL,9:SWITCH,0:WHILE,0	217
0x4004bf5	              0x55	                                push rbp	      3837	cp-demangle.c	FUNCTION_60
0x4004bf6	          0x4889e5	                            mov rbp, rsp	      3837	cp-demangle.c	FUNCTION_60
0x4004bf9	        0x4883ec50	                           sub rsp, 0x50	      3837	cp-demangle.c	FUNCTION_60
0x4004bfd	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3837	cp-demangle.c	FUNCTION_60
0x4004c01	          0x8975b4	             mov dword [rbp - 0x4c], esi	      3837	cp-demangle.c	FUNCTION_60
0x4004c04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c08	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c0c	           0xfb600	                   movzx eax, byte [rax]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c0f	            0x3c53	                            cmp al, 0x53	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c11	            0x751b	                           jne 0x4004c2e	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c17	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c1b	        0x488d5001	                      lea rdx, [rax + 1]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c1f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c23	        0x48895018	             mov qword [rax + 0x18], rdx	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c27	      0xb800000000	                              mov eax, 0	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c2c	            0xeb05	                           jmp 0x4004c33	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c2e	      0xb801000000	                              mov eax, 1	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c33	            0x84c0	                             test al, al	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c35	            0x740a	                            je 0x4004c41	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4004c37	      0xb800000000	                              mov eax, 0	      3841	cp-demangle.c	FUNCTION_60	IF_1
0x4004c3c	      0xe9a9020000	                           jmp 0x4004eea	      3841	cp-demangle.c	FUNCTION_60	IF_1
0x4004c41	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c45	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c49	           0xfb600	                   movzx eax, byte [rax]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c4c	            0x84c0	                             test al, al	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c4e	            0x7419	                            je 0x4004c69	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c50	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c54	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c58	        0x488d4801	                      lea rcx, [rax + 1]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c5c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c60	        0x48894a18	             mov qword [rdx + 0x18], rcx	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c64	           0xfb600	                   movzx eax, byte [rax]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c67	            0xeb05	                           jmp 0x4004c6e	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c69	      0xb800000000	                              mov eax, 0	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c6e	          0x8845ce	               mov byte [rbp - 0x32], al	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4004c71	        0x807dce5f	            cmp byte [rbp - 0x32], 0x5f 	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c75	            0x7420	                            je 0x4004c97	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c77	        0x807dce2f	            cmp byte [rbp - 0x32], 0x2f 	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c7b	            0x7e06	                           jle 0x4004c83	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c7d	        0x807dce39	            cmp byte [rbp - 0x32], 0x39 	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c81	            0x7e14	                           jle 0x4004c97	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c83	        0x807dce40	            cmp byte [rbp - 0x32], 0x40 	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c87	     0xf8efd000000	                           jle 0x4004d8a	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c8d	        0x807dce5a	            cmp byte [rbp - 0x32], 0x5a 	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c91	     0xf8ff3000000	                            jg 0x4004d8a	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4004c97	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3848	cp-demangle.c	FUNCTION_60	IF_2
0x4004c9e	        0x807dce5f	            cmp byte [rbp - 0x32], 0x5f 	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4004ca2	     0xf84b2000000	                            je 0x4004d5a	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4004ca8	        0x807dce2f	            cmp byte [rbp - 0x32], 0x2f 	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cac	            0x7e23	                           jle 0x4004cd1	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cae	        0x807dce39	            cmp byte [rbp - 0x32], 0x39 	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cb2	            0x7f1d	                            jg 0x4004cd1	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cb4	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cb7	            0x89d0	                            mov eax, edx	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cb9	          0xc1e003	                              shl eax, 3	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cbc	             0x1d0	                            add eax, edx	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cbe	          0xc1e002	                              shl eax, 2	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cc1	            0x89c2	                            mov edx, eax	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cc3	         0xfbe45ce	            movsx eax, byte [rbp - 0x32]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cc7	             0x1d0	                            add eax, edx	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cc9	          0x83e830	                           sub eax, 0x30	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004ccc	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004ccf	            0xeb33	                           jmp 0x4004d04	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4004cd1	        0x807dce40	            cmp byte [rbp - 0x32], 0x40 	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cd5	            0x7e23	                           jle 0x4004cfa	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cd7	        0x807dce5a	            cmp byte [rbp - 0x32], 0x5a 	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cdb	            0x7f1d	                            jg 0x4004cfa	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cdd	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004ce0	            0x89d0	                            mov eax, edx	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004ce2	          0xc1e003	                              shl eax, 3	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004ce5	             0x1d0	                            add eax, edx	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004ce7	          0xc1e002	                              shl eax, 2	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cea	            0x89c2	                            mov edx, eax	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cec	         0xfbe45ce	            movsx eax, byte [rbp - 0x32]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cf0	             0x1d0	                            add eax, edx	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cf2	          0x83e837	                           sub eax, 0x37	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cf5	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cf8	            0xeb0a	                           jmp 0x4004d04	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4004cfa	      0xb800000000	                              mov eax, 0	      3860	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_2
0x4004cff	      0xe9e6010000	                           jmp 0x4004eea	      3860	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_2
0x4004d04	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4004d07	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4004d0a	            0x730a	                           jae 0x4004d16	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4004d0c	      0xb800000000	                              mov eax, 0	      3862	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4004d11	      0xe9d4010000	                           jmp 0x4004eea	      3862	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4004d16	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3863	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1
0x4004d19	          0x8945d0	             mov dword [rbp - 0x30], eax	      3863	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1
0x4004d1c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d20	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d24	           0xfb600	                   movzx eax, byte [rax]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d27	            0x84c0	                             test al, al	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d29	            0x7419	                            je 0x4004d44	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d2b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d2f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d33	        0x488d4801	                      lea rcx, [rax + 1]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d37	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d3b	        0x48894a18	             mov qword [rdx + 0x18], rcx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d3f	           0xfb600	                   movzx eax, byte [rax]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d42	            0xeb05	                           jmp 0x4004d49	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d44	      0xb800000000	                              mov eax, 0	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d49	          0x8845ce	               mov byte [rbp - 0x32], al	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4004d4c	        0x807dce5f	            cmp byte [rbp - 0x32], 0x5f 	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4004d50	     0xf8552ffffff	                           jne 0x4004ca8	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4004d56	        0x8345d001	               add dword [rbp - 0x30], 1	      3868	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4004d5a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4004d5e	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4004d61	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4004d64	            0x770a	                            ja 0x4004d70	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4004d66	      0xb800000000	                              mov eax, 0	      3872	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4004d6b	      0xe97a010000	                           jmp 0x4004eea	      3872	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4004d70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4004d74	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4004d78	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4004d7b	        0x48c1e203	                              shl rdx, 3	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4004d7f	          0x4801d0	                            add rax, rdx	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4004d82	          0x488b00	                    mov rax, qword [rax]	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4004d85	      0xe960010000	                           jmp 0x4004eea	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4004d8a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004d8e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004d91	          0x83e008	                              and eax, 8	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004d94	            0x85c0	                           test eax, eax	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004d96	           0xf95c0	                                setne al	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004d99	           0xfb6c0	                           movzx eax, al	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004d9c	          0x8945d8	             mov dword [rbp - 0x28], eax	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004d9f	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4004da3	            0x7527	                           jne 0x4004dcc	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4004da5	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4004da9	            0x7421	                            je 0x4004dcc	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4004dab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3887	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	CALL_4
0x4004daf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3887	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	CALL_4
0x4004db3	           0xfb600	                   movzx eax, byte [rax]	      3887	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	CALL_4
0x4004db6	          0x8845cf	               mov byte [rbp - 0x31], al	      3887	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	CALL_4
0x4004db9	        0x807dcf43	            cmp byte [rbp - 0x31], 0x43 	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4004dbd	            0x7406	                            je 0x4004dc5	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4004dbf	        0x807dcf44	            cmp byte [rbp - 0x31], 0x44 	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4004dc3	            0x7507	                           jne 0x4004dcc	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4004dc5	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4004dcc	    0x48c745f80000	                  mov qword [rbp - 8], 0	      3892	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004dd4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4004ddc	      0xe9f6000000	                           jmp 0x4004ed7	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4004de1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004de5	           0xfb600	                   movzx eax, byte [rax]	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004de8	          0x3a45ce	               cmp al, byte [rbp - 0x32]	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004deb	     0xf85e1000000	                           jne 0x4004ed2	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004df1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x4004df5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x4004df9	          0x4885c0	                           test rax, rax	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x4004dfc	            0x7429	                            je 0x4004e27	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x4004dfe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e02	          0x8b5030	            mov edx, dword [rax + 0x30] 	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e09	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e0d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e11	          0x4889ce	                            mov rsi, rcx	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e14	          0x4889c7	                            mov rdi, rax	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e17	      0xe8fbb7ffff	                     call sym.d_make_sub	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e1c	          0x4889c2	                            mov rdx, rax	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e1f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e23	        0x48895040	             mov qword [rax + 0x40], rdx	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4004e27	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e2b	            0x7418	                            je 0x4004e45	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3907	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e31	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3907	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e35	        0x488945e8	             mov qword [rbp - 0x18], rax	      3907	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e39	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e3d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e40	          0x8945dc	             mov dword [rbp - 0x24], eax	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e43	            0xeb16	                           jmp 0x4004e5b	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4004e45	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3912	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4004e49	        0x488b4008	                mov rax, qword [rax + 8]	      3912	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4004e4d	        0x488945e8	             mov qword [rbp - 0x18], rax	      3912	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4004e51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4004e55	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4004e58	          0x8945dc	             mov dword [rbp - 0x24], eax	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4004e5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004e5f	          0x8b5048	            mov edx, dword [rax + 0x48] 	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004e62	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004e65	             0x1c2	                            add edx, eax	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004e67	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004e6b	          0x895048	             mov dword [rax + 0x48], edx	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004e6e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x4004e71	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x4004e75	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x4004e79	          0x4889ce	                            mov rsi, rcx	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x4004e7c	          0x4889c7	                            mov rdi, rax	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x4004e7f	      0xe893b7ffff	                     call sym.d_make_sub	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x4004e84	        0x488945f0	             mov qword [rbp - 0x10], rax	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x4004e88	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4004e8c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4004e90	           0xfb600	                   movzx eax, byte [rax]	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4004e93	            0x3c42	                            cmp al, 0x42	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4004e95	            0x7535	                           jne 0x4004ecc	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4004e97	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4004e9b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4004e9f	          0x4889d6	                            mov rsi, rdx	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4004ea2	          0x4889c7	                            mov rdi, rax	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4004ea5	      0xe855bbffff	                     call sym.d_abi_tags	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4004eaa	        0x488945f0	             mov qword [rbp - 0x10], rax	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4004eae	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4004eb2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4004eb6	          0x4889d6	                            mov rsi, rdx	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4004eb9	          0x4889c7	                            mov rdi, rax	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4004ebc	      0xe8cafcffff	             call sym.d_add_substitution	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4004ec1	            0x85c0	                           test eax, eax	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4004ec3	            0x7507	                           jne 0x4004ecc	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4004ec5	      0xb800000000	                              mov eax, 0	      3923	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14
0x4004eca	            0xeb1e	                           jmp 0x4004eea	      3923	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14
0x4004ecc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3925	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004ed0	            0xeb18	                           jmp 0x4004eea	      3925	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4004ed2	      0x488345e038	           add qword [rbp - 0x20], 0x38 	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4004ed7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4004edb	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4004edf	     0xf82fcfeffff	                            jb 0x4004de1	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4004ee5	      0xb800000000	                              mov eax, 0	      3929	cp-demangle.c	FUNCTION_60	ELSE_3
0x4004eea	              0xc9	                                   leave	      3931	cp-demangle.c	FUNCTION_60
0x4004eeb	              0xc3	                                     ret	      3931	cp-demangle.c	FUNCTION_60
