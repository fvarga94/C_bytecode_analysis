aarch64_find_call	FOR,1:functions,0:ELSE,0:WHILE,0:DO,0:CALL,12:SWITCH,0:IF,4	106
0x4000040	              0x55	                                push rbp	        49	aarch64.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        49	aarch64.c	FUNCTION_1
0x4000044	        0x4883ec50	                           sub rsp, 0x50	        49	aarch64.c	FUNCTION_1
0x4000048	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        49	aarch64.c	FUNCTION_1
0x400004c	        0x488975c0	             mov qword [rbp - 0x40], rsi	        49	aarch64.c	FUNCTION_1
0x4000050	        0x488955b8	             mov qword [rbp - 0x48], rdx	        49	aarch64.c	FUNCTION_1
0x4000054	    0x8b0500000000	            mov eax, dword [0x0400005a] 	        54	aarch64.c	FUNCTION_1	CALL_2
0x400005a	      0x2500010000	                          and eax, 0x100	        54	aarch64.c	FUNCTION_1	CALL_2
0x400005f	            0x85c0	                           test eax, eax	        54	aarch64.c	FUNCTION_1	CALL_2
0x4000061	            0x7422	                            je 0x4000085	        54	aarch64.c	FUNCTION_1	CALL_2
0x4000063	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        54	aarch64.c	FUNCTION_1	CALL_2
0x4000067	        0x488b4010	            mov rax, qword [rax + 0x10] 	        54	aarch64.c	FUNCTION_1	CALL_2
0x400006b	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	        54	aarch64.c	FUNCTION_1	CALL_2
0x400006f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        54	aarch64.c	FUNCTION_1	CALL_2
0x4000073	          0x4889c6	                            mov rsi, rax	        54	aarch64.c	FUNCTION_1	CALL_2
0x4000076	      0xbf00000000	                              mov edi, 0	        54	aarch64.c	FUNCTION_1	CALL_2
0x400007b	      0xb800000000	                              mov eax, 0	        54	aarch64.c	FUNCTION_1	CALL_2
0x4000080	      0xe800000000	                          call 0x4000085	        54	aarch64.c	FUNCTION_1	CALL_2
0x4000085	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        58	aarch64.c	FUNCTION_1	FOR_1
0x4000089	        0x488945e0	             mov qword [rbp - 0x20], rax	        58	aarch64.c	FUNCTION_1	FOR_1
0x400008d	      0xe93d010000	                           jmp 0x40001cf	        58	aarch64.c	FUNCTION_1	FOR_1
0x4000092	    0x488b05000000	            mov rax, qword [0x04000099] 	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x4000099	        0x488b4008	                mov rax, qword [rax + 8]	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x400009d	        0x488b4038	            mov rax, qword [rax + 0x38] 	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000a1	    0x488b0d000000	            mov rcx, qword [0x040000a8] 	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000a8	    0x488b15000000	            mov rdx, qword [0x040000af] 	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000af	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000b3	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000b7	          0x4829d6	                            sub rsi, rdx	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000ba	          0x4889f2	                            mov rdx, rsi	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000bd	          0x4801ca	                            add rdx, rcx	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000c0	          0x4889d7	                            mov rdi, rdx	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000c3	            0xffd0	                                call rax	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000c5	          0x8945dc	             mov dword [rbp - 0x24], eax	        61	aarch64.c	FUNCTION_1	FOR_1	CALL_3
0x40000c8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        64	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x40000cb	      0x250000007c	                     and eax, 0x7c000000	        64	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x40000d0	      0x3d00000014	                     cmp eax, 0x14000000	        64	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x40000d5	     0xf85ef000000	                           jne 0x40001ca	        64	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x40000db	    0x8b0500000000	            mov eax, dword [0x040000e1] 	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000e1	      0x2500010000	                          and eax, 0x100	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000e6	            0x85c0	                           test eax, eax	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000e8	            0x7416	                            je 0x4000100	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000ee	          0x4889c6	                            mov rsi, rax	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000f1	      0xbf00000000	                              mov edi, 0	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000f6	      0xb800000000	                              mov eax, 0	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x40000fb	      0xe800000000	                          call 0x4000100	        66	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x4000100	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        71	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x4000103	      0x25ffffff03	                      and eax, 0x3ffffff	        71	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x4000108	    0x483500000002	                      xor rax, 0x2000000	        71	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x400010e	    0x482d00000002	                      sub rax, 0x2000000	        71	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x4000114	        0x48c1e002	                              shl rax, 2	        71	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x4000118	        0x488945e8	             mov qword [rbp - 0x18], rax	        71	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x400011c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        73	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x4000120	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x4000124	          0x4801d0	                            add rax, rdx	        73	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x4000127	        0x488945f0	             mov qword [rbp - 0x10], rax	        73	aarch64.c	FUNCTION_1	FOR_1	IF_1
0x400012b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        75	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_6
0x400012f	            0x89c7	                            mov edi, eax	        75	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_6
0x4000131	      0xe800000000	                          call 0x4000136	        75	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_6
0x4000136	            0x85c0	                           test eax, eax	        75	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_6
0x4000138	            0x7477	                            je 0x40001b1	        75	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_6
0x400013a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        77	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_7
0x400013e	          0x4889c6	                            mov rsi, rax	        77	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_7
0x4000141	      0xbf00000000	                              mov edi, 0	        77	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_7
0x4000146	      0xe800000000	                          call 0x400014b	        77	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_7
0x400014b	        0x488945f8	                mov qword [rbp - 8], rax	        77	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	CALL_7
0x400014f	      0x48837df800	                  cmp qword [rbp - 8], 0	        79	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3
0x4000154	            0x745b	                            je 0x40001b1	        79	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3
0x4000156	    0x8b0500000000	            mov eax, dword [0x0400015c] 	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400015c	      0x2500010000	                          and eax, 0x100	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000161	            0x85c0	                           test eax, eax	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000163	            0x7425	                            je 0x400018a	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000165	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000169	          0x488b08	                    mov rcx, qword [rax]	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400016c	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000170	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000174	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000178	          0x4889c6	                            mov rsi, rax	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400017b	      0xbf00000000	                              mov edi, 0	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000180	      0xb800000000	                              mov eax, 0	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4000185	      0xe800000000	                          call 0x400018a	        81	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400018a	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4
0x400018e	          0x488b00	                    mov rax, qword [rax]	        86	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4
0x4000191	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        86	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4
0x4000195	            0x751a	                           jne 0x40001b1	        86	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4
0x4000197	        0x488b4df8	                mov rcx, qword [rbp - 8]	        89	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_10
0x400019b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        89	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_10
0x400019f	      0xba00000000	                              mov edx, 0	        89	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40001a4	          0x4889ce	                            mov rsi, rcx	        89	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40001a7	          0x4889c7	                            mov rdi, rax	        89	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40001aa	      0xe800000000	                          call 0x40001af	        89	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40001af	            0xeb19	                           jmp 0x40001ca	        90	aarch64.c	FUNCTION_1	FOR_1	IF_1	IF_2	IF_3	IF_4
0x40001b1	    0x8b0500000000	            mov eax, dword [0x040001b7] 	        96	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_12
0x40001b7	      0x2500010000	                          and eax, 0x100	        96	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_12
0x40001bc	            0x85c0	                           test eax, eax	        96	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_12
0x40001be	            0x740a	                            je 0x40001ca	        96	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_12
0x40001c0	      0xbf00000000	                              mov edi, 0	        96	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_12
0x40001c5	      0xe800000000	                          call 0x40001ca	        96	aarch64.c	FUNCTION_1	FOR_1	IF_1	CALL_12
0x40001ca	      0x488345e004	               add qword [rbp - 0x20], 4	        58	aarch64.c	FUNCTION_1	FOR_1
0x40001cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        58	aarch64.c	FUNCTION_1	FOR_1
0x40001d3	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	        58	aarch64.c	FUNCTION_1	FOR_1
0x40001d7	     0xf82b5feffff	                            jb 0x4000092	        58	aarch64.c	FUNCTION_1	FOR_1
0x40001dd	              0x90	                                     nop	        99	aarch64.c	FUNCTION_1
0x40001de	              0xc9	                                   leave	        99	aarch64.c	FUNCTION_1
0x40001df	              0xc3	                                     ret	        99	aarch64.c	FUNCTION_1
