split_sections	SWITCH,0:DO,1:CALL,4:functions,0:IF,6:ELSE,2:WHILE,0:FOR,2	208
0x4000bec	              0x55	                                push rbp	       456	ldwrite.c	FUNCTION_5
0x4000bed	          0x4889e5	                            mov rbp, rsp	       456	ldwrite.c	FUNCTION_5
0x4000bf0	        0x4883c480	             add rsp, 0xffffffffffffff80	       456	ldwrite.c	FUNCTION_5
0x4000bf4	        0x48897d88	             mov qword [rbp - 0x78], rdi	       456	ldwrite.c	FUNCTION_5
0x4000bf8	        0x48897580	             mov qword [rbp - 0x80], rsi	       456	ldwrite.c	FUNCTION_5
0x4000bfc	    0x64488b042528	                mov rax, qword fs:[0x28]	       456	ldwrite.c	FUNCTION_5
0x4000c05	        0x488945f8	                mov qword [rbp - 8], rax	       456	ldwrite.c	FUNCTION_5
0x4000c09	            0x31c0	                            xor eax, eax	       456	ldwrite.c	FUNCTION_5
0x4000c0b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       458	ldwrite.c	FUNCTION_5
0x4000c0f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       458	ldwrite.c	FUNCTION_5
0x4000c15	          0x894594	             mov dword [rbp - 0x6c], eax	       458	ldwrite.c	FUNCTION_5
0x4000c18	        0x488b4588	             mov rax, qword [rbp - 0x78]	       461	ldwrite.c	FUNCTION_5	FOR_1
0x4000c1c	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       461	ldwrite.c	FUNCTION_5	FOR_1
0x4000c23	        0x488945a8	             mov qword [rbp - 0x58], rax	       461	ldwrite.c	FUNCTION_5	FOR_1
0x4000c27	      0xe9cc020000	                           jmp 0x4000ef8	       461	ldwrite.c	FUNCTION_5	FOR_1
0x4000c2c	    0xc74590000000	               mov dword [rbp - 0x70], 0	       465	ldwrite.c	FUNCTION_5	FOR_1
0x4000c33	    0xc74598000000	               mov dword [rbp - 0x68], 0	       466	ldwrite.c	FUNCTION_5	FOR_1
0x4000c3a	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       467	ldwrite.c	FUNCTION_5	FOR_1
0x4000c41	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       468	ldwrite.c	FUNCTION_5	FOR_1
0x4000c49	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       471	ldwrite.c	FUNCTION_5	FOR_1
0x4000c4d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       471	ldwrite.c	FUNCTION_5	FOR_1
0x4000c51	        0x488945c8	             mov qword [rbp - 0x38], rax	       471	ldwrite.c	FUNCTION_5	FOR_1
0x4000c55	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       472	ldwrite.c	FUNCTION_5	FOR_1
0x4000c59	        0x488945d0	             mov qword [rbp - 0x30], rax	       472	ldwrite.c	FUNCTION_5	FOR_1
0x4000c5d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c65	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c69	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c70	        0x488945c0	             mov qword [rbp - 0x40], rax	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c74	      0xe964020000	                           jmp 0x4000edd	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c79	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       478	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c80	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       479	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c87	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       480	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000c8f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       481	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000c93	          0x8b4008	                mov eax, dword [rax + 8]	       481	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000c96	          0x83f801	                              cmp eax, 1	       481	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000c99	            0x7560	                           jne 0x4000cfb	       481	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000c9b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       485	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000c9f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       485	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000ca3	        0x488945e0	             mov qword [rbp - 0x20], rax	       485	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000ca7	        0x488b4580	             mov rax, qword [rbp - 0x80]	       487	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cab	         0xfb64001	               movzx eax, byte [rax + 1]	       487	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000caf	          0x83e060	                           and eax, 0x60	       487	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cb2	            0x84c0	                             test al, al	       487	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cb4	            0x740f	                            je 0x4000cc5	       487	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cb6	        0x488b4580	             mov rax, qword [rbp - 0x80]	       488	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cba	         0xfb64001	               movzx eax, byte [rax + 1]	       488	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cbe	          0x83e060	                           and eax, 0x60	       488	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cc1	            0x3c40	                            cmp al, 0x40	       488	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cc3	            0x750d	                           jne 0x4000cd2	       488	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cc5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       489	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cc9	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	       489	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000ccf	          0x8945a0	             mov dword [rbp - 0x60], eax	       489	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_2
0x4000cd2	        0x488b4580	             mov rax, qword [rbp - 0x80]	       491	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3	CALL_1
0x4000cd6	           0xfb600	                   movzx eax, byte [rax]	       491	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3	CALL_1
0x4000cd9	          0x83e003	                              and eax, 3	       491	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3	CALL_1
0x4000cdc	            0x3c02	                               cmp al, 2	       491	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3	CALL_1
0x4000cde	            0x750d	                           jne 0x4000ced	       491	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3	CALL_1
0x4000ce0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       492	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3
0x4000ce4	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       492	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3
0x4000cea	          0x8945a4	             mov dword [rbp - 0x5c], eax	       492	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1	IF_3
0x4000ced	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       494	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000cf1	        0x488b4038	            mov rax, qword [rax + 0x38] 	       494	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000cf5	        0x488945d8	             mov qword [rbp - 0x28], rax	       494	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000cf9	            0xeb2a	                           jmp 0x4000d25	       494	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_1
0x4000cfb	        0x488b4580	             mov rax, qword [rbp - 0x80]	       497	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4	CALL_2
0x4000cff	           0xfb600	                   movzx eax, byte [rax]	       497	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4	CALL_2
0x4000d02	          0x83e003	                              and eax, 3	       497	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4	CALL_2
0x4000d05	            0x3c02	                               cmp al, 2	       497	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4	CALL_2
0x4000d07	            0x751c	                           jne 0x4000d25	       497	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4	CALL_2
0x4000d09	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       498	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d0d	          0x8b4008	                mov eax, dword [rax + 8]	       498	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d10	          0x83f803	                              cmp eax, 3	       498	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d13	            0x740c	                            je 0x4000d21	       498	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d15	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       499	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d19	          0x8b4008	                mov eax, dword [rax + 8]	       499	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d1c	          0x83f804	                              cmp eax, 4	       499	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d1f	            0x7504	                           jne 0x4000d25	       499	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d21	        0x8345a401	               add dword [rbp - 0x5c], 1	       500	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_1	IF_4
0x4000d25	      0x48837db800	               cmp qword [rbp - 0x48], 0	       502	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d2a	     0xf8486010000	                            je 0x4000eb6	       502	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d30	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       503	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d33	          0x8b459c	             mov eax, dword [rbp - 0x64]	       503	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d36	             0x1c2	                            add edx, eax	       503	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d38	    0x8b0500000000	            mov eax, dword [0x04000d3e] 	       503	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d3e	            0x39c2	                            cmp edx, eax	       503	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d40	            0x732d	                           jae 0x4000d6f	       503	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d42	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       504	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d45	          0x8b4598	             mov eax, dword [rbp - 0x68]	       504	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d48	             0x1c2	                            add edx, eax	       504	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d4a	    0x8b0500000000	            mov eax, dword [0x04000d50] 	       504	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d50	            0x39c2	                            cmp edx, eax	       504	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d52	            0x731b	                           jae 0x4000d6f	       504	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d54	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       505	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d58	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       505	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d5c	          0x4801c2	                            add rdx, rax	       505	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d5f	    0x488b05000000	            mov rax, qword [0x04000d66] 	       505	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d66	          0x4839c2	                            cmp rdx, rax	       505	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d69	     0xf8247010000	                            jb 0x4000eb6	       505	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000d6f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       506	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_3
0x4000d73	          0x488b00	                    mov rax, qword [rax]	       506	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_3
0x4000d76	          0x4889c7	                            mov rdi, rax	       506	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_3
0x4000d79	      0xe817fbffff	              call sym.unsplittable_name	       506	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_3
0x4000d7e	            0x85c0	                           test eax, eax	       506	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_3
0x4000d80	     0xf8530010000	                           jne 0x4000eb6	       506	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_3
0x4000d86	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000d8a	          0x488b10	                    mov rdx, qword [rax]	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000d8d	        0x488d4d90	                   lea rcx, [rbp - 0x70]	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000d91	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000d95	        0x488b4588	             mov rax, qword [rbp - 0x78]	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000d99	          0x4889c7	                            mov rdi, rax	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000d9c	      0xe873fbffff	                  call sym.clone_section	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000da1	        0x488945e8	             mov qword [rbp - 0x18], rax	       513	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	CALL_4
0x4000da5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       517	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000da9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       517	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dad	    0x488990080100	            mov qword [rax + 0x108], rdx	       517	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000db4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       518	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000db8	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       518	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dc3	    0x488990100100	            mov qword [rax + 0x110], rdx	       518	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       519	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dce	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       519	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dd2	    0x488990100100	            mov qword [rax + 0x110], rdx	       519	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dd9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       520	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000ddd	    0x48c700000000	                      mov qword [rax], 0	       520	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000de4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       521	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000de8	        0x488945b8	             mov qword [rbp - 0x48], rax	       521	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       528	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000df0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       528	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000df4	        0x488945f0	             mov qword [rbp - 0x10], rax	       528	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000df8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       529	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000dfc	        0x488b4038	            mov rax, qword [rax + 0x38] 	       529	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e00	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       529	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e04	          0x4889c2	                            mov rdx, rax	       529	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       529	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e0b	        0x48895038	             mov qword [rax + 0x38], rdx	       529	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e0f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       530	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e13	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       530	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e17	        0x48895038	             mov qword [rax + 0x38], rdx	       530	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       532	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e1f	        0x480145c8	            add qword [rbp - 0x38], rax 	       532	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       533	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e27	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       533	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e2b	        0x48895028	             mov qword [rax + 0x28], rdx	       533	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       533	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e33	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       533	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       533	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e3b	        0x48895030	             mov qword [rax + 0x30], rdx	       533	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e3f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       539	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e43	        0x488b4010	            mov rax, qword [rax + 0x10] 	       539	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e47	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       539	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e4b	          0x4889c2	                            mov rdx, rax	       539	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e4e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       539	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e52	        0x48895010	             mov qword [rax + 0x10], rdx	       539	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e56	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       540	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e5a	          0x8b4008	                mov eax, dword [rax + 8]	       540	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e5d	          0x83f801	                              cmp eax, 1	       540	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e60	            0x7524	                           jne 0x4000e86	       540	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e62	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       542	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e66	        0x488b4020	            mov rax, qword [rax + 0x20] 	       542	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e6a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       542	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e6e	        0x48895068	             mov qword [rax + 0x68], rdx	       542	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e72	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       543	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e76	        0x488b4020	            mov rax, qword [rax + 0x20] 	       543	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e7a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       543	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e7e	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       543	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e82	        0x48895060	             mov qword [rax + 0x60], rdx	       543	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1	IF_6
0x4000e86	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       545	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e8a	          0x488b00	                    mov rax, qword [rax]	       545	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e8d	        0x488945c0	             mov qword [rbp - 0x40], rax	       545	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5	DO_1
0x4000e91	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       547	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e96	            0x75a7	                           jne 0x4000e3f	       547	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       550	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000e9c	        0x488945d0	             mov qword [rbp - 0x30], rax	       550	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000ea0	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       551	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000ea3	          0x89459c	             mov dword [rbp - 0x64], eax	       551	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000ea6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       552	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000ea9	          0x894598	             mov dword [rbp - 0x68], eax	       552	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000eac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       553	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000eb0	        0x488945b0	             mov qword [rbp - 0x50], rax	       553	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000eb4	            0xeb1c	                           jmp 0x4000ed2	       507	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	IF_5
0x4000eb6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       557	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000eba	        0x488945b8	             mov qword [rbp - 0x48], rax	       557	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000ebe	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       558	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000ec1	           0x1459c	             add dword [rbp - 0x64], eax	       558	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000ec4	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       559	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000ec7	           0x14598	             add dword [rbp - 0x68], eax	       559	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000eca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       560	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000ece	        0x480145b0	            add qword [rbp - 0x50], rax 	       560	ldwrite.c	FUNCTION_5	FOR_1	FOR_2	ELSE_2
0x4000ed2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000ed6	          0x488b00	                    mov rax, qword [rax]	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000ed9	        0x488945c0	             mov qword [rbp - 0x40], rax	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000edd	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000ee2	     0xf8591fdffff	                           jne 0x4000c79	       476	ldwrite.c	FUNCTION_5	FOR_1	FOR_2
0x4000ee8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       463	ldwrite.c	FUNCTION_5	FOR_1
0x4000eec	        0x488b4010	            mov rax, qword [rax + 0x10] 	       463	ldwrite.c	FUNCTION_5	FOR_1
0x4000ef0	        0x488945a8	             mov qword [rbp - 0x58], rax	       463	ldwrite.c	FUNCTION_5	FOR_1
0x4000ef4	        0x836d9401	               sub dword [rbp - 0x6c], 1	       463	ldwrite.c	FUNCTION_5	FOR_1
0x4000ef8	      0x48837da800	               cmp qword [rbp - 0x58], 0	       461	ldwrite.c	FUNCTION_5	FOR_1
0x4000efd	            0x740a	                            je 0x4000f09	       461	ldwrite.c	FUNCTION_5	FOR_1
0x4000eff	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       462	ldwrite.c	FUNCTION_5	FOR_1
0x4000f03	     0xf8523fdffff	                           jne 0x4000c2c	       462	ldwrite.c	FUNCTION_5	FOR_1
0x4000f09	              0x90	                                     nop	       565	ldwrite.c	FUNCTION_5
0x4000f0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       565	ldwrite.c	FUNCTION_5
0x4000f0e	    0x644833042528	                xor rax, qword fs:[0x28]	       565	ldwrite.c	FUNCTION_5
0x4000f17	            0x7405	                            je 0x4000f1e	       565	ldwrite.c	FUNCTION_5
0x4000f19	      0xe800000000	                          call 0x4000f1e	       565	ldwrite.c	FUNCTION_5
0x4000f1e	              0xc9	                                   leave	       565	ldwrite.c	FUNCTION_5
0x4000f1f	              0xc3	                                     ret	       565	ldwrite.c	FUNCTION_5
build_link_order	SWITCH,3:DO,0:CALL,37:functions,1:IF,22:ELSE,10:WHILE,0:FOR,0	512
0x4000040	              0x55	                                push rbp	        40	ldwrite.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        40	ldwrite.c	FUNCTION_1
0x4000044	    0x4881ec900000	                           sub rsp, 0x90	        40	ldwrite.c	FUNCTION_1
0x400004b	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	        40	ldwrite.c	FUNCTION_1
0x4000052	    0x64488b042528	                mov rax, qword fs:[0x28]	        40	ldwrite.c	FUNCTION_1
0x400005b	        0x488945f8	                mov qword [rbp - 8], rax	        40	ldwrite.c	FUNCTION_1
0x400005f	            0x31c0	                            xor eax, eax	        40	ldwrite.c	FUNCTION_1
0x4000061	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000068	          0x8b4008	                mov eax, dword [rax + 8]	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x400006b	          0x83f808	                              cmp eax, 8	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x400006e	            0x742a	                            je 0x400009a	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000070	          0x83f808	                              cmp eax, 8	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000073	            0x770e	                            ja 0x4000083	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000075	          0x83f805	                              cmp eax, 5	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000078	     0xf847e050000	                            je 0x40005fc	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x400007e	      0xe9fb070000	                           jmp 0x400087e	       310	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000083	          0x83f809	                              cmp eax, 9	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000086	     0xf84a9030000	                            je 0x4000435	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x400008c	          0x83f80c	                            cmp eax, 0xc	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x400008f	     0xf84dd060000	                            je 0x4000772	        41	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000095	      0xe9e4070000	                           jmp 0x400087e	       310	ldwrite.c	SWITCH_1	FUNCTION_1
0x400009a	    0xc7458c000000	               mov dword [rbp - 0x74], 0	        48	ldwrite.c	FUNCTION_1	SWITCH_1
0x40000a1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        50	ldwrite.c	FUNCTION_1	SWITCH_1
0x40000a8	        0x488b4028	            mov rax, qword [rax + 0x28] 	        50	ldwrite.c	FUNCTION_1	SWITCH_1
0x40000ac	        0x488945a0	             mov qword [rbp - 0x60], rax	        50	ldwrite.c	FUNCTION_1	SWITCH_1
0x40000b0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000b4	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000bb	    0x488b05000000	            mov rax, qword [0x040000c2] 	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000c2	          0x4839c2	                            cmp rdx, rax	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000c5	            0x740f	                            je 0x40000d6	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000c7	      0xbe33000000	                           mov esi, 0x33	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000cc	      0xbf00000000	                              mov edi, 0	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000d1	      0xe800000000	                          call 0x40000d6	        51	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000d6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        53	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000da	          0x8b4020	            mov eax, dword [rax + 0x20] 	        53	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000dd	      0x2500010000	                          and eax, 0x100	        53	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000e2	            0x85c0	                           test eax, eax	        53	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000e4	            0x7526	                           jne 0x400010c	        53	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000e6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        54	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000ea	          0x8b4020	            mov eax, dword [rax + 0x20] 	        54	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000ed	          0x83e002	                              and eax, 2	        54	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000f0	            0x85c0	                           test eax, eax	        53	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000f2	     0xf8486070000	                            je 0x400087e	        53	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000f8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        55	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000fc	          0x8b4020	            mov eax, dword [rax + 0x20] 	        55	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x40000ff	      0x2500040000	                          and eax, 0x400	        55	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x4000104	            0x85c0	                           test eax, eax	        55	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x4000106	     0xf8472070000	                            je 0x400087e	        55	ldwrite.c	FUNCTION_1	SWITCH_1	IF_1
0x400010c	    0x488b05000000	            mov rax, qword [0x04000113] 	        58	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000113	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	        58	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000117	          0x4889d6	                            mov rsi, rdx	        58	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_2
0x400011a	          0x4889c7	                            mov rdi, rax	        58	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_2
0x400011d	      0xe800000000	                          call 0x4000122	        58	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000122	        0x488945a8	             mov qword [rbp - 0x58], rax	        58	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000126	      0x48837da800	               cmp qword [rbp - 0x58], 0	        59	ldwrite.c	FUNCTION_1	SWITCH_1	IF_2
0x400012b	            0x7517	                           jne 0x4000144	        59	ldwrite.c	FUNCTION_1	SWITCH_1	IF_2
0x400012d	      0xbf00000000	                              mov edi, 0	        60	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000132	      0xe800000000	                          call 0x4000137	        60	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000137	          0x4889c7	                            mov rdi, rax	        60	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_4
0x400013a	      0xb800000000	                              mov eax, 0	        60	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_4
0x400013f	      0xe800000000	                          call 0x4000144	        60	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000144	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        62	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000148	    0xc74008020000	                  mov dword [rax + 8], 2	        62	ldwrite.c	FUNCTION_1	SWITCH_1
0x400014f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        63	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000156	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        63	ldwrite.c	FUNCTION_1	SWITCH_1
0x400015a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        63	ldwrite.c	FUNCTION_1	SWITCH_1
0x400015e	        0x48895010	             mov qword [rax + 0x10], rdx	        63	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000162	      0xbf08000000	                              mov edi, 8	        64	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000167	      0xe800000000	                          call 0x400016c	        64	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_5
0x400016c	          0x4889c2	                            mov rdx, rax	        64	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_5
0x400016f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        64	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000173	        0x48895028	             mov qword [rax + 0x28], rdx	        64	ldwrite.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000177	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        66	ldwrite.c	FUNCTION_1	SWITCH_1
0x400017e	        0x488b4020	            mov rax, qword [rax + 0x20] 	        66	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000182	        0x48894590	             mov qword [rbp - 0x70], rax	        66	ldwrite.c	FUNCTION_1	SWITCH_1
0x4000186	    0x488b05000000	            mov rax, qword [0x0400018d] 	        73	ldwrite.c	FUNCTION_1	SWITCH_1	IF_3	CALL_6
0x400018d	        0x488b4008	                mov rax, qword [rax + 8]	        73	ldwrite.c	FUNCTION_1	SWITCH_1	IF_3	CALL_6
0x4000191	          0x8b400c	              mov eax, dword [rax + 0xc]	        73	ldwrite.c	FUNCTION_1	SWITCH_1	IF_3	CALL_6
0x4000194	            0x85c0	                           test eax, eax	        73	ldwrite.c	FUNCTION_1	SWITCH_1	IF_3	CALL_6
0x4000196	            0x750c	                           jne 0x40001a4	        73	ldwrite.c	FUNCTION_1	SWITCH_1	IF_3	CALL_6
0x4000198	    0xc7458c010000	               mov dword [rbp - 0x74], 1	        74	ldwrite.c	FUNCTION_1	SWITCH_1	IF_3
0x400019f	      0xe96b010000	                           jmp 0x400030f	        74	ldwrite.c	FUNCTION_1	SWITCH_1	IF_3
0x40001a4	    0x488b05000000	            mov rax, qword [0x040001ab] 	        75	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_1	IF_4	CALL_7
0x40001ab	        0x488b4008	                mov rax, qword [rax + 8]	        75	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_1	IF_4	CALL_7
0x40001af	          0x8b400c	              mov eax, dword [rax + 0xc]	        75	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_1	IF_4	CALL_7
0x40001b2	          0x83f801	                              cmp eax, 1	        75	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_1	IF_4	CALL_7
0x40001b5	            0x750c	                           jne 0x40001c3	        75	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_1	IF_4	CALL_7
0x40001b7	    0xc7458c000000	               mov dword [rbp - 0x74], 0	        76	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_1	IF_4
0x40001be	      0xe94c010000	                           jmp 0x400030f	        76	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_1	IF_4
0x40001c3	    0xc74588000000	               mov dword [rbp - 0x78], 0	        81	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2
0x40001ca	    0x8b0500000000	            mov eax, dword [0x040001d0] 	        82	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_5
0x40001d0	          0x83f801	                              cmp eax, 1	        82	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_5
0x40001d3	            0x750c	                           jne 0x40001e1	        82	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_5
0x40001d5	    0xc7458c010000	               mov dword [rbp - 0x74], 1	        83	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_5
0x40001dc	      0xe980000000	                           jmp 0x4000261	        83	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_5
0x40001e1	    0x8b0500000000	            mov eax, dword [0x040001e7] 	        84	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_3	IF_6
0x40001e7	          0x83f802	                              cmp eax, 2	        84	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_3	IF_6
0x40001ea	            0x7510	                           jne 0x40001fc	        84	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_3	IF_6
0x40001ec	    0xc7458c000000	               mov dword [rbp - 0x74], 0	        86	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_3	IF_6
0x40001f3	    0xc74588010000	               mov dword [rbp - 0x78], 1	        87	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_3	IF_6
0x40001fa	            0xeb65	                           jmp 0x4000261	        87	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_3	IF_6
0x40001fc	    0x8b0500000000	            mov eax, dword [0x04000202] 	        89	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000202	            0x85c0	                           test eax, eax	        89	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000204	            0x755b	                           jne 0x4000261	        89	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000206	    0xc7458c010000	               mov dword [rbp - 0x74], 1	        91	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x400020d	    0x488b05000000	            mov rax, qword [0x04000214] 	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000214	        0x48894598	             mov qword [rbp - 0x68], rax	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000218	            0xeb3d	                           jmp 0x4000257	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x400021a	        0x488b4598	             mov rax, qword [rbp - 0x68]	        95	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1
0x400021e	        0x488b4020	            mov rax, qword [rax + 0x20] 	        95	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1
0x4000222	          0x4885c0	                           test rax, rax	        95	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1
0x4000225	            0x7424	                            je 0x400024b	        95	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1
0x4000227	        0x488b4598	             mov rax, qword [rbp - 0x68]	        97	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2	CALL_1
0x400022b	        0x488b4020	            mov rax, qword [rax + 0x20] 	        97	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2	CALL_1
0x400022f	        0x488b4008	                mov rax, qword [rax + 8]	        97	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2	CALL_1
0x4000233	          0x8b400c	              mov eax, dword [rax + 0xc]	        97	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2	CALL_1
0x4000236	          0x83f801	                              cmp eax, 1	        97	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2	CALL_1
0x4000239	            0x7525	                           jne 0x4000260	        97	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2	CALL_1
0x400023b	    0xc7458c000000	               mov dword [rbp - 0x74], 0	        99	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2
0x4000242	    0xc74588010000	               mov dword [rbp - 0x78], 1	       100	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1	IF_2
0x4000249	            0xeb15	                           jmp 0x4000260	       102	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1
0x400024b	        0x488b4598	             mov rax, qword [rbp - 0x68]	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x400024f	        0x488b4030	            mov rax, qword [rax + 0x30] 	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000253	        0x48894598	             mov qword [rbp - 0x68], rax	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000257	      0x48837d9800	               cmp qword [rbp - 0x68], 0	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x400025c	            0x75bc	                           jne 0x400021a	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x400025e	            0xeb01	                           jmp 0x4000261	        93	ldwrite.c	FUNCTION_1	SWITCH_1	ELSE_2	ELSE_4	IF_7
0x4000260	              0x90	                                     nop	       102	ldwrite.c	SWITCH_1	ELSE_2	ELSE_4	IF_7	IF_1
0x4000261	        0x837d8800	               cmp dword [rbp - 0x78], 0	       108	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8
0x4000265	     0xf84a4000000	                            je 0x400030f	       108	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8
0x400026b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x4000272	          0x8b4010	            mov eax, dword [rax + 0x10] 	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x4000275	      0x2d1a010000	                          sub eax, 0x11a	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x400027a	          0x83f804	                              cmp eax, 4	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x400027d	            0x777b	                            ja 0x40002fa	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x400027f	            0x89c0	                            mov eax, eax	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x4000281	    0x488b04c50000	                  mov rax, qword [rax*8]	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x4000289	            0xffe0	                                 jmp rax	       112	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x400028b	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       118	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_8
0x400028f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       118	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_8
0x4000293	          0x4889d6	                            mov rsi, rdx	       118	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_8
0x4000296	          0x4889c7	                            mov rdi, rax	       118	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_8
0x4000299	      0xe800000000	                          call 0x400029e	       118	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_8
0x400029e	        0x488d45f0	                   lea rax, [rbp - 0x10]	       119	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_9
0x40002a2	          0x4889c7	                            mov rdi, rax	       119	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_9
0x40002a5	      0xe800000000	                          call 0x40002aa	       119	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_9
0x40002aa	        0x48894590	             mov qword [rbp - 0x70], rax	       119	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9	CALL_9
0x40002ae	            0xeb5f	                           jmp 0x400030f	       120	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	IF_9
0x40002b0	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       124	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_10
0x40002b4	        0x488b4590	             mov rax, qword [rbp - 0x70]	       124	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_10
0x40002b8	          0x4889d6	                            mov rsi, rdx	       124	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_10
0x40002bb	          0x4889c7	                            mov rdi, rax	       124	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_10
0x40002be	      0xe800000000	                          call 0x40002c3	       124	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_10
0x40002c3	        0x488d45f0	                   lea rax, [rbp - 0x10]	       125	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_11
0x40002c7	          0x4889c7	                            mov rdi, rax	       125	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_11
0x40002ca	      0xe800000000	                          call 0x40002cf	       125	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_11
0x40002cf	        0x48894590	             mov qword [rbp - 0x70], rax	       125	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_11
0x40002d3	            0xeb3a	                           jmp 0x400030f	       126	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x40002d5	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       128	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_12
0x40002d9	        0x488b4590	             mov rax, qword [rbp - 0x70]	       128	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_12
0x40002dd	          0x4889d6	                            mov rsi, rdx	       128	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_12
0x40002e0	          0x4889c7	                            mov rdi, rax	       128	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_12
0x40002e3	      0xe800000000	                          call 0x40002e8	       128	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_12
0x40002e8	        0x488d45f0	                   lea rax, [rbp - 0x10]	       129	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_13
0x40002ec	          0x4889c7	                            mov rdi, rax	       129	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_13
0x40002ef	      0xe800000000	                          call 0x40002f4	       129	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_13
0x40002f4	        0x48894590	             mov qword [rbp - 0x70], rax	       129	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_13
0x40002f8	            0xeb15	                           jmp 0x400030f	       130	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x40002fa	      0xba00000000	                              mov edx, 0	       134	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_14
0x40002ff	      0xbe86000000	                           mov esi, 0x86	       134	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_14
0x4000304	      0xbf00000000	                              mov edi, 0	       134	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_14
0x4000309	      0xe800000000	                          call 0x400030e	       134	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2	CALL_14
0x400030e	              0x90	                                     nop	       132	ldwrite.c	SWITCH_1	ELSE_2	FUNCTION_1	IF_8	SWITCH_2
0x400030f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x4000313	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x400031a	    0x488b05000000	            mov rax, qword [0x04000321] 	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x4000321	          0x4839c2	                            cmp rdx, rax	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x4000324	            0x740f	                            je 0x4000335	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x4000326	      0xbe8b000000	                           mov esi, 0x8b	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x400032b	      0xbf00000000	                              mov edi, 0	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x4000330	      0xe800000000	                          call 0x4000335	       139	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_15
0x4000335	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x400033c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x400033f	      0x2d1a010000	                          sub eax, 0x11a	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000344	          0x83f804	                              cmp eax, 4	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000347	     0xf87be000000	                            ja 0x400040b	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x400034d	            0x89c0	                            mov eax, eax	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x400034f	    0x488b04c50000	                  mov rax, qword [rax*8]	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000357	            0xffe0	                                 jmp rax	       140	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000359	    0x488b05000000	            mov rax, qword [0x04000360] 	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x4000360	        0x488b4008	                mov rax, qword [rax + 8]	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x4000364	        0x488b4030	            mov rax, qword [rax + 0x30] 	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x4000368	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x400036c	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x4000370	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x4000374	          0x4889ce	                            mov rsi, rcx	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x4000377	          0x4889d7	                            mov rdi, rdx	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x400037a	            0xffd0	                                call rax	       145	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	IF_10	CALL_16
0x400037c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       164	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000380	    0x48c740180800	               mov qword [rax + 0x18], 8	       164	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000388	      0xe992000000	                           jmp 0x400041f	       165	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x400038d	    0x488b05000000	            mov rax, qword [0x04000394] 	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x4000394	        0x488b4008	                mov rax, qword [rax + 8]	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x4000398	        0x488b4048	            mov rax, qword [rax + 0x48] 	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x400039c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x40003a0	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x40003a4	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x40003a8	          0x4889ce	                            mov rsi, rcx	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x40003ab	          0x4889d7	                            mov rdi, rdx	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x40003ae	            0xffd0	                                call rax	       167	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_19
0x40003b0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       169	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x40003b4	    0x48c740180400	               mov qword [rax + 0x18], 4	       169	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x40003bc	            0xeb61	                           jmp 0x400041f	       170	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x40003be	    0x488b05000000	            mov rax, qword [0x040003c5] 	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003c5	        0x488b4008	                mov rax, qword [rax + 8]	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003c9	        0x488b4060	            mov rax, qword [rax + 0x60] 	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003cd	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003d1	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003d5	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003d9	          0x4889ce	                            mov rsi, rcx	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003dc	          0x4889d7	                            mov rdi, rdx	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003df	            0xffd0	                                call rax	       172	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_20
0x40003e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       174	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x40003e5	    0x48c740180200	               mov qword [rax + 0x18], 2	       174	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x40003ed	            0xeb30	                           jmp 0x400041f	       175	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x40003ef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       177	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_21
0x40003f3	        0x488b4028	            mov rax, qword [rax + 0x28] 	       177	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_21
0x40003f7	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       177	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_21
0x40003fb	            0x8810	                      mov byte [rax], dl	       177	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_21
0x40003fd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       179	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000401	    0x48c740180100	               mov qword [rax + 0x18], 1	       179	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x4000409	            0xeb14	                           jmp 0x400041f	       180	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3
0x400040b	      0xba00000000	                              mov edx, 0	       182	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_22
0x4000410	      0xbeb6000000	                           mov esi, 0xb6	       182	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_22
0x4000415	      0xbf00000000	                              mov edi, 0	       182	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_22
0x400041a	      0xe800000000	                          call 0x400041f	       182	ldwrite.c	SWITCH_1	FUNCTION_1	SWITCH_3	CALL_22
0x400041f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       184	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000423	        0x488b4018	            mov rax, qword [rax + 0x18] 	       184	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000427	            0x89c2	                            mov edx, eax	       184	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000429	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       184	ldwrite.c	SWITCH_1	FUNCTION_1
0x400042d	          0x895020	             mov dword [rax + 0x20], edx	       184	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000430	      0xe949040000	                           jmp 0x400087e	       186	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000435	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       194	ldwrite.c	SWITCH_1	FUNCTION_1
0x400043c	        0x488945b0	             mov qword [rbp - 0x50], rax	       194	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000440	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       196	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000444	        0x488b4040	            mov rax, qword [rax + 0x40] 	       196	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000448	        0x488945b8	             mov qword [rbp - 0x48], rax	       196	ldwrite.c	SWITCH_1	FUNCTION_1
0x400044c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x4000450	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x4000457	    0x488b05000000	            mov rax, qword [0x0400045e] 	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x400045e	          0x4839c2	                            cmp rdx, rax	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x4000461	            0x740f	                            je 0x4000472	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x4000463	      0xbec5000000	                           mov esi, 0xc5	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x4000468	      0xbf00000000	                              mov edi, 0	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x400046d	      0xe800000000	                          call 0x4000472	       197	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_23
0x4000472	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       199	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000476	          0x8b4020	            mov eax, dword [rax + 0x20] 	       199	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000479	      0x2500010000	                          and eax, 0x100	       199	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x400047e	            0x85c0	                           test eax, eax	       199	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000480	            0x7526	                           jne 0x40004a8	       199	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000482	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       200	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000486	          0x8b4020	            mov eax, dword [rax + 0x20] 	       200	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000489	          0x83e002	                              and eax, 2	       200	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x400048c	            0x85c0	                           test eax, eax	       199	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x400048e	     0xf84ea030000	                            je 0x400087e	       199	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000494	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       201	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x4000498	          0x8b4020	            mov eax, dword [rax + 0x20] 	       201	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x400049b	      0x2500040000	                          and eax, 0x400	       201	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x40004a0	            0x85c0	                           test eax, eax	       201	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x40004a2	     0xf84d6030000	                            je 0x400087e	       201	ldwrite.c	SWITCH_1	FUNCTION_1	IF_13
0x40004a8	    0x488b05000000	            mov rax, qword [0x040004af] 	       204	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_24
0x40004af	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       204	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_24
0x40004b3	          0x4889d6	                            mov rsi, rdx	       204	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_24
0x40004b6	          0x4889c7	                            mov rdi, rax	       204	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_24
0x40004b9	      0xe800000000	                          call 0x40004be	       204	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_24
0x40004be	        0x488945c0	             mov qword [rbp - 0x40], rax	       204	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_24
0x40004c2	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       205	ldwrite.c	SWITCH_1	FUNCTION_1	IF_14
0x40004c7	            0x7517	                           jne 0x40004e0	       205	ldwrite.c	SWITCH_1	FUNCTION_1	IF_14
0x40004c9	      0xbf00000000	                              mov edi, 0	       206	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_26
0x40004ce	      0xe800000000	                          call 0x40004d3	       206	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_26
0x40004d3	          0x4889c7	                            mov rdi, rax	       206	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_26
0x40004d6	      0xb800000000	                              mov eax, 0	       206	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_26
0x40004db	      0xe800000000	                          call 0x40004e0	       206	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_26
0x40004e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       208	ldwrite.c	SWITCH_1	FUNCTION_1
0x40004e4	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       208	ldwrite.c	SWITCH_1	FUNCTION_1
0x40004e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       208	ldwrite.c	SWITCH_1	FUNCTION_1
0x40004ec	        0x48895010	             mov qword [rax + 0x10], rdx	       208	ldwrite.c	SWITCH_1	FUNCTION_1
0x40004f0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_27
0x40004f4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       209	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_27
0x40004f8	          0x4889c7	                            mov rdi, rax	       209	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_27
0x40004fb	      0xe800000000	                          call 0x4000500	       209	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_27
0x4000500	            0x89c2	                            mov edx, eax	       209	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_27
0x4000502	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       209	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_27
0x4000506	        0x48895018	             mov qword [rax + 0x18], rdx	       209	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_27
0x400050a	      0xbf18000000	                           mov edi, 0x18	       212	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_28
0x400050f	      0xe800000000	                          call 0x4000514	       212	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_28
0x4000514	          0x4889c2	                            mov rdx, rax	       212	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_28
0x4000517	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       211	ldwrite.c	SWITCH_1	FUNCTION_1
0x400051b	        0x48895020	             mov qword [rax + 0x20], rdx	       211	ldwrite.c	SWITCH_1	FUNCTION_1
0x400051f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       214	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000523	        0x488b4020	            mov rax, qword [rax + 0x20] 	       214	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000527	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       214	ldwrite.c	SWITCH_1	FUNCTION_1
0x400052b	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       214	ldwrite.c	SWITCH_1	FUNCTION_1
0x400052e	            0x8910	                    mov dword [rax], edx	       214	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000530	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       215	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000534	        0x488b4020	            mov rax, qword [rax + 0x20] 	       215	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000538	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       215	ldwrite.c	SWITCH_1	FUNCTION_1
0x400053c	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       215	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000540	        0x48895010	             mov qword [rax + 0x10], rdx	       215	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000544	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       217	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15
0x4000548	        0x488b4028	            mov rax, qword [rax + 0x28] 	       217	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15
0x400054c	          0x4885c0	                           test rax, rax	       217	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15
0x400054f	     0xf8583000000	                           jne 0x40005d8	       217	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15
0x4000555	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       219	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15
0x4000559	    0xc74008030000	                  mov dword [rax + 8], 3	       219	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15
0x4000560	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       220	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x4000564	        0x488b4020	            mov rax, qword [rax + 0x20] 	       220	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x4000568	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	       220	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x400056f	    0x488b05000000	            mov rax, qword [0x04000576] 	       220	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x4000576	          0x4839c2	                            cmp rdx, rax	       220	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x4000579	            0x7519	                           jne 0x4000594	       220	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x400057b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       221	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x400057f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       221	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x4000583	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       221	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x4000587	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       221	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x400058b	        0x48895008	                mov qword [rax + 8], rdx	       221	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	IF_16
0x400058f	      0xe9ea020000	                           jmp 0x400087e	       234	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000594	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       224	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x4000598	        0x488b4020	            mov rax, qword [rax + 0x20] 	       224	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x400059c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       224	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005a0	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       224	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005a4	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	       224	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005a8	        0x48895008	                mov qword [rax + 8], rdx	       224	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005b0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005b4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005b8	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005bc	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005c0	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005c4	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005c8	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005cc	          0x4801ca	                            add rdx, rcx	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005cf	        0x48895010	             mov qword [rax + 0x10], rdx	       225	ldwrite.c	SWITCH_1	FUNCTION_1	IF_15	ELSE_8
0x40005d3	      0xe9a6020000	                           jmp 0x400087e	       234	ldwrite.c	SWITCH_1	FUNCTION_1
0x40005d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       230	ldwrite.c	SWITCH_1	FUNCTION_1	ELSE_9
0x40005dc	    0xc74008040000	                  mov dword [rax + 8], 4	       230	ldwrite.c	SWITCH_1	FUNCTION_1	ELSE_9
0x40005e3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       231	ldwrite.c	SWITCH_1	FUNCTION_1	ELSE_9
0x40005e7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       231	ldwrite.c	SWITCH_1	FUNCTION_1	ELSE_9
0x40005eb	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       231	ldwrite.c	SWITCH_1	FUNCTION_1	ELSE_9
0x40005ef	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       231	ldwrite.c	SWITCH_1	FUNCTION_1	ELSE_9
0x40005f3	        0x48895008	                mov qword [rax + 8], rdx	       231	ldwrite.c	SWITCH_1	FUNCTION_1	ELSE_9
0x40005f7	      0xe982020000	                           jmp 0x400087e	       234	ldwrite.c	SWITCH_1	FUNCTION_1
0x40005fc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       240	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000603	        0x488b4010	            mov rax, qword [rax + 0x10] 	       240	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000607	        0x488945c8	             mov qword [rbp - 0x38], rax	       240	ldwrite.c	SWITCH_1	FUNCTION_1
0x400060b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       242	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x400060f	         0xfb74024	           movzx eax, word [rax + 0x24] 	       242	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000613	        0x66258003	                           and ax, 0x380	       242	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000617	        0x663d0002	                           cmp ax, 0x200	       242	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x400061b	     0xf845c020000	                            je 0x400087d	       242	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000621	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       243	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000625	          0x8b4020	            mov eax, dword [rax + 0x20] 	       243	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000628	      0x2500800000	                         and eax, 0x8000	       243	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x400062d	            0x85c0	                           test eax, eax	       243	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x400062f	     0xf8548020000	                           jne 0x400087d	       243	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000635	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       245	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000639	        0x488b4068	            mov rax, qword [rax + 0x68] 	       245	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x400063d	        0x488945d0	             mov qword [rbp - 0x30], rax	       245	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000641	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x4000645	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x400064c	    0x488b05000000	            mov rax, qword [0x04000653] 	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x4000653	          0x4839c2	                            cmp rdx, rax	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x4000656	            0x740f	                            je 0x4000667	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x4000658	      0xbef8000000	                           mov esi, 0xf8	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x400065d	      0xbf00000000	                              mov edi, 0	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x4000662	      0xe800000000	                          call 0x4000667	       248	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_29
0x4000667	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       250	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x400066b	          0x8b4020	            mov eax, dword [rax + 0x20] 	       250	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x400066e	      0x2500010000	                          and eax, 0x100	       250	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000673	            0x85c0	                           test eax, eax	       250	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000675	            0x7526	                           jne 0x400069d	       250	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000677	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       251	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x400067b	          0x8b4020	            mov eax, dword [rax + 0x20] 	       251	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x400067e	          0x83e002	                              and eax, 2	       251	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000681	            0x85c0	                           test eax, eax	       250	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000683	     0xf84f5010000	                            je 0x400087e	       250	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000689	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       252	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x400068d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       252	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000690	      0x2500040000	                          and eax, 0x400	       252	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000695	            0x85c0	                           test eax, eax	       252	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x4000697	     0xf84e1010000	                            je 0x400087e	       252	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_18
0x400069d	    0x488b05000000	            mov rax, qword [0x040006a4] 	       255	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_30
0x40006a4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       255	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_30
0x40006a8	          0x4889d6	                            mov rsi, rdx	       255	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_30
0x40006ab	          0x4889c7	                            mov rdi, rax	       255	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_30
0x40006ae	      0xe800000000	                          call 0x40006b3	       255	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_30
0x40006b3	        0x488945d8	             mov qword [rbp - 0x28], rax	       255	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_30
0x40006b7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       257	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_19
0x40006bc	            0x7517	                           jne 0x40006d5	       257	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_19
0x40006be	      0xbf00000000	                              mov edi, 0	       258	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_32
0x40006c3	      0xe800000000	                          call 0x40006c8	       258	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_32
0x40006c8	          0x4889c7	                            mov rdi, rax	       258	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_32
0x40006cb	      0xb800000000	                              mov eax, 0	       258	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_32
0x40006d0	      0xe800000000	                          call 0x40006d5	       258	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	CALL_32
0x40006d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       260	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006d9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       260	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006dc	      0x2500020000	                          and eax, 0x200	       260	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006e1	            0x85c0	                           test eax, eax	       260	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006e3	            0x7434	                            je 0x4000719	       260	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       261	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006e9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       261	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006ec	      0x2500200000	                         and eax, 0x2000	       261	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006f1	            0x85c0	                           test eax, eax	       261	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006f3	            0x7524	                           jne 0x4000719	       261	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       265	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x40006f9	    0xc74008020000	                  mov dword [rax + 8], 2	       265	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x4000700	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x4000704	    0x48c740280000	               mov qword [rax + 0x28], 0	       266	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x400070c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       267	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x4000710	    0xc74020010000	               mov dword [rax + 0x20], 1	       267	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x4000717	            0xeb34	                           jmp 0x400074d	       267	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	IF_20
0x4000719	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10
0x400071d	    0xc74008010000	                  mov dword [rax + 8], 1	       271	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10
0x4000724	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       272	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10
0x4000728	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       272	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10
0x400072c	        0x48895020	             mov qword [rax + 0x20], rdx	       272	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10
0x4000730	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       273	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10	CALL_33
0x4000734	        0x488b4068	            mov rax, qword [rax + 0x68] 	       273	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10	CALL_33
0x4000738	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       273	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10	CALL_33
0x400073c	            0x740f	                            je 0x400074d	       273	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10	CALL_33
0x400073e	      0xbe11010000	                          mov esi, 0x111	       273	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10	CALL_33
0x4000743	      0xbf00000000	                              mov edi, 0	       273	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10	CALL_33
0x4000748	      0xe800000000	                          call 0x400074d	       273	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17	ELSE_10	CALL_33
0x400074d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       275	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000751	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       275	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000755	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       275	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000759	        0x48895018	             mov qword [rax + 0x18], rdx	       275	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x400075d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000761	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       276	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000765	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x4000769	        0x48895010	             mov qword [rax + 0x10], rdx	       276	ldwrite.c	SWITCH_1	FUNCTION_1	IF_17
0x400076d	      0xe90b010000	                           jmp 0x400087d	       279	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000772	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       287	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000779	        0x488b4020	            mov rax, qword [rax + 0x20] 	       287	ldwrite.c	SWITCH_1	FUNCTION_1
0x400077d	        0x488945e0	             mov qword [rbp - 0x20], rax	       287	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000781	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x4000788	        0x488b4020	            mov rax, qword [rax + 0x20] 	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x400078c	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x4000793	    0x488b05000000	            mov rax, qword [0x0400079a] 	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x400079a	          0x4839c2	                            cmp rdx, rax	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x400079d	            0x740f	                            je 0x40007ae	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x400079f	      0xbe21010000	                          mov esi, 0x121	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x40007a4	      0xbf00000000	                              mov edi, 0	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x40007a9	      0xe800000000	                          call 0x40007ae	       288	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_34
0x40007ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       291	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007b2	          0x8b4020	            mov eax, dword [rax + 0x20] 	       291	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007b5	      0x2500010000	                          and eax, 0x100	       291	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007ba	            0x85c0	                           test eax, eax	       291	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007bc	            0x7526	                           jne 0x40007e4	       291	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       292	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007c2	          0x8b4020	            mov eax, dword [rax + 0x20] 	       292	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007c5	          0x83e002	                              and eax, 2	       292	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007c8	            0x85c0	                           test eax, eax	       291	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007ca	     0xf84ae000000	                            je 0x400087e	       291	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       293	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007d4	          0x8b4020	            mov eax, dword [rax + 0x20] 	       293	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007d7	      0x2500040000	                          and eax, 0x400	       293	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007dc	            0x85c0	                           test eax, eax	       293	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007de	     0xf849a000000	                            je 0x400087e	       293	ldwrite.c	SWITCH_1	FUNCTION_1	IF_21
0x40007e4	    0x488b05000000	            mov rax, qword [0x040007eb] 	       296	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_35
0x40007eb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       296	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_35
0x40007ef	          0x4889d6	                            mov rsi, rdx	       296	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_35
0x40007f2	          0x4889c7	                            mov rdi, rax	       296	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_35
0x40007f5	      0xe800000000	                          call 0x40007fa	       296	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_35
0x40007fa	        0x488945e8	             mov qword [rbp - 0x18], rax	       296	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_35
0x40007fe	      0x48837de800	               cmp qword [rbp - 0x18], 0	       298	ldwrite.c	SWITCH_1	FUNCTION_1	IF_22
0x4000803	            0x7517	                           jne 0x400081c	       298	ldwrite.c	SWITCH_1	FUNCTION_1	IF_22
0x4000805	      0xbf00000000	                              mov edi, 0	       299	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_37
0x400080a	      0xe800000000	                          call 0x400080f	       299	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_37
0x400080f	          0x4889c7	                            mov rdi, rax	       299	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_37
0x4000812	      0xb800000000	                              mov eax, 0	       299	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_37
0x4000817	      0xe800000000	                          call 0x400081c	       299	ldwrite.c	SWITCH_1	FUNCTION_1	CALL_37
0x400081c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000820	    0xc74008020000	                  mov dword [rax + 8], 2	       300	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000827	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       301	ldwrite.c	SWITCH_1	FUNCTION_1
0x400082e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       301	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000832	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       301	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000836	        0x48895018	             mov qword [rax + 0x18], rdx	       301	ldwrite.c	SWITCH_1	FUNCTION_1
0x400083a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       302	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000841	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       302	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       302	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000849	        0x48895010	             mov qword [rax + 0x10], rdx	       302	ldwrite.c	SWITCH_1	FUNCTION_1
0x400084d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       303	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000854	        0x488b4028	            mov rax, qword [rax + 0x28] 	       303	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000858	        0x488d5008	                      lea rdx, [rax + 8]	       303	ldwrite.c	SWITCH_1	FUNCTION_1
0x400085c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       303	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000860	        0x48895028	             mov qword [rax + 0x28], rdx	       303	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000864	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       304	ldwrite.c	SWITCH_1	FUNCTION_1
0x400086b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       304	ldwrite.c	SWITCH_1	FUNCTION_1
0x400086f	          0x488b00	                    mov rax, qword [rax]	       304	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000872	            0x89c2	                            mov edx, eax	       304	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000874	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       304	ldwrite.c	SWITCH_1	FUNCTION_1
0x4000878	          0x895020	             mov dword [rax + 0x20], edx	       304	ldwrite.c	SWITCH_1	FUNCTION_1
0x400087b	            0xeb01	                           jmp 0x400087e	       306	ldwrite.c	SWITCH_1	FUNCTION_1
0x400087d	              0x90	                                     nop	       279	ldwrite.c	SWITCH_1	FUNCTION_1
0x400087e	              0x90	                                     nop	       312	ldwrite.c	FUNCTION_1
0x400087f	        0x488b45f8	                mov rax, qword [rbp - 8]	       312	ldwrite.c	FUNCTION_1
0x4000883	    0x644833042528	                xor rax, qword fs:[0x28]	       312	ldwrite.c	FUNCTION_1
0x400088c	            0x7405	                            je 0x4000893	       312	ldwrite.c	FUNCTION_1
0x400088e	      0xe800000000	                          call 0x4000893	       312	ldwrite.c	FUNCTION_1
0x4000893	              0xc9	                                   leave	       312	ldwrite.c	FUNCTION_1
0x4000894	              0xc3	                                     ret	       312	ldwrite.c	FUNCTION_1
ldwrite	SWITCH,0:DO,0:CALL,9:functions,0:IF,3:ELSE,1:WHILE,0:FOR,0	40
0x4000f20	              0x55	                                push rbp	       571	ldwrite.c	FUNCTION_6
0x4000f21	          0x4889e5	                            mov rbp, rsp	       571	ldwrite.c	FUNCTION_6
0x4000f24	      0xbf00000000	                              mov edi, 0	       574	ldwrite.c	FUNCTION_6	CALL_1
0x4000f29	      0xe800000000	                          call 0x4000f2e	       574	ldwrite.c	FUNCTION_6	CALL_1
0x4000f2e	      0xe800000000	                          call 0x4000f33	       575	ldwrite.c	FUNCTION_6	CALL_2
0x4000f33	      0xbf00000000	                              mov edi, 0	       576	ldwrite.c	FUNCTION_6	CALL_3
0x4000f38	      0xe800000000	                          call 0x4000f3d	       576	ldwrite.c	FUNCTION_6	CALL_3
0x4000f3d	    0x8b0500000000	            mov eax, dword [0x04000f43] 	       578	ldwrite.c	FUNCTION_6	IF_1
0x4000f43	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       578	ldwrite.c	FUNCTION_6	IF_1
0x4000f46	            0x750d	                           jne 0x4000f55	       578	ldwrite.c	FUNCTION_6	IF_1
0x4000f48	    0x488b05000000	            mov rax, qword [0x04000f4f] 	       579	ldwrite.c	FUNCTION_6	IF_1
0x4000f4f	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       579	ldwrite.c	FUNCTION_6	IF_1
0x4000f53	            0x7414	                            je 0x4000f69	       579	ldwrite.c	FUNCTION_6	IF_1
0x4000f55	    0x488b05000000	            mov rax, qword [0x04000f5c] 	       580	ldwrite.c	FUNCTION_6	CALL_4
0x4000f5c	      0xbe00000000	                              mov esi, 0	       580	ldwrite.c	FUNCTION_6	CALL_4
0x4000f61	          0x4889c7	                            mov rdi, rax	       580	ldwrite.c	FUNCTION_6	CALL_4
0x4000f64	      0xe883fcffff	                 call sym.split_sections	       580	ldwrite.c	FUNCTION_6	CALL_4
0x4000f69	    0x488b05000000	            mov rax, qword [0x04000f70] 	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f70	        0x488b4008	                mov rax, qword [rax + 8]	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f74	    0x488b80d80200	           mov rax, qword [rax + 0x2d8] 	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f7b	    0x488b15000000	            mov rdx, qword [0x04000f82] 	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f82	      0xbe00000000	                              mov esi, 0	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f87	          0x4889d7	                            mov rdi, rdx	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f8a	            0xffd0	                                call rax	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f8c	            0x85c0	                           test eax, eax	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f8e	            0x752c	                           jne 0x4000fbc	       581	ldwrite.c	FUNCTION_6	IF_2	CALL_5
0x4000f90	      0xe800000000	                          call 0x4000f95	       587	ldwrite.c	FUNCTION_6	IF_2	IF_3	CALL_6
0x4000f95	            0x85c0	                           test eax, eax	       587	ldwrite.c	FUNCTION_6	IF_2	IF_3	CALL_6
0x4000f97	            0x7419	                            je 0x4000fb2	       587	ldwrite.c	FUNCTION_6	IF_2	IF_3	CALL_6
0x4000f99	      0xbf00000000	                              mov edi, 0	       588	ldwrite.c	FUNCTION_6	IF_2	CALL_8
0x4000f9e	      0xe800000000	                          call 0x4000fa3	       588	ldwrite.c	FUNCTION_6	IF_2	CALL_8
0x4000fa3	          0x4889c7	                            mov rdi, rax	       588	ldwrite.c	FUNCTION_6	IF_2	CALL_8
0x4000fa6	      0xb800000000	                              mov eax, 0	       588	ldwrite.c	FUNCTION_6	IF_2	CALL_8
0x4000fab	      0xe800000000	                          call 0x4000fb0	       588	ldwrite.c	FUNCTION_6	IF_2	CALL_8
0x4000fb0	            0xeb0a	                           jmp 0x4000fbc	       592	ldwrite.c	FUNCTION_6
0x4000fb2	      0xbf01000000	                              mov edi, 1	       590	ldwrite.c	FUNCTION_6	IF_2	CALL_9
0x4000fb7	      0xe800000000	                          call 0x4000fbc	       590	ldwrite.c	FUNCTION_6	IF_2	CALL_9
0x4000fbc	              0x90	                                     nop	       592	ldwrite.c	FUNCTION_6
0x4000fbd	              0x5d	                                 pop rbp	       592	ldwrite.c	FUNCTION_6
0x4000fbe	              0xc3	                                     ret	       592	ldwrite.c	FUNCTION_6
unsplittable_name	SWITCH,0:DO,0:CALL,4:functions,0:IF,3:ELSE,1:WHILE,0:FOR,0	38
0x4000895	              0x55	                                push rbp	       319	ldwrite.c	FUNCTION_2
0x4000896	          0x4889e5	                            mov rbp, rsp	       319	ldwrite.c	FUNCTION_2
0x4000899	        0x4883ec20	                           sub rsp, 0x20	       319	ldwrite.c	FUNCTION_2
0x400089d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       319	ldwrite.c	FUNCTION_2
0x40008a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       320	ldwrite.c	FUNCTION_2	IF_1	CALL_1
0x40008a5	      0xba05000000	                              mov edx, 5	       320	ldwrite.c	FUNCTION_2	IF_1	CALL_1
0x40008aa	      0xbe00000000	                              mov esi, 0	       320	ldwrite.c	FUNCTION_2	IF_1	CALL_1
0x40008af	          0x4889c7	                            mov rdi, rax	       320	ldwrite.c	FUNCTION_2	IF_1	CALL_1
0x40008b2	      0xe800000000	                          call 0x40008b7	       320	ldwrite.c	FUNCTION_2	IF_1	CALL_1
0x40008b7	            0x85c0	                           test eax, eax	       320	ldwrite.c	FUNCTION_2	IF_1	CALL_1
0x40008b9	            0x7536	                           jne 0x40008f1	       320	ldwrite.c	FUNCTION_2	IF_1	CALL_1
0x40008bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	ldwrite.c	FUNCTION_2	IF_1	CALL_2
0x40008bf	          0x4889c7	                            mov rdi, rax	       324	ldwrite.c	FUNCTION_2	IF_1	CALL_2
0x40008c2	      0xe800000000	                          call 0x40008c7	       324	ldwrite.c	FUNCTION_2	IF_1	CALL_2
0x40008c7	          0x8945fc	                mov dword [rbp - 4], eax	       324	ldwrite.c	FUNCTION_2	IF_1	CALL_2
0x40008ca	          0x8b45fc	                mov eax, dword [rbp - 4]	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008cd	          0x83e803	                              sub eax, 3	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008d0	            0x89c2	                            mov edx, eax	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008d6	          0x4801d0	                            add rax, rdx	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008d9	      0xbe00000000	                              mov esi, 0	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008de	          0x4889c7	                            mov rdi, rax	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008e1	      0xe800000000	                          call 0x40008e6	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008e6	            0x85c0	                           test eax, eax	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008e8	            0x7523	                           jne 0x400090d	       325	ldwrite.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x40008ea	      0xb801000000	                              mov eax, 1	       326	ldwrite.c	FUNCTION_2	IF_1	IF_2
0x40008ef	            0xeb21	                           jmp 0x4000912	       326	ldwrite.c	FUNCTION_2	IF_1	IF_2
0x40008f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	ldwrite.c	FUNCTION_2	ELSE_1	IF_3	CALL_4
0x40008f5	      0xbe00000000	                              mov esi, 0	       328	ldwrite.c	FUNCTION_2	ELSE_1	IF_3	CALL_4
0x40008fa	          0x4889c7	                            mov rdi, rax	       328	ldwrite.c	FUNCTION_2	ELSE_1	IF_3	CALL_4
0x40008fd	      0xe800000000	                          call 0x4000902	       328	ldwrite.c	FUNCTION_2	ELSE_1	IF_3	CALL_4
0x4000902	            0x85c0	                           test eax, eax	       328	ldwrite.c	FUNCTION_2	ELSE_1	IF_3	CALL_4
0x4000904	            0x7507	                           jne 0x400090d	       328	ldwrite.c	FUNCTION_2	ELSE_1	IF_3	CALL_4
0x4000906	      0xb801000000	                              mov eax, 1	       329	ldwrite.c	FUNCTION_2	ELSE_1	IF_3
0x400090b	            0xeb05	                           jmp 0x4000912	       329	ldwrite.c	FUNCTION_2	ELSE_1	IF_3
0x400090d	      0xb800000000	                              mov eax, 0	       330	ldwrite.c	FUNCTION_2
0x4000912	              0xc9	                                   leave	       331	ldwrite.c	FUNCTION_2
0x4000913	              0xc3	                                     ret	       331	ldwrite.c	FUNCTION_2
clone_section	SWITCH,0:DO,0:CALL,17:functions,0:IF,4:ELSE,0:WHILE,1:FOR,0	195
0x4000914	              0x55	                                push rbp	       340	ldwrite.c	FUNCTION_3
0x4000915	          0x4889e5	                            mov rbp, rsp	       340	ldwrite.c	FUNCTION_3
0x4000918	        0x4883ec50	                           sub rsp, 0x50	       340	ldwrite.c	FUNCTION_3
0x400091c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       340	ldwrite.c	FUNCTION_3
0x4000920	        0x488975c0	             mov qword [rbp - 0x40], rsi	       340	ldwrite.c	FUNCTION_3
0x4000924	        0x488955b8	             mov qword [rbp - 0x48], rdx	       340	ldwrite.c	FUNCTION_3
0x4000928	        0x48894db0	             mov qword [rbp - 0x50], rcx	       340	ldwrite.c	FUNCTION_3
0x400092c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       349	ldwrite.c	FUNCTION_3	CALL_1
0x4000930	          0x4889c7	                            mov rdi, rax	       349	ldwrite.c	FUNCTION_3	CALL_1
0x4000933	      0xe800000000	                          call 0x4000938	       349	ldwrite.c	FUNCTION_3	CALL_1
0x4000938	          0x8945dc	             mov dword [rbp - 0x24], eax	       349	ldwrite.c	FUNCTION_3	CALL_1
0x400093b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       350	ldwrite.c	FUNCTION_3	CALL_2
0x400093e	          0x83c001	                              add eax, 1	       350	ldwrite.c	FUNCTION_3	CALL_2
0x4000941	            0x89c0	                            mov eax, eax	       350	ldwrite.c	FUNCTION_3	CALL_2
0x4000943	          0x4889c7	                            mov rdi, rax	       350	ldwrite.c	FUNCTION_3	CALL_2
0x4000946	      0xe800000000	                          call 0x400094b	       350	ldwrite.c	FUNCTION_3	CALL_2
0x400094b	        0x488945e0	             mov qword [rbp - 0x20], rax	       350	ldwrite.c	FUNCTION_3	CALL_2
0x400094f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       351	ldwrite.c	FUNCTION_3	CALL_3
0x4000952	          0x83c001	                              add eax, 1	       351	ldwrite.c	FUNCTION_3	CALL_3
0x4000955	            0x89c2	                            mov edx, eax	       351	ldwrite.c	FUNCTION_3	CALL_3
0x4000957	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       351	ldwrite.c	FUNCTION_3	CALL_3
0x400095b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       351	ldwrite.c	FUNCTION_3	CALL_3
0x400095f	          0x4889ce	                            mov rsi, rcx	       351	ldwrite.c	FUNCTION_3	CALL_3
0x4000962	          0x4889c7	                            mov rdi, rax	       351	ldwrite.c	FUNCTION_3	CALL_3
0x4000965	      0xe800000000	                          call 0x400096a	       351	ldwrite.c	FUNCTION_3	CALL_3
0x400096a	            0xeb04	                           jmp 0x4000970	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x400096c	        0x836ddc01	               sub dword [rbp - 0x24], 1	       354	ldwrite.c	FUNCTION_3	WHILE_1
0x4000970	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000974	            0x742c	                            je 0x40009a2	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000976	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000979	          0x83e801	                              sub eax, 1	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x400097c	            0x89c2	                            mov edx, eax	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x400097e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000982	          0x4801d0	                            add rax, rdx	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000985	           0xfb600	                   movzx eax, byte [rax]	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000988	           0xfbec0	                           movsx eax, al	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x400098b	           0xfb6c0	                           movzx eax, al	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x400098e	            0x4898	                                    cdqe	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000990	     0xfb784000000	             movzx eax, word [rax + rax]	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x4000998	           0xfb7c0	                           movzx eax, ax	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x400099b	          0x83e004	                              and eax, 4	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x400099e	            0x85c0	                           test eax, eax	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x40009a0	            0x75ca	                           jne 0x400096c	       353	ldwrite.c	FUNCTION_3	WHILE_1	CALL_4
0x40009a2	        0x837ddc01	               cmp dword [rbp - 0x24], 1	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009a6	            0x7628	                           jbe 0x40009d0	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009a8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009ab	          0x83e801	                              sub eax, 1	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009ae	            0x89c2	                            mov edx, eax	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009b4	          0x4801d0	                            add rax, rdx	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009b7	           0xfb600	                   movzx eax, byte [rax]	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009ba	            0x3c2e	                            cmp al, 0x2e	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009bc	            0x7512	                           jne 0x40009d0	       355	ldwrite.c	FUNCTION_3	IF_1
0x40009be	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       357	ldwrite.c	FUNCTION_3	IF_1
0x40009c1	          0x83e801	                              sub eax, 1	       357	ldwrite.c	FUNCTION_3	IF_1
0x40009c4	            0x89c2	                            mov edx, eax	       357	ldwrite.c	FUNCTION_3	IF_1
0x40009c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       357	ldwrite.c	FUNCTION_3	IF_1
0x40009ca	          0x4801d0	                            add rax, rdx	       357	ldwrite.c	FUNCTION_3	IF_1
0x40009cd	          0xc60000	                       mov byte [rax], 0	       357	ldwrite.c	FUNCTION_3	IF_1
0x40009d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009d4	        0x488b4008	                mov rax, qword [rax + 8]	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009d8	          0x8b4008	                mov eax, dword [rax + 8]	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009db	          0x83f802	                              cmp eax, 2	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009de	            0x7410	                            je 0x40009f0	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009e4	        0x488b4008	                mov rax, qword [rax + 8]	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009e8	          0x8b4008	                mov eax, dword [rax + 8]	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009eb	          0x83f804	                              cmp eax, 4	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009ee	            0x7577	                           jne 0x4000a67	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009f4	          0x4889c7	                            mov rdi, rax	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009f7	      0xe800000000	                          call 0x40009fc	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x40009fc	        0x4883f805	                              cmp rax, 5	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x4000a00	            0x7665	                           jbe 0x4000a67	       361	ldwrite.c	FUNCTION_3	IF_2	CALL_6
0x4000a02	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       365	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_7
0x4000a06	      0xba05000000	                              mov edx, 5	       365	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_7
0x4000a0b	      0xbe00000000	                              mov esi, 0	       365	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_7
0x4000a10	          0x4889c7	                            mov rdi, rax	       365	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_7
0x4000a13	      0xe800000000	                          call 0x4000a18	       365	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_7
0x4000a18	            0x85c0	                           test eax, eax	       365	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_7
0x4000a1a	            0x7415	                            je 0x4000a31	       365	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_7
0x4000a1c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       366	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_8
0x4000a20	      0xbe00000000	                              mov esi, 0	       366	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_8
0x4000a25	          0x4889c7	                            mov rdi, rax	       366	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_8
0x4000a28	      0xe800000000	                          call 0x4000a2d	       366	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_8
0x4000a2d	            0x85c0	                           test eax, eax	       366	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_8
0x4000a2f	            0x752b	                           jne 0x4000a5c	       366	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_8
0x4000a31	      0xbf00000000	                              mov edi, 0	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a36	      0xe800000000	                          call 0x4000a3b	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a3b	          0x4889c2	                            mov rdx, rax	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a3e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a42	          0x4889c6	                            mov rsi, rax	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a45	          0x4889d7	                            mov rdi, rdx	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a48	      0xb800000000	                              mov eax, 0	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a4d	      0xe800000000	                          call 0x4000a52	       368	ldwrite.c	FUNCTION_3	IF_2	IF_3	CALL_10
0x4000a52	      0xb800000000	                              mov eax, 0	       370	ldwrite.c	FUNCTION_3	IF_2	IF_3
0x4000a57	      0xe98e010000	                           jmp 0x4000bea	       370	ldwrite.c	FUNCTION_3	IF_2	IF_3
0x4000a5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       372	ldwrite.c	FUNCTION_3	IF_2
0x4000a60	        0x4883c005	                              add rax, 5	       372	ldwrite.c	FUNCTION_3	IF_2
0x4000a64	          0xc60000	                       mov byte [rax], 0	       372	ldwrite.c	FUNCTION_3	IF_2
0x4000a67	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a6b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a6f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a73	          0x4889ce	                            mov rsi, rcx	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a76	          0x4889c7	                            mov rdi, rax	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a79	      0xe800000000	                          call 0x4000a7e	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a7e	        0x488945e8	             mov qword [rbp - 0x18], rax	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a82	      0x48837de800	               cmp qword [rbp - 0x18], 0	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a87	            0x744c	                            je 0x4000ad5	       375	ldwrite.c	FUNCTION_3	IF_4	CALL_11
0x4000a89	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000a8d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000a91	          0x4889d6	                            mov rsi, rdx	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000a94	          0x4889c7	                            mov rdi, rax	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000a97	      0xe800000000	                          call 0x4000a9c	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000a9c	        0x488945f0	             mov qword [rbp - 0x10], rax	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000aa0	      0x48837df000	               cmp qword [rbp - 0x10], 0	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000aa5	            0x742e	                            je 0x4000ad5	       376	ldwrite.c	FUNCTION_3	IF_4	CALL_12
0x4000aa7	    0x488b05000000	            mov rax, qword [0x04000aae] 	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000aae	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000ab2	    0x41b800000000	                              mov r8d, 0	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000ab8	      0xb901000000	                              mov ecx, 1	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000abd	      0xba01000000	                              mov edx, 1	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000ac2	          0x4889c7	                            mov rdi, rax	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000ac5	      0xe800000000	                          call 0x4000aca	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000aca	        0x488945f8	                mov qword [rbp - 8], rax	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000ace	      0x48837df800	                  cmp qword [rbp - 8], 0	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000ad3	            0x7521	                           jne 0x4000af6	       377	ldwrite.c	FUNCTION_3	IF_4	CALL_13
0x4000ad5	      0xbf00000000	                              mov edi, 0	       380	ldwrite.c	FUNCTION_3	IF_4	CALL_15
0x4000ada	      0xe800000000	                          call 0x4000adf	       380	ldwrite.c	FUNCTION_3	IF_4	CALL_15
0x4000adf	          0x4889c7	                            mov rdi, rax	       380	ldwrite.c	FUNCTION_3	IF_4	CALL_15
0x4000ae2	      0xb800000000	                              mov eax, 0	       380	ldwrite.c	FUNCTION_3	IF_4	CALL_15
0x4000ae7	      0xe800000000	                          call 0x4000aec	       380	ldwrite.c	FUNCTION_3	IF_4	CALL_15
0x4000aec	      0xb800000000	                              mov eax, 0	       382	ldwrite.c	FUNCTION_3	IF_4
0x4000af1	      0xe9f4000000	                           jmp 0x4000bea	       382	ldwrite.c	FUNCTION_3	IF_4
0x4000af6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       384	ldwrite.c	FUNCTION_3	CALL_16
0x4000afa	          0x4889c7	                            mov rdi, rax	       384	ldwrite.c	FUNCTION_3	CALL_16
0x4000afd	      0xe800000000	                          call 0x4000b02	       384	ldwrite.c	FUNCTION_3	CALL_16
0x4000b02	        0x488b45f8	                mov rax, qword [rbp - 8]	       387	ldwrite.c	FUNCTION_3
0x4000b06	        0xc6401803	                mov byte [rax + 0x18], 3	       387	ldwrite.c	FUNCTION_3
0x4000b0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	ldwrite.c	FUNCTION_3
0x4000b0e	    0x48c740300000	               mov qword [rax + 0x30], 0	       388	ldwrite.c	FUNCTION_3
0x4000b16	        0x488b45f8	                mov rax, qword [rbp - 8]	       389	ldwrite.c	FUNCTION_3
0x4000b1a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       389	ldwrite.c	FUNCTION_3
0x4000b1e	        0x48895028	             mov qword [rax + 0x28], rdx	       389	ldwrite.c	FUNCTION_3
0x4000b22	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       391	ldwrite.c	FUNCTION_3
0x4000b26	          0x8b5020	            mov edx, dword [rax + 0x20] 	       391	ldwrite.c	FUNCTION_3
0x4000b29	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       391	ldwrite.c	FUNCTION_3
0x4000b2d	          0x895020	             mov dword [rax + 0x20], edx	       391	ldwrite.c	FUNCTION_3
0x4000b30	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       392	ldwrite.c	FUNCTION_3
0x4000b34	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       392	ldwrite.c	FUNCTION_3
0x4000b38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       392	ldwrite.c	FUNCTION_3
0x4000b3c	        0x48895028	             mov qword [rax + 0x28], rdx	       392	ldwrite.c	FUNCTION_3
0x4000b40	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	ldwrite.c	FUNCTION_3
0x4000b44	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       393	ldwrite.c	FUNCTION_3
0x4000b48	          0x83e001	                              and eax, 1	       393	ldwrite.c	FUNCTION_3
0x4000b4b	            0x89c2	                            mov edx, eax	       393	ldwrite.c	FUNCTION_3
0x4000b4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       393	ldwrite.c	FUNCTION_3
0x4000b51	            0x89d1	                            mov ecx, edx	       393	ldwrite.c	FUNCTION_3
0x4000b53	          0x83e101	                              and ecx, 1	       393	ldwrite.c	FUNCTION_3
0x4000b56	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       393	ldwrite.c	FUNCTION_3
0x4000b5a	          0x83e2fe	                     and edx, 0xfffffffe	       393	ldwrite.c	FUNCTION_3
0x4000b5d	             0x9ca	                             or edx, ecx	       393	ldwrite.c	FUNCTION_3
0x4000b5f	          0x885024	               mov byte [rax + 0x24], dl	       393	ldwrite.c	FUNCTION_3
0x4000b62	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       394	ldwrite.c	FUNCTION_3
0x4000b66	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       394	ldwrite.c	FUNCTION_3
0x4000b6a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       394	ldwrite.c	FUNCTION_3
0x4000b6e	        0x48895030	             mov qword [rax + 0x30], rdx	       394	ldwrite.c	FUNCTION_3
0x4000b72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       395	ldwrite.c	FUNCTION_3
0x4000b76	    0x48c740380000	               mov qword [rax + 0x38], 0	       395	ldwrite.c	FUNCTION_3
0x4000b7e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       396	ldwrite.c	FUNCTION_3
0x4000b82	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       396	ldwrite.c	FUNCTION_3
0x4000b86	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       396	ldwrite.c	FUNCTION_3
0x4000b8a	        0x48895060	             mov qword [rax + 0x60], rdx	       396	ldwrite.c	FUNCTION_3
0x4000b8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       397	ldwrite.c	FUNCTION_3
0x4000b92	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       397	ldwrite.c	FUNCTION_3
0x4000b96	        0x48895068	             mov qword [rax + 0x68], rdx	       397	ldwrite.c	FUNCTION_3
0x4000b9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       398	ldwrite.c	FUNCTION_3
0x4000b9e	    0x48c780800000	               mov qword [rax + 0x80], 0	       398	ldwrite.c	FUNCTION_3
0x4000ba9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	ldwrite.c	FUNCTION_3
0x4000bad	    0xc78088000000	               mov dword [rax + 0x88], 0	       399	ldwrite.c	FUNCTION_3
0x4000bb7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       400	ldwrite.c	FUNCTION_3
0x4000bbb	          0x8b5070	            mov edx, dword [rax + 0x70] 	       400	ldwrite.c	FUNCTION_3
0x4000bbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       400	ldwrite.c	FUNCTION_3
0x4000bc2	          0x895070	             mov dword [rax + 0x70], edx	       400	ldwrite.c	FUNCTION_3
0x4000bc5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000bc9	        0x488b4008	                mov rax, qword [rax + 8]	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000bcd	    0x488b80500100	           mov rax, qword [rax + 0x150] 	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000bd4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000bd8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000bdc	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000be0	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000be4	            0xffd0	                                call rax	       402	ldwrite.c	FUNCTION_3	CALL_17
0x4000be6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       404	ldwrite.c	FUNCTION_3
0x4000bea	              0xc9	                                   leave	       405	ldwrite.c	FUNCTION_3
0x4000beb	              0xc3	                                     ret	       405	ldwrite.c	FUNCTION_3
